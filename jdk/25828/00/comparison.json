{"files":[{"patch":"@@ -336,1 +336,1 @@\n-    } else if (vm_reg->is_VectorSRegister()) {\n+    } else if (vm_reg->is_VectorRegister()) {\n@@ -338,1 +338,1 @@\n-      VectorSRegister vs_reg = vm_reg->as_VectorSRegister();\n+      VectorSRegister vs_reg = (vm_reg->as_VectorRegister()).to_vsr();\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-\/\/ Vector-Scalar Registers\n+\/\/ Vector Registers\n@@ -260,321 +260,160 @@\n-  \/\/ 1st 32 VSRs are aliases for the FPRs which are already defined above.\n-  reg_def VSR0   (SOC, SOC, Op_RegF, 0, VMRegImpl::Bad());\n-  reg_def VSR0_H (SOC, SOC, Op_RegF, 0, VMRegImpl::Bad());\n-  reg_def VSR0_J (SOC, SOC, Op_RegF, 0, VMRegImpl::Bad());\n-  reg_def VSR0_K (SOC, SOC, Op_RegF, 0, VMRegImpl::Bad());\n-\n-  reg_def VSR1   (SOC, SOC, Op_RegF, 1, VMRegImpl::Bad());\n-  reg_def VSR1_H (SOC, SOC, Op_RegF, 1, VMRegImpl::Bad());\n-  reg_def VSR1_J (SOC, SOC, Op_RegF, 1, VMRegImpl::Bad());\n-  reg_def VSR1_K (SOC, SOC, Op_RegF, 1, VMRegImpl::Bad());\n-\n-  reg_def VSR2   (SOC, SOC, Op_RegF, 2, VMRegImpl::Bad());\n-  reg_def VSR2_H (SOC, SOC, Op_RegF, 2, VMRegImpl::Bad());\n-  reg_def VSR2_J (SOC, SOC, Op_RegF, 2, VMRegImpl::Bad());\n-  reg_def VSR2_K (SOC, SOC, Op_RegF, 2, VMRegImpl::Bad());\n-\n-  reg_def VSR3   (SOC, SOC, Op_RegF, 3, VMRegImpl::Bad());\n-  reg_def VSR3_H (SOC, SOC, Op_RegF, 3, VMRegImpl::Bad());\n-  reg_def VSR3_J (SOC, SOC, Op_RegF, 3, VMRegImpl::Bad());\n-  reg_def VSR3_K (SOC, SOC, Op_RegF, 3, VMRegImpl::Bad());\n-\n-  reg_def VSR4   (SOC, SOC, Op_RegF, 4, VMRegImpl::Bad());\n-  reg_def VSR4_H (SOC, SOC, Op_RegF, 4, VMRegImpl::Bad());\n-  reg_def VSR4_J (SOC, SOC, Op_RegF, 4, VMRegImpl::Bad());\n-  reg_def VSR4_K (SOC, SOC, Op_RegF, 4, VMRegImpl::Bad());\n-\n-  reg_def VSR5   (SOC, SOC, Op_RegF, 5, VMRegImpl::Bad());\n-  reg_def VSR5_H (SOC, SOC, Op_RegF, 5, VMRegImpl::Bad());\n-  reg_def VSR5_J (SOC, SOC, Op_RegF, 5, VMRegImpl::Bad());\n-  reg_def VSR5_K (SOC, SOC, Op_RegF, 5, VMRegImpl::Bad());\n-\n-  reg_def VSR6   (SOC, SOC, Op_RegF, 6, VMRegImpl::Bad());\n-  reg_def VSR6_H (SOC, SOC, Op_RegF, 6, VMRegImpl::Bad());\n-  reg_def VSR6_J (SOC, SOC, Op_RegF, 6, VMRegImpl::Bad());\n-  reg_def VSR6_K (SOC, SOC, Op_RegF, 6, VMRegImpl::Bad());\n-\n-  reg_def VSR7   (SOC, SOC, Op_RegF, 7, VMRegImpl::Bad());\n-  reg_def VSR7_H (SOC, SOC, Op_RegF, 7, VMRegImpl::Bad());\n-  reg_def VSR7_J (SOC, SOC, Op_RegF, 7, VMRegImpl::Bad());\n-  reg_def VSR7_K (SOC, SOC, Op_RegF, 7, VMRegImpl::Bad());\n-\n-  reg_def VSR8   (SOC, SOC, Op_RegF, 8, VMRegImpl::Bad());\n-  reg_def VSR8_H (SOC, SOC, Op_RegF, 8, VMRegImpl::Bad());\n-  reg_def VSR8_J (SOC, SOC, Op_RegF, 8, VMRegImpl::Bad());\n-  reg_def VSR8_K (SOC, SOC, Op_RegF, 8, VMRegImpl::Bad());\n-\n-  reg_def VSR9   (SOC, SOC, Op_RegF, 9, VMRegImpl::Bad());\n-  reg_def VSR9_H (SOC, SOC, Op_RegF, 9, VMRegImpl::Bad());\n-  reg_def VSR9_J (SOC, SOC, Op_RegF, 9, VMRegImpl::Bad());\n-  reg_def VSR9_K (SOC, SOC, Op_RegF, 9, VMRegImpl::Bad());\n-\n-  reg_def VSR10  (SOC, SOC, Op_RegF, 10, VMRegImpl::Bad());\n-  reg_def VSR10_H(SOC, SOC, Op_RegF, 10, VMRegImpl::Bad());\n-  reg_def VSR10_J(SOC, SOC, Op_RegF, 10, VMRegImpl::Bad());\n-  reg_def VSR10_K(SOC, SOC, Op_RegF, 10, VMRegImpl::Bad());\n-\n-  reg_def VSR11  (SOC, SOC, Op_RegF, 11, VMRegImpl::Bad());\n-  reg_def VSR11_H(SOC, SOC, Op_RegF, 11, VMRegImpl::Bad());\n-  reg_def VSR11_J(SOC, SOC, Op_RegF, 11, VMRegImpl::Bad());\n-  reg_def VSR11_K(SOC, SOC, Op_RegF, 11, VMRegImpl::Bad());\n-\n-  reg_def VSR12  (SOC, SOC, Op_RegF, 12, VMRegImpl::Bad());\n-  reg_def VSR12_H(SOC, SOC, Op_RegF, 12, VMRegImpl::Bad());\n-  reg_def VSR12_J(SOC, SOC, Op_RegF, 12, VMRegImpl::Bad());\n-  reg_def VSR12_K(SOC, SOC, Op_RegF, 12, VMRegImpl::Bad());\n-\n-  reg_def VSR13  (SOC, SOC, Op_RegF, 13, VMRegImpl::Bad());\n-  reg_def VSR13_H(SOC, SOC, Op_RegF, 13, VMRegImpl::Bad());\n-  reg_def VSR13_J(SOC, SOC, Op_RegF, 13, VMRegImpl::Bad());\n-  reg_def VSR13_K(SOC, SOC, Op_RegF, 13, VMRegImpl::Bad());\n-\n-  reg_def VSR14  (SOC, SOC, Op_RegF, 14, VMRegImpl::Bad());\n-  reg_def VSR14_H(SOC, SOC, Op_RegF, 14, VMRegImpl::Bad());\n-  reg_def VSR14_J(SOC, SOC, Op_RegF, 14, VMRegImpl::Bad());\n-  reg_def VSR14_K(SOC, SOC, Op_RegF, 14, VMRegImpl::Bad());\n-\n-  reg_def VSR15  (SOC, SOC, Op_RegF, 15, VMRegImpl::Bad());\n-  reg_def VSR15_H(SOC, SOC, Op_RegF, 15, VMRegImpl::Bad());\n-  reg_def VSR15_J(SOC, SOC, Op_RegF, 15, VMRegImpl::Bad());\n-  reg_def VSR15_K(SOC, SOC, Op_RegF, 15, VMRegImpl::Bad());\n-\n-  reg_def VSR16  (SOC, SOC, Op_RegF, 16, VMRegImpl::Bad());\n-  reg_def VSR16_H(SOC, SOC, Op_RegF, 16, VMRegImpl::Bad());\n-  reg_def VSR16_J(SOC, SOC, Op_RegF, 16, VMRegImpl::Bad());\n-  reg_def VSR16_K(SOC, SOC, Op_RegF, 16, VMRegImpl::Bad());\n-\n-  reg_def VSR17  (SOC, SOC, Op_RegF, 17, VMRegImpl::Bad());\n-  reg_def VSR17_H(SOC, SOC, Op_RegF, 17, VMRegImpl::Bad());\n-  reg_def VSR17_J(SOC, SOC, Op_RegF, 17, VMRegImpl::Bad());\n-  reg_def VSR17_K(SOC, SOC, Op_RegF, 17, VMRegImpl::Bad());\n-\n-  reg_def VSR18  (SOC, SOC, Op_RegF, 18, VMRegImpl::Bad());\n-  reg_def VSR18_H(SOC, SOC, Op_RegF, 18, VMRegImpl::Bad());\n-  reg_def VSR18_J(SOC, SOC, Op_RegF, 18, VMRegImpl::Bad());\n-  reg_def VSR18_K(SOC, SOC, Op_RegF, 18, VMRegImpl::Bad());\n-\n-  reg_def VSR19  (SOC, SOC, Op_RegF, 19, VMRegImpl::Bad());\n-  reg_def VSR19_H(SOC, SOC, Op_RegF, 19, VMRegImpl::Bad());\n-  reg_def VSR19_J(SOC, SOC, Op_RegF, 19, VMRegImpl::Bad());\n-  reg_def VSR19_K(SOC, SOC, Op_RegF, 19, VMRegImpl::Bad());\n-\n-  reg_def VSR20  (SOC, SOC, Op_RegF, 20, VMRegImpl::Bad());\n-  reg_def VSR20_H(SOC, SOC, Op_RegF, 20, VMRegImpl::Bad());\n-  reg_def VSR20_J(SOC, SOC, Op_RegF, 20, VMRegImpl::Bad());\n-  reg_def VSR20_K(SOC, SOC, Op_RegF, 20, VMRegImpl::Bad());\n-\n-  reg_def VSR21  (SOC, SOC, Op_RegF, 21, VMRegImpl::Bad());\n-  reg_def VSR21_H(SOC, SOC, Op_RegF, 21, VMRegImpl::Bad());\n-  reg_def VSR21_J(SOC, SOC, Op_RegF, 21, VMRegImpl::Bad());\n-  reg_def VSR21_K(SOC, SOC, Op_RegF, 21, VMRegImpl::Bad());\n-\n-  reg_def VSR22  (SOC, SOC, Op_RegF, 22, VMRegImpl::Bad());\n-  reg_def VSR22_H(SOC, SOC, Op_RegF, 22, VMRegImpl::Bad());\n-  reg_def VSR22_J(SOC, SOC, Op_RegF, 22, VMRegImpl::Bad());\n-  reg_def VSR22_K(SOC, SOC, Op_RegF, 22, VMRegImpl::Bad());\n-\n-  reg_def VSR23  (SOC, SOC, Op_RegF, 23, VMRegImpl::Bad());\n-  reg_def VSR23_H(SOC, SOC, Op_RegF, 23, VMRegImpl::Bad());\n-  reg_def VSR23_J(SOC, SOC, Op_RegF, 23, VMRegImpl::Bad());\n-  reg_def VSR23_K(SOC, SOC, Op_RegF, 23, VMRegImpl::Bad());\n-\n-  reg_def VSR24  (SOC, SOC, Op_RegF, 24, VMRegImpl::Bad());\n-  reg_def VSR24_H(SOC, SOC, Op_RegF, 24, VMRegImpl::Bad());\n-  reg_def VSR24_J(SOC, SOC, Op_RegF, 24, VMRegImpl::Bad());\n-  reg_def VSR24_K(SOC, SOC, Op_RegF, 24, VMRegImpl::Bad());\n-\n-  reg_def VSR25  (SOC, SOC, Op_RegF, 25, VMRegImpl::Bad());\n-  reg_def VSR25_H(SOC, SOC, Op_RegF, 25, VMRegImpl::Bad());\n-  reg_def VSR25_J(SOC, SOC, Op_RegF, 25, VMRegImpl::Bad());\n-  reg_def VSR25_K(SOC, SOC, Op_RegF, 25, VMRegImpl::Bad());\n-\n-  reg_def VSR26  (SOC, SOC, Op_RegF, 26, VMRegImpl::Bad());\n-  reg_def VSR26_H(SOC, SOC, Op_RegF, 26, VMRegImpl::Bad());\n-  reg_def VSR26_J(SOC, SOC, Op_RegF, 26, VMRegImpl::Bad());\n-  reg_def VSR26_K(SOC, SOC, Op_RegF, 26, VMRegImpl::Bad());\n-\n-  reg_def VSR27  (SOC, SOC, Op_RegF, 27, VMRegImpl::Bad());\n-  reg_def VSR27_H(SOC, SOC, Op_RegF, 27, VMRegImpl::Bad());\n-  reg_def VSR27_J(SOC, SOC, Op_RegF, 27, VMRegImpl::Bad());\n-  reg_def VSR27_K(SOC, SOC, Op_RegF, 27, VMRegImpl::Bad());\n-\n-  reg_def VSR28  (SOC, SOC, Op_RegF, 28, VMRegImpl::Bad());\n-  reg_def VSR28_H(SOC, SOC, Op_RegF, 28, VMRegImpl::Bad());\n-  reg_def VSR28_J(SOC, SOC, Op_RegF, 28, VMRegImpl::Bad());\n-  reg_def VSR28_K(SOC, SOC, Op_RegF, 28, VMRegImpl::Bad());\n-\n-  reg_def VSR29  (SOC, SOC, Op_RegF, 29, VMRegImpl::Bad());\n-  reg_def VSR29_H(SOC, SOC, Op_RegF, 29, VMRegImpl::Bad());\n-  reg_def VSR29_J(SOC, SOC, Op_RegF, 29, VMRegImpl::Bad());\n-  reg_def VSR29_K(SOC, SOC, Op_RegF, 29, VMRegImpl::Bad());\n-\n-  reg_def VSR30  (SOC, SOC, Op_RegF, 30, VMRegImpl::Bad());\n-  reg_def VSR30_H(SOC, SOC, Op_RegF, 30, VMRegImpl::Bad());\n-  reg_def VSR30_J(SOC, SOC, Op_RegF, 30, VMRegImpl::Bad());\n-  reg_def VSR30_K(SOC, SOC, Op_RegF, 30, VMRegImpl::Bad());\n-\n-  reg_def VSR31  (SOC, SOC, Op_RegF, 31, VMRegImpl::Bad());\n-  reg_def VSR31_H(SOC, SOC, Op_RegF, 31, VMRegImpl::Bad());\n-  reg_def VSR31_J(SOC, SOC, Op_RegF, 31, VMRegImpl::Bad());\n-  reg_def VSR31_K(SOC, SOC, Op_RegF, 31, VMRegImpl::Bad());\n-\n-  \/\/ 2nd 32 VSRs are aliases for the VRs which are only defined here.\n-  reg_def VSR32  (SOC, SOC, Op_RegF, 32, VSR32->as_VMReg()         );\n-  reg_def VSR32_H(SOC, SOC, Op_RegF, 32, VSR32->as_VMReg()->next() );\n-  reg_def VSR32_J(SOC, SOC, Op_RegF, 32, VSR32->as_VMReg()->next(2));\n-  reg_def VSR32_K(SOC, SOC, Op_RegF, 32, VSR32->as_VMReg()->next(3));\n-\n-  reg_def VSR33  (SOC, SOC, Op_RegF, 33, VSR33->as_VMReg()         );\n-  reg_def VSR33_H(SOC, SOC, Op_RegF, 33, VSR33->as_VMReg()->next() );\n-  reg_def VSR33_J(SOC, SOC, Op_RegF, 33, VSR33->as_VMReg()->next(2));\n-  reg_def VSR33_K(SOC, SOC, Op_RegF, 33, VSR33->as_VMReg()->next(3));\n-\n-  reg_def VSR34  (SOC, SOC, Op_RegF, 34, VSR34->as_VMReg()         );\n-  reg_def VSR34_H(SOC, SOC, Op_RegF, 34, VSR34->as_VMReg()->next() );\n-  reg_def VSR34_J(SOC, SOC, Op_RegF, 34, VSR34->as_VMReg()->next(2));\n-  reg_def VSR34_K(SOC, SOC, Op_RegF, 34, VSR34->as_VMReg()->next(3));\n-\n-  reg_def VSR35  (SOC, SOC, Op_RegF, 35, VSR35->as_VMReg()         );\n-  reg_def VSR35_H(SOC, SOC, Op_RegF, 35, VSR35->as_VMReg()->next() );\n-  reg_def VSR35_J(SOC, SOC, Op_RegF, 35, VSR35->as_VMReg()->next(2));\n-  reg_def VSR35_K(SOC, SOC, Op_RegF, 35, VSR35->as_VMReg()->next(3));\n-\n-  reg_def VSR36  (SOC, SOC, Op_RegF, 36, VSR36->as_VMReg()         );\n-  reg_def VSR36_H(SOC, SOC, Op_RegF, 36, VSR36->as_VMReg()->next() );\n-  reg_def VSR36_J(SOC, SOC, Op_RegF, 36, VSR36->as_VMReg()->next(2));\n-  reg_def VSR36_K(SOC, SOC, Op_RegF, 36, VSR36->as_VMReg()->next(3));\n-\n-  reg_def VSR37  (SOC, SOC, Op_RegF, 37, VSR37->as_VMReg()         );\n-  reg_def VSR37_H(SOC, SOC, Op_RegF, 37, VSR37->as_VMReg()->next() );\n-  reg_def VSR37_J(SOC, SOC, Op_RegF, 37, VSR37->as_VMReg()->next(2));\n-  reg_def VSR37_K(SOC, SOC, Op_RegF, 37, VSR37->as_VMReg()->next(3));\n-\n-  reg_def VSR38  (SOC, SOC, Op_RegF, 38, VSR38->as_VMReg()         );\n-  reg_def VSR38_H(SOC, SOC, Op_RegF, 38, VSR38->as_VMReg()->next() );\n-  reg_def VSR38_J(SOC, SOC, Op_RegF, 38, VSR38->as_VMReg()->next(2));\n-  reg_def VSR38_K(SOC, SOC, Op_RegF, 38, VSR38->as_VMReg()->next(3));\n-\n-  reg_def VSR39  (SOC, SOC, Op_RegF, 39, VSR39->as_VMReg()         );\n-  reg_def VSR39_H(SOC, SOC, Op_RegF, 39, VSR39->as_VMReg()->next() );\n-  reg_def VSR39_J(SOC, SOC, Op_RegF, 39, VSR39->as_VMReg()->next(2));\n-  reg_def VSR39_K(SOC, SOC, Op_RegF, 39, VSR39->as_VMReg()->next(3));\n-\n-  reg_def VSR40  (SOC, SOC, Op_RegF, 40, VSR40->as_VMReg()         );\n-  reg_def VSR40_H(SOC, SOC, Op_RegF, 40, VSR40->as_VMReg()->next() );\n-  reg_def VSR40_J(SOC, SOC, Op_RegF, 40, VSR40->as_VMReg()->next(2));\n-  reg_def VSR40_K(SOC, SOC, Op_RegF, 40, VSR40->as_VMReg()->next(3));\n-\n-  reg_def VSR41  (SOC, SOC, Op_RegF, 41, VSR41->as_VMReg()         );\n-  reg_def VSR41_H(SOC, SOC, Op_RegF, 41, VSR41->as_VMReg()->next() );\n-  reg_def VSR41_J(SOC, SOC, Op_RegF, 41, VSR41->as_VMReg()->next(2));\n-  reg_def VSR41_K(SOC, SOC, Op_RegF, 41, VSR41->as_VMReg()->next(3));\n-\n-  reg_def VSR42  (SOC, SOC, Op_RegF, 42, VSR42->as_VMReg()         );\n-  reg_def VSR42_H(SOC, SOC, Op_RegF, 42, VSR42->as_VMReg()->next() );\n-  reg_def VSR42_J(SOC, SOC, Op_RegF, 42, VSR42->as_VMReg()->next(2));\n-  reg_def VSR42_K(SOC, SOC, Op_RegF, 42, VSR42->as_VMReg()->next(3));\n-\n-  reg_def VSR43  (SOC, SOC, Op_RegF, 43, VSR43->as_VMReg()         );\n-  reg_def VSR43_H(SOC, SOC, Op_RegF, 43, VSR43->as_VMReg()->next() );\n-  reg_def VSR43_J(SOC, SOC, Op_RegF, 43, VSR43->as_VMReg()->next(2));\n-  reg_def VSR43_K(SOC, SOC, Op_RegF, 43, VSR43->as_VMReg()->next(3));\n-\n-  reg_def VSR44  (SOC, SOC, Op_RegF, 44, VSR44->as_VMReg()         );\n-  reg_def VSR44_H(SOC, SOC, Op_RegF, 44, VSR44->as_VMReg()->next() );\n-  reg_def VSR44_J(SOC, SOC, Op_RegF, 44, VSR44->as_VMReg()->next(2));\n-  reg_def VSR44_K(SOC, SOC, Op_RegF, 44, VSR44->as_VMReg()->next(3));\n-\n-  reg_def VSR45  (SOC, SOC, Op_RegF, 45, VSR45->as_VMReg()         );\n-  reg_def VSR45_H(SOC, SOC, Op_RegF, 45, VSR45->as_VMReg()->next() );\n-  reg_def VSR45_J(SOC, SOC, Op_RegF, 45, VSR45->as_VMReg()->next(2));\n-  reg_def VSR45_K(SOC, SOC, Op_RegF, 45, VSR45->as_VMReg()->next(3));\n-\n-  reg_def VSR46  (SOC, SOC, Op_RegF, 46, VSR46->as_VMReg()         );\n-  reg_def VSR46_H(SOC, SOC, Op_RegF, 46, VSR46->as_VMReg()->next() );\n-  reg_def VSR46_J(SOC, SOC, Op_RegF, 46, VSR46->as_VMReg()->next(2));\n-  reg_def VSR46_K(SOC, SOC, Op_RegF, 46, VSR46->as_VMReg()->next(3));\n-\n-  reg_def VSR47  (SOC, SOC, Op_RegF, 47, VSR47->as_VMReg()         );\n-  reg_def VSR47_H(SOC, SOC, Op_RegF, 47, VSR47->as_VMReg()->next() );\n-  reg_def VSR47_J(SOC, SOC, Op_RegF, 47, VSR47->as_VMReg()->next(2));\n-  reg_def VSR47_K(SOC, SOC, Op_RegF, 47, VSR47->as_VMReg()->next(3));\n-\n-  reg_def VSR48  (SOC, SOC, Op_RegF, 48, VSR48->as_VMReg()         );\n-  reg_def VSR48_H(SOC, SOC, Op_RegF, 48, VSR48->as_VMReg()->next() );\n-  reg_def VSR48_J(SOC, SOC, Op_RegF, 48, VSR48->as_VMReg()->next(2));\n-  reg_def VSR48_K(SOC, SOC, Op_RegF, 48, VSR48->as_VMReg()->next(3));\n-\n-  reg_def VSR49  (SOC, SOC, Op_RegF, 49, VSR49->as_VMReg()         );\n-  reg_def VSR49_H(SOC, SOC, Op_RegF, 49, VSR49->as_VMReg()->next() );\n-  reg_def VSR49_J(SOC, SOC, Op_RegF, 49, VSR49->as_VMReg()->next(2));\n-  reg_def VSR49_K(SOC, SOC, Op_RegF, 49, VSR49->as_VMReg()->next(3));\n-\n-  reg_def VSR50  (SOC, SOC, Op_RegF, 50, VSR50->as_VMReg()         );\n-  reg_def VSR50_H(SOC, SOC, Op_RegF, 50, VSR50->as_VMReg()->next() );\n-  reg_def VSR50_J(SOC, SOC, Op_RegF, 50, VSR50->as_VMReg()->next(2));\n-  reg_def VSR50_K(SOC, SOC, Op_RegF, 50, VSR50->as_VMReg()->next(3));\n-\n-  reg_def VSR51  (SOC, SOC, Op_RegF, 51, VSR51->as_VMReg()         );\n-  reg_def VSR51_H(SOC, SOC, Op_RegF, 51, VSR51->as_VMReg()->next() );\n-  reg_def VSR51_J(SOC, SOC, Op_RegF, 51, VSR51->as_VMReg()->next(2));\n-  reg_def VSR51_K(SOC, SOC, Op_RegF, 51, VSR51->as_VMReg()->next(3));\n-\n-  reg_def VSR52  (SOC, SOE, Op_RegF, 52, VSR52->as_VMReg()         );\n-  reg_def VSR52_H(SOC, SOE, Op_RegF, 52, VSR52->as_VMReg()->next() );\n-  reg_def VSR52_J(SOC, SOE, Op_RegF, 52, VSR52->as_VMReg()->next(2));\n-  reg_def VSR52_K(SOC, SOE, Op_RegF, 52, VSR52->as_VMReg()->next(3));\n-\n-  reg_def VSR53  (SOC, SOE, Op_RegF, 53, VSR53->as_VMReg()         );\n-  reg_def VSR53_H(SOC, SOE, Op_RegF, 53, VSR53->as_VMReg()->next() );\n-  reg_def VSR53_J(SOC, SOE, Op_RegF, 53, VSR53->as_VMReg()->next(2));\n-  reg_def VSR53_K(SOC, SOE, Op_RegF, 53, VSR53->as_VMReg()->next(3));\n-\n-  reg_def VSR54  (SOC, SOE, Op_RegF, 54, VSR54->as_VMReg()         );\n-  reg_def VSR54_H(SOC, SOE, Op_RegF, 54, VSR54->as_VMReg()->next() );\n-  reg_def VSR54_J(SOC, SOE, Op_RegF, 54, VSR54->as_VMReg()->next(2));\n-  reg_def VSR54_K(SOC, SOE, Op_RegF, 54, VSR54->as_VMReg()->next(3));\n-\n-  reg_def VSR55  (SOC, SOE, Op_RegF, 55, VSR55->as_VMReg()         );\n-  reg_def VSR55_H(SOC, SOE, Op_RegF, 55, VSR55->as_VMReg()->next() );\n-  reg_def VSR55_J(SOC, SOE, Op_RegF, 55, VSR55->as_VMReg()->next(2));\n-  reg_def VSR55_K(SOC, SOE, Op_RegF, 55, VSR55->as_VMReg()->next(3));\n-\n-  reg_def VSR56  (SOC, SOE, Op_RegF, 56, VSR56->as_VMReg()         );\n-  reg_def VSR56_H(SOC, SOE, Op_RegF, 56, VSR56->as_VMReg()->next() );\n-  reg_def VSR56_J(SOC, SOE, Op_RegF, 56, VSR56->as_VMReg()->next(2));\n-  reg_def VSR56_K(SOC, SOE, Op_RegF, 56, VSR56->as_VMReg()->next(3));\n-\n-  reg_def VSR57  (SOC, SOE, Op_RegF, 57, VSR57->as_VMReg()         );\n-  reg_def VSR57_H(SOC, SOE, Op_RegF, 57, VSR57->as_VMReg()->next() );\n-  reg_def VSR57_J(SOC, SOE, Op_RegF, 57, VSR57->as_VMReg()->next(2));\n-  reg_def VSR57_K(SOC, SOE, Op_RegF, 57, VSR57->as_VMReg()->next(3));\n-\n-  reg_def VSR58  (SOC, SOE, Op_RegF, 58, VSR58->as_VMReg()         );\n-  reg_def VSR58_H(SOC, SOE, Op_RegF, 58, VSR58->as_VMReg()->next() );\n-  reg_def VSR58_J(SOC, SOE, Op_RegF, 58, VSR58->as_VMReg()->next(2));\n-  reg_def VSR58_K(SOC, SOE, Op_RegF, 58, VSR58->as_VMReg()->next(3));\n-\n-  reg_def VSR59  (SOC, SOE, Op_RegF, 59, VSR59->as_VMReg()         );\n-  reg_def VSR59_H(SOC, SOE, Op_RegF, 59, VSR59->as_VMReg()->next() );\n-  reg_def VSR59_J(SOC, SOE, Op_RegF, 59, VSR59->as_VMReg()->next(2));\n-  reg_def VSR59_K(SOC, SOE, Op_RegF, 59, VSR59->as_VMReg()->next(3));\n-\n-  reg_def VSR60  (SOC, SOE, Op_RegF, 60, VSR60->as_VMReg()         );\n-  reg_def VSR60_H(SOC, SOE, Op_RegF, 60, VSR60->as_VMReg()->next() );\n-  reg_def VSR60_J(SOC, SOE, Op_RegF, 60, VSR60->as_VMReg()->next(2));\n-  reg_def VSR60_K(SOC, SOE, Op_RegF, 60, VSR60->as_VMReg()->next(3));\n-\n-  reg_def VSR61  (SOC, SOE, Op_RegF, 61, VSR61->as_VMReg()         );\n-  reg_def VSR61_H(SOC, SOE, Op_RegF, 61, VSR61->as_VMReg()->next() );\n-  reg_def VSR61_J(SOC, SOE, Op_RegF, 61, VSR61->as_VMReg()->next(2));\n-  reg_def VSR61_K(SOC, SOE, Op_RegF, 61, VSR61->as_VMReg()->next(3));\n-\n-  reg_def VSR62  (SOC, SOE, Op_RegF, 62, VSR62->as_VMReg()         );\n-  reg_def VSR62_H(SOC, SOE, Op_RegF, 62, VSR62->as_VMReg()->next() );\n-  reg_def VSR62_J(SOC, SOE, Op_RegF, 62, VSR62->as_VMReg()->next(2));\n-  reg_def VSR62_K(SOC, SOE, Op_RegF, 62, VSR62->as_VMReg()->next(3));\n-\n-  reg_def VSR63  (SOC, SOE, Op_RegF, 63, VSR63->as_VMReg()         );\n-  reg_def VSR63_H(SOC, SOE, Op_RegF, 63, VSR63->as_VMReg()->next() );\n-  reg_def VSR63_J(SOC, SOE, Op_RegF, 63, VSR63->as_VMReg()->next(2));\n-  reg_def VSR63_K(SOC, SOE, Op_RegF, 63, VSR63->as_VMReg()->next(3));\n+\n+  reg_def VR0  (SOC, SOC, Op_RegF, 0, VR0->as_VMReg()         );\n+  reg_def VR0_H(SOC, SOC, Op_RegF, 0, VR0->as_VMReg()->next() );\n+  reg_def VR0_J(SOC, SOC, Op_RegF, 0, VR0->as_VMReg()->next(2));\n+  reg_def VR0_K(SOC, SOC, Op_RegF, 0, VR0->as_VMReg()->next(3));\n+\n+  reg_def VR1  (SOC, SOC, Op_RegF, 1, VR1->as_VMReg()         );\n+  reg_def VR1_H(SOC, SOC, Op_RegF, 1, VR1->as_VMReg()->next() );\n+  reg_def VR1_J(SOC, SOC, Op_RegF, 1, VR1->as_VMReg()->next(2));\n+  reg_def VR1_K(SOC, SOC, Op_RegF, 1, VR1->as_VMReg()->next(3));\n+\n+  reg_def VR2  (SOC, SOC, Op_RegF, 2, VR2->as_VMReg()         );\n+  reg_def VR2_H(SOC, SOC, Op_RegF, 2, VR2->as_VMReg()->next() );\n+  reg_def VR2_J(SOC, SOC, Op_RegF, 2, VR2->as_VMReg()->next(2));\n+  reg_def VR2_K(SOC, SOC, Op_RegF, 2, VR2->as_VMReg()->next(3));\n+\n+  reg_def VR3  (SOC, SOC, Op_RegF, 3, VR3->as_VMReg()         );\n+  reg_def VR3_H(SOC, SOC, Op_RegF, 3, VR3->as_VMReg()->next() );\n+  reg_def VR3_J(SOC, SOC, Op_RegF, 3, VR3->as_VMReg()->next(2));\n+  reg_def VR3_K(SOC, SOC, Op_RegF, 3, VR3->as_VMReg()->next(3));\n+\n+  reg_def VR4  (SOC, SOC, Op_RegF, 4, VR4->as_VMReg()         );\n+  reg_def VR4_H(SOC, SOC, Op_RegF, 4, VR4->as_VMReg()->next() );\n+  reg_def VR4_J(SOC, SOC, Op_RegF, 4, VR4->as_VMReg()->next(2));\n+  reg_def VR4_K(SOC, SOC, Op_RegF, 4, VR4->as_VMReg()->next(3));\n+\n+  reg_def VR5  (SOC, SOC, Op_RegF, 5, VR5->as_VMReg()         );\n+  reg_def VR5_H(SOC, SOC, Op_RegF, 5, VR5->as_VMReg()->next() );\n+  reg_def VR5_J(SOC, SOC, Op_RegF, 5, VR5->as_VMReg()->next(2));\n+  reg_def VR5_K(SOC, SOC, Op_RegF, 5, VR5->as_VMReg()->next(3));\n+\n+  reg_def VR6  (SOC, SOC, Op_RegF, 6, VR6->as_VMReg()         );\n+  reg_def VR6_H(SOC, SOC, Op_RegF, 6, VR6->as_VMReg()->next() );\n+  reg_def VR6_J(SOC, SOC, Op_RegF, 6, VR6->as_VMReg()->next(2));\n+  reg_def VR6_K(SOC, SOC, Op_RegF, 6, VR6->as_VMReg()->next(3));\n+\n+  reg_def VR7  (SOC, SOC, Op_RegF, 7, VR7->as_VMReg()         );\n+  reg_def VR7_H(SOC, SOC, Op_RegF, 7, VR7->as_VMReg()->next() );\n+  reg_def VR7_J(SOC, SOC, Op_RegF, 7, VR7->as_VMReg()->next(2));\n+  reg_def VR7_K(SOC, SOC, Op_RegF, 7, VR7->as_VMReg()->next(3));\n+\n+  reg_def VR8  (SOC, SOC, Op_RegF, 8, VR8->as_VMReg()         );\n+  reg_def VR8_H(SOC, SOC, Op_RegF, 8, VR8->as_VMReg()->next() );\n+  reg_def VR8_J(SOC, SOC, Op_RegF, 8, VR8->as_VMReg()->next(2));\n+  reg_def VR8_K(SOC, SOC, Op_RegF, 8, VR8->as_VMReg()->next(3));\n+\n+  reg_def VR9  (SOC, SOC, Op_RegF, 9, VR9->as_VMReg()         );\n+  reg_def VR9_H(SOC, SOC, Op_RegF, 9, VR9->as_VMReg()->next() );\n+  reg_def VR9_J(SOC, SOC, Op_RegF, 9, VR9->as_VMReg()->next(2));\n+  reg_def VR9_K(SOC, SOC, Op_RegF, 9, VR9->as_VMReg()->next(3));\n+\n+  reg_def VR10  (SOC, SOC, Op_RegF, 10, VR10->as_VMReg()         );\n+  reg_def VR10_H(SOC, SOC, Op_RegF, 10, VR10->as_VMReg()->next() );\n+  reg_def VR10_J(SOC, SOC, Op_RegF, 10, VR10->as_VMReg()->next(2));\n+  reg_def VR10_K(SOC, SOC, Op_RegF, 10, VR10->as_VMReg()->next(3));\n+\n+  reg_def VR11  (SOC, SOC, Op_RegF, 11, VR11->as_VMReg()         );\n+  reg_def VR11_H(SOC, SOC, Op_RegF, 11, VR11->as_VMReg()->next() );\n+  reg_def VR11_J(SOC, SOC, Op_RegF, 11, VR11->as_VMReg()->next(2));\n+  reg_def VR11_K(SOC, SOC, Op_RegF, 11, VR11->as_VMReg()->next(3));\n+\n+  reg_def VR12  (SOC, SOC, Op_RegF, 12, VR12->as_VMReg()         );\n+  reg_def VR12_H(SOC, SOC, Op_RegF, 12, VR12->as_VMReg()->next() );\n+  reg_def VR12_J(SOC, SOC, Op_RegF, 12, VR12->as_VMReg()->next(2));\n+  reg_def VR12_K(SOC, SOC, Op_RegF, 12, VR12->as_VMReg()->next(3));\n+\n+  reg_def VR13  (SOC, SOC, Op_RegF, 13, VR13->as_VMReg()         );\n+  reg_def VR13_H(SOC, SOC, Op_RegF, 13, VR13->as_VMReg()->next() );\n+  reg_def VR13_J(SOC, SOC, Op_RegF, 13, VR13->as_VMReg()->next(2));\n+  reg_def VR13_K(SOC, SOC, Op_RegF, 13, VR13->as_VMReg()->next(3));\n+\n+  reg_def VR14  (SOC, SOC, Op_RegF, 14, VR14->as_VMReg()         );\n+  reg_def VR14_H(SOC, SOC, Op_RegF, 14, VR14->as_VMReg()->next() );\n+  reg_def VR14_J(SOC, SOC, Op_RegF, 14, VR14->as_VMReg()->next(2));\n+  reg_def VR14_K(SOC, SOC, Op_RegF, 14, VR14->as_VMReg()->next(3));\n+\n+  reg_def VR15  (SOC, SOC, Op_RegF, 15, VR15->as_VMReg()         );\n+  reg_def VR15_H(SOC, SOC, Op_RegF, 15, VR15->as_VMReg()->next() );\n+  reg_def VR15_J(SOC, SOC, Op_RegF, 15, VR15->as_VMReg()->next(2));\n+  reg_def VR15_K(SOC, SOC, Op_RegF, 15, VR15->as_VMReg()->next(3));\n+\n+  reg_def VR16  (SOC, SOC, Op_RegF, 16, VR16->as_VMReg()         );\n+  reg_def VR16_H(SOC, SOC, Op_RegF, 16, VR16->as_VMReg()->next() );\n+  reg_def VR16_J(SOC, SOC, Op_RegF, 16, VR16->as_VMReg()->next(2));\n+  reg_def VR16_K(SOC, SOC, Op_RegF, 16, VR16->as_VMReg()->next(3));\n+\n+  reg_def VR17  (SOC, SOC, Op_RegF, 17, VR17->as_VMReg()         );\n+  reg_def VR17_H(SOC, SOC, Op_RegF, 17, VR17->as_VMReg()->next() );\n+  reg_def VR17_J(SOC, SOC, Op_RegF, 17, VR17->as_VMReg()->next(2));\n+  reg_def VR17_K(SOC, SOC, Op_RegF, 17, VR17->as_VMReg()->next(3));\n+\n+  reg_def VR18  (SOC, SOC, Op_RegF, 18, VR18->as_VMReg()         );\n+  reg_def VR18_H(SOC, SOC, Op_RegF, 18, VR18->as_VMReg()->next() );\n+  reg_def VR18_J(SOC, SOC, Op_RegF, 18, VR18->as_VMReg()->next(2));\n+  reg_def VR18_K(SOC, SOC, Op_RegF, 18, VR18->as_VMReg()->next(3));\n+\n+  reg_def VR19  (SOC, SOC, Op_RegF, 19, VR19->as_VMReg()         );\n+  reg_def VR19_H(SOC, SOC, Op_RegF, 19, VR19->as_VMReg()->next() );\n+  reg_def VR19_J(SOC, SOC, Op_RegF, 19, VR19->as_VMReg()->next(2));\n+  reg_def VR19_K(SOC, SOC, Op_RegF, 19, VR19->as_VMReg()->next(3));\n+\n+  reg_def VR20  (SOC, SOE, Op_RegF, 20, VR20->as_VMReg()         );\n+  reg_def VR20_H(SOC, SOE, Op_RegF, 20, VR20->as_VMReg()->next() );\n+  reg_def VR20_J(SOC, SOE, Op_RegF, 20, VR20->as_VMReg()->next(2));\n+  reg_def VR20_K(SOC, SOE, Op_RegF, 20, VR20->as_VMReg()->next(3));\n+\n+  reg_def VR21  (SOC, SOE, Op_RegF, 21, VR21->as_VMReg()         );\n+  reg_def VR21_H(SOC, SOE, Op_RegF, 21, VR21->as_VMReg()->next() );\n+  reg_def VR21_J(SOC, SOE, Op_RegF, 21, VR21->as_VMReg()->next(2));\n+  reg_def VR21_K(SOC, SOE, Op_RegF, 21, VR21->as_VMReg()->next(3));\n+\n+  reg_def VR22  (SOC, SOE, Op_RegF, 22, VR22->as_VMReg()         );\n+  reg_def VR22_H(SOC, SOE, Op_RegF, 22, VR22->as_VMReg()->next() );\n+  reg_def VR22_J(SOC, SOE, Op_RegF, 22, VR22->as_VMReg()->next(2));\n+  reg_def VR22_K(SOC, SOE, Op_RegF, 22, VR22->as_VMReg()->next(3));\n+\n+  reg_def VR23  (SOC, SOE, Op_RegF, 23, VR23->as_VMReg()         );\n+  reg_def VR23_H(SOC, SOE, Op_RegF, 23, VR23->as_VMReg()->next() );\n+  reg_def VR23_J(SOC, SOE, Op_RegF, 23, VR23->as_VMReg()->next(2));\n+  reg_def VR23_K(SOC, SOE, Op_RegF, 23, VR23->as_VMReg()->next(3));\n+\n+  reg_def VR24  (SOC, SOE, Op_RegF, 24, VR24->as_VMReg()         );\n+  reg_def VR24_H(SOC, SOE, Op_RegF, 24, VR24->as_VMReg()->next() );\n+  reg_def VR24_J(SOC, SOE, Op_RegF, 24, VR24->as_VMReg()->next(2));\n+  reg_def VR24_K(SOC, SOE, Op_RegF, 24, VR24->as_VMReg()->next(3));\n+\n+  reg_def VR25  (SOC, SOE, Op_RegF, 25, VR25->as_VMReg()         );\n+  reg_def VR25_H(SOC, SOE, Op_RegF, 25, VR25->as_VMReg()->next() );\n+  reg_def VR25_J(SOC, SOE, Op_RegF, 25, VR25->as_VMReg()->next(2));\n+  reg_def VR25_K(SOC, SOE, Op_RegF, 25, VR25->as_VMReg()->next(3));\n+\n+  reg_def VR26  (SOC, SOE, Op_RegF, 26, VR26->as_VMReg()         );\n+  reg_def VR26_H(SOC, SOE, Op_RegF, 26, VR26->as_VMReg()->next() );\n+  reg_def VR26_J(SOC, SOE, Op_RegF, 26, VR26->as_VMReg()->next(2));\n+  reg_def VR26_K(SOC, SOE, Op_RegF, 26, VR26->as_VMReg()->next(3));\n+\n+  reg_def VR27  (SOC, SOE, Op_RegF, 27, VR27->as_VMReg()         );\n+  reg_def VR27_H(SOC, SOE, Op_RegF, 27, VR27->as_VMReg()->next() );\n+  reg_def VR27_J(SOC, SOE, Op_RegF, 27, VR27->as_VMReg()->next(2));\n+  reg_def VR27_K(SOC, SOE, Op_RegF, 27, VR27->as_VMReg()->next(3));\n+\n+  reg_def VR28  (SOC, SOE, Op_RegF, 28, VR28->as_VMReg()         );\n+  reg_def VR28_H(SOC, SOE, Op_RegF, 28, VR28->as_VMReg()->next() );\n+  reg_def VR28_J(SOC, SOE, Op_RegF, 28, VR28->as_VMReg()->next(2));\n+  reg_def VR28_K(SOC, SOE, Op_RegF, 28, VR28->as_VMReg()->next(3));\n+\n+  reg_def VR29  (SOC, SOE, Op_RegF, 29, VR29->as_VMReg()         );\n+  reg_def VR29_H(SOC, SOE, Op_RegF, 29, VR29->as_VMReg()->next() );\n+  reg_def VR29_J(SOC, SOE, Op_RegF, 29, VR29->as_VMReg()->next(2));\n+  reg_def VR29_K(SOC, SOE, Op_RegF, 29, VR29->as_VMReg()->next(3));\n+\n+  reg_def VR30  (SOC, SOE, Op_RegF, 30, VR30->as_VMReg()         );\n+  reg_def VR30_H(SOC, SOE, Op_RegF, 30, VR30->as_VMReg()->next() );\n+  reg_def VR30_J(SOC, SOE, Op_RegF, 30, VR30->as_VMReg()->next(2));\n+  reg_def VR30_K(SOC, SOE, Op_RegF, 30, VR30->as_VMReg()->next(3));\n+\n+  reg_def VR31  (SOC, SOE, Op_RegF, 31, VR31->as_VMReg()         );\n+  reg_def VR31_H(SOC, SOE, Op_RegF, 31, VR31->as_VMReg()->next() );\n+  reg_def VR31_J(SOC, SOE, Op_RegF, 31, VR31->as_VMReg()->next(2));\n+  reg_def VR31_K(SOC, SOE, Op_RegF, 31, VR31->as_VMReg()->next(3));\n@@ -699,64 +538,32 @@\n-  VSR0 , VSR0_H , VSR0_J , VSR0_K ,\n-  VSR1 , VSR1_H , VSR1_J , VSR1_K ,\n-  VSR2 , VSR2_H , VSR2_J , VSR2_K ,\n-  VSR3 , VSR3_H , VSR3_J , VSR3_K ,\n-  VSR4 , VSR4_H , VSR4_J , VSR4_K ,\n-  VSR5 , VSR5_H , VSR5_J , VSR5_K ,\n-  VSR6 , VSR6_H , VSR6_J , VSR6_K ,\n-  VSR7 , VSR7_H , VSR7_J , VSR7_K ,\n-  VSR8 , VSR8_H , VSR8_J , VSR8_K ,\n-  VSR9 , VSR9_H , VSR9_J , VSR9_K ,\n-  VSR10, VSR10_H, VSR10_J, VSR10_K,\n-  VSR11, VSR11_H, VSR11_J, VSR11_K,\n-  VSR12, VSR12_H, VSR12_J, VSR12_K,\n-  VSR13, VSR13_H, VSR13_J, VSR13_K,\n-  VSR14, VSR14_H, VSR14_J, VSR14_K,\n-  VSR15, VSR15_H, VSR15_J, VSR15_K,\n-  VSR16, VSR16_H, VSR16_J, VSR16_K,\n-  VSR17, VSR17_H, VSR17_J, VSR17_K,\n-  VSR18, VSR18_H, VSR18_J, VSR18_K,\n-  VSR19, VSR19_H, VSR19_J, VSR19_K,\n-  VSR20, VSR20_H, VSR20_J, VSR20_K,\n-  VSR21, VSR21_H, VSR21_J, VSR21_K,\n-  VSR22, VSR22_H, VSR22_J, VSR22_K,\n-  VSR23, VSR23_H, VSR23_J, VSR23_K,\n-  VSR24, VSR24_H, VSR24_J, VSR24_K,\n-  VSR25, VSR25_H, VSR25_J, VSR25_K,\n-  VSR26, VSR26_H, VSR26_J, VSR26_K,\n-  VSR27, VSR27_H, VSR27_J, VSR27_K,\n-  VSR28, VSR28_H, VSR28_J, VSR28_K,\n-  VSR29, VSR29_H, VSR29_J, VSR29_K,\n-  VSR30, VSR30_H, VSR30_J, VSR30_K,\n-  VSR31, VSR31_H, VSR31_J, VSR31_K,\n-  VSR32, VSR32_H, VSR32_J, VSR32_K,\n-  VSR33, VSR33_H, VSR33_J, VSR33_K,\n-  VSR34, VSR34_H, VSR34_J, VSR34_K,\n-  VSR35, VSR35_H, VSR35_J, VSR35_K,\n-  VSR36, VSR36_H, VSR36_J, VSR36_K,\n-  VSR37, VSR37_H, VSR37_J, VSR37_K,\n-  VSR38, VSR38_H, VSR38_J, VSR38_K,\n-  VSR39, VSR39_H, VSR39_J, VSR39_K,\n-  VSR40, VSR40_H, VSR40_J, VSR40_K,\n-  VSR41, VSR41_H, VSR41_J, VSR41_K,\n-  VSR42, VSR42_H, VSR42_J, VSR42_K,\n-  VSR43, VSR43_H, VSR43_J, VSR43_K,\n-  VSR44, VSR44_H, VSR44_J, VSR44_K,\n-  VSR45, VSR45_H, VSR45_J, VSR45_K,\n-  VSR46, VSR46_H, VSR46_J, VSR46_K,\n-  VSR47, VSR47_H, VSR47_J, VSR47_K,\n-  VSR48, VSR48_H, VSR48_J, VSR48_K,\n-  VSR49, VSR49_H, VSR49_J, VSR49_K,\n-  VSR50, VSR50_H, VSR50_J, VSR50_K,\n-  VSR51, VSR51_H, VSR51_J, VSR51_K,\n-  VSR52, VSR52_H, VSR52_J, VSR52_K,\n-  VSR53, VSR53_H, VSR53_J, VSR53_K,\n-  VSR54, VSR54_H, VSR54_J, VSR54_K,\n-  VSR55, VSR55_H, VSR55_J, VSR55_K,\n-  VSR56, VSR56_H, VSR56_J, VSR56_K,\n-  VSR57, VSR57_H, VSR57_J, VSR57_K,\n-  VSR58, VSR58_H, VSR58_J, VSR58_K,\n-  VSR59, VSR59_H, VSR59_J, VSR59_K,\n-  VSR60, VSR60_H, VSR60_J, VSR60_K,\n-  VSR61, VSR61_H, VSR61_J, VSR61_K,\n-  VSR62, VSR62_H, VSR62_J, VSR62_K,\n-  VSR63, VSR63_H, VSR63_J, VSR63_K\n+  VR0 , VR0_H , VR0_J , VR0_K ,\n+  VR1 , VR1_H , VR1_J , VR1_K ,\n+  VR2 , VR2_H , VR2_J , VR2_K ,\n+  VR3 , VR3_H , VR3_J , VR3_K ,\n+  VR4 , VR4_H , VR4_J , VR4_K ,\n+  VR5 , VR5_H , VR5_J , VR5_K ,\n+  VR6 , VR6_H , VR6_J , VR6_K ,\n+  VR7 , VR7_H , VR7_J , VR7_K ,\n+  VR8 , VR8_H , VR8_J , VR8_K ,\n+  VR9 , VR9_H , VR9_J , VR9_K ,\n+  VR10, VR10_H, VR10_J, VR10_K,\n+  VR11, VR11_H, VR11_J, VR11_K,\n+  VR12, VR12_H, VR12_J, VR12_K,\n+  VR13, VR13_H, VR13_J, VR13_K,\n+  VR14, VR14_H, VR14_J, VR14_K,\n+  VR15, VR15_H, VR15_J, VR15_K,\n+  VR16, VR16_H, VR16_J, VR16_K,\n+  VR17, VR17_H, VR17_J, VR17_K,\n+  VR18, VR18_H, VR18_J, VR18_K,\n+  VR19, VR19_H, VR19_J, VR19_K,\n+  VR20, VR20_H, VR20_J, VR20_K,\n+  VR21, VR21_H, VR21_J, VR21_K,\n+  VR22, VR22_H, VR22_J, VR22_K,\n+  VR23, VR23_H, VR23_J, VR23_K,\n+  VR24, VR24_H, VR24_J, VR24_K,\n+  VR25, VR25_H, VR25_J, VR25_K,\n+  VR26, VR26_H, VR26_J, VR26_K,\n+  VR27, VR27_H, VR27_J, VR27_K,\n+  VR28, VR28_H, VR28_J, VR28_K,\n+  VR29, VR29_H, VR29_J, VR29_K,\n+  VR30, VR30_H, VR30_J, VR30_K,\n+  VR31, VR31_H, VR31_J, VR31_K\n@@ -1166,33 +973,33 @@\n-reg_class vs_reg(\n-  VSR32, VSR32_H, VSR32_J, VSR32_K,\n-  VSR33, VSR33_H, VSR33_J, VSR33_K,\n-  VSR34, VSR34_H, VSR34_J, VSR34_K,\n-  VSR35, VSR35_H, VSR35_J, VSR35_K,\n-  VSR36, VSR36_H, VSR36_J, VSR36_K,\n-  VSR37, VSR37_H, VSR37_J, VSR37_K,\n-  VSR38, VSR38_H, VSR38_J, VSR38_K,\n-  VSR39, VSR39_H, VSR39_J, VSR39_K,\n-  VSR40, VSR40_H, VSR40_J, VSR40_K,\n-  VSR41, VSR41_H, VSR41_J, VSR41_K,\n-  VSR42, VSR42_H, VSR42_J, VSR42_K,\n-  VSR43, VSR43_H, VSR43_J, VSR43_K,\n-  VSR44, VSR44_H, VSR44_J, VSR44_K,\n-  VSR45, VSR45_H, VSR45_J, VSR45_K,\n-  VSR46, VSR46_H, VSR46_J, VSR46_K,\n-  VSR47, VSR47_H, VSR47_J, VSR47_K,\n-  VSR48, VSR48_H, VSR48_J, VSR48_K,\n-  VSR49, VSR49_H, VSR49_J, VSR49_K,\n-  VSR50, VSR50_H, VSR50_J, VSR50_K,\n-  VSR51, VSR51_H, VSR51_J, VSR51_K,\n-  VSR52, VSR52_H, VSR52_J, VSR52_K, \/\/ non-volatile\n-  VSR53, VSR53_H, VSR53_J, VSR53_K, \/\/ non-volatile\n-  VSR54, VSR54_H, VSR54_J, VSR54_K, \/\/ non-volatile\n-  VSR55, VSR55_H, VSR55_J, VSR55_K, \/\/ non-volatile\n-  VSR56, VSR56_H, VSR56_J, VSR56_K, \/\/ non-volatile\n-  VSR57, VSR57_H, VSR57_J, VSR57_K, \/\/ non-volatile\n-  VSR58, VSR58_H, VSR58_J, VSR58_K, \/\/ non-volatile\n-  VSR59, VSR59_H, VSR59_J, VSR59_K, \/\/ non-volatile\n-  VSR60, VSR60_H, VSR60_J, VSR60_K, \/\/ non-volatile\n-  VSR61, VSR61_H, VSR61_J, VSR61_K, \/\/ non-volatile\n-  VSR62, VSR62_H, VSR62_J, VSR62_K, \/\/ non-volatile\n-  VSR63, VSR63_H, VSR63_J, VSR63_K  \/\/ non-volatile\n+reg_class v_reg(\n+  VR0 , VR0_H , VR0_J , VR0_K ,\n+  VR1 , VR1_H , VR1_J , VR1_K ,\n+  VR2 , VR2_H , VR2_J , VR2_K ,\n+  VR3 , VR3_H , VR3_J , VR3_K ,\n+  VR4 , VR4_H , VR4_J , VR4_K ,\n+  VR5 , VR5_H , VR5_J , VR5_K ,\n+  VR6 , VR6_H , VR6_J , VR6_K ,\n+  VR7 , VR7_H , VR7_J , VR7_K ,\n+  VR8 , VR8_H , VR8_J , VR8_K ,\n+  VR9 , VR9_H , VR9_J , VR9_K ,\n+  VR10, VR10_H, VR10_J, VR10_K,\n+  VR11, VR11_H, VR11_J, VR11_K,\n+  VR12, VR12_H, VR12_J, VR12_K,\n+  VR13, VR13_H, VR13_J, VR13_K,\n+  VR14, VR14_H, VR14_J, VR14_K,\n+  VR15, VR15_H, VR15_J, VR15_K,\n+  VR16, VR16_H, VR16_J, VR16_K,\n+  VR17, VR17_H, VR17_J, VR17_K,\n+  VR18, VR18_H, VR18_J, VR18_K,\n+  VR19, VR19_H, VR19_J, VR19_K,\n+  VR20, VR20_H, VR20_J, VR20_K,\n+  VR21, VR21_H, VR21_J, VR21_K,\n+  VR22, VR22_H, VR22_J, VR22_K,\n+  VR23, VR23_H, VR23_J, VR23_K,\n+  VR24, VR24_H, VR24_J, VR24_K,\n+  VR25, VR25_H, VR25_J, VR25_K,\n+  VR26, VR26_H, VR26_J, VR26_K,\n+  VR27, VR27_H, VR27_J, VR27_K,\n+  VR28, VR28_H, VR28_J, VR28_K,\n+  VR29, VR29_H, VR29_J, VR29_K,\n+  VR30, VR30_H, VR30_J, VR30_K,\n+  VR31, VR31_H, VR31_J, VR31_K\n@@ -1927,1 +1734,1 @@\n-  STATIC_ASSERT((int)ConcreteRegisterImpl::max_fpr == (int)MachRegisterNumbers::VSR0_num);\n+  STATIC_ASSERT((int)ConcreteRegisterImpl::max_fpr == (int)MachRegisterNumbers::VR0_num);\n@@ -1931,2 +1738,2 @@\n-  STATIC_ASSERT((int)ConcreteRegisterImpl::max_vsr == (int)MachRegisterNumbers::CR0_num);\n-  if (reg < ConcreteRegisterImpl::max_vsr) return rc_vs;\n+  STATIC_ASSERT((int)ConcreteRegisterImpl::max_vr == (int)MachRegisterNumbers::CR0_num);\n+  if (reg < ConcreteRegisterImpl::max_vr) return rc_vs;\n@@ -2008,1 +1815,1 @@\n-    \/\/ VectorSRegister->Memory Spill.\n+    \/\/ VectorRegister->Memory Spill.\n@@ -2010,1 +1817,1 @@\n-      VectorSRegister Rsrc = as_VectorSRegister(Matcher::_regEncode[src_lo]);\n+      VectorRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]);\n@@ -2015,1 +1822,1 @@\n-            __ stxv(Rsrc, dst_offset, R1_SP); \/\/ matches storeV16_Power9\n+            __ stxv(Rsrc.to_vsr(), dst_offset, R1_SP); \/\/ matches storeV16_Power9\n@@ -2023,1 +1830,1 @@\n-            __ stxvx(Rsrc, R0); \/\/ matches storeV16_Power9 (regarding element ordering)\n+            __ stxvx(Rsrc.to_vsr(), R0); \/\/ matches storeV16_Power9 (regarding element ordering)\n@@ -2030,1 +1837,1 @@\n-          __ stxvd2x(Rsrc, R0); \/\/ matches storeV16_Power8\n+          __ stxvd2x(Rsrc.to_vsr(), R0); \/\/ matches storeV16_Power8\n@@ -2035,1 +1842,1 @@\n-    \/\/ Memory->VectorSRegister Spill.\n+    \/\/ Memory->VectorRegister Spill.\n@@ -2037,1 +1844,1 @@\n-      VectorSRegister Rdst = as_VectorSRegister(Matcher::_regEncode[dst_lo]);\n+      VectorRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]);\n@@ -2042,1 +1849,1 @@\n-            __ lxv(Rdst, src_offset, R1_SP);\n+            __ lxv(Rdst.to_vsr(), src_offset, R1_SP);\n@@ -2048,1 +1855,1 @@\n-            __ lxvx(Rdst, R0);\n+            __ lxvx(Rdst.to_vsr(), R0);\n@@ -2055,1 +1862,1 @@\n-          __ lxvd2x(Rdst, R0);\n+          __ lxvd2x(Rdst.to_vsr(), R0);\n@@ -2060,1 +1867,1 @@\n-    \/\/ VectorSRegister->VectorSRegister.\n+    \/\/ VectorRegister->VectorRegister.\n@@ -2062,2 +1869,2 @@\n-      VectorSRegister Rsrc = as_VectorSRegister(Matcher::_regEncode[src_lo]);\n-      VectorSRegister Rdst = as_VectorSRegister(Matcher::_regEncode[dst_lo]);\n+      VectorRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]);\n+      VectorRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]);\n@@ -2065,1 +1872,1 @@\n-        __ xxlor(Rdst, Rsrc, Rsrc);\n+        __ xxlor(Rdst.to_vsr(), Rsrc.to_vsr(), Rsrc.to_vsr());\n@@ -2070,1 +1877,1 @@\n-      ShouldNotReachHere(); \/\/ No VSR spill.\n+      ShouldNotReachHere(); \/\/ No VR spill.\n@@ -4051,1 +3858,1 @@\n-  constraint(ALLOC_IN_RC(vs_reg));\n+  constraint(ALLOC_IN_RC(v_reg));\n@@ -5627,1 +5434,1 @@\n-    __ lxvd2x($dst$$VectorSRegister, $mem$$Register);\n+    __ lxvd2x($dst$$VectorRegister.to_vsr(), $mem$$Register);\n@@ -5640,1 +5447,1 @@\n-    __ lxv($dst$$VectorSRegister, $mem$$disp, $mem$$Register);\n+    __ lxv($dst$$VectorRegister.to_vsr(), $mem$$disp, $mem$$Register);\n@@ -6667,1 +6474,1 @@\n-    __ stxvd2x($src$$VectorSRegister, $mem$$Register);\n+    __ stxvd2x($src$$VectorRegister.to_vsr(), $mem$$Register);\n@@ -6680,1 +6487,1 @@\n-    __ stxv($src$$VectorSRegister, $mem$$disp, $mem$$Register);\n+    __ stxv($src$$VectorRegister.to_vsr(), $mem$$disp, $mem$$Register);\n@@ -12652,3 +12459,3 @@\n-    __ mtvsrwz($tmpV$$VectorSRegister, $src$$Register);\n-    __ xxbrw($tmpV$$VectorSRegister, $tmpV$$VectorSRegister);\n-    __ mfvsrwz($dst$$Register, $tmpV$$VectorSRegister);\n+    __ mtvsrwz($tmpV$$VectorRegister.to_vsr(), $src$$Register);\n+    __ xxbrw($tmpV$$VectorRegister.to_vsr(), $tmpV$$VectorRegister->to_vsr());\n+    __ mfvsrwz($dst$$Register, $tmpV$$VectorRegister->to_vsr());\n@@ -12724,3 +12531,3 @@\n-    __ mtvsrd($tmpV$$VectorSRegister, $src$$Register);\n-    __ xxbrd($tmpV$$VectorSRegister, $tmpV$$VectorSRegister);\n-    __ mfvsrd($dst$$Register, $tmpV$$VectorSRegister);\n+    __ mtvsrd($tmpV$$VectorRegister->to_vsr(), $src$$Register);\n+    __ xxbrd($tmpV$$VectorRegister->to_vsr(), $tmpV$$VectorRegister->to_vsr());\n+    __ mfvsrd($dst$$Register, $tmpV$$VectorRegister->to_vsr());\n@@ -12965,1 +12772,1 @@\n-    __ mtvsrwz($temp1$$VectorSRegister, $src$$Register);\n+    __ mtvsrwz($temp1$$VectorRegister->to_vsr(), $src$$Register);\n@@ -12976,1 +12783,1 @@\n-    __ xxspltw($dst$$VectorSRegister, $src$$VectorSRegister, $imm1$$constant);\n+    __ xxspltw($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr(), $imm1$$constant);\n@@ -12987,1 +12794,1 @@\n-    __ xscvdpspn($dst$$VectorSRegister, $src$$FloatRegister->to_vsr());\n+    __ xscvdpspn($dst$$VectorRegister->to_vsr(), $src$$FloatRegister->to_vsr());\n@@ -13094,1 +12901,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13107,1 +12914,1 @@\n-    __ xxleqv($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxleqv($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13172,1 +12979,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13185,1 +12992,1 @@\n-    __ xxleqv($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxleqv($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13250,1 +13057,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13263,1 +13070,1 @@\n-    __ xxleqv($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxleqv($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -13319,1 +13126,1 @@\n-    __ vaddubm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vaddubm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13330,1 +13137,1 @@\n-    __ vadduhm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vadduhm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13341,1 +13148,1 @@\n-    __ vadduwm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vadduwm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13352,1 +13159,1 @@\n-    __ vaddfp($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vaddfp($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13363,1 +13170,1 @@\n-    __ vaddudm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vaddudm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13374,1 +13181,1 @@\n-    __ xvadddp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvadddp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13387,1 +13194,1 @@\n-    __ vsububm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vsububm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13398,1 +13205,1 @@\n-    __ vsubuhm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vsubuhm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13409,1 +13216,1 @@\n-    __ vsubuwm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vsubuwm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13420,1 +13227,1 @@\n-    __ vsubfp($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vsubfp($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13431,1 +13238,1 @@\n-    __ vsubudm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vsubudm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13442,1 +13249,1 @@\n-    __ xvsubdp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvsubdp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13457,2 +13264,2 @@\n-    __ vspltish($tmp$$VectorSRegister->to_vr(), 0);\n-    __ vmladduhm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr(), $tmp$$VectorSRegister->to_vr());\n+    __ vspltish($tmp$$VectorRegister, 0);\n+    __ vmladduhm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister, $tmp$$VectorRegister);\n@@ -13469,1 +13276,1 @@\n-    __ vmuluwm($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vmuluwm($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13480,1 +13287,1 @@\n-    __ xvmulsp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmulsp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13491,1 +13298,1 @@\n-    __ xvmuldp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmuldp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13504,1 +13311,1 @@\n-    __ xvdivsp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvdivsp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13515,1 +13322,1 @@\n-    __ xvdivdp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvdivdp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13530,1 +13337,1 @@\n-        __ vminsw($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+        __ vminsw($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13533,1 +13340,1 @@\n-        __ vminsd($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+        __ vminsd($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13550,1 +13357,1 @@\n-        __ vmaxsw($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+        __ vmaxsw($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13553,1 +13360,1 @@\n-        __ vmaxsd($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+        __ vmaxsd($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13567,1 +13374,1 @@\n-    __ vand($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vand($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13577,1 +13384,1 @@\n-    __ vor($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vor($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13587,1 +13394,1 @@\n-    __ vxor($dst$$VectorSRegister->to_vr(), $src1$$VectorSRegister->to_vr(), $src2$$VectorSRegister->to_vr());\n+    __ vxor($dst$$VectorRegister, $src1$$VectorRegister, $src2$$VectorRegister);\n@@ -13605,2 +13412,2 @@\n-    __ reduceI(opcode, $dst$$Register, $srcInt$$Register, $srcVec$$VectorSRegister->to_vr(),\n-        $tmp1$$VectorSRegister->to_vr(), $tmp2$$VectorSRegister->to_vr());\n+    __ reduceI(opcode, $dst$$Register, $srcInt$$Register, $srcVec$$VectorRegister,\n+        $tmp1$$VectorRegister, $tmp2$$VectorRegister);\n@@ -13621,2 +13428,2 @@\n-    __ reduceI(opcode, $dst$$Register, $srcInt$$Register, $srcVec$$VectorSRegister->to_vr(),\n-        $tmp1$$VectorSRegister->to_vr(), $tmp2$$VectorSRegister->to_vr());\n+    __ reduceI(opcode, $dst$$Register, $srcInt$$Register, $srcVec$$VectorRegister,\n+        $tmp1$$VectorRegister, $tmp2$$VectorRegister);\n@@ -13635,1 +13442,1 @@\n-    __ xvabssp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvabssp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13646,1 +13453,1 @@\n-    __ xvabsdp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvabsdp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13683,1 +13490,1 @@\n-        __ xvrdpic($dst$$VectorSRegister, $src$$VectorSRegister);\n+        __ xvrdpic($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13686,1 +13493,1 @@\n-        __ xvrdpim($dst$$VectorSRegister, $src$$VectorSRegister);\n+        __ xvrdpim($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13689,1 +13496,1 @@\n-        __ xvrdpip($dst$$VectorSRegister, $src$$VectorSRegister);\n+        __ xvrdpip($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13706,1 +13513,1 @@\n-    __ xvnegsp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvnegsp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13717,1 +13524,1 @@\n-    __ xvnegdp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvnegdp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13730,1 +13537,1 @@\n-    __ xvsqrtsp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvsqrtsp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13741,1 +13548,1 @@\n-    __ xvsqrtdp($dst$$VectorSRegister, $src$$VectorSRegister);\n+    __ xvsqrtdp($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr());\n@@ -13757,1 +13564,1 @@\n-        __ vpopcntb($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vpopcntb($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13760,1 +13567,1 @@\n-        __ vpopcnth($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vpopcnth($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13763,1 +13570,1 @@\n-        __ vpopcntw($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vpopcntw($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13766,1 +13573,1 @@\n-        __ vpopcntd($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vpopcntd($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13783,1 +13590,1 @@\n-        __ vclzb($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vclzb($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13786,1 +13593,1 @@\n-        __ vclzh($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vclzh($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13789,1 +13596,1 @@\n-        __ vclzw($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vclzw($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13792,1 +13599,1 @@\n-        __ vclzd($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vclzd($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13809,1 +13616,1 @@\n-        __ vctzb($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vctzb($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13812,1 +13619,1 @@\n-        __ vctzh($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vctzh($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13815,1 +13622,1 @@\n-        __ vctzw($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vctzw($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13818,1 +13625,1 @@\n-        __ vctzd($dst$$VectorSRegister->to_vr(), $src$$VectorSRegister->to_vr());\n+        __ vctzd($dst$$VectorRegister, $src$$VectorRegister);\n@@ -13838,1 +13645,1 @@\n-    __ xvmaddasp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmaddasp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13854,1 +13661,1 @@\n-    __ xvnmsubasp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvnmsubasp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13869,1 +13676,1 @@\n-    __ xvmsubasp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmsubasp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13884,1 +13691,1 @@\n-    __ xvmaddadp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmaddadp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13900,1 +13707,1 @@\n-    __ xvnmsubadp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvnmsubadp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -13915,1 +13722,1 @@\n-    __ xvmsubadp($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister);\n+    __ xvmsubadp($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr());\n@@ -14005,1 +13812,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -14018,1 +13825,1 @@\n-    __ xxpermdi($dst$$VectorSRegister, $src$$FloatRegister->to_vsr(), $src$$FloatRegister->to_vsr(), 0);\n+    __ xxpermdi($dst$$VectorRegister->to_vsr(), $src$$FloatRegister->to_vsr(), $src$$FloatRegister->to_vsr(), 0);\n@@ -14031,1 +13838,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -14043,1 +13850,1 @@\n-    __ mtvsrd($dst$$VectorSRegister, $src$$Register);\n+    __ mtvsrd($dst$$VectorRegister->to_vsr(), $src$$Register);\n@@ -14054,1 +13861,1 @@\n-    __ xxpermdi($dst$$VectorSRegister, $src$$VectorSRegister, $src$$VectorSRegister, $zero$$constant);\n+    __ xxpermdi($dst$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr(), $src$$VectorRegister->to_vsr(), $zero$$constant);\n@@ -14065,1 +13872,1 @@\n-    __ xxpermdi($dst$$VectorSRegister, $src1$$VectorSRegister, $src2$$VectorSRegister, $zero$$constant);\n+    __ xxpermdi($dst$$VectorRegister->to_vsr(), $src1$$VectorRegister->to_vsr(), $src2$$VectorRegister->to_vsr(), $zero$$constant);\n@@ -14090,1 +13897,1 @@\n-    __ xxlxor($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxlxor($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n@@ -14103,1 +13910,1 @@\n-    __ xxleqv($dst$$VectorSRegister, $dst$$VectorSRegister, $dst$$VectorSRegister);\n+    __ xxleqv($dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr(), $dst$$VectorRegister->to_vsr());\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":329,"deletions":522,"binary":false,"changes":851,"status":"modified"},{"patch":"@@ -324,0 +324,1 @@\n+  inline VMReg as_VMReg() const;\n@@ -395,1 +396,0 @@\n-  inline VMReg as_VMReg() const;\n@@ -487,2 +487,2 @@\n-    max_vsr = max_fpr + VectorSRegister::number_of_registers * 4,\n-    max_cnd = max_vsr + ConditionRegister::number_of_registers,\n+    max_vr  = max_fpr + VectorRegister::number_of_registers * 4,\n+    max_cnd = max_vr  + ConditionRegister::number_of_registers,\n","filename":"src\/hotspot\/cpu\/ppc\/register_ppc.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    vs_reg\n+    vec_reg\n@@ -120,1 +120,1 @@\n-    vs_reg_size       = 16\n+    vec_reg_size      = 16\n@@ -140,2 +140,2 @@\n-#define RegisterSaver_LiveVSReg(regname) \\\n-  { RegisterSaver::vs_reg,      regname->encoding(), regname->as_VMReg() }\n+#define RegisterSaver_LiveVecReg(regname) \\\n+  { RegisterSaver::vec_reg,      regname->encoding(), regname->as_VMReg() }\n@@ -223,1 +223,1 @@\n-static const RegisterSaver::LiveRegType RegisterSaver_LiveVSRegs[] = {\n+static const RegisterSaver::LiveRegType RegisterSaver_LiveVecRegs[] = {\n@@ -225,1 +225,1 @@\n-  \/\/ live vector scalar registers (optional, only these ones are used by C2):\n+  \/\/ live vector registers (optional, only these ones are used by C2):\n@@ -227,32 +227,32 @@\n-  RegisterSaver_LiveVSReg( VSR32 ),\n-  RegisterSaver_LiveVSReg( VSR33 ),\n-  RegisterSaver_LiveVSReg( VSR34 ),\n-  RegisterSaver_LiveVSReg( VSR35 ),\n-  RegisterSaver_LiveVSReg( VSR36 ),\n-  RegisterSaver_LiveVSReg( VSR37 ),\n-  RegisterSaver_LiveVSReg( VSR38 ),\n-  RegisterSaver_LiveVSReg( VSR39 ),\n-  RegisterSaver_LiveVSReg( VSR40 ),\n-  RegisterSaver_LiveVSReg( VSR41 ),\n-  RegisterSaver_LiveVSReg( VSR42 ),\n-  RegisterSaver_LiveVSReg( VSR43 ),\n-  RegisterSaver_LiveVSReg( VSR44 ),\n-  RegisterSaver_LiveVSReg( VSR45 ),\n-  RegisterSaver_LiveVSReg( VSR46 ),\n-  RegisterSaver_LiveVSReg( VSR47 ),\n-  RegisterSaver_LiveVSReg( VSR48 ),\n-  RegisterSaver_LiveVSReg( VSR49 ),\n-  RegisterSaver_LiveVSReg( VSR50 ),\n-  RegisterSaver_LiveVSReg( VSR51 ),\n-  RegisterSaver_LiveVSReg( VSR52 ),\n-  RegisterSaver_LiveVSReg( VSR53 ),\n-  RegisterSaver_LiveVSReg( VSR54 ),\n-  RegisterSaver_LiveVSReg( VSR55 ),\n-  RegisterSaver_LiveVSReg( VSR56 ),\n-  RegisterSaver_LiveVSReg( VSR57 ),\n-  RegisterSaver_LiveVSReg( VSR58 ),\n-  RegisterSaver_LiveVSReg( VSR59 ),\n-  RegisterSaver_LiveVSReg( VSR60 ),\n-  RegisterSaver_LiveVSReg( VSR61 ),\n-  RegisterSaver_LiveVSReg( VSR62 ),\n-  RegisterSaver_LiveVSReg( VSR63 )\n+  RegisterSaver_LiveVecReg( VR0 ),\n+  RegisterSaver_LiveVecReg( VR1 ),\n+  RegisterSaver_LiveVecReg( VR2 ),\n+  RegisterSaver_LiveVecReg( VR3 ),\n+  RegisterSaver_LiveVecReg( VR4 ),\n+  RegisterSaver_LiveVecReg( VR5 ),\n+  RegisterSaver_LiveVecReg( VR6 ),\n+  RegisterSaver_LiveVecReg( VR7 ),\n+  RegisterSaver_LiveVecReg( VR8 ),\n+  RegisterSaver_LiveVecReg( VR9 ),\n+  RegisterSaver_LiveVecReg( VR10 ),\n+  RegisterSaver_LiveVecReg( VR11 ),\n+  RegisterSaver_LiveVecReg( VR12 ),\n+  RegisterSaver_LiveVecReg( VR13 ),\n+  RegisterSaver_LiveVecReg( VR14 ),\n+  RegisterSaver_LiveVecReg( VR15 ),\n+  RegisterSaver_LiveVecReg( VR16 ),\n+  RegisterSaver_LiveVecReg( VR17 ),\n+  RegisterSaver_LiveVecReg( VR18 ),\n+  RegisterSaver_LiveVecReg( VR19 ),\n+  RegisterSaver_LiveVecReg( VR20 ),\n+  RegisterSaver_LiveVecReg( VR21 ),\n+  RegisterSaver_LiveVecReg( VR22 ),\n+  RegisterSaver_LiveVecReg( VR23 ),\n+  RegisterSaver_LiveVecReg( VR24 ),\n+  RegisterSaver_LiveVecReg( VR25 ),\n+  RegisterSaver_LiveVecReg( VR26 ),\n+  RegisterSaver_LiveVecReg( VR27 ),\n+  RegisterSaver_LiveVecReg( VR28 ),\n+  RegisterSaver_LiveVecReg( VR29 ),\n+  RegisterSaver_LiveVecReg( VR30 ),\n+  RegisterSaver_LiveVecReg( VR31 )\n@@ -280,1 +280,1 @@\n-  const int vsregstosave_num     = save_vectors ? (sizeof(RegisterSaver_LiveVSRegs) \/\n+  const int vecregstosave_num    = save_vectors ? (sizeof(RegisterSaver_LiveVecRegs) \/\n@@ -283,1 +283,1 @@\n-  const int register_save_size   = regstosave_num * reg_size + vsregstosave_num * vs_reg_size;\n+  const int register_save_size   = regstosave_num * reg_size + vecregstosave_num * vec_reg_size;\n@@ -301,2 +301,2 @@\n-  __ std(R31, frame_size_in_bytes -   reg_size - vsregstosave_num * vs_reg_size, R1_SP);\n-  __ std(R30, frame_size_in_bytes - 2*reg_size - vsregstosave_num * vs_reg_size, R1_SP);\n+  __ std(R31, frame_size_in_bytes -   reg_size - vecregstosave_num * vec_reg_size, R1_SP);\n+  __ std(R30, frame_size_in_bytes - 2*reg_size - vecregstosave_num * vec_reg_size, R1_SP);\n@@ -363,4 +363,4 @@\n-    assert(is_even(vsregstosave_num), \"expectation\");\n-    for (int i = 0; i < vsregstosave_num; i += 2) {\n-      int reg_num = RegisterSaver_LiveVSRegs[i].reg_num;\n-      assert(RegisterSaver_LiveVSRegs[i + 1].reg_num == reg_num + 1, \"or use other instructions!\");\n+    assert(is_even(vecregstosave_num), \"expectation\");\n+    for (int i = 0; i < vecregstosave_num; i += 2) {\n+      int reg_num = RegisterSaver_LiveVecRegs[i].reg_num;\n+      assert(RegisterSaver_LiveVecRegs[i + 1].reg_num == reg_num + 1, \"or use other instructions!\");\n@@ -368,1 +368,1 @@\n-      __ stxvp(as_VectorSRegister(reg_num), offset, R1_SP);\n+      __ stxvp(as_VectorRegister(reg_num).to_vsr(), offset, R1_SP);\n@@ -372,3 +372,3 @@\n-                              RegisterSaver_LiveVSRegs[i LITTLE_ENDIAN_ONLY(+1) ].vmreg);\n-        map->set_callee_saved(VMRegImpl::stack2reg((offset + vs_reg_size) >> 2),\n-                              RegisterSaver_LiveVSRegs[i BIG_ENDIAN_ONLY(+1) ].vmreg);\n+                              RegisterSaver_LiveVecRegs[i LITTLE_ENDIAN_ONLY(+1) ].vmreg);\n+        map->set_callee_saved(VMRegImpl::stack2reg((offset + vec_reg_size) >> 2),\n+                              RegisterSaver_LiveVecRegs[i BIG_ENDIAN_ONLY(+1) ].vmreg);\n@@ -376,1 +376,1 @@\n-      offset += (2 * vs_reg_size);\n+      offset += (2 * vec_reg_size);\n@@ -379,2 +379,2 @@\n-    for (int i = 0; i < vsregstosave_num; i++) {\n-      int reg_num = RegisterSaver_LiveVSRegs[i].reg_num;\n+    for (int i = 0; i < vecregstosave_num; i++) {\n+      int reg_num = RegisterSaver_LiveVecRegs[i].reg_num;\n@@ -383,1 +383,1 @@\n-        __ stxv(as_VectorSRegister(reg_num), offset, R1_SP);\n+        __ stxv(as_VectorRegister(reg_num)->to_vsr(), offset, R1_SP);\n@@ -386,1 +386,1 @@\n-        __ stxvd2x(as_VectorSRegister(reg_num), R31, R1_SP);\n+        __ stxvd2x(as_VectorRegister(reg_num)->to_vsr(), R31, R1_SP);\n@@ -390,1 +390,1 @@\n-        VMReg vsr = RegisterSaver_LiveVSRegs[i].vmreg;\n+        VMReg vsr = RegisterSaver_LiveVecRegs[i].vmreg;\n@@ -393,1 +393,1 @@\n-      offset += vs_reg_size;\n+      offset += vec_reg_size;\n@@ -414,1 +414,1 @@\n-  const int vsregstosave_num     = save_vectors ? (sizeof(RegisterSaver_LiveVSRegs) \/\n+  const int vecregstosave_num    = save_vectors ? (sizeof(RegisterSaver_LiveVecRegs) \/\n@@ -417,1 +417,1 @@\n-  const int register_save_size   = regstosave_num * reg_size + vsregstosave_num * vs_reg_size;\n+  const int register_save_size   = regstosave_num * reg_size + vecregstosave_num * vec_reg_size;\n@@ -459,3 +459,3 @@\n-    for (int i = 0; i < vsregstosave_num; i += 2) {\n-      int reg_num  = RegisterSaver_LiveVSRegs[i].reg_num;\n-      assert(RegisterSaver_LiveVSRegs[i + 1].reg_num == reg_num + 1, \"or use other instructions!\");\n+    for (int i = 0; i < vecregstosave_num; i += 2) {\n+      int reg_num  = RegisterSaver_LiveVecRegs[i].reg_num;\n+      assert(RegisterSaver_LiveVecRegs[i + 1].reg_num == reg_num + 1, \"or use other instructions!\");\n@@ -463,1 +463,1 @@\n-      __ lxvp(as_VectorSRegister(reg_num), offset, R1_SP);\n+      __ lxvp(as_VectorRegister(reg_num).to_vsr(), offset, R1_SP);\n@@ -465,1 +465,1 @@\n-      offset += (2 * vs_reg_size);\n+      offset += (2 * vec_reg_size);\n@@ -468,2 +468,2 @@\n-    for (int i = 0; i < vsregstosave_num; i++) {\n-      int reg_num  = RegisterSaver_LiveVSRegs[i].reg_num;\n+    for (int i = 0; i < vecregstosave_num; i++) {\n+      int reg_num  = RegisterSaver_LiveVecRegs[i].reg_num;\n@@ -472,1 +472,1 @@\n-        __ lxv(as_VectorSRegister(reg_num), offset, R1_SP);\n+        __ lxv(as_VectorRegister(reg_num).to_vsr(), offset, R1_SP);\n@@ -475,1 +475,1 @@\n-        __ lxvd2x(as_VectorSRegister(reg_num), R31, R1_SP);\n+        __ lxvd2x(as_VectorRegister(reg_num).to_vsr(), R31, R1_SP);\n@@ -478,1 +478,1 @@\n-      offset += vs_reg_size;\n+      offset += vec_reg_size;\n@@ -489,1 +489,1 @@\n-  __ ld(R31, frame_size_in_bytes - reg_size - vsregstosave_num * vs_reg_size, R1_SP);\n+  __ ld(R31, frame_size_in_bytes - reg_size - vecregstosave_num * vec_reg_size, R1_SP);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":70,"deletions":70,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  for ( ; i < ConcreteRegisterImpl::max_vsr; ) {\n+  for ( ; i < ConcreteRegisterImpl::max_vr; ) {\n","filename":"src\/hotspot\/cpu\/ppc\/vmreg_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-inline bool is_VectorSRegister() {\n+inline bool is_VectorRegister() {\n@@ -40,1 +40,1 @@\n-         value() < ConcreteRegisterImpl::max_vsr;\n+         value() < ConcreteRegisterImpl::max_vr;\n@@ -44,1 +44,1 @@\n-  return value() >= ConcreteRegisterImpl::max_vsr &&\n+  return value() >= ConcreteRegisterImpl::max_vr &&\n@@ -63,3 +63,3 @@\n-inline VectorSRegister as_VectorSRegister() {\n-  assert(is_VectorSRegister(), \"must be\");\n-  return ::as_VectorSRegister((value() - ConcreteRegisterImpl::max_fpr) >> 2);\n+inline VectorRegister as_VectorRegister() {\n+  assert(is_VectorRegister(), \"must be\");\n+  return ::as_VectorRegister((value() - ConcreteRegisterImpl::max_fpr) >> 2);\n@@ -71,1 +71,1 @@\n-  if (is_VectorSRegister()) {\n+  if (is_VectorRegister()) {\n","filename":"src\/hotspot\/cpu\/ppc\/vmreg_ppc.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-inline VMReg VectorSRegister::as_VMReg() const {\n+inline VMReg VectorRegister::as_VMReg() const {\n@@ -49,1 +49,1 @@\n-  return VMRegImpl::as_VMReg((encoding()) + ConcreteRegisterImpl::max_vsr);\n+  return VMRegImpl::as_VMReg((encoding()) + ConcreteRegisterImpl::max_vr);\n","filename":"src\/hotspot\/cpu\/ppc\/vmreg_ppc.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}