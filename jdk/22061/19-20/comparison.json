{"files":[{"patch":"@@ -465,1 +465,1 @@\n-  const TypeClass* tl = t->cast<TypeClass>();\n+  const TypeClass* type_divisor = t->cast<TypeClass>();\n@@ -469,1 +469,1 @@\n-  if (div->in(0) != nullptr && (tl->_hi < 0 || tl->_lo > 0)) {\n+  if (div->in(0) != nullptr && (type_divisor->_hi < 0 || type_divisor->_lo > 0)) {\n@@ -474,1 +474,1 @@\n-  if (!tl->is_con()) {\n+  if (!type_divisor->is_con()) {\n@@ -477,1 +477,1 @@\n-  Unsigned l = static_cast<Unsigned>(tl->get_con()); \/\/ Get divisor\n+  Unsigned divisor = static_cast<Unsigned>(type_divisor->get_con()); \/\/ Get divisor\n@@ -479,1 +479,1 @@\n-  if (l == 0 || l == 1) {\n+  if (divisor == 0 || divisor == 1) {\n@@ -483,2 +483,2 @@\n-  if (is_power_of_2(l)) {\n-    return make_urshift<TypeClass>(div->in(1), phase->intcon(log2i_graceful(l)));\n+  if (is_power_of_2(divisor)) {\n+    return make_urshift<TypeClass>(div->in(1), phase->intcon(log2i_graceful(divisor)));\n@@ -1139,1 +1139,1 @@\n-  const TypeClass* ti = t->cast<TypeClass>();\n+  const TypeClass* type_divisor = t->cast<TypeClass>();\n@@ -1143,1 +1143,1 @@\n-  if (mod->in(0) != nullptr && (ti->_hi < 0 || ti->_lo > 0)) {\n+  if (mod->in(0) != nullptr && (type_divisor->_hi < 0 || type_divisor->_lo > 0)) {\n@@ -1148,1 +1148,1 @@\n-  if (!ti->is_con()) {\n+  if (!type_divisor->is_con()) {\n@@ -1151,1 +1151,1 @@\n-  Unsigned con = static_cast<Unsigned>(ti->get_con());\n+  Unsigned divisor = static_cast<Unsigned>(type_divisor->get_con());\n@@ -1153,1 +1153,1 @@\n-  if (con == 0) {\n+  if (divisor == 0) {\n@@ -1157,2 +1157,2 @@\n-  if (is_power_of_2(con)) {\n-    return make_and<TypeClass>(mod->in(1), phase->makecon(TypeClass::make(con - 1)));\n+  if (is_power_of_2(divisor)) {\n+    return make_and<TypeClass>(mod->in(1), phase->makecon(TypeClass::make(divisor - 1)));\n@@ -1191,2 +1191,2 @@\n-  const TypeClass* i2 = t2->cast<TypeClass>();\n-  if (i2->is_con() && i2->get_con() == 1) {\n+  const TypeClass* type_divisor = t2->cast<TypeClass>();\n+  if (type_divisor->is_con() && type_divisor->get_con() == 1) {\n@@ -1196,4 +1196,4 @@\n-  const TypeClass* i1 = t1->cast<TypeClass>();\n-  if (i1->is_con() && i2->is_con()) {\n-    Unsigned au = static_cast<Unsigned>(i1->get_con());\n-    Unsigned bu = static_cast<Unsigned>(i2->get_con());\n+  const TypeClass* type_dividend = t1->cast<TypeClass>();\n+  if (type_dividend->is_con() && type_divisor->is_con()) {\n+    Unsigned au = static_cast<Unsigned>(type_dividend->get_con());\n+    Unsigned bu = static_cast<Unsigned>(type_divisor->get_con());\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}