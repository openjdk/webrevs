{"files":[{"patch":"@@ -450,26 +450,0 @@\n-template <typename TypeClass>\n-Node* make_and(Node* a, Node* b);\n-\n-template <>\n-Node* make_and<TypeLong>(Node* a, Node* b) {\n-  return new AndLNode(a, b);\n-}\n-\n-template <>\n-Node* make_and<TypeInt>(Node* a, Node* b) {\n-  return new AndINode(a, b);\n-}\n-\n-template <typename TypeClass>\n-Node* make_urshift(Node* a, Node* b);\n-\n-template <>\n-Node* make_urshift<TypeLong>(Node* a, Node* b) {\n-  return new URShiftLNode(a, b);\n-}\n-\n-template <>\n-Node* make_urshift<TypeInt>(Node* a, Node* b) {\n-  return new URShiftINode(a, b);\n-}\n-\n@@ -479,1 +453,1 @@\n-  if (div->in(0) && div->remove_dead_region(phase, can_reshape)) {\n+  if (div->in(0) != nullptr && div->remove_dead_region(phase, can_reshape)) {\n@@ -483,1 +457,1 @@\n-  if (div->in(0) && div->in(0)->is_top()) {\n+  if (div->in(0) != nullptr && div->in(0)->is_top()) {\n@@ -495,1 +469,1 @@\n-  if (div->in(0) && (tl->_hi < 0 || tl->_lo > 0)) {\n+  if (div->in(0) != nullptr && (tl->_hi < 0 || tl->_lo > 0)) {\n@@ -1152,1 +1126,1 @@\n-  if (mod->in(0) && mod->remove_dead_region(phase, can_reshape)) {\n+  if (mod->in(0) != nullptr && mod->remove_dead_region(phase, can_reshape)) {\n@@ -1156,1 +1130,1 @@\n-  if (mod->in(0) && mod->in(0)->is_top()) {\n+  if (mod->in(0) != nullptr && mod->in(0)->is_top()) {\n@@ -1169,1 +1143,1 @@\n-  if (mod->in(0) && (ti->_hi < 0 || ti->_lo > 0)) {\n+  if (mod->in(0) != nullptr && (ti->_hi < 0 || ti->_lo > 0)) {\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":6,"deletions":32,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -229,0 +229,13 @@\n+template <typename TypeClass>\n+Node* make_and(Node* a, Node* b);\n+\n+template <>\n+inline Node* make_and<TypeLong>(Node* a, Node* b) {\n+  return new AndLNode(a, b);\n+}\n+\n+template <>\n+inline Node* make_and<TypeInt>(Node* a, Node* b) {\n+  return new AndINode(a, b);\n+}\n+\n@@ -361,0 +374,13 @@\n+template <typename TypeClass>\n+Node* make_urshift(Node* a, Node* b);\n+\n+template <>\n+inline Node* make_urshift<TypeLong>(Node* a, Node* b) {\n+  return new URShiftLNode(a, b);\n+}\n+\n+template <>\n+inline Node* make_urshift<TypeInt>(Node* a, Node* b) {\n+  return new URShiftINode(a, b);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        TestFramework.runWithFlags(\"-XX:CompileCommand=inline,*Math::max\");\n+        TestFramework.run();\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/ModINodeIdealizationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-        Asserts.assertEQ(a % 8589934592L, powerOf2(a));\n-        Asserts.assertEQ(a % 8589934591L, powerOf2Minus1(a));\n+        Asserts.assertEQ(a % (1L << 33), powerOf2(a));\n+        Asserts.assertEQ(a % ((1L << 33) - 1), powerOf2Minus1(a));\n@@ -96,1 +96,1 @@\n-        return x % 8589934592L;\n+        return x % (1L << 33);\n@@ -112,1 +112,1 @@\n-        return x % 8589934591L;\n+        return x % ((1L << 33) - 1);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/ModLNodeIdealizationTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -72,2 +72,2 @@\n-        Asserts.assertEQ(Long.remainderUnsigned(a, 8589934592L), powerOf2(a));\n-        Asserts.assertEQ(Long.remainderUnsigned(Long.parseUnsignedLong(\"9223372036854775808\"), 302032), reallyConstant());\n+        Asserts.assertEQ(Long.remainderUnsigned(a, 1L << 33), powerOf2(a));\n+        Asserts.assertEQ(Long.remainderUnsigned(Long.MIN_VALUE, 302032), reallyConstant());\n@@ -97,1 +97,1 @@\n-        return Long.remainderUnsigned(-9223372036854775808L, 302032); \/\/ -9223372036854775808 =  Long.parseUnsignedLong(\"9223372036854775808\")\n+        return Long.remainderUnsigned(Long.MIN_VALUE, 302032);\n@@ -105,1 +105,1 @@\n-        return Long.remainderUnsigned(x, 8589934592L);\n+        return Long.remainderUnsigned(x, 1L << 33);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/UModLNodeIdealizationTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}