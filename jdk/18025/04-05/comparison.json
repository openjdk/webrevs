{"files":[{"patch":"@@ -552,3 +552,0 @@\n-        final Subject[] delegationSubjects = new Subject[] {\n-            delegationSubject\n-        };\n@@ -557,1 +554,1 @@\n-                addListenersWithSubjects(names,filters,delegationSubjects,\n+                addListenersWithSubjects(names,filters,null,\n@@ -583,1 +580,1 @@\n-                    delegationSubjects);\n+                    null);\n@@ -591,1 +588,1 @@\n-                        delegationSubjects);\n+                        null);\n@@ -1229,2 +1226,1 @@\n-                    filter, handback,\n-                    null);\n+                    filter, handback);\n@@ -1423,1 +1419,0 @@\n-            final Subject[] subjects = new Subject[] {null};\n@@ -1428,1 +1423,1 @@\n-                        subjects);\n+                        null);\n@@ -1436,1 +1431,1 @@\n-                        subjects);\n+                        null);\n@@ -1554,1 +1549,0 @@\n-            final Subject[] subjects = new Subject[len];\n@@ -1563,1 +1557,0 @@\n-                subjects[i]  = old[i].getDelegationSubject();\n@@ -1572,1 +1565,1 @@\n-                Integer[] ids = addListenersWithSubjects(names,mFilters,subjects,false);\n+                Integer[] ids = addListenersWithSubjects(names,mFilters,null,false);\n@@ -1579,2 +1572,1 @@\n-                            handbacks[i],\n-                            subjects[i]);\n+                            handbacks[i]);\n@@ -1595,1 +1587,1 @@\n-                            subjects[i],\n+                            null,\n@@ -1602,2 +1594,1 @@\n-                            handbacks[i],\n-                            subjects[i]);\n+                            handbacks[i]);\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnector.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,0 @@\n-import javax.security.auth.Subject;\n-\n-\n@@ -46,2 +43,1 @@\n-                              Object handback,\n-                              Subject delegationSubject) {\n+                              Object handback) {\n@@ -53,1 +49,0 @@\n-        this.delegationSubject = delegationSubject;\n@@ -76,5 +71,0 @@\n-    public Subject getDelegationSubject() {\n-        return delegationSubject;\n-    }\n-\n-\n@@ -105,1 +95,0 @@\n-    private final Subject delegationSubject;\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientListenerInfo.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024 Oracle and\/or its affiliates. All rights reserved.\n@@ -170,2 +170,1 @@\n-                                        Object handback,\n-                                        Subject delegationSubject)\n+                                        Object handback)\n@@ -184,3 +183,1 @@\n-                                            handback,\n-                                            delegationSubject));\n-\n+                                            handback));\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientNotifForwarder.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-     * is specifed. Subject Delegation has been removed.\n+     * is specified. Subject Delegation has been removed.\n@@ -156,3 +156,1 @@\n-     * and is only useful in conjunction with other APIs which are deprecated and\n-     * subject to removal in a future release. Consequently, this method is also\n-     * deprecated and subject to removal. There is no replacement.\n+     * which has been removed.  There is no replacement.\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXConnector.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-        assertTrue(\"No connections in new connector server\", rmiServer.connections.isEmpty());\n+        assertTrue(\"Expected no connections in new connector server\", rmiServer.connections.isEmpty());\n@@ -82,1 +82,1 @@\n-        assertTrue(\"One connection on server after client connect\", rmiServer.connections.size() == 1);\n+        assertTrue(\"Expected one connection on server after client connect\", rmiServer.connections.size() == 1);\n@@ -91,1 +91,1 @@\n-        assertTrue(\"Server listenerMap initially empty\", mapWithoutKey(listenerMap, delegateName).isEmpty());\n+        assertTrue(\"Expected server listenerMap initially empty\", mapWithoutKey(listenerMap, delegateName).isEmpty());\n@@ -107,1 +107,1 @@\n-        assertTrue(\"One entry in listenerMap for two listeners on same MBean\", mapWithoutKey(listenerMap, delegateName).size() == 1);\n+        assertTrue(\"Expected one entry in listenerMap for two listeners on same MBean\", mapWithoutKey(listenerMap, delegateName).size() == 1);\n@@ -109,1 +109,1 @@\n-        assertTrue(\"Set in listenerMap for MBean has two elements\", set != null && set.size() == 2);\n+        assertTrue(\"Expected Set in listenerMap for MBean to have two elements\", set != null && set.size() == 2);\n@@ -111,2 +111,2 @@\n-        assertTrue(\"Initial value of count1 == 0\", count1Val.get() == 0);\n-        assertTrue(\"Initial value of count2 == 0\", count2Val.get() == 0);\n+        assertTrue(\"Initial value of count1 should be 0\", count1Val.get() == 0);\n+        assertTrue(\"Initial value of count2 should be 0\", count2Val.get() == 0);\n@@ -122,2 +122,2 @@\n-        assertTrue(\"New value of count1 == 1\", count1Val.get() == 1);\n-        assertTrue(\"Initial value of count2 == 1\", count2Val.get() == 1);\n+        assertTrue(\"Value of count1 expected 1, got \" + count1Val.get(), count1Val.get() == 1);\n+        assertTrue(\"Value of count2 expected 1, got \" + count2Val.get(), count2Val.get() == 1);\n@@ -149,2 +149,2 @@\n-        assertTrue(\"New value of count1 == 1\", count1Val.get() == 1);\n-        assertTrue(\"Initial value of count2 == 1\", count2Val.get() == 1);\n+        assertTrue(\"Value of count1 expected 1, got \" + count1Val.get(), count1Val.get() == 1);\n+        assertTrue(\"Value of count2 expected 1, got \" + count2Val.get(), count2Val.get() == 1);\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/notif\/DeadListenerTest.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}