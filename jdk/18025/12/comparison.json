{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,0 +84,5 @@\n+ * <p>JMX Subject Delegation has been removed. All methods that take a\n+ * delegationSubject parameter will throw {@code UnsupportedOperationException}\n+ * if it is non-null. This parameter is kept for interoperability with older\n+ * remote clients.\n+ *\n@@ -126,3 +131,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -155,2 +158,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -158,0 +161,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -178,3 +182,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -209,2 +211,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -212,0 +214,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -241,3 +244,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -270,2 +271,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -273,0 +274,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -304,3 +306,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -335,2 +335,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -338,0 +338,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -359,3 +360,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -373,2 +372,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -376,0 +375,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -388,3 +388,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -402,1 +400,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -405,0 +404,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -423,3 +423,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -431,2 +429,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -434,0 +432,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -454,3 +453,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -462,2 +459,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -465,0 +462,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -477,3 +475,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -487,2 +483,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -490,0 +486,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -498,3 +495,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -504,2 +499,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -507,0 +502,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -520,3 +516,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -541,2 +535,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -544,0 +538,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -565,3 +560,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -578,2 +571,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -581,0 +574,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -603,3 +597,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -622,2 +614,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -625,0 +617,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -650,3 +643,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -664,2 +655,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -667,0 +658,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -696,3 +688,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -710,2 +700,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -716,0 +706,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -732,3 +723,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -738,2 +727,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -741,0 +730,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -749,3 +739,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -755,2 +743,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -758,0 +746,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -767,3 +756,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -780,2 +767,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -786,0 +773,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -801,3 +789,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -810,2 +796,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -816,0 +802,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -842,3 +829,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -854,2 +839,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -857,0 +842,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -877,3 +863,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -885,2 +869,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -891,0 +875,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -918,3 +903,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -927,2 +910,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to perform this operation.\n+     * @throws SecurityException if the client does not have permission\n+     * to perform this operation.\n@@ -933,0 +916,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -975,6 +959,1 @@\n-     * @param delegationSubjects the <code>Subjects<\/code> on behalf\n-     * of which the listeners are being added.  Elements of this array\n-     * can be null.  Also, the <code>delegationSubjects<\/code>\n-     * parameter itself can be null, which is equivalent to an array\n-     * of null values with the same size as the <code>names<\/code> and\n-     * <code>filters<\/code> arrays.\n+     * @param delegationSubjects must be {@code null}.\n@@ -996,2 +975,1 @@\n-     * client, or the delegated Subject if any, does not have\n-     * permission to add a listener.\n+     * client does not have permission to add a listener.\n@@ -999,0 +977,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n@@ -1025,3 +1004,1 @@\n-     * @param delegationSubject The <code>Subject<\/code> containing the\n-     * delegation principals or <code>null<\/code> if the authentication\n-     * principal is used instead.\n+     * @param delegationSubject must be {@code null}.\n@@ -1035,2 +1012,2 @@\n-     * @throws SecurityException if the client, or the delegated Subject\n-     * if any, does not have permission to remove the listeners.\n+     * @throws SecurityException if the client does not have permission\n+     * to remove the listeners.\n@@ -1041,0 +1018,1 @@\n+     * @throws UnsupportedOperationException if {@code delegationSubject} is non-null.\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnection.java","additions":101,"deletions":123,"binary":false,"changes":224,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-import com.sun.jmx.remote.security.SubjectDelegator;\n@@ -113,1 +112,0 @@\n-        this.subjectDelegator = new SubjectDelegator();\n@@ -117,1 +115,0 @@\n-            this.removeCallerContext = false;\n@@ -119,9 +116,3 @@\n-            this.removeCallerContext =\n-                SubjectDelegator.checkRemoveCallerContext(subject);\n-            if (this.removeCallerContext) {\n-                this.acc =\n-                    JMXSubjectDomainCombiner.getDomainCombinerContext(subject);\n-            } else {\n-                this.acc =\n-                    JMXSubjectDomainCombiner.getContext(subject);\n-            }\n+            \/\/ An authenticated Subject was provided.\n+            \/\/ Subject Delegation has been removed.\n+            this.acc = JMXSubjectDomainCombiner.getContext(subject);\n@@ -239,0 +230,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -281,0 +273,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -329,0 +322,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -389,0 +383,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -456,0 +451,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -484,0 +480,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -514,0 +511,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -549,0 +547,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -584,0 +583,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -601,0 +601,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -622,0 +623,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -659,0 +661,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -691,0 +694,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -744,0 +748,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -790,0 +795,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -847,0 +853,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -868,0 +875,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -888,0 +896,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -923,0 +932,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -953,0 +963,2 @@\n+\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -962,3 +974,4 @@\n-\n-        Subject[] sbjs = (delegationSubjects != null) ? delegationSubjects :\n-        new Subject[names.length];\n+        if (delegationSubjects != null) {\n+            throw new UnsupportedOperationException(\"Subject Delegation has been removed.\");\n+        }\n+        Subject[] sbjs = new Subject[names.length];\n@@ -1040,0 +1053,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -1099,0 +1113,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -1140,0 +1155,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -1176,0 +1192,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -1378,0 +1395,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -1384,0 +1402,5 @@\n+        \/\/ Subject Delegation is removed: locally this is caught earlier, in getMBeanServerConnection,\n+        \/\/ but remote connections call into RMIConnectionImpl over RMI, so deny them here:\n+        if (delegationSubject != null) {\n+            throw new UnsupportedOperationException(\"Subject Delegation has been removed.\");\n+        }\n@@ -1386,18 +1409,2 @@\n-\n-            final AccessControlContext reqACC;\n-            if (delegationSubject == null)\n-                reqACC = acc;\n-            else {\n-                if (subject == null) {\n-                    final String msg =\n-                        \"Subject delegation cannot be enabled unless \" +\n-                        \"an authenticated subject is put in place\";\n-                    throw new SecurityException(msg);\n-                }\n-                reqACC = subjectDelegator.delegatedContext(\n-                    acc, delegationSubject, removeCallerContext);\n-            }\n-\n-            PrivilegedOperation op =\n-                new PrivilegedOperation(operation, params);\n-            if (reqACC == null) {\n+            PrivilegedOperation op = new PrivilegedOperation(operation, params);\n+            if (acc == null) {\n@@ -1412,1 +1419,1 @@\n-                return AccessController.doPrivileged(op, reqACC);\n+                return AccessController.doPrivileged(op, acc);\n@@ -1566,0 +1573,6 @@\n+\n+        \/\/ Subject Delegation is removed: locally this is caught earlier, in getMBeanServerConnection,\n+        \/\/ but remote connections call into RMIConnectionImpl over RMI, so deny them here:\n+        if (delegationSubject != null) {\n+            throw new UnsupportedOperationException(\"Subject Delegation has been removed.\");\n+        }\n@@ -1572,14 +1585,1 @@\n-                final AccessControlContext reqACC;\n-                if (delegationSubject == null)\n-                    reqACC = acc;\n-                else {\n-                    if (subject == null) {\n-                        final String msg =\n-                            \"Subject delegation cannot be enabled unless \" +\n-                            \"an authenticated subject is put in place\";\n-                        throw new SecurityException(msg);\n-                    }\n-                    reqACC = subjectDelegator.delegatedContext(\n-                        acc, delegationSubject, removeCallerContext);\n-                }\n-                if(reqACC != null){\n+                if (acc != null) {\n@@ -1588,1 +1588,1 @@\n-                                    wrappedClass.cast(mo.get()), reqACC);\n+                                    wrappedClass.cast(mo.get()), acc);\n@@ -1707,4 +1707,0 @@\n-    private final SubjectDelegator subjectDelegator;\n-\n-    private final boolean removeCallerContext;\n-\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnectionImpl.java","additions":50,"deletions":54,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -133,0 +134,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -164,0 +166,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -187,0 +190,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -212,0 +216,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -237,0 +242,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -278,0 +284,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -301,0 +308,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -335,0 +343,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -350,0 +359,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -365,0 +375,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -380,0 +391,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -401,0 +413,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -418,0 +431,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -439,0 +453,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -456,0 +471,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -471,0 +487,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -486,0 +503,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -501,0 +519,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -519,0 +538,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -537,0 +557,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -555,0 +576,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -579,0 +601,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n@@ -598,0 +621,1 @@\n+    \/** @throws UnsupportedOperationException {@inheritDoc} *\/\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnectionImpl_Stub.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -388,10 +388,1 @@\n-    public synchronized MBeanServerConnection getMBeanServerConnection()\n-    throws IOException {\n-        return getMBeanServerConnection(null);\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n-    public synchronized MBeanServerConnection\n-            getMBeanServerConnection(Subject delegationSubject)\n-            throws IOException {\n-\n+    public synchronized MBeanServerConnection getMBeanServerConnection() throws IOException {\n@@ -409,2 +400,1 @@\n-\n-        return getConnectionWithSubject(delegationSubject);\n+        return getConnection();\n@@ -519,4 +509,0 @@\n-        \/\/ Clean up MBeanServerConnection table\n-        \/\/\n-        rmbscMap.clear();\n-\n@@ -566,3 +552,0 @@\n-        final Subject[] delegationSubjects = new Subject[] {\n-            delegationSubject\n-        };\n@@ -571,1 +554,1 @@\n-                addListenersWithSubjects(names,filters,delegationSubjects,\n+                addListenersWithSubjects(names,filters,null,\n@@ -597,1 +580,1 @@\n-                    delegationSubjects);\n+                    null);\n@@ -605,1 +588,1 @@\n-                        delegationSubjects);\n+                        null);\n@@ -626,1 +609,0 @@\n-        private Subject delegationSubject;\n@@ -629,5 +611,0 @@\n-            this(null);\n-        }\n-\n-        public RemoteMBeanServerConnection(Subject delegationSubject) {\n-            this.delegationSubject = delegationSubject;\n@@ -653,1 +630,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -659,1 +636,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -687,1 +664,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -695,1 +672,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -725,1 +702,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -733,1 +710,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -765,1 +742,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -774,1 +751,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -789,1 +766,1 @@\n-                connection.unregisterMBean(name, delegationSubject);\n+                connection.unregisterMBean(name, null);\n@@ -793,1 +770,1 @@\n-                connection.unregisterMBean(name, delegationSubject);\n+                connection.unregisterMBean(name, null);\n@@ -807,1 +784,1 @@\n-                return connection.getObjectInstance(name, delegationSubject);\n+                return connection.getObjectInstance(name, null);\n@@ -811,1 +788,1 @@\n-                return connection.getObjectInstance(name, delegationSubject);\n+                return connection.getObjectInstance(name, null);\n@@ -827,1 +804,1 @@\n-                return connection.queryMBeans(name, sQuery, delegationSubject);\n+                return connection.queryMBeans(name, sQuery, null);\n@@ -831,1 +808,1 @@\n-                return connection.queryMBeans(name, sQuery, delegationSubject);\n+                return connection.queryMBeans(name, sQuery, null);\n@@ -847,1 +824,1 @@\n-                return connection.queryNames(name, sQuery, delegationSubject);\n+                return connection.queryNames(name, sQuery, null);\n@@ -851,1 +828,1 @@\n-                return connection.queryNames(name, sQuery, delegationSubject);\n+                return connection.queryNames(name, sQuery, null);\n@@ -864,1 +841,1 @@\n-                return connection.isRegistered(name, delegationSubject);\n+                return connection.isRegistered(name, null);\n@@ -868,1 +845,1 @@\n-                return connection.isRegistered(name, delegationSubject);\n+                return connection.isRegistered(name, null);\n@@ -880,1 +857,1 @@\n-                return connection.getMBeanCount(delegationSubject);\n+                return connection.getMBeanCount(null);\n@@ -884,1 +861,1 @@\n-                return connection.getMBeanCount(delegationSubject);\n+                return connection.getMBeanCount(null);\n@@ -905,1 +882,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -911,1 +888,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -930,1 +907,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -937,1 +914,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -961,1 +938,1 @@\n-                connection.setAttribute(name, sAttribute, delegationSubject);\n+                connection.setAttribute(name, sAttribute, null);\n@@ -965,1 +942,1 @@\n-                connection.setAttribute(name, sAttribute, delegationSubject);\n+                connection.setAttribute(name, sAttribute, null);\n@@ -989,1 +966,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -995,1 +972,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1024,1 +1001,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1032,1 +1009,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1045,1 +1022,1 @@\n-                return connection.getDefaultDomain(delegationSubject);\n+                return connection.getDefaultDomain(null);\n@@ -1049,1 +1026,1 @@\n-                return connection.getDefaultDomain(delegationSubject);\n+                return connection.getDefaultDomain(null);\n@@ -1060,1 +1037,1 @@\n-                return connection.getDomains(delegationSubject);\n+                return connection.getDomains(null);\n@@ -1064,1 +1041,1 @@\n-                return connection.getDomains(delegationSubject);\n+                return connection.getDomains(null);\n@@ -1079,1 +1056,1 @@\n-                return connection.getMBeanInfo(name, delegationSubject);\n+                return connection.getMBeanInfo(name, null);\n@@ -1083,1 +1060,1 @@\n-                return connection.getMBeanInfo(name, delegationSubject);\n+                return connection.getMBeanInfo(name, null);\n@@ -1102,1 +1079,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1108,1 +1085,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1137,1 +1114,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1145,1 +1122,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1166,1 +1143,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1172,1 +1149,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1203,1 +1180,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1211,1 +1188,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1240,1 +1217,1 @@\n-                    delegationSubject,true);\n+                    null, true);\n@@ -1242,2 +1219,1 @@\n-                    filter, handback,\n-                    delegationSubject);\n+                    filter, handback);\n@@ -1270,1 +1246,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1276,1 +1252,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1312,1 +1288,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1318,1 +1294,1 @@\n-                        delegationSubject);\n+                        null);\n@@ -1436,1 +1412,0 @@\n-            final Subject[] subjects = new Subject[] {null};\n@@ -1441,1 +1416,1 @@\n-                        subjects);\n+                        null);\n@@ -1449,1 +1424,1 @@\n-                        subjects);\n+                        null);\n@@ -1567,1 +1542,0 @@\n-            final Subject[] subjects = new Subject[len];\n@@ -1576,1 +1550,0 @@\n-                subjects[i]  = old[i].getDelegationSubject();\n@@ -1585,1 +1558,1 @@\n-                Integer[] ids = addListenersWithSubjects(names,mFilters,subjects,false);\n+                Integer[] ids = addListenersWithSubjects(names,mFilters,null,false);\n@@ -1592,2 +1565,1 @@\n-                            handbacks[i],\n-                            subjects[i]);\n+                            handbacks[i]);\n@@ -1608,1 +1580,1 @@\n-                            subjects[i],\n+                            null,\n@@ -1615,2 +1587,1 @@\n-                            handbacks[i],\n-                            subjects[i]);\n+                            handbacks[i]);\n@@ -1748,1 +1719,0 @@\n-        rmbscMap = new WeakHashMap<Subject, WeakReference<MBeanServerConnection>>();\n@@ -1896,1 +1866,1 @@\n-    private MBeanServerConnection getConnectionWithSubject(Subject delegationSubject) {\n+    private MBeanServerConnection getConnection() {\n@@ -1899,12 +1869,4 @@\n-        if (delegationSubject == null) {\n-            if (nullSubjectConnRef == null\n-                    || (conn = nullSubjectConnRef.get()) == null) {\n-                conn = new RemoteMBeanServerConnection(null);\n-                nullSubjectConnRef = new WeakReference<MBeanServerConnection>(conn);\n-            }\n-        } else {\n-            WeakReference<MBeanServerConnection> wr = rmbscMap.get(delegationSubject);\n-            if (wr == null || (conn = wr.get()) == null) {\n-                conn = new RemoteMBeanServerConnection(delegationSubject);\n-                rmbscMap.put(delegationSubject, new WeakReference<MBeanServerConnection>(conn));\n-            }\n+        if (nullSubjectConnRef == null\n+                || (conn = nullSubjectConnRef.get()) == null) {\n+            conn = new RemoteMBeanServerConnection();\n+            nullSubjectConnRef = new WeakReference<MBeanServerConnection>(conn);\n@@ -2282,1 +2244,0 @@\n-    private transient WeakHashMap<Subject, WeakReference<MBeanServerConnection>> rmbscMap;\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnector.java","additions":67,"deletions":106,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,0 @@\n-import javax.security.auth.Subject;\n-\n-\n@@ -46,2 +43,1 @@\n-                              Object handback,\n-                              Subject delegationSubject) {\n+                              Object handback) {\n@@ -53,1 +49,0 @@\n-        this.delegationSubject = delegationSubject;\n@@ -76,5 +71,0 @@\n-    public Subject getDelegationSubject() {\n-        return delegationSubject;\n-    }\n-\n-\n@@ -105,1 +95,0 @@\n-    private final Subject delegationSubject;\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientListenerInfo.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,2 +170,1 @@\n-                                        Object handback,\n-                                        Subject delegationSubject)\n+                                        Object handback)\n@@ -184,3 +183,1 @@\n-                                            handback,\n-                                            delegationSubject));\n-\n+                                            handback));\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientNotifForwarder.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,128 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.jmx.remote.security;\n-\n-import java.security.AccessController;\n-import java.security.AccessControlContext;\n-import java.security.Permission;\n-import java.security.Principal;\n-import java.security.PrivilegedAction;\n-import javax.security.auth.Subject;\n-\n-import javax.management.remote.SubjectDelegationPermission;\n-\n-import java.util.*;\n-\n-public class SubjectDelegator {\n-    \/* Return the AccessControlContext appropriate to execute an\n-       operation on behalf of the delegatedSubject.  If the\n-       authenticatedAccessControlContext does not have permission to\n-       delegate to that subject, throw SecurityException.  *\/\n-    @SuppressWarnings(\"removal\")\n-    public AccessControlContext\n-        delegatedContext(AccessControlContext authenticatedACC,\n-                         Subject delegatedSubject,\n-                         boolean removeCallerContext)\n-            throws SecurityException {\n-\n-        if (System.getSecurityManager() != null && authenticatedACC == null) {\n-            throw new SecurityException(\"Illegal AccessControlContext: null\");\n-        }\n-\n-        \/\/ Check if the subject delegation permission allows the\n-        \/\/ authenticated subject to assume the identity of each\n-        \/\/ principal in the delegated subject\n-        \/\/\n-        Collection<Principal> ps = getSubjectPrincipals(delegatedSubject);\n-        final Collection<Permission> permissions = new ArrayList<>(ps.size());\n-        for(Principal p : ps) {\n-            final String pname = p.getClass().getName() + \".\" + p.getName();\n-            permissions.add(new SubjectDelegationPermission(pname));\n-        }\n-        PrivilegedAction<Void> action =\n-            new PrivilegedAction<>() {\n-                public Void run() {\n-                    for (Permission sdp : permissions) {\n-                        AccessController.checkPermission(sdp);\n-                    }\n-                    return null;\n-                }\n-            };\n-        AccessController.doPrivileged(action, authenticatedACC);\n-\n-        return getDelegatedAcc(delegatedSubject, removeCallerContext);\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n-    private AccessControlContext getDelegatedAcc(Subject delegatedSubject, boolean removeCallerContext) {\n-        if (removeCallerContext) {\n-            return JMXSubjectDomainCombiner.getDomainCombinerContext(delegatedSubject);\n-        } else {\n-            return JMXSubjectDomainCombiner.getContext(delegatedSubject);\n-        }\n-    }\n-\n-    \/**\n-     * Check if the connector server creator can assume the identity of each\n-     * principal in the authenticated subject, i.e. check if the connector\n-     * server creator codebase contains a subject delegation permission for\n-     * each principal present in the authenticated subject.\n-     *\n-     * @return {@code true} if the connector server creator can delegate to all\n-     * the authenticated principals in the subject. Otherwise, {@code false}.\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    public static synchronized boolean\n-        checkRemoveCallerContext(Subject subject) {\n-        try {\n-            for (Principal p : getSubjectPrincipals(subject)) {\n-                final String pname =\n-                    p.getClass().getName() + \".\" + p.getName();\n-                final Permission sdp =\n-                    new SubjectDelegationPermission(pname);\n-                AccessController.checkPermission(sdp);\n-            }\n-        } catch (SecurityException e) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    \/**\n-     * Retrieves the {@linkplain Subject} principals\n-     * @param subject The subject\n-     * @return If the {@code Subject} is immutable it will return the principals directly.\n-     *         If the {@code Subject} is mutable it will create an unmodifiable copy.\n-     *\/\n-    private static Collection<Principal> getSubjectPrincipals(Subject subject) {\n-        if (subject.isReadOnly()) {\n-            return subject.getPrincipals();\n-        }\n-\n-        List<Principal> principals = Arrays.asList(subject.getPrincipals().toArray(new Principal[0]));\n-        return Collections.unmodifiableList(principals);\n-    }\n-}\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/SubjectDelegator.java","additions":0,"deletions":128,"binary":false,"changes":128,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,6 +118,0 @@\n-     * <p>Calling this method is equivalent to calling\n-     * {@link #getMBeanServerConnection(Subject) getMBeanServerConnection(null)}\n-     * meaning that no delegation subject is specified and that all the\n-     * operations called on the <code>MBeanServerConnection<\/code> must\n-     * use the authenticated subject, if any.<\/p>\n-     *\n@@ -138,6 +132,2 @@\n-     * <p>Returns an <code>MBeanServerConnection<\/code> object representing\n-     * a remote MBean server on which operations are performed on behalf of\n-     * the supplied delegation subject. For a given <code>JMXConnector<\/code>\n-     * and <code>Subject<\/code>, two successful calls to this method will\n-     * usually return the same <code>MBeanServerConnection<\/code> object,\n-     * though this is not required.<\/p>\n+     * <p>When {@code delegationSubject} is {@code null}, calling his method\n+     * is equivalent to calling {@link #getMBeanServerConnection()}.\n@@ -145,12 +135,3 @@\n-     * <p>For each method in the returned\n-     * <code>MBeanServerConnection<\/code>, calling the method causes\n-     * the corresponding method to be called in the remote MBean\n-     * server on behalf of the given delegation subject instead of the\n-     * authenticated subject. The value returned by the MBean server\n-     * method is the value returned to the client. If the MBean server\n-     * method produces an <code>Exception<\/code>, the same\n-     * <code>Exception<\/code> is seen by the client. If the MBean\n-     * server method, or the attempt to call it, produces an\n-     * <code>Error<\/code>, the <code>Error<\/code> is wrapped in a\n-     * {@link JMXServerErrorException}, which is seen by the\n-     * client.<\/p>\n+     * @implSpec The default implementation of this method throws\n+     * {@code UnsupportedOperationException} if {@code delegationSubject} is\n+     * non-null. Otherwise it calls {@link getMBeanServerConnection()}.\n@@ -158,4 +139,1 @@\n-     * @param delegationSubject the <code>Subject<\/code> on behalf of\n-     * which requests will be performed.  Can be null, in which case\n-     * requests will be performed on behalf of the authenticated\n-     * Subject, if any.\n+     * @param delegationSubject must be {@code null}.\n@@ -164,2 +142,1 @@\n-     * interface by forwarding its methods to the remote MBean server on behalf\n-     * of a given delegation subject.\n+     * interface by forwarding its methods to the remote MBean server.\n@@ -172,0 +149,2 @@\n+     * @exception UnsupportedOperationException if {@code delegationSubject} is non-null.\n+     *\n@@ -173,3 +152,1 @@\n-     * and is only useful in conjunction with other APIs which are deprecated and\n-     * subject to removal in a future release. Consequently, this method is also\n-     * deprecated and subject to removal. There is no replacement.\n+     * which has been removed.  There is no replacement.\n@@ -178,3 +155,8 @@\n-    public MBeanServerConnection getMBeanServerConnection(\n-                                               Subject delegationSubject)\n-            throws IOException;\n+    public default MBeanServerConnection getMBeanServerConnection(Subject delegationSubject)\n+            throws IOException {\n+\n+        if (delegationSubject != null) {\n+            throw new UnsupportedOperationException(\"Subject Delegation has been removed.\");\n+        }\n+        return getMBeanServerConnection();\n+    }\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXConnector.java","additions":19,"deletions":37,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation1Test.java 0000000 generic-all\n","filename":"test\/jdk\/ProblemList-Virtual.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -538,2 +538,0 @@\n-javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation1Test.java 8149084 linux-aarch64\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8326666\n+ * @summary Test that Subject Delegation is removed.\n+ * @modules java.management.rmi\n+ *          java.management\/com.sun.jmx.remote.security\n+ * @run main\/othervm RemovedSubjectDelegation\n+ *\/\n+\n+import java.lang.management.ManagementFactory;\n+import java.rmi.RemoteException;\n+import java.rmi.registry.LocateRegistry;\n+import java.rmi.registry.Registry;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Properties;\n+import javax.management.MBeanServer;\n+import javax.management.MBeanServerConnection;\n+import javax.management.remote.JMXConnector;\n+import javax.management.remote.JMXConnectorFactory;\n+import javax.management.remote.JMXConnectorServer;\n+import javax.management.remote.JMXConnectorServerFactory;\n+import javax.management.remote.JMXPrincipal;\n+import javax.management.remote.JMXServiceURL;\n+import javax.security.auth.Subject;\n+\n+public class RemovedSubjectDelegation {\n+\n+    public static void main(String[] args) throws Exception {\n+        JMXConnectorServer jmxcs = null;\n+        JMXConnector jmxc = null;\n+        try {\n+            \/\/ Create an RMI registry\n+            \/\/\n+            System.out.println(\"Start RMI registry...\");\n+            Registry reg = null;\n+            int port = 5900;\n+            while (port++ < 5920) {\n+                try {\n+                    reg = LocateRegistry.createRegistry(port);\n+                    System.out.println(\"RMI registry running on port \" + port);\n+                    break;\n+                } catch (RemoteException e) {\n+                    \/\/ Failed to create RMI registry...\n+                    System.out.println(\"Failed to create RMI registry \" +\n+                                       \"on port \" + port);\n+                }\n+            }\n+            if (reg == null) {\n+                throw new RuntimeException(\"Failed to create RMI registry.\");\n+            }\n+            \/\/ Instantiate the MBean server\n+            \/\/\n+            System.out.println(\"Create the MBean server\");\n+            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+            \/\/ Create an RMI connector server\n+            \/\/\n+            System.out.println(\"Create an RMI connector server\");\n+            JMXServiceURL url = new JMXServiceURL(\"rmi\", null, 0);\n+            HashMap env = new HashMap();\n+            jmxcs = JMXConnectorServerFactory.newJMXConnectorServer(url, env, mbs);\n+            jmxcs.start();\n+            \/\/ Create an RMI connector client\n+            \/\/\n+            System.out.println(\"Create an RMI connector client\");\n+            \/\/ Not setting env with \"jmx.remote.credentials\", should not get as far as verifying:\n+            jmxc = JMXConnectorFactory.connect(jmxcs.getAddress());\n+            Subject delegationSubject =\n+                new Subject(true,\n+                            Collections.singleton(new JMXPrincipal(\"delegate\")),\n+                            Collections.EMPTY_SET,\n+                            Collections.EMPTY_SET);\n+\n+            MBeanServerConnection mbsc = null;\n+            try {\n+                mbsc = jmxc.getMBeanServerConnection(delegationSubject);\n+                throw new RuntimeException(\"FAIL: delegationSubject was accepted. mbsc=\" + mbsc);\n+            } catch (UnsupportedOperationException e) {\n+                System.out.println(\"PASS: \" + e);\n+            }\n+        } catch (Exception e) {\n+            System.out.println(\"Unexpected exception caught = \" + e);\n+            e.printStackTrace();\n+            throw e;\n+        } finally {\n+            if (jmxc != null)\n+                jmxc.close();\n+            if (jmxcs != null)\n+                jmxcs.stop();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/RemovedSubjectDelegation.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -1,123 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.lang.management.ManagementFactory;\n-import java.lang.ref.WeakReference;\n-import java.lang.reflect.Field;\n-import java.util.Collections;\n-import java.util.Map;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerConnection;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXConnectorServer;\n-import javax.management.remote.JMXConnectorServerFactory;\n-import javax.management.remote.JMXPrincipal;\n-import javax.management.remote.JMXServiceURL;\n-import javax.management.remote.rmi.RMIConnector;\n-import javax.security.auth.Subject;\n-\n-\/*\n- * @test\n- * @bug 6566891\n- * @summary Check no memory leak on RMIConnector's rmbscMap\n- * @author Shanliang JIANG\n- * @modules java.management.rmi\/javax.management.remote.rmi:open\n- * @run clean RMIConnectorInternalMapTest\n- * @run build RMIConnectorInternalMapTest\n- * @run main RMIConnectorInternalMapTest\n- *\/\n-\n-public class RMIConnectorInternalMapTest {\n-    public static void main(String[] args) throws Exception {\n-        System.out.println(\"---RMIConnectorInternalMapTest starting...\");\n-\n-        JMXConnectorServer connectorServer = null;\n-        JMXConnector connectorClient = null;\n-\n-        try {\n-            MBeanServer mserver = ManagementFactory.getPlatformMBeanServer();\n-            JMXServiceURL serverURL = new JMXServiceURL(\"rmi\", \"localhost\", 0);\n-            connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(serverURL, null, mserver);\n-            connectorServer.start();\n-\n-            JMXServiceURL serverAddr = connectorServer.getAddress();\n-            connectorClient = JMXConnectorFactory.connect(serverAddr, null);\n-            connectorClient.connect();\n-\n-            Field rmbscMapField = RMIConnector.class.getDeclaredField(\"rmbscMap\");\n-            rmbscMapField.setAccessible(true);\n-            Map<Subject, WeakReference<MBeanServerConnection>> map =\n-                    (Map<Subject, WeakReference<MBeanServerConnection>>) rmbscMapField.get(connectorClient);\n-            if (map != null && !map.isEmpty()) { \/\/ failed\n-                throw new RuntimeException(\"RMIConnector's rmbscMap must be empty at the initial time.\");\n-            }\n-\n-            Subject delegationSubject =\n-                    new Subject(true,\n-                    Collections.singleton(new JMXPrincipal(\"delegate\")),\n-                    Collections.EMPTY_SET,\n-                    Collections.EMPTY_SET);\n-            MBeanServerConnection mbsc1 =\n-                    connectorClient.getMBeanServerConnection(delegationSubject);\n-            MBeanServerConnection mbsc2 =\n-                    connectorClient.getMBeanServerConnection(delegationSubject);\n-\n-            if (mbsc1 == null) {\n-                throw new RuntimeException(\"Got null connection.\");\n-            }\n-            if (mbsc1 != mbsc2) {\n-                throw new RuntimeException(\"Not got same connection with a same subject.\");\n-            }\n-\n-            map = (Map<Subject, WeakReference<MBeanServerConnection>>) rmbscMapField.get(connectorClient);\n-            if (map == null || map.isEmpty()) { \/\/ failed\n-                throw new RuntimeException(\"RMIConnector's rmbscMap has wrong size \"\n-                        + \"after creating a delegated connection.\");\n-            }\n-\n-            delegationSubject = null;\n-            mbsc1 = null;\n-            mbsc2 = null;\n-\n-            int i = 0;\n-            while (!map.isEmpty() && i++ < 60) {\n-                System.gc();\n-                Thread.sleep(100);\n-            }\n-            System.out.println(\"---GC times: \" + i);\n-\n-            if (!map.isEmpty()) {\n-                throw new RuntimeException(\"Failed to clean RMIConnector's rmbscMap\");\n-            } else {\n-                System.out.println(\"---RMIConnectorInternalMapTest: PASSED!\");\n-            }\n-        } finally {\n-            try {\n-                connectorClient.close();\n-                connectorServer.stop();\n-            } catch (Exception e) {\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/RMIConnectorInternalMapTest.java","additions":0,"deletions":123,"binary":false,"changes":123,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-        assertTrue(\"No connections in new connector server\", rmiServer.connections.isEmpty());\n+        assertTrue(\"Expected no connections in new connector server\", rmiServer.connections.isEmpty());\n@@ -82,1 +82,1 @@\n-        assertTrue(\"One connection on server after client connect\", rmiServer.connections.size() == 1);\n+        assertTrue(\"Expected one connection on server after client connect\", rmiServer.connections.size() == 1);\n@@ -91,1 +91,1 @@\n-        assertTrue(\"Server listenerMap initially empty\", mapWithoutKey(listenerMap, delegateName).isEmpty());\n+        assertTrue(\"Expected server listenerMap initially empty\", mapWithoutKey(listenerMap, delegateName).isEmpty());\n@@ -107,1 +107,1 @@\n-        assertTrue(\"One entry in listenerMap for two listeners on same MBean\", mapWithoutKey(listenerMap, delegateName).size() == 1);\n+        assertTrue(\"Expected one entry in listenerMap for two listeners on same MBean\", mapWithoutKey(listenerMap, delegateName).size() == 1);\n@@ -109,1 +109,1 @@\n-        assertTrue(\"Set in listenerMap for MBean has two elements\", set != null && set.size() == 2);\n+        assertTrue(\"Expected Set in listenerMap for MBean to have two elements\", set != null && set.size() == 2);\n@@ -111,2 +111,2 @@\n-        assertTrue(\"Initial value of count1 == 0\", count1Val.get() == 0);\n-        assertTrue(\"Initial value of count2 == 0\", count2Val.get() == 0);\n+        assertTrue(\"Initial value of count1 should be 0\", count1Val.get() == 0);\n+        assertTrue(\"Initial value of count2 should be 0\", count2Val.get() == 0);\n@@ -122,2 +122,2 @@\n-        assertTrue(\"New value of count1 == 1\", count1Val.get() == 1);\n-        assertTrue(\"Initial value of count2 == 1\", count2Val.get() == 1);\n+        assertTrue(\"Value of count1 expected 1, got \" + count1Val.get(), count1Val.get() == 1);\n+        assertTrue(\"Value of count2 expected 1, got \" + count2Val.get(), count2Val.get() == 1);\n@@ -149,2 +149,2 @@\n-        assertTrue(\"New value of count1 == 1\", count1Val.get() == 1);\n-        assertTrue(\"Initial value of count2 == 1\", count2Val.get() == 1);\n+        assertTrue(\"Value of count1 expected 1, got \" + count1Val.get(), count1Val.get() == 1);\n+        assertTrue(\"Value of count2 expected 1, got \" + count2Val.get(), count2Val.get() == 1);\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/notif\/DeadListenerTest.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1,184 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Simple definition of a standard MBean, named \"SimpleStandard\".\n- *\n- * The \"SimpleStandard\" standard MBean shows how to expose attributes and\n- * operations for management by implementing its corresponding\n- * \"SimpleStandardMBean\" management interface.\n- *\n- * This MBean has two attributes and one operation exposed\n- * for management by a JMX agent:\n- *      - the read\/write \"State\" attribute,\n- *      - the read only \"NbChanges\" attribute,\n- *      - the \"reset()\" operation.\n- *\n- * This object also has one property and one method not exposed\n- * for management by a JMX agent:\n- *      - the \"NbResets\" property,\n- *      - the \"getNbResets()\" method.\n- *\/\n-\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.Principal;\n-import java.util.Set;\n-import javax.management.AttributeChangeNotification;\n-import javax.management.NotificationBroadcasterSupport;\n-import javax.management.remote.JMXPrincipal;\n-import javax.security.auth.Subject;\n-\n-public class SimpleStandard\n-    extends NotificationBroadcasterSupport\n-    implements SimpleStandardMBean {\n-\n-    \/*\n-     * -----------------------------------------------------\n-     * CONSTRUCTORS\n-     * -----------------------------------------------------\n-     *\/\n-\n-    public SimpleStandard(String principalName) {\n-        this.principalName = principalName;\n-    }\n-\n-    \/*\n-     * -----------------------------------------------------\n-     * IMPLEMENTATION OF THE SimpleStandardMBean INTERFACE\n-     * -----------------------------------------------------\n-     *\/\n-\n-    \/**\n-     * Getter: get the \"State\" attribute of the \"SimpleStandard\" standard MBean.\n-     *\n-     * @return the current value of the \"State\" attribute.\n-     *\/\n-    public String getState() {\n-        checkSubject(\"getState\");\n-        return state;\n-    }\n-\n-    \/**\n-     * Setter: set the \"State\" attribute of the \"SimpleStandard\" standard MBean.\n-     *\n-     * @param <VAR>s<\/VAR> the new value of the \"State\" attribute.\n-     *\/\n-    public void setState(String s) {\n-        checkSubject(\"setState\");\n-        state = s;\n-        nbChanges++;\n-    }\n-\n-    \/**\n-     * Getter: get the \"NbChanges\" attribute of the \"SimpleStandard\" standard\n-     * MBean.\n-     *\n-     * @return the current value of the \"NbChanges\" attribute.\n-     *\/\n-    public int getNbChanges() {\n-        checkSubject(\"getNbChanges\");\n-        return nbChanges;\n-    }\n-\n-    \/**\n-     * Operation: reset to their initial values the \"State\" and \"NbChanges\"\n-     * attributes of the \"SimpleStandard\" standard MBean.\n-     *\/\n-    public void reset() {\n-        checkSubject(\"reset\");\n-        AttributeChangeNotification acn =\n-            new AttributeChangeNotification(this,\n-                                            0,\n-                                            0,\n-                                            \"NbChanges reset\",\n-                                            \"NbChanges\",\n-                                            \"Integer\",\n-                                            new Integer(nbChanges),\n-                                            new Integer(0));\n-        state = \"initial state\";\n-        nbChanges = 0;\n-        nbResets++;\n-        sendNotification(acn);\n-    }\n-\n-    \/*\n-     * -----------------------------------------------------\n-     * METHOD NOT EXPOSED FOR MANAGEMENT BY A JMX AGENT\n-     * -----------------------------------------------------\n-     *\/\n-\n-    \/**\n-     * Return the \"NbResets\" property.\n-     * This method is not a Getter in the JMX sense because\n-     * it is not exposed in the \"SimpleStandardMBean\" interface.\n-     *\n-     * @return the current value of the \"NbResets\" property.\n-     *\/\n-    public int getNbResets() {\n-        return nbResets;\n-    }\n-\n-    \/*\n-     * ---------------\n-     * PRIVATE METHODS\n-     * ---------------\n-     *\/\n-\n-    \/**\n-     * Check that the principal contained in the Subject is of\n-     * type JMXPrincipal and refers to the principalName identity.\n-     *\/\n-    private void checkSubject(String op) {\n-        AccessControlContext acc = AccessController.getContext();\n-        Subject subject = Subject.getSubject(acc);\n-        Set principals = subject.getPrincipals();\n-        Principal principal = (Principal) principals.iterator().next();\n-        if (!(principal instanceof JMXPrincipal))\n-            throw new SecurityException(op+\": Authenticated subject contains \" +\n-                                        \"invalid principal type = \" +\n-                                        principal.getClass().getName());\n-        String identity = principal.getName();\n-        if (!identity.equals(principalName))\n-            throw new SecurityException(op+\": Authenticated subject contains \" +\n-                                        \"invalid principal name = \" + identity);\n-    }\n-\n-    \/*\n-     * -----------------------------------------------------\n-     * ATTRIBUTES ACCESSIBLE FOR MANAGEMENT BY A JMX AGENT\n-     * -----------------------------------------------------\n-     *\/\n-\n-    private String state = \"initial state\";\n-    private int nbChanges = 0;\n-\n-    \/*\n-     * -----------------------------------------------------\n-     * PROPERTY NOT ACCESSIBLE FOR MANAGEMENT BY A JMX AGENT\n-     * -----------------------------------------------------\n-     *\/\n-\n-    private int nbResets = 0;\n-    private String principalName;\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SimpleStandard.java","additions":0,"deletions":184,"binary":false,"changes":184,"status":"deleted"},{"patch":"@@ -1,67 +0,0 @@\n-\/*\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * This is the management interface explicitly defined for the\n- * \"SimpleStandard\" standard MBean.\n- * The \"SimpleStandard\" standard MBean implements this interface\n- * in order to be manageable through a JMX agent.\n- *\n- * The \"SimpleStandardMBean\" interface shows how to expose for management:\n- * - a read\/write attribute (named \"State\") through its getter and setter\n- *   methods,\n- * - a read-only attribute (named \"NbChanges\") through its getter method,\n- * - an operation (named \"reset\").\n- *\/\n-public interface SimpleStandardMBean {\n-\n-    \/**\n-     * Getter: set the \"State\" attribute of the \"SimpleStandard\" standard\n-     * MBean.\n-     *\n-     * @return the current value of the \"State\" attribute.\n-     *\/\n-    public String getState();\n-\n-    \/**\n-     * Setter: set the \"State\" attribute of the \"SimpleStandard\" standard\n-     * MBean.\n-     *\n-     * @param <VAR>s<\/VAR> the new value of the \"State\" attribute.\n-     *\/\n-    public void setState(String s);\n-\n-    \/**\n-     * Getter: get the \"NbChanges\" attribute of the \"SimpleStandard\" standard\n-     * MBean.\n-     *\n-     * @return the current value of the \"NbChanges\" attribute.\n-     *\/\n-    public int getNbChanges();\n-\n-    \/**\n-     * Operation: reset to their initial values the \"State\" and \"NbChanges\"\n-     * attributes of the \"SimpleStandard\" standard MBean.\n-     *\/\n-    public void reset();\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SimpleStandardMBean.java","additions":0,"deletions":67,"binary":false,"changes":67,"status":"deleted"},{"patch":"@@ -1,226 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6261831\n- * @summary Tests the use of the subject delegation feature in the\n- *          RMI connector\n- * @author Luis-Miguel Alventosa\n- * @modules java.management.rmi\n- *          java.management\/com.sun.jmx.remote.security\n- * @run clean SubjectDelegation1Test SimpleStandard SimpleStandardMBean\n- * @run build SubjectDelegation1Test SimpleStandard SimpleStandardMBean\n- * @run main SubjectDelegation1Test policy11 ok\n- * @run main SubjectDelegation1Test policy12 ko\n- * @run main SubjectDelegation1Test policy13 ko\n- * @run main SubjectDelegation1Test policy14 ko\n- * @run main SubjectDelegation1Test policy15 ok\n- * @run main SubjectDelegation1Test policy16 ko\n- *\/\n-\n-import com.sun.jmx.remote.security.JMXPluggableAuthenticator;\n-import java.io.File;\n-import java.lang.management.ManagementFactory;\n-import java.rmi.RemoteException;\n-import java.rmi.registry.LocateRegistry;\n-import java.rmi.registry.Registry;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Properties;\n-import javax.management.Attribute;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerConnection;\n-import javax.management.Notification;\n-import javax.management.NotificationListener;\n-import javax.management.ObjectName;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXConnectorServer;\n-import javax.management.remote.JMXConnectorServerFactory;\n-import javax.management.remote.JMXPrincipal;\n-import javax.management.remote.JMXServiceURL;\n-import javax.security.auth.Subject;\n-\n-public class SubjectDelegation1Test {\n-\n-    public static void main(String[] args) throws Exception {\n-        String policyFile = args[0];\n-        String testResult = args[1];\n-        System.out.println(\"Policy file = \" + policyFile);\n-        System.out.println(\"Expected test result = \" + testResult);\n-        JMXConnectorServer jmxcs = null;\n-        JMXConnector jmxc = null;\n-        try {\n-            \/\/ Create an RMI registry\n-            \/\/\n-            System.out.println(\"Start RMI registry...\");\n-            Registry reg = null;\n-            int port = 5860;\n-            while (port++ < 5880) {\n-                try {\n-                    reg = LocateRegistry.createRegistry(port);\n-                    System.out.println(\"RMI registry running on port \" + port);\n-                    break;\n-                } catch (RemoteException e) {\n-                    \/\/ Failed to create RMI registry...\n-                    System.out.println(\"Failed to create RMI registry \" +\n-                                       \"on port \" + port);\n-                }\n-            }\n-            if (reg == null) {\n-                System.exit(1);\n-            }\n-            \/\/ Set the default password file\n-            \/\/\n-            final String passwordFile = System.getProperty(\"test.src\") +\n-                File.separator + \"jmxremote.password\";\n-            System.out.println(\"Password file = \" + passwordFile);\n-            \/\/ Set policy file\n-            \/\/\n-            final String policy = System.getProperty(\"test.src\") +\n-                File.separator + policyFile;\n-            System.out.println(\"PolicyFile = \" + policy);\n-            System.setProperty(\"java.security.policy\", policy);\n-            \/\/ Instantiate the MBean server\n-            \/\/\n-            System.out.println(\"Create the MBean server\");\n-            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n-            \/\/ Register the SimpleStandardMBean\n-            \/\/\n-            System.out.println(\"Create SimpleStandard MBean\");\n-            SimpleStandard s = new SimpleStandard(\"delegate\");\n-            mbs.registerMBean(s, new ObjectName(\"MBeans:type=SimpleStandard\"));\n-            \/\/ Create Properties containing the username\/password entries\n-            \/\/\n-            Properties props = new Properties();\n-            props.setProperty(\"jmx.remote.x.password.file\", passwordFile);\n-            \/\/ Initialize environment map to be passed to the connector server\n-            \/\/\n-            System.out.println(\"Initialize environment map\");\n-            HashMap env = new HashMap();\n-            env.put(\"jmx.remote.authenticator\",\n-                    new JMXPluggableAuthenticator(props));\n-            \/\/ Create an RMI connector server\n-            \/\/\n-            System.out.println(\"Create an RMI connector server\");\n-            JMXServiceURL url =\n-                new JMXServiceURL(\"rmi\", null, 0,\n-                                  \"\/jndi\/rmi:\/\/:\" + port + \"\/server\" + port);\n-            jmxcs =\n-                JMXConnectorServerFactory.newJMXConnectorServer(url, env, mbs);\n-            jmxcs.start();\n-            \/\/ Create an RMI connector client\n-            \/\/\n-            System.out.println(\"Create an RMI connector client\");\n-            HashMap cli_env = new HashMap();\n-            \/\/ These credentials must match those in the default password file\n-            \/\/\n-            String[] credentials = new String[] { \"monitorRole\" , \"QED\" };\n-            cli_env.put(\"jmx.remote.credentials\", credentials);\n-            jmxc = JMXConnectorFactory.connect(url, cli_env);\n-            Subject delegationSubject =\n-                new Subject(true,\n-                            Collections.singleton(new JMXPrincipal(\"delegate\")),\n-                            Collections.EMPTY_SET,\n-                            Collections.EMPTY_SET);\n-            MBeanServerConnection mbsc =\n-                jmxc.getMBeanServerConnection(delegationSubject);\n-            \/\/ Get domains from MBeanServer\n-            \/\/\n-            System.out.println(\"Domains:\");\n-            String domains[] = mbsc.getDomains();\n-            for (int i = 0; i < domains.length; i++) {\n-                System.out.println(\"\\tDomain[\" + i + \"] = \" + domains[i]);\n-            }\n-            \/\/ Get MBean count\n-            \/\/\n-            System.out.println(\"MBean count = \" + mbsc.getMBeanCount());\n-            \/\/ Get State attribute\n-            \/\/\n-            String oldState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"Old State = \\\"\" + oldState + \"\\\"\");\n-            \/\/ Set State attribute\n-            \/\/\n-            System.out.println(\"Set State to \\\"changed state\\\"\");\n-            mbsc.setAttribute(new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              new Attribute(\"State\", \"changed state\"));\n-            \/\/ Get State attribute\n-            \/\/\n-            String newState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"New State = \\\"\" + newState + \"\\\"\");\n-            if (!newState.equals(\"changed state\")) {\n-                System.out.println(\"Invalid State = \\\"\" + newState + \"\\\"\");\n-                System.exit(1);\n-            }\n-            \/\/ Add notification listener on SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Add notification listener...\");\n-            mbsc.addNotificationListener(\n-                 new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                 new NotificationListener() {\n-                     public void handleNotification(Notification notification,\n-                                                    Object handback) {\n-                         System.out.println(\"Received notification: \" +\n-                                            notification);\n-                     }\n-                 },\n-                 null,\n-                 null);\n-            \/\/ Unregister SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Unregister SimpleStandard MBean...\");\n-            mbsc.unregisterMBean(new ObjectName(\"MBeans:type=SimpleStandard\"));\n-        } catch (SecurityException e) {\n-            if (testResult.equals(\"ko\")) {\n-                System.out.println(\"Got expected security exception = \" + e);\n-            } else {\n-                System.out.println(\"Got unexpected security exception = \" + e);\n-                e.printStackTrace();\n-                throw e;\n-            }\n-        } catch (Exception e) {\n-            System.out.println(\"Unexpected exception caught = \" + e);\n-            e.printStackTrace();\n-            throw e;\n-        } finally {\n-            \/\/ Close connector client\n-            \/\/\n-            if (jmxc != null)\n-                jmxc.close();\n-            \/\/ Stop connector server\n-            \/\/\n-            if (jmxcs != null)\n-                jmxcs.stop();\n-            \/\/ Say goodbye\n-            \/\/\n-            System.out.println(\"Bye! Bye!\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation1Test.java","additions":0,"deletions":226,"binary":false,"changes":226,"status":"deleted"},{"patch":"@@ -1,218 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6261831\n- * @summary Tests the use of the subject delegation feature on the authenticated\n- *          principals within the RMI connector server's creator codebase.\n- * @author Luis-Miguel Alventosa\n- * @modules java.management.rmi\n- *          java.management\/com.sun.jmx.remote.security\n- * @run clean SubjectDelegation2Test SimpleStandard SimpleStandardMBean\n- * @run build SubjectDelegation2Test SimpleStandard SimpleStandardMBean\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation2Test policy21 ok\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation2Test policy22 ko\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation2Test policy23 ko\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation2Test policy24 ok\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation2Test policy25 ko\n- *\/\n-\n-import com.sun.jmx.remote.security.JMXPluggableAuthenticator;\n-import java.io.File;\n-import java.lang.management.ManagementFactory;\n-import java.rmi.RemoteException;\n-import java.rmi.registry.LocateRegistry;\n-import java.rmi.registry.Registry;\n-import java.util.HashMap;\n-import java.util.Properties;\n-import javax.management.Attribute;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerConnection;\n-import javax.management.Notification;\n-import javax.management.NotificationListener;\n-import javax.management.ObjectName;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXConnectorServer;\n-import javax.management.remote.JMXConnectorServerFactory;\n-import javax.management.remote.JMXServiceURL;\n-\n-public class SubjectDelegation2Test {\n-\n-    public static void main(String[] args) throws Exception {\n-        String policyFile = args[0];\n-        String testResult = args[1];\n-        System.out.println(\"Policy file = \" + policyFile);\n-        System.out.println(\"Expected test result = \" + testResult);\n-        JMXConnectorServer jmxcs = null;\n-        JMXConnector jmxc = null;\n-        try {\n-            \/\/ Create an RMI registry\n-            \/\/\n-            System.out.println(\"Start RMI registry...\");\n-            Registry reg = null;\n-            int port = 5880;\n-            while (port++ < 5900) {\n-                try {\n-                    reg = LocateRegistry.createRegistry(port);\n-                    System.out.println(\"RMI registry running on port \" + port);\n-                    break;\n-                } catch (RemoteException e) {\n-                    \/\/ Failed to create RMI registry...\n-                    System.out.println(\"Failed to create RMI registry \" +\n-                                       \"on port \" + port);\n-                }\n-            }\n-            if (reg == null) {\n-                System.exit(1);\n-            }\n-            \/\/ Set the default password file\n-            \/\/\n-            final String passwordFile = System.getProperty(\"test.src\") +\n-                File.separator + \"jmxremote.password\";\n-            System.out.println(\"Password file = \" + passwordFile);\n-            \/\/ Set policy file\n-            \/\/\n-            final String policy = System.getProperty(\"test.src\") +\n-                File.separator + policyFile;\n-            System.out.println(\"PolicyFile = \" + policy);\n-            System.setProperty(\"java.security.policy\", policy);\n-            \/\/ Instantiate the MBean server\n-            \/\/\n-            System.out.println(\"Create the MBean server\");\n-            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n-            \/\/ Register the SimpleStandardMBean\n-            \/\/\n-            System.out.println(\"Create SimpleStandard MBean\");\n-            SimpleStandard s = new SimpleStandard(\"monitorRole\");\n-            mbs.registerMBean(s, new ObjectName(\"MBeans:type=SimpleStandard\"));\n-            \/\/ Create Properties containing the username\/password entries\n-            \/\/\n-            Properties props = new Properties();\n-            props.setProperty(\"jmx.remote.x.password.file\", passwordFile);\n-            \/\/ Initialize environment map to be passed to the connector server\n-            \/\/\n-            System.out.println(\"Initialize environment map\");\n-            HashMap env = new HashMap();\n-            env.put(\"jmx.remote.authenticator\",\n-                    new JMXPluggableAuthenticator(props));\n-            \/\/ Set Security Manager\n-            \/\/\n-            System.setSecurityManager(new SecurityManager());\n-            \/\/ Create an RMI connector server\n-            \/\/\n-            System.out.println(\"Create an RMI connector server\");\n-            JMXServiceURL url = new JMXServiceURL(\"rmi\", null, 0);\n-\n-            jmxcs =\n-                JMXConnectorServerFactory.newJMXConnectorServer(url, env, mbs);\n-            jmxcs.start();\n-            \/\/ Create an RMI connector client\n-            \/\/\n-            System.out.println(\"Create an RMI connector client\");\n-            HashMap cli_env = new HashMap();\n-            \/\/ These credentials must match those in the default password file\n-            \/\/\n-            String[] credentials = new String[] { \"monitorRole\" , \"QED\" };\n-            cli_env.put(\"jmx.remote.credentials\", credentials);\n-            jmxc = JMXConnectorFactory.connect(jmxcs.getAddress(), cli_env);\n-            MBeanServerConnection mbsc = jmxc.getMBeanServerConnection();\n-            \/\/ Get domains from MBeanServer\n-            \/\/\n-            System.out.println(\"Domains:\");\n-            String domains[] = mbsc.getDomains();\n-            for (int i = 0; i < domains.length; i++) {\n-                System.out.println(\"\\tDomain[\" + i + \"] = \" + domains[i]);\n-            }\n-            \/\/ Get MBean count\n-            \/\/\n-            System.out.println(\"MBean count = \" + mbsc.getMBeanCount());\n-            \/\/ Get State attribute\n-            \/\/\n-            String oldState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"Old State = \\\"\" + oldState + \"\\\"\");\n-            \/\/ Set State attribute\n-            \/\/\n-            System.out.println(\"Set State to \\\"changed state\\\"\");\n-            mbsc.setAttribute(new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              new Attribute(\"State\", \"changed state\"));\n-            \/\/ Get State attribute\n-            \/\/\n-            String newState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"New State = \\\"\" + newState + \"\\\"\");\n-            if (!newState.equals(\"changed state\")) {\n-                System.out.println(\"Invalid State = \\\"\" + newState + \"\\\"\");\n-                System.exit(1);\n-            }\n-            \/\/ Add notification listener on SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Add notification listener...\");\n-            mbsc.addNotificationListener(\n-                 new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                 new NotificationListener() {\n-                     public void handleNotification(Notification notification,\n-                                                    Object handback) {\n-                         System.out.println(\"Received notification: \" +\n-                                            notification);\n-                     }\n-                 },\n-                 null,\n-                 null);\n-            \/\/ Unregister SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Unregister SimpleStandard MBean...\");\n-            mbsc.unregisterMBean(new ObjectName(\"MBeans:type=SimpleStandard\"));\n-        } catch (SecurityException e) {\n-            if (testResult.equals(\"ko\")) {\n-                System.out.println(\"Got expected security exception = \" + e);\n-            } else {\n-                System.out.println(\"Got unexpected security exception = \" + e);\n-                e.printStackTrace();\n-                throw e;\n-            }\n-        } catch (Exception e) {\n-            System.out.println(\"Unexpected exception caught = \" + e);\n-            e.printStackTrace();\n-            throw e;\n-        } finally {\n-            \/\/ Close connector client\n-            \/\/\n-            if (jmxc != null)\n-                jmxc.close();\n-            \/\/ Stop connector server\n-            \/\/\n-            if (jmxcs != null)\n-                jmxcs.stop();\n-            \/\/ Say goodbye\n-            \/\/\n-            System.out.println(\"Bye! Bye!\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation2Test.java","additions":0,"deletions":218,"binary":false,"changes":218,"status":"deleted"},{"patch":"@@ -1,228 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6261831\n- * @summary Tests the use of the subject delegation feature on the authenticated\n- *          principals within the RMI connector server's creator codebase with\n- *          subject delegation.\n- * @author Luis-Miguel Alventosa\n- * @modules java.management.rmi\n- *          java.management\/com.sun.jmx.remote.security\n- * @run clean SubjectDelegation3Test SimpleStandard SimpleStandardMBean\n- * @run build SubjectDelegation3Test SimpleStandard SimpleStandardMBean\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation3Test policy31 ok\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation3Test policy32 ko\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation3Test policy33 ko\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation3Test policy34 ok\n- * @run main\/othervm -Djava.security.manager=allow SubjectDelegation3Test policy35 ko\n- *\/\n-\n-import com.sun.jmx.remote.security.JMXPluggableAuthenticator;\n-import java.io.File;\n-import java.lang.management.ManagementFactory;\n-import java.rmi.RemoteException;\n-import java.rmi.registry.LocateRegistry;\n-import java.rmi.registry.Registry;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Properties;\n-import javax.management.Attribute;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerConnection;\n-import javax.management.Notification;\n-import javax.management.NotificationListener;\n-import javax.management.ObjectName;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXConnectorServer;\n-import javax.management.remote.JMXConnectorServerFactory;\n-import javax.management.remote.JMXPrincipal;\n-import javax.management.remote.JMXServiceURL;\n-import javax.security.auth.Subject;\n-\n-public class SubjectDelegation3Test {\n-\n-    public static void main(String[] args) throws Exception {\n-        String policyFile = args[0];\n-        String testResult = args[1];\n-        System.out.println(\"Policy file = \" + policyFile);\n-        System.out.println(\"Expected test result = \" + testResult);\n-        JMXConnectorServer jmxcs = null;\n-        JMXConnector jmxc = null;\n-        try {\n-            \/\/ Create an RMI registry\n-            \/\/\n-            System.out.println(\"Start RMI registry...\");\n-            Registry reg = null;\n-            int port = 5900;\n-            while (port++ < 5920) {\n-                try {\n-                    reg = LocateRegistry.createRegistry(port);\n-                    System.out.println(\"RMI registry running on port \" + port);\n-                    break;\n-                } catch (RemoteException e) {\n-                    \/\/ Failed to create RMI registry...\n-                    System.out.println(\"Failed to create RMI registry \" +\n-                                       \"on port \" + port);\n-                }\n-            }\n-            if (reg == null) {\n-                System.exit(1);\n-            }\n-            \/\/ Set the default password file\n-            \/\/\n-            final String passwordFile = System.getProperty(\"test.src\") +\n-                File.separator + \"jmxremote.password\";\n-            System.out.println(\"Password file = \" + passwordFile);\n-            \/\/ Set policy file\n-            \/\/\n-            final String policy = System.getProperty(\"test.src\") +\n-                File.separator + policyFile;\n-            System.out.println(\"PolicyFile = \" + policy);\n-            System.setProperty(\"java.security.policy\", policy);\n-            \/\/ Instantiate the MBean server\n-            \/\/\n-            System.out.println(\"Create the MBean server\");\n-            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n-            \/\/ Register the SimpleStandardMBean\n-            \/\/\n-            System.out.println(\"Create SimpleStandard MBean\");\n-            SimpleStandard s = new SimpleStandard(\"delegate\");\n-            mbs.registerMBean(s, new ObjectName(\"MBeans:type=SimpleStandard\"));\n-            \/\/ Create Properties containing the username\/password entries\n-            \/\/\n-            Properties props = new Properties();\n-            props.setProperty(\"jmx.remote.x.password.file\", passwordFile);\n-            \/\/ Initialize environment map to be passed to the connector server\n-            \/\/\n-            System.out.println(\"Initialize environment map\");\n-            HashMap env = new HashMap();\n-            env.put(\"jmx.remote.authenticator\",\n-                    new JMXPluggableAuthenticator(props));\n-            \/\/ Set Security Manager\n-            \/\/\n-            System.setSecurityManager(new SecurityManager());\n-            \/\/ Create an RMI connector server\n-            \/\/\n-            System.out.println(\"Create an RMI connector server\");\n-            JMXServiceURL url =\n-                new JMXServiceURL(\"rmi\", null, 0);\n-            jmxcs =\n-                JMXConnectorServerFactory.newJMXConnectorServer(url, env, mbs);\n-            jmxcs.start();\n-            \/\/ Create an RMI connector client\n-            \/\/\n-            System.out.println(\"Create an RMI connector client\");\n-            HashMap cli_env = new HashMap();\n-            \/\/ These credentials must match those in the default password file\n-            \/\/\n-            String[] credentials = new String[] { \"monitorRole\" , \"QED\" };\n-            cli_env.put(\"jmx.remote.credentials\", credentials);\n-            jmxc = JMXConnectorFactory.connect(jmxcs.getAddress(), cli_env);\n-            Subject delegationSubject =\n-                new Subject(true,\n-                            Collections.singleton(new JMXPrincipal(\"delegate\")),\n-                            Collections.EMPTY_SET,\n-                            Collections.EMPTY_SET);\n-            MBeanServerConnection mbsc =\n-                jmxc.getMBeanServerConnection(delegationSubject);\n-            \/\/ Get domains from MBeanServer\n-            \/\/\n-            System.out.println(\"Domains:\");\n-            String domains[] = mbsc.getDomains();\n-            for (int i = 0; i < domains.length; i++) {\n-                System.out.println(\"\\tDomain[\" + i + \"] = \" + domains[i]);\n-            }\n-            \/\/ Get MBean count\n-            \/\/\n-            System.out.println(\"MBean count = \" + mbsc.getMBeanCount());\n-            \/\/ Get State attribute\n-            \/\/\n-            String oldState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"Old State = \\\"\" + oldState + \"\\\"\");\n-            \/\/ Set State attribute\n-            \/\/\n-            System.out.println(\"Set State to \\\"changed state\\\"\");\n-            mbsc.setAttribute(new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              new Attribute(\"State\", \"changed state\"));\n-            \/\/ Get State attribute\n-            \/\/\n-            String newState =\n-                (String) mbsc.getAttribute(\n-                              new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                              \"State\");\n-            System.out.println(\"New State = \\\"\" + newState + \"\\\"\");\n-            if (!newState.equals(\"changed state\")) {\n-                System.out.println(\"Invalid State = \\\"\" + newState + \"\\\"\");\n-                System.exit(1);\n-            }\n-            \/\/ Add notification listener on SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Add notification listener...\");\n-            mbsc.addNotificationListener(\n-                 new ObjectName(\"MBeans:type=SimpleStandard\"),\n-                 new NotificationListener() {\n-                     public void handleNotification(Notification notification,\n-                                                    Object handback) {\n-                         System.out.println(\"Received notification: \" +\n-                                            notification);\n-                     }\n-                 },\n-                 null,\n-                 null);\n-            \/\/ Unregister SimpleStandard MBean\n-            \/\/\n-            System.out.println(\"Unregister SimpleStandard MBean...\");\n-            mbsc.unregisterMBean(new ObjectName(\"MBeans:type=SimpleStandard\"));\n-        } catch (SecurityException e) {\n-            if (testResult.equals(\"ko\")) {\n-                System.out.println(\"Got expected security exception = \" + e);\n-            } else {\n-                System.out.println(\"Got unexpected security exception = \" + e);\n-                e.printStackTrace();\n-                throw e;\n-            }\n-        } catch (Exception e) {\n-            System.out.println(\"Unexpected exception caught = \" + e);\n-            e.printStackTrace();\n-            throw e;\n-        } finally {\n-            \/\/ Close connector client\n-            \/\/\n-            if (jmxc != null)\n-                jmxc.close();\n-            \/\/ Stop connector server\n-            \/\/\n-            if (jmxcs != null)\n-                jmxcs.stop();\n-            \/\/ Say goodbye\n-            \/\/\n-            System.out.println(\"Bye! Bye!\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation3Test.java","additions":0,"deletions":228,"binary":false,"changes":228,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-monitorRole QED\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/jmxremote.password","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,7 +0,0 @@\n-grant {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy11","additions":0,"deletions":7,"binary":false,"changes":7,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-grant {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy12","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-grant {\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy13","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,5 +0,0 @@\n-grant {\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy14","additions":0,"deletions":5,"binary":false,"changes":5,"status":"deleted"},{"patch":"@@ -1,7 +0,0 @@\n-grant {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy15","additions":0,"deletions":7,"binary":false,"changes":7,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-grant {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy16","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy21","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy22","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy23","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,18 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy24","additions":0,"deletions":18,"binary":false,"changes":18,"status":"deleted"},{"patch":"@@ -1,18 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy25","additions":0,"deletions":18,"binary":false,"changes":18,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"delegate\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy31","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"delegate\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy32","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"delegate\" {\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy33","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"delegate\" {\n-    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy34","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-grant {\n-    permission javax.security.auth.AuthPermission \"createLoginContext.JMXPluggableAuthenticator\";\n-    permission java.lang.RuntimePermission \"*\";\n-    permission java.net.SocketPermission \"*:*\", \"accept,connect,listen,resolve\";\n-    permission java.security.SecurityPermission \"createAccessControlContext\";\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.monitorRole\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"monitorRole\" {\n-    permission javax.management.remote.SubjectDelegationPermission \"javax.management.remote.JMXPrincipal.delegate\";\n-};\n-\n-grant principal javax.management.remote.JMXPrincipal \"delegate\" {\n-\/\/    permission javax.management.MBeanPermission \"*\", \"getDomains\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"getAttribute\";\n-    permission javax.security.auth.AuthPermission \"getSubject\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#State[MBeans:type=SimpleStandard]\", \"setAttribute\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"addNotificationListener\";\n-    permission javax.management.MBeanPermission \"javax.management.MBeanServerDelegate#-[JMImplementation:type=MBeanServerDelegate]\", \"removeNotificationListener\";\n-    permission javax.management.MBeanPermission \"SimpleStandard#-[MBeans:type=SimpleStandard]\", \"unregisterMBean\";\n-};\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/policy35","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"}]}