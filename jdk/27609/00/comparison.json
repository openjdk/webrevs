{"files":[{"patch":"@@ -44,1 +44,1 @@\n-    public static char charAt(byte[] value, int index) {\n+    static char charAt(byte[] value, int index) {\n@@ -49,1 +49,1 @@\n-    public static boolean canEncode(char cp) {\n+    static boolean canEncode(char cp) {\n@@ -53,1 +53,1 @@\n-    public static boolean canEncode(int cp) {\n+    static boolean canEncode(int cp) {\n@@ -57,1 +57,1 @@\n-    public static byte coderFromChar(char cp) {\n+    static byte coderFromChar(char cp) {\n@@ -61,1 +61,1 @@\n-    public static int length(byte[] value) {\n+    static int length(byte[] value) {\n@@ -65,13 +65,1 @@\n-    public static int codePointAt(byte[] value, int index, int end) {\n-        return value[index] & 0xff;\n-    }\n-\n-    public static int codePointBefore(byte[] value, int index) {\n-        return value[index - 1] & 0xff;\n-    }\n-\n-    public static int codePointCount(byte[] value, int beginIndex, int endIndex) {\n-        return endIndex - beginIndex;\n-    }\n-\n-    public static char[] toChars(byte[] value) {\n+    static char[] toChars(byte[] value) {\n@@ -83,1 +71,1 @@\n-    public static byte[] inflate(byte[] value, int off, int len) {\n+    static byte[] inflate(byte[] value, int off, int len) {\n@@ -89,1 +77,1 @@\n-    public static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin) {\n+    static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin) {\n@@ -93,1 +81,1 @@\n-    public static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin) {\n+    static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin) {\n@@ -98,1 +86,1 @@\n-    public static boolean equals(byte[] value, byte[] other) {\n+    static boolean equals(byte[] value, byte[] other) {\n@@ -111,1 +99,1 @@\n-    public static int compareTo(byte[] value, byte[] other) {\n+    static int compareTo(byte[] value, byte[] other) {\n@@ -117,1 +105,1 @@\n-    public static int compareTo(byte[] value, byte[] other, int len1, int len2) {\n+    static int compareTo(byte[] value, byte[] other, int len1, int len2) {\n@@ -124,1 +112,1 @@\n-    public static int compareToUTF16(byte[] value, byte[] other) {\n+    static int compareToUTF16(byte[] value, byte[] other) {\n@@ -133,1 +121,1 @@\n-    public static int compareToUTF16(byte[] value, byte[] other, int len1, int len2) {\n+    static int compareToUTF16(byte[] value, byte[] other, int len1, int len2) {\n@@ -152,1 +140,1 @@\n-    public static int compareToCI(byte[] value, byte[] other) {\n+    static int compareToCI(byte[] value, byte[] other) {\n@@ -172,1 +160,1 @@\n-    public static int compareToCI_UTF16(byte[] value, byte[] other) {\n+    static int compareToCI_UTF16(byte[] value, byte[] other) {\n@@ -194,1 +182,1 @@\n-    public static int hashCode(byte[] value) {\n+    static int hashCode(byte[] value) {\n@@ -199,1 +187,1 @@\n-    public static int indexOf(byte[] value, int ch, int fromIndex, int toIndex) {\n+    static int indexOf(byte[] value, int ch, int fromIndex, int toIndex) {\n@@ -218,1 +206,1 @@\n-    public static int indexOf(byte[] value, byte[] str) {\n+    static int indexOf(byte[] value, byte[] str) {\n@@ -229,1 +217,1 @@\n-    public static int indexOf(byte[] value, int valueCount, byte[] str, int strCount, int fromIndex) {\n+    static int indexOf(byte[] value, int valueCount, byte[] str, int strCount, int fromIndex) {\n@@ -251,1 +239,1 @@\n-    public static int lastIndexOf(byte[] src, int srcCount,\n+    static int lastIndexOf(byte[] src, int srcCount,\n@@ -279,1 +267,1 @@\n-    public static int lastIndexOf(final byte[] value, int ch, int fromIndex) {\n+    static int lastIndexOf(final byte[] value, int ch, int fromIndex) {\n@@ -292,1 +280,1 @@\n-    public static String replace(byte[] value, char oldChar, char newChar) {\n+    static String replace(byte[] value, char oldChar, char newChar) {\n@@ -329,1 +317,1 @@\n-    public static String replace(byte[] value, int valLen, byte[] targ,\n+    static String replace(byte[] value, int valLen, byte[] targ,\n@@ -379,2 +367,2 @@\n-    \/\/ case insensitive\n-    public static boolean regionMatchesCI(byte[] value, int toffset,\n+    \/\/ case in-sensitive\n+    static boolean regionMatchesCI(byte[] value, int toffset,\n@@ -394,1 +382,1 @@\n-    public static boolean regionMatchesCI_UTF16(byte[] value, int toffset,\n+    static boolean regionMatchesCI_UTF16(byte[] value, int toffset,\n@@ -416,1 +404,1 @@\n-    public static String toLowerCase(String str, byte[] value, Locale locale) {\n+    static String toLowerCase(String str, byte[] value, Locale locale) {\n@@ -483,1 +471,1 @@\n-    public static String toUpperCase(String str, byte[] value, Locale locale) {\n+    static String toUpperCase(String str, byte[] value, Locale locale) {\n@@ -563,1 +551,1 @@\n-    public static String trim(byte[] value) {\n+    static String trim(byte[] value) {\n@@ -576,1 +564,1 @@\n-    public static int indexOfNonWhitespace(byte[] value) {\n+    static int indexOfNonWhitespace(byte[] value) {\n@@ -589,3 +577,2 @@\n-    public static int lastIndexOfNonWhitespace(byte[] value) {\n-        int length = value.length;\n-        int right = length;\n+    static int lastIndexOfNonWhitespace(byte[] value) {\n+        int right = value.length;\n@@ -602,1 +589,1 @@\n-    public static String strip(byte[] value) {\n+    static String strip(byte[] value) {\n@@ -612,1 +599,1 @@\n-    public static String stripLeading(byte[] value) {\n+    static String stripLeading(byte[] value) {\n@@ -617,1 +604,1 @@\n-    public static String stripTrailing(byte[] value) {\n+    static String stripTrailing(byte[] value) {\n@@ -716,1 +703,1 @@\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+    static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n@@ -723,1 +710,1 @@\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+    static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n@@ -731,6 +718,1 @@\n-    public static void putChar(byte[] val, int index, int c) {\n-        \/\/assert (canEncode(c));\n-        val[index] = (byte)(c);\n-    }\n-\n-    public static char getChar(byte[] val, int index) {\n+    static char getChar(byte[] val, int index) {\n@@ -740,13 +722,1 @@\n-    public static byte[] toBytes(int[] val, int off, int len) {\n-        byte[] ret = new byte[len];\n-        for (int i = 0; i < len; i++) {\n-            int cp = val[off++];\n-            if (!canEncode(cp)) {\n-                return null;\n-            }\n-            ret[i] = (byte)cp;\n-        }\n-        return ret;\n-    }\n-\n-    public static byte[] toBytes(char c) {\n+    static byte[] toBytes(char c) {\n@@ -756,1 +726,1 @@\n-    public static String newString(byte[] val, int index, int len) {\n+    static String newString(byte[] val, int index, int len) {\n@@ -766,1 +736,1 @@\n-    public static void inflate(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n+    static void inflate(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n@@ -774,1 +744,1 @@\n-    public static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n+    static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n@@ -827,1 +797,1 @@\n-        public long estimateSize() { return (long)(fence - index); }\n+        public long estimateSize() { return fence - index; }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":44,"deletions":74,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    public static byte[] newBytesFor(int len) {\n+    static byte[] newBytesFor(int len) {\n@@ -63,1 +63,1 @@\n-    public static int newBytesLength(int len) {\n+    static int newBytesLength(int len) {\n@@ -92,1 +92,1 @@\n-    public static int length(byte[] value) {\n+    static int length(byte[] value) {\n@@ -114,1 +114,1 @@\n-    public static int codePointAt(byte[] value, int index, int end) {\n+    static int codePointAt(byte[] value, int index, int end) {\n@@ -137,1 +137,1 @@\n-    public static int codePointBefore(byte[] value, int index) {\n+    static int codePointBefore(byte[] value, int index) {\n@@ -158,1 +158,1 @@\n-    public static int codePointCount(byte[] value, int beginIndex, int endIndex) {\n+    static int codePointCount(byte[] value, int beginIndex, int endIndex) {\n@@ -162,1 +162,1 @@\n-    public static char[] toChars(byte[] value) {\n+    static char[] toChars(byte[] value) {\n@@ -176,1 +176,1 @@\n-    public static byte[] toBytes(char[] value, int off, int len) {\n+    static byte[] toBytes(char[] value, int off, int len) {\n@@ -221,1 +221,1 @@\n-    public static byte[] compress(final char[] val, final int off, final int count) {\n+    static byte[] compress(final char[] val, final int off, final int count) {\n@@ -248,1 +248,1 @@\n-    public static byte[] compress(final byte[] val, final int off, final int count) {\n+    static byte[] compress(final byte[] val, final int off, final int count) {\n@@ -282,1 +282,1 @@\n-    public static byte[] compress(final int[] val, int off, final int count) {\n+    static byte[] compress(final int[] val, int off, final int count) {\n@@ -392,1 +392,1 @@\n-    public static int compress(char[] src, int srcOff, byte[] dst, int dstOff, int len) {\n+    static int compress(char[] src, int srcOff, byte[] dst, int dstOff, int len) {\n@@ -407,1 +407,1 @@\n-    public static int compress(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n+    static int compress(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n@@ -423,1 +423,1 @@\n-    public static byte[] toBytes(int[] val, int index, int len) {\n+    static byte[] toBytes(int[] val, int index, int len) {\n@@ -431,1 +431,1 @@\n-    public static byte[] toBytes(char c) {\n+    static byte[] toBytes(char c) {\n@@ -445,1 +445,1 @@\n-    public static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin) {\n+    static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin) {\n@@ -456,1 +456,1 @@\n-    public static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin) {\n+    static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin) {\n@@ -465,1 +465,1 @@\n-    public static int compareTo(byte[] value, byte[] other) {\n+    static int compareTo(byte[] value, byte[] other) {\n@@ -474,1 +474,1 @@\n-    public static int compareTo(byte[] value, byte[] other, int len1, int len2) {\n+    static int compareTo(byte[] value, byte[] other, int len1, int len2) {\n@@ -494,1 +494,1 @@\n-    public static int compareToLatin1(byte[] value, byte[] other) {\n+    static int compareToLatin1(byte[] value, byte[] other) {\n@@ -498,1 +498,1 @@\n-    public static int compareToLatin1(byte[] value, byte[] other, int len1, int len2) {\n+    static int compareToLatin1(byte[] value, byte[] other, int len1, int len2) {\n@@ -502,1 +502,1 @@\n-    public static int compareToCI(byte[] value, byte[] other) {\n+    static int compareToCI(byte[] value, byte[] other) {\n@@ -515,2 +515,2 @@\n-            int cp1 = (int)getChar(value, k1);\n-            int cp2 = (int)getChar(other, k2);\n+            int cp1 = getChar(value, k1);\n+            int cp2 = getChar(other, k2);\n@@ -542,1 +542,1 @@\n-    \/\/ Case insensitive comparison of two code points\n+    \/\/ Case in-sensitive comparison of two code points\n@@ -591,1 +591,1 @@\n-    public static int compareToCI_Latin1(byte[] value, byte[] other) {\n+    static int compareToCI_Latin1(byte[] value, byte[] other) {\n@@ -595,1 +595,1 @@\n-    public static int hashCode(byte[] value) {\n+    static int hashCode(byte[] value) {\n@@ -600,1 +600,1 @@\n-    public static int indexOf(byte[] value, int ch, int fromIndex, int toIndex) {\n+    static int indexOf(byte[] value, int ch, int fromIndex, int toIndex) {\n@@ -611,1 +611,1 @@\n-    public static int indexOf(byte[] value, byte[] str) {\n+    static int indexOf(byte[] value, byte[] str) {\n@@ -622,1 +622,1 @@\n-    public static int indexOf(byte[] value, int valueCount, byte[] str, int strCount, int fromIndex) {\n+    static int indexOf(byte[] value, int valueCount, byte[] str, int strCount, int fromIndex) {\n@@ -660,1 +660,1 @@\n-    public static int indexOfLatin1(byte[] value, byte[] str) {\n+    static int indexOfLatin1(byte[] value, byte[] str) {\n@@ -671,1 +671,1 @@\n-    public static int indexOfLatin1(byte[] src, int srcCount, byte[] tgt, int tgtCount, int fromIndex) {\n+    static int indexOfLatin1(byte[] src, int srcCount, byte[] tgt, int tgtCount, int fromIndex) {\n@@ -677,1 +677,1 @@\n-    public static int indexOfLatin1Unsafe(byte[] src, int srcCount, byte[] tgt, int tgtCount, int fromIndex) {\n+    static int indexOfLatin1Unsafe(byte[] src, int srcCount, byte[] tgt, int tgtCount, int fromIndex) {\n@@ -733,1 +733,1 @@\n-    public static int lastIndexOf(byte[] src, int srcCount,\n+    static int lastIndexOf(byte[] src, int srcCount,\n@@ -768,1 +768,1 @@\n-    public static int lastIndexOf(byte[] value, int ch, int fromIndex) {\n+    static int lastIndexOf(byte[] value, int ch, int fromIndex) {\n@@ -801,1 +801,1 @@\n-    public static String replace(byte[] value, char oldChar, char newChar) {\n+    static String replace(byte[] value, char oldChar, char newChar) {\n@@ -832,1 +832,1 @@\n-    public static String replace(byte[] value, int valLen, boolean valLat1,\n+    static String replace(byte[] value, int valLen, boolean valLat1,\n@@ -947,1 +947,1 @@\n-    public static boolean regionMatchesCI(byte[] value, int toffset,\n+    static boolean regionMatchesCI(byte[] value, int toffset,\n@@ -952,1 +952,1 @@\n-    public static boolean regionMatchesCI_Latin1(byte[] value, int toffset,\n+    static boolean regionMatchesCI_Latin1(byte[] value, int toffset,\n@@ -958,1 +958,1 @@\n-    public static String toLowerCase(String str, byte[] value, Locale locale) {\n+    static String toLowerCase(String str, byte[] value, Locale locale) {\n@@ -968,1 +968,1 @@\n-            int cp = (int)getChar(value, first);\n+            int cp = getChar(value, first);\n@@ -991,1 +991,1 @@\n-            int cp = (int)getChar(value, i);\n+            int cp = getChar(value, i);\n@@ -1006,1 +1006,1 @@\n-        if (bits < 0 || bits > 0xff) {\n+        if (bits > 0xff) {\n@@ -1062,1 +1062,1 @@\n-    public static String toUpperCase(String str, byte[] value, Locale locale) {\n+    static String toUpperCase(String str, byte[] value, Locale locale) {\n@@ -1072,1 +1072,1 @@\n-            int cp = (int)getChar(value, first);\n+            int cp = getChar(value, first);\n@@ -1096,1 +1096,1 @@\n-            int cp = (int)getChar(value, i);\n+            int cp = getChar(value, i);\n@@ -1107,1 +1107,1 @@\n-        if (bits < 0 || bits > 0xff) {\n+        if (bits > 0xff) {\n@@ -1167,1 +1167,1 @@\n-    public static String trim(byte[] value) {\n+    static String trim(byte[] value) {\n@@ -1182,1 +1182,1 @@\n-    public static int indexOfNonWhitespace(byte[] value) {\n+    static int indexOfNonWhitespace(byte[] value) {\n@@ -1195,3 +1195,2 @@\n-    public static int lastIndexOfNonWhitespace(byte[] value) {\n-        int length = value.length >>> 1;\n-        int right = length;\n+    static int lastIndexOfNonWhitespace(byte[] value) {\n+        int right = value.length >>> 1;\n@@ -1208,1 +1207,1 @@\n-    public static String strip(byte[] value) {\n+    static String strip(byte[] value) {\n@@ -1219,1 +1218,1 @@\n-    public static String stripLeading(byte[] value) {\n+    static String stripLeading(byte[] value) {\n@@ -1225,1 +1224,1 @@\n-    public static String stripTrailing(byte[] value) {\n+    static String stripTrailing(byte[] value) {\n@@ -1391,1 +1390,1 @@\n-        public long estimateSize() { return (long)(fence - index); }\n+        public long estimateSize() { return fence - index; }\n@@ -1476,1 +1475,1 @@\n-        public long estimateSize() { return (long)(fence - index); }\n+        public long estimateSize() { return fence - index; }\n@@ -1486,1 +1485,1 @@\n-    public static void putCharSB(byte[] val, int index, int c) {\n+    static void putCharSB(byte[] val, int index, int c) {\n@@ -1491,1 +1490,1 @@\n-    public static void putCharsSB(byte[] val, int index, char[] ca, int off, int end) {\n+    static void putCharsSB(byte[] val, int index, char[] ca, int off, int end) {\n@@ -1502,1 +1501,1 @@\n-    public static void putCharsSB(byte[] val, int index, CharSequence s, int off, int end) {\n+    static void putCharsSB(byte[] val, int index, CharSequence s, int off, int end) {\n@@ -1509,1 +1508,1 @@\n-    public static int codePointAtSB(byte[] val, int index, int end) {\n+    static int codePointAtSB(byte[] val, int index, int end) {\n@@ -1513,1 +1512,1 @@\n-    public static int codePointBeforeSB(byte[] val, int index) {\n+    static int codePointBeforeSB(byte[] val, int index) {\n@@ -1517,1 +1516,1 @@\n-    public static int codePointCountSB(byte[] val, int beginIndex, int endIndex) {\n+    static int codePointCountSB(byte[] val, int beginIndex, int endIndex) {\n@@ -1521,1 +1520,1 @@\n-    public static boolean contentEquals(byte[] v1, byte[] v2, int len) {\n+    static boolean contentEquals(byte[] v1, byte[] v2, int len) {\n@@ -1531,1 +1530,1 @@\n-    public static boolean contentEquals(byte[] value, CharSequence cs, int len) {\n+    static boolean contentEquals(byte[] value, CharSequence cs, int len) {\n@@ -1541,1 +1540,1 @@\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+    static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n@@ -1550,1 +1549,1 @@\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+    static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n@@ -1560,1 +1559,1 @@\n-    public static char charAt(byte[] value, int index) {\n+    static char charAt(byte[] value, int index) {\n@@ -1565,1 +1564,1 @@\n-    public static void reverse(byte[] val, int count) {\n+    static void reverse(byte[] val, int count) {\n@@ -1600,1 +1599,1 @@\n-    public static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n+    static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len) {\n@@ -1609,1 +1608,1 @@\n-    public static int lastIndexOfLatin1(byte[] src, int srcCount,\n+    static int lastIndexOfLatin1(byte[] src, int srcCount,\n@@ -1662,1 +1661,1 @@\n-    public static void checkIndex(int off, byte[] val) {\n+    static void checkIndex(int off, byte[] val) {\n@@ -1666,1 +1665,1 @@\n-    public static void checkOffset(int off, byte[] val) {\n+    static void checkOffset(int off, byte[] val) {\n@@ -1670,1 +1669,1 @@\n-    public static void checkBoundsBeginEnd(int begin, int end, byte[] val) {\n+    static void checkBoundsBeginEnd(int begin, int end, byte[] val) {\n@@ -1674,1 +1673,1 @@\n-    public static void checkBoundsOffCount(int offset, int count, byte[] val) {\n+    static void checkBoundsOffCount(int offset, int count, byte[] val) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":74,"deletions":75,"binary":false,"changes":149,"status":"modified"}]}