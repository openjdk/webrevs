{"files":[{"patch":"@@ -120,1 +120,1 @@\n-            if (archivedCache == null || archivedCache.length != size) {\n+            if (archivedCache == null) {\n@@ -127,0 +127,2 @@\n+            } else if (archivedCache.length != size) {\n+                throw new InternalError(\"CDS archive is broken: ByteCache mismatch\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Byte.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8987,1 +8987,1 @@\n-            if (archivedCache == null || archivedCache.length != size) {\n+            if (archivedCache == null) {\n@@ -8993,0 +8993,2 @@\n+            } else if (archivedCache.length != size) {\n+                throw new InternalError(\"CDS archive is broken: CharacterCache mismatch\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -963,1 +963,10 @@\n-                for(int i = 0; i < c.length; i++) {\n+                \/\/ Use all cached values from the archive to avoid breaking\n+                \/\/ identity rules with objects loaded from the archive.\n+                int archivedHigh = (archivedCache == null) ? 0 : archivedCache.length;\n+                for (int i = 0; i < archivedHigh; i++) {\n+                    c[i] = archivedCache[i];\n+                    assert j == archivedCache[i];\n+                    j++;\n+                }\n+                \/\/ Fill the rest of the cache.\n+                for (int i = archivedHigh; i < size; i++) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -965,1 +965,1 @@\n-            if (archivedCache == null || archivedCache.length != size) {\n+            if (archivedCache == null) {\n@@ -972,0 +972,2 @@\n+            } else if (archivedCache.length != size) {\n+                throw new InternalError(\"CDS archive is broken: LongCache mismatch\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-            if (archivedCache == null || archivedCache.length != size) {\n+            if (archivedCache == null) {\n@@ -254,0 +254,2 @@\n+            } else if (archivedCache.length != size) {\n+                throw new InternalError(\"CDS archive is broken: ShortCache mismatch\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Short.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}