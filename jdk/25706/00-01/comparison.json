{"files":[{"patch":"@@ -474,0 +474,2 @@\n+  \/\/ If you change anything in this enum please patch\n+  \/\/ vmStructs_jvmci.cpp and HotSpotNmethod.java accordingly.\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -567,5 +567,27 @@\n-                                                                          \\\n-  declare_constant_with_value(\"nmethod::ChangeReason::GC_unlinking_cold\", nmethod::ChangeReason::GC_unlinking_cold) \\\n-  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_new_installation\", nmethod::ChangeReason::JVMCI_new_installation) \\\n-  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_invalidate_nmethod\", nmethod::ChangeReason::JVMCI_invalidate_nmethod) \\\n-                                                                          \\\n+                                                                                                           \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::UNKNOWN\", nmethod::ChangeReason::unknown)                                                       \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::C1_CODEPATCH\", nmethod::ChangeReason::C1_codepatch)                                             \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::C1_DEOPTIMIZE\", nmethod::ChangeReason::C1_deoptimize)                                           \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::C1_DEOPTIMIZE_FOR_PATCHING\", nmethod::ChangeReason::C1_deoptimize_for_patching)                 \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::C1_PREDICATE_FAILED_TRAP\", nmethod::ChangeReason::C1_predicate_failed_trap)                     \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::CI_REPLAY\", nmethod::ChangeReason::CI_replay)                                                   \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::GC_UNLINKING\", nmethod::ChangeReason::GC_unlinking)                                             \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::GC_UNLINKING_COLD\", nmethod::ChangeReason::GC_unlinking_cold)                                   \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_INVALIDATE_NMETHOD\", nmethod::ChangeReason::JVMCI_invalidate_nmethod)                     \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_INVALIDATE_NMETHOD_MIRROR\", nmethod::ChangeReason::JVMCI_invalidate_nmethod_mirror)       \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_MATERIALIZE_VIRTUAL_OBJECT\", nmethod::ChangeReason::JVMCI_materialize_virtual_object)     \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_NEW_INSTALLATION\", nmethod::ChangeReason::JVMCI_new_installation)                         \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_REGISTER_METHOD\", nmethod::ChangeReason::JVMCI_register_method)                           \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_REPLACING_WITH_NEW_CODE\", nmethod::ChangeReason::JVMCI_replacing_with_new_code)           \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::JVMCI_REPROFILE\", nmethod::ChangeReason::JVMCI_reprofile)                                       \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::MARKED_FOR_DEOPTIMIZATION\", nmethod::ChangeReason::marked_for_deoptimization)                   \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::MISSING_EXCEPTION_HANDLER\", nmethod::ChangeReason::missing_exception_handler)                   \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::NOT_USED\", nmethod::ChangeReason::not_used)                                                     \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::OSR_INVALIDATION_BACK_BRANCH\", nmethod::ChangeReason::OSR_invalidation_back_branch)             \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::OSR_INVALIDATION_FOR_COMPILING_WITH_C1\", nmethod::ChangeReason::OSR_invalidation_for_compiling_with_C1)   \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::OSR_INVALIDATION_OF_LOWER_LEVEL\", nmethod::ChangeReason::OSR_invalidation_of_lower_level)                 \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::SET_NATIVE_FUNCTION\", nmethod::ChangeReason::set_native_function)            \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::UNCOMMON_TRAP\", nmethod::ChangeReason::uncommon_trap)                        \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::WHITEBOX_DEOPTIMIZATION\", nmethod::ChangeReason::whitebox_deoptimization)    \\\n+  declare_constant_with_value(\"nmethod::ChangeReason::ZOMBIE\", nmethod::ChangeReason::zombie)                                      \\\n+                                                                                    \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":27,"deletions":5,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -127,0 +127,3 @@\n+    \/**\n+     * @return an integer representing the reason why this InstalledCode changed.\n+     *\/\n@@ -131,0 +134,3 @@\n+    \/**\n+     * @return a String describing the reason why this InstalledCode changed.\n+     *\/\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/InstalledCode.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import jdk.vm.ci.common.JVMCIError;\n@@ -79,0 +80,41 @@\n+    \/**\n+     * This is a mirror of the ChangeReason enum defined in nmethod.hpp.\n+     * It defines constants representing different reasons why an nmethod\n+     * changed or was invalidated.\n+     *\/\n+    public enum ChangeReason {\n+        UNKNOWN,\n+        C1_CODEPATCH,\n+        C1_DEOPTIMIZE,\n+        C1_DEOPTIMIZE_FOR_PATCHING,\n+        C1_PREDICATE_FAILED_TRAP,\n+        CI_REPLAY,\n+        GC_UNLINKING,\n+        GC_UNLINKING_COLD,\n+        JVMCI_INVALIDATE_NMETHOD,\n+        JVMCI_INVALIDATE_NMETHOD_MIRROR,\n+        JVMCI_MATERIALIZE_VIRTUAL_OBJECT,\n+        JVMCI_NEW_INSTALLATION,\n+        JVMCI_REGISTER_METHOD,\n+        JVMCI_REPLACING_WITH_NEW_CODE,\n+        JVMCI_REPROFILE,\n+        MARKED_FOR_DEOPTIMIZATION,\n+        MISSING_EXCEPTION_HANDLER,\n+        NOT_USED,\n+        OSR_INVALIDATION_BACK_BRANCH,\n+        OSR_INVALIDATION_FOR_COMPILING_WITH_C1,\n+        OSR_INVALIDATION_OF_LOWER_LEVEL,\n+        SET_NATIVE_FUNCTION,\n+        UNCOMMON_TRAP,\n+        WHITEBOX_DEOPTIMIZATION,\n+        ZOMBIE;\n+\n+        ChangeReason() {\n+            int expect = ordinal();\n+            int actual = nmethodChangeReasonValue(name());\n+            if (expect != actual) {\n+                throw new JVMCIError(\"%s: expected %d, got %d\", name(), expect, actual);\n+            }\n+        }\n+    }\n+\n@@ -191,0 +233,4 @@\n+\n+    private static int nmethodChangeReasonValue(String name) {\n+        return HotSpotJVMCIRuntime.runtime().config.getConstant(\"nmethod::ChangeReason::\" + name, Integer.class);\n+    }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotNmethod.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-    public final int JVMCI_new_installation = getConstant(\"nmethod::ChangeReason::JVMCI_new_installation\", Integer.class);\n-    public final int JVMCI_invalidate_nmethod = getConstant(\"nmethod::ChangeReason::JVMCI_invalidate_nmethod\", Integer.class);\n+    public final int JVMCI_new_installation = getConstant(\"nmethod::ChangeReason::JVMCI_NEW_INSTALLATION\", Integer.class);\n+    public final int JVMCI_invalidate_nmethod = getConstant(\"nmethod::ChangeReason::JVMCI_INVALIDATE_NMETHOD\", Integer.class);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}