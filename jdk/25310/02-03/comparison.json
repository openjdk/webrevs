{"files":[{"patch":"@@ -234,3 +234,0 @@\n-                    if (data == null) {\n-                        return null;\n-                    }\n@@ -301,0 +298,1 @@\n+\n@@ -304,11 +302,6 @@\n-        private static byte[] compress(byte[] input) {\n-            try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                    GZIPOutputStream gos = new GZIPOutputStream(baos)) {\n-                final int decompressedLen = input.length;\n-                gos.write(input, 0, decompressedLen);\n-                gos.finish();\n-\n-                if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n-                    SSLLogger.fine(\"decompressed bytes: \" + decompressedLen\n-                            + \"; compressed bytes: \" + baos.size());\n-                }\n+        private static byte[] compress(byte[] input) throws IOException {\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            GZIPOutputStream gos = new GZIPOutputStream(baos);\n+            final int decompressedLen = input.length;\n+            gos.write(input, 0, decompressedLen);\n+            gos.finish();\n@@ -316,5 +309,3 @@\n-                return baos.toByteArray();\n-            } catch (Exception e) {\n-                if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n-                    SSLLogger.fine(\"Compression failure: \" + e.getMessage());\n-                }\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n+                SSLLogger.fine(\"decompressed bytes: \" + decompressedLen\n+                        + \"; compressed bytes: \" + baos.size());\n@@ -323,1 +314,1 @@\n-            return null;\n+            return baos.toByteArray();\n@@ -326,1 +317,2 @@\n-        private static ByteBuffer decompress(ByteBuffer input) {\n+        private static ByteBuffer decompress(ByteBuffer input)\n+                throws IOException {\n@@ -331,8 +323,3 @@\n-            try (GZIPInputStream gis = new GZIPInputStream(\n-                    new ByteArrayInputStream(bytes))) {\n-                byte[] out = gis.readAllBytes();\n-\n-                if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n-                    SSLLogger.fine(\"compressed bytes: \" + compressedLen\n-                            + \"; decompressed bytes: \" + out.length);\n-                }\n+            GZIPInputStream gis = new GZIPInputStream(\n+                    new ByteArrayInputStream(bytes));\n+            byte[] out = gis.readAllBytes();\n@@ -340,5 +327,3 @@\n-                return ByteBuffer.wrap(out);\n-            } catch (Exception e) {\n-                if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n-                    SSLLogger.fine(\"Decompression failure: \" + e.getMessage());\n-                }\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,handshake\")) {\n+                SSLLogger.fine(\"compressed bytes: \" + compressedLen\n+                        + \"; decompressed bytes: \" + out.length);\n@@ -347,1 +332,1 @@\n-            return null;\n+            return ByteBuffer.wrap(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SessionTicketExtension.java","additions":20,"deletions":35,"binary":false,"changes":55,"status":"modified"}]}