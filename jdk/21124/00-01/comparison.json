{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.awt.EventQueue;\n@@ -32,1 +33,1 @@\n-import java.awt.Panel;\n+import java.awt.Robot;\n@@ -39,1 +40,0 @@\n-import java.util.List;\n@@ -44,0 +44,1 @@\n+ * @key headful\n@@ -46,3 +47,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual MouseEnterExitTest\n+ * @run main MouseEnterExitTest\n@@ -70,1 +69,1 @@\n-    public Dimension preferredSize() {\n+    public Dimension getPreferredSize() {\n@@ -79,30 +78,0 @@\n-class HWSquare extends Panel {\n-    int width;\n-    int height;\n-\n-    public HWSquare(Color color, int w, int h) {\n-        setBackground(color);\n-        width = w;\n-        height = h;\n-        addMouseListener(new EnterExitAdapter(this));\n-        setName(\"HWSquare-\" + color.toString());\n-\n-        addKeyListener(new KeyAdapter() {\n-            public void keyPressed(KeyEvent ev) {\n-                MouseEnterExitTest.getFrame().setTitle(\"MouseEnterExitTest\");\n-                MouseEnterExitTest.TestFailed = false;\n-            }\n-        });\n-    }\n-\n-    public void paint(Graphics g) {\n-        g.setColor(getBackground());\n-        g.fillRect(0, 0, getSize().width, getSize().height);\n-        super.paint(g);\n-    }\n-\n-    public Dimension preferredSize() {\n-        return new Dimension(width, height);\n-    }\n-}\n-\n@@ -110,0 +79,2 @@\n+    public LWSquare lw;\n+\n@@ -114,2 +85,1 @@\n-        LWSquare lw = new LWSquare(Color.red, 75, 75);\n-        lw.add(new HWSquare(Color.blue, 32, 32));\n+        lw = new LWSquare(Color.red, 75, 75);\n@@ -117,11 +87,0 @@\n-\n-        LWSquare lw2 = new LWSquare(Color.red, 75, 75);\n-        lw2.add(new LWSquare(Color.yellow, 32, 32));\n-        add(lw2);\n-\n-        add(new HWSquare(Color.blue, 75, 75));\n-\n-        HWSquare hw = new HWSquare(Color.blue, 75, 75);\n-        hw.add(new LWSquare(Color.red, 30, 30));\n-\n-        add(hw);\n@@ -144,1 +103,0 @@\n-                        MouseEnterExitTest.TestFailed = false;\n@@ -153,6 +111,1 @@\n-    static boolean TestFailed = false;\n-    static Frame TestFrame;\n-\n-    public MouseEnterExitTest() {\n-        runTest();\n-    }\n+    static MouseFrame TestFrame;\n@@ -161,15 +114,35 @@\n-        String INSTRUCTIONS = \"\"\"\n-            1. Move the mouse into any Frame,\n-            2. Verify that the frame background color changes to Green on enter\n-               and back to set color on exit events.\",\n-            3. If the color doesn't change on either enter\/exit\n-               then test fails.\n-                            \"\"\";\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(35)\n-                .testUI(runTest())\n-                .build()\n-                .awaitAndCheck();\n+        Robot robot = new Robot();\n+\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> TestFrame = new MouseFrame());\n+            if (TestFrame.lw.getBackground() != Color.red) {\n+                throw new RuntimeException(\"Initial Background color not matching\");\n+            }\n+            robot.delay(100);\n+            robot.waitForIdle();\n+            EventQueue.invokeAndWait(() -> robot.mouseMove(\n+                    TestFrame.getLocationOnScreen().x + TestFrame.getSize().width \/ 2,\n+                    TestFrame.getLocationOnScreen().y + TestFrame.getSize().height \/ 2));\n+            robot.delay(100);\n+            robot.waitForIdle();\n+\n+            if (TestFrame.lw.getBackground() != Color.green) {\n+                throw new RuntimeException(\"Initial Background color not matching\");\n+            }\n+            EventQueue.invokeAndWait(() -> robot.mouseMove(\n+                    TestFrame.getLocationOnScreen().x + TestFrame.getSize().width * 2,\n+                    TestFrame.getLocationOnScreen().y + TestFrame.getSize().height \/ 2));\n+            robot.delay(100);\n+            robot.waitForIdle();\n+\n+            if (TestFrame.lw.getBackground() != Color.red) {\n+                throw new RuntimeException(\"Initial Background color not matching\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (TestFrame != null) {\n+                    TestFrame.dispose();\n+                }\n+            });\n+        }\n@@ -181,9 +154,0 @@\n-\n-    public static List<Frame> runTest() {\n-        TestFrame = new MouseFrame();\n-        Frame otherFrame = new Frame(\"Other Frame\");\n-        otherFrame.setBounds(350, 50, 150, 200);\n-        otherFrame.setVisible(true);\n-        otherFrame.addMouseListener(new EnterExitAdapter(otherFrame));\n-        return List.of(TestFrame, otherFrame);\n-    }\n@@ -193,2 +157,2 @@\n-    Component   compToColor;\n-    Color       colorNormal;\n+    Component compToColor;\n+    Color colorNormal;\n","filename":"test\/jdk\/java\/awt\/Mouse\/MouseEnterExitTest.java","additions":46,"deletions":82,"binary":false,"changes":128,"status":"modified"}]}