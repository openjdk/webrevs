{"files":[{"patch":"@@ -46,29 +46,6 @@\n-    0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301,\n-    0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301,\n-    0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301,\n-    0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301, 0xF301,\n-\n-    0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01,\n-    0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01,\n-    0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01,\n-    0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01, 0x0D01,\n-\n-    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF,\n-    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF,\n-    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF,\n-    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF,\n-\n-    0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,\n-    0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,\n-    0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,\n-    0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,\n-\n-    0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549,\n-    0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549,\n-    0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549,\n-    0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549, 0x0549,\n-\n-    0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00,\n-    0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00,\n-    0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00,\n-    0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00, 0x0F00\n+    0xF301, 0xF301, 0xF301, 0xF301, \/\/ q^-1 mod montR\n+    0x0D01, 0x0D01, 0x0D01, 0x0D01, \/\/ q\n+    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, \/\/ Barrett multiplier\n+    0x0200, 0x0200, 0x0200, 0x0200, \/\/(dim\/2)^-1 mod q\n+    0x0549, 0x0549, 0x0549, 0x0549, \/\/ montR^2 mod q\n+    0x0F00, 0x0F00, 0x0F00, 0x0F00  \/\/ mask for kyber12to16\n@@ -77,2 +54,9 @@\n-static address kyberAvx512ConstsAddr() {\n-  return (address) kyberAvx512Consts;\n+static int qInvModROffset = 0;\n+static int qOffset = 8;\n+static int barretMultiplierOffset = 16;\n+static int dimHalfInverseOffset = 24;\n+static int montRSquareModqOffset = 32;\n+static int f00Offset = 40;\n+\n+static address kyberAvx512ConstsAddr(int offset) {\n+  return ((address) kyberAvx512Consts) + offset;\n@@ -81,0 +65,2 @@\n+const Register scratch = r10;\n+\n@@ -381,1 +367,0 @@\n-  const Register kyberConsts = r10;\n@@ -385,1 +370,0 @@\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n@@ -390,2 +374,6 @@\n-  __ evmovdquw(xmm30, Address(kyberConsts, 64), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm31, Address(kyberConsts, 0), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n@@ -475,1 +463,0 @@\n-  const Register kyberConsts = r10;\n@@ -479,2 +466,0 @@\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n-\n@@ -484,3 +469,9 @@\n-  __ evmovdquw(xmm31, Address(kyberConsts, 0), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm30, Address(kyberConsts, 64), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm29, Address(kyberConsts, 192), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm29,\n+                  ExternalAddress(kyberAvx512ConstsAddr(dimHalfInverseOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ (dim\/2)^-1 mod q\n@@ -521,2 +512,6 @@\n-  __ evmovdquw(xmm16, Address(kyberConsts, 128), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm17, Address(kyberConsts, 64), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n@@ -540,2 +535,6 @@\n-  __ evmovdquw(xmm16, Address(kyberConsts, 128), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm17, Address(kyberConsts, 64), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n@@ -590,1 +589,0 @@\n-  const Register kyberConsts = r10;\n@@ -600,1 +598,0 @@\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n@@ -604,4 +601,9 @@\n-  __ evmovdquw(xmm31, Address(kyberConsts, 0), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm30, Address(kyberConsts, 64), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm23, Address(kyberConsts, 256), Assembler::AVX_512bit);\n-\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm23,\n+                  ExternalAddress(kyberAvx512ConstsAddr(montRSquareModqOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ montR^2 mod q\n@@ -706,5 +708,3 @@\n-  const Register kyberConsts = r11;\n-\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n-\n-  __ evmovdquw(xmm31, Address(kyberConsts, 64), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n@@ -755,4 +755,3 @@\n-  const Register kyberConsts = r11;\n-\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n-  __ evmovdquw(xmm31, Address(kyberConsts, 64), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n@@ -810,1 +809,0 @@\n-  const Register kyberConsts = r10;\n@@ -818,1 +816,0 @@\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n@@ -822,1 +819,3 @@\n-  __ evmovdquw(xmm23, Address(kyberConsts, 320), Assembler::AVX_512bit);\n+  __ vpbroadcastq(xmm23,\n+                  ExternalAddress(kyberAvx512ConstsAddr(f00Offset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ 0xF00\n@@ -893,1 +892,0 @@\n-\/\/ kyberConsts (short[40]) = c_rarg1\n@@ -904,1 +902,0 @@\n-  const Register kyberConsts = c_rarg1;\n@@ -906,1 +903,6 @@\n-  __ lea(kyberConsts, ExternalAddress(kyberAvx512ConstsAddr()));\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n@@ -910,2 +912,0 @@\n-  __ evmovdquw(xmm16, Address(kyberConsts, 128), Assembler::AVX_512bit);\n-  __ evmovdquw(xmm17, Address(kyberConsts, 64), Assembler::AVX_512bit);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_kyber.cpp","additions":68,"deletions":68,"binary":false,"changes":136,"status":"modified"}]}