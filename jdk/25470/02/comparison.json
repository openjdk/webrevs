{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+import javax.swing.JMenu;\n@@ -66,0 +67,1 @@\n+import javax.swing.JPopupMenu;\n@@ -859,0 +861,28 @@\n+    private static Accessible getCurrentAccessiblePopupMenu(Accessible a, Component c) {\n+        if (a == null) return null;\n+\n+        return invokeAndWait(new Callable<Accessible>() {\n+            @Override\n+            public Accessible call() throws Exception {\n+                return traversePopupMenu(a);\n+            }\n+        }, c);\n+    }\n+\n+    private static Accessible traversePopupMenu(Accessible a) {\n+        \/\/ a is root level popupmenu\n+        AccessibleContext ac = a.getAccessibleContext();\n+        if (ac != null) {\n+            for (int i = 0; i < ac.getAccessibleChildrenCount(); i++) {\n+                Accessible child = ac.getAccessibleChild(i);\n+                if (child instanceof JMenu subMenu) {\n+                    JPopupMenu popup = subMenu.getPopupMenu();\n+                    if (popup.isVisible()) {\n+                        return traversePopupMenu((Accessible) popup);\n+                    }\n+                }\n+            }\n+        }\n+        return a;\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":31,"deletions":1,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,4 @@\n+#import \"ThreadUtilities.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n@@ -54,0 +58,27 @@\n+\/*\n+ * Return all non-ignored children.\n+ *\/\n+- (NSArray *)accessibilityChildren {\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getCurrentAccessiblePopupMenu, sjc_CAccessibility,\n+            \"getCurrentAccessiblePopupMenu\",\n+             \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/Accessible;\", nil);\n+    jobject axComponent = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                                                             sjm_getCurrentAccessiblePopupMenu,\n+                                                             fAccessible, fComponent);\n+\n+    CommonComponentAccessibility *currentElement = [CommonComponentAccessibility createWithAccessible:axComponent\n+                                                            withEnv:env withView:self->fView isCurrent:YES];\n+\n+    NSArray *children = [CommonComponentAccessibility childrenOfParent:currentElement\n+                                withEnv:env\n+                                withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN\n+                                allowIgnored:NO];\n+\n+    if ([children count] == 0) {\n+        return nil;\n+    } else {\n+        return children;\n+    }\n+}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/MenuAccessibility.m","additions":32,"deletions":1,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+\n+\/*\n+ * @test\n+ * @bug 8341311\n+ * @summary Verifies that VoiceOver announces correct number of child for PopupMenu on macOS\n+ * @requires os.family == \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestPopupMenuChildCount\n+ *\/\n+\n+public class TestPopupMenuChildCount {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                This test is applicable only on macOS.\n+\n+                Test UI contains an empty JFrame. On press of left\/right mouse button,\n+                a PopupMenu will be visible.\n+\n+                Follow these steps to test the behaviour:\n+\n+                1. Start the VoiceOver (Press Command + F5) application\n+                2. Press Left\/Right mouse button inside test frame window to open\n+                   the PopupMenu\n+                3. VO should announce \"Menu\" with number of child items of the Popupmenu\n+                4. Press Up\/Down arrow to traverse popupmenu child items\n+                5. Press Right arrow key to open submenu\n+                6. VO should announce \"Menu\" with correct number of child items\n+                   for the submenu (For e.g. When Submenu-1 is open, VO should announce\n+                   \"Menu 4 items\")\n+                7. Repeat the process for other submenus\n+                8. Press Pass if you are able to hear correct announcements\n+                   else Fail\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(TestPopupMenuChildCount::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"Test Frame\");\n+\n+        JPopupMenu popupmenu = new JPopupMenu();\n+        JMenuItem mi1 = new JMenuItem(\"MenuItem-1\");\n+        JMenuItem mi2 = new JMenuItem(\"MenuItem-2\");\n+        JMenuItem mi3 = new JMenuItem(\"MenuItem-3\");\n+        popupmenu.add(mi1);\n+        popupmenu.add(mi2);\n+        popupmenu.add(mi3);\n+\n+        JMenu submenu1 = new JMenu(\"Submenu-1\");\n+        submenu1.add(\"subOne\");\n+        submenu1.add(\"subTwo\");\n+        submenu1.add(\"subThree\");\n+\n+        JMenu submenu2 = new JMenu(\"Submenu-2\");\n+        submenu2.add(\"subOne\");\n+        submenu2.add(\"subTwo\");\n+\n+        JMenu submenu3 = new JMenu (\"Submenu-3\");\n+        submenu3.add(\"subOne\");\n+        submenu1.add(submenu3);\n+\n+        popupmenu.add(submenu1);\n+        popupmenu.add(submenu2);\n+\n+        frame.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                popupmenu.show(e.getComponent(), e.getX(), e.getY());\n+            }\n+        });\n+        frame.setSize(300, 300);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/TestPopupMenuChildCount.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"}]}