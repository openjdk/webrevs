{"files":[{"patch":"@@ -1535,1 +1535,2 @@\n-  int rfile_len = (int)strlen(home) + 10;\n+  stringStream ss;\n+  ss.print(\"%s\/release\", home);\n@@ -1537,17 +1538,11 @@\n-  char* release_file = (char*) os::malloc(rfile_len, mtInternal);\n-  if (release_file) {\n-    os::snprintf(release_file, rfile_len, \"%s\/release\", home);\n-\n-    if (_image_release_file_content == nullptr) {\n-      FILE *file = fopen(release_file, \"rb\");\n-      if (!file) {\n-        free(release_file);\n-        return;\n-      }\n-      fseek(file, 0, SEEK_END);\n-      long sz = ftell(file);\n-      if (sz == -1) {\n-        free(release_file);\n-        return;\n-      }\n-      fseek(file, 0, SEEK_SET);\n+  if (_image_release_file_content == nullptr) {\n+    FILE* file = fopen(ss.base(), \"rb\");\n+    if (file == nullptr) {\n+      return;\n+    }\n+    fseek(file, 0, SEEK_END);\n+    long sz = ftell(file);\n+    if (sz == -1) {\n+      return;\n+    }\n+    fseek(file, 0, SEEK_SET);\n@@ -1555,6 +1550,5 @@\n-      _image_release_file_content = (char*) os::malloc(sz + 1, mtInternal);\n-      if (!_image_release_file_content) {\n-        fclose(file);\n-        free(release_file);\n-        return;\n-      }\n+    _image_release_file_content = (char*) os::malloc(sz + 1, mtInternal);\n+    if (!_image_release_file_content) {\n+      fclose(file);\n+      return;\n+    }\n@@ -1562,2 +1556,4 @@\n-      size_t elements_read = fread(_image_release_file_content, 1, sz, file);\n-      if (elements_read < (size_t)sz) _image_release_file_content[elements_read] = '\\0';\n+    size_t elements_read = fread(_image_release_file_content, 1, sz, file);\n+    if (elements_read < (size_t)sz) {\n+      _image_release_file_content[elements_read] = '\\0';\n+    } else {\n@@ -1565,3 +1561,5 @@\n-      \/\/ issues with \\r in line endings on Windows, so better replace those\n-      for (size_t i=0; i < elements_read; i++) {\n-        if (_image_release_file_content[i] == '\\r') { _image_release_file_content[i] = ' '; }\n+    }\n+    \/\/ issues with \\r in line endings on Windows, so better replace those\n+    for (size_t i = 0; i < elements_read; i++) {\n+      if (_image_release_file_content[i] == '\\r') {\n+        _image_release_file_content[i] = ' ';\n@@ -1569,1 +1567,0 @@\n-      fclose(file);\n@@ -1571,1 +1568,1 @@\n-    free(release_file);\n+    fclose(file);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-\/\/ One-shot PeriodicTask subclass for reading release file\n+\/\/ One-shot PeriodicTask subclass for reading the release file\n@@ -431,1 +431,1 @@\n-  ReadReleaseFileTask(size_t interval_time) : PeriodicTask(interval_time) {}\n+  ReadReleaseFileTask() : PeriodicTask(100) {}\n@@ -436,1 +436,1 @@\n-    \/\/ Reclaim our storage and disenroll ourself\n+    \/\/ Reclaim our storage and disenroll ourself.\n@@ -596,1 +596,2 @@\n-  ReadReleaseFileTask* read_task = new ReadReleaseFileTask(100);\n+  \/\/ Have the WatcherThread read the release file in the background.\n+  ReadReleaseFileTask* read_task = new ReadReleaseFileTask();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1436,1 +1436,1 @@\n-  \/\/ printing release file content\n+  \/\/ STEP(\"printing release file content\")\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}