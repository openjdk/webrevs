{"files":[{"patch":"@@ -1261,1 +1261,0 @@\n-\n@@ -1263,50 +1262,1 @@\n-  \/\/ A pos < 0 is invalid, but we delegate throwing the error to ConstantPool::copy_bootstrap_arguments_at\n-  if (pos >= 0) {\n-    int min_end = MIN2(0, end);\n-    while (-4 <= start && start < min_end) {\n-      if (pos >= buf->length()) break;\n-      oop pseudo_arg = nullptr;\n-      switch (start) {\n-      case -4: \/\/ bootstrap method\n-      {\n-        int bsm_index = caller->constants()->bootstrap_method_ref_index_at(bss_index_in_pool);\n-        pseudo_arg = caller->constants()->resolve_possibly_cached_constant_at(bsm_index, CHECK);\n-        break;\n-      }\n-      case -3: \/\/ name\n-      {\n-        Symbol* name =\n-            caller->constants()->name_ref_at(bss_index_in_pool, Bytecodes::_invokedynamic);\n-        Handle str = java_lang_String::create_from_symbol(name, CHECK);\n-        pseudo_arg = str();\n-        break;\n-      }\n-      case -2: \/\/ type\n-      {\n-        Symbol* type =\n-            caller->constants()->signature_ref_at(bss_index_in_pool, Bytecodes::_invokedynamic);\n-        Handle th;\n-        if (type->char_at(0) == JVM_SIGNATURE_FUNC) {\n-          th = SystemDictionary::find_method_handle_type(type, caller, CHECK);\n-        } else {\n-          th = SystemDictionary::find_java_mirror_for_type(type, caller, SignatureStream::NCDFError,\n-                                                           CHECK);\n-        }\n-        pseudo_arg = th();\n-        break;\n-      }\n-      case -1: \/\/ argument count\n-      {\n-        int argc = caller->constants()->bootstrap_argument_count_at(bss_index_in_pool);\n-        jvalue argc_value;\n-        argc_value.i = (jint)argc;\n-        pseudo_arg = java_lang_boxing_object::create(T_INT, &argc_value, CHECK);\n-        break;\n-      }\n-      };\n-      \/\/ Store the pseudo-argument, and advance the pointers.\n-      buf->obj_at_put(pos++, pseudo_arg);\n-      start++;\n-    }\n-  }\n-  \/\/ Now that we are done with this there may be regular arguments to process too.\n+\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":1,"deletions":51,"binary":false,"changes":52,"status":"modified"}]}