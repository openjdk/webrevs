{"files":[{"patch":"@@ -69,1 +69,1 @@\n-  intptr_t _cloned_vtable[1];\n+  intptr_t _cloned_vtable[1]; \/\/ Pseudo flexible array member.\n@@ -76,2 +76,3 @@\n-  intptr_t* cloned_vtable()   { return &_cloned_vtable[0]; }\n-  void zero()                 { memset(_cloned_vtable, 0, sizeof(intptr_t) * vtable_size()); }\n+  \/\/ Using _cloned_vtable[i] for i > 0 causes undefined behavior. We use address calculation instead.\n+  intptr_t* cloned_vtable()   { return (intptr_t*)((char*)this + offset_of(CppVtableInfo, _cloned_vtable)); }\n+  void zero()                 { memset(cloned_vtable(), 0, sizeof(intptr_t) * vtable_size()); }\n@@ -81,1 +82,1 @@\n-    return pointer_delta(&i._cloned_vtable[vtable_size], &i, sizeof(u1));\n+    return pointer_delta(&i.cloned_vtable()[vtable_size], &i, sizeof(u1));\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}