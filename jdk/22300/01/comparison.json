{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,4 @@\n+    \/\/ chunkSize is a multiple of block size and used to divide up\n+    \/\/ input data to trigger the intrinsic.\n+    private final int chunkSize;\n+\n@@ -65,0 +69,1 @@\n+        chunkSize = blockSize * 6400;\n@@ -181,1 +186,11 @@\n-        return implCrypt(in, inOff, len, out, outOff);\n+\n+        int processed = 0;\n+        for (;  len > chunkSize; inOff += chunkSize, outOff += chunkSize,\n+            len -= chunkSize) {\n+            processed += implCrypt(in, inOff, chunkSize, out, outOff);\n+        }\n+        \/\/ note: above loop always leaves some data to process (more than zero,\n+        \/\/ less than or equal to chunkSize) so this last call can be\n+        \/\/ unconditional\n+        processed += implCrypt(in, inOff, len, out, outOff);\n+        return processed;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CounterMode.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"}]}