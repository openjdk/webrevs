{"files":[{"patch":"@@ -5939,1 +5939,0 @@\n-#if COMPILER2_OR_JVMCI\n@@ -5973,1 +5972,0 @@\n-#endif \/\/ COMPILER2\n@@ -5987,4 +5985,0 @@\n-    generate_compare_long_strings();\n-\n-    generate_string_indexof_stubs();\n-\n@@ -6009,1 +6003,5 @@\n-#endif \/\/ COMPILER2_OR_JVMCI\n+    generate_compare_long_strings();\n+\n+    generate_string_indexof_stubs();\n+\n+#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -61,0 +61,7 @@\n+  common_initialize();\n+#ifdef COMPILER2\n+  c2_initialize();\n+#endif \/\/ COMPILER2\n+}\n+\n+void VM_Version::common_initialize() {\n@@ -155,4 +162,0 @@\n-  if (FLAG_IS_DEFAULT(UseMD5Intrinsics)) {\n-    FLAG_SET_DEFAULT(UseMD5Intrinsics, true);\n-  }\n-\n@@ -233,0 +236,1 @@\n+}\n@@ -235,2 +239,8 @@\n-  c2_initialize();\n-#endif \/\/ COMPILER2\n+void VM_Version::c2_initialize() {\n+  if (UseCMoveUnconditionally) {\n+    FLAG_SET_DEFAULT(UseCMoveUnconditionally, false);\n+  }\n+\n+  if (ConditionalMoveLimit > 0) {\n+    FLAG_SET_DEFAULT(ConditionalMoveLimit, 0);\n+  }\n@@ -238,1 +248,17 @@\n-  \/\/ NOTE: Make sure codes dependent on UseRVV are put after c2_initialize(),\n+  if (!UseRVV) {\n+    FLAG_SET_DEFAULT(MaxVectorSize, 0);\n+    FLAG_SET_DEFAULT(UseRVVForBigIntegerShiftIntrinsics, false);\n+  } else {\n+    if (!FLAG_IS_DEFAULT(MaxVectorSize) && MaxVectorSize != _initial_vector_length) {\n+      warning(\"Current system does not support RVV vector length for MaxVectorSize %d. Set MaxVectorSize to %d\",\n+               (int)MaxVectorSize, _initial_vector_length);\n+    }\n+    MaxVectorSize = _initial_vector_length;\n+    if (MaxVectorSize < 16) {\n+      warning(\"RVV does not support vector length less than 16 bytes. Disabling RVV.\");\n+      UseRVV = false;\n+      FLAG_SET_DEFAULT(MaxVectorSize, 0);\n+    }\n+  }\n+\n+  \/\/ NOTE: Make sure codes dependent on UseRVV are put after MaxVectorSize initialize,\n@@ -242,0 +268,67 @@\n+  if (FLAG_IS_DEFAULT(UseVectorizedHashCodeIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseVectorizedHashCodeIntrinsic, true);\n+  }\n+\n+  if (!UseZicbop) {\n+    if (!FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n+      warning(\"Zicbop is not available on this CPU\");\n+    }\n+    FLAG_SET_DEFAULT(AllocatePrefetchStyle, 0);\n+  } else {\n+    \/\/ Limit AllocatePrefetchDistance so that it does not exceed the\n+    \/\/ static constraint of 512 defined in runtime\/globals.hpp.\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchDistance)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchDistance, MIN2(512, 3 * (int)CacheLineSize));\n+    }\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchStepSize)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchStepSize, (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchScanIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchScanIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchCopyIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchCopyIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+\n+    if (PrefetchCopyIntervalInBytes != -1 &&\n+        ((PrefetchCopyIntervalInBytes & 7) || (PrefetchCopyIntervalInBytes >= 32768))) {\n+      warning(\"PrefetchCopyIntervalInBytes must be -1, or a multiple of 8 and < 32768\");\n+      PrefetchCopyIntervalInBytes &= ~7;\n+      if (PrefetchCopyIntervalInBytes >= 32768) {\n+        PrefetchCopyIntervalInBytes = 32760;\n+      }\n+    }\n+    if (AllocatePrefetchDistance !=-1 && (AllocatePrefetchDistance & 7)) {\n+      warning(\"AllocatePrefetchDistance must be multiple of 8\");\n+      AllocatePrefetchDistance &= ~7;\n+    }\n+    if (AllocatePrefetchStepSize & 7) {\n+      warning(\"AllocatePrefetchStepSize must be multiple of 8\");\n+      AllocatePrefetchStepSize &= ~7;\n+    }\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseMulAddIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseMulAddIntrinsic, true);\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseMultiplyToLenIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseMultiplyToLenIntrinsic, true);\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseSquareToLenIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseSquareToLenIntrinsic, true);\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseMontgomeryMultiplyIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseMontgomeryMultiplyIntrinsic, true);\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseMontgomerySquareIntrinsic)) {\n+    FLAG_SET_DEFAULT(UseMontgomerySquareIntrinsic, true);\n+  }\n+\n+  if (FLAG_IS_DEFAULT(UseMD5Intrinsics)) {\n+    FLAG_SET_DEFAULT(UseMD5Intrinsics, true);\n+  }\n+\n@@ -335,90 +428,0 @@\n-\n-#ifdef COMPILER2\n-void VM_Version::c2_initialize() {\n-  if (UseCMoveUnconditionally) {\n-    FLAG_SET_DEFAULT(UseCMoveUnconditionally, false);\n-  }\n-\n-  if (ConditionalMoveLimit > 0) {\n-    FLAG_SET_DEFAULT(ConditionalMoveLimit, 0);\n-  }\n-\n-  if (!UseRVV) {\n-    FLAG_SET_DEFAULT(MaxVectorSize, 0);\n-    FLAG_SET_DEFAULT(UseRVVForBigIntegerShiftIntrinsics, false);\n-  } else {\n-    if (!FLAG_IS_DEFAULT(MaxVectorSize) && MaxVectorSize != _initial_vector_length) {\n-      warning(\"Current system does not support RVV vector length for MaxVectorSize %d. Set MaxVectorSize to %d\",\n-               (int)MaxVectorSize, _initial_vector_length);\n-    }\n-    MaxVectorSize = _initial_vector_length;\n-    if (MaxVectorSize < 16) {\n-      warning(\"RVV does not support vector length less than 16 bytes. Disabling RVV.\");\n-      UseRVV = false;\n-      FLAG_SET_DEFAULT(MaxVectorSize, 0);\n-    }\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseVectorizedHashCodeIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseVectorizedHashCodeIntrinsic, true);\n-  }\n-\n-  if (!UseZicbop) {\n-    if (!FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n-      warning(\"Zicbop is not available on this CPU\");\n-    }\n-    FLAG_SET_DEFAULT(AllocatePrefetchStyle, 0);\n-  } else {\n-    \/\/ Limit AllocatePrefetchDistance so that it does not exceed the\n-    \/\/ static constraint of 512 defined in runtime\/globals.hpp.\n-    if (FLAG_IS_DEFAULT(AllocatePrefetchDistance)) {\n-      FLAG_SET_DEFAULT(AllocatePrefetchDistance, MIN2(512, 3 * (int)CacheLineSize));\n-    }\n-    if (FLAG_IS_DEFAULT(AllocatePrefetchStepSize)) {\n-      FLAG_SET_DEFAULT(AllocatePrefetchStepSize, (int)CacheLineSize);\n-    }\n-    if (FLAG_IS_DEFAULT(PrefetchScanIntervalInBytes)) {\n-      FLAG_SET_DEFAULT(PrefetchScanIntervalInBytes, 3 * (int)CacheLineSize);\n-    }\n-    if (FLAG_IS_DEFAULT(PrefetchCopyIntervalInBytes)) {\n-      FLAG_SET_DEFAULT(PrefetchCopyIntervalInBytes, 3 * (int)CacheLineSize);\n-    }\n-\n-    if (PrefetchCopyIntervalInBytes != -1 &&\n-        ((PrefetchCopyIntervalInBytes & 7) || (PrefetchCopyIntervalInBytes >= 32768))) {\n-      warning(\"PrefetchCopyIntervalInBytes must be -1, or a multiple of 8 and < 32768\");\n-      PrefetchCopyIntervalInBytes &= ~7;\n-      if (PrefetchCopyIntervalInBytes >= 32768) {\n-        PrefetchCopyIntervalInBytes = 32760;\n-      }\n-    }\n-    if (AllocatePrefetchDistance !=-1 && (AllocatePrefetchDistance & 7)) {\n-      warning(\"AllocatePrefetchDistance must be multiple of 8\");\n-      AllocatePrefetchDistance &= ~7;\n-    }\n-    if (AllocatePrefetchStepSize & 7) {\n-      warning(\"AllocatePrefetchStepSize must be multiple of 8\");\n-      AllocatePrefetchStepSize &= ~7;\n-    }\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseMulAddIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseMulAddIntrinsic, true);\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseMultiplyToLenIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseMultiplyToLenIntrinsic, true);\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseSquareToLenIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseSquareToLenIntrinsic, true);\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseMontgomeryMultiplyIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseMontgomeryMultiplyIntrinsic, true);\n-  }\n-\n-  if (FLAG_IS_DEFAULT(UseMontgomerySquareIntrinsic)) {\n-    FLAG_SET_DEFAULT(UseMontgomerySquareIntrinsic, true);\n-  }\n-}\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":100,"deletions":97,"binary":false,"changes":197,"status":"modified"},{"patch":"@@ -267,0 +267,2 @@\n+  static void common_initialize();\n+\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}