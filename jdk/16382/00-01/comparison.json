{"files":[{"patch":"@@ -4225,2 +4225,1 @@\n-void MacroAssembler::FLOATCVT##_safe(Register dst, FloatRegister src,                     \\\n-                                     RoundingMode rm, Register tmp) {                     \\\n+void MacroAssembler::FLOATCVT##_safe(Register dst, FloatRegister src, Register tmp) {     \\\n@@ -4234,1 +4233,1 @@\n-  FLOATCVT(dst, src, rm);                                                                 \\\n+  FLOATCVT(dst, src);                                                                     \\\n@@ -4245,0 +4244,46 @@\n+void MacroAssembler::java_round_float(Register dst, FloatRegister src,\n+                                      FloatRegister ftmp, Register tmp) {\n+  Label done;\n+  assert_different_registers(dst, tmp);\n+  mv(dst, zr);\n+\n+  fclass_s(tmp, src);\n+\n+  \/\/ dst = 0\n+  \/\/ if +\/-0, +\/-subnormal numbers, signaling\/quiet NaN\n+  andi(tmp, tmp, 0b1100111100);\n+  bnez(tmp, done);\n+\n+  \/\/ dst = (src + 0.5f) rounded down towards negative infinity\n+  \/\/ if +\/-inf, +\/-normal numbers\n+  li(tmp, 0x3f000000);\n+  fmv_w_x(ftmp, tmp);\n+  fadd_s(ftmp, src, ftmp);\n+  fcvt_w_s(dst, ftmp, RoundingMode::rdn);\n+\n+  bind(done);\n+}\n+\n+void MacroAssembler::java_round_double(Register dst, FloatRegister src,\n+                                       FloatRegister ftmp, Register tmp) {\n+  Label done;\n+  assert_different_registers(dst, tmp);\n+  mv(dst, zr);\n+\n+  fclass_d(tmp, src);\n+\n+  \/\/ dst = 0\n+  \/\/ if +\/-0, +\/-subnormal numbers, signaling\/quiet NaN\n+  andi(tmp, tmp, 0b1100111100);\n+  bnez(tmp, done);\n+\n+  \/\/ dst = (src + 0.5) rounded down towards negative infinity\n+  \/\/ if +\/-inf, +\/-normal numbers\n+  li(tmp, 0x3fe0000000000000);\n+  fmv_d_x(ftmp, tmp);\n+  fadd_d(ftmp, src, ftmp);\n+  fcvt_l_d(dst, ftmp, RoundingMode::rdn);\n+\n+  bind(done);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":48,"deletions":3,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -1249,4 +1249,7 @@\n-  void fcvt_w_s_safe(Register dst, FloatRegister src, RoundingMode rm = RoundingMode::rtz, Register tmp = t0);\n-  void fcvt_l_s_safe(Register dst, FloatRegister src, RoundingMode rm = RoundingMode::rtz, Register tmp = t0);\n-  void fcvt_w_d_safe(Register dst, FloatRegister src, RoundingMode rm = RoundingMode::rtz, Register tmp = t0);\n-  void fcvt_l_d_safe(Register dst, FloatRegister src, RoundingMode rm = RoundingMode::rtz, Register tmp = t0);\n+  void fcvt_w_s_safe(Register dst, FloatRegister src, Register tmp = t0);\n+  void fcvt_l_s_safe(Register dst, FloatRegister src, Register tmp = t0);\n+  void fcvt_w_d_safe(Register dst, FloatRegister src, Register tmp = t0);\n+  void fcvt_l_d_safe(Register dst, FloatRegister src, Register tmp = t0);\n+\n+  void java_round_float(Register dst, FloatRegister src, FloatRegister ftmp, Register tmp = t0);\n+  void java_round_double(Register dst, FloatRegister src, FloatRegister ftmp, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -8243,1 +8243,1 @@\n-instruct round_double_reg(iRegLNoSp dst, fRegD src) %{\n+instruct round_double_reg(iRegLNoSp dst, fRegD src, fRegD ftmp) %{\n@@ -8246,1 +8246,3 @@\n-  format %{ \"fcvt.l.d $dst, $src\\t#@round_double_reg\" %}\n+  ins_cost(XFER_COST + BRANCH_COST);\n+  effect(TEMP ftmp);\n+  format %{ \"java_round_double $dst, $src\\t#@round_double_reg\" %}\n@@ -8249,1 +8251,1 @@\n-    __ fcvt_l_d_safe(as_Register($dst$$reg), as_FloatRegister($src$$reg), Assembler::RoundingMode::rne);\n+    __ java_round_double($dst$$Register, as_FloatRegister($src$$reg), as_FloatRegister($ftmp$$reg));\n@@ -8255,1 +8257,1 @@\n-instruct round_float_reg(iRegINoSp dst, fRegF src) %{\n+instruct round_float_reg(iRegINoSp dst, fRegF src, fRegF ftmp) %{\n@@ -8258,1 +8260,3 @@\n-  format %{ \"fcvt.w.s  $dst, $src\\t#@round_float_reg\" %}\n+  ins_cost(XFER_COST + BRANCH_COST);\n+  effect(TEMP ftmp);\n+  format %{ \"java_round_float $dst, $src\\t#@round_float_reg\" %}\n@@ -8261,1 +8265,1 @@\n-    __ fcvt_w_s_safe(as_Register($dst$$reg), as_FloatRegister($src$$reg), Assembler::RoundingMode::rne);\n+    __ java_round_float($dst$$Register, as_FloatRegister($src$$reg), as_FloatRegister($ftmp$$reg));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"}]}