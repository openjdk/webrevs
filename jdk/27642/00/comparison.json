{"files":[{"patch":"@@ -128,7 +128,0 @@\n-\/\/ Atomically copy 64 bits of data\n-inline void atomic_copy64(const volatile void *src, volatile void *dst) {\n-  int64_t tmp;\n-  __atomic_load(reinterpret_cast<const volatile int64_t*>(src), &tmp, __ATOMIC_RELAXED);\n-  __atomic_store(reinterpret_cast<volatile int64_t*>(dst), &tmp, __ATOMIC_RELAXED);\n-}\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/atomicAccess_bsd_zero.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -243,0 +243,7 @@\n+\/\/ Atomically copy 64 bits of data\n+static inline void atomic_copy64(const volatile void *src, volatile void *dst) {\n+  int64_t tmp;\n+  __atomic_load(reinterpret_cast<const volatile int64_t*>(src), &tmp, __ATOMIC_RELAXED);\n+  __atomic_store(reinterpret_cast<volatile int64_t*>(dst), &tmp, __ATOMIC_RELAXED);\n+}\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/os_bsd_zero.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -128,7 +128,0 @@\n-\/\/ Atomically copy 64 bits of data\n-inline void atomic_copy64(const volatile void *src, volatile void *dst) {\n-  int64_t tmp;\n-  __atomic_load(reinterpret_cast<const volatile int64_t*>(src), &tmp, __ATOMIC_RELAXED);\n-  __atomic_store(reinterpret_cast<volatile int64_t*>(dst), &tmp, __ATOMIC_RELAXED);\n-}\n-\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/atomicAccess_linux_zero.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -391,0 +391,7 @@\n+\/\/ Atomically copy 64 bits of data\n+static inline void atomic_copy64(const volatile void *src, volatile void *dst) {\n+  int64_t tmp;\n+  __atomic_load(reinterpret_cast<const volatile int64_t*>(src), &tmp, __ATOMIC_RELAXED);\n+  __atomic_store(reinterpret_cast<volatile int64_t*>(dst), &tmp, __ATOMIC_RELAXED);\n+}\n+\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/os_linux_zero.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}