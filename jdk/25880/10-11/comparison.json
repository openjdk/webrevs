{"files":[{"patch":"@@ -739,3 +739,5 @@\n-         * <p>If the write lock is held by any thread then\n-         * the current thread becomes disabled for thread scheduling\n-         * purposes and lies dormant until the read lock has been acquired.\n+         * <p>If the write lock is held by any thread or the fairness\n+         * policy prohibits acquisition of the read lock at this time,\n+         * then the current thread becomes disabled for thread\n+         * scheduling purposes and lies dormant until the read lock\n+         * has been acquired.\n@@ -754,3 +756,5 @@\n-         * <p>If the write lock is held by any thread then the\n-         * current thread becomes disabled for thread scheduling\n-         * purposes and lies dormant until one of two things happens:\n+         * <p>If the write lock is held by any thread or the fairness\n+         * policy prohibits acquisition of the read lock at this time,\n+         * then the current thread becomes disabled for thread\n+         * scheduling purposes and lies dormant until one of two\n+         * things happens:\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"}]}