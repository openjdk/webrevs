{"files":[{"patch":"@@ -31,0 +31,6 @@\n+            while (!isReady()) {\n+                try {\n+                    Thread.sleep(100);\n+                } catch (InterruptedException e) {\n+                }\n+            }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/LingeredAppWithLockInVM.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    final static int MAX_ATTEMPTS = 3;\n@@ -58,6 +59,7 @@\n-            JDKToolLauncher launcher = JDKToolLauncher\n-                    .createUsingTestJDK(\"jhsdb\");\n-            launcher.addToolArg(\"jstack\");\n-            launcher.addToolArg(\"--mixed\");\n-            launcher.addToolArg(\"--pid\");\n-            launcher.addToolArg(Long.toString(theApp.getPid()));\n+            for (int attempt = 0; attempt < MAX_ATTEMPTS; attempt++) {\n+                JDKToolLauncher launcher = JDKToolLauncher\n+                        .createUsingTestJDK(\"jhsdb\");\n+                launcher.addToolArg(\"jstack\");\n+                launcher.addToolArg(\"--mixed\");\n+                launcher.addToolArg(\"--pid\");\n+                launcher.addToolArg(Long.toString(theApp.getPid()));\n@@ -65,3 +67,3 @@\n-            ProcessBuilder pb = SATestUtils.createProcessBuilder(launcher);\n-            Process jhsdb = pb.start();\n-            OutputAnalyzer out = new OutputAnalyzer(jhsdb);\n+                ProcessBuilder pb = SATestUtils.createProcessBuilder(launcher);\n+                Process jhsdb = pb.start();\n+                OutputAnalyzer out = new OutputAnalyzer(jhsdb);\n@@ -69,1 +71,1 @@\n-            jhsdb.waitFor();\n+                jhsdb.waitFor();\n@@ -71,2 +73,2 @@\n-            System.out.println(out.getStdout());\n-            System.err.println(out.getStderr());\n+                System.out.println(out.getStdout());\n+                System.err.println(out.getStderr());\n@@ -74,1 +76,7 @@\n-            out.shouldContain(\"Mutex Compile_lock is owned by LockerThread\");\n+                if (out.contains(\"Mutex Compile_lock is owned by LockerThread\")) {\n+                    System.out.println(\"Test PASSED\");\n+                    return;\n+                }\n+                Thread.sleep(2000);\n+            }\n+            throw new RuntimeException(\"Not able to find lock\");\n@@ -78,1 +86,0 @@\n-        System.out.println(\"Test PASSED\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJhsdbJstackPrintVMLocks.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -592,0 +592,6 @@\n+    private static volatile boolean isReady = false;\n+\n+    protected static boolean isReady() {\n+        return isReady;\n+    }\n+\n@@ -630,0 +636,1 @@\n+                    isReady = true;\n","filename":"test\/lib\/jdk\/test\/lib\/apps\/LingeredApp.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}