{"files":[{"patch":"@@ -54,2 +54,4 @@\n-    sun.jvm.hotspot.types.Field f = type.getField(\"_name\");\n-    nameFieldOffset = f.getOffset();\n+    sun.jvm.hotspot.types.Field nameField = type.getField(\"_name\");\n+    nameFieldOffset = nameField.getOffset();\n+    sun.jvm.hotspot.types.Field ownerField = type.getField(\"_owner\");\n+    ownerFieldOffset = ownerField.getOffset();\n@@ -57,2 +59,0 @@\n-    f = type.getField(\"_owner\");\n-    ownerFieldOffset = f.getOffset();\n@@ -61,1 +61,0 @@\n-\n@@ -76,1 +75,0 @@\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Mutex.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,5 +50,5 @@\n-        for (int i = 0; i < threads.getNumberOfThreads(); i++) {\n-            JavaThread thread = threads.getJavaThreadAt(i);\n-            if (thread.getAddress().equals(addr)) {\n-                return thread.getThreadName();\n-            }\n+        try {\n+            JavaThread thread = VM.getVM().getThreads().createJavaThreadWrapper(addr);\n+            return thread.getThreadName();\n+        } catch (Exception e) {\n+            return \"Unknown thread\";\n@@ -56,1 +56,0 @@\n-        return \"Unknown thread\";\n@@ -58,0 +57,1 @@\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VMLocksPrinter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -84,2 +84,6 @@\n-         VMLocksPrinter vmLocksPrinter = new VMLocksPrinter(out);\n-         vmLocksPrinter.printVMLocks();\n+         try {\n+             VMLocksPrinter vmLocksPrinter = new VMLocksPrinter(out);\n+             vmLocksPrinter.printVMLocks();\n+         } catch (Exception e) {\n+             out.println(\"can't print VM locks information: \" + e);\n+         }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/PStack.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}