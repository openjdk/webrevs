{"files":[{"patch":"@@ -1257,10 +1257,1 @@\n-                                                      int constant,\n-                                                      bool decrement) {\n-  \/\/ Counter address\n-  Address data(mdp_in, constant);\n-\n-  increment_mdp_data_at(data, decrement);\n-}\n-\n-void InterpreterMacroAssembler::increment_mdp_data_at(Address data,\n-                                                      bool decrement) {\n+                                                      int constant) {\n@@ -1268,19 +1259,2 @@\n-  \/\/ %%% this does 64bit counters at best it is wasting space\n-  \/\/ at worst it is a rare bug when counters overflow\n-\n-  if (decrement) {\n-    \/\/ Decrement the register.  Set condition codes.\n-    addptr(data, -DataLayout::counter_increment);\n-    \/\/ If the decrement causes the counter to overflow, stay negative\n-    Label L;\n-    jcc(Assembler::negative, L);\n-    addptr(data, DataLayout::counter_increment);\n-    bind(L);\n-  } else {\n-    assert(DataLayout::counter_increment == 1,\n-           \"flow-free idiom only works with 1\");\n-    \/\/ Increment the register.  Set carry flag.\n-    addptr(data, DataLayout::counter_increment);\n-    \/\/ If the increment causes the counter to overflow, pull back by 1.\n-    sbbptr(data, 0);\n-  }\n+  Address data(mdp_in, constant);\n+  addptr(data, DataLayout::counter_increment);\n@@ -1291,6 +1265,5 @@\n-                                                      Register reg,\n-                                                      int constant,\n-                                                      bool decrement) {\n-  Address data(mdp_in, reg, Address::times_1, constant);\n-\n-  increment_mdp_data_at(data, decrement);\n+                                                      Register index,\n+                                                      int constant) {\n+  assert(ProfileInterpreter, \"must be profiling interpreter\");\n+  Address data(mdp_in, index, Address::times_1, constant);\n+  addptr(data, DataLayout::counter_increment);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":8,"deletions":35,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -215,5 +215,2 @@\n-  void increment_mdp_data_at(Address data, bool decrement = false);\n-  void increment_mdp_data_at(Register mdp_in, int constant,\n-                             bool decrement = false);\n-  void increment_mdp_data_at(Register mdp_in, Register reg, int constant,\n-                             bool decrement = false);\n+  void increment_mdp_data_at(Register mdp_in, int constant);\n+  void increment_mdp_data_at(Register mdp_in, Register index, int constant);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}