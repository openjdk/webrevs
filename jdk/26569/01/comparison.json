{"files":[{"patch":"@@ -131,1 +131,1 @@\n-  _mutable_data(header_begin() + size), \/\/ default value is blob_end()\n+  _mutable_data(nullptr),\n@@ -161,3 +161,0 @@\n-  } else {\n-    \/\/ We need unique and valid not null address\n-    assert(_mutable_data == blob_end(), \"sanity\");\n@@ -165,0 +162,1 @@\n+  assert(_mutable_data != nullptr || _mutable_data_size == 0, \"No mutable data => mutable data size is 0\");\n@@ -173,1 +171,1 @@\n-  _mutable_data(header_begin() + size), \/\/ default value is blob_end()\n+  _mutable_data(nullptr),\n@@ -187,0 +185,1 @@\n+  assert(_mutable_data == nullptr && _mutable_data_size == 0, \"invariant\");\n@@ -189,1 +188,0 @@\n-  assert(_mutable_data == blob_end(), \"sanity\");\n@@ -200,1 +198,1 @@\n-    _mutable_data = blob_end(); \/\/ default value\n+    _mutable_data = nullptr;\n@@ -209,11 +207,7 @@\n-  assert(_mutable_data != nullptr, \"should never be null\");\n-  if (_mutable_data != blob_end()) {\n-    os::free(_mutable_data);\n-    _mutable_data = blob_end(); \/\/ Valid not null address\n-    _mutable_data_size = 0;\n-    _relocation_size = 0;\n-  }\n-  if (_oop_maps != nullptr) {\n-    delete _oop_maps;\n-    _oop_maps = nullptr;\n-  }\n+  os::free(_mutable_data);\n+  _mutable_data = nullptr;\n+  _mutable_data_size = 0;\n+  delete _oop_maps;\n+  _oop_maps = nullptr;\n+  _relocation_size = 0;\n+\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1330,2 +1330,2 @@\n-    \/\/ native wrapper does not have read-only data but we need unique not null address\n-    _immutable_data          = blob_end();\n+    \/\/ native wrapper does not have read-only data\n+    _immutable_data          = nullptr;\n@@ -1513,2 +1513,1 @@\n-      \/\/ We need unique not null address\n-      _immutable_data     = blob_end();\n+      _immutable_data     = nullptr;\n@@ -2150,3 +2149,2 @@\n-  if (_pc_desc_container != nullptr) {\n-    delete _pc_desc_container;\n-  }\n+\n+  delete _pc_desc_container;\n@@ -2155,4 +2153,4 @@\n-  if (_immutable_data != blob_end()) {\n-    os::free(_immutable_data);\n-    _immutable_data = blob_end(); \/\/ Valid not null address\n-  }\n+  os::free(_immutable_data);\n+  _immutable_data = nullptr;\n+  _immutable_data_size = 0;\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -119,3 +119,0 @@\n-\/\/ A static dummy to serve as a safe pointer when there is no relocation info.\n-static relocInfo dummy_relocInfo = relocInfo(relocInfo::none, 0);\n-\n@@ -133,8 +130,3 @@\n-  if (nm->relocation_size() == 0) {\n-    _current = &dummy_relocInfo - 1;\n-    _end = &dummy_relocInfo;\n-  } else {\n-    assert(((nm->relocation_begin() != nullptr) && (nm->relocation_end() != nullptr)), \"valid start and end pointer\");\n-    _current = nm->relocation_begin() - 1;\n-    _end     = nm->relocation_end();\n-  }\n+  _base = nm->relocation_begin();\n+  _current = -1;\n+  _len = nm->relocation_end() - _base;\n@@ -159,0 +151,9 @@\n+RelocIterator::RelocIterator(relocInfo& ri) {\n+  initialize_misc();\n+  _base = &ri;\n+  _len = 1;\n+  _current = -1;\n+  _limit = nullptr;\n+  _addr = 0;\n+}\n+\n@@ -162,2 +163,3 @@\n-  _current = cs->locs_start() - 1;\n-  _end     = cs->locs_end();\n+  _base = cs->locs_start();\n+  _len = cs->locs_end() - _base;\n+  _current = -1;\n@@ -189,2 +191,3 @@\n-  _current = cb->relocation_begin() - 1;\n-  _end     = cb->relocation_end();\n+  _base = cb->relocation_begin();\n+  _len = cb->relocation_end() - _base;\n+  _current = -1;\n@@ -219,1 +222,1 @@\n-    relocInfo* backup;\n+    int backup;\n@@ -241,3 +244,3 @@\n-  if (_current->is_datalen()) {\n-    _data    = (short*) _current->data();\n-    _datalen =          _current->datalen();\n+  if (current()->is_datalen()) {\n+    _data    = (short*) current()->data();\n+    _datalen =          current()->datalen();\n@@ -246,1 +249,1 @@\n-    _databuf = _current->immediate();\n+    _databuf = current()->immediate();\n@@ -353,3 +356,3 @@\n-  relocInfo ri = relocInfo(rtype, 0);\n-  RelocIterator itr;\n-  itr.set_current(ri);\n+  relocInfo ri(rtype, 0);\n+  RelocIterator itr(ri);\n+  itr.next();\n@@ -842,1 +845,1 @@\n-             p2i(_current), type(), relocInfo::type_name((relocInfo::relocType) type()), p2i(_addr), _current->addr_offset());\n+            p2i(current()), type(), relocInfo::type_name((relocInfo::relocType) type()), p2i(_addr), current()->addr_offset());\n@@ -993,1 +996,1 @@\n-  relocInfo* scan = _current;\n+  relocInfo* scan = current_no_check();\n@@ -1003,1 +1006,1 @@\n-    relocInfo* newscan = _current+1;\n+    relocInfo* newscan = current_no_check()+1;\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":29,"deletions":26,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -565,2 +565,3 @@\n-  relocInfo*      _current; \/\/ the current relocation information\n-  relocInfo*      _end;     \/\/ end marker; we're done iterating when _current == _end\n+  relocInfo*      _base;    \/\/ base pointer into relocInfo array\n+  int             _current; \/\/ current index\n+  int             _len;     \/\/ length\n@@ -569,1 +570,0 @@\n-  short           _databuf; \/\/ spare buffer for compressed data\n@@ -571,0 +571,1 @@\n+  short           _databuf; \/\/ spare buffer for compressed data\n@@ -581,4 +582,0 @@\n-  void set_current(relocInfo& ri) {\n-    _current = &ri;\n-    set_has_current(true);\n-  }\n@@ -588,2 +585,5 @@\n-  relocInfo* current() const { assert(has_current(), \"must have current\");\n-                               return _current; }\n+  relocInfo* current_no_check() const { return &_base[_current]; }\n+  relocInfo* current() const {\n+    assert(has_current(), \"must have current\");\n+    return current_no_check();\n+  }\n@@ -606,0 +606,1 @@\n+  RelocIterator(relocInfo& ri);\n@@ -610,2 +611,2 @@\n-    assert(_current <= _end, \"must not overrun relocInfo\");\n-    if (_current == _end) {\n+    assert(_current <= _len, \"must not overrun relocInfo\");\n+    if (_current == _len) {\n@@ -617,1 +618,1 @@\n-    if (_current->is_prefix()) {\n+    if (current()->is_prefix()) {\n@@ -622,1 +623,1 @@\n-    _addr += _current->addr_offset();\n+    _addr += current()->addr_offset();\n@@ -628,1 +629,0 @@\n-\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}