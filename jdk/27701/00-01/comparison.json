{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import jdk.jpackage.internal.SigningIdentityBuilder.StandardCertificateSelector;\n@@ -66,0 +67,1 @@\n+import jdk.jpackage.internal.model.MacLauncher;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacFromParams.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-            \/\/ Has \"Contents\/MacOS\/libjli.dylib\", but missing \"Contents\/Home\/lib\/libjli.dylib\"\n-            final Path root = TKit.createTempDirectory(\"invalid-runtime-bundle\");\n+            \/\/ Has \"Contents\/MacOS\/libjli.dylib\", but missing \"Contents\/Home\/lib\/libjli.dylib\".\n+            final Path root = TKit.createTempDirectory(\"mac-invalid-runtime-bundle\");\n@@ -102,0 +102,7 @@\n+        INVALID_MAC_RUNTIME_IMAGE(toFunction(cmd -> {\n+            \/\/ Has some files in the \"lib\" subdirectory, but doesn't have the \"lib\/libjli.dylib\" file.\n+            final Path root = TKit.createTempDirectory(\"mac-invalid-runtime-image\");\n+            Files.createDirectories(root.resolve(\"lib\"));\n+            Files.createFile(root.resolve(\"lib\/foo\"));\n+            return root.toString();\n+        })),\n@@ -105,1 +112,2 @@\n-        ADD_LAUNCHER_PROPERTY_FILE;\n+        ADD_LAUNCHER_PROPERTY_FILE,\n+        ;\n@@ -732,10 +740,0 @@\n-        var runtimeBundleWithoutJliLibErr = JPackageStringBundle.MAIN.cannedFormattedString(\n-                \"error.invalid-runtime-image-missing-file\", JPackageCommand.cannedArgument(cmd -> {\n-                    return Path.of(cmd.getArgumentValue(\"--runtime-image\"));\n-                }, Token.INVALID_MAC_RUNTIME_BUNDLE.token()), \"Contents\/Home\/lib\/**\/libjli.dylib\");\n-\n-        var runtimeDirWithoutJliLibErr = JPackageStringBundle.MAIN.cannedFormattedString(\n-                \"error.invalid-runtime-image-missing-file\", JPackageCommand.cannedArgument(cmd -> {\n-                    return Path.of(cmd.getArgumentValue(\"--runtime-image\"));\n-                }, Token.EMPTY_DIR.token()), \"lib\/**\/libjli.dylib\");\n-\n@@ -747,5 +745,5 @@\n-        for (var mutator : List.<Consumer<TestSpec.Builder>>of(builder -> {\n-            builder.addArgs(\"--runtime-image\", Token.INVALID_MAC_RUNTIME_BUNDLE.token()).errors(runtimeBundleWithoutJliLibErr);\n-        }, builder -> {\n-            builder.addArgs(\"--runtime-image\", Token.EMPTY_DIR.token()).errors(runtimeDirWithoutJliLibErr);\n-        })) {\n+        Stream.of(\n+                Token.INVALID_MAC_RUNTIME_BUNDLE,\n+                Token.EMPTY_DIR,\n+                Token.INVALID_MAC_RUNTIME_IMAGE\n+        ).map(MissingRuntimeFileError::missingLibjli).forEach(mapper -> {\n@@ -756,4 +754,28 @@\n-            ).map(testSpec -> {\n-                mutator.accept(testSpec);\n-                return testSpec;\n-            }).map(TestSpec.Builder::create).forEach(accumulator);\n+            ).map(mapper::applyTo).map(TestSpec.Builder::create).forEach(accumulator);\n+        });\n+    }\n+\n+    private record MissingRuntimeFileError(Token runtimeDir, String missingFile) {\n+\n+        MissingRuntimeFileError {\n+            Objects.requireNonNull(runtimeDir);\n+            Objects.requireNonNull(missingFile);\n+        }\n+\n+        static MissingRuntimeFileError missingLibjli(Token runtimeDir) {\n+            if (runtimeDir == Token.INVALID_MAC_RUNTIME_BUNDLE) {\n+                return new MissingRuntimeFileError(runtimeDir, \"Contents\/Home\/lib\/**\/libjli.dylib\");\n+            } else {\n+                return new MissingRuntimeFileError(runtimeDir, \"lib\/**\/libjli.dylib\");\n+            }\n+        }\n+\n+        TestSpec.Builder applyTo(TestSpec.Builder builder) {\n+            return builder.addArgs(\"--runtime-image\", runtimeDir.token()).errors(expectedErrorMsg());\n+        }\n+\n+        private CannedFormattedString expectedErrorMsg() {\n+            return JPackageStringBundle.MAIN.cannedFormattedString(\n+                    \"error.invalid-runtime-image-missing-file\", JPackageCommand.cannedArgument(cmd -> {\n+                        return Path.of(cmd.getArgumentValue(\"--runtime-image\"));\n+                    }, runtimeDir.token()), missingFile);\n","filename":"test\/jdk\/tools\/jpackage\/share\/ErrorTest.java","additions":44,"deletions":22,"binary":false,"changes":66,"status":"modified"}]}