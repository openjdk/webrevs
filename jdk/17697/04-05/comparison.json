{"files":[{"patch":"@@ -4871,0 +4871,4 @@\n+#ifdef ASSERT\n+    AbstractLockNode* alock = locks.at(0);\n+    BoxLockNode* box = alock->box_node()->as_BoxLock();\n+#endif\n@@ -4875,0 +4879,7 @@\n+#ifdef ASSERT\n+      BoxLockNode* this_box = lock->box_node()->as_BoxLock();\n+      if (this_box != box) {\n+        this_box->mark_unbalanced();\n+        box->mark_unbalanced();\n+      }\n+#endif\n@@ -4977,0 +4988,1 @@\n+            assert(this_box->is_marked_unbalanced(),\"inconsistency\");\n@@ -4979,0 +4991,1 @@\n+        assert(box->is_unbalanced() == box->is_marked_unbalanced(),\"inconsistency\");\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+  DEBUG_ONLY(_marked_unbalanced = false);\n","filename":"src\/hotspot\/share\/opto\/locknode.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+  \/\/ In debug VM verify correctness of unbalanced marking\n+  DEBUG_ONLY(bool _marked_unbalanced;)\n+\n@@ -70,0 +73,5 @@\n+#ifdef ASSERT\n+  void mark_unbalanced()            { _marked_unbalanced = true; }\n+  bool is_marked_unbalanced() const { return _marked_unbalanced; }\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/locknode.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}