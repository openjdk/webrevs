{"files":[{"patch":"@@ -2250,1 +2250,1 @@\n-                        || working.compareTo(new BigDecimal(workingInt)) != 0) {\n+                        || !working.isInteger()) {\n@@ -2265,1 +2265,1 @@\n-                if (sqrtRem[1].signum != 0 || working.compareTo(new BigDecimal(workingInt)) != 0)\n+                if (sqrtRem[1].signum != 0 || !working.isInteger())\n@@ -3478,0 +3478,8 @@\n+    \/**\n+     * @return {@code true} if and only if {@code this == this.toBigInteger()}\n+     *\/\n+    boolean isInteger() {\n+        return scale <= 0 || signum() == 0\n+                || stripZerosToMatchScale(intVal, intCompact, scale, 0L).scale == 0;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4851777 8233452\n+ * @bug 4851777 8233452 8341402\n","filename":"test\/jdk\/java\/math\/BigDecimal\/SquareRootTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}