{"files":[{"patch":"@@ -2161,1 +2161,0 @@\n-\n@@ -2170,0 +2169,3 @@\n+                if ((strippedScale & 1) != 0) \/\/ 10*stripped.unscaledValue() can't be an exact square\n+                    throw new ArithmeticException(\"Computed square root not exact.\");\n+\n@@ -2171,1 +2173,1 @@\n-                if (stripped.isPowerOfTen() && (strippedScale & 1) == 0) {\n+                if (stripped.isPowerOfTen()) {\n@@ -2184,12 +2186,3 @@\n-                \/\/ precision for the cohort of the numerical value.\n-                BigInteger working = stripped.unscaledValue();\n-                final int resultScale;\n-                if ((strippedScale & 1) == 0) {\n-                    resultScale = strippedScale >> 1;\n-                } else {\n-                    working = working.multiply(10L);\n-                    resultScale = (int) ((strippedScale + 1L) >> 1);\n-                }\n-\n-                BigInteger[] sqrtRem = working.sqrtAndRemainder();\n-                result = new BigDecimal(sqrtRem[0], resultScale);\n+                \/\/ precision for the cohort of the numerical value and the scale is even.\n+                BigInteger[] sqrtRem = stripped.unscaledValue().sqrtAndRemainder();\n+                result = new BigDecimal(sqrtRem[0], strippedScale >> 1);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"}]}