{"files":[{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 6494356\n+ * @key headful\n+ * @summary Test that BoxView.layout() is not called with negative arguments\n+ * @run main bug6494356\n+ *\/\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.io.Writer;\n+\n+import java.awt.Dimension;\n+import java.awt.Toolkit;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.util.concurrent.CountDownLatch;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Element;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n+import javax.swing.text.html.HTML;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.ParagraphView;\n+\n+public class bug6494356 {\n+    static String testSrc = System.getProperty(\"test.src\", \".\");\n+    static JEditorPane ep;\n+    private static final CountDownLatch latch = new CountDownLatch(1);\n+\n+    public static void main(final String[] args) throws Exception {\n+        final Path file = Path.of(\"bug6494356.html\");\n+        try (Writer writer = Files.newBufferedWriter(file)) {\n+            writer.write(\"<p>Paragraph<\/p>\");\n+        }\n+        try {\n+            SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    ep = new JEditorPane();\n+                    ep.setEditorKitForContentType(\"text\/html\", new MyEditorKit());\n+                    ep.addPropertyChangeListener(\"page\", new PropertyChangeListener() {\n+                        public void propertyChange(PropertyChangeEvent pce) {\n+                            if (pce.getPropertyName().equals(\"page\")) {\n+                                latch.countDown();\n+                            }\n+                        }\n+                    });\n+                    JFrame f = new JFrame();\n+                    f.setTitle(\"6494356\");\n+                    f.setSize(new Dimension(\n+                        Toolkit.getDefaultToolkit().getScreenSize().width, 600));\n+                    f.setContentPane(ep);\n+                    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                    f.setVisible(true);\n+                    try {\n+                        ep.setPage(\"file:\" + file);\n+                    } catch (Exception ex) {\n+                        testPassed = false;\n+                        throw new RuntimeException(ex);\n+                    }\n+                }\n+            });\n+\n+            latch.await();\n+            if (!testPassed) {\n+                throw new RuntimeException(\"test failed.\");\n+            }\n+        } finally {\n+            Files.delete(file);\n+        }\n+        System.out.println(\"6494356 OK\");\n+    }\n+\n+    static volatile boolean testPassed = true;\n+\n+    static class MyEditorKit extends HTMLEditorKit {\n+        static class MyViewFactory extends HTMLFactory {\n+            public View create(Element elem) {\n+                HTML.Tag tag = (HTML.Tag) elem.getAttributes().getAttribute(\n+                        StyleConstants.NameAttribute);\n+                if ((tag != null) && (tag == HTML.Tag.P)) {\n+                    return new MyParagraphView(elem);\n+                } else {\n+                    return super.create(elem);\n+                }\n+            }\n+\n+            static class MyParagraphView extends ParagraphView {\n+                MyParagraphView(Element elem) {\n+                    super(elem);\n+                }\n+\n+                protected void layout(int width, int height) {\n+                    if ((width < 0) || (height < 0)) {\n+                        testPassed = false;\n+                        throw new RuntimeException(\"w=\" + width + \" h=\" + height);\n+                    }\n+                    super.layout(width, height);\n+                }\n+            }\n+\n+        }\n+\n+        final ViewFactory viewFactory = new MyViewFactory();\n+\n+        public ViewFactory getViewFactory() {\n+            return viewFactory;\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/text\/BoxView\/bug6494356.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"}]}