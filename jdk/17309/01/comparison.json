{"files":[{"patch":"@@ -96,1 +96,0 @@\n-gc\/g1\/TestSkipRebuildRemsetPhase.java 8323066 linux-aarch64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                                                                    \"-XX:G1MixedGCLiveThresholdPercent=20\",\n+                                                                    \"-XX:G1MixedGCLiveThresholdPercent=0\",\n@@ -61,2 +61,3 @@\n-            \/\/ Allocate some memory less than region size.\n-            Object used = alloc();\n+            \/\/ Allocate some memory less than region size. Any object is just fine as we set\n+            \/\/ G1MixedGCLiveThresholdPercent to zero (and no region should be selected).\n+            Object used = new byte[2000];\n@@ -64,2 +65,3 @@\n-            \/\/ Trigger the full GC using the WhiteBox API.\n-            wb.fullGC();  \/\/ full\n+            \/\/ Trigger the full GC using the WhiteBox API to make sure that at least \"used\"\n+            \/\/ has been promoted to old gen.\n+            wb.fullGC();\n@@ -68,1 +70,2 @@\n-            \/\/ Concurrent cycle should not select any regions for rebuilding\n+            \/\/ Concurrent cycle should not select any regions for rebuilding and print the\n+            \/\/ appropriate message.\n@@ -72,8 +75,0 @@\n-\n-        private static Object alloc() {\n-            \/\/ Since G1MixedGCLiveThresholdPercent is 20%, make sure to allocate object larger than that\n-            \/\/ so that it will not be collected and the expected message printed.\n-            final int objectSize = WhiteBox.getWhiteBox().g1RegionSize() \/ 3;\n-            Object ret = new byte[objectSize];\n-            return ret;\n-        }\n@@ -82,0 +77,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSkipRebuildRemsetPhase.java","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"}]}