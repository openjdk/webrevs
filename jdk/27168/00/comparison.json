{"files":[{"patch":"@@ -322,1 +322,1 @@\n-                    var pHelper = writer.getPropertyHelper();\n+                    var pHelper = configuration.propertyUtils.getPropertyHelper(inheritedClass);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-        pHelper = new PropertyUtils.PropertyHelper(configuration, typeElement);\n+        pHelper = configuration.propertyUtils.getPropertyHelper(typeElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,2 @@\n+    final BaseConfiguration configuration;\n+\n@@ -65,0 +67,2 @@\n+    final Map<TypeElement, PropertyHelper> propertyHelpers = new HashMap<>();\n+\n@@ -66,0 +70,1 @@\n+        this.configuration = configuration;\n@@ -85,0 +90,9 @@\n+    \/**\n+     * Returns a property helper for the given type element.\n+     * @param typeElement a type element\n+     * @return the property helper\n+     *\/\n+    public PropertyHelper getPropertyHelper(TypeElement typeElement) {\n+        return propertyHelpers.computeIfAbsent(typeElement, te -> new PropertyHelper(configuration, te));\n+    }\n+\n@@ -89,1 +103,1 @@\n-     * @param propertyMethod\n+     * @param propertyMethod a property method\n@@ -94,2 +108,1 @@\n-        String baseName = name.substring(0, name.indexOf(\"Property\"));\n-        return baseName;\n+        return name.substring(0, name.indexOf(\"Property\"));\n@@ -102,1 +115,1 @@\n-     * @param propertyMethod\n+     * @param propertyMethod a property method\n@@ -107,2 +120,1 @@\n-        String fnUppercased = \"\" +\n-                Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n+        String fnUppercased = Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n@@ -116,1 +128,1 @@\n-     * @param propertyMethod\n+     * @param propertyMethod a property method\n@@ -121,2 +133,1 @@\n-        String fnUppercased = \"\" +\n-                Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n+        String fnUppercased = Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n@@ -129,1 +140,1 @@\n-     * @param propertyMethod\n+     * @param propertyMethod a property method\n@@ -142,1 +153,1 @@\n-     * @param propertyMethod\n+     * @param propertyMethod a property method\n@@ -147,2 +158,1 @@\n-        String fnUppercased = \"\" +\n-                Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n+        String fnUppercased = Character.toUpperCase(baseName.charAt(0)) + baseName.substring(1);\n@@ -155,1 +165,1 @@\n-     * @param setterMethod\n+     * @param setterMethod a setter method\n@@ -164,1 +174,1 @@\n-     * @param propertyMethod\n+     * @param method a method\n@@ -167,1 +177,1 @@\n-    public boolean isPropertyMethod(ExecutableElement propertyMethod) {\n+    public boolean isPropertyMethod(ExecutableElement method) {\n@@ -169,2 +179,2 @@\n-                !propertyMethod.getParameters().isEmpty() ||\n-                !propertyMethod.getTypeParameters().isEmpty()) {\n+                !method.getParameters().isEmpty() ||\n+                !method.getTypeParameters().isEmpty()) {\n@@ -173,1 +183,1 @@\n-        String methodName = propertyMethod.getSimpleName().toString();\n+        String methodName = method.getSimpleName().toString();\n@@ -179,1 +189,1 @@\n-        TypeMirror returnType = propertyMethod.getReturnType();\n+        TypeMirror returnType = method.getReturnType();\n@@ -185,1 +195,1 @@\n-            returnType = typeUtils.erasure(propertyMethod.getReturnType());\n+            returnType = typeUtils.erasure(method.getReturnType());\n@@ -205,3 +215,1 @@\n-        private final BaseConfiguration configuration;\n-        private final Utils utils;\n-        private final TypeElement typeElement;\n+        private Map<Element, Element> classPropertiesMap = null;\n@@ -209,7 +217,2 @@\n-        private final Map<Element, Element> classPropertiesMap = new HashMap<>();\n-\n-        public PropertyHelper(BaseConfiguration configuration, TypeElement typeElement) {\n-            this.configuration = configuration;\n-            this.utils = configuration.utils;\n-            this.typeElement = typeElement;\n-            computeProperties();\n+        private PropertyHelper(BaseConfiguration configuration, TypeElement typeElement) {\n+            computeProperties(configuration, typeElement);\n@@ -218,1 +221,1 @@\n-        private void computeProperties() {\n+        private void computeProperties(BaseConfiguration configuration, TypeElement typeElement) {\n@@ -226,1 +229,1 @@\n-                addToPropertiesMap(propertyMethod, field, getter, setter);\n+                addToPropertiesMap(configuration, propertyMethod, field, getter, setter);\n@@ -230,1 +233,2 @@\n-        private void addToPropertiesMap(ExecutableElement propertyMethod,\n+        private void addToPropertiesMap(BaseConfiguration configuration,\n+                                        ExecutableElement propertyMethod,\n@@ -235,1 +239,1 @@\n-            Element e = field == null || !utils.hasDocCommentTree(field)\n+            Element e = field == null || !configuration.utils.hasDocCommentTree(field)\n@@ -238,1 +242,1 @@\n-            if (e == field && utils.hasDocCommentTree(propertyMethod)) {\n+            if (e == field && configuration.utils.hasDocCommentTree(propertyMethod)) {\n@@ -243,3 +247,6 @@\n-            addToPropertiesMap(propertyMethod, e);\n-            addToPropertiesMap(getter, e);\n-            addToPropertiesMap(setter, e);\n+            if (classPropertiesMap == null) {\n+                classPropertiesMap = new HashMap<>();\n+            }\n+            addToPropertiesMap(configuration, propertyMethod, e);\n+            addToPropertiesMap(configuration, getter, e);\n+            addToPropertiesMap(configuration, setter, e);\n@@ -248,1 +255,2 @@\n-        private void addToPropertiesMap(Element propertyMethod,\n+        private void addToPropertiesMap(BaseConfiguration configuration,\n+                                        Element propertyMethod,\n@@ -255,2 +263,2 @@\n-            DocCommentTree docTree = utils.hasDocCommentTree(propertyMethod)\n-                    ? utils.getDocCommentTree(propertyMethod)\n+            DocCommentTree docTree = configuration.utils.hasDocCommentTree(propertyMethod)\n+                    ? configuration.utils.getDocCommentTree(propertyMethod)\n@@ -274,1 +282,1 @@\n-            return classPropertiesMap.get(element);\n+            return classPropertiesMap == null ? null : classPropertiesMap.get(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/PropertyUtils.java","additions":52,"deletions":44,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *      8203791 8184205 8249633 8261976 8350920\n+ *      8203791 8184205 8249633 8261976 8350920 8367007\n@@ -57,1 +57,0 @@\n-                \"-Xdoclint:all,-missing\",\n@@ -62,0 +61,8 @@\n+        checkOutput(Output.OUT, true,\n+                \"C.java:78: warning: no comment\");\n+        checkOutput(Output.OUT, false,\n+                \"C.java:59: warning: no comment\",\n+                \"C.java:61: warning: no comment\",\n+                \"C.java:63: warning: no comment\",\n+                \"C.java:67: warning: no comment\");\n+\n@@ -269,0 +276,25 @@\n+\n+        \/\/ Test for inherited properties and property methods.\n+        checkOrder(\"pkg1\/B.html\",\n+                \"\"\"\n+                    Properties inherited from class&nbsp;<a href=\"C.html#property-summary\" title=\"class in pkg1\">C<\/a>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Defines if paused.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Defines the direction\/speed at which the <code>Timeline<\/code> is expected to\n+                    be played.<\/div>\"\"\",\n+                \"\"\"\n+                    Methods inherited from class&nbsp;<a href=\"C.html#method-summary\" title=\"class in pkg1\">C<\/a>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Gets the value of the <code>rate<\/code> property.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Gets the value of the <code>paused<\/code> property.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Defines if paused.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Defines the direction\/speed at which the <code>Timeline<\/code> is expected to\n+                    be played.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Sets the value of the <code>paused<\/code> property.<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"block\">Sets the value of the <code>rate<\/code> property.<\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavaFX\/TestJavaFX.java","additions":34,"deletions":2,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -22,1 +22,0 @@\n- *\n@@ -25,2 +24,3 @@\n-module com.test {\n-  exports com.test;\n+package pkg1;\n+\n+public class B extends C {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavaFX\/pkg1\/B.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/modules\/com.test\/module-info.java","status":"copied"}]}