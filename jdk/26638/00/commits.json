[{"commit":{"message":"8363620: AArch64: reimplement emit_static_call_stub()\n\nIn the existing implementation, the static call stub typically\nemits a sequence like:\n`isb; movk; movz; movz; movk; movz; movz; br`.\n\nThis patch reimplements it using a more compact and patch-friendly\nsequence:\n```\nldr x12, Label_data\nldr x8, Label_entry\nbr x8\nLabel_data:\n  0x00000000\n  0x00000000\nLabel_entry:\n  0x00000000\n  0x00000000\n```\nThe new approach places the target addresses adjacent to the code\nand loads them dynamically. This allows us to update the call\ntarget by modifying only the data in memory, without changing any\ninstructions. This avoids the need for I-cache flushes or\nissuing an `isb`[1], which are both relatively expensive\noperations.\n\nWhile emitting direct branches in static stubs for small code\ncaches can save 2 bytes compared to the new implementation,\nmodifying those branches still requires I-cache flushes or an\n`isb`. This patch unifies the code generation by emitting the\nsame static stubs for both small and large code caches.\n\nA microbenchmark (StaticCallStub.java) demonstrates a performance\nuplift of approximately 43%.\n\nBenchmark                       (length)   Mode   Cnt Master     Patch      Units\nStaticCallStubFar.callCompiled    1000     avgt   5   39.346     22.474     us\/op\nStaticCallStubFar.callCompiled    10000    avgt   5   390.05     218.478    us\/op\nStaticCallStubFar.callCompiled    100000   avgt   5   3869.264   2174.001   us\/op\nStaticCallStubNear.callCompiled   1000     avgt   5   39.093     22.582     us\/op\nStaticCallStubNear.callCompiled   10000    avgt   5   387.319    217.398    us\/op\nStaticCallStubNear.callCompiled   100000   avgt   5   3855.825   2206.923   us\/op\n\nAll tests in Tier1 to Tier3, under both release and debug builds,\nhave passed.\n\n[1] https:\/\/community.arm.com\/arm-community-blogs\/b\/architectures-and-processors-blog\/posts\/caches-self-modifying-code-working-with-threads"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/compiledIC_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.hpp"},{"filename":"src\/hotspot\/share\/code\/compiledIC.cpp"},{"filename":"src\/hotspot\/share\/code\/compiledIC.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestStaticCallStub.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/StaticCallStub.java"}],"sha":"5f9285caa2fdf6585500759d7b5800c891d86f56"}]