{"files":[{"patch":"@@ -2166,0 +2166,39 @@\n+void G1CollectedHeap::print_worker_threads_elapsed_time() const {\n+\n+  class GatherCPUTimeClosure : public ThreadClosure {\n+    jlong _sum;\n+\n+  public:\n+    GatherCPUTimeClosure() : ThreadClosure(), _sum(0) { }\n+\n+    void do_thread(Thread* thread) override {\n+      _sum += os::thread_cpu_time(thread);\n+    }\n+\n+    double sum() const { return TimeHelper::counter_to_millis(_sum); }\n+  };\n+\n+  LogTarget(Debug, gc, cpu) lt;\n+  if (!lt.is_enabled() || !os::is_thread_cpu_time_supported()) {\n+    return;\n+  }\n+\n+  LogStream ls(lt);\n+\n+  GatherCPUTimeClosure gcwt;\n+  workers()->threads_do(&gcwt);\n+  ls.print_cr(\"GC worker threads total CPU time: %.2fms\", gcwt.sum());\n+\n+  GatherCPUTimeClosure mwt;\n+  concurrent_mark()->threads_do(&mwt);\n+  ls.print_cr(\"Marking worker threads total CPU time: %.2fms\", mwt.sum());\n+\n+  GatherCPUTimeClosure rwt;\n+  concurrent_refine()->threads_do(&rwt);\n+  ls.print_cr(\"Refinement worker threads total CPU time: %.2fms\", rwt.sum());\n+\n+  GatherCPUTimeClosure swt;\n+  swt.do_thread(service_thread());\n+  ls.print_cr(\"Service thread total CPU time: %.2fms\", swt.sum());\n+}\n+\n@@ -2243,0 +2282,2 @@\n+\n+  print_worker_threads_elapsed_time();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1313,0 +1313,2 @@\n+\n+  void print_worker_threads_elapsed_time() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}