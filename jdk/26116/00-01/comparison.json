{"files":[{"patch":"@@ -1310,1 +1310,1 @@\n-        \/\/ Check that querying a missing annotation returns null\n+        \/\/ Check that querying a missing annotation returns null or an empty list\n@@ -1317,1 +1317,1 @@\n-        testGetAnnotationData(annotatedElement, List.of(annotatedElement.getAnnotations()));\n+        testGetAnnotationData(annotatedElement, annotated, List.of(annotatedElement.getAnnotations()));\n@@ -1320,1 +1320,2 @@\n-    private static void testGetAnnotationData(AnnotatedElement annotated, List<Annotation> annotations) throws AssertionError {\n+    private static void testGetAnnotationData(AnnotatedElement annotatedElement, Annotated annotated, List<Annotation> annotations) throws AssertionError {\n+        ResolvedJavaType suppressWarningsType = metaAccess.lookupJavaType(SuppressWarnings.class);\n@@ -1322,1 +1323,2 @@\n-            AnnotationData ad = toAnnotated(annotated).getAnnotationData(metaAccess.lookupJavaType(a.annotationType()));\n+            var annotationType = metaAccess.lookupJavaType(a.annotationType());\n+            AnnotationData ad = annotated.getAnnotationData(annotationType);\n@@ -1326,1 +1328,1 @@\n-            AnnotationData ad2 = toAnnotated(annotated).getAnnotationData(metaAccess.lookupJavaType(a.annotationType()));\n+            AnnotationData ad2 = annotated.getAnnotationData(annotationType);\n@@ -1328,0 +1330,3 @@\n+\n+            List<AnnotationData> annotationData = annotated.getAnnotationData(annotationType, suppressWarningsType, suppressWarningsType);\n+            assertEquals(1, annotationData.size());\n@@ -1340,1 +1345,1 @@\n-            List<AnnotationData> annotationData = toAnnotated(annotated).getAnnotationData(type1, type2, types);\n+            List<AnnotationData> annotationData = annotated.getAnnotationData(type1, type2, types);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaType.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"}]}