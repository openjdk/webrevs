{"files":[{"patch":"@@ -38,2 +38,0 @@\n-import java.util.concurrent.atomic.AtomicLong;\n-import java.util.concurrent.atomic.AtomicReference;\n@@ -54,1 +52,1 @@\n-    private final AtomicReference<State> stateRef = new AtomicReference<>();\n+    private State state;\n@@ -56,1 +54,1 @@\n-    private final AtomicLong lengthRef = new AtomicLong();\n+    private long length;\n@@ -82,2 +80,1 @@\n-        boolean subscribed = stateRef.compareAndSet(null, new State.Subscribed(subscription));\n-        if (!subscribed) {\n+        if (state != null) {\n@@ -86,0 +83,1 @@\n+            state = new State.Subscribed(subscription);\n@@ -98,1 +96,1 @@\n-        if (!(stateRef.get() instanceof State.Subscribed subscribed)) {\n+        if (!(state instanceof State.Subscribed subscribed)) {\n@@ -110,6 +108,4 @@\n-            boolean terminated = stateRef.compareAndSet(subscribed, State.Terminated.INSTANCE);\n-            if (terminated) {\n-                downstreamSubscriber.onError(new IOException(\n-                        \"the maximum number of bytes that are allowed to be consumed is exceeded\"));\n-                subscribed.subscription.cancel();\n-            }\n+            state = State.Terminated.INSTANCE;\n+            downstreamSubscriber.onError(new IOException(\n+                    \"the maximum number of bytes that are allowed to be consumed is exceeded\"));\n+            subscribed.subscription.cancel();\n@@ -122,9 +118,3 @@\n-        while (true) {\n-            long length = lengthRef.get();\n-            long nextLength = Math.addExact(length, bufferLength);\n-            if (nextLength > capacity) {\n-                return false;\n-            }\n-            if (lengthRef.compareAndSet(length, nextLength)) {\n-                return true;\n-            }\n+        long nextLength = Math.addExact(length, bufferLength);\n+        if (nextLength > capacity) {\n+            return false;\n@@ -132,0 +122,2 @@\n+        length = nextLength;\n+        return true;\n@@ -137,1 +129,2 @@\n-        if (terminate()) {\n+        if (state instanceof State.Subscribed) {\n+            state = State.Terminated.INSTANCE;\n@@ -144,1 +137,2 @@\n-        if (terminate()) {\n+        if (state instanceof State.Subscribed) {\n+            state = State.Terminated.INSTANCE;\n@@ -149,5 +143,0 @@\n-    private boolean terminate() {\n-        return stateRef.get() instanceof State.Subscribed subscribed &&\n-                stateRef.compareAndSet(subscribed, State.Terminated.INSTANCE);\n-    }\n-\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/LimitingSubscriber.java","additions":18,"deletions":29,"binary":false,"changes":47,"status":"modified"}]}