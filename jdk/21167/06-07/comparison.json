{"files":[{"patch":"@@ -43,3 +43,9 @@\n-\/\/\/ Modeling private keys generated by a [sun.security.provider.NamedKeyPairGenerator]\n-\/\/\/ or [sun.security.provider.NamedKeyFactory]. Its [#getParams()] method always\n-\/\/\/ returns its name as a [NamedParameterSpec] object.\n+\/\/\/ Represents a private key from an algorithm family that is specialized\n+\/\/\/ with a named parameter set.\n+\/\/\/\n+\/\/\/ This key is generated by either a [sun.security.provider.NamedKeyPairGenerator]\n+\/\/\/ or [sun.security.provider.NamedKeyFactory]. Its [#getAlgorithm] method\n+\/\/\/ returns the algorithm family name, while its [#getParams()] method returns\n+\/\/\/ the parameter set name as a [NamedParameterSpec] object. The algorithm\n+\/\/\/ identifier in the PKCS #8 encoding of the key is always a single OID derived\n+\/\/\/ from the parameter set name.\n@@ -54,1 +60,1 @@\n-    private final byte[] h;\n+    private final byte[] rawBytes;\n@@ -60,1 +66,1 @@\n-    public NamedPKCS8Key(String fname, String pname, byte[] h) {\n+    public NamedPKCS8Key(String fname, String pname, byte[] rawBytes) {\n@@ -68,1 +74,1 @@\n-        this.h = h;\n+        this.rawBytes = rawBytes;\n@@ -70,1 +76,1 @@\n-        DerValue val = new DerValue(DerValue.tag_OctetString, h);\n+        DerValue val = new DerValue(DerValue.tag_OctetString, rawBytes);\n@@ -87,1 +93,1 @@\n-            h = new DerInputStream(key).getOctetString();\n+            rawBytes = new DerInputStream(key).getOctetString();\n@@ -103,1 +109,1 @@\n-        return h;\n+        return rawBytes;\n@@ -125,1 +131,1 @@\n-        Arrays.fill(h, (byte)0);\n+        Arrays.fill(rawBytes, (byte)0);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/NamedPKCS8Key.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -70,2 +70,1 @@\n-\/\/\/ after the call. Together, this makes sure that the caller does not need to\n-\/\/\/ make any defensive copy on the input and output arrays.\n+\/\/\/ after the call.\n@@ -87,0 +86,11 @@\n+\/\/\/\n+\/\/\/ When constructing a [NamedX509Key] or [NamedPKCS8Key] object from raw key\n+\/\/\/ bytes, the key bytes are directly referenced within the object, so the\n+\/\/\/ caller must not modify them afterward. Similarly, the key's `getRawBytes`\n+\/\/\/ method returns direct references to the underlying raw key bytes, meaning\n+\/\/\/ the caller must not alter the contents of the returned value.\n+\/\/\/\n+\/\/\/ Together, these measures ensure the classes are as efficient as possible,\n+\/\/\/ preventing unnecessary array cloning and potential data leaks. While these\n+\/\/\/ classes should not be considered immutable, strictly adhering to the rules\n+\/\/\/ above will ensure data integrity is maintained.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/NamedKeyPairGenerator.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -40,3 +40,9 @@\n-\/\/\/ Modeling public keys generated by a [sun.security.provider.NamedKeyPairGenerator]\n-\/\/\/ or [sun.security.provider.NamedKeyFactory]. Its [#getParams()] method always\n-\/\/\/ returns its name as a [NamedParameterSpec] object.\n+\/\/\/ Represents a public key from an algorithm family that is specialized\n+\/\/\/ with a named parameter set.\n+\/\/\/\n+\/\/\/ This key is generated by either a [sun.security.provider.NamedKeyPairGenerator]\n+\/\/\/ or [sun.security.provider.NamedKeyFactory]. Its [#getAlgorithm] method\n+\/\/\/ returns the algorithm family name, while its [#getParams()] method returns\n+\/\/\/ the parameter set name as a [NamedParameterSpec] object. The algorithm\n+\/\/\/ identifier in the X.509 encoding of the key is always a single OID derived\n+\/\/\/ from the parameter set name.\n@@ -51,1 +57,1 @@\n-    private final byte[] h;\n+    private final byte[] rawBytes;\n@@ -55,1 +61,1 @@\n-    public NamedX509Key(String fname, String pname, byte[] h) {\n+    public NamedX509Key(String fname, String pname, byte[] rawBytes) {\n@@ -63,1 +69,1 @@\n-        this.h = h;\n+        this.rawBytes = rawBytes;\n@@ -65,1 +71,1 @@\n-        setKey(new BitArray(h.length * 8, h));\n+        setKey(new BitArray(rawBytes.length * 8, rawBytes));\n@@ -76,1 +82,1 @@\n-        this.h = getKey().toByteArray();\n+        this.rawBytes = getKey().toByteArray();\n@@ -89,1 +95,1 @@\n-        return h;\n+        return rawBytes;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NamedX509Key.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"}]}