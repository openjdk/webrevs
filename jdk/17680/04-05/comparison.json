{"files":[{"patch":"@@ -31,0 +31,2 @@\n+    final static boolean ADD_DELAYS_FOR_RACES = false;\n+    final static boolean CHECK_FOR_BAD_RESULTS = false;\n@@ -44,2 +46,15 @@\n-    native static void check(int i, Object o, Thread owner,\n-                             int entryCount, int notifyWaiterCount);\n+    native static void check(int index, Object syncObject, Thread owner, int entryCount,\n+                             Thread waiterThread, int waiterCount,\n+                             Thread notifyWaiterThread, int notifyWaiterCount);\n+\n+    static void verify(int index, Object syncObject, Thread owner, int entryCount,\n+                       Thread waiterThread, int waiterCount,\n+                       Thread notifyWaiterThread, int notifyWaiterCount) {\n+        if (CHECK_FOR_BAD_RESULTS) {\n+            check(index, syncObject, owner, entryCount,\n+                  waiterThread, waiterCount, notifyWaiterThread, notifyWaiterCount);\n+        } else {\n+            check(index, syncObject, owner, entryCount,\n+                  null, 0, notifyWaiterThread, notifyWaiterCount);\n+        }\n+    }\n@@ -54,0 +69,1 @@\n+        Thread mainThread = Thread.currentThread();\n@@ -59,1 +75,1 @@\n-            runn[i] = new objmonusage001a(i, syncObject[i]);\n+            runn[i] = new objmonusage001a(mainThread, i, syncObject[i]);\n@@ -71,0 +87,23 @@\n+\n+                \/\/ verify2:\n+                \/\/ - owner == main:\n+                \/\/       main thread owns the monitor and worker thread\n+                \/\/       is in wait() and is not notified\n+                \/\/ - entry_count == 1:\n+                \/\/       main thread reentered 1 time\n+                \/\/ - waiter_count == 0:\n+                \/\/       main thread has already reentered the monitor and worker thread\n+                \/\/       is in wait() and is not notified so it is not waiting to reenter\n+                \/\/       the monitor\n+                \/\/ - waiter_thread == null:\n+                \/\/       no thread is waiting to reenter the monitor\n+                \/\/ - notify_waiter_count == 1:\n+                \/\/       worker thread is in wait() and is not notified\n+                \/\/ - notify_waiter_thread == runn[i]:\n+                \/\/       worker thread is in wait() and is not notified\n+                \/\/          \n+                \/\/ This is a stable verification point because the worker thread is in wait()\n+                \/\/ and is not notified and the main thread is doing the verification.\n+                \/\/\n+                verify(NUMBER_OF_THREADS + i, syncObject[i], mainThread, 1,\n+                       runn[i], 1, runn[i], 1);\n@@ -72,1 +111,23 @@\n-            check(NUMBER_OF_THREADS + i, syncObject[i], null, 0, 1);\n+\n+            \/\/ verify-3:\n+            \/\/ - owner == null:\n+            \/\/       main thread does not own the monitor and worker thread is in\n+            \/\/       wait() and is not notified so there is no owner\n+            \/\/ - entry_count == 0:\n+            \/\/       no owner so entry_count is 0\n+            \/\/ - waiter_count == 0:\n+            \/\/       main thread is not trying to enter the monitor and worker thread\n+            \/\/       is in wait() and is not notified so it is not waiting to reenter\n+            \/\/       the monitor\n+            \/\/ - waiter_thread == null:\n+            \/\/       no thread is waiting to reenter the monitor\n+            \/\/ - notify_waiter_count == 1:\n+            \/\/       worker thread is in wait() and is not notified\n+            \/\/ - notify_waiter_thread == runn[i]:\n+            \/\/       worker thread is in wait() and is not notified\n+            \/\/\n+            \/\/ This is a stable verification point because the worker thread is in wait()\n+            \/\/ and is not notified and the main thread is doing the verification.\n+            \/\/\n+            verify((NUMBER_OF_THREADS * 2) + i, syncObject[i], null, 0,\n+                   runn[i], 1, runn[i], 1);\n@@ -91,0 +152,1 @@\n+    Thread mainThread;\n@@ -92,1 +154,1 @@\n-    int ind;\n+    int index;\n@@ -94,2 +156,3 @@\n-    public objmonusage001a(int i, Object s) {\n-        ind = i;\n+    public objmonusage001a(Thread mt, int i, Object s) {\n+        mainThread = mt;\n+        index = i;\n@@ -101,1 +164,20 @@\n-            objmonusage001.check(ind, syncObject, this, 1, 1);\n+            \/\/ verify-1:\n+            \/\/ - owner == this_thread:\n+            \/\/       this worker thread is owner\n+            \/\/ - entry_count == 1:\n+            \/\/       worker thread entered 1 time\n+            \/\/ - waiter_count == 0:\n+            \/\/       main thread is in wait() and is not notified so it is not\n+            \/\/       waiting to reenter the monitor\n+            \/\/ - waiter_thread == null:\n+            \/\/       no thread is waiting to reenter the monitor\n+            \/\/ - notify_waiter_count == 1:\n+            \/\/        main thread is in wait() and is not notified\n+            \/\/ - notify_waiter_thread == mainThread:\n+            \/\/       main thread is in wait() and is not notified\n+            \/\/\n+            \/\/ This is a stable verification point because the main thread is in wait()\n+            \/\/ and is not notified and this worker thread is doing the verification.\n+            \/\/\n+            objmonusage001.verify(index, syncObject, this, 1,\n+                                  mainThread, 1, mainThread, 1);\n@@ -103,0 +185,1 @@\n+\n@@ -105,0 +188,4 @@\n+\n+                if (objmonusage001.ADD_DELAYS_FOR_RACES) {\n+                    Thread.sleep(1000);\n+                }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001.java","additions":95,"deletions":8,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,8 @@\n- *     The test exercises JVMTI function GetObjectMonitorUsage.\n+ *     The test exercises JVMTI function GetObjectMonitorUsage. The main\n+ *     thread uses a monitor to do coordinated launches of work threads.\n+ *     Each worker thread verifies expected GetObjectMonitorUsage values\n+ *     when it gets going and the main thread also verifies expected\n+ *     GetObjectMonitorUsage values once the worker thread returns\n+ *     control flow to the main thread. The test scenario is repeated\n+ *     for a fixed number of threads.\n+ *\n@@ -39,1 +46,1 @@\n- * @run main\/othervm\/native -agentlib:objmonusage001 nsk.jvmti.GetObjectMonitorUsage.objmonusage001\n+ * @run main\/othervm\/native -agentlib:objmonusage001=printdump nsk.jvmti.GetObjectMonitorUsage.objmonusage001\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001\/TestDescription.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -97,1 +97,3 @@\n-        jthread owner, jint entryCount, jint notifyWaiterCount) {\n+        jthread owner, jint entryCount,\n+        jthread waiterThread, jint waiterCount,\n+        jthread notifyWaiterThread, jint notifyWaiterCount) {\n@@ -103,1 +105,1 @@\n-    if (result == STATUS_FAILED) {\n+    if (result == STATUS_FAILED && printdump != JNI_TRUE) {\n@@ -155,1 +157,1 @@\n-        printf(\"(%d) entry_count expected: %d, actually: %d\\n\",\n+        printf(\"FAILED: (%d) entry_count expected: %d, actually: %d\\n\",\n@@ -160,0 +162,14 @@\n+    if (inf.waiter_count != waiterCount) {\n+        printf(\"FAILED: (%d) waiter_count expected: %d, actually: %d\\n\",\n+               i, waiterCount, inf.waiter_count);\n+        result = STATUS_FAILED;\n+    }\n+\n+    if (inf.waiters != nullptr &&\n+        !env->IsSameObject(waiterThread, inf.waiters[0])) {\n+        jvmti->GetThreadInfo(inf.waiters[0], &tinf);\n+        printf(\"FAILED: (%d) unexpected waiterThread: %s (0x%p)\\n\", i,\n+               tinf.name, inf.waiters[0]);\n+        result = STATUS_FAILED;\n+    }\n+\n@@ -161,1 +177,1 @@\n-        printf(\"(%d) notify_waiter_count expected: %d, actually: %d\\n\",\n+        printf(\"FAILED: (%d) notify_waiter_count expected: %d, actually: %d\\n\",\n@@ -165,0 +181,8 @@\n+\n+    if (inf.notify_waiters != nullptr &&\n+        !env->IsSameObject(notifyWaiterThread, inf.notify_waiters[0])) {\n+        jvmti->GetThreadInfo(inf.notify_waiters[0], &tinf);\n+        printf(\"FAILED: (%d) unexpected waiterThread: %s (0x%p)\\n\", i,\n+               tinf.name, inf.notify_waiters[0]);\n+        result = STATUS_FAILED;\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001\/objmonusage001.cpp","additions":28,"deletions":4,"binary":false,"changes":32,"status":"modified"}]}