{"files":[{"patch":"@@ -80,2 +80,2 @@\n-     * This is a hint that has changes no visible state of the buffer; it helps\n-     * to reduce reallocation of the underlying storage by allocating sufficient\n+     * This is a hint that changes no visible state of the buffer; it helps to\n+     * reduce reallocation of the underlying storage by allocating sufficient\n@@ -114,2 +114,2 @@\n-     * In the conversions, all NaN values of the {@code float} may be collapsed\n-     * into a single {@linkplain Float#NaN \"canonical\" NaN value}.\n+     * In the conversions, all NaN values of the {@code float} may or may not be\n+     * collapsed into a single {@linkplain Float#NaN \"canonical\" NaN value}.\n@@ -131,2 +131,2 @@\n-     * In the conversions, all NaN values of the {@code double} may be collapsed\n-     * into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n+     * In the conversions, all NaN values of the {@code double} may or may not\n+     * be collapsed into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/BufWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -199,2 +199,2 @@\n-     * In the conversions, all NaN values of the {@code float} may be collapsed\n-     * into a single {@linkplain Float#NaN \"canonical\" NaN value}.\n+     * In the conversions, all NaN values of the {@code float} may or may not be\n+     * collapsed into a single {@linkplain Float#NaN \"canonical\" NaN value}.\n@@ -210,2 +210,2 @@\n-     * In the conversions, all NaN values of the {@code double} may be collapsed\n-     * into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n+     * In the conversions, all NaN values of the {@code double} may or may not\n+     * be collapsed into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassReader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-     * Parses generic Java type signature from raw string.\n+     * Parses a Java type signature from a raw string.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Signature.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * This attribute was introduced in the Java SE Platform version 1.0.2, major\n+ * This attribute was introduced in the Java Platform version 1.0.2, major\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/CodeAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * This attribute was introduced in the Java SE Platform version 1.0.2, major\n+ * This attribute was introduced in the Java Platform version 1.0.2, major\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/ConstantValueAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * The attribute was introduced in the Java SE Platform version 1.0.2, major\n+ * The attribute was introduced in the Java Platform version 1.0.2, major\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/ExceptionsAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * The attribute was introduced in the Java SE Platform version 1.0.2, major\n+ * The attribute was introduced in the Java Platform version 1.0.2, major\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/LineNumberTableAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * The attribute was introduced in the Java SE Platform version 1.0.2, major\n+ * The attribute was introduced in the Java Platform version 1.0.2, major\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/LocalVariableTableAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n- * In the conversions, all NaN values of the {@code double} may be collapsed\n- * into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n+ * In the conversions, all NaN values of the {@code double} may or may not be\n+ * collapsed into a single {@linkplain Double#NaN \"canonical\" NaN value}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/DoubleEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n- * In the conversions, all NaN values of the {@code float} may be collapsed into\n- * a single {@linkplain Float#NaN \"canonical\" NaN value}.\n+ * In the conversions, all NaN values of the {@code float} may or may not be\n+ * collapsed into a single {@linkplain Float#NaN \"canonical\" NaN value}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/FloatEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}