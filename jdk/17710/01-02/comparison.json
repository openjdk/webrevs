{"files":[{"patch":"@@ -113,4 +113,2 @@\n-ciEnv::ciEnv(CompileTask* task) :\n-    _ciEnv_arena(mtCompiler),\n-    _failure_reason(mtCompiler)\n-{\n+ciEnv::ciEnv(CompileTask* task)\n+  : _ciEnv_arena(mtCompiler) {\n@@ -242,4 +240,1 @@\n-ciEnv::ciEnv(Arena* arena) :\n-    _ciEnv_arena(mtCompiler),\n-    _failure_reason(mtCompiler)\n-{\n+ciEnv::ciEnv(Arena* arena) : _ciEnv_arena(mtCompiler) {\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -38,1 +39,0 @@\n-#include \"utilities\/cHeapStringHolder.hpp\"\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"utilities\/cHeapStringHolder.hpp\"\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -32,1 +32,1 @@\n-    _string = NEW_C_HEAP_ARRAY(char, len + 1, _memflags);\n+    _string = NEW_C_HEAP_ARRAY(char, len + 1, mtCompiler);\n","filename":"src\/hotspot\/share\/compiler\/cHeapStringHolder.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/hotspot\/share\/utilities\/cHeapStringHolder.cpp","status":"renamed"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n+#define SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+\n+\/\/ Holder for a C-Heap allocated String\n+\/\/ The user must ensure that the destructor is called, or at least clear.\n+class CHeapStringHolder : public StackObj {\n+private:\n+  char* _string;\n+\n+public:\n+  CHeapStringHolder() : _string(nullptr) {}\n+  ~CHeapStringHolder() { clear(); };\n+  NONCOPYABLE(CHeapStringHolder);\n+\n+  \/\/ Allocate memory to hold a copy of string\n+  void set(const char* string);\n+\n+  \/\/ Release allocated memory\n+  void clear();\n+\n+  const char* get() const { return _string; };\n+};\n+\n+#endif \/\/ SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n","filename":"src\/hotspot\/share\/compiler\/cHeapStringHolder.hpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -2333,1 +2333,1 @@\n-      bool reason_on_C_heap = true;\n+      failure_reason_on_C_heap = true;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -641,1 +641,0 @@\n-                  _failure_reason(mtCompiler),\n@@ -932,1 +931,0 @@\n-    _failure_reason(mtCompiler),\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -48,1 +49,0 @@\n-#include \"utilities\/cHeapStringHolder.hpp\"\n@@ -367,1 +367,1 @@\n-  CHeapStringHolder     _failure_reason;       \/\/ for record_failure\/failing pattern\n+  CHeapStringHolder     _failure_reason;        \/\/ for record_failure\/failing pattern\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_UTILITIES_CHEAPSTRINGHOLDER_HPP\n-#define SHARE_UTILITIES_CHEAPSTRINGHOLDER_HPP\n-\n-#include \"memory\/allocation.hpp\"\n-\n-\/\/ Holder for a C-Heap allocated String\n-\/\/ The user must ensure that the destructor is called, or at least clear.\n-class CHeapStringHolder : public StackObj {\n-private:\n-  const MEMFLAGS _memflags;\n-  char* _string;\n-\n-public:\n-  CHeapStringHolder(MEMFLAGS memflags) :\n-    _memflags(memflags), _string(nullptr) {}\n-  ~CHeapStringHolder() { clear(); };\n-  NONCOPYABLE(CHeapStringHolder);\n-\n-  \/\/ Allocate memory to hold a copy of string\n-  void set(const char* string);\n-\n-  \/\/ Release allocated memory\n-  void clear();\n-\n-  const char* get() const { return _string; };\n-};\n-\n-#endif \/\/ SHARE_UTILITIES_CHEAPSTRINGHOLDER_HPP\n","filename":"src\/hotspot\/share\/utilities\/cHeapStringHolder.hpp","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"}]}