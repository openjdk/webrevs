{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-     * @throws NullPointerException if <code>iv<\/code> is <code>null<\/code>\n+     * @throws NullPointerException if {@code iv} is {@code null}\n@@ -57,2 +57,2 @@\n-     * Creates an IvParameterSpec object using the first <code>len<\/code>\n-     * bytes in <code>iv<\/code>, beginning at <code>offset<\/code>\n+     * Creates an IvParameterSpec object using the first {@code len}\n+     * bytes in {@code iv}, beginning at {@code offset}\n@@ -62,1 +62,1 @@\n-     * <code>iv[offset]<\/code> and <code>iv[offset+len-1]<\/code> inclusive.\n+     * {@code iv[offset]} and {@code iv[offset+len-1]} inclusive.\n@@ -64,2 +64,2 @@\n-     * @param iv the buffer with the IV. The first <code>len<\/code>\n-     * bytes of the buffer beginning at <code>offset<\/code> inclusive\n+     * @param iv the buffer with the IV. The first {@code len}\n+     * bytes of the buffer beginning at {@code offset} inclusive\n@@ -67,1 +67,1 @@\n-     * @param offset the offset in <code>iv<\/code> where the IV\n+     * @param offset the offset in {@code iv} where the IV\n@@ -70,1 +70,1 @@\n-     * @throws IllegalArgumentException if <code>iv<\/code> is <code>null<\/code>\n+     * @throws IllegalArgumentException if {@code iv} is {@code null}\n@@ -72,2 +72,2 @@\n-     * @throws ArrayIndexOutOfBoundsException is thrown if <code>offset<\/code>\n-     * or <code>len<\/code> index bytes outside the <code>iv<\/code>.\n+     * @throws ArrayIndexOutOfBoundsException if {@code offset}\n+     * or {@code len} are negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/IvParameterSpec.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,4 @@\n-     * @exception IllegalArgumentException if {@code iv} is null.\n+     * @exception IllegalArgumentException if {@code iv} is {@code null}\n+     * or {@code iv.length - offset < 8}.\n+     * @exception ArrayIndexOutOfBoundsException if\n+     * {@code offset} is negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC2ParameterSpec.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,3 +109,3 @@\n-     * @exception IllegalArgumentException if {@code iv} is\n-     * {@code null} or\n-     * {@code (iv.length - offset < 2 * (wordSize \/ 8))}\n+     * @exception ArrayIndexOutOfBoundsException if {@code offset} is negative.\n+     * @exception IllegalArgumentException if {@code iv} is {@code null}\n+     * or {@code (iv.length - offset < 2 * (wordSize \/ 8))}\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC5ParameterSpec.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-     * <code>len<\/code> bytes of <code>key<\/code>, starting at\n-     * <code>offset<\/code> inclusive.\n+     * {@code len} bytes of {@code key}, starting at\n+     * {@code offset} inclusive.\n@@ -120,2 +120,2 @@\n-     * those between <code>key[offset]<\/code> and\n-     * <code>key[offset+len-1]<\/code> inclusive.\n+     * those between {@code key[offset]} and\n+     * {@code key[offset+len-1]} inclusive.\n@@ -125,1 +125,1 @@\n-     * DES, this constructor does not check if <code>key<\/code> is 8 bytes\n+     * DES, this constructor does not check if {@code key} is 8 bytes\n@@ -133,2 +133,2 @@\n-     * <code>len<\/code> bytes of the array beginning at\n-     * <code>offset<\/code> inclusive are copied to protect\n+     * {@code len} bytes of the array beginning at\n+     * {@code offset} inclusive are copied to protect\n@@ -136,1 +136,1 @@\n-     * @param offset the offset in <code>key<\/code> where the key material\n+     * @param offset the offset in {@code key} where the key material\n@@ -145,2 +145,2 @@\n-     * @exception IllegalArgumentException if <code>algorithm<\/code>\n-     * is null or <code>key<\/code> is null, empty, or too short,\n+     * @exception IllegalArgumentException if {@code algorithm}\n+     * is {@code null} or {@code key} is {@code null}, empty, or too short,\n@@ -148,3 +148,2 @@\n-     * @exception ArrayIndexOutOfBoundsException is thrown if\n-     * <code>offset<\/code> or <code>len<\/code> index bytes outside the\n-     * <code>key<\/code>.\n+     * @exception ArrayIndexOutOfBoundsException if\n+     * {@code offset} or {@code len} are negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/SecretKeySpec.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"}]}