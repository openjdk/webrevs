{"files":[{"patch":"@@ -73,1 +73,1 @@\n-     * or {@code len} index bytes outside the {@code iv}.\n+     * or {@code len} are negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/IvParameterSpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,4 @@\n-     * @exception IllegalArgumentException if {@code iv} is null.\n+     * @exception IllegalArgumentException if {@code iv} is {@code null}\n+     * or {@code iv.length - offset < 8}.\n+     * @exception ArrayIndexOutOfBoundsException is thrown if\n+     * {@code offset} is negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC2ParameterSpec.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,2 +115,2 @@\n-     * <code>len<\/code> bytes of <code>key<\/code>, starting at\n-     * <code>offset<\/code> inclusive.\n+     * {@code len} bytes of {@code key}, starting at\n+     * {@code offset} inclusive.\n@@ -119,2 +119,2 @@\n-     * those between <code>key[offset]<\/code> and\n-     * <code>key[offset+len-1]<\/code> inclusive.\n+     * those between {@code key[offset]} and\n+     * {@code key[offset+len-1]} inclusive.\n@@ -124,1 +124,1 @@\n-     * DES, this constructor does not check if <code>key<\/code> is 8 bytes\n+     * DES, this constructor does not check if {@code key} is 8 bytes\n@@ -132,2 +132,2 @@\n-     * <code>len<\/code> bytes of the array beginning at\n-     * <code>offset<\/code> inclusive are copied to protect\n+     * {@code len} bytes of the array beginning at\n+     * {@code offset} inclusive are copied to protect\n@@ -135,1 +135,1 @@\n-     * @param offset the offset in <code>key<\/code> where the key material\n+     * @param offset the offset in {@code key} where the key material\n@@ -143,2 +143,2 @@\n-     * @exception IllegalArgumentException if <code>algorithm<\/code>\n-     * is null or <code>key<\/code> is null, empty, or too short,\n+     * @exception IllegalArgumentException if {@code algorithm}\n+     * is {@code null} or {@code key} is {@code null}, empty, or too short,\n@@ -147,2 +147,1 @@\n-     * <code>offset<\/code> or <code>len<\/code> index bytes outside the\n-     * <code>key<\/code>.\n+     * {@code offset} or {@code len} are negative.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/SecretKeySpec.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"}]}