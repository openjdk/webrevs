{"files":[{"patch":"@@ -3012,2 +3012,4 @@\n-            \/\/x position is updated to handled the offset to which the table\n-            \/\/has to be moved towards right side in right-to-left Orientation.\n+            \/\/Table columns are laid out from right to left when component\n+            \/\/orientation is set to ComponentOrientation.RIGHT_TO_LEFT,\n+            \/\/adjust the x coordinate for this case.\n+            final int columnWidth = cm.getColumn(column).getWidth();\n@@ -3015,1 +3017,1 @@\n-                r.x = getWidthInRightToLeft() - r.x - cm.getColumn(column).getWidth();\n+                r.x = getWidthInRightToLeft() - r.x - columnWidth;\n@@ -3017,1 +3019,1 @@\n-            r.width = cm.getColumn(column).getWidth();\n+            r.width = columnWidth;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -44,6 +48,0 @@\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n@@ -55,1 +53,0 @@\n- * (Fix affects all L&F, test verifies only Metal L&F)\n@@ -62,3 +59,1 @@\n-    static volatile int allColumnWidths;\n-    static volatile Point tableLocation;\n-    static volatile Dimension tableSize;\n+    static volatile Rectangle tableBounds;\n@@ -73,1 +68,1 @@\n-                    frame = new JFrame(\"Test JTable\");\n+                    frame = new JFrame(\"JTable RTL column layout\");\n@@ -90,1 +85,1 @@\n-                    allColumnWidths = 0;\n+                    int allColumnWidths = 0;\n@@ -96,2 +91,4 @@\n-                    tableLocation = customTableObj.table.getLocationOnScreen();\n-                    tableSize = customTableObj.table.getSize();\n+                    Point tableLocation = customTableObj.table.getLocationOnScreen();\n+                    Dimension tableSize = customTableObj.table.getSize();\n+                    tableSize.width -= allColumnWidths;\n+                    tableBounds = new Rectangle(tableLocation, tableSize);\n@@ -100,5 +97,2 @@\n-                BufferedImage bufferedImage = robot.createScreenCapture(\n-                        new Rectangle(tableLocation.x,\n-                                tableLocation.y,\n-                                (int)tableSize.getWidth() - allColumnWidths,\n-                                (int)tableSize.getHeight()));\n+                BufferedImage bufferedImage = robot.createScreenCapture(tableBounds);\n+\n@@ -109,1 +103,1 @@\n-                            saveImage(bufferedImage, \"failureImage.png\");\n+                            saveImage(bufferedImage);\n@@ -128,1 +122,1 @@\n-    private static void saveImage(BufferedImage image, String fileName) {\n+    private static void saveImage(BufferedImage image) {\n@@ -130,1 +124,1 @@\n-            ImageIO.write(image, \"png\", new File(fileName));\n+            ImageIO.write(image, \"png\", new File(\"failureImage.png\"));\n@@ -149,3 +143,3 @@\n-    public final static int COL_FIRSTNAME = 0;\n-    public final static int COL_LASTNAME = 1;\n-    public final static int COL_SALARY = 2;\n+    private static final int COL_FIRSTNAME = 0;\n+    private static final int COL_LASTNAME = 1;\n+    private static final int COL_SALARY = 2;\n@@ -153,1 +147,1 @@\n-    static final Class[] classes = {\n+    static final Class<?>[] classes = {\n@@ -206,1 +200,1 @@\n-        public Class getColumnClass(int columnIndex) {\n+        public Class<?> getColumnClass(int columnIndex) {\n","filename":"test\/jdk\/javax\/swing\/JTable\/JTableRightOrientationTest.java","additions":21,"deletions":27,"binary":false,"changes":48,"status":"modified"}]}