{"files":[{"patch":"@@ -153,1 +153,1 @@\n-            thisClass = readEntry(thisClassPos, ClassEntry.class);\n+            thisClass = readClassEntry(thisClassPos);\n@@ -342,0 +342,4 @@\n+        return entryByIndex(index, 0, 0xff);\n+    }\n+\n+    private PoolEntry entryByIndex(int index, int lowerBoundTag, int upperBoundTag) {\n@@ -352,0 +356,4 @@\n+            if (tag < lowerBoundTag || tag > upperBoundTag) {\n+                throw new ConstantPoolException(\n+                        \"Bad tag (\" + tag + \") at index (\" + index + \") position (\" + offset + \")\");\n+            }\n@@ -370,1 +378,1 @@\n-                                                                                     (AbstractPoolEntry.AbstractMemberRefEntry) readEntry(q + 1));\n+                                                                                     readEntry(q + 1, AbstractPoolEntry.AbstractMemberRefEntry.class, TAG_FIELDREF, TAG_INTERFACEMETHODREF));\n@@ -426,1 +434,5 @@\n-        var e = readEntry(pos);\n+        return readEntry(pos, cls, 0, 0xff);\n+    }\n+\n+    private <T extends PoolEntry> T readEntry(int pos, Class<T> cls, int lowerBoundTag, int upperBoundTag) {\n+        var e = entryByIndex(readU2(pos), lowerBoundTag, upperBoundTag);\n@@ -457,1 +469,1 @@\n-        return readEntry(pos, ModuleEntry.class);\n+        return readEntry(pos, ModuleEntry.class, TAG_MODULE, TAG_MODULE);\n@@ -462,1 +474,1 @@\n-        return readEntry(pos, PackageEntry.class);\n+        return readEntry(pos, PackageEntry.class, TAG_PACKAGE, TAG_PACKAGE);\n@@ -467,1 +479,1 @@\n-        return readEntry(pos, ClassEntry.class);\n+        return readEntry(pos, ClassEntry.class, TAG_CLASS, TAG_CLASS);\n@@ -472,1 +484,1 @@\n-        return readEntry(pos, NameAndTypeEntry.class);\n+        return readEntry(pos, NameAndTypeEntry.class, TAG_NAMEANDTYPE, TAG_NAMEANDTYPE);\n@@ -477,1 +489,1 @@\n-        return readEntry(pos, MethodHandleEntry.class);\n+        return readEntry(pos, MethodHandleEntry.class, TAG_METHODHANDLE, TAG_METHODHANDLE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8320360\n+ * @bug 8320360 8330684\n@@ -34,0 +34,1 @@\n+import java.lang.classfile.constantpool.ConstantPoolException;\n@@ -95,0 +96,6 @@\n+\n+    @Test\n+    void testInvalidClassEntry() {\n+        assertThrows(ConstantPoolException.class, () -> ClassFile.of().parse(new byte[]{(byte)0xCA, (byte)0xFE, (byte)0xBA, (byte)0xBE,\n+            0, 0, 0, 0, 0, 2, ClassFile.TAG_METHODREF, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).thisClass());\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}