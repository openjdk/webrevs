{"files":[{"patch":"@@ -655,1 +655,1 @@\n-                    flushAndCloseOutputStream();\n+                    flushOutputStream();\n@@ -657,1 +657,2 @@\n-                    closeOpenedSocket(sock);\n+                    \/\/ due to the bug 8362268, the closure of the resource is moved to LdapClient.java\n+                    \/\/closeOpenedSocket(sock);\n@@ -676,1 +677,0 @@\n-                    sock = null;\n@@ -696,1 +696,1 @@\n-    private void flushAndCloseOutputStream() {\n+    private void flushOutputStream() {\n@@ -703,6 +703,0 @@\n-        try {\n-            outStream.close();\n-        } catch (IOException ioEx) {\n-            if (debug)\n-                System.err.println(\"Connection.closeOutputStream: OutputStream close problem \" + ioEx);\n-        }\n@@ -723,0 +717,5 @@\n+    void cleanupAndClose(Control[] reqCtls) {\n+        lock.lock();\n+        try {\n+\n+            cleanup(reqCtls, false);\n@@ -724,0 +723,14 @@\n+            \/\/ 8313657 socket is not closed until GC is run\n+            \/\/ it caused the bug 8362268, hence moved here\n+            if (outStream != null) {\n+                outStream.close();\n+            }\n+            if (!sock.isClosed()) {\n+                sock.close();\n+            }\n+        } catch (IOException ignored) {\n+            \/\/ we're closing, ignore IO.\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-                    conn.cleanup(reqCtls, false);\n+                    conn.cleanupAndClose(reqCtls);\n@@ -468,1 +468,1 @@\n-                        conn.cleanup(reqCtls, false);\n+                        conn.cleanupAndClose(reqCtls);\n@@ -480,0 +480,1 @@\n+\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.net.SocketAddress;\n-import java.io.ByteArrayInputStream;\n@@ -33,2 +31,0 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n@@ -68,0 +64,1 @@\n+        props.put(\"com.sun.jndi.ldap.connect.timeout\", 100+\"\");\n@@ -115,27 +112,0 @@\n-    private static class LdapInputStream extends InputStream {\n-        private ByteArrayInputStream bos;\n-\n-        public LdapInputStream() {\n-        }\n-\n-        @Override\n-        public int read() throws IOException {\n-            bos = new ByteArrayInputStream(BIND_RESPONSE);\n-            return bos.read();\n-        }\n-    }\n-\n-    private static class LdapOutputStream extends OutputStream {\n-\n-        @Override\n-        public void write(int b) throws IOException {\n-            System.out.println(\"output stream writing\");\n-        }\n-\n-        @Override\n-        public void flush() throws IOException {\n-            System.out.println(BAD_FLUSH);\n-            throw new IOException(BAD_FLUSH);\n-        }\n-    }\n-\n@@ -144,13 +114,0 @@\n-        private LdapOutputStream output = new LdapOutputStream();\n-        private LdapInputStream input = new LdapInputStream();\n-\n-        public void connect(SocketAddress address, int timeout) {\n-        }\n-\n-        public InputStream getInputStream() {\n-            return input;\n-        }\n-\n-        public OutputStream getOutputStream() {\n-            return output;\n-        }\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/SocketCloseTest.java","additions":1,"deletions":44,"binary":false,"changes":45,"status":"modified"}]}