{"files":[{"patch":"@@ -688,0 +688,3 @@\n+                    \/\/ 8313657 socket is not closed until GC is run\n+                    \/\/ due to the bug 8362268, the closure of the resource is moved to LdapClient.java\n+                    \/\/closeOpenedSocket(sock);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -483,0 +483,1 @@\n+    \/\/ it caused the bug 8362268, hence moved here\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.net.SocketAddress;\n-import java.io.ByteArrayInputStream;\n@@ -33,2 +31,0 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n@@ -116,27 +112,0 @@\n-    private static class LdapInputStream extends InputStream {\n-        private ByteArrayInputStream bos;\n-\n-        public LdapInputStream() {\n-        }\n-\n-        @Override\n-        public int read() throws IOException {\n-            bos = new ByteArrayInputStream(BIND_RESPONSE);\n-            return bos.read();\n-        }\n-    }\n-\n-    private static class LdapOutputStream extends OutputStream {\n-\n-        @Override\n-        public void write(int b) throws IOException {\n-            System.out.println(\"output stream writing\");\n-        }\n-\n-        @Override\n-        public void flush() throws IOException {\n-            System.out.println(BAD_FLUSH);\n-            throw new IOException(BAD_FLUSH);\n-        }\n-    }\n-\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/SocketCloseTest.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"modified"}]}