{"files":[{"patch":"@@ -717,0 +717,5 @@\n+    void cleanupAndClose(Control[] reqCtls) {\n+        lock.lock();\n+        try {\n+\n+            cleanup(reqCtls, false);\n@@ -718,0 +723,14 @@\n+            \/\/ 8313657 socket is not closed until GC is run\n+            \/\/ it caused the bug 8362268, hence moved here\n+            if (outStream != null) {\n+                outStream.close();\n+            }\n+            if (!sock.isClosed()) {\n+                sock.close();\n+            }\n+        } catch (IOException ignored) {\n+            \/\/ we're closing, ignore IO.\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -463,2 +463,1 @@\n-                    conn.cleanup(reqCtls, false);\n-                    closeOpenedResource();\n+                    conn.cleanupAndClose(reqCtls);\n@@ -469,2 +468,1 @@\n-                        conn.cleanup(reqCtls, false);\n-                        closeOpenedResource();\n+                        conn.cleanupAndClose(reqCtls);\n@@ -482,17 +480,0 @@\n-    \/\/ 8313657 socket is not closed until GC is run\n-    \/\/ it caused the bug 8362268, hence moved here\n-    private void closeOpenedResource() {\n-        try {\n-            if (conn != null) {\n-                if (conn.outStream != null) {\n-                    conn.outStream.close();\n-                }\n-\n-                if (!conn.sock.isClosed()) {\n-                    conn.sock.close();\n-                }\n-            }\n-        } catch (IOException ioEx) {\n-            \/\/ignore the error;\n-        }\n-    }\n@@ -512,1 +493,0 @@\n-        closeOpenedResource();\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"}]}