{"files":[{"patch":"@@ -689,1 +689,2 @@\n-                    closeOpenedSocket(sock);\n+                    \/\/ due to the bug 8362268, the closure of the resource is moved to LdapClient.java\n+                    \/\/closeOpenedSocket(sock);\n@@ -708,1 +709,0 @@\n-                    sock = null;\n@@ -735,6 +735,0 @@\n-        try {\n-            outStream.close();\n-        } catch (IOException ioEx) {\n-            if (debug)\n-                System.err.println(\"Connection.closeOutputStream: OutputStream close problem \" + ioEx);\n-        }\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -464,0 +464,1 @@\n+                    closeOpenedResource();\n@@ -469,0 +470,1 @@\n+                        closeOpenedResource();\n@@ -480,0 +482,18 @@\n+    \/\/ 8313657 socket is not closed until GC is run\n+    \/\/ it caused the bug 8362268, hence moved here\n+    private void closeOpenedResource() {\n+        try {\n+            if (conn != null) {\n+                if (conn.outStream != null) {\n+                    conn.outStream.close();\n+                }\n+\n+                if (conn.sock != null && !conn.sock.isClosed()) {\n+                    conn.sock.close();\n+                }\n+            }\n+        } catch (IOException ioEx) {\n+            \/\/ignore the error;\n+        }\n+    }\n+\n@@ -492,0 +512,1 @@\n+        closeOpenedResource();\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.net.SocketAddress;\n-import java.io.ByteArrayInputStream;\n@@ -33,2 +31,0 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n@@ -68,0 +64,1 @@\n+        props.put(\"com.sun.jndi.ldap.connect.timeout\", 100+\"\");\n@@ -115,27 +112,0 @@\n-    private static class LdapInputStream extends InputStream {\n-        private ByteArrayInputStream bos;\n-\n-        public LdapInputStream() {\n-        }\n-\n-        @Override\n-        public int read() throws IOException {\n-            bos = new ByteArrayInputStream(BIND_RESPONSE);\n-            return bos.read();\n-        }\n-    }\n-\n-    private static class LdapOutputStream extends OutputStream {\n-\n-        @Override\n-        public void write(int b) throws IOException {\n-            System.out.println(\"output stream writing\");\n-        }\n-\n-        @Override\n-        public void flush() throws IOException {\n-            System.out.println(BAD_FLUSH);\n-            throw new IOException(BAD_FLUSH);\n-        }\n-    }\n-\n@@ -144,13 +114,0 @@\n-        private LdapOutputStream output = new LdapOutputStream();\n-        private LdapInputStream input = new LdapInputStream();\n-\n-        public void connect(SocketAddress address, int timeout) {\n-        }\n-\n-        public InputStream getInputStream() {\n-            return input;\n-        }\n-\n-        public OutputStream getOutputStream() {\n-            return output;\n-        }\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/SocketCloseTest.java","additions":1,"deletions":44,"binary":false,"changes":45,"status":"modified"}]}