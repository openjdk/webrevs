{"files":[{"patch":"@@ -226,62 +226,0 @@\n-\n-    @Benchmark\n-    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n-    public void encodeUTF8InternalAllMixed(Blackhole bh) {\n-        bh.consume(encode(utf16String));\n-        bh.consume(encode(longUtf16StartString));\n-        bh.consume(encode(asciiString7));\n-        bh.consume(encode(longUtf16EndString));\n-        bh.consume(encode(latin1String3));\n-        bh.consume(encode(longUtf16OnlyString));\n-        bh.consume(encode(longLatin1EndString));\n-        bh.consume(encode(longLatin1StartString));\n-        bh.consume(encode(utf16String15));\n-        bh.consume(encode(longLatin1OnlyString));\n-        bh.consume(encode(latin1String));\n-        bh.consume(encode(asciiString));\n-        bh.consume(encode(longAsciiString));\n-    }\n-\n-    \/\/ Code from jdk.internal.reflect.UTF8\n-    static byte[] encode(String str) {\n-        int len = str.length();\n-        byte[] res = new byte[utf8Length(str)];\n-        int utf8Idx = 0;\n-        try {\n-            for (int i = 0; i < len; i++) {\n-                int c = str.charAt(i) & 0xFFFF;\n-                if (c >= 0x0001 && c <= 0x007F) {\n-                    res[utf8Idx++] = (byte) c;\n-                } else if (c == 0x0000 ||\n-                        (c >= 0x0080 && c <= 0x07FF)) {\n-                    res[utf8Idx++] = (byte) (0xC0 + (c >> 6));\n-                    res[utf8Idx++] = (byte) (0x80 + (c & 0x3F));\n-                } else {\n-                    res[utf8Idx++] = (byte) (0xE0 + (c >> 12));\n-                    res[utf8Idx++] = (byte) (0x80 + ((c >> 6) & 0x3F));\n-                    res[utf8Idx++] = (byte) (0x80 + (c & 0x3F));\n-                }\n-            }\n-        } catch (ArrayIndexOutOfBoundsException e) {\n-            throw new InternalError\n-                    (\"Bug in sun.reflect bootstrap UTF-8 encoder\", e);\n-        }\n-        return res;\n-    }\n-\n-    private static int utf8Length(String str) {\n-        int len = str.length();\n-        int utf8Len = 0;\n-        for (int i = 0; i < len; i++) {\n-            int c = str.charAt(i) & 0xFFFF;\n-            if (c >= 0x0001 && c <= 0x007F) {\n-                utf8Len += 1;\n-            } else if (c == 0x0000 ||\n-                    (c >= 0x0080 && c <= 0x07FF)) {\n-                utf8Len += 2;\n-            } else {\n-                utf8Len += 3;\n-            }\n-        }\n-        return utf8Len;\n-    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"modified"}]}