{"files":[{"patch":"@@ -784,4 +784,2 @@\n-  \/\/ Print the legend if we are reporting compilations.\n-  if (PrintCompilation) {\n-    CompileTask::print_legend_on(tty);\n-  }\n+  \/\/ Print the legend, if needed\n+  CompileTask::maybe_print_legend();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,0 +305,11 @@\n+void CompileTask::maybe_print_legend() {\n+  if (PrintCompilation) {\n+    print_legend_on(tty);\n+  }\n+  LogTarget(Debug, jit, compilation) lt;\n+  if (lt.is_enabled()) {\n+    LogStream ls(lt);\n+    print_legend_on(&ls);\n+  }\n+}\n+\n@@ -492,1 +503,1 @@\n-void CompileTask::print_ul(const char* msg){\n+void CompileTask::print_ul(const char* msg) {\n@@ -496,1 +507,4 @@\n-    print(&ls, msg, \/* short form *\/ true, \/* cr *\/ true);\n+    print_impl(&ls, is_unloaded() ? nullptr : method(), compile_id(), comp_level(),\n+               osr_bci() != InvocationEntryBci, osr_bci(),\n+               is_blocking(), msg, \/* short form *\/ false, \/* cr *\/ true,\n+               _time_created, _time_started, _time_finished);\n@@ -504,5 +518,3 @@\n-    print_impl(&ls, nm->method(), nm->compile_id(),\n-               nm->comp_level(), nm->is_osr_method(),\n-               nm->is_osr_method() ? nm->osr_entry_bci() : -1,\n-               \/*is_blocking*\/ false,\n-               msg, \/* short form *\/ true, \/* cr *\/ true);\n+    print_impl(&ls, nm->method(), nm->compile_id(), nm->comp_level(),\n+               nm->is_osr_method(), nm->is_osr_method() ? nm->osr_entry_bci() : -1,\n+               \/*is_blocking*\/ false, msg, \/* short form *\/ false, \/* cr *\/ true);\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -242,0 +242,1 @@\n+  static void  maybe_print_legend();\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}