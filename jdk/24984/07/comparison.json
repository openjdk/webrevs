{"files":[{"patch":"@@ -62,0 +62,1 @@\n+  CHeapStringHolder _inline_messages;\n@@ -468,0 +469,3 @@\n+  void record_inline_messages(const char* msgs) { _inline_messages.set(msgs); }\n+  const char* inline_messages() { return _inline_messages.get(); }\n+\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -783,0 +784,3 @@\n+  \/\/ Print the legend, if needed\n+  CompileTask::maybe_print_legend();\n+\n@@ -2154,1 +2158,0 @@\n-  task->print_ul();\n@@ -2158,4 +2161,0 @@\n-  if (directive->PrintCompilationOption) {\n-    ResourceMark rm;\n-    task->print_tty();\n-  }\n@@ -2176,0 +2175,1 @@\n+  bool should_print_compilation = PrintCompilation || directive->PrintCompilationOption;\n@@ -2178,0 +2178,8 @@\n+\n+  \/\/ Print the task before compilation.\n+  if (should_print_compilation) {\n+    ttyLocker ttyl;  \/\/ keep the following output all in one block\n+    task->print(tty, \"started\", false, true);\n+  }\n+  task->print_ul(\"started\");\n+\n@@ -2207,0 +2215,1 @@\n+  CHeapStringHolder inline_messages;\n@@ -2345,0 +2354,6 @@\n+\n+    \/\/ Copy out inline messages to the outer block.\n+    const char* msgs = ci_env.inline_messages();\n+    if (msgs != nullptr) {\n+      inline_messages.set(msgs);\n+    }\n@@ -2347,0 +2362,2 @@\n+  task->mark_finished(os::elapsed_counter());\n+\n@@ -2352,1 +2369,2 @@\n-    if (PrintCompilation || directive->PrintCompilationOption) {\n+    if (should_print_compilation) {\n+      ttyLocker ttyl;\n@@ -2358,0 +2376,9 @@\n+  } else {\n+    if (should_print_compilation) {\n+      ttyLocker ttyl;\n+      task->print_tty();\n+      if (inline_messages.get() != nullptr) {\n+        tty->print_raw_cr(inline_messages.get());\n+      }\n+    }\n+    task->print_ul();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":33,"deletions":6,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-  _time_queued = os::elapsed_counter();\n+  _time_created = os::elapsed_counter();\n@@ -120,0 +120,1 @@\n+  _time_finished = 0;\n@@ -224,1 +225,1 @@\n-                             jlong time_queued, jlong time_started) {\n+                             jlong time_created, jlong time_started, jlong time_finished) {\n@@ -227,8 +228,12 @@\n-    st->print(UINT64_FORMAT \" \", (uint64_t) tty->time_stamp().milliseconds());\n-    if (Verbose && time_queued != 0) {\n-      \/\/ Print time in queue and time being processed by compiler thread\n-      jlong now = os::elapsed_counter();\n-      st->print(\"%.0f \", TimeHelper::counter_to_millis(now-time_queued));\n-      if (time_started != 0) {\n-        st->print(\"%.0f \", TimeHelper::counter_to_millis(now-time_started));\n-      }\n+    st->print(UINT64_FORMAT_W(10) \" \", (uint64_t) tty->time_stamp().microseconds());\n+    \/\/ Time spent before the compilation started\n+    if (time_created != 0 && time_started != 0) {\n+      st->print(\"%7.0f \", TimeHelper::counter_to_micros(time_started - time_created));\n+    } else {\n+      st->print(\"%7s \", \"\");\n+    }\n+    \/\/ Time in compilation\n+    if (time_started != 0 && time_finished != 0) {\n+      st->print(\"%7.0f \", TimeHelper::counter_to_micros(time_finished - time_started));\n+    } else {\n+      st->print(\"%7s \", \"\");\n@@ -241,1 +246,1 @@\n-  st->print(\"%4d \", compile_id);    \/\/ print compilation number\n+  st->print(\"%5d \", compile_id);    \/\/ print compilation number\n@@ -262,2 +267,2 @@\n-    if (comp_level != -1)  st->print(\"%d \", comp_level);\n-    else                   st->print(\"- \");\n+    if (comp_level != -1)  st->print(\"%3d \", comp_level);\n+    else                   st->print(\"%3s \", \"-\");\n@@ -265,1 +270,1 @@\n-  st->print(\"     \");  \/\/ more indent\n+  st->print(\"  \");  \/\/ more indent\n@@ -288,0 +293,23 @@\n+void CompileTask::print_legend_on(outputStream* st) {\n+  \/\/ Matches to format in CompileTask::print_impl above.\n+  st->print_cr(\" (T)  Elapsed time since JVM start, us\");\n+  st->print_cr(\" (Q)  Time spent in queueing, us\");\n+  st->print_cr(\" (C)  Time spent in compilation, us\");\n+  st->print_cr(\" (ID) Compile task ID\");\n+  st->print_cr(\" (AT) Compile task attributes: %% = OSR, s = synchronized, ! = has exception handler, b = blocking, n = native\");\n+  st->print_cr(\" (L)  Compile level\");\n+  st->cr();\n+  st->print_cr(\"%10s %7s %7s %5s %5s %3s    %s\", \"T\", \"Q\", \"C\", \"ID\", \"AT\", \"L\", \"METHOD\");\n+}\n+\n+void CompileTask::maybe_print_legend() {\n+  if (PrintCompilation) {\n+    print_legend_on(tty);\n+  }\n+  LogTarget(Info, jit, compilation) lt;\n+  if (lt.is_enabled()) {\n+    LogStream ls(lt);\n+    print_legend_on(&ls);\n+  }\n+}\n+\n@@ -292,1 +320,3 @@\n-  print_impl(st, is_unloaded() ? nullptr : method(), compile_id(), comp_level(), is_osr_method, osr_bci(), is_blocking(), msg, short_form, cr, _time_queued, _time_started);\n+  print_impl(st, is_unloaded() ? nullptr : method(), compile_id(), comp_level(),\n+             is_osr_method, osr_bci(), is_blocking(), msg, short_form, cr,\n+             _time_created, _time_started, _time_finished);\n@@ -477,1 +507,4 @@\n-    print(&ls, msg, \/* short form *\/ true, \/* cr *\/ true);\n+    print_impl(&ls, is_unloaded() ? nullptr : method(), compile_id(), comp_level(),\n+               osr_bci() != InvocationEntryBci, osr_bci(),\n+               is_blocking(), msg, \/* short form *\/ false, \/* cr *\/ true,\n+               _time_created, _time_started, _time_finished);\n@@ -485,5 +518,3 @@\n-    print_impl(&ls, nm->method(), nm->compile_id(),\n-               nm->comp_level(), nm->is_osr_method(),\n-               nm->is_osr_method() ? nm->osr_entry_bci() : -1,\n-               \/*is_blocking*\/ false,\n-               msg, \/* short form *\/ true, \/* cr *\/ true);\n+    print_impl(&ls, nm->method(), nm->compile_id(), nm->comp_level(),\n+               nm->is_osr_method(), nm->is_osr_method() ? nm->osr_entry_bci() : -1,\n+               \/*is_blocking*\/ false, msg, \/* short form *\/ false, \/* cr *\/ true);\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":52,"deletions":21,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -107,2 +107,3 @@\n-  jlong                _time_queued;  \/\/ time when task was enqueued\n-  jlong                _time_started; \/\/ time when compilation started\n+  jlong                _time_created;  \/\/ time when task was created\n+  jlong                _time_started;  \/\/ time when compilation started\n+  jlong                _time_finished; \/\/ time when compilation finished\n@@ -198,0 +199,1 @@\n+  void         mark_finished(jlong time)         { _time_finished = time; }\n@@ -229,1 +231,1 @@\n-                                      jlong time_queued = 0, jlong time_started = 0);\n+                                      jlong time_created = 0, jlong time_started = 0, jlong time_finished = 0);\n@@ -240,0 +242,2 @@\n+  static void  maybe_print_legend();\n+  static void  print_legend_on(outputStream* st);\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4526,1 +4526,5 @@\n-  inline_printer()->print_on(tty);\n+  stringStream ss;\n+  inline_printer()->print_on(&ss);\n+  if (ss.size() > 0) {\n+    _env->record_inline_messages(ss.as_string(\/* c_heap = *\/ true));\n+  }\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,0 +40,4 @@\n+double TimeHelper::counter_to_micros(jlong counter) {\n+  return counter_to_seconds(counter) * 1000000.0;\n+}\n+\n@@ -111,0 +115,6 @@\n+jlong TimeStamp::microseconds() const {\n+  assert(is_updated(), \"must not be clear\");\n+  jlong new_count = os::elapsed_counter();\n+  return (jlong)TimeHelper::counter_to_micros(new_count - _counter);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/timer.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  jlong microseconds() const;\n@@ -78,0 +79,1 @@\n+  static double counter_to_micros(jlong counter);\n","filename":"src\/hotspot\/share\/runtime\/timer.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-                \"c2: { PrintInlining: true } }]\";\n+                \"c2: { PrintCompilation: true, PrintInlining: true } }]\";\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/TypeProfileFinalMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+                \"-XX:+PrintCompilation\",\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/TestDuplicatedLateInliningOutput.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}