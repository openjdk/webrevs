{"files":[{"patch":"@@ -395,1 +395,1 @@\n-  return first ? as_Register(exact_log2(first)) : noreg;\n+  return first != 0 ? as_Register(exact_log2(first)) : noreg;\n@@ -408,1 +408,1 @@\n-  return first ? as_XMMRegister(exact_log2(first)) : xnoreg;\n+  return first != 0 ? as_XMMRegister(exact_log2(first)) : xnoreg;\n","filename":"src\/hotspot\/cpu\/x86\/register_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-  if (allocated_regs.contains(first_register))\n+  if (allocated_regs.contains(first_register)) {\n@@ -265,0 +265,1 @@\n+  }\n@@ -273,10 +274,0 @@\n-template<typename R, typename... Rx>\n-inline constexpr bool different_registers(R reg1, R reg2) {\n-  return reg1 != reg2;\n-}\n-\n-template<typename R, typename... Rx>\n-inline constexpr bool different_registers(R reg1, R reg2, R reg3) {\n-  return reg1 != reg2 && reg2 != reg3 && reg1 != reg3;\n-}\n-\n@@ -286,1 +277,1 @@\n-  if (! different_registers(first_register, more_registers...)) {\n+  if (!different_registers(first_register, more_registers...)) {\n@@ -291,1 +282,1 @@\n-        assert(! regs[i]->is_valid() || regs[i] != regs[j],\n+        assert(!regs[i]->is_valid() || regs[i] != regs[j],\n","filename":"src\/hotspot\/share\/asm\/register.hpp","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-inline unsigned population_count(T x) {\n+constexpr unsigned population_count(T x) {\n","filename":"src\/hotspot\/share\/utilities\/population_count.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}