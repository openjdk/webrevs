{"files":[{"patch":"@@ -114,2 +114,2 @@\n-  max_capacity = align_up(max_capacity, capacity_alignment()) \/ TaskEntryChunkSizeInVoidStar;\n-  size_t initial_chunk_capacity = align_up(initial_capacity, capacity_alignment()) \/ TaskEntryChunkSizeInVoidStar;\n+  size_t max_num_chunks = align_up(max_capacity, capacity_alignment()) \/ TaskEntryChunkSizeInVoidStar;\n+  size_t initial_num_chunks = align_up(initial_capacity, capacity_alignment()) \/ TaskEntryChunkSizeInVoidStar;\n@@ -117,2 +117,2 @@\n-  initial_chunk_capacity = round_up_power_of_2(initial_chunk_capacity);\n-  max_capacity = MAX2(initial_chunk_capacity, max_capacity);\n+  initial_num_chunks = round_up_power_of_2(initial_num_chunks);\n+  max_num_chunks = MAX2(initial_num_chunks, max_num_chunks);\n@@ -120,2 +120,6 @@\n-  FLAG_SET_ERGO(MarkStackSizeMax, (max_capacity * TaskEntryChunkSizeInVoidStar));\n-  FLAG_SET_ERGO(MarkStackSize, (initial_chunk_capacity * TaskEntryChunkSizeInVoidStar));\n+  size_t limit = (INT_MAX - 1);\n+  max_capacity = MIN2((max_num_chunks * TaskEntryChunkSizeInVoidStar), limit);\n+  initial_capacity = MIN2((initial_num_chunks * TaskEntryChunkSizeInVoidStar), limit);\n+\n+  FLAG_SET_ERGO(MarkStackSizeMax, max_capacity);\n+  FLAG_SET_ERGO(MarkStackSize, initial_capacity);\n@@ -126,1 +130,1 @@\n-                initial_chunk_capacity, max_capacity);\n+                initial_num_chunks, max_capacity);\n@@ -128,1 +132,1 @@\n-  return _chunk_allocator.initialize(initial_chunk_capacity, max_capacity);\n+  return _chunk_allocator.initialize(initial_num_chunks, max_num_chunks);\n@@ -143,1 +147,0 @@\n-\n@@ -152,1 +155,2 @@\n-      size_t new_capacity = bucket_size(bucket) * 2;\n+      \/\/ Double capacity if possible\n+      size_t new_capacity = MIN2((bucket_size(bucket) * 2), _max_capacity);\n@@ -180,1 +184,1 @@\n-  _num_buckets  = get_bucket(_max_capacity);\n+  _num_buckets  = get_bucket(_max_capacity) + 1;\n@@ -198,0 +202,4 @@\n+  if (_capacity == _max_capacity) {\n+    log_debug(gc)(\"Can not expand overflow mark stack further, already at maximum capacity of \" SIZE_FORMAT \" chunks.\", _capacity);\n+    return;\n+  }\n@@ -232,1 +240,1 @@\n-  size_t highest_bucket = get_bucket(new_capacity);\n+  size_t highest_bucket = get_bucket(new_capacity - 1);\n@@ -234,0 +242,1 @@\n+\n@@ -240,0 +249,7 @@\n+\n+    \/\/ Trim bucket size so that we do not exceed the _max_capacity\n+    bucket_capacity = (_capacity + bucket_capacity) <= _max_capacity ?\n+                      bucket_capacity :\n+                      _max_capacity - _capacity;\n+\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":28,"deletions":12,"binary":false,"changes":40,"status":"modified"}]}