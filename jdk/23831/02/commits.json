[{"commit":{"message":"Document assumptions about code placement in CodeCache"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SparseCodeCache.java"}],"sha":"7de15419d6fa7cd2d2fc7f76cfae9b54d28d85fe"},{"commit":{"message":"Address bulasevich comment: too many parameters values"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SparseCodeCache.java"}],"sha":"ae4439af60243fdf161fdd5228d872ca89da3b05"},{"commit":{"message":"Separate active methods and method calling them with 128Mb dummy space"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SparseCodeCache.java"}],"sha":"ef7d98981398016fe8d3e58cd2f124248e2cca47"},{"commit":{"message":"Simplify benchmark code"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SparseCodeCache.java"}],"sha":"ddcd03410c5437ec4da41bb0550a4a209a2ca0d9"},{"commit":{"message":"8350852: Implement JMH benchmark for sparse CodeCache"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SparseCodeCache.java"}],"sha":"e7e4e1276d7afa0e4b8d3791f2d8dc969381d05a"}]