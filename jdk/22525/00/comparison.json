{"files":[{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8344882\n+ * @summary Deallocation failure for temporary buffers\n+ * @run junit\/othervm -XX:MaxDirectMemorySize=32768 UnmeteredTempBuffers\n+ *\/\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import static java.nio.file.StandardOpenOption.*;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class UnmeteredTempBuffers {\n+    @ParameterizedTest\n+    @ValueSource(ints = {16384, 32768, 32769, 65536})\n+    void unmeteredBuffer(int cap) throws IOException {\n+        Path file = Files.createTempFile(\"prefix\", \"suffix\");\n+        try (FileChannel ch = FileChannel.open(file, WRITE, DELETE_ON_CLOSE)) {\n+            ByteBuffer buf = ByteBuffer.wrap(new byte[cap]);\n+            try {\n+                ch.write(buf);\n+            } catch (OutOfMemoryError oome) {\n+                throw new RuntimeException(oome);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/Buffer\/UnmeteredTempBuffers.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}