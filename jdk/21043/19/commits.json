[{"commit":{"message":"Adjust line length"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java"}],"sha":"b8e0655828a597555417fc25f12d7a95d814f501"},{"commit":{"message":"Additional error checking"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"}],"sha":"befe06f99011f5643896f588210f45da20022e17"},{"commit":{"message":"Write and read to\/from server in a single pass. Use SocketChannel."},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"}],"sha":"d7237a59dac7d620cbfc4ac8c82a6d2b75a76999"},{"commit":{"message":"Return null if there is no record we attempted to decode"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"}],"sha":"f2f463fdc92216c8ad1d2d053e16330393876602"},{"commit":{"message":"Set timeout values. The SSLSocket test fails on linux-x64 because nunber of hello+ packets there is less than 6"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"}],"sha":"b6f79f3640227786187ef800d02c3f45593df8c2"},{"commit":{"message":"One more copyright update"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/InputRecord.java"}],"sha":"2406db671d8fd8382de49a6c96e486ffe2afcb17"},{"commit":{"message":"Update copyright. Minor naming change."},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"},{"filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java"}],"sha":"3a7568a1a49121520ae6cac40c2ce1dd5357adf0"},{"commit":{"message":"Update comments"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"}],"sha":"7119a51f26d740e330b1e43363c2b9949872d76d"},{"commit":{"message":"Update copyright"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"}],"sha":"be7d30cb4a231fcea758a4e9d8013c6cf6e87c19"},{"commit":{"message":"Correcting method name"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"}],"sha":"8a9191a5754526c36cbf74a736bdc61bd202531b"},{"commit":{"message":"Add SSLSocket-based test. Save last record we attempted to decode when using SSLSocket."},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/InputRecord.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java"},{"filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java"}],"sha":"00d485c60da5139e25be8e851ae282e3a7769013"},{"commit":{"message":"Handle SSLSocketInputRecord case"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/InputRecord.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"}],"sha":"6cca49d64bc405e3a0495e6ccae7a0619ffc7ccf"},{"commit":{"message":"Use 'useTLS13PlusSpec()' instead of comparing the version to TLS13. This improves the odds that we won't need to fix this issue again when TLS1.4 comes out"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"}],"sha":"f72bab25949e52cd9d9cfa0695dea68f4f261a18"},{"commit":{"message":"Move inspectTlsFlight test helper method to proper location"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"},{"filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java"}],"sha":"8ce7d6230c96ca08eeb76793e2e10ab3bba6faeb"},{"commit":{"message":"Merge branch 'master' into JDK-8331682"},"files":[],"sha":"35446498a3d5ff6abc6f84e2cb8b9c736fc47e3b"},{"commit":{"message":"Spell user_canceled instead of user_cancelled as per RFC"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"e2eb0591d8f98cc123b2f52a8da89295c1c69b8f"},{"commit":{"message":"Remove unused helper method"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"97e1da3838ef441859ea1ec643544dcfecc6c97e"},{"commit":{"message":"Fix network message order"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"98e7d1e8d6e36c0836bbdd7560d3ee411e40e0d0"},{"commit":{"message":"- Switch server to use plaintext after getting the unexpected plaintext alert message during TLSv1.3 handshake\n- Always send user_cancelled alert before close_notify alert during handshake. This is actually a different issue which was discovered during this fix.\n- Update tests accordingly"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"e8dcda09d37d8ad7de33722966abdaa6bf9ae61c"},{"commit":{"message":"Add assertions. Add the final server wrap"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"accbb49db872586b9f5dce450cc79897badbd954"},{"commit":{"message":"- Rather than proactively scanning every packet for this unlikely scenario, we reactively check for unencrypted alert after getting the BadPaddingException\n- Add \"!context.isNegotiated\" check as \"handshakeContext\" can be non-null if server receives a Post-Handshake message\n- Update test to send \"close_notify\" alert after \"user_cancelled\" alert"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"def7e57e00ccda7f21d46739b74e802ae7d66ccb"},{"commit":{"message":"8331682: Slow networks\/Impatient clients can potentially send unencrypted TLSv1.3 alerts that won't parse on the server"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"03b4089d158e55dc9aae0fb8f2b62926442ae3ac"}]