{"files":[{"patch":"@@ -33,0 +33,1 @@\n+ * @library \/test\/lib\n@@ -36,0 +37,3 @@\n+import static jdk.test.lib.Asserts.assertEquals;\n+import static jdk.test.lib.Asserts.assertTrue;\n+\n@@ -41,0 +45,1 @@\n+import javax.net.ssl.SSLEngineResult.Status;\n@@ -190,1 +195,0 @@\n-        \/\/ client wrap\n@@ -209,1 +213,1 @@\n-        cTOs.compact();\n+        cTOs.clear();\n@@ -215,0 +219,1 @@\n+        assertEquals(clientResult.getStatus(), Status.CLOSED);\n@@ -219,1 +224,1 @@\n-        \/\/ Server unwrap should process an unencrypted 2 byte packet,\n+        \/\/ Server unwrap should process an unencrypted 2 byte close_notify alert.\n@@ -223,0 +228,2 @@\n+        assertTrue(serverEngine.isInboundDone());\n+        assertEquals(serverResult.getStatus(), Status.CLOSED);\n@@ -224,1 +231,0 @@\n-    }\n@@ -226,2 +232,16 @@\n-    static boolean isOpen(SSLEngine engine) {\n-        return (!engine.isOutboundDone() || !engine.isInboundDone());\n+        log(\"---Last Server Wrap ---\");\n+        serverResult = serverEngine.wrap(serverOut, sTOc);\n+        logEngineStatus(serverEngine, serverResult);\n+        assertTrue(serverEngine.isOutboundDone());\n+        runDelegatedTasks(serverEngine);\n+\n+        \/* TODO: Final client unwrap fails because server doesn't send an alert to terminate\n+           the handshake after receiving close_notify alert from the client. Investigate why.\n+\n+        sTOc.flip();\n+\n+        log(\"---Last Client Unwrap---\");\n+        clientResult = clientEngine.unwrap(sTOc, clientIn);\n+        logEngineStatus(clientEngine, clientResult);\n+        runDelegatedTasks(clientEngine);\n+        *\/\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"}]}