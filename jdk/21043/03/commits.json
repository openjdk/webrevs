[{"commit":{"message":"- Switch server to use plaintext after getting the unexpected plaintext alert message during TLSv1.3 handshake\n- Always send user_cancelled alert before close_notify alert during handshake. This is actually a different issue which was discovered during this fix.\n- Update tests accordingly"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TransportContext.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"},{"filename":"test\/lib\/jdk\/test\/lib\/Utils.java"}],"sha":"e8dcda09d37d8ad7de33722966abdaa6bf9ae61c"},{"commit":{"message":"Add assertions. Add the final server wrap"},"files":[{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"accbb49db872586b9f5dce450cc79897badbd954"},{"commit":{"message":"- Rather than proactively scanning every packet for this unlikely scenario, we reactively check for unencrypted alert after getting the BadPaddingException\n- Add \"!context.isNegotiated\" check as \"handshakeContext\" can be non-null if server receives a Post-Handshake message\n- Update test to send \"close_notify\" alert after \"user_cancelled\" alert"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"def7e57e00ccda7f21d46739b74e802ae7d66ccb"},{"commit":{"message":"8331682: Slow networks\/Impatient clients can potentially send unencrypted TLSv1.3 alerts that won't parse on the server"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTransport.java"},{"filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java"}],"sha":"03b4089d158e55dc9aae0fb8f2b62926442ae3ac"}]