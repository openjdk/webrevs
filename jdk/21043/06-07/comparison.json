{"files":[{"patch":"@@ -39,1 +39,1 @@\n-import static jdk.test.lib.Utils.inspectTlsFlight;\n+import static jdk.test.lib.security.SecurityUtils.inspectTlsFlight;\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLEngineNoServerHelloClientShutdown.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,5 +26,0 @@\n-import static jdk.test.lib.Asserts.assertTrue;\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-\n@@ -46,1 +41,0 @@\n-import java.nio.channels.SocketChannel;\n@@ -56,0 +50,1 @@\n+import java.nio.channels.SocketChannel;\n@@ -63,1 +58,0 @@\n-import java.util.HashMap;\n@@ -66,0 +60,2 @@\n+import java.util.Map;\n+import java.util.HashMap;\n@@ -68,1 +64,0 @@\n-import java.util.Map;\n@@ -71,1 +66,0 @@\n-import java.util.concurrent.TimeUnit;\n@@ -73,0 +67,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -79,0 +74,4 @@\n+import static jdk.test.lib.Asserts.assertTrue;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n@@ -1054,23 +1053,0 @@\n-\n-    public static void inspectTlsFlight(ByteBuffer flight) throws IOException {\n-        ByteBuffer packet = flight.slice();\n-\n-        System.err.println(\"---TLS Flight Inspection---\");\n-\n-        if (packet.position() < packet.limit()) {\n-            byte contentType = packet.get();                   \/\/ pos: 0\n-            byte majorVersion = packet.get();                  \/\/ pos: 1\n-            byte minorVersion = packet.get();                  \/\/ pos: 2\n-            int contentLen = getInt16(packet);                 \/\/ pos: 3, 4\n-\n-            System.err.println(\"\\tcontentType: \" + (int) contentType);\n-            System.err.println(\"\\tmajorVersion: \" + (int) majorVersion);\n-            System.err.println(\"\\tminorVersion: \" + (int) minorVersion);\n-            System.err.println(\"\\tcontentLen: \" + contentLen);\n-        }\n-    }\n-\n-    public static int getInt16(ByteBuffer m) throws IOException {\n-        return ((m.get() & 0xFF) << 8) |\n-                (m.get() & 0xFF);\n-    }\n","filename":"test\/lib\/jdk\/test\/lib\/Utils.java","additions":8,"deletions":32,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n@@ -128,0 +130,22 @@\n+    public static void inspectTlsFlight(ByteBuffer flight) throws IOException {\n+        ByteBuffer packet = flight.slice();\n+\n+        System.err.println(\"---TLS Flight Inspection---\");\n+\n+        if (packet.position() < packet.limit()) {\n+            byte contentType = packet.get();                   \/\/ pos: 0\n+            byte majorVersion = packet.get();                  \/\/ pos: 1\n+            byte minorVersion = packet.get();                  \/\/ pos: 2\n+            int contentLen = getInt16(packet);                 \/\/ pos: 3, 4\n+\n+            System.err.println(\"\\tcontentType: \" + (int) contentType);\n+            System.err.println(\"\\tmajorVersion: \" + (int) majorVersion);\n+            System.err.println(\"\\tminorVersion: \" + (int) minorVersion);\n+            System.err.println(\"\\tcontentLen: \" + contentLen);\n+        }\n+    }\n+\n+    public static int getInt16(ByteBuffer m) throws IOException {\n+        return ((m.get() & 0xFF) << 8) | (m.get() & 0xFF);\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}