{"files":[{"patch":"@@ -57,1 +57,1 @@\n- * with SSLSockets we use a SSLSocket on the server side and a plain TCP socket backed by\n+ * with SSLSockets we use an SSLSocket on the server side and a plain TCP socket backed by\n@@ -120,1 +120,1 @@\n-                    \/\/ Client-side plain socket.\n+                    \/\/ Client-side plain TCP socket.\n@@ -125,2 +125,1 @@\n-                    \/\/ client wrap\n-                    \/\/ produce client_hello\n+                    \/\/ Produce client_hello\n@@ -132,1 +131,1 @@\n-                    \/\/ Read and store all available messages from the server\n+                    \/\/ Send client_hello, read and store all available messages from the server.\n@@ -145,1 +144,1 @@\n-                    \/\/ Sends an unencrypted user_canceled\n+                    \/\/ Produce an unencrypted user_canceled\n@@ -151,1 +150,1 @@\n-                    \/\/ Sends an unencrypted close_notify\n+                    \/\/ Produce an unencrypted close_notify\n@@ -159,0 +158,2 @@\n+                    \/\/ Send user_canceled and close_notify alerts to server. Server should process\n+                    \/\/ 2 unencrypted alerts and send its own close_notify alert back to the client.\n@@ -169,1 +170,0 @@\n-                        assertTrue(clientEngine.isOutboundDone());\n@@ -173,0 +173,1 @@\n+                    \/\/ Consume close_notify alert from server.\n@@ -193,1 +194,1 @@\n-    private ByteBuffer clientWriteRead() throws IOException {\n+    protected ByteBuffer clientWriteRead() throws IOException {\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSv13\/SSLSocketNoServerHelloClientShutdown.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}