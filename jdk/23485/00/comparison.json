{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,7 +149,0 @@\n-                    String pattern = \"((Too small maximum heap)\" +\n-                                     \"|(GC triggered before VM initialization completed)\" +\n-                                     \"|(CDS archive has aot-linked classes but the archived heap objects cannot be loaded)\" +\n-                                     \"|(Initial heap size set to a larger value than the maximum heap size)\" +\n-                                     \"|(java.lang.OutOfMemoryError)\" +\n-                                     \"|(Error: A JNI error has occurred, please check your installation and try again))\";\n-                    out.shouldMatch(pattern);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestParallelGCWithCDS.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,6 +166,1 @@\n-                    String output = out.getStdout() + out.getStderr();\n-                    String exp1 = \"Too small maximum heap\";\n-                    String exp2 = \"GC triggered before VM initialization completed\";\n-                    if (!output.contains(exp1) && !output.contains(exp2)) {\n-                        throw new RuntimeException(\"Either '\" + exp1 + \"' or '\" + exp2 + \"' must be in stdout\/stderr \\n\");\n-                    }\n+                    out.shouldNotHaveFatalError();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestSerialGCWithCDS.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"}]}