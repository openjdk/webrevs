{"files":[{"patch":"@@ -350,1 +350,0 @@\n-  ProjNode* uncommon_trap_proj(CallStaticJavaNode*& call) const;\n@@ -445,0 +444,1 @@\n+  ProjNode* uncommon_trap_proj(CallStaticJavaNode*& call, Deoptimization::DeoptReason reason = Deoptimization::Reason_none) const;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -843,1 +843,1 @@\n-ProjNode* IfNode::uncommon_trap_proj(CallStaticJavaNode*& call) const {\n+ProjNode* IfNode::uncommon_trap_proj(CallStaticJavaNode*& call, Deoptimization::DeoptReason reason) const {\n@@ -845,1 +845,1 @@\n-    call = proj_out(i)->is_uncommon_trap_proj();\n+    call = proj_out(i)->is_uncommon_trap_proj(reason);\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -617,2 +617,2 @@\n-  \/\/ Load counter used by StressUnstableIfTraps\n-  void load_trap_stress_counter(Node*& counter, Node*& incr_store);\n+  \/\/ Increment counter used by StressUnstableIfTraps\n+  void increment_trap_stress_counter(Node*& counter, Node*& incr_store);\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1377,1 +1377,1 @@\n-void Parse::load_trap_stress_counter(Node*& counter, Node*& incr_store) {\n+void Parse::increment_trap_stress_counter(Node*& counter, Node*& incr_store) {\n@@ -1392,1 +1392,1 @@\n-    load_trap_stress_counter(counter, incr_store);\n+    increment_trap_stress_counter(counter, incr_store);\n@@ -1496,1 +1496,1 @@\n-    load_trap_stress_counter(counter, incr_store);\n+    increment_trap_stress_counter(counter, incr_store);\n@@ -1591,10 +1591,3 @@\n-  for (int i = 0; i <= 1; ++i) {\n-    trap = (CallStaticJavaNode*)orig_iff->raw_out(i)->find_out_with(Op_CallStaticJava);\n-    if (trap != nullptr && trap->is_uncommon_trap() && trap->jvms()->should_reexecute() &&\n-        Deoptimization::trap_request_reason(trap->uncommon_trap_request()) == Deoptimization::Reason_unstable_if) {\n-      break; \/\/ Trap found\n-    }\n-    trap = nullptr;\n-  }\n-  if (trap == nullptr) {\n-    \/\/ No trap found. Remove unused counter load and increment.\n+  ProjNode* trap_proj = orig_iff->uncommon_trap_proj(trap, Deoptimization::Reason_unstable_if);\n+  if (trap == nullptr || !trap->jvms()->should_reexecute()) {\n+    \/\/ No suitable trap found. Remove unused counter load and increment.\n@@ -1621,1 +1614,0 @@\n-  ProjNode* trap_proj = trap->in(0)->as_Proj();\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"}]}