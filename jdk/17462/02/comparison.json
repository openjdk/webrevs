{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,14 +344,16 @@\n-                    int newSize = newFileCache.size();\n-                    int oldSize = fileCache.size();\n-\n-                    if (newSize > oldSize) {\n-                        \/\/see if interval is added\n-                        int start = oldSize;\n-                        int end = newSize;\n-                        for (int i = 0; i < oldSize; i++) {\n-                            if (!newFileCache.get(i).equals(fileCache.get(i))) {\n-                                start = i;\n-                                for (int j = i; j < newSize; j++) {\n-                                    if (newFileCache.get(j).equals(fileCache.get(i))) {\n-                                        end = j;\n-                                        break;\n+                    synchronized (fileCache) {\n+                        int newSize = newFileCache.size();\n+                        int oldSize = fileCache.size();\n+\n+                        if (newSize > oldSize) {\n+                            \/\/see if interval is added\n+                            int start = oldSize;\n+                            int end = newSize;\n+                            for (int i = 0; i < oldSize; i++) {\n+                                if (!newFileCache.get(i).equals(fileCache.get(i))) {\n+                                    start = i;\n+                                    for (int j = i; j < newSize; j++) {\n+                                        if (newFileCache.get(j).equals(fileCache.get(i))) {\n+                                            end = j;\n+                                            break;\n+                                        }\n@@ -359,0 +361,1 @@\n+                                    break;\n@@ -360,1 +363,0 @@\n-                                break;\n@@ -362,1 +364,0 @@\n-                        }\n@@ -364,3 +365,3 @@\n-                        if (start >= 0 && end > start) {\n-                            List<File> listStart_OldSize = new Vector<>(fileCache.subList(start, oldSize));\n-                            if (newFileCache.subList(end, newSize).equals(listStart_OldSize)) {\n+                            if (start >= 0 && end > start\n+                                    && newFileCache.subList(end, newSize)\n+                                                   .equals(fileCache.subList(start, oldSize))) {\n@@ -370,1 +371,2 @@\n-                                return new DoChangeContents(newFileCache.subList(start, end), start, null, 0, fid);\n+                                return new DoChangeContents(newFileCache.subList(start, end),\n+                                                            start, null, 0, fid);\n@@ -372,10 +374,10 @@\n-                        }\n-                    } else if (newSize < oldSize) {\n-                        \/\/see if interval is removed\n-                        int start = -1;\n-                        int end = -1;\n-                        for (int i = 0; i < newSize; i++) {\n-                            if (!newFileCache.get(i).equals(fileCache.get(i))) {\n-                                start = i;\n-                                end = i + oldSize - newSize;\n-                                break;\n+                        } else if (newSize < oldSize) {\n+                            \/\/see if interval is removed\n+                            int start = -1;\n+                            int end = -1;\n+                            for (int i = 0; i < newSize; i++) {\n+                                if (!newFileCache.get(i).equals(fileCache.get(i))) {\n+                                    start = i;\n+                                    end = i + oldSize - newSize;\n+                                    break;\n+                                }\n@@ -383,1 +385,0 @@\n-                        }\n@@ -385,3 +386,3 @@\n-                        if (start >= 0 && end > start) {\n-                            List<File> listEnd_OldSize = new Vector<>(fileCache.subList(end, oldSize));\n-                            if (listEnd_OldSize.equals(newFileCache.subList(start, newSize))) {\n+                            if (start >= 0 && end > start\n+                                    && fileCache.subList(end, oldSize)\n+                                                .equals(newFileCache.subList(start, newSize))) {\n@@ -391,1 +392,2 @@\n-                                return new DoChangeContents(null, 0, new Vector<>(fileCache.subList(start, end)), start, fid);\n+                                return new DoChangeContents(null, 0,\n+                                        new Vector<>(fileCache.subList(start, end)), start, fid);\n@@ -394,4 +396,5 @@\n-                    }\n-                    if (!fileCache.equals(newFileCache)) {\n-                        if (loadThread.isInterrupted()) {\n-                            cancelRunnables();\n+                        if (!fileCache.equals(newFileCache)) {\n+                            if (loadThread.isInterrupted()) {\n+                                cancelRunnables();\n+                            }\n+                            return new DoChangeContents(newFileCache, 0, fileCache, 0, fid);\n@@ -399,1 +402,1 @@\n-                        return new DoChangeContents(newFileCache, 0, fileCache, 0, fid);\n+                        return null;\n@@ -401,1 +404,0 @@\n-                    return null;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicDirectoryModel.java","additions":44,"deletions":42,"binary":false,"changes":86,"status":"modified"}]}