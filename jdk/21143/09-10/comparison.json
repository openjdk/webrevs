{"files":[{"patch":"@@ -352,1 +352,1 @@\n-    \/\/ type array klasses (and their higher domensions),\n+    \/\/ type array klasses (and their higher dimensions),\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,9 +75,2 @@\n-\/\/ A not-yet loaded aot-linked class k may be discovered by the GC during VM\n-\/\/ initialization only. This can happen when the heap contains an aot-cached\n-\/\/ instance of k, but k is not ready to be loaded yet. (TODO: JDK-8342429\n-\/\/ eliminates this possibility)\n-\/\/\n-\/\/ AOTLinkedClassBulkLoader checks the the exact (narrow set of) conditions\n-\/\/ when this could happen.\n-void ClaimMetadataVisitingOopIterateClosure::assert_is_pending_aot_linked_class(Klass* k) {\n-  assert(AOTLinkedClassBulkLoader::is_pending_aot_linked_class(k), \"sanity\");\n+bool ClaimMetadataVisitingOopIterateClosure::is_pending_aot_linked_class(Klass* k) {\n+  return AOTLinkedClassBulkLoader::is_pending_aot_linked_class(k);\n","filename":"src\/hotspot\/share\/memory\/iterator.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"utilities\/macros.hpp\"\n@@ -177,1 +176,3 @@\n-  static void assert_is_pending_aot_linked_class(Klass* k) NOT_DEBUG_RETURN;\n+#ifdef ASSERT\n+  static bool is_pending_aot_linked_class(Klass* k);\n+#endif\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    assert_is_pending_aot_linked_class(k);\n+    assert(is_pending_aot_linked_class(k), \"sanity\");\n","filename":"src\/hotspot\/share\/memory\/iterator.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}