{"files":[{"patch":"@@ -65,1 +65,1 @@\n-  static bool is_pending_aot_linked_class(Klass* k);\n+  static bool is_pending_aot_linked_class(Klass* k) NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  bool                         _is_required;\n+  bool                         _is_required_hidden_class;\n@@ -141,1 +141,1 @@\n-    _is_required = false;\n+    _is_required_hidden_class = false;\n@@ -220,2 +220,2 @@\n-  bool is_required() const                          { return _is_required; }\n-  void set_is_required()                            { _is_required = true; }\n+  bool is_required_hidden_class() const             { return _is_required_hidden_class; }\n+  void set_is_required_hidden_class()               { _is_required_hidden_class = true; }\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -650,1 +650,1 @@\n-void HeapShared::start_finding_archivable_hidden_classes() {\n+void HeapShared::start_finding_required_hidden_classes() {\n@@ -658,1 +658,3 @@\n-  find_archivable_hidden_classes_helper(archive_subgraph_entry_fields);\n+  \/\/ We first scan the objects that are known to be archived (from the archive_subgraph\n+  \/\/ tables)\n+  find_required_hidden_classes_helper(archive_subgraph_entry_fields);\n@@ -660,1 +662,1 @@\n-    find_archivable_hidden_classes_helper(fmg_archive_subgraph_entry_fields);\n+    find_required_hidden_classes_helper(fmg_archive_subgraph_entry_fields);\n@@ -662,0 +664,3 @@\n+\n+  \/\/ Later, SystemDictionaryShared::find_all_archivable_classes_impl() will start\n+  \/\/ scanning the constant pools of all classes that it decides to archive.\n@@ -664,1 +669,1 @@\n-void HeapShared::end_finding_archivable_hidden_classes() {\n+void HeapShared::end_finding_required_hidden_classes() {\n@@ -673,1 +678,1 @@\n-void HeapShared::find_archivable_hidden_classes_helper(ArchivableStaticFieldInfo fields[]) {\n+void HeapShared::find_required_hidden_classes_helper(ArchivableStaticFieldInfo fields[]) {\n@@ -690,1 +695,1 @@\n-        find_archivable_hidden_classes_in_object(o);\n+        find_required_hidden_classes_in_object(o);\n@@ -696,1 +701,1 @@\n-class HeapShared::FindHiddenClassesOopClosure: public BasicOopIterateClosure {\n+class HeapShared::FindRequiredHiddenClassesOopClosure: public BasicOopIterateClosure {\n@@ -708,2 +713,2 @@\n-  void do_oop(narrowOop *p) { FindHiddenClassesOopClosure::do_oop_work(p); }\n-  void do_oop(      oop *p) { FindHiddenClassesOopClosure::do_oop_work(p); }\n+  void do_oop(narrowOop *p) { FindRequiredHiddenClassesOopClosure::do_oop_work(p); }\n+  void do_oop(      oop *p) { FindRequiredHiddenClassesOopClosure::do_oop_work(p); }\n@@ -711,1 +716,1 @@\n-  FindHiddenClassesOopClosure(oop o) {\n+  FindRequiredHiddenClassesOopClosure(oop o) {\n@@ -723,1 +728,1 @@\n-void HeapShared::find_archivable_hidden_classes_in_object(oop root) {\n+void HeapShared::find_required_hidden_classes_in_object(oop root) {\n@@ -725,1 +730,1 @@\n-  FindHiddenClassesOopClosure c(root);\n+  FindRequiredHiddenClassesOopClosure c(root);\n@@ -731,0 +736,3 @@\n+      \/\/ These are all the cases we care about for now:\n+      \/\/ - an object points to a mirror of an hidden class\n+      \/\/ - an object points to a method declared in a hidden class\n@@ -734,1 +742,4 @@\n-          SystemDictionaryShared::mark_required_class(InstanceKlass::cast(k));\n+          InstanceKlass* ik = InstanceKlass::cast(k);\n+          if (ik->is_hidden()) {\n+            SystemDictionaryShared::mark_required_hidden_class(ik);\n+          }\n@@ -739,1 +750,4 @@\n-          SystemDictionaryShared::mark_required_class(m->method_holder());\n+          InstanceKlass* ik = m->method_holder();\n+          if (ik->is_hidden()) {\n+            SystemDictionaryShared::mark_required_hidden_class(ik);\n+          }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -169,3 +169,4 @@\n-  static void start_finding_archivable_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n-  static void find_archivable_hidden_classes_in_object(oop o) NOT_CDS_JAVA_HEAP_RETURN;\n-  static void end_finding_archivable_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n+  \/\/ Look for all hidden classes that are referenced by archived objects.\n+  static void start_finding_required_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n+  static void find_required_hidden_classes_in_object(oop o) NOT_CDS_JAVA_HEAP_RETURN;\n+  static void end_finding_required_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n@@ -257,2 +258,2 @@\n-  class FindHiddenClassesOopClosure;\n-  static void find_archivable_hidden_classes_helper(ArchivableStaticFieldInfo fields[]);\n+  class FindRequiredHiddenClassesOopClosure;\n+  static void find_required_hidden_classes_helper(ArchivableStaticFieldInfo fields[]);\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -197,1 +197,2 @@\n-void SystemDictionaryShared::mark_required_class(InstanceKlass* k) {\n+void SystemDictionaryShared::mark_required_hidden_class(InstanceKlass* k) {\n+  assert(k->is_hidden(), \"sanity\");\n@@ -201,1 +202,1 @@\n-    info->set_is_required();\n+    info->set_is_required_hidden_class();\n@@ -650,1 +651,1 @@\n-    k->constants()->find_archivable_hidden_classes();\n+    k->constants()->find_required_hidden_classes();\n@@ -666,1 +667,1 @@\n-    if (info != nullptr && info->is_required()) {\n+    if (info != nullptr && info->is_required_hidden_class()) {\n@@ -675,1 +676,1 @@\n-\/\/ SystemDictionaryShared::check_excluded_classes().\n+\/\/ SystemDictionaryShared::find_all_archivable_classes().\n@@ -711,1 +712,1 @@\n-  HeapShared::start_finding_archivable_hidden_classes();\n+  HeapShared::start_finding_required_hidden_classes();\n@@ -713,1 +714,1 @@\n-  HeapShared::end_finding_archivable_hidden_classes();\n+  HeapShared::end_finding_required_hidden_classes();\n@@ -723,1 +724,1 @@\n-\/\/     ConstantPools.\n+\/\/     ConstantPools). This needs help from HeapShared.\n@@ -760,1 +761,1 @@\n-          guarantee(!info.is_required(), \"A required hidden class cannot be marked as excluded\");\n+          guarantee(!info.is_required_hidden_class(), \"A required hidden class cannot be marked as excluded\");\n@@ -1306,1 +1307,1 @@\n-    \/\/ The following check has been moved to SystemDictionaryShared::check_excluded_classes(), which\n+    \/\/ The following check has been moved to SystemDictionaryShared::find_all_archivable_classes(), which\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-  static void mark_required_class(InstanceKlass* k);\n+  static void mark_required_hidden_class(InstanceKlass* k);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -367,1 +367,1 @@\n-void ConstantPool::find_archivable_hidden_classes() {\n+void ConstantPool::find_required_hidden_classes() {\n@@ -388,1 +388,1 @@\n-      HeapShared::find_archivable_hidden_classes_in_object(obj);\n+      HeapShared::find_required_hidden_classes_in_object(obj);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -686,1 +686,1 @@\n-  void find_archivable_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n+  void find_required_hidden_classes() NOT_CDS_JAVA_HEAP_RETURN;\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -830,0 +830,1 @@\n+#if INCLUDE_CDS\n@@ -861,0 +862,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}