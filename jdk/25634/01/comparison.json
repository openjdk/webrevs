{"files":[{"patch":"@@ -152,0 +152,37 @@\n+ *   <th scope=\"row\">accessMode<\/th>\n+ *   <td>{@link java.lang.String}<\/td>\n+ *   <td>null\/unset<\/td>\n+ *   <td>\n+ *       A value defining the desired access mode of the file system.\n+ *       ZIP file systems can be created to allow for <em>read-write<\/em> or\n+ *       <em>read-only<\/em> access.\n+ *       <ul>\n+ *           <li>\n+ *               If no value is set, the file system is created as <em>read-write<\/em>\n+ *               if possible. Use {@link java.nio.file.FileSystem#isReadOnly()\n+ *               isReadOnly()} to determine the actual access mode.\n+ *           <\/li>\n+ *           <li>\n+ *               If the value is {@code \"readOnly\"}, the file system is created\n+ *               <em>read-only<\/em>, and {@link java.nio.file.FileSystem#isReadOnly()\n+ *               isReadOnly()} will always return {@code true}. Creating a\n+ *               <em>read-only<\/em> file system requires the underlying ZIP file to\n+ *               already exist.\n+ *           <\/li>\n+ *           <li>\n+ *               If the value is {@code \"readWrite\"}, the file system is created\n+ *               <em>read-write<\/em>, and {@link java.nio.file.FileSystem#isReadOnly()\n+ *               isReadOnly()} will always return {@code false}. If a writable file\n+ *               system cannot be created, an {@code IOException} will be thrown\n+ *               when creating the ZIP file system.\n+ *           <\/li>\n+ *           <li>\n+ *               Any other values will cause an {@code IllegalArgumentException}\n+ *               to be thrown when creating the ZIP file system.\n+ *           <\/li>\n+ *       <\/ul>\n+ *       The {@code accessMode} property has no effect on reported POSIX file\n+ *       permissions (in cases where POSIX support is enabled).\n+ *   <\/td>\n+ * <\/tr>\n+ * <tr>\n@@ -157,1 +194,4 @@\n- *       new ZIP or JAR file if it does not exist.\n+ *       new ZIP or JAR file if it does not exist. Specifying the {@code create}\n+ *       property as {@code true} with the {@code accessMode} as {@code \"readOnly\"}\n+ *       will cause an {@code IllegalArgumentException} to be thrown when creating\n+ *       the ZIP file system.\n@@ -269,41 +309,0 @@\n- * <tr>\n- *   <th scope=\"row\">accessMode<\/th>\n- *   <td>{@link java.lang.String}<\/td>\n- *   <td>null\/unset<\/td>\n- *   <td>\n- *       A value defining the desired access mode of the file system.\n- *       ZIP file systems can be created to allow for <em>read-write<\/em> or\n- *       <em>read-only<\/em> access.\n- *       <ul>\n- *           <li>\n- *               If no value is set, the file system is created as <em>read-write<\/em>\n- *               if possible. Use {@link java.nio.file.FileSystem#isReadOnly()\n- *               isReadOnly()} to determine the actual access mode.\n- *           <\/li>\n- *           <li>\n- *               If the value is {@code \"readOnly\"}, the file system is created\n- *               <em>read-only<\/em>, and {@link java.nio.file.FileSystem#isReadOnly()\n- *               isReadOnly()} will always return {@code true}. Creating a\n- *               <em>read-only<\/em> file system requires the underlying ZIP file to\n- *               already exist.\n- *               Specifying the {@code create} property as {@code true} with the\n- *               {@code accessMode} as {@code readOnly} will cause an {@code\n- *               IllegalArgumentException} to be thrown when creating the ZIP file\n- *               system.\n- *           <\/li>\n- *           <li>\n- *               If the value is {@code \"readWrite\"}, the file system is created\n- *               <em>read-write<\/em>, and {@link java.nio.file.FileSystem#isReadOnly()\n- *               isReadOnly()} will always return {@code false}. If a writable file\n- *               system cannot be created, an {@code IOException} will be thrown\n- *               when creating the ZIP file system.\n- *           <\/li>\n- *           <li>\n- *               Any other values will cause an {@code IllegalArgumentException}\n- *               to be thrown when creating the ZIP file system.\n- *           <\/li>\n- *       <\/ul>\n- *       The {@code accessMode} property has no effect on reported POSIX file\n- *       permissions (in cases where POSIX support is enabled).\n- *   <\/td>\n- * <\/tr>\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":41,"deletions":42,"binary":false,"changes":83,"status":"modified"}]}