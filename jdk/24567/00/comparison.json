{"files":[{"patch":"@@ -192,1 +192,1 @@\n-            str = str.substring(0,DIGIT_COUNT-1)+\"…\";\n+            str = str.substring(0,DIGIT_COUNT-1)+\"...\";\n@@ -263,1 +263,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/awt\/geom\/Path2D\/GetBounds2DPrecisionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-            add \"Pinyin – Traditional\" or \"Pinyin – Simplified\" IM from Chinese language group.\n+            add \"Pinyin - Traditional\" or \"Pinyin - Simplified\" IM from Chinese language group.\n@@ -82,1 +82,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/im\/PinyinIMCapsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-            add \"Pinyin – Traditional\" or \"Pinyin – Simplified\" IM from Chinese language group.\n+            add \"Pinyin - Traditional\" or \"Pinyin - Simplified\" IM from Chinese language group.\n","filename":"test\/jdk\/java\/awt\/im\/PinyinIMCommaTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            add \"Pinyin – Traditional\" or \"Pinyin – Simplified\" IM from Chinese language group.\n+            add \"Pinyin - Traditional\" or \"Pinyin - Simplified\" IM from Chinese language group.\n","filename":"test\/jdk\/java\/awt\/im\/PinyinIMFullstopTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n- * “List one: Currency, fund and precious metal codes” has the following\n+ * \"List one: Currency, fund and precious metal codes\" has the following\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-            Gatherer.Integrator.<Void,Integer,Integer>ofGreedy((vöid, element, downstream) -> downstream.push(element + 1))\n+            Gatherer.Integrator.<Void,Integer,Integer>ofGreedy((void_state, element, downstream) -> downstream.push(element + 1))\n@@ -113,1 +113,1 @@\n-            Gatherer.Integrator.<Void,Integer,Integer>ofGreedy((vöid, element, downstream) -> downstream.push(element * 2))\n+            Gatherer.Integrator.<Void,Integer,Integer>ofGreedy((void_state, element, downstream) -> downstream.push(element * 2))\n","filename":"test\/jdk\/java\/util\/stream\/GathererTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}