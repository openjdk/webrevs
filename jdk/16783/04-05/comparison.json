{"files":[{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8320515\n@@ -29,1 +30,1 @@\n- * @requires os.family != \"windows\"\n+ * @requires os.family != \"windows\" & os.family != \"aix\"\n@@ -45,1 +46,1 @@\n- * @test id=DumpThreadsAfterDetachBeforeJoin\n+ * @test id=DumpThreadsAfterDetach\n@@ -49,5 +50,0 @@\n-\/*\n- * @test id=DumpThreadsAfterDetachAfterJoin\n- * @run main\/othervm\/native MonitorWithDeadObjectTest 3\n- *\/\n-\n@@ -59,1 +55,0 @@\n-    public static native void createMonitorWithDeadObjectNoJoin();\n@@ -62,2 +57,0 @@\n-    public static native void joinTestThread();\n-\n@@ -75,1 +68,2 @@\n-        \/\/ attached thread.\n+        \/\/ attached thread. This used to provoke an assert\n+        \/\/ in DetachCurrentThread.\n@@ -86,15 +80,2 @@\n-    private static void testDumpThreadsAfterDetachBeforeJoin() {\n-        createMonitorWithDeadObjectNoJoin();\n-\n-        \/\/ After createMonitorWithDeadObjectNoJoin has been called, there's an\n-        \/\/ \"owned\" monitor with a dead object. The thread dumping code used to\n-        \/\/ not tolerate such a monitor and would assert. Run a thread dump\n-        \/\/ and make sure that it doesn't crash\/assert.\n-        dumpThreadsWithLockedMonitors();\n-\n-        joinTestThread();\n-    }\n-\n-    private static void testDumpThreadsAfterDetachAfterJoin() {\n-        createMonitorWithDeadObjectNoJoin();\n-        joinTestThread();\n+    private static void testDumpThreadsAfterDetach() {\n+        createMonitorWithDeadObject();\n@@ -102,4 +83,4 @@\n-        \/\/ After createMonitorWithDeadObjectNoJoin has been called, there's an\n-        \/\/ \"owned\" monitor with a dead object. The thread dumping code used to\n-        \/\/ not tolerate such a monitor and would assert. Run a thread dump\n-        \/\/ and make sure that it doesn't crash\/assert.\n+        \/\/ After createMonitorWithDeadObject has been called, there's an \"owned\"\n+        \/\/ monitor with a dead object. The thread dumping code used to not\n+        \/\/ tolerate such a monitor and would assert. Run a thread dump and make\n+        \/\/ sure that it doesn't crash\/assert.\n@@ -114,2 +95,1 @@\n-            case 2: testDumpThreadsAfterDetachBeforeJoin(); break;\n-            case 3: testDumpThreadsAfterDetachAfterJoin(); break;\n+            case 2: testDumpThreadsAfterDetach(); break;\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorWithDeadObjectTest.java","additions":12,"deletions":32,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -130,1 +130,0 @@\n-  pthread_exit(NULL);\n@@ -149,1 +148,0 @@\n-  pthread_exit(NULL);\n@@ -155,1 +153,0 @@\n-    pthread_attr_t attr;\n@@ -160,2 +157,1 @@\n-    if (pthread_attr_init(&attr) != 0) die(\"pthread_attr_init\");\n-    if (pthread_create(&attacher, &attr, create_monitor_with_dead_object_in_thread, NULL) != 0) die(\"pthread_create\");\n+    if (pthread_create(&attacher, NULL, create_monitor_with_dead_object_in_thread, NULL) != 0) die(\"pthread_create\");\n@@ -165,10 +161,0 @@\n-JNIEXPORT void JNICALL Java_MonitorWithDeadObjectTest_createMonitorWithDeadObjectNoJoin(JNIEnv* env, jclass jc) {\n-    pthread_attr_t attr;\n-    void* ret;\n-\n-    (*env)->GetJavaVM(env, &jvm);\n-\n-    if (pthread_attr_init(&attr) != 0) die(\"pthread_attr_init\");\n-    if (pthread_create(&attacher, &attr, create_monitor_with_dead_object_in_thread, NULL) != 0) die(\"pthread_create\");\n-}\n-\n@@ -176,1 +162,0 @@\n-    pthread_attr_t attr;\n@@ -181,7 +166,1 @@\n-    if (pthread_attr_init(&attr) != 0) die(\"pthread_attr_init\");\n-    if (pthread_create(&attacher, &attr, create_monitor_with_dead_object_and_dump_threads_in_thread, NULL) != 0) die(\"pthread_create\");\n-    if (pthread_join(attacher, &ret) != 0) die(\"pthread_join\");\n-}\n-\n-JNIEXPORT void JNICALL Java_MonitorWithDeadObjectTest_joinTestThread(JNIEnv* env, jclass jc) {\n-    void* ret;\n+    if (pthread_create(&attacher, NULL, create_monitor_with_dead_object_and_dump_threads_in_thread, NULL) != 0) die(\"pthread_create\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/libMonitorWithDeadObjectTest.c","additions":2,"deletions":23,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        Object obj = new Object() { public String toString() {return \"\";} };\n+        Object obj = new Object() {};\n@@ -79,0 +79,2 @@\n+            Thread.currentThread().setName(\"Worker-Thread\");\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorInfo\/GetOwnedMonitorInfoTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include <stdlib.h>\n@@ -271,0 +272,1 @@\n+        exit(-1);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorInfo\/libGetOwnedMonitorInfoTest.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}