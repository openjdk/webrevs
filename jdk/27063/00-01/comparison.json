{"files":[{"patch":"@@ -3078,1 +3078,14 @@\n-    if (!can_reduce_phi(phi->as_Phi())) {\n+    \/\/ This 'Phi' will be a 'good' if it still points to\n+    \/\/ at least one scalar replaceable object. Note that 'obj'\n+    \/\/ was\/should be marked as NSR before calling this function.\n+    bool good_phi = false;\n+\n+    for (uint j = 1; j < phi->req(); j++) {\n+      JavaObjectNode* phi_in_obj = unique_java_object(phi->in(j));\n+      if (phi_in_obj != nullptr && phi_in_obj->scalar_replaceable()) {\n+        good_phi = true;\n+        break;\n+      }\n+    }\n+\n+    if (!good_phi) {\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            } catch (Exception e) {\n+            } catch (ArrayIndexOutOfBoundsException e) {\n@@ -55,1 +55,1 @@\n-            } catch (Exception e) {\n+            } catch (NullPointerException e) {\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestReduceAllocationNotReducibleAnymore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}