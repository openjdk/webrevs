{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -892,2 +892,2 @@\n-    assert((which == call32_operand || which == imm_operand) && is_64bit ||\n-           which == narrow_oop_operand && !is_64bit,\n+    assert(((which == call32_operand || which == imm_operand) && is_64bit) ||\n+           (which == narrow_oop_operand && !is_64bit),\n@@ -7238,1 +7238,1 @@\n-  assert(VM_Version::supports_avx() && (vector_len == 0) ||\n+  assert((VM_Version::supports_avx() && (vector_len == 0)) ||\n@@ -7246,1 +7246,1 @@\n-  assert(VM_Version::supports_avx() && (vector_len == 0) ||\n+  assert((VM_Version::supports_avx() && (vector_len == 0)) ||\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -5226,2 +5226,2 @@\n-  assert(vec_enc == AVX_128bit && VM_Version::supports_avx() ||\n-         vec_enc == AVX_256bit && (VM_Version::supports_avx2() || type2aelembytes(bt) >= 4), \"\");\n+  assert((vec_enc == AVX_128bit && VM_Version::supports_avx()) ||\n+         (vec_enc == AVX_256bit && (VM_Version::supports_avx2() || type2aelembytes(bt) >= 4)), \"\");\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,1 +184,1 @@\n-  assert(!ret || ret && cb() == other.cb() && _deopt_state == other._deopt_state, \"inconsistent construction\");\n+  assert(!ret || (ret && cb() == other.cb() && _deopt_state == other._deopt_state), \"inconsistent construction\");\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,2 +114,2 @@\n-        op == 0x0F && (branch[1] & 0xF0) == 0x80 \/* jcc *\/ ||\n-        op == 0xC7 && branch[1] == 0xF8 \/* xbegin *\/,\n+        (op == 0x0F && (branch[1] & 0xF0) == 0x80) \/* jcc *\/ ||\n+        (op == 0xC7 && branch[1] == 0xF8) \/* xbegin *\/,\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1181,1 +1181,1 @@\n-  if (supports_sha() LP64_ONLY(|| supports_avx2() && supports_bmi2())) {\n+  if (supports_sha() LP64_ONLY(|| (supports_avx2() && supports_bmi2()))) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2535,2 +2535,2 @@\n-         (src_lo & 1) == 0 && (src_lo + 1) == src_hi &&\n-         (dst_lo & 1) == 0 && (dst_lo + 1) == dst_hi,\n+         ((src_lo & 1) == 0 && (src_lo + 1) == src_hi &&\n+          (dst_lo & 1) == 0 && (dst_lo + 1) == dst_hi),\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}