{"files":[{"patch":"@@ -514,2 +514,1 @@\n-  \/\/ Want a pattern to quickly diff against layout header in register\n-  \/\/ find something less clever!\n+  \/\/ Find the right-most bit of the diff of array-of-boolean and array-of-byte layout helpers.\n@@ -517,9 +516,11 @@\n-    jint zlh = array_layout_helper(T_BOOLEAN);\n-    jint blh = array_layout_helper(T_BYTE);\n-    assert(zlh != blh, \"array layout helpers must differ\");\n-    int diffbit = 1;\n-    while ((diffbit & (zlh ^ blh)) == 0 && (diffbit & zlh) == 0) {\n-      diffbit <<= 1;\n-      assert(diffbit != 0, \"make sure T_BOOLEAN has a different bit than T_BYTE\");\n-    }\n-    return diffbit;\n+    uint zlh = checked_cast<uint>(array_layout_helper(T_BOOLEAN));\n+    uint blh = checked_cast<uint>(array_layout_helper(T_BYTE));\n+    \/\/ get all the bits that are set in zlh and clear in blh\n+    uint candidates = (zlh & ~blh);\n+    assert(candidates != 0, \"must be\"); \/\/ must be some if there is a solution.\n+    \/\/ Use well known bit hack to isolate the low bit of candidates.\n+    \/\/ The usual form is (x & -x), but VS warns (C4146) about unary minus of unsigned.\n+    \/\/ So use alternate form of negation to avoid warning.\n+    uint result = candidates & (~candidates + 1);\n+    assert( (right_n_bits(exact_log2(result)) & result) == 0, \"post-condition\");\n+    return static_cast<int>(result);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"}]}