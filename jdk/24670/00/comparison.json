{"files":[{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4331515\n+ * @requires (os.family == \"windows\")\n+ * @summary System menu of an internal frame shouldn't have duplicated items in Win L&F\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4331515\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.UIManager;\n+\n+public class bug4331515 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        Open the system menu of internal frame \"JIF\" placed in the frame \"Test\".\n+        If this menu contains duplicates of some items then test FAILS, else\n+        test PASSES.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4331515 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4331515::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame fr = new JFrame(\"System Menu in JIF Test\");\n+        JDesktopPane dp = new JDesktopPane();\n+        fr.setContentPane(dp);\n+        JInternalFrame jif = new JInternalFrame(\"JIF\", true, true, true, true);\n+        dp.add(jif);\n+        jif.setBounds(20, 20, 120, 100);\n+        jif.setVisible(true);\n+        fr.setSize(200, 200);\n+        return fr;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicInternalFrameTitlePane\/bug4331515.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4165874\n+ * @summary Adds a MouseListener to the splitpane divider.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AddMouseListenerTest\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.event.MouseAdapter;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JSplitPane;\n+\n+public class AddMouseListenerTest {\n+    static final String INSTRUCTIONS = \"\"\"\n+        Try dragging the split pane divider, if you can, click PASS,\n+        else click FAIL.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"AddMouseListenerTest Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(AddMouseListenerTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame f = new JFrame(\"JSplitPane With ActionListener Test\");\n+        JSplitPane sp = new JSplitPane();\n+\n+        sp.setContinuousLayout(true);\n+        Component[] children = sp.getComponents();\n+        for (int counter = children.length - 1; counter >= 0; counter--) {\n+            children[counter].addMouseListener(new MouseAdapter() {});\n+        }\n+        f.getContentPane().add(sp);\n+        f.setSize(400, 400);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicSplitPaneDivider\/AddMouseListenerTest.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4305622\n+ * @summary MetalToolBarUI.installUI invokeLater causes flickering\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4305622\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JToolBar;\n+import javax.swing.UIManager;\n+import javax.swing.border.LineBorder;\n+\n+\n+public class bug4305622 {\n+    private static JFrame fr;\n+    static final String INSTRUCTIONS = \"\"\"\n+        Press button \"Create ToolBar\" at frame \"Create ToolBar Test\".\n+        If you see any flickering during creating of toolbar\n+        then the test FAILS, otherwise the test PASSES.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4305622 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4305622::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        fr = new JFrame(\"Create ToolBar Test\");\n+        JButton button = new JButton(\"Create ToolBar\");\n+        button.addActionListener(ae -> addToolBar());\n+        fr.add(button, BorderLayout.SOUTH);\n+        fr.setSize(400, 400);\n+        return fr;\n+    }\n+\n+    static void addToolBar() {\n+        fr.repaint();\n+        fr.revalidate();\n+        JToolBar toolbar = new JToolBar();\n+\n+        JButton btn = new JButton(\"Button 1\");\n+        btn.setBorder(new LineBorder(Color.red, 30));\n+        toolbar.add(btn);\n+\n+        btn = new JButton(\"Button 2\");\n+        btn.setBorder(new LineBorder(Color.red, 30));\n+        toolbar.add(btn);\n+\n+        toolbar.updateUI();\n+        fr.add(toolbar, BorderLayout.NORTH);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicToolBarUI\/bug4305622.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4331392\n+ * @summary Tests if BasicToolBarUI has bogus logic that prevents vertical\n+ *          toolbars from docking\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4331392\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Container;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JToolBar;\n+\n+public class bug4331392 {\n+   static final String INSTRUCTIONS = \"\"\"\n+        Try to dock the toolbar across all the edges of frame. If you succeed,\n+        then the test PASSES. Otherwise, it FAILS.\n+    \"\"\";\n+\n+   public static void main(String[] args) throws Exception {\n+      PassFailJFrame.builder()\n+              .title(\"bug4331392 Test Instructions\")\n+              .instructions(INSTRUCTIONS)\n+              .columns(40)\n+              .testUI(bug4331392::createUI)\n+              .build()\n+              .awaitAndCheck();\n+   }\n+\n+   static JFrame createUI() {\n+      JFrame frame = new JFrame(\"JToolBar Docking Test\");\n+      Container c = frame.getContentPane();\n+\n+      JToolBar tbar = new JToolBar(JToolBar.VERTICAL);\n+\n+      tbar.add(new JButton(\"A\"));\n+      tbar.add(new JButton(\"B\"));\n+      tbar.add(new JButton(\"C\"));\n+\n+      JButton b = new JButton(\"Hello\");\n+      c.add(b, BorderLayout.CENTER);\n+      c.add(tbar, BorderLayout.EAST);\n+      frame.setSize(300, 300);\n+      return frame;\n+   }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicToolBarUI\/bug4331392.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}