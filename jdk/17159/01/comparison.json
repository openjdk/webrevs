{"files":[{"patch":"@@ -123,2 +123,2 @@\n-    _serial_compaction_point(this),\n-    _humongous_compaction_point(this),\n+    _serial_compaction_point(this, nullptr),\n+    _humongous_compaction_point(this, nullptr),\n@@ -145,2 +145,2 @@\n-    _markers[i] = new G1FullGCMarker(this, i, _preserved_marks_set.get(i), _live_stats);\n-    _compaction_points[i] = new G1FullGCCompactionPoint(this);\n+    _markers[i] = new G1FullGCMarker(this, i, _live_stats);\n+    _compaction_points[i] = new G1FullGCCompactionPoint(this, _preserved_marks_set.get(i));\n@@ -150,0 +150,2 @@\n+  _serial_compaction_point.set_preserved_stack(_preserved_marks_set.get(0));\n+  _humongous_compaction_point.set_preserved_stack(_preserved_marks_set.get(0));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-  G1FullGCMarker* marker = collector()->marker(worker_id);\n-  marker->preserved_stack()->adjust_during_full_gc();\n+  G1FullGCCompactionPoint* cp = collector()->compaction_point(worker_id);\n+  cp->preserved_stack()->adjust_during_full_gc();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-G1FullGCCompactionPoint::G1FullGCCompactionPoint(G1FullCollector* collector) :\n+G1FullGCCompactionPoint::G1FullGCCompactionPoint(G1FullCollector* collector, PreservedMarks* preserved_stack) :\n@@ -36,1 +36,2 @@\n-    _compaction_top(nullptr) {\n+    _compaction_top(nullptr),\n+    _preserved_stack(preserved_stack) {\n@@ -105,0 +106,2 @@\n+    assert(!object->is_forwarded(), \"must not be forwarded\");\n+    preserved_stack()->push_if_necessary(object, object->mark());\n@@ -168,1 +171,1 @@\n-  _collector->marker(0)->preserved_stack()->push_if_necessary(obj, obj->mark());\n+  preserved_stack()->push_if_necessary(obj, obj->mark());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+class PreservedMarks;\n@@ -40,0 +41,1 @@\n+  PreservedMarks* _preserved_stack;\n@@ -50,1 +52,1 @@\n-  G1FullGCCompactionPoint(G1FullCollector* collector);\n+  G1FullGCCompactionPoint(G1FullCollector* collector, PreservedMarks* preserved_stack);\n@@ -66,0 +68,10 @@\n+\n+  PreservedMarks* preserved_stack() const {\n+    assert(_preserved_stack != nullptr, \"must be initialized\");\n+    return _preserved_stack;\n+  }\n+\n+  void set_preserved_stack(PreservedMarks* preserved_stack) {\n+    assert(_preserved_stack == nullptr, \"only initialize once\");\n+    _preserved_stack = preserved_stack;\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.hpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-                               PreservedMarks* preserved_stack,\n@@ -43,1 +42,0 @@\n-    _preserved_stack(preserved_stack),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"gc\/shared\/preservedMarks.hpp\"\n@@ -62,1 +61,0 @@\n-  PreservedMarks*    _preserved_stack;\n@@ -92,1 +90,0 @@\n-                 PreservedMarks* preserved_stack,\n@@ -99,1 +96,0 @@\n-  PreservedMarks*    preserved_stack() { return _preserved_stack; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,7 +54,0 @@\n-  \/\/ Marked by us, preserve if needed.\n-  if (_collector->is_compacting(obj)) {\n-    \/\/ It is not necessary to preserve marks for objects in regions we do not\n-    \/\/ compact because we do not change their headers (i.e. forward them).\n-    preserved_stack()->push_if_necessary(obj, obj->mark());\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-    return (!is_unlocked() || !has_no_hash());\n+    return !is_marked() && (is_locked() || !has_no_hash());\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}