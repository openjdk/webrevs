{"files":[{"patch":"@@ -928,0 +928,5 @@\n+  \/\/ The maximum range of a branch is fixed for the AArch64\n+  \/\/ architecture.  Max branch range is the largest value\n+  \/\/ that will fit in the instruction\n+  static const uint64_t max_branch_range = 128 * M;\n+\n@@ -932,1 +937,1 @@\n-  static const uint64_t branch_range = NOT_DEBUG(128 * M) DEBUG_ONLY(2 * M);\n+  static const uint64_t branch_range = NOT_DEBUG(max_branch_range) DEBUG_ONLY(2 * M);\n@@ -934,2 +939,2 @@\n-  static bool reachable_from_branch_at(address branch, address target) {\n-    return uabs(target - branch) < branch_range;\n+  static bool reachable_from_branch_at(address branch, address target, bool use_max=false) {\n+    return uabs(target - branch) < (use_max ? max_branch_range : branch_range);\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -84,1 +84,3 @@\n-    if (!Assembler::reachable_from_branch_at(addr(), x)) {\n+    if (!Assembler::reachable_from_branch_at(addr(), x, true)) {\n+      address trampoline = call->get_trampoline();\n+      assert(trampoline != nullptr, \"branch is too large with no available trampoline\");\n","filename":"src\/hotspot\/cpu\/aarch64\/relocInfo_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}