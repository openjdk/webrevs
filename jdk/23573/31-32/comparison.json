{"files":[{"patch":"@@ -90,1 +90,1 @@\n-  if (trampoline_stub_addr != nullptr && dest != trampoline_stub_addr) {\n+  if (trampoline_stub_addr != nullptr) {\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -84,7 +84,1 @@\n-    if (be_safe) {\n-      call->set_destination_mt_safe(x);\n-      assert(pd_call_destination(addr()) == x || pd_call_destination(addr()) == call->get_trampoline(), \"fail in reloc\");\n-    } else {\n-      call->set_destination(x);\n-      assert(pd_call_destination(addr()) == x, \"fail in reloc\");\n-    }\n+    call->set_destination(x);\n@@ -93,1 +87,0 @@\n-    assert(pd_call_destination(addr()) == x, \"fail in reloc\");\n@@ -95,0 +88,1 @@\n+  assert(pd_call_destination(addr()) == x, \"fail in reloc\");\n@@ -117,1 +111,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/aarch64\/relocInfo_aarch64.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -108,1 +108,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/arm\/relocInfo_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -102,1 +102,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/ppc\/relocInfo_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -115,1 +115,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/riscv\/relocInfo_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -172,1 +172,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/s390\/relocInfo_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -189,1 +189,1 @@\n-void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void poll_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/cpu\/x86\/relocInfo_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-void Relocation::pd_set_call_destination(address x, bool be_safe) {\n+void Relocation::pd_set_call_destination(address x) {\n@@ -56,2 +56,1 @@\n-                                                CodeBuffer*       dst,\n-                                                bool              is_nmethod_relocation) {\n+                                                CodeBuffer*       dst) {\n","filename":"src\/hotspot\/cpu\/zero\/relocInfo_zero.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -807,1 +807,1 @@\n-        iter.reloc()->fix_relocation_after_move(this, dest, false);\n+        iter.reloc()->fix_relocation_after_move(this, dest);\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1547,1 +1547,11 @@\n-    iter.reloc()->fix_relocation_after_move(&src, &dst, true);\n+#ifdef USE_TRAMPOLINE_STUB_FIX_OWNER\n+  \/\/ Let the trampoline stub relocation fix the owner if it exists\n+    if (iter.reloc()->is_call()) {\n+      address trampoline = trampoline_stub_Relocation::get_trampoline_for(iter.reloc()->addr(), nm_copy);\n+      if (trampoline != nullptr) {\n+        continue;\n+      }\n+    }\n+#endif\n+\n+    iter.reloc()->fix_relocation_after_move(&src, &dst);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-  #define ImmutableDataReferencesCounterSize (int)sizeof(int)\n+  #define ImmutableDataReferencesCounterSize ((int)sizeof(int))\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -396,1 +396,1 @@\n-  pd_set_call_destination(x, false);\n+  pd_set_call_destination(x);\n@@ -399,1 +399,1 @@\n-void CallRelocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void CallRelocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n@@ -405,10 +405,0 @@\n-\n-  if (is_nmethod_relocation) {\n-    if (src->contains(callee)) {\n-      \/\/ If the original call is to an address in the src CodeBuffer (such as a stub call)\n-      \/\/ the updated call should be to the corresponding address in dest CodeBuffer\n-      ptrdiff_t offset = callee - orig_addr;\n-      callee = addr() + offset;\n-    }\n-  }\n-\n@@ -416,1 +406,1 @@\n-  pd_set_call_destination(callee, is_nmethod_relocation);\n+  pd_set_call_destination(callee);\n@@ -419,1 +409,0 @@\n-\n@@ -421,1 +410,1 @@\n-void trampoline_stub_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void trampoline_stub_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n@@ -778,1 +767,1 @@\n-void external_word_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void external_word_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n@@ -801,1 +790,1 @@\n-void internal_word_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) {\n+void internal_word_Relocation::fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) {\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -788,1 +788,1 @@\n-  void       pd_set_call_destination (address x, bool be_safe);\n+  void       pd_set_call_destination (address x);\n@@ -863,1 +863,1 @@\n-  virtual void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) { }\n+  virtual void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) { }\n@@ -953,1 +953,1 @@\n-  void     fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) override;\n+  void     fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) override;\n@@ -1265,1 +1265,1 @@\n-  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) override;\n+  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) override;\n@@ -1337,1 +1337,1 @@\n-  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) override;\n+  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) override;\n@@ -1381,1 +1381,1 @@\n-  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) override;\n+  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) override;\n@@ -1414,1 +1414,1 @@\n-  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest, bool is_nmethod_relocation) override;\n+  void fix_relocation_after_move(const CodeBuffer* src, CodeBuffer* dest) override;\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}