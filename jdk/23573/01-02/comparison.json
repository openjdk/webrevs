{"files":[{"patch":"@@ -1170,1 +1170,2 @@\n-    + align_up(debug_info->data_size()           , oopSize);\n+    + align_up(debug_info->data_size()           , oopSize)\n+    + align_up(oopSize                           , oopSize);\n@@ -1404,1 +1405,1 @@\n-  \/\/ Allocate memory and copy immutable data from C heap\n+  \/\/ Increment number of references to immutable data to share it between nmethods\n@@ -1406,5 +1407,1 @@\n-    nm_copy->_immutable_data = (address)os::malloc(immutable_data_size(), mtCode);\n-    if (nm_copy->_immutable_data == nullptr) {\n-      vm_exit_out_of_memory(immutable_data_size(), OOM_MALLOC_ERROR, \"nmethod: no space for immutable data\");\n-    }\n-    memcpy(nm_copy->immutable_data_begin(), immutable_data_begin(), immutable_data_size());\n+    (*immutable_data_references_begin())++;\n@@ -1412,1 +1409,1 @@\n-    nm_copy->_immutable_data = nm_copy->data_end();\n+    nm_copy->_immutable_data = nm_copy->blob_end();\n@@ -1422,0 +1419,2 @@\n+  } else {\n+    nm_copy->_mutable_data = nullptr;\n@@ -1673,1 +1672,2 @@\n-    DEBUG_ONLY( int immutable_data_end_offset = _speculations_offset  + align_up(speculations_len, oopSize); )\n+    _immutable_data_references_offset         = _speculations_offset  + align_up(speculations_len, oopSize);\n+    DEBUG_ONLY( int immutable_data_end_offset = _immutable_data_references_offset  + align_up(oopSize, oopSize); )\n@@ -1675,1 +1675,2 @@\n-    DEBUG_ONLY( int immutable_data_end_offset = _scopes_data_offset + align_up(debug_info->data_size(), oopSize); )\n+    _immutable_data_references_offset         =  _scopes_data_offset + align_up(debug_info->data_size(), oopSize);\n+    DEBUG_ONLY( int immutable_data_end_offset = _immutable_data_references_offset + align_up(oopSize, oopSize); )\n@@ -1708,0 +1709,1 @@\n+    memset(immutable_data_references_begin(), 1, oopSize);\n@@ -2287,1 +2289,9 @@\n-    os::free(_immutable_data);\n+    long _immutable_data_references = *immutable_data_references_begin();\n+\n+    \/\/ Free memory if this is the last nmethod referencing immutable data\n+    if (_immutable_data_references == 1) {\n+      os::free(_immutable_data);\n+    } else {\n+      (*immutable_data_references_begin())--;\n+    }\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -158,0 +158,1 @@\n+\/\/  - Nmethod reference counter\n@@ -252,0 +253,1 @@\n+  int      _immutable_data_references_offset;\n@@ -578,1 +580,1 @@\n-  address speculations_end      () const { return            immutable_data_end(); }\n+  address speculations_end      () const { return           _immutable_data + _immutable_data_references_offset   ; }\n@@ -580,1 +582,1 @@\n-  address scopes_data_end       () const { return            immutable_data_end(); }\n+  address scopes_data_end       () const { return           _immutable_data + _immutable_data_references_offset   ; }\n@@ -583,0 +585,3 @@\n+  address immutable_data_references_begin      () const { return           _immutable_data + _immutable_data_references_offset   ; }\n+  address immutable_data_references_end        () const { return            immutable_data_end(); }\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}