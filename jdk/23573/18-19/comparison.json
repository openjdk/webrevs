{"files":[{"patch":"@@ -1526,3 +1526,0 @@\n-  \/\/ Check if memory should be freed before allocation\n-  CodeCache::gc_on_allocation();\n-\n@@ -1572,3 +1569,0 @@\n-  ICache::invalidate_range(nm_copy->code_begin(), nm_copy->code_size());\n-\n-  \/\/ Update corresponding Java method to point to this nmethod\n@@ -1576,4 +1570,15 @@\n-  if (nm_copy->method() != nullptr && nm_copy->method()->code() == this && nm_copy->make_in_use()) {\n-    methodHandle mh(Thread::current(), nm_copy->method());\n-    nm_copy->method()->set_code(mh, nm_copy);\n-    make_not_used();\n+\n+  \/\/ Verify the nm we copied from is still valid\n+  if (method() != nullptr && method()->code() == this && !is_marked_for_deoptimization() && is_in_use()) {\n+\n+    \/\/ Attempt to start using the copy\n+    if (nm_copy->make_in_use()) {\n+      ICache::invalidate_range(nm_copy->code_begin(), nm_copy->code_size());\n+\n+      methodHandle mh(Thread::current(), nm_copy->method());\n+      nm_copy->method()->set_code(mh, nm_copy);\n+\n+      make_not_used();\n+\n+      return nm_copy;\n+    }\n@@ -1582,1 +1587,3 @@\n-  return nm_copy;\n+  nm_copy->make_not_used();\n+\n+  return nullptr;\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -501,3 +501,3 @@\n-  \/\/ Returns nullptr if the code heap does not have enough space or the\n-  \/\/ nmethod is unrelocatable, otherwise the relocated nmethod.\n-  \/\/ The original nmethod will be marked not entrant.\n+  \/\/ Returns nullptr if the code heap does not have enough space, the\n+  \/\/ nmethod is unrelocatable, or the nmethod is invalidated during relocation,\n+  \/\/ otherwise the relocated nmethod. The original nmethod will be marked not entrant.\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}