{"files":[{"patch":"@@ -1167,1 +1167,1 @@\n-    + align_up((int)sizeof(ImmutableDataReferences)   , oopSize);\n+    + align_up(ImmutableDataReferencesCounterSize     , oopSize);\n@@ -1572,1 +1572,2 @@\n-  if (method() != nullptr && method()->code() == this && !is_marked_for_deoptimization() && is_in_use()) {\n+  if (!is_marked_for_deoptimization() && is_in_use()) {\n+    assert(method() != nullptr && method()->code() == this, \"should be if is in use\");\n@@ -1765,1 +1766,1 @@\n-    DEBUG_ONLY( int immutable_data_end_offset = _speculations_offset + align_up(speculations_len, oopSize) + align_up((int)sizeof(ImmutableDataReferences), oopSize); )\n+    DEBUG_ONLY( int immutable_data_end_offset = _speculations_offset + align_up(speculations_len, oopSize) + align_up(ImmutableDataReferencesCounterSize, oopSize); )\n@@ -1767,1 +1768,1 @@\n-    DEBUG_ONLY( int immutable_data_end_offset = _scopes_data_offset + align_up(debug_info->data_size(), oopSize) + align_up((int)sizeof(ImmutableDataReferences), oopSize); )\n+    DEBUG_ONLY( int immutable_data_end_offset = _scopes_data_offset + align_up(debug_info->data_size(), oopSize) + align_up(ImmutableDataReferencesCounterSize, oopSize); )\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-  using ImmutableDataReferences = int;\n+  #define ImmutableDataReferencesCounterSize (int)sizeof(int)\n@@ -577,1 +577,1 @@\n-  address speculations_end      () const { return           immutable_data_end() - sizeof(ImmutableDataReferences) ; }\n+  address speculations_end      () const { return           immutable_data_end() - ImmutableDataReferencesCounterSize ; }\n@@ -579,1 +579,1 @@\n-  address scopes_data_end       () const { return           immutable_data_end() - sizeof(ImmutableDataReferences) ; }\n+  address scopes_data_end       () const { return           immutable_data_end() - ImmutableDataReferencesCounterSize ; }\n@@ -582,1 +582,1 @@\n-  address immutable_data_references_begin () const { return immutable_data_end() - sizeof(ImmutableDataReferences) ; }\n+  address immutable_data_references_begin () const { return immutable_data_end() - ImmutableDataReferencesCounterSize ; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-    int offset = callee - orig_addr;\n+    ptrdiff_t offset = callee - orig_addr;\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    if (SafepointSynchronize::is_at_safepoint() || nm->is_unloading()) {\n+    if (SafepointSynchronize::is_at_safepoint() || nm->is_unloading() || nm->is_not_installed()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    if (SafepointSynchronize::is_at_safepoint() || nm->is_unloading()) {\n+    if (SafepointSynchronize::is_at_safepoint() || nm->is_unloading() || nm->is_not_installed()) {\n","filename":"src\/hotspot\/share\/gc\/z\/zUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2912,1 +2912,1 @@\n-  {CC\"relocateNMethodFromAddr0\", CC\"(JI)V\",           (void*)&WB_RelocateNMethodFromAddr },\n+  {CC\"relocateNMethodFromAddr\", CC\"(JI)V\",            (void*)&WB_RelocateNMethodFromAddr },\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,0 +130,3 @@\n+        \/\/ Call to verify everything still works\n+        function();\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/DeoptimizeRelocatedNMethod.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-                        WHITE_BOX.relocateNMethodFromAddr0(blob.address, BlobType.MethodProfiled.id);\n+                        WHITE_BOX.relocateNMethodFromAddr(blob.address, BlobType.MethodProfiled.id);\n@@ -209,1 +209,1 @@\n-                        WHITE_BOX.relocateNMethodFromAddr0(blob.address, BlobType.MethodNonProfiled.id);\n+                        WHITE_BOX.relocateNMethodFromAddr(blob.address, BlobType.MethodNonProfiled.id);\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/StressNMethodRelocation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -498,1 +498,1 @@\n-  public native void    relocateNMethodFromAddr0(long address, int type);\n+  public native void    relocateNMethodFromAddr(long address, int type);\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}