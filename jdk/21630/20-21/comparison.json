{"files":[{"patch":"@@ -416,1 +416,1 @@\n-  \/\/ if it's a cast created by PhaseIdealLoop::create_loop_nest(), don't transform it until the counted loop is created\n+  \/\/ If it's a cast created by PhaseIdealLoop::short_running_loop(), don't transform it until the counted loop is created\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4055,1 +4055,1 @@\n-    \/\/ starting from the loop.\n+    \/\/ walking up from the loop.\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1127,2 +1127,2 @@\n-  PhaseIdealLoop* _phase;\n-  IdealLoopTree* _ilt;\n+  PhaseIdealLoop* const _phase;\n+  IdealLoopTree* const _ilt;\n@@ -1262,2 +1262,0 @@\n-    \/\/ report that the loop predication has been actually performed\n-    \/\/ for this loop\n@@ -1265,1 +1263,1 @@\n-      tty->print_cr(\"Short Loop Check generated:\");\n+      tty->print_cr(\"Short Long Loop Check Predicate generated:\");\n@@ -1273,1 +1271,1 @@\n-    \/\/ happens by the time the counted loop is created, c2 knows enough about the loop's limit that it doesn't try to\n+    \/\/ happens by the time the counted loop is created, C2 knows enough about the loop's limit that it doesn't try to\n@@ -1289,2 +1287,1 @@\n-  Node* int_zero = _igvn.intcon(0);\n-  set_ctrl(int_zero, C->root());\n+  Node* int_zero = intcon(0);\n@@ -1297,2 +1294,1 @@\n-  Node* int_stride = _igvn.intcon(stride_con);\n-  set_ctrl(int_stride, C->root());\n+  Node* int_stride = intcon(stride_con);\n@@ -1301,2 +1297,1 @@\n-  Node* inner_cmp = nullptr;\n-  inner_cmp = new CmpINode(inner_incr, new_limit);\n+  Node* inner_cmp = new CmpINode(inner_incr, new_limit);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -310,1 +310,1 @@\n-  julong trip_count()            { return _trip_count; }\n+  julong trip_count() const      { return _trip_count; }\n@@ -398,1 +398,1 @@\n-  julong trip_count()            { return _trip_count; }\n+  julong trip_count() const      { return _trip_count; }\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}