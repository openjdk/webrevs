{"files":[{"patch":"@@ -496,1 +496,1 @@\n-  jlong parallel = -1; \/\/ auto select.\n+  jlong parallel = HeapDumper::default_num_of_dump_threads();\n@@ -523,1 +523,1 @@\n-  dumper.dump(_filename.value(), output(), (int)level, _overwrite.value(), (int)parallel);\n+  dumper.dump(_filename.value(), output(), (int)level, _overwrite.value(), (uint)parallel);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2599,1 +2599,1 @@\n-int HeapDumper::dump(const char* path, outputStream* out, int compression, bool overwrite, int num_dump_threads) {\n+int HeapDumper::dump(const char* path, outputStream* out, int compression, bool overwrite, uint num_dump_threads) {\n@@ -2608,11 +2608,8 @@\n-  if (num_dump_threads < 0) {\n-    num_dump_threads = default_num_of_dump_threads();\n-    if (_oome) {\n-      \/\/ Each additional parallel writer requires several MB of internal memory\n-      \/\/ (DumpWriter buffer, DumperClassCacheTable, GZipCompressor buffers).\n-      \/\/ For the OOM handling we may already be limited in memory.\n-      \/\/ Lets ensure we have at least 20MB per thread.\n-      julong max_threads = os::free_memory() \/ (20 * M);\n-      if ((uint)num_dump_threads > max_threads) {\n-        num_dump_threads = MAX2<int>(1, (int)max_threads);\n-      }\n+  if (_oome && num_dump_threads > 1) {\n+    \/\/ Each additional parallel writer requires several MB of internal memory\n+    \/\/ (DumpWriter buffer, DumperClassCacheTable, GZipCompressor buffers).\n+    \/\/ For the OOM handling we may already be limited in memory.\n+    \/\/ Lets ensure we have at least 20MB per thread.\n+    julong max_threads = os::free_memory() \/ (20 * M);\n+    if (num_dump_threads > max_threads) {\n+      num_dump_threads = MAX2<uint>(1, (uint)max_threads);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -63,2 +63,2 @@\n-  \/\/ parallel_thread_num >= 0 indicates thread numbers of parallel object dump, -1 means \"auto select\".\n-  int dump(const char* path, outputStream* out = nullptr, int compression = -1, bool overwrite = false, int parallel_thread_num = -1);\n+  \/\/ parallel_thread_num >= 0 indicates thread numbers of parallel object dump.\n+  int dump(const char* path, outputStream* out = nullptr, int compression = -1, bool overwrite = false, uint parallel_thread_num = default_num_of_dump_threads());\n@@ -74,2 +74,2 @@\n-  static int default_num_of_dump_threads() {\n-    return MAX2<int>(1, os::initial_active_processor_count() * 3 \/ 8);\n+  static uint default_num_of_dump_threads() {\n+    return MAX2<uint>(1, (uint)os::initial_active_processor_count() * 3 \/ 8);\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}