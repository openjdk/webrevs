{"files":[{"patch":"@@ -618,6 +618,0 @@\n-            \/\/ p.bufLength is the maximum size of the datagram that can be received\n-            int bufLength;\n-            synchronized (p) {\n-                bufLength = DatagramPackets.getBufLength(p);\n-            }\n-\n@@ -628,9 +622,9 @@\n-                ByteBuffer dst = tryBlockingReceive(connected, bufLength, nanos);\n-                if (dst != null) {\n-                    \/\/ if datagram received then get sender and copy to DatagramPacket\n-                    try {\n-                        SocketAddress sender = sourceSocketAddress();\n-                        synchronized (p) {\n-                            \/\/ copy bytes to the DatagramPacket, and set length and sender.\n-                            \/\/ Need to re-read p.bufLength in case DatagramPacket changed\n-                            int len = Math.min(dst.limit(), DatagramPackets.getBufLength(p));\n+\n+                synchronized (p) {\n+                    \/\/ p.bufLength is the maximum size of the datagram that can be received\n+                    int bufLength = DatagramPackets.getBufLength(p);\n+                    ByteBuffer dst = tryBlockingReceive(connected, bufLength, nanos);\n+                    if (dst != null) {\n+                        \/\/ copy to DatagramPacket, set length and sender\n+                        try {\n+                            int len = dst.limit();\n@@ -639,1 +633,3 @@\n-                            p.setSocketAddress(sender);\n+                            p.setSocketAddress(sourceSocketAddress());\n+                        } finally {\n+                            Util.offerFirstTemporaryDirectBuffer(dst);\n@@ -641,2 +637,1 @@\n-                    } finally {\n-                        Util.offerFirstTemporaryDirectBuffer(dst);\n+                        completed = true;\n@@ -644,1 +639,0 @@\n-                    completed = true;\n@@ -646,0 +640,1 @@\n+\n@@ -649,0 +644,1 @@\n+\n@@ -846,7 +842,4 @@\n-            ByteBuffer src = null;\n-            try {\n-                InetSocketAddress target;\n-                synchronized (p) {\n-                    int len = p.getLength();\n-                    src = Util.getTemporaryDirectBuffer(len);\n-\n+            synchronized (p) {\n+                int len = p.getLength();\n+                ByteBuffer src = Util.getTemporaryDirectBuffer(len);\n+                try {\n@@ -858,0 +851,1 @@\n+                    InetSocketAddress target;\n@@ -863,1 +857,1 @@\n-                        \/\/ set address\/port to be compatible with long standing behavior\n+                        \/\/ set address\/port to be compatible with long-standing behavior\n@@ -870,1 +864,0 @@\n-                }\n@@ -872,5 +865,5 @@\n-                \/\/ send the datagram (does not block)\n-                send(src, target);\n-\n-            } finally {\n-                if (src != null) Util.offerFirstTemporaryDirectBuffer(src);\n+                    \/\/ send the datagram (does not block)\n+                    send(src, target);\n+                } finally {\n+                    Util.offerFirstTemporaryDirectBuffer(src);\n+                }\n@@ -878,0 +871,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/DatagramChannelImpl.java","additions":27,"deletions":33,"binary":false,"changes":60,"status":"modified"}]}