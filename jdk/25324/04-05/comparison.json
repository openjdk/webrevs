{"files":[{"patch":"@@ -952,1 +952,1 @@\n-                        NIO_ACCESS.getBufferAddress(dst) - dstaddr + dst.position()) {\n+                    NIO_ACCESS.getBufferAddress(dst) - dstaddr + dst.position()) {\n@@ -1606,1 +1606,1 @@\n-                                    NIO_ACCESS.getBufferAddress(dst),\n+                                NIO_ACCESS.getBufferAddress(dst),\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Util.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-            }  finally {\n+            } finally {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserDefinedFileAttributeView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -569,6 +569,3 @@\n-            case 0 -> {\n-                ByteBuffer bb = ByteBuffer.allocateDirect(buf.length);\n-                bb.put(buf);\n-                bb.flip();\n-                yield bb;\n-            }\n+            case 0 -> ByteBuffer.allocateDirect(buf.length)\n+                    .put(buf)\n+                    .flip();\n@@ -576,6 +573,3 @@\n-            case 2 -> {\n-                ByteBuffer bb = Arena.ofAuto().allocate(buf.length).asByteBuffer();\n-                bb.put(buf);\n-                bb.flip();\n-                yield bb;\n-            }\n+            case 2 -> Arena.ofAuto().allocate(buf.length).asByteBuffer()\n+                    .put(buf)\n+                    .flip();\n","filename":"test\/jdk\/java\/nio\/channels\/AsynchronousFileChannel\/Basic.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"}]}