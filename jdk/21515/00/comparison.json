{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n@@ -169,0 +170,7 @@\n+  if (checked_cast<uint>(ObjectAlignmentInBytes) > GCCardSizeInBytes) {\n+    err_msg message(\"ObjectAlignmentInBytes %u is larger than GCCardSizeInBytes %u\",\n+                    ObjectAlignmentInBytes, GCCardSizeInBytes);\n+    vm_exit_during_initialization(\"Invalid combination of GCCardSizeInBytes and ObjectAlignmentInBytes\",\n+                                  message);\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/gcArguments.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc;\n+\n+\/* @test TestObjectAlignmentCardSize.java\n+ * @summary Test to check correct handling of ObjectAlignmentInBytes and GCCardSizeInBytes combinations\n+ * @requires vm.gc != \"Z\"\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver gc.TestObjectAlignmentCardSize\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestObjectAlignmentCardSize {\n+  private static void runTest(int objectAlignment, int cardSize, boolean shouldSucceed) throws Exception {\n+    OutputAnalyzer output = ProcessTools.executeTestJava(\n+        \"-XX:ObjectAlignmentInBytes=\" + objectAlignment,\n+        \"-XX:GCCardSizeInBytes=\" + cardSize,\n+        \"-Xmx32m\",\n+        \"-Xms32m\",\n+        \"-version\");\n+\n+    System.out.println(\"Output:\\n\" + output.getOutput());\n+\n+    if (shouldSucceed) {\n+      output.shouldHaveExitValue(0);\n+    } else {\n+      output.shouldContain(\"Error occurred during initialization of VM\");\n+      output.shouldNotHaveExitValue(0);\n+    }\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    runTest(8, 512, true);\n+    runTest(128, 128, true);\n+    runTest(256, 128, false);\n+    runTest(256, 256, true);\n+    runTest(256, 512, true);\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/TestObjectAlignmentCardSize.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}