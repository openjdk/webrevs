{"files":[{"patch":"@@ -861,1 +861,1 @@\n-        hard(getResourceString(key));\n+        hard(\"%s\", getResourceString(key));\n@@ -884,1 +884,1 @@\n-        hard(messageFormat(key, args));\n+        hard(\"%s\", messageFormat(key, args));\n@@ -2334,1 +2334,1 @@\n-        hard(sb.toString());\n+        hard(\"%s\", sb);\n@@ -3264,1 +3264,1 @@\n-                hard(sb.toString());\n+                hard(\"%s\", sb);\n@@ -3777,1 +3777,1 @@\n-                error(\"Unexpected status: \" + previousStatus.toString() + \"=>\" + status.toString());\n+                error(\"Unexpected status: %s=>%s\", previousStatus, status);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8341495\n+ * @summary Test for crash caused by format specifier in startup script\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.jshell\/jdk.internal.jshell.tool\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox\n+ * @build KullaTesting Compiler\n+ * @run testng StartupWithFormatSpecifierTest\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class StartupWithFormatSpecifierTest extends ReplToolTesting {\n+\n+    public void testStartupWithFormatSpecifier() {\n+        Compiler compiler = new Compiler();\n+        String startupScript = \"String.format(\\\"This is a %s.\\\", \\\"test\\\");\";\n+        Path startupFile = compiler.getPath(\"StartupFileOption\/startup.txt\");\n+        compiler.writeToFile(startupFile, startupScript);\n+        test(new String[] { \"--startup\", startupFile.toString() },\n+                (a) -> assertCommandOutputContains(a, \"\/set start\", startupScript)\n+        );\n+    }\n+}\n","filename":"test\/langtools\/jdk\/jshell\/StartupWithFormatSpecifierTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}