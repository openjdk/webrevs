{"files":[{"patch":"@@ -30,2 +30,8 @@\n-\/\/ TODO work on transform vs graph vs nodes !!!\n-\/\/ VTransform\n+\/\/ VTransform:\n+\/\/ - Models the transformation of the scalar loop to vectorized loop:\n+\/\/   It is a \"C2 subgraph\" -> \"C2 subgraph\" mapping.\n+\/\/ - The VTransform contains a graph (VTransformGraph), which consists\n+\/\/   many vtnodes (VTransformNode).\n+\/\/ - Each vtnode models a part of the transformation, and is supposed\n+\/\/   to represent the output C2 nodes after the vectorization as closely\n+\/\/   as possible.\n@@ -33,1 +39,3 @@\n-\/\/ Maps the transformation from the scalar to the vectorized loop.\n+\/\/ This is the life-cycle of a VTransform:\n+\/\/ - Construction:\n+\/\/   - From SuperWord, with the SuperWordVTransformBuilder.\n@@ -35,2 +43,1 @@\n-\/\/ The graph (VTransform) of vtnodes (VTransformNode) represents the output\n-\/\/ C2 graph after vectorization as closely as possible.\n+\/\/ - Future Plans: optimize, if-conversion, etc.\n@@ -38,2 +45,3 @@\n-\/\/ This allows us to schedule the graph, and check for possible cycles that\n-\/\/ vectorization might introduce.\n+\/\/ - Schedule:\n+\/\/   - Compute linearization of the graph, into an order that respects\n+\/\/     all edges in the graph (bailout if cycle detected).\n@@ -41,2 +49,4 @@\n-\/\/ Changes to the C2 IR are only made once the \"apply\" method is called, and\n-\/\/ each vtnode generates its corresponding scalar or vector C2 nodes.\n+\/\/ - Apply:\n+\/\/   - Changes to the C2 IR are only made once the \"apply\" method is called.\n+\/\/   - Each vtnode generates its corresponding scalar and vector C2 nodes,\n+\/\/     possibly replacing old scalar C2 nodes.\n@@ -60,1 +70,1 @@\n-\/\/ Result from a VTransformNode::apply\n+\/\/ Result from VTransformNode::apply\n@@ -93,0 +103,1 @@\n+\/\/ Convenience method for tracing flags.\n@@ -115,1 +126,2 @@\n-\/\/ TODO desc\n+\/\/ VTransformGraph: component of VTransform\n+\/\/ See description at top of this file.\n@@ -173,16 +185,3 @@\n-\/\/ TODO graph vs transform\n-\/\/ VTransform is a graph of VTransformNode, which represent the VTransform. It\n-\/\/ is designed to resemble the C2 nodes after \"apply\" as closely as possible.\n-\/\/ Currently, there are these stages to the VTransform:\n-\/\/\n-\/\/  - Construction:\n-\/\/      external (e.g. with SuperWordVTransformBuilder)\n-\/\/\n-\/\/  - Schedule:\n-\/\/      compute linearization of graph, into a order that respects all edges in the\n-\/\/      graph (bailout if circle detected).\n-\/\/\n-\/\/  - Apply:\n-\/\/      Make all necessary changes to the C2 IR, each VTransformNode generates the\n-\/\/      corresponding scalar or vector C2 nodes.\n-\/\/\n+\/\/ VTransform: models the transformation of the scalar loop to vectorized loop.\n+\/\/ It is a \"C2 subgraph\" to \"C2 subgraph\" mapping.\n+\/\/ See description at top of this file.\n@@ -249,2 +248,4 @@\n-\/\/ VTransformNodes resemble the C2 IR Nodes. They represent the resulting scalar and\n-\/\/ vector nodes as closely as possible.\n+\/\/ The vtnodes (VTransformNode) resemble the C2 IR Nodes, and model a part of the\n+\/\/ VTransform. Many such vtnodes make up the VTransformGraph. The vtnodes represent\n+\/\/ the resulting scalar and vector nodes as closely as possible.\n+\/\/ See description at top of this file.\n","filename":"src\/hotspot\/share\/opto\/vtransform.hpp","additions":30,"deletions":29,"binary":false,"changes":59,"status":"modified"}]}