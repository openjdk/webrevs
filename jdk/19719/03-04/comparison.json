{"files":[{"patch":"@@ -1865,1 +1865,2 @@\n-  VTransformGraph graph(_vloop_analyzer,\n+  \/\/ Make an empty transform.\n+  VTransform vtransform(_vloop_analyzer,\n@@ -1872,0 +1873,2 @@\n+\n+  \/\/ Build the transform from the packset.\n@@ -1874,1 +1877,1 @@\n-    SuperWordVTransformBuilder builder(_packset, graph);\n+    SuperWordVTransformBuilder builder(_packset, vtransform);\n@@ -1877,2 +1880,2 @@\n-  if (!graph.schedule()) { return false; }\n-  graph.apply();\n+  if (!vtransform.schedule()) { return false; }\n+  vtransform.apply();\n@@ -1884,1 +1887,1 @@\n-void VTransformGraph::apply() {\n+void VTransform::apply() {\n@@ -1887,1 +1890,1 @@\n-    tty->print_cr(\"\\nVLoopTransformGraph::apply:\");\n+    tty->print_cr(\"\\nVTransform::apply:\");\n@@ -1912,1 +1915,1 @@\n-void VTransformGraph::apply_memops_reordering_with_schedule() const {\n+void VTransform::apply_memops_reordering_with_schedule() const {\n@@ -2000,1 +2003,1 @@\n-void VTransformGraph::apply_vectorization() const {\n+void VTransform::apply_vectorization() const {\n@@ -2004,1 +2007,1 @@\n-    tty->print_cr(\"\\nVTransformGraph::apply_vectorization:\");\n+    tty->print_cr(\"\\nVTransform::apply_vectorization:\");\n@@ -2620,1 +2623,1 @@\n-void VTransformGraph::determine_mem_ref_and_aw_for_main_loop_alignment() {\n+void VTransform::determine_mem_ref_and_aw_for_main_loop_alignment() {\n@@ -2659,1 +2662,1 @@\n-void VTransformGraph::adjust_pre_loop_limit_to_align_main_loop_vectors() {\n+void VTransform::adjust_pre_loop_limit_to_align_main_loop_vectors() {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-  assert(_graph.is_empty(), \"start with empty graph\");\n+  assert(_vtransform.is_empty(), \"start with empty vtransform\");\n@@ -56,1 +56,1 @@\n-    VTransformScalarNode* vtn = new (_graph.arena()) VTransformScalarNode(_graph, n);\n+    VTransformScalarNode* vtn = new (_vtransform.arena()) VTransformScalarNode(_vtransform, n);\n@@ -141,1 +141,1 @@\n-    vtn = new (_graph.arena()) VTransformLoadVectorNode(_graph, pack_size);\n+    vtn = new (_vtransform.arena()) VTransformLoadVectorNode(_vtransform, pack_size);\n@@ -143,1 +143,1 @@\n-    vtn = new (_graph.arena()) VTransformStoreVectorNode(_graph, pack_size);\n+    vtn = new (_vtransform.arena()) VTransformStoreVectorNode(_vtransform, pack_size);\n@@ -146,1 +146,1 @@\n-    vtn = new (_graph.arena()) VTransformBoolVectorNode(_graph, pack_size, kind);\n+    vtn = new (_vtransform.arena()) VTransformBoolVectorNode(_vtransform, pack_size, kind);\n@@ -148,1 +148,1 @@\n-    vtn = new (_graph.arena()) VTransformReductionVectorNode(_graph, pack_size);\n+    vtn = new (_vtransform.arena()) VTransformReductionVectorNode(_vtransform, pack_size);\n@@ -154,1 +154,1 @@\n-    vtn = new (_graph.arena()) VTransformElementWiseVectorNode(_graph, 3, pack_size);\n+    vtn = new (_vtransform.arena()) VTransformElementWiseVectorNode(_vtransform, 3, pack_size);\n@@ -166,1 +166,1 @@\n-    vtn = new (_graph.arena()) VTransformElementWiseVectorNode(_graph, p0->req(), pack_size);\n+    vtn = new (_vtransform.arena()) VTransformElementWiseVectorNode(_vtransform, p0->req(), pack_size);\n@@ -212,1 +212,1 @@\n-    VTransformNode* populate_index = new (_graph.arena()) VTransformPopulateIndexNode(_graph, pack->size(), element_bt);\n+    VTransformNode* populate_index = new (_vtransform.arena()) VTransformPopulateIndexNode(_vtransform, pack->size(), element_bt);\n@@ -225,1 +225,1 @@\n-      VTransformNode* shift_count = new (_graph.arena()) VTransformShiftCountNode(_graph, pack->size(), element_bt, mask, p0->Opcode());\n+      VTransformNode* shift_count = new (_vtransform.arena()) VTransformShiftCountNode(_vtransform, pack->size(), element_bt, mask, p0->Opcode());\n@@ -234,1 +234,1 @@\n-        VTransformNode* conv = new (_graph.arena()) VTransformConvI2LNode(_graph);\n+        VTransformNode* conv = new (_vtransform.arena()) VTransformConvI2LNode(_vtransform);\n@@ -238,1 +238,1 @@\n-      VTransformNode* replicate = new (_graph.arena()) VTransformReplicateNode(_graph, pack->size(), element_type);\n+      VTransformNode* replicate = new (_vtransform.arena()) VTransformReplicateNode(_vtransform, pack->size(), element_type);\n@@ -259,1 +259,1 @@\n-  vtn = new (_graph.arena()) VTransformInputScalarNode(_graph, n);\n+  vtn = new (_vtransform.arena()) VTransformInputScalarNode(_vtransform, n);\n","filename":"src\/hotspot\/share\/opto\/superwordVTransformBuilder.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-\/\/ Facility class that builds a VTransformGraph from a SuperWord PackSet.\n+\/\/ Facility class that builds a VTransform from a SuperWord PackSet.\n@@ -36,1 +36,1 @@\n-  VTransformGraph& _graph;\n+  VTransform& _vtransform;\n@@ -42,2 +42,2 @@\n-                             VTransformGraph& graph) :\n-      _vloop_analyzer(graph.vloop_analyzer()),\n+                             VTransform& vtransform) :\n+      _vloop_analyzer(vtransform.vloop_analyzer()),\n@@ -46,1 +46,1 @@\n-      _graph(graph)\n+      _vtransform(vtransform)\n@@ -48,1 +48,1 @@\n-    assert(_graph.is_empty(), \"constructor is passed an empty graph\");\n+    assert(_vtransform.is_empty(), \"constructor is passed an empty vtransform\");\n@@ -50,1 +50,1 @@\n-    assert(!_graph.is_empty(), \"graph must contain some vtnodes now\");\n+    assert(!_vtransform.is_empty(), \"vtransform must contain some vtnodes now\");\n@@ -60,1 +60,1 @@\n-  \/\/ Helper methods for building VTransformGraph.\n+  \/\/ Helper methods for building VTransform.\n","filename":"src\/hotspot\/share\/opto\/superwordVTransformBuilder.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-void VTransformGraph::add_vtnode(VTransformNode* vtnode) {\n+void VTransform::add_vtnode(VTransformNode* vtnode) {\n@@ -46,1 +46,1 @@\n-bool VTransformGraph::schedule() {\n+bool VTransform::schedule() {\n@@ -114,1 +114,1 @@\n-void VTransformGraph::schedule_collect_nodes_without_req_or_dependency(GrowableArray<VTransformNode*>& stack) const {\n+void VTransform::schedule_collect_nodes_without_req_or_dependency(GrowableArray<VTransformNode*>& stack) const {\n@@ -124,1 +124,1 @@\n-void VTransformGraph::trace_schedule_cycle(const GrowableArray<VTransformNode*>& stack,\n+void VTransform::trace_schedule_cycle(const GrowableArray<VTransformNode*>& stack,\n@@ -127,1 +127,1 @@\n-  tty->print_cr(\"\\nVTransformGraph::schedule found a cycle on path (P), vectorization attempt fails.\");\n+  tty->print_cr(\"\\nVTransform::schedule found a cycle on path (P), vectorization attempt fails.\");\n@@ -354,2 +354,2 @@\n-void VTransformGraph::print_vtnodes() const {\n-  tty->print_cr(\"\\nVTransformGraph::print_vtnodes:\");\n+void VTransform::print_vtnodes() const {\n+  tty->print_cr(\"\\nVTransform::print_vtnodes:\");\n@@ -361,2 +361,2 @@\n-void VTransformGraph::print_schedule() const {\n-  tty->print_cr(\"\\nVTransformGraph::print_schedule:\");\n+void VTransform::print_schedule() const {\n+  tty->print_cr(\"\\nVTransform::print_schedule:\");\n@@ -374,2 +374,2 @@\n-void VTransformGraph::print_memops_schedule() const {\n-  tty->print_cr(\"\\nVTransformGraph::print_memops_schedule:\");\n+void VTransform::print_memops_schedule() const {\n+  tty->print_cr(\"\\nVTransform::print_memops_schedule:\");\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+\/\/ TODO work on transform vs graph vs nodes !!!\n@@ -34,1 +35,1 @@\n-\/\/ The graph (VTransformGraph) of vtnodes (VTransformNode) represents the output\n+\/\/ The graph (VTransform) of vtnodes (VTransformNode) represents the output\n@@ -91,1 +92,2 @@\n-\/\/ VTransformGraph is a graph of VTransformNode, which represent the VTransform. It\n+\/\/ TODO graph vs transform\n+\/\/ VTransform is a graph of VTransformNode, which represent the VTransform. It\n@@ -106,1 +108,1 @@\n-class VTransformGraph : public StackObj {\n+class VTransform : public StackObj {\n@@ -111,1 +113,1 @@\n-  \/\/ Everything in the graph is allocated from this arena, including all vtnodes.\n+  \/\/ Everything in the vtransform is allocated from this arena, including all vtnodes.\n@@ -134,7 +136,7 @@\n-  VTransformGraph(const VLoopAnalyzer& vloop_analyzer,\n-                  MemNode const* mem_ref_for_main_loop_alignment,\n-                  int aw_for_main_loop_alignment\n-                  NOT_PRODUCT( COMMA const bool is_trace_rejections)\n-                  NOT_PRODUCT( COMMA const bool is_trace_align_vector)\n-                  NOT_PRODUCT( COMMA const bool is_trace_info)\n-                  ) :\n+  VTransform(const VLoopAnalyzer& vloop_analyzer,\n+             MemNode const* mem_ref_for_main_loop_alignment,\n+             int aw_for_main_loop_alignment\n+             NOT_PRODUCT( COMMA const bool is_trace_rejections)\n+             NOT_PRODUCT( COMMA const bool is_trace_align_vector)\n+             NOT_PRODUCT( COMMA const bool is_trace_info)\n+             ) :\n@@ -221,2 +223,2 @@\n-  VTransformNode(VTransformGraph& graph, const uint req) :\n-    _idx(graph.new_idx()),\n+  VTransformNode(VTransform& vtransform, const uint req) :\n+    _idx(vtransform.new_idx()),\n@@ -224,2 +226,2 @@\n-    _in(graph.arena(),  req, req, nullptr),\n-    _out(graph.arena(), 4, 0, nullptr)\n+    _in(vtransform.arena(),  req, req, nullptr),\n+    _out(vtransform.arena(), 4, 0, nullptr)\n@@ -227,1 +229,1 @@\n-    graph.add_vtnode(this);\n+    vtransform.add_vtnode(this);\n@@ -292,2 +294,2 @@\n-  VTransformScalarNode(VTransformGraph& graph, Node* n) :\n-    VTransformNode(graph, n->req()), _node(n) {}\n+  VTransformScalarNode(VTransform& vtransform, Node* n) :\n+    VTransformNode(vtransform, n->req()), _node(n) {}\n@@ -307,2 +309,2 @@\n-  VTransformInputScalarNode(VTransformGraph& graph, Node* n) :\n-    VTransformScalarNode(graph, n) {}\n+  VTransformInputScalarNode(VTransform& vtransform, Node* n) :\n+    VTransformScalarNode(vtransform, n) {}\n@@ -319,2 +321,2 @@\n-  VTransformReplicateNode(VTransformGraph& graph, int vlen, const Type* element_type) :\n-    VTransformNode(graph, 2), _vlen(vlen), _element_type(element_type) {}\n+  VTransformReplicateNode(VTransform& vtransform, int vlen, const Type* element_type) :\n+    VTransformNode(vtransform, 2), _vlen(vlen), _element_type(element_type) {}\n@@ -330,1 +332,1 @@\n-  VTransformConvI2LNode(VTransformGraph& graph) : VTransformNode(graph, 2) {}\n+  VTransformConvI2LNode(VTransform& vtransform) : VTransformNode(vtransform, 2) {}\n@@ -344,2 +346,2 @@\n-  VTransformShiftCountNode(VTransformGraph& graph, int vlen, BasicType element_bt, juint mask, int shift_opcode) :\n-    VTransformNode(graph, 2), _vlen(vlen), _element_bt(element_bt), _mask(mask), _shift_opcode(shift_opcode) {}\n+  VTransformShiftCountNode(VTransform& vtransform, int vlen, BasicType element_bt, juint mask, int shift_opcode) :\n+    VTransformNode(vtransform, 2), _vlen(vlen), _element_bt(element_bt), _mask(mask), _shift_opcode(shift_opcode) {}\n@@ -358,2 +360,2 @@\n-  VTransformPopulateIndexNode(VTransformGraph& graph, int vlen, const BasicType element_bt) :\n-    VTransformNode(graph, 2), _vlen(vlen), _element_bt(element_bt) {}\n+  VTransformPopulateIndexNode(VTransform& vtransform, int vlen, const BasicType element_bt) :\n+    VTransformNode(vtransform, 2), _vlen(vlen), _element_bt(element_bt) {}\n@@ -371,2 +373,2 @@\n-  VTransformVectorNode(VTransformGraph& graph, const uint req, const uint number_of_nodes) :\n-    VTransformNode(graph, req), _nodes(graph.arena(), number_of_nodes, number_of_nodes, nullptr) {}\n+  VTransformVectorNode(VTransform& vtransform, const uint req, const uint number_of_nodes) :\n+    VTransformNode(vtransform, req), _nodes(vtransform.arena(), number_of_nodes, number_of_nodes, nullptr) {}\n@@ -389,2 +391,2 @@\n-  VTransformElementWiseVectorNode(VTransformGraph& graph, uint req, uint number_of_nodes) :\n-    VTransformVectorNode(graph, req, number_of_nodes) {}\n+  VTransformElementWiseVectorNode(VTransform& vtransform, uint req, uint number_of_nodes) :\n+    VTransformVectorNode(vtransform, req, number_of_nodes) {}\n@@ -409,2 +411,2 @@\n-  VTransformBoolVectorNode(VTransformGraph& graph, uint number_of_nodes, VTransformBoolTest test) :\n-    VTransformElementWiseVectorNode(graph, 2, number_of_nodes), _test(test) {}\n+  VTransformBoolVectorNode(VTransform& vtransform, uint number_of_nodes, VTransformBoolTest test) :\n+    VTransformElementWiseVectorNode(vtransform, 2, number_of_nodes), _test(test) {}\n@@ -421,2 +423,2 @@\n-  VTransformReductionVectorNode(VTransformGraph& graph, uint number_of_nodes) :\n-    VTransformVectorNode(graph, 3, number_of_nodes) {}\n+  VTransformReductionVectorNode(VTransform& vtransform, uint number_of_nodes) :\n+    VTransformVectorNode(vtransform, 3, number_of_nodes) {}\n@@ -432,2 +434,2 @@\n-  VTransformLoadVectorNode(VTransformGraph& graph, uint number_of_nodes) :\n-    VTransformVectorNode(graph, 3, number_of_nodes) {}\n+  VTransformLoadVectorNode(VTransform& vtransform, uint number_of_nodes) :\n+    VTransformVectorNode(vtransform, 3, number_of_nodes) {}\n@@ -443,2 +445,2 @@\n-  VTransformStoreVectorNode(VTransformGraph& graph, uint number_of_nodes) :\n-    VTransformVectorNode(graph, 4, number_of_nodes) {}\n+  VTransformStoreVectorNode(VTransform& vtransform, uint number_of_nodes) :\n+    VTransformVectorNode(vtransform, 4, number_of_nodes) {}\n@@ -452,1 +454,1 @@\n-void VTransformGraph::for_each_memop_in_schedule(Callback callback) const {\n+void VTransform::for_each_memop_in_schedule(Callback callback) const {\n","filename":"src\/hotspot\/share\/opto\/vtransform.hpp","additions":42,"deletions":40,"binary":false,"changes":82,"status":"modified"}]}