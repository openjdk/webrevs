{"files":[{"patch":"@@ -30,1 +30,1 @@\n-  assert(_vtransform.is_empty(), \"start with empty vtransform\");\n+  assert(!_vtransform.has_graph(), \"start with empty vtransform\");\n","filename":"src\/hotspot\/share\/opto\/superwordVTransformBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    assert(_vtransform.is_empty(), \"constructor is passed an empty vtransform\");\n+    assert(!_vtransform.has_graph(), \"constructor is passed an empty vtransform\");\n@@ -50,1 +50,1 @@\n-    assert(!_vtransform.is_empty(), \"vtransform must contain some vtnodes now\");\n+    assert(_vtransform.has_graph(), \"vtransform must contain some vtnodes now\");\n","filename":"src\/hotspot\/share\/opto\/superwordVTransformBuilder.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -153,1 +153,2 @@\n-VTransformApplyResult VTransformScalarNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformScalarNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                  const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -158,1 +159,2 @@\n-VTransformApplyResult VTransformReplicateNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformReplicateNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                     const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -165,1 +167,2 @@\n-VTransformApplyResult VTransformConvI2LNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformConvI2LNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                   const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -172,1 +175,2 @@\n-VTransformApplyResult VTransformShiftCountNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformShiftCountNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                      const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -188,1 +192,2 @@\n-VTransformApplyResult VTransformPopulateIndexNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformPopulateIndexNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                         const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -199,1 +204,2 @@\n-VTransformApplyResult VTransformElementWiseVectorNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformElementWiseVectorNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                             const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -252,1 +258,2 @@\n-VTransformApplyResult VTransformBoolVectorNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformBoolVectorNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                      const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -274,1 +281,2 @@\n-VTransformApplyResult VTransformReductionVectorNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformReductionVectorNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                           const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -288,1 +296,2 @@\n-VTransformApplyResult VTransformLoadVectorNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformLoadVectorNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                      const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n@@ -317,1 +326,2 @@\n-VTransformApplyResult VTransformStoreVectorNode::apply(const VLoopAnalyzer& vloop_analyzer, const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n+VTransformApplyResult VTransformStoreVectorNode::apply(const VLoopAnalyzer& vloop_analyzer,\n+                                                       const GrowableArray<Node*>& vnode_idx_to_transformed_node) const {\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -155,2 +155,2 @@\n-  bool is_empty() const { return _vtnodes.is_empty(); }\n-  bool is_scheduled() const { return _schedule.is_nonempty(); }\n+  DEBUG_ONLY( bool is_empty() const { return _vtnodes.is_empty(); } )\n+  DEBUG_ONLY( bool is_scheduled() const { return _schedule.is_nonempty(); } )\n@@ -220,1 +220,1 @@\n-  bool is_empty() const { return _graph.is_empty(); }\n+  DEBUG_ONLY( bool has_graph() const { return !_graph.is_empty(); } )\n@@ -420,1 +420,1 @@\n-  const GrowableArray<Node*> nodes() const { return _nodes; }\n+  const GrowableArray<Node*>& nodes() const { return _nodes; }\n","filename":"src\/hotspot\/share\/opto\/vtransform.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}