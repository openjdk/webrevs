{"files":[{"patch":"@@ -1866,0 +1866,6 @@\n+#ifndef PRODUCT\n+  VTransformTrace trace(_vloop.vtrace(),\n+                        is_trace_superword_rejections(),\n+                        is_trace_align_vector(),\n+                        is_trace_superword_info());\n+#endif\n@@ -1869,3 +1875,1 @@\n-                        NOT_PRODUCT( COMMA is_trace_superword_rejections())\n-                        NOT_PRODUCT( COMMA is_trace_align_vector())\n-                        NOT_PRODUCT( COMMA is_trace_superword_info())\n+                        NOT_PRODUCT( COMMA trace)\n@@ -1889,1 +1893,1 @@\n-  if (_is_trace_info || TraceLoopOpts) {\n+  if (_trace._info || TraceLoopOpts) {\n@@ -1918,1 +1922,1 @@\n-  if (_is_trace_info) {\n+  if (_trace._info) {\n@@ -2003,1 +2007,1 @@\n-void VTransformGraph::apply_vectorization_for_each_vtnode(uint& max_vector_length, uint& max_vector_width NOT_PRODUCT( COMMA const bool is_trace_verbose)) const {\n+void VTransformGraph::apply_vectorization_for_each_vtnode(uint& max_vector_length, uint& max_vector_width) const {\n@@ -2015,1 +2019,1 @@\n-    NOT_PRODUCT( if (is_trace_verbose) { result.trace(vtn); } )\n+    NOT_PRODUCT( if (_trace._verbose) { result.trace(vtn); } )\n@@ -2027,1 +2031,1 @@\n-  if (_is_trace_verbose) {\n+  if (_trace._verbose) {\n@@ -2034,1 +2038,1 @@\n-  _graph.apply_vectorization_for_each_vtnode(max_vector_length, max_vector_width NOT_PRODUCT( COMMA _is_trace_verbose));\n+  _graph.apply_vectorization_for_each_vtnode(max_vector_length, max_vector_width);\n@@ -2656,1 +2660,1 @@\n-    if (_is_trace_align_vector) {       \\\n+    if (_trace._align_vector) {       \\\n@@ -2824,1 +2828,1 @@\n-  if (_is_trace_align_vector) {\n+  if (_trace._align_vector) {\n@@ -2851,1 +2855,1 @@\n-    if (_is_trace_align_vector) {\n+    if (_trace._align_vector) {\n@@ -2867,1 +2871,1 @@\n-  if (_is_trace_align_vector) {\n+  if (_trace._align_vector) {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  if (_is_trace_verbose) {\n+  if (_trace._verbose) {\n@@ -86,1 +86,1 @@\n-          NOT_PRODUCT(if (_is_trace_rejections) { _graph.trace_schedule_cycle(stack, pre_visited, post_visited); } )\n+          NOT_PRODUCT(if (_trace._rejections) { _graph.trace_schedule_cycle(stack, pre_visited, post_visited); } )\n@@ -105,1 +105,1 @@\n-  if (_is_trace_verbose) {\n+  if (_trace._verbose) {\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,0 +92,23 @@\n+#ifndef PRODUCT\n+class VTransformTrace {\n+public:\n+  const bool _verbose;\n+  const bool _rejections;\n+  const bool _align_vector;\n+  const bool _info;\n+\n+  VTransformTrace(const VTrace& vtrace,\n+                  const bool is_trace_rejections,\n+                  const bool is_trace_align_vector,\n+                  const bool is_trace_info) :\n+    _verbose     (vtrace.is_trace(TraceAutoVectorizationTag::ALL)),\n+    _rejections  (_verbose | is_trace_vtransform(vtrace) | is_trace_rejections),\n+    _align_vector(_verbose | is_trace_vtransform(vtrace) | is_trace_align_vector),\n+    _info        (_verbose | is_trace_vtransform(vtrace) | is_trace_info) {}\n+\n+  static bool is_trace_vtransform(const VTrace& vtrace) {\n+    return vtrace.is_trace(TraceAutoVectorizationTag::VTRANSFORM);\n+  }\n+};\n+#endif\n+\n@@ -98,0 +121,2 @@\n+  NOT_PRODUCT(const VTransformTrace _trace;)\n+\n@@ -106,1 +131,4 @@\n-  VTransformGraph(const VLoopAnalyzer& vloop_analyzer, Arena& arena) :\n+  VTransformGraph(const VLoopAnalyzer& vloop_analyzer,\n+                  Arena& arena\n+                  NOT_PRODUCT( COMMA const VTransformTrace trace)\n+\t\t  ) :\n@@ -109,0 +137,1 @@\n+    NOT_PRODUCT(_trace(trace) COMMA)\n@@ -125,1 +154,1 @@\n-  void apply_vectorization_for_each_vtnode(uint& max_vector_length, uint& max_vector_width NOT_PRODUCT( COMMA const bool is_trace_verbose)) const;\n+  void apply_vectorization_for_each_vtnode(uint& max_vector_length, uint& max_vector_width) const;\n@@ -158,0 +187,2 @@\n+  NOT_PRODUCT(const VTransformTrace _trace;)\n+\n@@ -168,7 +199,0 @@\n-#ifndef PRODUCT\n-  bool _is_trace_rejections;\n-  bool _is_trace_align_vector;\n-  bool _is_trace_info;\n-  bool _is_trace_verbose;\n-#endif\n-\n@@ -179,3 +203,1 @@\n-             NOT_PRODUCT( COMMA const bool is_trace_rejections)\n-             NOT_PRODUCT( COMMA const bool is_trace_align_vector)\n-             NOT_PRODUCT( COMMA const bool is_trace_info)\n+             NOT_PRODUCT( COMMA const VTransformTrace trace)\n@@ -185,0 +207,1 @@\n+    NOT_PRODUCT(_trace(trace) COMMA)\n@@ -186,1 +209,1 @@\n-    _graph(_vloop_analyzer, _arena),\n+    _graph(_vloop_analyzer, _arena NOT_PRODUCT(COMMA _trace)),\n@@ -188,13 +211,1 @@\n-    _aw_for_main_loop_alignment(aw_for_main_loop_alignment)\n-    NOT_PRODUCT( COMMA _is_trace_rejections(is_trace_rejections) )\n-    NOT_PRODUCT( COMMA _is_trace_align_vector(is_trace_align_vector) )\n-    NOT_PRODUCT( COMMA _is_trace_info(is_trace_info) )\n-  {\n-#ifndef PRODUCT\n-    bool is_trace     = _vloop.vtrace().is_trace(TraceAutoVectorizationTag::VTRANSFORM);\n-    _is_trace_verbose = _vloop.vtrace().is_trace(TraceAutoVectorizationTag::ALL);\n-    _is_trace_rejections   |= is_trace || _is_trace_verbose;\n-    _is_trace_align_vector |= is_trace || _is_trace_verbose;\n-    _is_trace_info         |= is_trace || _is_trace_verbose;\n-#endif\n-  }\n+    _aw_for_main_loop_alignment(aw_for_main_loop_alignment) {}\n","filename":"src\/hotspot\/share\/opto\/vtransform.hpp","additions":37,"deletions":26,"binary":false,"changes":63,"status":"modified"}]}