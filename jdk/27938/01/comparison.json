{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -29,1 +29,5 @@\n- * @run main\/manual=yesno PrintTextTest\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @library \/test\/lib\n+ * @build PassFailJFrame\n+ * @build jtreg.SkippedException\n+ * @run main\/manual SwingUIText\n@@ -32,3 +36,14 @@\n-import java.awt.*;\n-import javax.swing.*;\n-import java.awt.print.*;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.GridLayout;\n+import java.awt.print.PageFormat;\n+import java.awt.print.Printable;\n+import java.awt.print.PrinterJob;\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+import jtreg.SkippedException;\n@@ -37,0 +52,19 @@\n+    private static JFrame frame;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test checks that when a Swing UI is printed,\n+            the text in each component aligns with the componentâ€™s length as seen on-screen.\n+            It also ensures the text spacing is reasonably even, though this is subjective.\n+            The comparison should be made with JDK 1.5 GA or JDK 1.6 GA.\n+\n+            Steps:\n+            1. Press the \"Print\" or \"OK\" button on the Print dialog.\n+                This will print the content of the \"Swing UI Text Printing Test\" JFrame.\n+            2. Compare the printout with the content of the JFrame.\n+            3. If they match, press Pass; otherwise, press Fail.\n+            \"\"\";\n+\n+    public static void main(String args[])  throws Exception {\n+        PrinterJob job = PrinterJob.getPrinterJob();\n+        if (job.getPrintService() == null) {\n+            throw new SkippedException(\"Printer not configured or available.\");\n+        }\n@@ -38,7 +72,5 @@\n-    static String[] instructions = {\n-        \"This tests that when a Swing UI is printed, that the text\",\n-        \"in each component properly matches the length of the component\",\n-        \"as seen on-screen, and that the spacing of the text is of\",\n-        \"reasonable even-ness. This latter part is very subjective and\",\n-        \"the comparison has to be with JDK1.5 GA, or JDK 1.6 GA\",\n-    };\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(SwingUIText::createTestUI)\n+                .build();\n@@ -46,1 +78,4 @@\n-    static JFrame frame;\n+        job.setPrintable(new SwingUIText());\n+        if (job.printDialog()) {\n+            job.print();\n+        }\n@@ -48,6 +83,1 @@\n-    public static void main(String args[]) {\n-        SwingUtilities.invokeLater(new Runnable() {\n-          public void run() {\n-              createUI();\n-          }\n-      });\n+        passFailJFrame.awaitAndCheck();\n@@ -56,4 +86,2 @@\n-    public static void createUI() {\n-\n-        Sysout.createDialogWithInstructions(instructions);\n-\n+    public static JFrame createTestUI() {\n+        frame = new JFrame();\n@@ -93,11 +121,1 @@\n-\n-        PrinterJob job = PrinterJob.getPrinterJob();\n-        PageFormat pf = job.defaultPage();\n-        job.setPrintable(new SwingUIText(), pf);\n-        if (job.printDialog()) {\n-            try { job.print(); }\n-            catch (Exception e) {\n-              e.printStackTrace();\n-              throw new RuntimeException(e);\n-            }\n-        }\n+        return frame;\n@@ -106,1 +124,0 @@\n-\n@@ -136,3 +153,1 @@\n-    public int print(Graphics g, PageFormat pf, int pageIndex)\n-        throws PrinterException {\n-\n+    public int print(Graphics g, PageFormat pf, int pageIndex) {\n@@ -142,0 +157,1 @@\n+\n@@ -144,1 +160,0 @@\n-\n@@ -149,116 +164,0 @@\n-\n-class Sysout\n- {\n-   private static TestDialog dialog;\n-\n-   public static void createDialogWithInstructions( String[] instructions )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      dialog.printInstructions( instructions );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-   public static void createDialog( )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-      dialog.printInstructions( defInstr );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-   public static void printInstructions( String[] instructions )\n-    {\n-      dialog.printInstructions( instructions );\n-    }\n-\n-\n-   public static void println( String messageIn )\n-    {\n-      dialog.displayMessage( messageIn );\n-    }\n-\n- }\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n- {\n-\n-   TextArea instructionsText;\n-   TextArea messageText;\n-   int maxStringLength = 80;\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public TestDialog( Frame frame, String name )\n-    {\n-      super( frame, name );\n-      int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-      instructionsText = new TextArea( \"\", 10, maxStringLength, scrollBoth );\n-      add( \"North\", instructionsText );\n-\n-      messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-      add(\"South\", messageText);\n-\n-      pack();\n-\n-      show();\n-    }\/\/ TestDialog()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void printInstructions( String[] instructions )\n-    {\n-      \/\/Clear out any current instructions\n-      instructionsText.setText( \"\" );\n-\n-      \/\/Go down array of instruction strings\n-\n-      String printStr, remainingStr;\n-      for( int i=0; i < instructions.length; i++ )\n-       {\n-     \/\/chop up each into pieces maxSringLength long\n-     remainingStr = instructions[ i ];\n-     while( remainingStr.length() > 0 )\n-      {\n-        \/\/if longer than max then chop off first max chars to print\n-        if( remainingStr.length() >= maxStringLength )\n-         {\n-           \/\/Try to chop on a word boundary\n-           int posOfSpace = remainingStr.\n-          lastIndexOf( ' ', maxStringLength - 1 );\n-\n-           if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-           printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-           remainingStr = remainingStr.substring( posOfSpace + 1 );\n-         }\n-        \/\/else just print\n-        else\n-         {\n-           printStr = remainingStr;\n-           remainingStr = \"\";\n-         }\n-\n-            instructionsText.append( printStr + \"\\n\" );\n-\n-      }\/\/ while\n-\n-       }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void displayMessage( String messageIn )\n-    {\n-      messageText.append( messageIn + \"\\n\" );\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/SwingUIText.java","additions":55,"deletions":156,"binary":false,"changes":211,"status":"modified"}]}