{"files":[{"patch":"@@ -130,1 +130,1 @@\n-\/\/   entry_list or WaitSet -- at any one time.\n+\/\/   entry_list or wait_set -- at any one time.\n@@ -255,2 +255,2 @@\n-\/\/ * Waiting threads reside on the WaitSet list -- wait() puts\n-\/\/   the caller onto the WaitSet.\n+\/\/ * Waiting threads reside on the wait_set list -- wait() puts\n+\/\/   the caller onto the wait_set.\n@@ -258,1 +258,1 @@\n-\/\/ * notify() or notifyAll() simply transfers threads from the WaitSet\n+\/\/ * notify() or notifyAll() simply transfers threads from the wait_set\n@@ -299,1 +299,1 @@\n-  _WaitSet(nullptr),\n+  _wait_set(nullptr),\n@@ -301,1 +301,1 @@\n-  _WaitSetLock(0),\n+  _wait_set_lock(0),\n@@ -1768,1 +1768,1 @@\n-  \/\/ _WaitSetLock protects the wait queue.  Normally the wait queue is accessed only\n+  \/\/ _wait_set_lock protects the wait queue.  Normally the wait queue is accessed only\n@@ -1773,1 +1773,1 @@\n-  Thread::SpinAcquire(&_WaitSetLock, \"WaitSet - add\");\n+  Thread::SpinAcquire(&_wait_set_lock, \"wait_set - add\");\n@@ -1775,1 +1775,1 @@\n-  Thread::SpinRelease(&_WaitSetLock);\n+  Thread::SpinRelease(&_wait_set_lock);\n@@ -1783,1 +1783,1 @@\n-  \/\/ The thread is on the WaitSet list - now park() it.\n+  \/\/ The thread is on the wait_set list - now park() it.\n@@ -1816,4 +1816,4 @@\n-    \/\/ Node may be on the WaitSet, or on the entry_list, or in transition\n-    \/\/ from the WaitSet to the entry_list.\n-    \/\/ See if we need to remove Node from the WaitSet.\n-    \/\/ We use double-checked locking to avoid grabbing _WaitSetLock\n+    \/\/ Node may be on the wait_set, or on the entry_list, or in transition\n+    \/\/ from the wait_set to the entry_list.\n+    \/\/ See if we need to remove Node from the wait_set.\n+    \/\/ We use double-checked locking to avoid grabbing _wait_set_lock\n@@ -1832,1 +1832,1 @@\n-      Thread::SpinAcquire(&_WaitSetLock, \"WaitSet - unlink\");\n+      Thread::SpinAcquire(&_wait_set_lock, \"wait_set - unlink\");\n@@ -1834,1 +1834,1 @@\n-        dequeue_specific_waiter(&node);       \/\/ unlink from WaitSet\n+        dequeue_specific_waiter(&node);       \/\/ unlink from wait_set\n@@ -1838,1 +1838,1 @@\n-      Thread::SpinRelease(&_WaitSetLock);\n+      Thread::SpinRelease(&_wait_set_lock);\n@@ -1943,2 +1943,2 @@\n-\/\/ then instead of transferring a thread from the WaitSet to the entry_list\n-\/\/ we might just dequeue a thread from the WaitSet and directly unpark() it.\n+\/\/ then instead of transferring a thread from the wait_set to the entry_list\n+\/\/ we might just dequeue a thread from the wait_set and directly unpark() it.\n@@ -1947,1 +1947,1 @@\n-  Thread::SpinAcquire(&_WaitSetLock, \"WaitSet - notify\");\n+  Thread::SpinAcquire(&_wait_set_lock, \"wait_set - notify\");\n@@ -1973,1 +1973,1 @@\n-    \/\/ _WaitSetLock protects the wait queue, not the entry_list.  We could\n+    \/\/ _wait_set_lock protects the wait queue, not the entry_list.  We could\n@@ -1975,1 +1975,1 @@\n-    \/\/ protected by _WaitSetLock.  In practice that's not useful.  With the\n+    \/\/ protected by _wait_set_lock.  In practice that's not useful.  With the\n@@ -1977,2 +1977,2 @@\n-    \/\/ is the only thread that grabs _WaitSetLock.  There's almost no contention\n-    \/\/ on _WaitSetLock so it's not profitable to reduce the length of the\n+    \/\/ is the only thread that grabs _wait_set_lock.  There's almost no contention\n+    \/\/ on _wait_set_lock so it's not profitable to reduce the length of the\n@@ -1985,1 +1985,1 @@\n-  Thread::SpinRelease(&_WaitSetLock);\n+  Thread::SpinRelease(&_wait_set_lock);\n@@ -2001,1 +2001,1 @@\n-  if (_WaitSet == nullptr) {\n+  if (_wait_set == nullptr) {\n@@ -2018,1 +2018,1 @@\n-  if (_WaitSet == nullptr) {\n+  if (_wait_set == nullptr) {\n@@ -2024,1 +2024,1 @@\n-  while (_WaitSet != nullptr) {\n+  while (_wait_set != nullptr) {\n@@ -2041,1 +2041,1 @@\n-  \/\/ _WaitSetLock protects the wait queue.  Normally the wait queue is accessed only\n+  \/\/ _wait_set_lock protects the wait queue.  Normally the wait queue is accessed only\n@@ -2046,1 +2046,1 @@\n-  Thread::SpinAcquire(&_WaitSetLock, \"WaitSet - add\");\n+  Thread::SpinAcquire(&_wait_set_lock, \"wait_set - add\");\n@@ -2048,1 +2048,1 @@\n-  Thread::SpinRelease(&_WaitSetLock);\n+  Thread::SpinRelease(&_wait_set_lock);\n@@ -2067,1 +2067,1 @@\n-  \/\/ in that case remove ourselves from the _WaitSet queue.\n+  \/\/ in that case remove ourselves from the _wait_set queue.\n@@ -2069,1 +2069,1 @@\n-    Thread::SpinAcquire(&_WaitSetLock, \"WaitSet - unlink\");\n+    Thread::SpinAcquire(&_wait_set_lock, \"wait_set - unlink\");\n@@ -2071,1 +2071,1 @@\n-      dequeue_specific_waiter(node);       \/\/ unlink from WaitSet\n+      dequeue_specific_waiter(node);       \/\/ unlink from wait_set\n@@ -2075,1 +2075,1 @@\n-    Thread::SpinRelease(&_WaitSetLock);\n+    Thread::SpinRelease(&_wait_set_lock);\n@@ -2368,1 +2368,1 @@\n-\/\/ WaitSet management ...\n+\/\/ wait_set management ...\n@@ -2415,2 +2415,2 @@\n-  if (_WaitSet == nullptr) {\n-    _WaitSet = node;\n+  if (_wait_set == nullptr) {\n+    _wait_set = node;\n@@ -2420,1 +2420,1 @@\n-    ObjectWaiter* head = _WaitSet;\n+    ObjectWaiter* head = _wait_set;\n@@ -2432,1 +2432,1 @@\n-  ObjectWaiter* waiter = _WaitSet;\n+  ObjectWaiter* waiter = _wait_set;\n@@ -2449,1 +2449,1 @@\n-    _WaitSet = nullptr;\n+    _wait_set = nullptr;\n@@ -2456,2 +2456,2 @@\n-    if (_WaitSet == node) {\n-      _WaitSet = next;\n+    if (_wait_set == node) {\n+      _wait_set = next;\n@@ -2557,1 +2557,1 @@\n-\/\/   _WaitSet = 0x0000700009756248\n+\/\/   _wait_set = 0x0000700009756248\n@@ -2559,1 +2559,1 @@\n-\/\/   _WaitSetLock = 0\n+\/\/   _wait_set_lock = 0\n@@ -2585,1 +2585,1 @@\n-  st->print_cr(\"  _WaitSet = \" INTPTR_FORMAT, p2i(_WaitSet));\n+  st->print_cr(\"  _wait_set = \" INTPTR_FORMAT, p2i(_wait_set));\n@@ -2587,1 +2587,1 @@\n-  st->print_cr(\"  _WaitSetLock = %d\", _WaitSetLock);\n+  st->print_cr(\"  _wait_set_lock = %d\", _wait_set_lock);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":47,"deletions":47,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-  ObjectWaiter* volatile _WaitSet;  \/\/ LL of threads wait()ing on the monitor\n+  ObjectWaiter* volatile _wait_set; \/\/ LL of threads waiting on the monitor - wait()\n@@ -208,1 +208,1 @@\n-  volatile int _WaitSetLock;        \/\/ protects Wait Queue - simple spinlock\n+  volatile int _wait_set_lock;      \/\/ protects wait set queue - simple spinlock\n@@ -378,1 +378,1 @@\n-  ObjectWaiter* first_waiter()                                         { return _WaitSet; }\n+  ObjectWaiter* first_waiter()                                         { return _wait_set; }\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}