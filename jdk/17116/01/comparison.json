{"files":[{"patch":"@@ -851,1 +851,1 @@\n-        this.sizeCtl = DEFAULT_CAPACITY;\n+        this(m.size());\n@@ -1087,1 +1087,3 @@\n-        tryPresize(m.size());\n+        if (table != null) {\n+            tryPresize(m.size());\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentHashMap.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import org.openjdk.jmh.annotations.Param;\n@@ -51,0 +52,1 @@\n+    private Map<Integer, Integer> staticMap;\n@@ -58,0 +60,3 @@\n+    @Param(\"10000\")\n+    private int nkeys;\n+\n@@ -60,1 +65,0 @@\n-        int nkeys = 10000;\n@@ -68,0 +72,1 @@\n+        staticMap = new ConcurrentHashMap<>();\n@@ -72,0 +77,1 @@\n+            staticMap.put(rng.next(), rng.next());\n@@ -109,0 +115,5 @@\n+    @Benchmark\n+    public ConcurrentHashMap<Integer, Integer> testConcurrentHashMapCopyConstructor() {\n+        return new ConcurrentHashMap<>(staticMap);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/Maps.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}