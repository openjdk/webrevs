{"files":[{"patch":"@@ -257,2 +257,2 @@\n-  \/\/ at some additional cost. Override superclass's implementation.\n-  virtual bool collection_attempt_is_safe();\n+  \/\/ at some additional cost.\n+  bool collection_attempt_is_safe();\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,12 +191,0 @@\n-  virtual size_t tlab_capacity() const {\n-    guarantee(false, \"Generation doesn't support thread local allocation buffers\");\n-    return 0;\n-  }\n-  virtual size_t tlab_used() const {\n-    guarantee(false, \"Generation doesn't support thread local allocation buffers\");\n-    return 0;\n-  }\n-  virtual size_t unsafe_max_tlab_alloc() const {\n-    guarantee(false, \"Generation doesn't support thread local allocation buffers\");\n-    return 0;\n-  }\n@@ -229,10 +217,0 @@\n-  \/\/ Returns true if the collection is likely to be safely\n-  \/\/ completed. Even if this method returns true, a collection\n-  \/\/ may not be guaranteed to succeed, and the system should be\n-  \/\/ able to safely unwind and recover from that failure, albeit\n-  \/\/ at some additional cost.\n-  virtual bool collection_attempt_is_safe() {\n-    guarantee(false, \"Are you sure you want to call this method?\");\n-    return true;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"}]}