{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+#include <inttypes.h>\n@@ -38,0 +39,1 @@\n+#include <stdint.h>\n@@ -52,1 +54,0 @@\n-#include <inttypes.h>\n@@ -82,22 +83,0 @@\n-#if !defined(LINUX) && !defined(_ALLBSD_SOURCE)\n-\/\/ Compiler-specific primitive types\n-typedef unsigned short     uint16_t;\n-#ifndef _UINT32_T\n-#define _UINT32_T\n-typedef unsigned int       uint32_t;\n-#endif \/\/ _UINT32_T\n-\n-#if !defined(_SYS_INT_TYPES_H)\n-#ifndef _UINT64_T\n-#define _UINT64_T\n-typedef unsigned long long uint64_t;\n-#endif \/\/ _UINT64_T\n-\/\/ %%%% how to access definition of intptr_t portably in 5.5 onward?\n-typedef int                     intptr_t;\n-typedef unsigned int            uintptr_t;\n-\/\/ If this gets an error, figure out a symbol XXX that implies the\n-\/\/ prior definition of intptr_t, and add \"&& !defined(XXX)\" above.\n-#endif \/\/ _SYS_INT_TYPES_H\n-\n-#endif \/\/ !LINUX && !_ALLBSD_SOURCE\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp","additions":3,"deletions":24,"binary":false,"changes":27,"status":"modified"}]}