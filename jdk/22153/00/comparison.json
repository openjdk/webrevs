{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -251,8 +249,1 @@\n-            @SuppressWarnings(\"removal\")\n-            InputStream stream = System.getSecurityManager() != null\n-                    ? AccessController.doPrivileged(new PrivilegedAction<>() {\n-                            public InputStream run() {\n-                                return StringPrep.class.getResourceAsStream(IDN_PROFILE);\n-                            }})\n-                    : StringPrep.class.getResourceAsStream(IDN_PROFILE);\n-\n+            InputStream stream = StringPrep.class.getResourceAsStream(IDN_PROFILE);\n","filename":"src\/java.base\/share\/classes\/java\/net\/IDN.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -51,2 +49,0 @@\n-import sun.security.util.SecurityConstants;\n-import sun.security.action.GetPropertyAction;\n@@ -488,8 +484,0 @@\n-        if (handler != null) {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                \/\/ check for permission to specify a handler\n-                checkSpecifyHandler(sm);\n-            }\n-        }\n@@ -687,7 +675,0 @@\n-        if (handler != null) {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                checkSpecifyHandler(sm);\n-            }\n-        }\n@@ -915,7 +896,0 @@\n-    \/*\n-     * Checks for permission to specify a stream handler.\n-     *\/\n-    private void checkSpecifyHandler(@SuppressWarnings(\"removal\") SecurityManager sm) {\n-        sm.checkPermission(SecurityConstants.SPECIFY_HANDLER_PERMISSION);\n-    }\n-\n@@ -1274,10 +1248,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (p.type() != Proxy.Type.DIRECT && sm != null) {\n-            InetSocketAddress epoint = (InetSocketAddress) p.address();\n-            if (epoint.isUnresolved())\n-                sm.checkConnect(epoint.getHostName(), epoint.getPort());\n-            else\n-                sm.checkConnect(epoint.getAddress().getHostAddress(),\n-                                epoint.getPort());\n-        }\n@@ -1361,5 +1325,0 @@\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager security = System.getSecurityManager();\n-            if (security != null) {\n-                security.checkSetFactory();\n-            }\n@@ -1401,2 +1360,1 @@\n-        String packagePrefixList =\n-                GetPropertyAction.privilegedGetProperty(protocolPathProp);\n+        String packagePrefixList = System.getProperty(protocolPathProp);\n@@ -1491,1 +1449,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1498,13 +1455,8 @@\n-            return AccessController.doPrivileged(\n-                new PrivilegedAction<>() {\n-                    public URLStreamHandler run() {\n-                        Iterator<URLStreamHandlerProvider> itr = providers();\n-                        while (itr.hasNext()) {\n-                            URLStreamHandlerProvider f = itr.next();\n-                            URLStreamHandler h = f.createURLStreamHandler(protocol);\n-                            if (h != null)\n-                                return h;\n-                        }\n-                        return null;\n-                    }\n-                });\n+            Iterator<URLStreamHandlerProvider> itr = providers();\n+            while (itr.hasNext()) {\n+                URLStreamHandlerProvider f = itr.next();\n+                URLStreamHandler h = f.createURLStreamHandler(protocol);\n+                if (h != null)\n+                    return h;\n+            }\n+            return null;\n","filename":"src\/java.base\/share\/classes\/java\/net\/URL.java","additions":9,"deletions":57,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.security.PrivilegedAction;\n@@ -45,1 +44,0 @@\n-import java.security.AccessController;\n@@ -48,1 +46,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -331,3 +328,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) sm.checkSetFactory();\n@@ -1288,5 +1282,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkSetFactory();\n-        }\n@@ -1404,29 +1393,24 @@\n-        return AccessController.doPrivileged(\n-                new PrivilegedAction<>() {\n-                    @Override\n-                    public ContentHandler run() {\n-                        ClassLoader cl = ClassLoader.getSystemClassLoader();\n-                        ServiceLoader<ContentHandlerFactory> sl =\n-                                ServiceLoader.load(ContentHandlerFactory.class, cl);\n-\n-                        Iterator<ContentHandlerFactory> iterator = sl.iterator();\n-\n-                        ContentHandler handler = null;\n-                        while (iterator.hasNext()) {\n-                            ContentHandlerFactory f;\n-                            try {\n-                                f = iterator.next();\n-                            } catch (ServiceConfigurationError e) {\n-                                if (e.getCause() instanceof SecurityException) {\n-                                    continue;\n-                                }\n-                                throw e;\n-                            }\n-                            handler = f.createContentHandler(contentType);\n-                            if (handler != null) {\n-                                break;\n-                            }\n-                        }\n-                        return handler;\n-                    }\n-                });\n+\n+        ClassLoader cl = ClassLoader.getSystemClassLoader();\n+        ServiceLoader<ContentHandlerFactory> sl =\n+                ServiceLoader.load(ContentHandlerFactory.class, cl);\n+\n+        Iterator<ContentHandlerFactory> iterator = sl.iterator();\n+\n+        ContentHandler handler = null;\n+        while (iterator.hasNext()) {\n+            ContentHandlerFactory f;\n+            try {\n+                f = iterator.next();\n+            } catch (ServiceConfigurationError e) {\n+                if (e.getCause() instanceof SecurityException) {\n+                    continue;\n+                }\n+                throw e;\n+            }\n+            handler = f.createContentHandler(contentType);\n+            if (handler != null) {\n+                break;\n+            }\n+        }\n+        return handler;\n@@ -1468,2 +1452,1 @@\n-        String packagePrefixList =\n-                GetPropertyAction.privilegedGetProperty(contentPathProp, \"\");\n+        String packagePrefixList = System.getProperty(contentPathProp, \"\");\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLConnection.java","additions":25,"deletions":42,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -52,9 +52,0 @@\n-    private static Void checkPermission() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null)\n-            sm.checkPermission(new RuntimePermission(\"setFactory\"));\n-        return null;\n-    }\n-    private URLStreamHandlerProvider(Void ignore) { }\n-\n@@ -65,1 +56,0 @@\n-        this(checkPermission());\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/URLStreamHandlerProvider.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-     * The string form should be behave in the same manner as the URL when\n+     * The string form should behave in the same manner as the URL when\n@@ -46,1 +46,1 @@\n-     * @see java.net.URLStreamHandler.sameFile(java.net.URL)\n+     * @see java.net.URL#sameFile(java.net.URL)\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/URLUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}