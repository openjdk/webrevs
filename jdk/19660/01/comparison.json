{"files":[{"patch":"@@ -97,1 +97,3 @@\n-\n+  product(bool, PrintMemoryMapAtExit, false, DIAGNOSTIC,                \\\n+          \"Print an annotated memory map at exit\")                      \\\n+                                                                        \\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"memory\/resourceArea.hpp\"\n@@ -34,0 +35,4 @@\n+#include \"nmt\/memFlagBitmap.hpp\"\n+#include \"nmt\/memMapPrinter.hpp\"\n+#include \"nmt\/memTracker.hpp\"\n+#include \"nmt\/virtualMemoryTracker.hpp\"\n@@ -39,4 +44,0 @@\n-#include \"nmt\/memFlagBitmap.hpp\"\n-#include \"nmt\/memMapPrinter.hpp\"\n-#include \"nmt\/memTracker.hpp\"\n-#include \"nmt\/virtualMemoryTracker.hpp\"\n@@ -206,0 +207,2 @@\n+  ResourceMark rm;\n+\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+#include \"nmt\/memMapPrinter.hpp\"\n@@ -481,0 +482,3 @@\n+  if (PrintMemoryMapAtExit) {\n+    MemMapPrinter::print_all_mappings(tty, false);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Verify PrintMemoryMapAtExit on normal JVM exit for summary tracking level\n+ * @requires os.family == \"linux\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @run driver PrintMemoryMapAtExitTest\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class PrintMemoryMapAtExitTest {\n+\n+    public static void main(String args[]) throws Exception {\n+\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintMemoryMapAtExit\",\n+                \"-XX:NativeMemoryTracking=summary\", \"-version\");\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(\"Memory mappings\");\n+        output.shouldContain(\"JAVAHEAP\");\n+        output.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/PrintMemoryMapAtExitTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}