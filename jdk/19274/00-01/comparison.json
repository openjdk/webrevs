{"files":[{"patch":"@@ -48,2 +48,0 @@\n-import jtreg.SkippedException;\n-\n@@ -66,4 +64,0 @@\n-        if (System.getProperty(\"test.cds.runtime.options\") != null) {\n-            throw new SkippedException(\n-                \"options specified via the test.cds.runtime.options property may not be compatible with this test\");\n-        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchiveHeapTestClass.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import jtreg.SkippedException;\n-\n@@ -40,4 +38,0 @@\n-        if (System.getProperty(\"test.cds.runtime.options\") != null) {\n-            throw new SkippedException(\n-                \"options specified via the test.cds.runtime.options property may not be compatible with this test\");\n-        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/serviceability\/ReplaceCriticalClassesForSubgraphs.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -336,0 +336,2 @@\n+    final String GC_PREFIX  = \"-XX:+Use\";\n+    final String GC_SUFFIX  = \"GC\";\n@@ -351,2 +353,0 @@\n-        String GC_PREFIX  = \"-XX:+Use\";\n-        String GC_SUFFIX  = \"GC\";\n@@ -465,1 +465,23 @@\n-        return \"\" + (\"true\".equals(vmCDS()) && WB.canWriteJavaHeapArchive());\n+        return \"\" + (\"true\".equals(vmCDS()) && WB.canWriteJavaHeapArchive()\n+                     && isCDSRuntimeOptionsCompatible());\n+    }\n+\n+    \/**\n+     * @return true if the VM options specified via the \"test.cds.runtime.options\"\n+     * property is compatible with writing Java heap objects into the CDS archive\n+     *\/\n+    protected boolean isCDSRuntimeOptionsCompatible() {\n+        String jtropts = System.getProperty(\"test.cds.runtime.options\");\n+        if (jtropts == null)\n+            return true;\n+        String CCP_DISABLED = \"-XX:-UseCompressedClassPointers\";\n+        for (String opt : jtropts.split(\",\")) {\n+            if (opt.equals(CCP_DISABLED))\n+                return false;\n+            if (opt.startsWith(GC_PREFIX) && opt.endsWith(GC_SUFFIX)) {\n+                String gc = opt.substring(GC_PREFIX.length(), opt.length() - GC_SUFFIX.length());\n+                if (!gc.equals(\"G1\"))\n+                    return false;\n+            }\n+        }\n+        return true;\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"}]}