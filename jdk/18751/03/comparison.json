{"files":[{"patch":"@@ -40,0 +40,1 @@\n+#include <limits>\n@@ -1108,1 +1109,16 @@\n-template<class T> inline T ABS(T x)                 { return (x > 0) ? x : -x; }\n+#define ABS(x) asserted_abs(x, __FILE__, __LINE__)\n+\n+template<class T> inline T asserted_abs(T x, const char* file, int line) {\n+#ifdef ASSERT\n+  if (std::is_integral<T>::value && x == std::numeric_limits<T>::min()) {\n+    report_vm_error(file, line, \"ABS: argument should not allow overflow\");\n+  }\n+#endif\n+  T res = (x > 0) ? x : -x;\n+#ifdef ASSERT\n+  if (res < 0) {\n+    report_vm_error(file, line, \"ABS: result should be non-negative\");\n+  }\n+#endif\n+  return res;\n+}\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}