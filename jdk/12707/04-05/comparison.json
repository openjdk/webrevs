{"files":[{"patch":"@@ -1,142 +1,142 @@\n-\/*\r\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\r\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n- *\r\n- * This code is free software; you can redistribute it and\/or modify it\r\n- * under the terms of the GNU General Public License version 2 only, as\r\n- * published by the Free Software Foundation.\r\n- *\r\n- * This code is distributed in the hope that it will be useful, but WITHOUT\r\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n- * version 2 for more details (a copy is included in the LICENSE file that\r\n- * accompanied this code).\r\n- *\r\n- * You should have received a copy of the GNU General Public License version\r\n- * 2 along with this work; if not, write to the Free Software Foundation,\r\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n- *\r\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\r\n- * or visit www.oracle.com if you need additional information or have any\r\n- * questions.\r\n- *\/\r\n-\r\n-\/*\r\n- * @test\r\n- * @bug 8273986\r\n- * @key headful\r\n- * @requires (os.family == \"windows\")\r\n- * @summary Verifies if accessible child count for JEditorPane HTML demo\r\n- * returns correct child count.\r\n- * @run main TestEditorPaneAccessibleChildCount\r\n- *\/\r\n-\r\n-import java.awt.BorderLayout;\r\n-import java.awt.Dimension;\r\n-import java.awt.event.ActionEvent;\r\n-import java.awt.event.ActionListener;\r\n-import java.awt.event.InputEvent;\r\n-import java.awt.Point;\r\n-import java.awt.Robot;\r\n-import java.io.IOException;\r\n-import java.net.URL;\r\n-import javax.accessibility.AccessibleContext;\r\n-import javax.swing.JButton;\r\n-import javax.swing.JEditorPane;\r\n-import javax.swing.JFrame;\r\n-import javax.swing.JPanel;\r\n-import javax.swing.JScrollPane;\r\n-import javax.swing.SwingUtilities;\r\n-import javax.swing.text.html.HTMLEditorKit;\r\n-\r\n-public class TestEditorPaneAccessibleChildCount implements ActionListener {\r\n-    private static JEditorPane jep;\r\n-    private static AccessibleContext ac;\r\n-    private static JButton ChangePageBtn;\r\n-    private static URL url;\r\n-    private static JFrame frame;\r\n-\r\n-    public TestEditorPaneAccessibleChildCount() {\r\n-        createAndShowUI();\r\n-    }\r\n-\r\n-    public void createAndShowUI() {\r\n-        frame = new JFrame(\"EditorPaneTester Tester\");\r\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n-        JPanel panel = new JPanel();\r\n-        jep = new JEditorPane();\r\n-        jep.setEditable(false);\r\n-        jep.setEditorKit(new HTMLEditorKit());\r\n-        url= TestEditorPaneAccessibleChildCount.class.getResource(\"index.html\");\r\n-        JScrollPane jScrollPane = new JScrollPane(jep);\r\n-        jScrollPane.setPreferredSize(new Dimension(540,400));\r\n-        panel.add(jScrollPane);\r\n-        frame.getContentPane().add(panel, BorderLayout.CENTER);\r\n-\r\n-        ChangePageBtn = new JButton(\"Change Page\");\r\n-        ChangePageBtn.addActionListener(this);\r\n-        frame.getContentPane().add(ChangePageBtn, BorderLayout.SOUTH);\r\n-\r\n-        try {\r\n-            jep.setPage(url);\r\n-        } catch (IOException e) {\r\n-            e.printStackTrace();\r\n-        }\r\n-        frame.setSize(560, 450);\r\n-        frame.setLocationRelativeTo(null);\r\n-        frame.pack();\r\n-        frame.setVisible(true);\r\n-    }\r\n-\r\n-    public void actionPerformed(ActionEvent e) {\r\n-        url= TestEditorPaneAccessibleChildCount.class.getResource(\"title.html\");\r\n-        try {\r\n-            jep.setPage(url);\r\n-        } catch (IOException e1) {\r\n-            e1.printStackTrace();\r\n-        }\r\n-    }\r\n-\r\n-    public static void main(String[] args) throws Exception {\r\n-        Robot robot = new Robot();\r\n-        robot.setAutoDelay(100);\r\n-        try {\r\n-            SwingUtilities.invokeAndWait(() -> {\r\n-                new TestEditorPaneAccessibleChildCount();\r\n-            });\r\n-            robot.waitForIdle();\r\n-            robot.delay(1000);\r\n-            ac = jep.getAccessibleContext();\r\n-            int childCount1 = ac.getAccessibleChildrenCount();\r\n-\r\n-            Point ChangePageBtnLocation = ChangePageBtn.getLocationOnScreen();\r\n-            int width = ChangePageBtn.getWidth();\r\n-            int height = ChangePageBtn.getHeight();\r\n-            robot.mouseMove(ChangePageBtnLocation.x + width\/2,\r\n-                            ChangePageBtnLocation.y + height\/2);\r\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\r\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\r\n-            robot.delay(100);\r\n-\r\n-            int childCount2 = ac.getAccessibleChildrenCount();\r\n-\r\n-            if ((childCount1 != childCount2) &&\r\n-                    (childCount1 != 0 && childCount2 != 0)) {\r\n-                System.out.println(\"passed\");\r\n-            } else {\r\n-                System.out.println(\"Index page accessible children count is: \"+\r\n-                        childCount1);\r\n-                System.out.println(\"Title page accessible children count is: \"+\r\n-                        childCount2);\r\n-                throw new RuntimeException(\"getAccessibleChildrenCount returned\"+\r\n-                        \" wrong child count\");\r\n-            }\r\n-        } finally {\r\n-            SwingUtilities.invokeAndWait(() -> {\r\n-                if (frame != null) {\r\n-                    frame.dispose();\r\n-                }\r\n-            });\r\n-        }\r\n-    }\r\n-}\r\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8273986\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @summary Verifies if accessible child count for JEditorPane HTML demo\n+ * returns correct child count.\n+ * @run main TestEditorPaneAccessibleChildCount\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.io.IOException;\n+import java.net.URL;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class TestEditorPaneAccessibleChildCount implements ActionListener {\n+    private static JEditorPane jep;\n+    private static AccessibleContext ac;\n+    private static JButton ChangePageBtn;\n+    private static URL url;\n+    private static JFrame frame;\n+\n+    public TestEditorPaneAccessibleChildCount() {\n+        createAndShowUI();\n+    }\n+\n+    public void createAndShowUI() {\n+        frame = new JFrame(\"EditorPaneTester Tester\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        JPanel panel = new JPanel();\n+        jep = new JEditorPane();\n+        jep.setEditable(false);\n+        jep.setEditorKit(new HTMLEditorKit());\n+        url= TestEditorPaneAccessibleChildCount.class.getResource(\"index.html\");\n+        JScrollPane jScrollPane = new JScrollPane(jep);\n+        jScrollPane.setPreferredSize(new Dimension(540,400));\n+        panel.add(jScrollPane);\n+        frame.getContentPane().add(panel, BorderLayout.CENTER);\n+\n+        ChangePageBtn = new JButton(\"Change Page\");\n+        ChangePageBtn.addActionListener(this);\n+        frame.getContentPane().add(ChangePageBtn, BorderLayout.SOUTH);\n+\n+        try {\n+            jep.setPage(url);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        frame.setSize(560, 450);\n+        frame.setLocationRelativeTo(null);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        url= TestEditorPaneAccessibleChildCount.class.getResource(\"title.html\");\n+        try {\n+            jep.setPage(url);\n+        } catch (IOException e1) {\n+            e1.printStackTrace();\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                new TestEditorPaneAccessibleChildCount();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            ac = jep.getAccessibleContext();\n+            int childCount1 = ac.getAccessibleChildrenCount();\n+\n+            Point ChangePageBtnLocation = ChangePageBtn.getLocationOnScreen();\n+            int width = ChangePageBtn.getWidth();\n+            int height = ChangePageBtn.getHeight();\n+            robot.mouseMove(ChangePageBtnLocation.x + width\/2,\n+                            ChangePageBtnLocation.y + height\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(100);\n+\n+            int childCount2 = ac.getAccessibleChildrenCount();\n+\n+            if ((childCount1 != childCount2) &&\n+                    (childCount1 != 0 && childCount2 != 0)) {\n+                System.out.println(\"passed\");\n+            } else {\n+                System.out.println(\"Index page accessible children count is: \"+\n+                        childCount1);\n+                System.out.println(\"Title page accessible children count is: \"+\n+                        childCount2);\n+                throw new RuntimeException(\"getAccessibleChildrenCount returned\"+\n+                        \" wrong child count\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/TestEditorPaneAccessibleChildCount.java","additions":142,"deletions":142,"binary":false,"changes":284,"status":"modified"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/ant.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/bug.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/bug2.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/king.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/micro.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/accessibility\/JEditorPane\/images\/Octavo\/seaweed.jpg","binary":true,"status":"deleted"}]}