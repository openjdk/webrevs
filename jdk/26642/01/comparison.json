{"files":[{"patch":"@@ -93,0 +93,6 @@\n+  \/\/ If there was an error generating the blob then UseCompiler will\n+  \/\/ have been unset and we need to skip the remaining initialization\n+  if (!UseCompiler) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -184,0 +184,11 @@\n+    \/\/ The compiler blob may be created late by a C2 compiler thread\n+    \/\/ rather than during normal initialization by the initial thread.\n+    \/\/ In that case we can tolerate an allocation failure because the\n+    \/\/ compiler will have been shut down and we have no need of the\n+    \/\/ blob.\n+    if (Thread::current()->is_Compiler_thread()) {\n+      assert(blob_id == BlobId::stubgen_compiler_id, \"sanity\");\n+      assert(DelayCompilerStubsGeneration, \"sanity\");\n+      log_warning(stubs)(\"%s\\t not generated:\\t no space left in CodeCache\", buffer_name);\n+      return nullptr;\n+    }\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}