{"files":[{"patch":"@@ -8942,1 +8942,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -8953,14 +8953,0 @@\n-\/\/ Shift Left by variable\n-instruct salI_rReg_CL_ndd(rRegI dst, rRegI src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (LShiftI src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"esall    $dst, $src, $shift\\t# int (ndd)\" %}\n-  ins_encode %{\n-    __ esall($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9062,1 +9048,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -9073,14 +9059,0 @@\n-\/\/ Arithmetic Shift Right by variable\n-instruct sarI_rReg_CL_ndd(rRegI dst, rRegI src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (RShiftI src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"esarl    $dst, $src, $shift\\t# int (ndd)\" %}\n-  ins_encode %{\n-    __ esarl($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9182,1 +9154,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -9193,14 +9165,0 @@\n-\/\/ Logical Shift Right by variable\n-instruct shrI_rReg_CL_ndd(rRegI dst, rRegI src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (URShiftI src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"eshrl    $dst, $src, $shift\\t# int (ndd)\" %}\n-  ins_encode %{\n-    __ eshrl($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9331,1 +9289,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -9342,14 +9300,0 @@\n-\/\/ Shift Left by variable\n-instruct salL_rReg_CL_ndd(rRegL dst, rRegL src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (LShiftL src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"esalq    $dst, $src, $shift\\t# long (ndd)\" %}\n-  ins_encode %{\n-    __ esalq($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9451,1 +9395,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -9462,14 +9406,0 @@\n-\/\/ Arithmetic Shift Right by variable\n-instruct sarL_rReg_CL_ndd(rRegL dst, rRegL src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (RShiftL src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"esarq    $dst, $src, $shift\\t# long (ndd)\" %}\n-  ins_encode %{\n-    __ esarq($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9571,1 +9501,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2());\n+  predicate(!VM_Version::supports_bmi2());\n@@ -9582,14 +9512,0 @@\n-\/\/ Logical Shift Right by variable\n-instruct shrL_rReg_CL_ndd(rRegL dst, rRegL src, rcx_RegI shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && !VM_Version::supports_bmi2());\n-  match(Set dst (URShiftL src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"eshrq    $dst, $src, $shift\\t# long (ndd)\" %}\n-  ins_encode %{\n-    __ eshrq($dst$$Register, $src$$Register, false);\n-  %}\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n@@ -9665,1 +9581,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n+  predicate(!VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n@@ -9675,14 +9591,0 @@\n-\/\/ Rotate left by constant.\n-instruct rolI_immI8_ndd(rRegI dst, rRegI src, immI8 shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && n->bottom_type()->basic_type() == T_INT);\n-  match(Set dst (RotateLeft src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"eroll    $dst, $src, $shift\\t# rotate left (int ndd)\" %}\n-  ins_encode %{\n-    __ eroll($dst$$Register, $src$$Register, $shift$$constant, false);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -9744,1 +9646,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n+  predicate(!VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n@@ -9754,14 +9656,0 @@\n-\/\/ Rotate Right by constant.\n-instruct rorI_immI8_ndd(rRegI dst, rRegI src, immI8 shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && n->bottom_type()->basic_type() == T_INT);\n-  match(Set dst (RotateRight src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"erorl    $dst, $src, $shift\\t# rotate right (int ndd)\" %}\n-  ins_encode %{\n-    __ erorl($dst$$Register, $src$$Register, $shift$$constant, false);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -9822,1 +9710,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n+  predicate(!VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n@@ -9832,14 +9720,0 @@\n-\/\/ Rotate Left by constant.\n-instruct rolL_immI8_ndd(rRegL dst, rRegL src, immI8 shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && n->bottom_type()->basic_type() == T_LONG);\n-  match(Set dst (RotateLeft src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"erolq    $dst, $src, $shift\\t# rotate left (long ndd)\" %}\n-  ins_encode %{\n-    __ erolq($dst$$Register, $src$$Register, $shift$$constant, false);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -9901,1 +9775,1 @@\n-  predicate(!UseAPX && !VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n+  predicate(!VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n@@ -9911,14 +9785,0 @@\n-\/\/ Rotate Right by constant.\n-instruct rorL_immI8_ndd(rRegL dst, rRegL src, immI8 shift, rFlagsReg cr)\n-%{\n-  predicate(UseAPX && n->bottom_type()->basic_type() == T_LONG);\n-  match(Set dst (RotateRight src shift));\n-  effect(KILL cr);\n-\n-  format %{ \"erorq    $dst, $src, $shift\\t# rotate right(long ndd)\" %}\n-  ins_encode %{\n-    __ erorq($dst$$Register, $src$$Register, $shift$$constant, false);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":10,"deletions":150,"binary":false,"changes":160,"status":"modified"}]}