{"files":[{"patch":"@@ -335,0 +335,14 @@\n+void Assembler::emit_arith_ndd(int op1, int op2, Register dst, int32_t imm32) {\n+  assert(isByte(op1) && isByte(op2), \"wrong opcode\");\n+  assert(op1 == 0x81, \"Unexpected opcode\");\n+  if (is8bit(imm32)) {\n+    emit_int24(op1 | 0x02,        \/\/ set sign bit\n+               op2 | encode(dst),\n+               imm32 & 0xFF);\n+  }\n+  else {\n+    emit_int16(op1, (op2 | encode(dst)));\n+    emit_int32(imm32);\n+  }\n+}\n+\n@@ -1464,1 +1478,1 @@\n-  emit_arith(0x81, 0xC0, src, imm32);\n+  emit_arith_ndd(0x81, 0xC0, src, imm32);\n@@ -1698,1 +1712,1 @@\n-  emit_arith(0x81, 0xE0, src, imm32);\n+  emit_arith_ndd(0x81, 0xE0, src, imm32);\n@@ -4519,1 +4533,1 @@\n-  emit_arith(0x81, 0xC8, src, imm32);\n+  emit_arith_ndd(0x81, 0xC8, src, imm32);\n@@ -7158,1 +7172,1 @@\n-  emit_arith(0x81, 0xE8, src, imm32);\n+  emit_arith_ndd(0x81, 0xE8, src, imm32);\n@@ -7499,1 +7513,1 @@\n-  emit_arith(0x81, 0xF0, src, imm32);\n+  emit_arith_ndd(0x81, 0xF0, src, imm32);\n@@ -15081,1 +15095,1 @@\n-  emit_arith(0x81, 0xC0, src, imm32);\n+  emit_arith_ndd(0x81, 0xC0, src, imm32);\n@@ -15178,1 +15192,1 @@\n-  emit_arith(0x81, 0xE0, src, imm32);\n+  emit_arith_ndd(0x81, 0xE0, src, imm32);\n@@ -16065,1 +16079,1 @@\n-  emit_arith(0x81, 0xC8, src, imm32);\n+  emit_arith_ndd(0x81, 0xC8, src, imm32);\n@@ -16753,1 +16767,1 @@\n-  emit_arith(0x81, 0xE8, src, imm32);\n+  emit_arith_ndd(0x81, 0xE8, src, imm32);\n@@ -16884,1 +16898,1 @@\n-  emit_arith(0x81, 0xF0, src, imm32);\n+  emit_arith_ndd(0x81, 0xF0, src, imm32);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -824,0 +824,1 @@\n+  void emit_arith_ndd(int op1, int op2, Register dst, int32_t imm32);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1550,1 +1550,2 @@\n-  return (offset < 0x80) ? 5 : 8; \/\/ REX\n+  int reg = ra_->get_encode(this);\n+    return (offset < 0x80) ? 5 : 8; \/\/ REX\n@@ -4376,2 +4377,7 @@\n-    __ movl($dst$$Register, $mem$$Address);\n-    __ shrl($dst$$Register, markWord::klass_shift_at_offset);\n+    if (UseAPX) {\n+      __ eshrl($dst$$Register, $mem$$Address, markWord::klass_shift_at_offset, false);\n+    }\n+    else {\n+      __ movl($dst$$Register, $mem$$Address);\n+      __ shrl($dst$$Register, markWord::klass_shift_at_offset);\n+    }\n@@ -6119,0 +6125,1 @@\n+  predicate(!UseAPX);\n@@ -6129,0 +6136,13 @@\n+instruct cmovI_reg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr, cmpOp cop)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# signed, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6144,0 +6164,1 @@\n+  predicate(!UseAPX);\n@@ -6154,0 +6175,12 @@\n+instruct cmovI_regU_ndd(rRegI dst, cmpOpU cop, rFlagsRegU cr, rRegI src1, rRegI src2) %{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6169,0 +6202,1 @@\n+  predicate(!UseAPX);\n@@ -6176,0 +6210,11 @@\n+instruct cmovI_regUCF_ndd(rRegI dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegI src1, rRegI src2) %{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 src2)));\n+  ins_cost(200);\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6177,1 +6222,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n@@ -6190,0 +6235,14 @@\n+instruct cmovI_regUCF2_ne_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegI dst, rRegI src1, rRegI src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpl  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovnel $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovl(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovl(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6193,1 +6252,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n@@ -6206,0 +6265,14 @@\n+instruct cmovI_regUCF2_eq_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegI dst, rRegI src1, rRegI src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpl  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovnel $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovl(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovl(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6208,0 +6281,1 @@\n+  predicate(!UseAPX);\n@@ -6218,0 +6292,14 @@\n+\/\/ Conditional move\n+instruct cmovI_rReg_rReg_mem_ndd(rRegI dst, cmpOp cop, rFlagsReg cr, rRegI src1, memory src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 (LoadI src2))));\n+\n+  ins_cost(250); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# signed, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);\n+%}\n+\n@@ -6221,0 +6309,1 @@\n+  predicate(!UseAPX);\n@@ -6232,0 +6321,1 @@\n+  predicate(!UseAPX);\n@@ -6239,0 +6329,25 @@\n+instruct cmovI_rReg_rReg_memU_ndd(rRegI dst, cmpOpU cop, rFlagsRegU cr, rRegI src1, memory src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 (LoadI src2))));\n+\n+  ins_cost(250); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);\n+%}\n+\n+instruct cmovI_rReg_rReg_memUCF_ndd(rRegI dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegI src1, memory src2) \n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveI (Binary cop cr) (Binary src1 (LoadI src2))));\n+  ins_cost(250);\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, int ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);\n+%}\n+\n@@ -6242,0 +6357,1 @@\n+  predicate(!UseAPX);\n@@ -6252,0 +6368,14 @@\n+\/\/ Conditional move ndd\n+instruct cmovN_reg_ndd(rRegN dst, rRegN src1, rRegN src2, rFlagsReg cr, cmpOp cop)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveN (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# signed, compressed ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6255,0 +6385,1 @@\n+  predicate(!UseAPX);\n@@ -6266,0 +6397,1 @@\n+  predicate(!UseAPX);\n@@ -6273,0 +6405,25 @@\n+\/\/ Conditional move ndd\n+instruct cmovN_regU_ndd(rRegN dst, cmpOpU cop, rFlagsRegU cr, rRegN src1, rRegN src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveN (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, compressed ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n+instruct cmovN_regUCF_ndd(rRegN dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegN src1, rRegN src2) %{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveN (Binary cop cr) (Binary src1 src2)));\n+  ins_cost(200);\n+  format %{ \"ecmovl$cop $dst, $src1, $src2\\t# unsigned, compressed ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6306,0 +6463,1 @@\n+  predicate(!UseAPX);\n@@ -6316,0 +6474,14 @@\n+\/\/ Conditional move ndd\n+instruct cmovP_reg_ndd(rRegP dst, rRegP src1, rRegP src2, rFlagsReg cr, cmpOp cop)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveP (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# signed, ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);  \/\/ XXX\n+%}\n+\n@@ -6319,0 +6491,1 @@\n+  predicate(!UseAPX);\n@@ -6329,0 +6502,14 @@\n+\/\/ Conditional move ndd\n+instruct cmovP_regU_ndd(rRegP dst, cmpOpU cop, rFlagsRegU cr, rRegP src1, rRegP src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveP (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6337,0 +6524,10 @@\n+instruct cmovP_regUCF_ndd(rRegP dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegP src1, rRegP src2) %{\n+  match(Set dst (CMoveP (Binary cop cr) (Binary src1 src2)));\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, ptr ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6338,1 +6535,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n@@ -6351,0 +6548,14 @@\n+instruct cmovP_regUCF2_ne_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegP dst, rRegP src1, rRegP src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  match(Set dst (CMoveP (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpq  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovneq $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovq(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovq(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6354,1 +6565,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n@@ -6367,0 +6578,14 @@\n+instruct cmovP_regUCF2_eq_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegP dst, rRegP src1, rRegP src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  match(Set dst (CMoveP (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpq  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovneq $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovq(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovq(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6383,0 +6608,1 @@\n+  predicate(!UseAPX);\n@@ -6393,0 +6619,13 @@\n+instruct cmovL_reg_ndd(rRegL dst, cmpOp cop, rFlagsReg cr, rRegL src1, rRegL src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# signed, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);  \/\/ XXX\n+%}\n+\n@@ -6395,0 +6634,1 @@\n+  predicate(!UseAPX);\n@@ -6405,0 +6645,13 @@\n+instruct cmovL_rReg_rReg_mem_ndd(rRegL dst, cmpOp cop, rFlagsReg cr, rRegL src1, memory src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 (LoadL src2))));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# signed, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);  \/\/ XXX\n+%}\n+\n@@ -6421,0 +6674,1 @@\n+  predicate(!UseAPX);\n@@ -6431,0 +6685,13 @@\n+instruct cmovL_regU_ndd(rRegL dst, cmpOpU cop, rFlagsRegU cr, rRegL src1, rRegL src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6446,0 +6713,1 @@\n+  predicate(!UseAPX);\n@@ -6453,0 +6721,12 @@\n+instruct cmovL_regUCF_ndd(rRegL dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegL src1, rRegL src2) \n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 src2)));\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6454,1 +6734,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n@@ -6467,0 +6747,14 @@\n+instruct cmovL_regUCF2_ne_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegL dst, rRegL src1, rRegL src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::ne);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpq  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovneq $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovq(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovq(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6470,1 +6764,1 @@\n-  predicate(n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  predicate(!UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n@@ -6483,0 +6777,14 @@\n+instruct cmovL_regUCF2_eq_ndd(cmpOpUCF2 cop, rFlagsRegUCF cr, rRegL dst, rRegL src1, rRegL src2) %{\n+  predicate(UseAPX && n->in(1)->in(1)->as_Bool()->_test._test == BoolTest::eq);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 src2)));\n+\n+  ins_cost(200); \/\/ XXX\n+  format %{ \"ecmovpq  $dst, $src1, $src2\\n\\t\"\n+            \"ecmovneq $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    __ ecmovq(Assembler::parity, $dst$$Register, $src1$$Register, $src2$$Register);\n+    __ ecmovq(Assembler::notEqual, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n+\n@@ -6485,0 +6793,1 @@\n+  predicate(!UseAPX);\n@@ -6496,0 +6805,1 @@\n+  predicate(!UseAPX);\n@@ -6503,0 +6813,25 @@\n+instruct cmovL_rReg_rReg_memU_ndd(rRegL dst, cmpOpU cop, rFlagsRegU cr, rRegL src1, memory src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 (LoadL src2))));\n+\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);\n+%}\n+\n+instruct cmovL_rReg_rReg_memUCF_ndd(rRegL dst, cmpOpUCF cop, rFlagsRegUCF cr, rRegL src1, memory src2) \n+%{\n+  predicate(UseAPX);\n+  match(Set dst (CMoveL (Binary cop cr) (Binary src1 (LoadL src2))));\n+  ins_cost(200);\n+  format %{ \"ecmovq$cop $dst, $src1, $src2\\t# unsigned, long ndd\" %}\n+  ins_encode %{\n+    __ ecmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src1$$Register, $src2$$Address);\n+  %}\n+  ins_pipe(pipe_cmov_mem);\n+%}\n+\n@@ -6596,0 +6931,1 @@\n+  predicate(!UseAPX);\n@@ -6606,0 +6942,14 @@\n+instruct addI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eaddl($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -6608,0 +6958,1 @@\n+  predicate(!UseAPX);\n@@ -6619,0 +6970,28 @@\n+instruct addI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eaddl($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe( ialu_reg );\n+%}\n+\n+instruct addI_rReg_mem_imm_ndd(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eaddl($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe( ialu_reg );\n+%}\n+\n@@ -6621,0 +7000,1 @@\n+  predicate(!UseAPX);\n@@ -6633,0 +7013,30 @@\n+instruct addI_rReg_mem_rReg_ndd(rRegI dst, memory src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150); \/\/ XXX\n+  format %{ \"eaddl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eaddl($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct addI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddI src1 (LoadI src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150); \/\/ XXX\n+  format %{ \"eaddl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eaddl($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -6664,1 +7074,1 @@\n-  predicate(UseIncDec);\n+  predicate(!UseAPX && UseIncDec);\n@@ -6675,0 +7085,26 @@\n+instruct incI_rReg_ndd(rRegI dst, rRegI src, immI_1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddI src val));\n+  effect(KILL cr);\n+\n+  format %{ \"eincl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eincl($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct incI_rReg_mem_ndd(rRegI dst, memory src, immI_1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddI (LoadI src) val));\n+  effect(KILL cr);\n+\n+  format %{ \"eincl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eincl($dst$$Register, $src$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -6692,1 +7128,1 @@\n-  predicate(UseIncDec);\n+  predicate(!UseAPX && UseIncDec);\n@@ -6703,2 +7139,1 @@\n-\/\/ XXX why does that use AddI\n-instruct decI_mem(memory dst, immI_M1 src, rFlagsReg cr)\n+instruct decI_rReg_ndd(rRegI dst, rRegI src, immI_M1 val, rFlagsReg cr)\n@@ -6706,2 +7141,29 @@\n-  predicate(UseIncDec);\n-  match(Set dst (StoreI dst (AddI (LoadI dst) src)));\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddI src val));\n+  effect(KILL cr);\n+\n+  format %{ \"edecl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ edecl($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct decI_rReg_mem_ndd(rRegI dst, memory src, immI_M1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddI (LoadI src) val));\n+  effect(KILL cr);\n+\n+  format %{ \"edecl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ edecl($dst$$Register, $src$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+\/\/ XXX why does that use AddI\n+instruct decI_mem(memory dst, immI_M1 src, rFlagsReg cr)\n+%{\n+  predicate(UseIncDec);\n+  match(Set dst (StoreI dst (AddI (LoadI dst) src)));\n@@ -6771,0 +7233,1 @@\n+  predicate(!UseAPX);\n@@ -6782,0 +7245,14 @@\n+instruct addL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eaddq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -6784,0 +7261,1 @@\n+  predicate(!UseAPX);\n@@ -6795,0 +7273,28 @@\n+instruct addL_rReg_rReg_imm_ndd(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eaddq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe( ialu_reg );\n+%}\n+\n+instruct addL_rReg_mem_imm_ndd(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"eaddq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eaddq($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe( ialu_reg );\n+%}\n+\n@@ -6797,0 +7303,1 @@\n+  predicate(!UseAPX);\n@@ -6809,0 +7316,30 @@\n+instruct addL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddL src1 (LoadL src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150); \/\/ XXX\n+  format %{ \"eaddq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eaddq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct addL_rReg_mem_rReg_ndd(rRegL dst, memory src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AddL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150); \/\/ XXX\n+  format %{ \"eaddq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eaddq($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -6839,1 +7376,1 @@\n-  predicate(UseIncDec);\n+  predicate(!UseAPX && UseIncDec);\n@@ -6850,0 +7387,26 @@\n+instruct incL_rReg_ndd(rRegI dst, rRegI src, immL1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddL src val));\n+  effect(KILL cr);\n+\n+  format %{ \"eincq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eincq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct incL_rReg_mem_ndd(rRegI dst, memory src, immL1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddL (LoadL src) val));\n+  effect(KILL cr);\n+\n+  format %{ \"eincq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eincq($dst$$Register, $src$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -6867,1 +7430,1 @@\n-  predicate(UseIncDec);\n+  predicate(!UseAPX && UseIncDec);\n@@ -6878,0 +7441,26 @@\n+instruct decL_rReg_ndd(rRegL dst, rRegL src, immL_M1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddL src val));\n+  effect(KILL cr);\n+\n+  format %{ \"edecq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ edecq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct decL_rReg_mem_ndd(rRegL dst, memory src, immL_M1 val, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && UseIncDec);\n+  match(Set dst (AddL (LoadL src) val));\n+  effect(KILL cr);\n+\n+  format %{ \"edecq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ edecq($dst$$Register, $src$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -7502,0 +8091,1 @@\n+  predicate(!UseAPX);\n@@ -7513,0 +8103,42 @@\n+instruct subI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ esubl($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct subI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ esubl($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct subI_rReg_mem_imm_ndd(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ esubl($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -7515,0 +8147,1 @@\n+  predicate(!UseAPX);\n@@ -7527,0 +8160,30 @@\n+instruct subI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI src1 (LoadI src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150);\n+  format %{ \"esubl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ esubl($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct subI_rReg_mem_rReg_ndd(rRegI dst, memory src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150);\n+  format %{ \"esubl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ esubl($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -7543,0 +8206,1 @@\n+  predicate(!UseAPX);\n@@ -7554,0 +8218,42 @@\n+instruct subL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ esubq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct subL_rReg_rReg_imm_ndd(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ esubq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct subL_rReg_mem_imm_ndd(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"esubq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ esubq($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -7556,0 +8262,1 @@\n+  predicate(!UseAPX);\n@@ -7568,0 +8275,30 @@\n+instruct subL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL src1 (LoadL src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150);\n+  format %{ \"esubq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ esubq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct subL_rReg_mem_rReg_ndd(rRegL dst, memory src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n+  ins_cost(150);\n+  format %{ \"esubq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ esubq($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -7598,0 +8335,1 @@\n+  predicate(!UseAPX);\n@@ -7609,0 +8347,14 @@\n+instruct negI_rReg_ndd(rRegI dst, rRegI src, immI_0 zero, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubI zero src));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"enegl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ enegl($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -7611,0 +8363,1 @@\n+  predicate(!UseAPX);\n@@ -7622,0 +8375,14 @@\n+instruct negI_rReg_2_ndd(rRegI dst, rRegI src, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (NegI src));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"enegl    $dst, $src\\t# int ndd\" %}\n+  ins_encode %{\n+    __ enegl($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -7637,0 +8404,1 @@\n+  predicate(!UseAPX);\n@@ -7648,0 +8416,14 @@\n+instruct negL_rReg_ndd(rRegL dst, rRegL src, immL0 zero, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (SubL zero src));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"enegq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ enegq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -7650,0 +8432,1 @@\n+  predicate(!UseAPX);\n@@ -7661,0 +8444,14 @@\n+instruct negL_rReg_2_ndd(rRegL dst, rRegL src, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (NegL src));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n+\n+  format %{ \"enegq    $dst, $src\\t# long ndd\" %}\n+  ins_encode %{\n+    __ enegq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -7680,0 +8477,1 @@\n+  predicate(!UseAPX);\n@@ -7691,0 +8489,14 @@\n+instruct mulI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulI src1 src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimull   $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eimull($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg_alu0);\n+%}\n+\n@@ -7693,0 +8505,1 @@\n+  predicate(!UseAPX);\n@@ -7704,0 +8517,14 @@\n+instruct mulI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulI src1 src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimull   $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eimull($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg_alu0);\n+%}\n+\n@@ -7706,0 +8533,1 @@\n+  predicate(!UseAPX);\n@@ -7717,0 +8545,14 @@\n+instruct mulI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulI src1 (LoadI src2)));\n+  effect(KILL cr);\n+\n+  ins_cost(350);\n+  format %{ \"eimull   $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eimull($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem_alu0);\n+%}\n+\n@@ -7719,0 +8561,1 @@\n+  predicate(!UseAPX);\n@@ -7730,0 +8573,14 @@\n+instruct mulI_rReg_mem_imm(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulI (LoadI src1) src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimull   $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eimull($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_mem_alu0);\n+%}\n+\n@@ -7742,0 +8599,1 @@\n+  predicate(!UseAPX);\n@@ -7753,0 +8611,14 @@\n+instruct mulL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulL src1 src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimulq   $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eimulq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg_alu0);\n+%}\n+\n@@ -7755,0 +8627,1 @@\n+  predicate(!UseAPX);\n@@ -7766,0 +8639,14 @@\n+instruct mulL_rReg_rReg_imm_ndd(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulL src1 src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimulq   $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eimulq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg_reg_alu0);\n+%}\n+\n@@ -7768,0 +8655,1 @@\n+  predicate(!UseAPX);\n@@ -7779,0 +8667,14 @@\n+instruct mulL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulL src1 (LoadL src2)));\n+  effect(KILL cr);\n+\n+  ins_cost(350);\n+  format %{ \"eimulq   $dst, $src1, $src2 \\t# long\" %}\n+  ins_encode %{\n+    __ eimulq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem_alu0);\n+%}\n+\n@@ -7781,0 +8683,1 @@\n+  predicate(!UseAPX);\n@@ -7785,1 +8688,15 @@\n-  format %{ \"imulq   $dst, $src, $imm\\t# long\" %}\n+  format %{ \"imulq   $dst, $src, $imm\\t# long\" %}\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Address, $imm$$constant);\n+  %}\n+  ins_pipe(ialu_reg_mem_alu0);\n+%}\n+\n+instruct mulL_rReg_mem_imm_ndd(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MulL (LoadL src1) src2));\n+  effect(KILL cr);\n+\n+  ins_cost(300);\n+  format %{ \"eimulq   $dst, $src1, $src2\\t# long ndd\" %}\n@@ -7787,1 +8704,1 @@\n-    __ imulq($dst$$Register, $src$$Address, $imm$$constant);\n+    __ eimulq($dst$$Register, $src1$$Address, $src2$$constant, false);\n@@ -8027,0 +8944,1 @@\n+  predicate(!UseAPX);\n@@ -8037,0 +8955,14 @@\n+\/\/ Shift Left by one, two, three\n+instruct salI_rReg_immI2_ndd(rRegI dst, rRegI src, immI2 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftI src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esall    $dst, $src, $shift\\t# int(ndd)\" %}\n+  ins_encode %{\n+    __ esall($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8040,0 +8972,1 @@\n+  predicate(!UseAPX);\n@@ -8050,0 +8983,27 @@\n+\/\/ Shift Left by 8-bit immediate\n+instruct salI_rReg_imm_ndd(rRegI dst, rRegI src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftI src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esall    $dst, $src, $shift\\t# int (ndd)\" %}\n+  ins_encode %{\n+    __ esall($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct salI_rReg_mem_imm_ndd(rRegI dst, memory src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftI (LoadI src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esall    $dst, $src, $shift\\t# int (ndd)\" %}\n+  ins_encode %{\n+    __ esall($dst$$Register, $src$$Address, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8118,0 +9078,1 @@\n+  predicate(!UseAPX);\n@@ -8128,0 +9089,27 @@\n+\/\/ Arithmetic Shift Right by 8-bit immediate\n+instruct sarI_rReg_imm_ndd(rRegI dst, rRegI src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (RShiftI src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esarl    $dst, $src, $shift\\t# int (ndd)\" %}\n+  ins_encode %{\n+    __ esarl($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_mem_imm);\n+%}\n+\n+instruct sarI_rReg_mem_imm_ndd(rRegI dst, memory src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (RShiftI (LoadI src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esarl    $dst, $src, $shift\\t# int (ndd)\" %}\n+  ins_encode %{\n+    __ esarl($dst$$Register, $src$$Address, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_mem_imm);\n+%}\n+\n@@ -8196,0 +9184,1 @@\n+  predicate(!UseAPX);\n@@ -8206,0 +9195,27 @@\n+\/\/ Logical Shift Right by 8-bit immediate\n+instruct shrI_rReg_imm_ndd(rRegI dst, rRegI src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (URShiftI src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"eshrl    $dst, $src, $shift\\t # int (ndd)\" %}\n+  ins_encode %{\n+    __ eshrl($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct shrI_rReg_mem_imm_ndd(rRegI dst, memory src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (URShiftI (LoadI src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"eshrl    $dst, $src, $shift\\t # int (ndd)\" %}\n+  ins_encode %{\n+    __ eshrl($dst$$Register, $src$$Address, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8275,0 +9291,1 @@\n+  predicate(!UseAPX);\n@@ -8285,0 +9302,14 @@\n+\/\/ Shift Left by one, two, three\n+instruct salL_rReg_immI2_ndd(rRegL dst, rRegL src, immI2 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftL src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esalq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ esalq($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8288,0 +9319,1 @@\n+  predicate(!UseAPX);\n@@ -8298,0 +9330,27 @@\n+\/\/ Shift Left by 8-bit immediate\n+instruct salL_rReg_imm_ndd(rRegL dst, rRegL src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftL src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esalq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ esalq($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct salL_rReg_mem_imm_ndd(rRegL dst, memory src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (LShiftL (LoadL src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esalq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ esalq($dst$$Register, $src$$Address, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8366,0 +9425,1 @@\n+  predicate(!UseAPX);\n@@ -8376,0 +9436,27 @@\n+\/\/ Arithmetic Shift Right by 8-bit immediate\n+instruct sarL_rReg_imm_ndd(rRegL dst, rRegL src, immI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (RShiftL src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esarq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ esarq($dst$$Register, $src$$Register, (unsigned char)($shift$$constant & 0x3F), false);\n+  %}\n+  ins_pipe(ialu_mem_imm);\n+%}\n+\n+instruct sarL_rReg_mem_imm_ndd(rRegL dst, memory src, immI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (RShiftL (LoadL src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"esarq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ esarq($dst$$Register, $src$$Address, (unsigned char)($shift$$constant & 0x3F), false);\n+  %}\n+  ins_pipe(ialu_mem_imm);\n+%}\n+\n@@ -8444,0 +9531,1 @@\n+  predicate(!UseAPX);\n@@ -8454,0 +9542,27 @@\n+\/\/ Logical Shift Right by 8-bit immediate\n+instruct shrL_rReg_imm_ndd(rRegL dst, rRegL src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (URShiftL src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"eshrq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ eshrq($dst$$Register, $src$$Register, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct shrL_rReg_mem_imm_ndd(rRegL dst, memory src, immI8 shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (URShiftL (LoadL src) shift));\n+  effect(KILL cr);\n+\n+  format %{ \"eshrq    $dst, $src, $shift\\t# long (ndd)\" %}\n+  ins_encode %{\n+    __ eshrq($dst$$Register, $src$$Address, $shift$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8562,1 +9677,1 @@\n-  predicate(VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n+  predicate(!UseAPX && VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n@@ -8588,1 +9703,1 @@\n-  predicate(n->bottom_type()->basic_type() == T_INT);\n+  predicate(!UseAPX && n->bottom_type()->basic_type() == T_INT);\n@@ -8598,0 +9713,14 @@\n+\/\/ Rotate Left by variable\n+instruct rolI_rReg_Var_ndd(rRegI dst, rRegI src, rcx_RegI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && n->bottom_type()->basic_type() == T_INT);\n+  match(Set dst (RotateLeft src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"eroll    $dst, $src, $shift\\t# rotate left (int ndd)\" %}\n+  ins_encode %{\n+    __ eroll($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -8614,1 +9743,1 @@\n-  predicate(VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n+  predicate(!UseAPX && VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_INT);\n@@ -8638,1 +9767,1 @@\n-  predicate(n->bottom_type()->basic_type() == T_INT);\n+  predicate(!UseAPX && n->bottom_type()->basic_type() == T_INT);\n@@ -8648,0 +9777,14 @@\n+\/\/ Rotate Right by variable\n+instruct rorI_rReg_Var_ndd(rRegI dst, rRegI src, rcx_RegI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && n->bottom_type()->basic_type() == T_INT);\n+  match(Set dst (RotateRight src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"erorl    $dst, $src, $shift\\t# rotate right(int ndd)\" %}\n+  ins_encode %{\n+    __ erorl($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -8663,1 +9806,1 @@\n-  predicate(VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n+  predicate(!UseAPX && VM_Version::supports_bmi2() && n->bottom_type()->basic_type() == T_LONG);\n@@ -8689,1 +9832,1 @@\n-  predicate(n->bottom_type()->basic_type() == T_LONG);\n+  predicate(!UseAPX && n->bottom_type()->basic_type() == T_LONG);\n@@ -8699,0 +9842,14 @@\n+\/\/ Rotate Left by variable\n+instruct rolL_rReg_Var_ndd(rRegL dst, rRegL src, rcx_RegI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && n->bottom_type()->basic_type() == T_LONG);\n+  match(Set dst (RotateLeft src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"erolq    $dst, $src, $shift\\t# rotate left(long ndd)\" %}\n+  ins_encode %{\n+    __ erolq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -8739,1 +9896,1 @@\n-  predicate(n->bottom_type()->basic_type() == T_LONG);\n+  predicate(!UseAPX && n->bottom_type()->basic_type() == T_LONG);\n@@ -8749,0 +9906,14 @@\n+\/\/ Rotate Right by variable\n+instruct rorL_rReg_Var_ndd(rRegL dst, rRegL src, rcx_RegI shift, rFlagsReg cr)\n+%{\n+  predicate(UseAPX && n->bottom_type()->basic_type() == T_LONG);\n+  match(Set dst (RotateRight src shift));\n+  effect(KILL cr);\n+\n+  format %{ \"erorq    $dst, $src, $shift\\t# rotate right(long ndd)\" %}\n+  ins_encode %{\n+    __ erorq($dst$$Register, $src$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -8800,0 +9971,1 @@\n+  predicate(!UseAPX);\n@@ -8811,0 +9983,16 @@\n+\/\/ And Register with Register using New Data Destination (NDD)\n+instruct andI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandl     $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eandl($dst$$Register, $src1$$Register, $src2$$Register, false);\n+\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -8877,0 +10065,1 @@\n+  predicate(!UseAPX);\n@@ -8888,0 +10077,28 @@\n+instruct andI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eandl($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct andI_rReg_mem_imm_ndd(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eandl($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -8891,0 +10108,1 @@\n+  predicate(!UseAPX);\n@@ -8903,0 +10121,15 @@\n+instruct andI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndI src1 (LoadI src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"eandl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eandl($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -9075,0 +10308,1 @@\n+  predicate(!UseAPX);\n@@ -9086,0 +10320,15 @@\n+\/\/ Or Register with Register using New Data Destination (NDD)\n+instruct orI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorl     $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eorl($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -9089,1 +10338,44 @@\n-  match(Set dst (OrI dst src));\n+  predicate(!UseAPX);\n+  match(Set dst (OrI dst src));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"orl     $dst, $src\\t# int\" %}\n+  ins_encode %{\n+    __ orl($dst$$Register, $src$$constant);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct orI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorl     $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eorl($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct orI_rReg_imm_rReg_ndd(rRegI dst, immI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorl     $dst, $src2, $src1\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eorl($dst$$Register, $src2$$Register, $src1$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct orI_rReg_mem_imm_ndd(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrI (LoadI src1) src2));\n@@ -9093,1 +10385,1 @@\n-  format %{ \"orl     $dst, $src\\t# int\" %}\n+  format %{ \"eorl     $dst, $src1, $src2\\t# int ndd\" %}\n@@ -9095,1 +10387,1 @@\n-    __ orl($dst$$Register, $src$$constant);\n+    __ eorl($dst$$Register, $src1$$Address, $src2$$constant, false);\n@@ -9103,0 +10395,1 @@\n+  predicate(!UseAPX);\n@@ -9115,0 +10408,15 @@\n+instruct orI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrI src1 (LoadI src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"eorl     $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ eorl($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -9163,0 +10471,1 @@\n+  predicate(!UseAPX);\n@@ -9174,0 +10483,15 @@\n+\/\/ Xor Register with Register using New Data Destination (NDD)\n+instruct xorI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ exorl($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -9175,1 +10499,3 @@\n-instruct xorI_rReg_im1(rRegI dst, immI_M1 imm) %{\n+instruct xorI_rReg_im1(rRegI dst, immI_M1 imm)\n+%{\n+  predicate(!UseAPX);\n@@ -9178,1 +10504,1 @@\n-  format %{ \"not    $dst\" %}\n+  format %{ \"notl    $dst\" %}\n@@ -9185,0 +10511,12 @@\n+instruct xorI_rReg_im1_ndd(rRegI dst, rRegI src, immI_M1 imm)\n+%{\n+  match(Set dst (XorI src imm));\n+  predicate(UseAPX);\n+\n+  format %{ \"enotl    $dst, $src\" %}\n+  ins_encode %{\n+     __ enotl($dst$$Register, $src$$Register);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9188,0 +10526,1 @@\n+  predicate(!UseAPX);\n@@ -9199,0 +10538,29 @@\n+instruct xorI_rReg_rReg_imm_ndd(rRegI dst, rRegI src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorI src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ exorl($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+\/\/ Xor Memory with Immediate\n+instruct xorI_rReg_mem_imm_ndd(rRegI dst, memory src1, immI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ exorl($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9202,0 +10570,1 @@\n+  predicate(!UseAPX);\n@@ -9214,0 +10583,30 @@\n+instruct xorI_rReg_rReg_mem_ndd(rRegI dst, rRegI src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorI src1 (LoadI src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"exorl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ exorl($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct xorI_rReg_mem_rReg_ndd(rRegI dst, memory src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorI (LoadI src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"exorl    $dst, $src1, $src2\\t# int ndd\" %}\n+  ins_encode %{\n+    __ exorl($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -9265,0 +10664,1 @@\n+  predicate(!UseAPX);\n@@ -9276,0 +10676,16 @@\n+\/\/ And Register with Register using New Data Destination (NDD)\n+instruct andL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eandq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -9305,0 +10721,1 @@\n+  predicate(!UseAPX);\n@@ -9316,0 +10733,28 @@\n+instruct andL_rReg_rReg_imm_ndd(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eandq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct andL_rReg_mem_imm_ndd(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eandq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eandq($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9319,0 +10764,1 @@\n+  predicate(!UseAPX);\n@@ -9331,0 +10777,30 @@\n+instruct andL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndL src1 (LoadL src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"eandq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eandq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct andL_rReg_mem_rReg_ndd(rRegL dst, memory src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (AndL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"eandq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eandq($dst$$Register, $src1$$Address, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -9506,0 +10982,1 @@\n+  predicate(!UseAPX);\n@@ -9517,0 +10994,16 @@\n+\/\/ Or Register with Register using New Data Destination (NDD)\n+instruct orL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -9530,0 +11023,11 @@\n+instruct orL_rReg_castP2X_ndd(rRegL dst, any_RegP src1, any_RegP src2, rFlagsReg cr) %{\n+  match(Set dst (OrL src1 (CastP2X src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n@@ -9534,0 +11038,1 @@\n+  predicate(!UseAPX);\n@@ -9545,0 +11050,43 @@\n+instruct orL_rReg_rReg_imm_ndd(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct orL_rReg_imm_rReg_ndd(rRegL dst, immL32 src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorq     $dst, $src2, $src1\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src2$$Register, $src1$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+\/\/ Or Memory with Immediate\n+instruct orL_rReg_mem_imm_ndd(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"eorq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9548,0 +11096,1 @@\n+  predicate(!UseAPX);\n@@ -9560,0 +11109,15 @@\n+instruct orL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (OrL src1 (LoadL src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"eorq     $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ eorq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -9611,0 +11175,1 @@\n+  predicate(!UseAPX);\n@@ -9622,0 +11187,15 @@\n+\/\/ Xor Register with Register using New Data Destination (NDD)\n+instruct xorL_rReg_ndd(rRegL dst, rRegL src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ exorq($dst$$Register, $src1$$Register, $src2$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n@@ -9623,1 +11203,3 @@\n-instruct xorL_rReg_im1(rRegL dst, immL_M1 imm) %{\n+instruct xorL_rReg_im1(rRegL dst, immL_M1 imm)\n+%{\n+  predicate(!UseAPX);\n@@ -9633,0 +11215,12 @@\n+instruct xorL_rReg_im1_ndd(rRegL dst,rRegL src, immL_M1 imm)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL src imm));\n+\n+  format %{ \"enotq   $dst, $src\" %}\n+  ins_encode %{\n+     __ enotq($dst$$Register, $src$$Register);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9636,0 +11230,1 @@\n+  predicate(!UseAPX);\n@@ -9647,0 +11242,29 @@\n+instruct xorL_rReg_rReg_imm(rRegL dst, rRegL src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL src1 src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ exorq($dst$$Register, $src1$$Register, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+\/\/ Xor Memory with Immediate\n+instruct xorL_rReg_mem_imm(rRegL dst, memory src1, immL32 src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  format %{ \"exorq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ exorq($dst$$Register, $src1$$Address, $src2$$constant, false);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n@@ -9650,0 +11274,1 @@\n+  predicate(!UseAPX);\n@@ -9662,0 +11287,30 @@\n+instruct xorL_rReg_rReg_mem_ndd(rRegL dst, rRegL src1, memory src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL src1 (LoadL src2)));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"exorq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ exorq($dst$$Register, $src1$$Register, $src2$$Address, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n+instruct xorL_rReg_mem_rReg_ndd(rRegL dst, memory src1, rRegL src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (XorL (LoadL src1) src2));\n+  effect(KILL cr);\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n+\n+  ins_cost(150);\n+  format %{ \"exorq    $dst, $src1, $src2\\t# long ndd\" %}\n+  ins_encode %{\n+    __ exorq($dst$$Register, $src1$$Address, $src1$$Register, false);\n+  %}\n+  ins_pipe(ialu_reg_mem);\n+%}\n+\n@@ -11975,0 +13630,1 @@\n+  predicate(!UseAPX);\n@@ -11984,0 +13640,11 @@\n+instruct cmovI_reg_g_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  effect(DEF dst, USE src1, USE src2, USE cr);\n+\n+  format %{ \"ecmovlgt $dst, $src1, $src2\\t# min ndd\" %}\n+  ins_encode %{\n+    __ ecmovl(Assembler::greater, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n@@ -11987,0 +13654,1 @@\n+  predicate(!UseAPX);\n@@ -11997,0 +13665,14 @@\n+instruct minI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MinI src1 src2));\n+  effect(DEF dst, USE src1, USE src2);\n+\n+  ins_cost(200);\n+  expand %{\n+    rFlagsReg cr;\n+    compI_rReg(cr, src1, src2);\n+    cmovI_reg_g_ndd(dst, src1, src2, cr);\n+  %}\n+%}\n+\n@@ -11999,0 +13681,1 @@\n+  predicate(!UseAPX);\n@@ -12008,0 +13691,11 @@\n+instruct cmovI_reg_l_ndd(rRegI dst, rRegI src1, rRegI src2, rFlagsReg cr)\n+%{\n+  predicate(UseAPX);\n+  effect(DEF dst, USE src1, USE src2, USE cr);\n+\n+  format %{ \"ecmovllt $dst, $src1, $src2\\t# max ndd\" %}\n+  ins_encode %{\n+    __ ecmovl(Assembler::less, $dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_cmov_reg);\n+%}\n@@ -12011,0 +13705,1 @@\n+  predicate(!UseAPX);\n@@ -12021,0 +13716,14 @@\n+instruct maxI_rReg_ndd(rRegI dst, rRegI src1, rRegI src2)\n+%{\n+  predicate(UseAPX);\n+  match(Set dst (MaxI src1 src2));\n+  effect(DEF dst, USE src1, USE src2);\n+\n+  ins_cost(200);\n+  expand %{\n+    rFlagsReg cr;\n+    compI_rReg(cr, src1, src2);\n+    cmovI_reg_l_ndd(dst, src1, src2, cr);\n+  %}\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":1742,"deletions":33,"binary":false,"changes":1775,"status":"modified"},{"patch":"@@ -269,96 +269,0 @@\n-    __ eaddl(r20, r24, 4096, true);                                             \/\/    {NF}add r20d, r24d, 4096    IID255\n-    __ eandl(r18, r26, 1048576, false);                                         \/\/    {EVEX}and r18d, r26d, 1048576    IID256\n-    __ eandl(r29, r13, 1, true);                                                \/\/    {NF}and r29d, r13d, 1    IID257\n-    __ eimull(rcx, r31, 65536, false);                                          \/\/    {EVEX}imul ecx, r31d, 65536    IID258\n-    __ eimull(r23, r29, 65536, true);                                           \/\/    {NF}imul r23d, r29d, 65536    IID259\n-    __ eorl(r23, r23, 1048576, false);                                          \/\/    {EVEX}or r23d, r23d, 1048576    IID260\n-    __ eorl(r21, r9, 268435456, true);                                          \/\/    {NF}or r21d, r9d, 268435456    IID261\n-    __ ercll(r13, rdx, 4);                                                      \/\/    {EVEX}rcl r13d, edx, 4    IID262\n-    __ eroll(r15, r31, 8, false);                                               \/\/    {EVEX}rol r15d, r31d, 8    IID263\n-    __ eroll(r8, r9, 2, true);                                                  \/\/    {NF}rol r8d, r9d, 2    IID264\n-    __ erorl(r9, r15, 8, false);                                                \/\/    {EVEX}ror r9d, r15d, 8    IID265\n-    __ erorl(r21, r12, 8, true);                                                \/\/    {NF}ror r21d, r12d, 8    IID266\n-    __ esall(r19, r27, 1, false);                                               \/\/    {EVEX}sal r19d, r27d, 1    IID267\n-    __ esall(r10, r11, 16, true);                                               \/\/    {NF}sal r10d, r11d, 16    IID268\n-    __ esarl(r8, rdx, 8, false);                                                \/\/    {EVEX}sar r8d, edx, 8    IID269\n-    __ esarl(r22, r30, 4, true);                                                \/\/    {NF}sar r22d, r30d, 4    IID270\n-    __ eshll(r25, r31, 16, false);                                              \/\/    {EVEX}shl r25d, r31d, 16    IID271\n-    __ eshll(r10, r9, 8, true);                                                 \/\/    {NF}shl r10d, r9d, 8    IID272\n-    __ eshrl(r13, r8, 4, false);                                                \/\/    {EVEX}shr r13d, r8d, 4    IID273\n-    __ eshrl(r16, r21, 16, true);                                               \/\/    {NF}shr r16d, r21d, 16    IID274\n-    __ esubl(r26, r23, 16777216, false);                                        \/\/    {EVEX}sub r26d, r23d, 16777216    IID275\n-    __ esubl(r26, r14, 1048576, true);                                          \/\/    {NF}sub r26d, r14d, 1048576    IID276\n-    __ exorl(r27, r26, 256, false);                                             \/\/    {EVEX}xor r27d, r26d, 256    IID277\n-    __ exorl(r22, r9, 1, true);                                                 \/\/    {NF}xor r22d, r9d, 1    IID278\n-    __ esubl_imm32(r22, r30, 268435456, false);                                 \/\/    {EVEX}sub r22d, r30d, 268435456    IID279\n-    __ esubl_imm32(r8, r16, 4194304, true);                                     \/\/    {NF}sub r8d, r16d, 4194304    IID280\n-    __ eaddl(r20, r29, Address(r11, r12, (Address::ScaleFactor)1, +0xac0980), false); \/\/    {EVEX}add r20d, r29d, dword ptr [r11+r12*2+0xac0980]    IID281\n-    __ eaddl(r18, rbx, Address(r9, r18, (Address::ScaleFactor)1, +0x434a125d), true); \/\/    {NF}add r18d, ebx, dword ptr [r9+r18*2+0x434a125d]    IID282\n-    __ eandl(r14, r15, Address(r14, r19, (Address::ScaleFactor)2, +0x15a5a5ee), false); \/\/    {EVEX}and r14d, r15d, dword ptr [r14+r19*4+0x15a5a5ee]    IID283\n-    __ eandl(r28, r31, Address(r24, r12, (Address::ScaleFactor)3, -0x6d6d7e68), true); \/\/    {NF}and r28d, r31d, dword ptr [r24+r12*8-0x6d6d7e68]    IID284\n-    __ eimull(r24, r13, Address(r24, r25, (Address::ScaleFactor)3, +0x784673fd), false); \/\/    {EVEX}imul r24d, r13d, dword ptr [r24+r25*8+0x784673fd]    IID285\n-    __ eimull(r24, r21, Address(r8, r13, (Address::ScaleFactor)2, -0x63663889), true); \/\/    {NF}imul r24d, r21d, dword ptr [r8+r13*4-0x63663889]    IID286\n-    __ eorl(r12, r24, Address(r30, -0x67526556), false);                        \/\/    {EVEX}or r12d, r24d, dword ptr [r30-0x67526556]    IID287\n-    __ eorl(r13, r13, Address(rbx, r25, (Address::ScaleFactor)2, -0x5f394dd9), true); \/\/    {NF}or r13d, r13d, dword ptr [rbx+r25*4-0x5f394dd9]    IID288\n-    __ esubl(r26, r25, Address(r25, rdx, (Address::ScaleFactor)3, -0x2e39f79a), false); \/\/    {EVEX}sub r26d, r25d, dword ptr [r25+rdx*8-0x2e39f79a]    IID289\n-    __ esubl(r28, r8, Address(rdx, r24, (Address::ScaleFactor)3, -0xed99a54), true); \/\/    {NF}sub r28d, r8d, dword ptr [rdx+r24*8-0xed99a54]    IID290\n-    __ exorl(r31, r22, Address(r30, r20, (Address::ScaleFactor)3, +0x3ac41cbd), false); \/\/    {EVEX}xor r31d, r22d, dword ptr [r30+r20*8+0x3ac41cbd]    IID291\n-    __ exorl(r24, r30, Address(r13, r17, (Address::ScaleFactor)1, +0x1efdc2e3), true); \/\/    {NF}xor r24d, r30d, dword ptr [r13+r17*2+0x1efdc2e3]    IID292\n-    __ exorb(r16, r16, Address(r9, r15, (Address::ScaleFactor)1, +0x769feb34), false); \/\/    {EVEX}xor r16b, r16b, byte ptr [r9+r15*2+0x769feb34]    IID293\n-    __ exorb(r19, r25, Address(r10, +0x2239b429), true);                        \/\/    {NF}xor r19b, r25b, byte ptr [r10+0x2239b429]    IID294\n-    __ exorw(r25, r19, Address(r16, r24, (Address::ScaleFactor)1, +0x1c71faea), false); \/\/    {EVEX}xor r25w, r19w, word ptr [r16+r24*2+0x1c71faea]    IID295\n-    __ exorw(r19, r10, Address(r28, -0x299a0cfd), true);                        \/\/    {NF}xor r19w, r10w, word ptr [r28-0x299a0cfd]    IID296\n-    __ eaddl(rbx, r23, r24, false);                                             \/\/    {load}{EVEX}add ebx, r23d, r24d    IID297\n-    __ eaddl(r28, r14, r24, true);                                              \/\/    {load}{NF}add r28d, r14d, r24d    IID298\n-    __ eandl(r30, r31, r26, false);                                             \/\/    {load}{EVEX}and r30d, r31d, r26d    IID299\n-    __ eandl(r12, r31, r23, true);                                              \/\/    {load}{NF}and r12d, r31d, r23d    IID300\n-    __ eimull(r9, r20, r10, false);                                             \/\/    {load}{EVEX}imul r9d, r20d, r10d    IID301\n-    __ eimull(r13, r30, r9, true);                                              \/\/    {load}{NF}imul r13d, r30d, r9d    IID302\n-    __ eorw(r25, r19, r23, false);                                              \/\/    {load}{EVEX}or r25w, r19w, r23w    IID303\n-    __ eorw(r12, r16, rdx, true);                                               \/\/    {load}{NF}or r12w, r16w, dx    IID304\n-    __ eorl(r31, r17, r9, false);                                               \/\/    {load}{EVEX}or r31d, r17d, r9d    IID305\n-    __ eorl(r15, r13, rbx, true);                                               \/\/    {load}{NF}or r15d, r13d, ebx    IID306\n-    __ eshldl(r28, rbx, r29, false);                                            \/\/    {load}{EVEX}shld r28d, ebx, r29d, cl    IID307\n-    __ eshldl(r22, rbx, r8, true);                                              \/\/    {load}{NF}shld r22d, ebx, r8d, cl    IID308\n-    __ eshrdl(r8, r11, r16, false);                                             \/\/    {load}{EVEX}shrd r8d, r11d, r16d, cl    IID309\n-    __ eshrdl(r13, r12, r15, true);                                             \/\/    {load}{NF}shrd r13d, r12d, r15d, cl    IID310\n-    __ esubl(r17, r23, r31, false);                                             \/\/    {load}{EVEX}sub r17d, r23d, r31d    IID311\n-    __ esubl(r20, r22, r26, true);                                              \/\/    {load}{NF}sub r20d, r22d, r26d    IID312\n-    __ exorl(r10, r25, r19, false);                                             \/\/    {load}{EVEX}xor r10d, r25d, r19d    IID313\n-    __ exorl(r11, r19, r30, true);                                              \/\/    {load}{NF}xor r11d, r19d, r30d    IID314\n-    __ eshldl(r12, r10, rdx, 1, false);                                         \/\/    {EVEX}shld r12d, r10d, edx, 1    IID315\n-    __ eshldl(r20, r30, r18, 16, true);                                         \/\/    {NF}shld r20d, r30d, r18d, 16    IID316\n-    __ eshrdl(r18, r25, r18, 8, false);                                         \/\/    {EVEX}shrd r18d, r25d, r18d, 8    IID317\n-    __ eshrdl(r19, r16, r25, 1, true);                                          \/\/    {NF}shrd r19d, r16d, r25d, 1    IID318\n-    __ ecmovl (Assembler::Condition::overflow, r11, r31, r24);                  \/\/    cmovo r11d, r31d, r24d    IID319\n-    __ ecmovl (Assembler::Condition::noOverflow, r14, r30, r16);                \/\/    cmovno r14d, r30d, r16d    IID320\n-    __ ecmovl (Assembler::Condition::below, r9, r11, r26);                      \/\/    cmovb r9d, r11d, r26d    IID321\n-    __ ecmovl (Assembler::Condition::aboveEqual, r27, rdx, r31);                \/\/    cmovae r27d, edx, r31d    IID322\n-    __ ecmovl (Assembler::Condition::zero, r24, r29, r10);                      \/\/    cmovz r24d, r29d, r10d    IID323\n-    __ ecmovl (Assembler::Condition::notZero, rcx, r21, r15);                   \/\/    cmovnz ecx, r21d, r15d    IID324\n-    __ ecmovl (Assembler::Condition::belowEqual, r23, r17, r26);                \/\/    cmovbe r23d, r17d, r26d    IID325\n-    __ ecmovl (Assembler::Condition::above, r20, r27, r13);                     \/\/    cmova r20d, r27d, r13d    IID326\n-    __ ecmovl (Assembler::Condition::negative, r15, r22, r15);                  \/\/    cmovs r15d, r22d, r15d    IID327\n-    __ ecmovl (Assembler::Condition::positive, r29, r26, r18);                  \/\/    cmovns r29d, r26d, r18d    IID328\n-    __ ecmovl (Assembler::Condition::parity, r9, r9, r22);                      \/\/    cmovp r9d, r9d, r22d    IID329\n-    __ ecmovl (Assembler::Condition::noParity, r30, r23, r11);                  \/\/    cmovnp r30d, r23d, r11d    IID330\n-    __ ecmovl (Assembler::Condition::less, r20, r11, rbx);                      \/\/    cmovl r20d, r11d, ebx    IID331\n-    __ ecmovl (Assembler::Condition::greaterEqual, r28, r16, r20);              \/\/    cmovge r28d, r16d, r20d    IID332\n-    __ ecmovl (Assembler::Condition::lessEqual, r17, r24, r22);                 \/\/    cmovle r17d, r24d, r22d    IID333\n-    __ ecmovl (Assembler::Condition::greater, r16, r15, r15);                   \/\/    cmovg r16d, r15d, r15d    IID334\n-    __ ecmovl (Assembler::Condition::overflow, r28, r25, Address(r29, r16, (Address::ScaleFactor)2, -0x3c9110ad)); \/\/    cmovo r28d, r25d, dword ptr [r29+r16*4-0x3c9110ad]    IID335\n-    __ ecmovl (Assembler::Condition::noOverflow, r23, r15, Address(rbx, r30, (Address::ScaleFactor)3, +0x1cbc58bd)); \/\/    cmovno r23d, r15d, dword ptr [rbx+r30*8+0x1cbc58bd]    IID336\n-    __ ecmovl (Assembler::Condition::below, r26, rbx, Address(r12, rcx, (Address::ScaleFactor)3, +0x84e581a)); \/\/    cmovb r26d, ebx, dword ptr [r12+rcx*8+0x84e581a]    IID337\n-    __ ecmovl (Assembler::Condition::aboveEqual, rcx, r24, Address(r17, +0x5cece92d)); \/\/    cmovae ecx, r24d, dword ptr [r17+0x5cece92d]    IID338\n-    __ ecmovl (Assembler::Condition::zero, r26, r24, Address(r24, r12, (Address::ScaleFactor)3, +0x507746a2)); \/\/    cmovz r26d, r24d, dword ptr [r24+r12*8+0x507746a2]    IID339\n-    __ ecmovl (Assembler::Condition::notZero, r8, r15, Address(rcx, r19, (Address::ScaleFactor)0, -0xf035c76)); \/\/    cmovnz r8d, r15d, dword ptr [rcx+r19*1-0xf035c76]    IID340\n-    __ ecmovl (Assembler::Condition::belowEqual, rdx, r23, Address(r22, r27, (Address::ScaleFactor)0, -0x12fe3534)); \/\/    cmovbe edx, r23d, dword ptr [r22+r27*1-0x12fe3534]    IID341\n-    __ ecmovl (Assembler::Condition::above, r30, r19, Address(r13, r28, (Address::ScaleFactor)0, +0x73b8ee9d)); \/\/    cmova r30d, r19d, dword ptr [r13+r28*1+0x73b8ee9d]    IID342\n-    __ ecmovl (Assembler::Condition::negative, r22, r30, Address(r16, rcx, (Address::ScaleFactor)0, +0x22aac146)); \/\/    cmovs r22d, r30d, dword ptr [r16+rcx*1+0x22aac146]    IID343\n-    __ ecmovl (Assembler::Condition::positive, r17, r30, Address(r17, r9, (Address::ScaleFactor)2, +0x79db2b1)); \/\/    cmovns r17d, r30d, dword ptr [r17+r9*4+0x79db2b1]    IID344\n-    __ ecmovl (Assembler::Condition::parity, r26, rdx, Address(r14, r16, (Address::ScaleFactor)1, -0x8242011)); \/\/    cmovp r26d, edx, dword ptr [r14+r16*2-0x8242011]    IID345\n-    __ ecmovl (Assembler::Condition::noParity, r11, r19, Address(r14, r31, (Address::ScaleFactor)1, -0x4ff251cc)); \/\/    cmovnp r11d, r19d, dword ptr [r14+r31*2-0x4ff251cc]    IID346\n-    __ ecmovl (Assembler::Condition::less, r20, r18, Address(r13, r16, (Address::ScaleFactor)2, -0x19efc6e2)); \/\/    cmovl r20d, r18d, dword ptr [r13+r16*4-0x19efc6e2]    IID347\n-    __ ecmovl (Assembler::Condition::greaterEqual, r19, r13, Address(r13, r23, (Address::ScaleFactor)1, +0x611b7714)); \/\/    cmovge r19d, r13d, dword ptr [r13+r23*2+0x611b7714]    IID348\n-    __ ecmovl (Assembler::Condition::lessEqual, r29, r13, Address(r17, r17, (Address::ScaleFactor)3, +0x3a94a93f)); \/\/    cmovle r29d, r13d, dword ptr [r17+r17*8+0x3a94a93f]    IID349\n-    __ ecmovl (Assembler::Condition::greater, r13, r29, Address(r15, r23, (Address::ScaleFactor)1, +0x76d43532)); \/\/    cmovg r13d, r29d, dword ptr [r15+r23*2+0x76d43532]    IID350\n@@ -366,0 +270,1 @@\n+    __ eaddl(rax, rbx, 65536, false);                                           \/\/    {EVEX}add eax, ebx, 65536    IID255\n@@ -367,310 +272,467 @@\n-    __ adcq(r15, r13);                                                          \/\/    {load}adc r15, r13    IID351\n-    __ cmpq(r9, r12);                                                           \/\/    {load}cmp r9, r12    IID352\n-    __ imulq(r15, r21);                                                         \/\/    {load}imul r15, r21    IID353\n-    __ popcntq(r12, r9);                                                        \/\/    {load}popcnt r12, r9    IID354\n-    __ sbbq(r17, r23);                                                          \/\/    {load}sbb r17, r23    IID355\n-    __ subq(rdx, r16);                                                          \/\/    {load}sub rdx, r16    IID356\n-    __ tzcntq(r29, r10);                                                        \/\/    {load}tzcnt r29, r10    IID357\n-    __ lzcntq(r21, r17);                                                        \/\/    {load}lzcnt r21, r17    IID358\n-    __ addq(r29, r18);                                                          \/\/    {load}add r29, r18    IID359\n-    __ andq(r28, r24);                                                          \/\/    {load}and r28, r24    IID360\n-    __ orq(r10, r20);                                                           \/\/    {load}or r10, r20    IID361\n-    __ xorq(r27, r10);                                                          \/\/    {load}xor r27, r10    IID362\n-    __ movq(r14, r11);                                                          \/\/    {load}mov r14, r11    IID363\n-    __ bsfq(r27, rcx);                                                          \/\/    {load}bsf r27, rcx    IID364\n-    __ bsrq(r22, r15);                                                          \/\/    {load}bsr r22, r15    IID365\n-    __ btq(r31, r30);                                                           \/\/    {load}bt r31, r30    IID366\n-    __ xchgq(r19, r19);                                                         \/\/    {load}xchg r19, r19    IID367\n-    __ testq(r26, r21);                                                         \/\/    {load}test r26, r21    IID368\n-    __ addq(Address(r26, r20, (Address::ScaleFactor)1, -0x4096149c), r14);      \/\/    add qword ptr [r26+r20*2-0x4096149c], r14    IID369\n-    __ andq(Address(r28, r20, (Address::ScaleFactor)2, +0x1bd8898a), r23);      \/\/    and qword ptr [r28+r20*4+0x1bd8898a], r23    IID370\n-    __ cmpq(Address(r15, r19, (Address::ScaleFactor)2, +0x39eee631), r10);      \/\/    cmp qword ptr [r15+r19*4+0x39eee631], r10    IID371\n-    __ orq(Address(r13, rdx, (Address::ScaleFactor)3, +0x1a49859), r13);        \/\/    or qword ptr [r13+rdx*8+0x1a49859], r13    IID372\n-    __ xorq(Address(r21, +0x5fe8636), r24);                                     \/\/    xor qword ptr [r21+0x5fe8636], r24    IID373\n-    __ subq(Address(r30, r23, (Address::ScaleFactor)2, -0x56643cc1), r25);      \/\/    sub qword ptr [r30+r23*4-0x56643cc1], r25    IID374\n-    __ movq(Address(r21, r26, (Address::ScaleFactor)3, +0x7e8544ab), r31);      \/\/    mov qword ptr [r21+r26*8+0x7e8544ab], r31    IID375\n-    __ xaddq(Address(rcx, r24, (Address::ScaleFactor)3, -0x79ca4889), rbx);     \/\/    xadd qword ptr [rcx+r24*8-0x79ca4889], rbx    IID376\n-    __ andq(Address(r13, r31, (Address::ScaleFactor)3, -0xd72b030), 256);       \/\/    and qword ptr [r13+r31*8-0xd72b030], 256    IID377\n-    __ addq(Address(r16, +0x534d775e), 268435456);                              \/\/    add qword ptr [r16+0x534d775e], 268435456    IID378\n-    __ cmpq(Address(r20, r15, (Address::ScaleFactor)2, -0x7cb22277), 268435456); \/\/    cmp qword ptr [r20+r15*4-0x7cb22277], 268435456    IID379\n-    __ sarq(Address(r9, r23, (Address::ScaleFactor)2, -0x72f6d86e), 4);         \/\/    sar qword ptr [r9+r23*4-0x72f6d86e], 4    IID380\n-    __ salq(Address(r11, r24, (Address::ScaleFactor)1, -0x22826f95), 4);        \/\/    sal qword ptr [r11+r24*2-0x22826f95], 4    IID381\n-    __ sbbq(Address(r14, r30, (Address::ScaleFactor)1, +0x1b43fc34), 268435456); \/\/    sbb qword ptr [r14+r30*2+0x1b43fc34], 268435456    IID382\n-    __ shrq(Address(r26, r21, (Address::ScaleFactor)0, -0x3bae50c3), 8);        \/\/    shr qword ptr [r26+r21*1-0x3bae50c3], 8    IID383\n-    __ subq(Address(r22, r10, (Address::ScaleFactor)3, +0x47e1403), 65536);     \/\/    sub qword ptr [r22+r10*8+0x47e1403], 65536    IID384\n-    __ xorq(Address(rdx, r19, (Address::ScaleFactor)3, -0x644a5318), 1);        \/\/    xor qword ptr [rdx+r19*8-0x644a5318], 1    IID385\n-    __ orq(Address(r30, r31, (Address::ScaleFactor)1, +0x2c93c783), 256);       \/\/    or qword ptr [r30+r31*2+0x2c93c783], 256    IID386\n-    __ movq(Address(r26, r24, (Address::ScaleFactor)2, -0x534785f), 65536);     \/\/    mov qword ptr [r26+r24*4-0x534785f], 65536    IID387\n-    __ testq(Address(r14, r30, (Address::ScaleFactor)1, +0x3932e147), -256);    \/\/    test qword ptr [r14+r30*2+0x3932e147], -256    IID388\n-    __ addq(r30, Address(r30, r24, (Address::ScaleFactor)3, -0x66e0235e));      \/\/    add r30, qword ptr [r30+r24*8-0x66e0235e]    IID389\n-    __ andq(r15, Address(r26, +0x36456e42));                                    \/\/    and r15, qword ptr [r26+0x36456e42]    IID390\n-    __ cmpq(r10, Address(r18, +0x5044bed));                                     \/\/    cmp r10, qword ptr [r18+0x5044bed]    IID391\n-    __ lzcntq(r31, Address(r12, rdx, (Address::ScaleFactor)2, -0x1707b7d4));    \/\/    lzcnt r31, qword ptr [r12+rdx*4-0x1707b7d4]    IID392\n-    __ orq(r16, Address(r20, r23, (Address::ScaleFactor)2, -0x26783729));       \/\/    or r16, qword ptr [r20+r23*4-0x26783729]    IID393\n-    __ adcq(r31, Address(r30, r31, (Address::ScaleFactor)0, +0x1ec3265d));      \/\/    adc r31, qword ptr [r30+r31*1+0x1ec3265d]    IID394\n-    __ imulq(r16, Address(rdx, r26, (Address::ScaleFactor)0, +0x3586831b));     \/\/    imul r16, qword ptr [rdx+r26*1+0x3586831b]    IID395\n-    __ popcntq(r12, Address(r18, -0x3c3e9f7a));                                 \/\/    popcnt r12, qword ptr [r18-0x3c3e9f7a]    IID396\n-    __ sbbq(rcx, Address(r8, r21, (Address::ScaleFactor)3, +0x6b1515ab));       \/\/    sbb rcx, qword ptr [r8+r21*8+0x6b1515ab]    IID397\n-    __ subq(r29, Address(rcx, r23, (Address::ScaleFactor)2, +0x4ff06c4d));      \/\/    sub r29, qword ptr [rcx+r23*4+0x4ff06c4d]    IID398\n-    __ tzcntq(r26, Address(r24, r10, (Address::ScaleFactor)1, -0x75d9a189));    \/\/    tzcnt r26, qword ptr [r24+r10*2-0x75d9a189]    IID399\n-    __ xorq(r17, Address(rbx, rbx, (Address::ScaleFactor)0, +0x4033d59c));      \/\/    xor r17, qword ptr [rbx+rbx*1+0x4033d59c]    IID400\n-    __ movq(r18, Address(r22, r12, (Address::ScaleFactor)3, -0x3893347d));      \/\/    mov r18, qword ptr [r22+r12*8-0x3893347d]    IID401\n-    __ leaq(r12, Address(r20, r23, (Address::ScaleFactor)3, +0x4b311560));      \/\/    lea r12, qword ptr [r20+r23*8+0x4b311560]    IID402\n-    __ cvttsd2siq(r29, Address(r10, r28, (Address::ScaleFactor)2, +0x5c3a2657)); \/\/    cvttsd2si r29, qword ptr [r10+r28*4+0x5c3a2657]    IID403\n-    __ xchgq(r22, Address(r13, r25, (Address::ScaleFactor)3, +0x1a3d6f3f));     \/\/    xchg r22, qword ptr [r13+r25*8+0x1a3d6f3f]    IID404\n-    __ testq(r25, Address(r17, r24, (Address::ScaleFactor)3, -0x35addbd8));     \/\/    test r25, qword ptr [r17+r24*8-0x35addbd8]    IID405\n-    __ addq(r18, 1);                                                            \/\/    add r18, 1    IID406\n-    __ andq(r13, 16777216);                                                     \/\/    and r13, 16777216    IID407\n-    __ adcq(r13, 65536);                                                        \/\/    adc r13, 65536    IID408\n-    __ cmpq(r10, 65536);                                                        \/\/    cmp r10, 65536    IID409\n-    __ rclq(r20, 2);                                                            \/\/    rcl r20, 2    IID410\n-    __ rcrq(r9, 16);                                                            \/\/    rcr r9, 16    IID411\n-    __ rolq(r8, 1);                                                             \/\/    rol r8, 1    IID412\n-    __ rorq(r25, 2);                                                            \/\/    ror r25, 2    IID413\n-    __ sarq(r22, 8);                                                            \/\/    sar r22, 8    IID414\n-    __ salq(r17, 1);                                                            \/\/    sal r17, 1    IID415\n-    __ sbbq(r31, 16);                                                           \/\/    sbb r31, 16    IID416\n-    __ shlq(r27, 4);                                                            \/\/    shl r27, 4    IID417\n-    __ shrq(r28, 2);                                                            \/\/    shr r28, 2    IID418\n-    __ subq(rcx, 16777216);                                                     \/\/    sub rcx, 16777216    IID419\n-    __ xorq(r27, 1048576);                                                      \/\/    xor r27, 1048576    IID420\n-    __ movq(r20, 268435456);                                                    \/\/    mov r20, 268435456    IID421\n-    __ mov64(r27, 4503599627370496);                                            \/\/    mov r27, 4503599627370496    IID422\n-    __ btq(r22, 4);                                                             \/\/    bt r22, 4    IID423\n-    __ testq(r8, -4096);                                                        \/\/    test r8, -4096    IID424\n-    __ orq_imm32(r28, 1048576);                                                 \/\/    or r28, 1048576    IID425\n-    __ subq_imm32(r13, 65536);                                                  \/\/    sub r13, 65536    IID426\n-    __ cmovq(Assembler::Condition::overflow, r16, Address(r16, -0x1389a3eb));   \/\/    cmovo r16, qword ptr [r16-0x1389a3eb]    IID427\n-    __ cmovq(Assembler::Condition::noOverflow, rbx, Address(r29, r8, (Address::ScaleFactor)0, +0x1d022615)); \/\/    cmovno rbx, qword ptr [r29+r8*1+0x1d022615]    IID428\n-    __ cmovq(Assembler::Condition::below, rdx, Address(r12, r28, (Address::ScaleFactor)1, -0x34c898e2)); \/\/    cmovb rdx, qword ptr [r12+r28*2-0x34c898e2]    IID429\n-    __ cmovq(Assembler::Condition::aboveEqual, r27, Address(r10, rcx, (Address::ScaleFactor)3, -0x1ef7abf1)); \/\/    cmovae r27, qword ptr [r10+rcx*8-0x1ef7abf1]    IID430\n-    __ cmovq(Assembler::Condition::zero, r14, Address(r13, r29, (Address::ScaleFactor)2, -0x7c4c8369)); \/\/    cmovz r14, qword ptr [r13+r29*4-0x7c4c8369]    IID431\n-    __ cmovq(Assembler::Condition::notZero, r15, Address(r23, rcx, (Address::ScaleFactor)2, -0x6bd22ccf)); \/\/    cmovnz r15, qword ptr [r23+rcx*4-0x6bd22ccf]    IID432\n-    __ cmovq(Assembler::Condition::belowEqual, r24, Address(r15, r10, (Address::ScaleFactor)1, -0x7ffb3d09)); \/\/    cmovbe r24, qword ptr [r15+r10*2-0x7ffb3d09]    IID433\n-    __ cmovq(Assembler::Condition::above, r23, Address(r11, +0x276a863b));      \/\/    cmova r23, qword ptr [r11+0x276a863b]    IID434\n-    __ cmovq(Assembler::Condition::negative, r28, Address(r29, +0x3fb4396e));   \/\/    cmovs r28, qword ptr [r29+0x3fb4396e]    IID435\n-    __ cmovq(Assembler::Condition::positive, r26, Address(r27, rcx, (Address::ScaleFactor)3, +0x4ddea61c)); \/\/    cmovns r26, qword ptr [r27+rcx*8+0x4ddea61c]    IID436\n-    __ cmovq(Assembler::Condition::parity, r10, Address(r22, r19, (Address::ScaleFactor)1, +0x2a126966)); \/\/    cmovp r10, qword ptr [r22+r19*2+0x2a126966]    IID437\n-    __ cmovq(Assembler::Condition::noParity, r12, Address(r10, +0x3d7c59f));    \/\/    cmovnp r12, qword ptr [r10+0x3d7c59f]    IID438\n-    __ cmovq(Assembler::Condition::less, r10, Address(r8, r8, (Address::ScaleFactor)3, -0xe61862d)); \/\/    cmovl r10, qword ptr [r8+r8*8-0xe61862d]    IID439\n-    __ cmovq(Assembler::Condition::greaterEqual, r23, Address(r29, -0x777ed96d)); \/\/    cmovge r23, qword ptr [r29-0x777ed96d]    IID440\n-    __ cmovq(Assembler::Condition::lessEqual, rcx, Address(rbx, r19, (Address::ScaleFactor)1, +0x53c601cb)); \/\/    cmovle rcx, qword ptr [rbx+r19*2+0x53c601cb]    IID441\n-    __ cmovq(Assembler::Condition::greater, r14, Address(r17, rbx, (Address::ScaleFactor)0, -0x768bf073)); \/\/    cmovg r14, qword ptr [r17+rbx*1-0x768bf073]    IID442\n-    __ call(r29);                                                               \/\/    call r29    IID443\n-    __ divq(r10);                                                               \/\/    div r10    IID444\n-    __ idivq(r19);                                                              \/\/    idiv r19    IID445\n-    __ imulq(r15);                                                              \/\/    imul r15    IID446\n-    __ mulq(r27);                                                               \/\/    mul r27    IID447\n-    __ negq(r20);                                                               \/\/    neg r20    IID448\n-    __ notq(r10);                                                               \/\/    not r10    IID449\n-    __ rolq(r16);                                                               \/\/    rol r16, cl    IID450\n-    __ rorq(r27);                                                               \/\/    ror r27, cl    IID451\n-    __ sarq(r9);                                                                \/\/    sar r9, cl    IID452\n-    __ salq(r13);                                                               \/\/    sal r13, cl    IID453\n-    __ shlq(r14);                                                               \/\/    shl r14, cl    IID454\n-    __ shrq(r18);                                                               \/\/    shr r18, cl    IID455\n-    __ incrementq(r28);                                                         \/\/    inc r28    IID456\n-    __ decrementq(r28);                                                         \/\/    dec r28    IID457\n-    __ pushp(r22);                                                              \/\/    pushp r22    IID458\n-    __ popp(r8);                                                                \/\/    popp r8    IID459\n-    __ call(Address(r12, +0x64cc424e));                                         \/\/    call qword ptr [r12+0x64cc424e]    IID460\n-    __ mulq(Address(r26, r29, (Address::ScaleFactor)0, -0x466f085f));           \/\/    mul qword ptr [r26+r29*1-0x466f085f]    IID461\n-    __ negq(Address(r21, r24, (Address::ScaleFactor)0, +0x2037df0b));           \/\/    neg qword ptr [r21+r24*1+0x2037df0b]    IID462\n-    __ sarq(Address(r12, r31, (Address::ScaleFactor)3, -0x57d225aa));           \/\/    sar qword ptr [r12+r31*8-0x57d225aa], cl    IID463\n-    __ salq(Address(r20, -0x1ea02f90));                                         \/\/    sal qword ptr [r20-0x1ea02f90], cl    IID464\n-    __ shrq(Address(r13, r20, (Address::ScaleFactor)3, +0x171081f2));           \/\/    shr qword ptr [r13+r20*8+0x171081f2], cl    IID465\n-    __ incrementq(Address(r31, +0x13a808db));                                   \/\/    inc qword ptr [r31+0x13a808db]    IID466\n-    __ decrementq(Address(r19, -0x180d3ea1));                                   \/\/    dec qword ptr [r19-0x180d3ea1]    IID467\n-    __ imulq(r17, Address(r16, -0x2af2fd58), 4096);                             \/\/    imul r17, qword ptr [r16-0x2af2fd58], 4096    IID468\n-    __ imulq(r28, r25, 16);                                                     \/\/    imul r28, r25, 16    IID469\n-    __ shldq(r27, r13, 16);                                                     \/\/    shld r27, r13, 16    IID470\n-    __ shrdq(r8, r10, 16);                                                      \/\/    shrd r8, r10, 16    IID471\n-    __ pop2(r14, r8);                                                           \/\/    {load}pop2 r8, r14    IID472\n-    __ pop2p(r18, rbx);                                                         \/\/    {load}pop2p rbx, r18    IID473\n-    __ push2(r23, r19);                                                         \/\/    {load}push2 r19, r23    IID474\n-    __ push2p(r12, rbx);                                                        \/\/    {load}push2p rbx, r12    IID475\n-    __ movzbq(r9, Address(r14, r23, (Address::ScaleFactor)3, -0x428d2646));     \/\/    movzx r9, byte ptr [r14+r23*8-0x428d2646]    IID476\n-    __ movzwq(r28, Address(r9, rcx, (Address::ScaleFactor)2, -0x72611661));     \/\/    movzx r28, word ptr [r9+rcx*4-0x72611661]    IID477\n-    __ movsbq(rbx, Address(r24, r21, (Address::ScaleFactor)2, +0x3a6be990));    \/\/    movsx rbx, byte ptr [r24+r21*4+0x3a6be990]    IID478\n-    __ movswq(r16, Address(r22, r10, (Address::ScaleFactor)0, +0x7ef8bdd));     \/\/    movsx r16, word ptr [r22+r10*1+0x7ef8bdd]    IID479\n-    __ movzbq(r28, r14);                                                        \/\/    movzx r28, r14b    IID480\n-    __ movzwq(r13, r28);                                                        \/\/    movzx r13, r28w    IID481\n-    __ movsbq(r11, rdx);                                                        \/\/    movsx r11, dl    IID482\n-    __ movswq(r12, r26);                                                        \/\/    movsx r12, r26w    IID483\n-    __ cmpxchgq(r20, Address(r10, -0xbd2a8da));                                 \/\/    cmpxchg qword ptr [r10-0xbd2a8da], r20    IID484\n-    __ eidivq(r15, false);                                                      \/\/    {EVEX}idiv r15    IID485\n-    __ eidivq(r23, true);                                                       \/\/    {NF}idiv r23    IID486\n-    __ edivq(r14, false);                                                       \/\/    {EVEX}div r14    IID487\n-    __ edivq(r14, true);                                                        \/\/    {NF}div r14    IID488\n-    __ eimulq(r15, false);                                                      \/\/    {EVEX}imul r15    IID489\n-    __ eimulq(r20, true);                                                       \/\/    {NF}imul r20    IID490\n-    __ emulq(rcx, false);                                                       \/\/    {EVEX}mul rcx    IID491\n-    __ emulq(r21, true);                                                        \/\/    {NF}mul r21    IID492\n-    __ emulq(Address(r16, r10, (Address::ScaleFactor)3, +0x5f66ac1e), false);   \/\/    {EVEX}mul qword ptr [r16+r10*8+0x5f66ac1e]    IID493\n-    __ emulq(Address(r21, r22, (Address::ScaleFactor)3, -0xbbc807d), true);     \/\/    {NF}mul qword ptr [r21+r22*8-0xbbc807d]    IID494\n-    __ eimulq(r22, r26, false);                                                 \/\/    {EVEX}imul r22, r26    IID495\n-    __ eimulq(r25, r21, true);                                                  \/\/    {NF}imul r25, r21    IID496\n-    __ elzcntq(r20, r13, false);                                                \/\/    {EVEX}lzcnt r20, r13    IID497\n-    __ elzcntq(r25, r19, true);                                                 \/\/    {NF}lzcnt r25, r19    IID498\n-    __ enegq(r21, r30, false);                                                  \/\/    {EVEX}neg r21, r30    IID499\n-    __ enegq(r29, r11, true);                                                   \/\/    {NF}neg r29, r11    IID500\n-    __ enotq(r22, r8);                                                          \/\/    {EVEX}not r22, r8    IID501\n-    __ epopcntq(r12, r19, false);                                               \/\/    {EVEX}popcnt r12, r19    IID502\n-    __ epopcntq(r29, r23, true);                                                \/\/    {NF}popcnt r29, r23    IID503\n-    __ erolq(r28, r24, false);                                                  \/\/    {EVEX}rol r28, r24, cl    IID504\n-    __ erolq(rdx, r20, true);                                                   \/\/    {NF}rol rdx, r20, cl    IID505\n-    __ erorq(rbx, r30, false);                                                  \/\/    {EVEX}ror rbx, r30, cl    IID506\n-    __ erorq(r10, r15, true);                                                   \/\/    {NF}ror r10, r15, cl    IID507\n-    __ esalq(r17, r13, false);                                                  \/\/    {EVEX}sal r17, r13, cl    IID508\n-    __ esalq(r21, r24, true);                                                   \/\/    {NF}sal r21, r24, cl    IID509\n-    __ esarq(r31, r12, false);                                                  \/\/    {EVEX}sar r31, r12, cl    IID510\n-    __ esarq(rdx, r24, true);                                                   \/\/    {NF}sar rdx, r24, cl    IID511\n-    __ edecq(r21, r24, false);                                                  \/\/    {EVEX}dec r21, r24    IID512\n-    __ edecq(r15, r31, true);                                                   \/\/    {NF}dec r15, r31    IID513\n-    __ eincq(r10, rbx, false);                                                  \/\/    {EVEX}inc r10, rbx    IID514\n-    __ eincq(r18, r8, true);                                                    \/\/    {NF}inc r18, r8    IID515\n-    __ eshlq(r10, r26, false);                                                  \/\/    {EVEX}shl r10, r26, cl    IID516\n-    __ eshlq(r28, r14, true);                                                   \/\/    {NF}shl r28, r14, cl    IID517\n-    __ eshrq(r10, r19, false);                                                  \/\/    {EVEX}shr r10, r19, cl    IID518\n-    __ eshrq(r28, r21, true);                                                   \/\/    {NF}shr r28, r21, cl    IID519\n-    __ etzcntq(r21, r22, false);                                                \/\/    {EVEX}tzcnt r21, r22    IID520\n-    __ etzcntq(r16, r23, true);                                                 \/\/    {NF}tzcnt r16, r23    IID521\n-    __ eimulq(r11, Address(r18, r9, (Address::ScaleFactor)2, -0x132285a1), false); \/\/    {EVEX}imul r11, qword ptr [r18+r9*4-0x132285a1]    IID522\n-    __ eimulq(r13, Address(r24, r15, (Address::ScaleFactor)3, +0x48f50ca0), true); \/\/    {NF}imul r13, qword ptr [r24+r15*8+0x48f50ca0]    IID523\n-    __ elzcntq(r9, Address(r13, +0x2115cf0e), false);                           \/\/    {EVEX}lzcnt r9, qword ptr [r13+0x2115cf0e]    IID524\n-    __ elzcntq(r27, Address(r30, +0x49cabbb), true);                            \/\/    {NF}lzcnt r27, qword ptr [r30+0x49cabbb]    IID525\n-    __ enegq(r21, Address(r13, r31, (Address::ScaleFactor)2, +0x50a8f4d2), false); \/\/    {EVEX}neg r21, qword ptr [r13+r31*4+0x50a8f4d2]    IID526\n-    __ enegq(r22, Address(r18, r20, (Address::ScaleFactor)1, -0x5da0584c), true); \/\/    {NF}neg r22, qword ptr [r18+r20*2-0x5da0584c]    IID527\n-    __ epopcntq(r14, Address(rbx, r22, (Address::ScaleFactor)2, -0x606349d1), false); \/\/    {EVEX}popcnt r14, qword ptr [rbx+r22*4-0x606349d1]    IID528\n-    __ epopcntq(r26, Address(r23, r22, (Address::ScaleFactor)3, -0x72c66c23), true); \/\/    {NF}popcnt r26, qword ptr [r23+r22*8-0x72c66c23]    IID529\n-    __ esalq(r26, Address(r9, +0x334aba09), false);                             \/\/    {EVEX}sal r26, qword ptr [r9+0x334aba09], cl    IID530\n-    __ esalq(r9, Address(r9, r30, (Address::ScaleFactor)3, -0x219a6102), true); \/\/    {NF}sal r9, qword ptr [r9+r30*8-0x219a6102], cl    IID531\n-    __ esarq(r25, Address(r20, -0x2131bab1), false);                            \/\/    {EVEX}sar r25, qword ptr [r20-0x2131bab1], cl    IID532\n-    __ esarq(r16, Address(r28, r16, (Address::ScaleFactor)1, +0x48c483b9), true); \/\/    {NF}sar r16, qword ptr [r28+r16*2+0x48c483b9], cl    IID533\n-    __ edecq(r30, Address(r9, r16, (Address::ScaleFactor)0, -0x88ce84f), false); \/\/    {EVEX}dec r30, qword ptr [r9+r16*1-0x88ce84f]    IID534\n-    __ edecq(r11, Address(r30, r29, (Address::ScaleFactor)2, +0x3eeb8fd0), true); \/\/    {NF}dec r11, qword ptr [r30+r29*4+0x3eeb8fd0]    IID535\n-    __ eincq(r26, Address(r29, r10, (Address::ScaleFactor)3, +0x3ef4822e), false); \/\/    {EVEX}inc r26, qword ptr [r29+r10*8+0x3ef4822e]    IID536\n-    __ eincq(r29, Address(r19, r20, (Address::ScaleFactor)2, -0x3f0f3db9), true); \/\/    {NF}inc r29, qword ptr [r19+r20*4-0x3f0f3db9]    IID537\n-    __ eshrq(r8, Address(r30, r20, (Address::ScaleFactor)0, +0x15b56a17), false); \/\/    {EVEX}shr r8, qword ptr [r30+r20*1+0x15b56a17], cl    IID538\n-    __ eshrq(r26, Address(r11, -0x2de86561), true);                             \/\/    {NF}shr r26, qword ptr [r11-0x2de86561], cl    IID539\n-    __ etzcntq(r11, Address(rcx, r30, (Address::ScaleFactor)1, -0x32ffb1c2), false); \/\/    {EVEX}tzcnt r11, qword ptr [rcx+r30*2-0x32ffb1c2]    IID540\n-    __ etzcntq(r23, Address(r9, r12, (Address::ScaleFactor)1, -0x54823e69), true); \/\/    {NF}tzcnt r23, qword ptr [r9+r12*2-0x54823e69]    IID541\n-    __ eaddq(r20, Address(r13, rcx, (Address::ScaleFactor)3, -0x46116c0d), r15, false); \/\/    {EVEX}add r20, qword ptr [r13+rcx*8-0x46116c0d], r15    IID542\n-    __ eaddq(r13, Address(r9, r23, (Address::ScaleFactor)1, -0x286c7605), r16, true); \/\/    {NF}add r13, qword ptr [r9+r23*2-0x286c7605], r16    IID543\n-    __ eandq(r21, Address(r30, r17, (Address::ScaleFactor)0, +0xf4e30b2), r29, false); \/\/    {EVEX}and r21, qword ptr [r30+r17*1+0xf4e30b2], r29    IID544\n-    __ eandq(r30, Address(r17, r31, (Address::ScaleFactor)0, +0x3ab9dec4), r17, true); \/\/    {NF}and r30, qword ptr [r17+r31*1+0x3ab9dec4], r17    IID545\n-    __ eorq(r10, Address(r27, r30, (Address::ScaleFactor)1, -0x197f1266), r28, false); \/\/    {EVEX}or r10, qword ptr [r27+r30*2-0x197f1266], r28    IID546\n-    __ eorq(r9, Address(r29, r30, (Address::ScaleFactor)0, -0x24ea9b08), r11, true); \/\/    {NF}or r9, qword ptr [r29+r30*1-0x24ea9b08], r11    IID547\n-    __ esubq(r15, Address(r14, -0x4f44bf90), r16, false);                       \/\/    {EVEX}sub r15, qword ptr [r14-0x4f44bf90], r16    IID548\n-    __ esubq(rcx, Address(r21, r18, (Address::ScaleFactor)1, -0x11d0ac8f), r28, true); \/\/    {NF}sub rcx, qword ptr [r21+r18*2-0x11d0ac8f], r28    IID549\n-    __ exorq(r19, Address(r19, r18, (Address::ScaleFactor)0, -0xa5e55ec), r8, false); \/\/    {EVEX}xor r19, qword ptr [r19+r18*1-0xa5e55ec], r8    IID550\n-    __ exorq(r28, Address(r17, r28, (Address::ScaleFactor)1, -0x6eb42fe0), r16, true); \/\/    {NF}xor r28, qword ptr [r17+r28*2-0x6eb42fe0], r16    IID551\n-    __ eaddq(r17, Address(r18, -0x60ab1105), 16777216, false);                  \/\/    {EVEX}add r17, qword ptr [r18-0x60ab1105], 16777216    IID552\n-    __ eaddq(r25, Address(r19, r25, (Address::ScaleFactor)0, +0x122444d9), 65536, true); \/\/    {NF}add r25, qword ptr [r19+r25*1+0x122444d9], 65536    IID553\n-    __ eandq(r30, Address(r9, r28, (Address::ScaleFactor)1, -0x25b00cf3), 4096, false); \/\/    {EVEX}and r30, qword ptr [r9+r28*2-0x25b00cf3], 4096    IID554\n-    __ eandq(r9, Address(r22, rbx, (Address::ScaleFactor)1, -0x7e465026), 268435456, true); \/\/    {NF}and r9, qword ptr [r22+rbx*2-0x7e465026], 268435456    IID555\n-    __ eimulq(r12, Address(r25, r25, (Address::ScaleFactor)1, -0x432d68cc), 1, false); \/\/    {EVEX}imul r12, qword ptr [r25+r25*2-0x432d68cc], 1    IID556\n-    __ eimulq(r15, Address(r17, r31, (Address::ScaleFactor)3, -0x2b97565e), 16, true); \/\/    {NF}imul r15, qword ptr [r17+r31*8-0x2b97565e], 16    IID557\n-    __ eorq(r28, Address(rdx, r31, (Address::ScaleFactor)0, +0x3f1363b1), 256, false); \/\/    {EVEX}or r28, qword ptr [rdx+r31*1+0x3f1363b1], 256    IID558\n-    __ eorq(r16, Address(r12, r23, (Address::ScaleFactor)3, -0x1785863c), 16777216, true); \/\/    {NF}or r16, qword ptr [r12+r23*8-0x1785863c], 16777216    IID559\n-    __ esalq(r8, Address(r14, r24, (Address::ScaleFactor)2, -0x714290a5), 2, false); \/\/    {EVEX}sal r8, qword ptr [r14+r24*4-0x714290a5], 2    IID560\n-    __ esalq(r8, Address(r15, r14, (Address::ScaleFactor)2, +0x21f13243), 16, true); \/\/    {NF}sal r8, qword ptr [r15+r14*4+0x21f13243], 16    IID561\n-    __ esarq(r10, Address(r13, r29, (Address::ScaleFactor)0, +0x7d04cb72), 2, false); \/\/    {EVEX}sar r10, qword ptr [r13+r29*1+0x7d04cb72], 2    IID562\n-    __ esarq(r11, Address(r21, r31, (Address::ScaleFactor)3, -0x2176b4dc), 8, true); \/\/    {NF}sar r11, qword ptr [r21+r31*8-0x2176b4dc], 8    IID563\n-    __ eshrq(rcx, Address(r16, r12, (Address::ScaleFactor)1, +0x260c9a38), 4, false); \/\/    {EVEX}shr rcx, qword ptr [r16+r12*2+0x260c9a38], 4    IID564\n-    __ eshrq(r22, Address(r26, r9, (Address::ScaleFactor)0, -0x5e56bb62), 8, true); \/\/    {NF}shr r22, qword ptr [r26+r9*1-0x5e56bb62], 8    IID565\n-    __ esubq(r31, Address(rbx, r28, (Address::ScaleFactor)1, +0x2b00bb10), 1, false); \/\/    {EVEX}sub r31, qword ptr [rbx+r28*2+0x2b00bb10], 1    IID566\n-    __ esubq(r21, Address(r31, -0x6c10f4ad), 4096, true);                       \/\/    {NF}sub r21, qword ptr [r31-0x6c10f4ad], 4096    IID567\n-    __ exorq(r11, Address(r23, r30, (Address::ScaleFactor)1, +0x51a6026b), 65536, false); \/\/    {EVEX}xor r11, qword ptr [r23+r30*2+0x51a6026b], 65536    IID568\n-    __ exorq(r14, Address(r27, r10, (Address::ScaleFactor)2, -0x34ad9bab), 16, true); \/\/    {NF}xor r14, qword ptr [r27+r10*4-0x34ad9bab], 16    IID569\n-    __ eaddq(r20, r23, 16777216, false);                                        \/\/    {EVEX}add r20, r23, 16777216    IID570\n-    __ eaddq(r9, r21, 4096, true);                                              \/\/    {NF}add r9, r21, 4096    IID571\n-    __ eandq(r20, rdx, 16, false);                                              \/\/    {EVEX}and r20, rdx, 16    IID572\n-    __ eandq(r14, r19, 16, true);                                               \/\/    {NF}and r14, r19, 16    IID573\n-    __ eimulq(r27, r17, 16, false);                                             \/\/    {EVEX}imul r27, r17, 16    IID574\n-    __ eimulq(r30, r13, 256, true);                                             \/\/    {NF}imul r30, r13, 256    IID575\n-    __ eorq(r19, r15, 16777216, false);                                         \/\/    {EVEX}or r19, r15, 16777216    IID576\n-    __ eorq(r16, r28, 268435456, true);                                         \/\/    {NF}or r16, r28, 268435456    IID577\n-    __ erclq(rbx, r24, 2);                                                      \/\/    {EVEX}rcl rbx, r24, 2    IID578\n-    __ erolq(r15, r20, 16, false);                                              \/\/    {EVEX}rol r15, r20, 16    IID579\n-    __ erolq(r11, rcx, 16, true);                                               \/\/    {NF}rol r11, rcx, 16    IID580\n-    __ erorq(r13, r26, 16, false);                                              \/\/    {EVEX}ror r13, r26, 16    IID581\n-    __ erorq(r19, r20, 4, true);                                                \/\/    {NF}ror r19, r20, 4    IID582\n-    __ esalq(r19, r28, 16, false);                                              \/\/    {EVEX}sal r19, r28, 16    IID583\n-    __ esalq(r25, r18, 4, true);                                                \/\/    {NF}sal r25, r18, 4    IID584\n-    __ esarq(r10, r27, 4, false);                                               \/\/    {EVEX}sar r10, r27, 4    IID585\n-    __ esarq(rdx, r22, 8, true);                                                \/\/    {NF}sar rdx, r22, 8    IID586\n-    __ eshlq(r28, r15, 1, false);                                               \/\/    {EVEX}shl r28, r15, 1    IID587\n-    __ eshlq(rbx, r12, 4, true);                                                \/\/    {NF}shl rbx, r12, 4    IID588\n-    __ eshrq(r26, r11, 1, false);                                               \/\/    {EVEX}shr r26, r11, 1    IID589\n-    __ eshrq(rdx, r31, 8, true);                                                \/\/    {NF}shr rdx, r31, 8    IID590\n-    __ esubq(r21, rbx, 1048576, false);                                         \/\/    {EVEX}sub r21, rbx, 1048576    IID591\n-    __ esubq(r25, r28, 65536, true);                                            \/\/    {NF}sub r25, r28, 65536    IID592\n-    __ exorq(r22, r14, 1, false);                                               \/\/    {EVEX}xor r22, r14, 1    IID593\n-    __ exorq(r11, r30, 1048576, true);                                          \/\/    {NF}xor r11, r30, 1048576    IID594\n-    __ eorq_imm32(r20, r19, 1048576, false);                                    \/\/    {EVEX}or r20, r19, 1048576    IID595\n-    __ eorq_imm32(r25, r13, 268435456, false);                                  \/\/    {EVEX}or r25, r13, 268435456    IID596\n-    __ esubq_imm32(r25, r25, 268435456, false);                                 \/\/    {EVEX}sub r25, r25, 268435456    IID597\n-    __ esubq_imm32(r18, r11, 4194304, true);                                    \/\/    {NF}sub r18, r11, 4194304    IID598\n-    __ eaddq(r10, r18, Address(r20, +0x756f453), false);                        \/\/    {EVEX}add r10, r18, qword ptr [r20+0x756f453]    IID599\n-    __ eaddq(rbx, r27, Address(r22, r21, (Address::ScaleFactor)0, -0x25abeab7), true); \/\/    {NF}add rbx, r27, qword ptr [r22+r21*1-0x25abeab7]    IID600\n-    __ eandq(rdx, r31, Address(r9, r20, (Address::ScaleFactor)3, -0x4cfe39c), false); \/\/    {EVEX}and rdx, r31, qword ptr [r9+r20*8-0x4cfe39c]    IID601\n-    __ eandq(r16, r25, Address(r14, r27, (Address::ScaleFactor)0, +0x7c6654d9), true); \/\/    {NF}and r16, r25, qword ptr [r14+r27*1+0x7c6654d9]    IID602\n-    __ eorq(r29, rcx, Address(r15, r23, (Address::ScaleFactor)0, +0x45b7f72d), false); \/\/    {EVEX}or r29, rcx, qword ptr [r15+r23*1+0x45b7f72d]    IID603\n-    __ eorq(r19, r17, Address(r13, r22, (Address::ScaleFactor)1, -0x750c1996), true); \/\/    {NF}or r19, r17, qword ptr [r13+r22*2-0x750c1996]    IID604\n-    __ eimulq(r13, r8, Address(r31, r23, (Address::ScaleFactor)1, -0x2211b6b2), false); \/\/    {EVEX}imul r13, r8, qword ptr [r31+r23*2-0x2211b6b2]    IID605\n-    __ eimulq(r11, r28, Address(r13, r11, (Address::ScaleFactor)3, +0x5c0013ab), true); \/\/    {NF}imul r11, r28, qword ptr [r13+r11*8+0x5c0013ab]    IID606\n-    __ esubq(rdx, r18, Address(r18, rcx, (Address::ScaleFactor)0, +0x59557e71), false); \/\/    {EVEX}sub rdx, r18, qword ptr [r18+rcx*1+0x59557e71]    IID607\n-    __ esubq(r27, r11, Address(r22, -0x28469649), true);                        \/\/    {NF}sub r27, r11, qword ptr [r22-0x28469649]    IID608\n-    __ exorq(r10, r9, Address(r24, +0x49691d54), false);                        \/\/    {EVEX}xor r10, r9, qword ptr [r24+0x49691d54]    IID609\n-    __ exorq(r24, r12, Address(r19, +0x22d529aa), true);                        \/\/    {NF}xor r24, r12, qword ptr [r19+0x22d529aa]    IID610\n-    __ eaddq(r20, r9, r10, false);                                              \/\/    {load}{EVEX}add r20, r9, r10    IID611\n-    __ eaddq(r18, r17, r26, true);                                              \/\/    {load}{NF}add r18, r17, r26    IID612\n-    __ eadcxq(r21, r16, r19);                                                   \/\/    {load}{EVEX}adcx r21, r16, r19    IID613\n-    __ eadoxq(rbx, r14, r27);                                                   \/\/    {load}{EVEX}adox rbx, r14, r27    IID614\n-    __ eandq(r9, r12, r22, false);                                              \/\/    {load}{EVEX}and r9, r12, r22    IID615\n-    __ eandq(r17, r25, r10, true);                                              \/\/    {load}{NF}and r17, r25, r10    IID616\n-    __ eimulq(r12, r15, r14, false);                                            \/\/    {load}{EVEX}imul r12, r15, r14    IID617\n-    __ eimulq(r29, r18, r16, true);                                             \/\/    {load}{NF}imul r29, r18, r16    IID618\n-    __ eorq(r11, r9, r10, false);                                               \/\/    {load}{EVEX}or r11, r9, r10    IID619\n-    __ eorq(r25, r13, r16, true);                                               \/\/    {load}{NF}or r25, r13, r16    IID620\n-    __ esubq(r11, r21, r25, false);                                             \/\/    {load}{EVEX}sub r11, r21, r25    IID621\n-    __ esubq(rdx, r20, rbx, true);                                              \/\/    {load}{NF}sub rdx, r20, rbx    IID622\n-    __ exorq(r25, r21, r26, false);                                             \/\/    {load}{EVEX}xor r25, r21, r26    IID623\n-    __ exorq(r23, r27, r21, true);                                              \/\/    {load}{NF}xor r23, r27, r21    IID624\n-    __ eshldq(r10, r12, r31, 2, false);                                         \/\/    {EVEX}shld r10, r12, r31, 2    IID625\n-    __ eshldq(r23, r16, r29, 2, true);                                          \/\/    {NF}shld r23, r16, r29, 2    IID626\n-    __ eshrdq(r19, r24, r23, 4, false);                                         \/\/    {EVEX}shrd r19, r24, r23, 4    IID627\n-    __ eshrdq(r21, r15, r25, 4, true);                                          \/\/    {NF}shrd r21, r15, r25, 4    IID628\n-    __ ecmovq (Assembler::Condition::overflow, r9, r29, rdx);                   \/\/    cmovo r9, r29, rdx    IID629\n-    __ ecmovq (Assembler::Condition::noOverflow, r11, r25, r19);                \/\/    cmovno r11, r25, r19    IID630\n-    __ ecmovq (Assembler::Condition::below, r10, r16, r17);                     \/\/    cmovb r10, r16, r17    IID631\n-    __ ecmovq (Assembler::Condition::aboveEqual, r8, r23, r31);                 \/\/    cmovae r8, r23, r31    IID632\n-    __ ecmovq (Assembler::Condition::zero, r9, r31, rbx);                       \/\/    cmovz r9, r31, rbx    IID633\n-    __ ecmovq (Assembler::Condition::notZero, r16, r29, r9);                    \/\/    cmovnz r16, r29, r9    IID634\n-    __ ecmovq (Assembler::Condition::belowEqual, r24, r10, r9);                 \/\/    cmovbe r24, r10, r9    IID635\n-    __ ecmovq (Assembler::Condition::above, r22, r28, r26);                     \/\/    cmova r22, r28, r26    IID636\n-    __ ecmovq (Assembler::Condition::negative, r18, r25, r20);                  \/\/    cmovs r18, r25, r20    IID637\n-    __ ecmovq (Assembler::Condition::positive, r16, r21, rbx);                  \/\/    cmovns r16, r21, rbx    IID638\n-    __ ecmovq (Assembler::Condition::parity, r28, r22, r19);                    \/\/    cmovp r28, r22, r19    IID639\n-    __ ecmovq (Assembler::Condition::noParity, r13, r15, rdx);                  \/\/    cmovnp r13, r15, rdx    IID640\n-    __ ecmovq (Assembler::Condition::less, r8, r22, r14);                       \/\/    cmovl r8, r22, r14    IID641\n-    __ ecmovq (Assembler::Condition::greaterEqual, r12, r24, r14);              \/\/    cmovge r12, r24, r14    IID642\n-    __ ecmovq (Assembler::Condition::lessEqual, r24, r13, r21);                 \/\/    cmovle r24, r13, r21    IID643\n-    __ ecmovq (Assembler::Condition::greater, rbx, rbx, r27);                   \/\/    cmovg rbx, rbx, r27    IID644\n-    __ ecmovq (Assembler::Condition::overflow, r14, r17, Address(r24, r27, (Address::ScaleFactor)3, +0x9d508f0)); \/\/    cmovo r14, r17, qword ptr [r24+r27*8+0x9d508f0]    IID645\n-    __ ecmovq (Assembler::Condition::noOverflow, r13, r15, Address(r31, r21, (Address::ScaleFactor)2, +0x6ef2c74a)); \/\/    cmovno r13, r15, qword ptr [r31+r21*4+0x6ef2c74a]    IID646\n-    __ ecmovq (Assembler::Condition::below, r13, r27, Address(r31, r25, (Address::ScaleFactor)1, +0x734fe9ab)); \/\/    cmovb r13, r27, qword ptr [r31+r25*2+0x734fe9ab]    IID647\n-    __ ecmovq (Assembler::Condition::aboveEqual, r15, r22, Address(r14, r29, (Address::ScaleFactor)2, -0x67d8bdfb)); \/\/    cmovae r15, r22, qword ptr [r14+r29*4-0x67d8bdfb]    IID648\n-    __ ecmovq (Assembler::Condition::zero, r30, r23, Address(r15, r28, (Address::ScaleFactor)1, -0x2686219)); \/\/    cmovz r30, r23, qword ptr [r15+r28*2-0x2686219]    IID649\n-    __ ecmovq (Assembler::Condition::notZero, r12, r9, Address(r9, r25, (Address::ScaleFactor)3, +0x52aab6b)); \/\/    cmovnz r12, r9, qword ptr [r9+r25*8+0x52aab6b]    IID650\n-    __ ecmovq (Assembler::Condition::belowEqual, r9, r25, Address(r8, r8, (Address::ScaleFactor)3, -0x1e42bd95)); \/\/    cmovbe r9, r25, qword ptr [r8+r8*8-0x1e42bd95]    IID651\n-    __ ecmovq (Assembler::Condition::above, rcx, r20, Address(r27, rbx, (Address::ScaleFactor)2, +0x46823c58)); \/\/    cmova rcx, r20, qword ptr [r27+rbx*4+0x46823c58]    IID652\n-    __ ecmovq (Assembler::Condition::negative, rbx, r12, Address(r21, -0x635b8c8)); \/\/    cmovs rbx, r12, qword ptr [r21-0x635b8c8]    IID653\n-    __ ecmovq (Assembler::Condition::positive, r23, rbx, Address(r27, r26, (Address::ScaleFactor)3, +0x922bcc0)); \/\/    cmovns r23, rbx, qword ptr [r27+r26*8+0x922bcc0]    IID654\n-    __ ecmovq (Assembler::Condition::parity, r25, r9, Address(r23, +0xd2a14ec)); \/\/    cmovp r25, r9, qword ptr [r23+0xd2a14ec]    IID655\n-    __ ecmovq (Assembler::Condition::noParity, r11, r19, Address(r11, -0xfb95a9d)); \/\/    cmovnp r11, r19, qword ptr [r11-0xfb95a9d]    IID656\n-    __ ecmovq (Assembler::Condition::less, r13, r18, Address(r28, r19, (Address::ScaleFactor)0, +0x716b9b7e)); \/\/    cmovl r13, r18, qword ptr [r28+r19*1+0x716b9b7e]    IID657\n-    __ ecmovq (Assembler::Condition::greaterEqual, r21, r16, Address(rcx, r29, (Address::ScaleFactor)0, -0x5af0441e)); \/\/    cmovge r21, r16, qword ptr [rcx+r29*1-0x5af0441e]    IID658\n-    __ ecmovq (Assembler::Condition::lessEqual, r12, r31, Address(r20, r26, (Address::ScaleFactor)0, +0xe0b7fb1)); \/\/    cmovle r12, r31, qword ptr [r20+r26*1+0xe0b7fb1]    IID659\n-    __ ecmovq (Assembler::Condition::greater, r15, r24, Address(r30, +0x2d3b7b4f)); \/\/    cmovg r15, r24, qword ptr [r30+0x2d3b7b4f]    IID660\n+    __ eaddl(r20, r24, 4096, true);                                             \/\/    {NF}add r20d, r24d, 4096    IID256\n+    __ eaddl(rax, r24, 4096, true);                                             \/\/    {NF}add eax, r24d, 4096    IID257\n+    __ eandl(r18, r26, 1048576, false);                                         \/\/    {EVEX}and r18d, r26d, 1048576    IID258\n+    __ eandl(rax, r26, 1048576, false);                                         \/\/    {EVEX}and eax, r26d, 1048576    IID259\n+    __ eandl(r29, r13, 1, true);                                                \/\/    {NF}and r29d, r13d, 1    IID260\n+    __ eandl(rax, r13, 1, true);                                                \/\/    {NF}and eax, r13d, 1    IID261\n+    __ eimull(rcx, r31, 65536, false);                                          \/\/    {EVEX}imul ecx, r31d, 65536    IID262\n+    __ eimull(rax, r31, 65536, false);                                          \/\/    {EVEX}imul eax, r31d, 65536    IID263\n+    __ eimull(r23, r29, 65536, true);                                           \/\/    {NF}imul r23d, r29d, 65536    IID264\n+    __ eimull(rax, r29, 65536, true);                                           \/\/    {NF}imul eax, r29d, 65536    IID265\n+    __ eorl(r23, r23, 1048576, false);                                          \/\/    {EVEX}or r23d, r23d, 1048576    IID266\n+    __ eorl(rax, r23, 1048576, false);                                          \/\/    {EVEX}or eax, r23d, 1048576    IID267\n+    __ eorl(r21, r9, 268435456, true);                                          \/\/    {NF}or r21d, r9d, 268435456    IID268\n+    __ eorl(rax, r9, 268435456, true);                                          \/\/    {NF}or eax, r9d, 268435456    IID269\n+    __ ercll(r13, rdx, 4);                                                      \/\/    {EVEX}rcl r13d, edx, 4    IID270\n+#endif \/\/ _LP64\n+    __ ercll(rax, rdx, 4);                                                      \/\/    {EVEX}rcl eax, edx, 4    IID271\n+#ifdef _LP64\n+    __ eroll(r15, r31, 8, false);                                               \/\/    {EVEX}rol r15d, r31d, 8    IID272\n+    __ eroll(rax, r31, 8, false);                                               \/\/    {EVEX}rol eax, r31d, 8    IID273\n+    __ eroll(r8, r9, 2, true);                                                  \/\/    {NF}rol r8d, r9d, 2    IID274\n+    __ eroll(rax, r9, 2, true);                                                 \/\/    {NF}rol eax, r9d, 2    IID275\n+    __ erorl(r9, r15, 8, false);                                                \/\/    {EVEX}ror r9d, r15d, 8    IID276\n+    __ erorl(rax, r15, 8, false);                                               \/\/    {EVEX}ror eax, r15d, 8    IID277\n+    __ erorl(r21, r12, 8, true);                                                \/\/    {NF}ror r21d, r12d, 8    IID278\n+    __ erorl(rax, r12, 8, true);                                                \/\/    {NF}ror eax, r12d, 8    IID279\n+    __ esall(r19, r27, 1, false);                                               \/\/    {EVEX}sal r19d, r27d, 1    IID280\n+    __ esall(rax, r27, 1, false);                                               \/\/    {EVEX}sal eax, r27d, 1    IID281\n+    __ esall(r10, r11, 16, true);                                               \/\/    {NF}sal r10d, r11d, 16    IID282\n+    __ esall(rax, r11, 16, true);                                               \/\/    {NF}sal eax, r11d, 16    IID283\n+    __ esarl(r8, rdx, 8, false);                                                \/\/    {EVEX}sar r8d, edx, 8    IID284\n+#endif \/\/ _LP64\n+    __ esarl(rax, rdx, 8, false);                                               \/\/    {EVEX}sar eax, edx, 8    IID285\n+#ifdef _LP64\n+    __ esarl(r22, r30, 4, true);                                                \/\/    {NF}sar r22d, r30d, 4    IID286\n+    __ esarl(rax, r30, 4, true);                                                \/\/    {NF}sar eax, r30d, 4    IID287\n+    __ eshll(r25, r31, 16, false);                                              \/\/    {EVEX}shl r25d, r31d, 16    IID288\n+    __ eshll(rax, r31, 16, false);                                              \/\/    {EVEX}shl eax, r31d, 16    IID289\n+    __ eshll(r10, r9, 8, true);                                                 \/\/    {NF}shl r10d, r9d, 8    IID290\n+    __ eshll(rax, r9, 8, true);                                                 \/\/    {NF}shl eax, r9d, 8    IID291\n+    __ eshrl(r13, r8, 4, false);                                                \/\/    {EVEX}shr r13d, r8d, 4    IID292\n+    __ eshrl(rax, r8, 4, false);                                                \/\/    {EVEX}shr eax, r8d, 4    IID293\n+    __ eshrl(r16, r21, 16, true);                                               \/\/    {NF}shr r16d, r21d, 16    IID294\n+    __ eshrl(rax, r21, 16, true);                                               \/\/    {NF}shr eax, r21d, 16    IID295\n+    __ esubl(r26, r23, 16777216, false);                                        \/\/    {EVEX}sub r26d, r23d, 16777216    IID296\n+    __ esubl(rax, r23, 16777216, false);                                        \/\/    {EVEX}sub eax, r23d, 16777216    IID297\n+    __ esubl(r26, r14, 1048576, true);                                          \/\/    {NF}sub r26d, r14d, 1048576    IID298\n+    __ esubl(rax, r14, 1048576, true);                                          \/\/    {NF}sub eax, r14d, 1048576    IID299\n+    __ exorl(r27, r26, 256, false);                                             \/\/    {EVEX}xor r27d, r26d, 256    IID300\n+    __ exorl(rax, r26, 256, false);                                             \/\/    {EVEX}xor eax, r26d, 256    IID301\n+    __ exorl(r22, r9, 1, true);                                                 \/\/    {NF}xor r22d, r9d, 1    IID302\n+    __ exorl(rax, r9, 1, true);                                                 \/\/    {NF}xor eax, r9d, 1    IID303\n+    __ esubl_imm32(r22, r30, 268435456, false);                                 \/\/    {EVEX}sub r22d, r30d, 268435456    IID304\n+    __ esubl_imm32(rax, r30, 268435456, false);                                 \/\/    {EVEX}sub eax, r30d, 268435456    IID305\n+    __ esubl_imm32(r8, r16, 4194304, true);                                     \/\/    {NF}sub r8d, r16d, 4194304    IID306\n+    __ esubl_imm32(rax, r16, 4194304, true);                                    \/\/    {NF}sub eax, r16d, 4194304    IID307\n+    __ eaddl(r20, r29, Address(r11, r12, (Address::ScaleFactor)1, +0xac0980), false); \/\/    {EVEX}add r20d, r29d, dword ptr [r11+r12*2+0xac0980]    IID308\n+    __ eaddl(r18, rbx, Address(r9, r18, (Address::ScaleFactor)1, +0x434a125d), true); \/\/    {NF}add r18d, ebx, dword ptr [r9+r18*2+0x434a125d]    IID309\n+    __ eandl(r14, r15, Address(r14, r19, (Address::ScaleFactor)2, +0x15a5a5ee), false); \/\/    {EVEX}and r14d, r15d, dword ptr [r14+r19*4+0x15a5a5ee]    IID310\n+    __ eandl(r28, r31, Address(r24, r12, (Address::ScaleFactor)3, -0x6d6d7e68), true); \/\/    {NF}and r28d, r31d, dword ptr [r24+r12*8-0x6d6d7e68]    IID311\n+    __ eimull(r24, r13, Address(r24, r25, (Address::ScaleFactor)3, +0x784673fd), false); \/\/    {EVEX}imul r24d, r13d, dword ptr [r24+r25*8+0x784673fd]    IID312\n+    __ eimull(r24, r21, Address(r8, r13, (Address::ScaleFactor)2, -0x63663889), true); \/\/    {NF}imul r24d, r21d, dword ptr [r8+r13*4-0x63663889]    IID313\n+    __ eorl(r12, r24, Address(r30, -0x67526556), false);                        \/\/    {EVEX}or r12d, r24d, dword ptr [r30-0x67526556]    IID314\n+    __ eorl(r13, r13, Address(rbx, r25, (Address::ScaleFactor)2, -0x5f394dd9), true); \/\/    {NF}or r13d, r13d, dword ptr [rbx+r25*4-0x5f394dd9]    IID315\n+    __ esubl(r26, r25, Address(r25, rdx, (Address::ScaleFactor)3, -0x2e39f79a), false); \/\/    {EVEX}sub r26d, r25d, dword ptr [r25+rdx*8-0x2e39f79a]    IID316\n+    __ esubl(r28, r8, Address(rdx, r24, (Address::ScaleFactor)3, -0xed99a54), true); \/\/    {NF}sub r28d, r8d, dword ptr [rdx+r24*8-0xed99a54]    IID317\n+    __ exorl(r31, r22, Address(r30, r20, (Address::ScaleFactor)3, +0x3ac41cbd), false); \/\/    {EVEX}xor r31d, r22d, dword ptr [r30+r20*8+0x3ac41cbd]    IID318\n+    __ exorl(r24, r30, Address(r13, r17, (Address::ScaleFactor)1, +0x1efdc2e3), true); \/\/    {NF}xor r24d, r30d, dword ptr [r13+r17*2+0x1efdc2e3]    IID319\n+    __ exorb(r16, r16, Address(r9, r15, (Address::ScaleFactor)1, +0x769feb34), false); \/\/    {EVEX}xor r16b, r16b, byte ptr [r9+r15*2+0x769feb34]    IID320\n+    __ exorb(r19, r25, Address(r10, +0x2239b429), true);                        \/\/    {NF}xor r19b, r25b, byte ptr [r10+0x2239b429]    IID321\n+    __ exorw(r25, r19, Address(r16, r24, (Address::ScaleFactor)1, +0x1c71faea), false); \/\/    {EVEX}xor r25w, r19w, word ptr [r16+r24*2+0x1c71faea]    IID322\n+    __ exorw(r19, r10, Address(r28, -0x299a0cfd), true);                        \/\/    {NF}xor r19w, r10w, word ptr [r28-0x299a0cfd]    IID323\n+    __ eaddl(rbx, r23, r24, false);                                             \/\/    {load}{EVEX}add ebx, r23d, r24d    IID324\n+    __ eaddl(r28, r14, r24, true);                                              \/\/    {load}{NF}add r28d, r14d, r24d    IID325\n+    __ eandl(r30, r31, r26, false);                                             \/\/    {load}{EVEX}and r30d, r31d, r26d    IID326\n+    __ eandl(r12, r31, r23, true);                                              \/\/    {load}{NF}and r12d, r31d, r23d    IID327\n+    __ eimull(r9, r20, r10, false);                                             \/\/    {load}{EVEX}imul r9d, r20d, r10d    IID328\n+    __ eimull(r13, r30, r9, true);                                              \/\/    {load}{NF}imul r13d, r30d, r9d    IID329\n+    __ eorw(r25, r19, r23, false);                                              \/\/    {load}{EVEX}or r25w, r19w, r23w    IID330\n+    __ eorw(r12, r16, rdx, true);                                               \/\/    {load}{NF}or r12w, r16w, dx    IID331\n+    __ eorl(r31, r17, r9, false);                                               \/\/    {load}{EVEX}or r31d, r17d, r9d    IID332\n+    __ eorl(r15, r13, rbx, true);                                               \/\/    {load}{NF}or r15d, r13d, ebx    IID333\n+    __ eshldl(r28, rbx, r29, false);                                            \/\/    {load}{EVEX}shld r28d, ebx, r29d, cl    IID334\n+    __ eshldl(r22, rbx, r8, true);                                              \/\/    {load}{NF}shld r22d, ebx, r8d, cl    IID335\n+    __ eshrdl(r8, r11, r16, false);                                             \/\/    {load}{EVEX}shrd r8d, r11d, r16d, cl    IID336\n+    __ eshrdl(r13, r12, r15, true);                                             \/\/    {load}{NF}shrd r13d, r12d, r15d, cl    IID337\n+    __ esubl(r17, r23, r31, false);                                             \/\/    {load}{EVEX}sub r17d, r23d, r31d    IID338\n+    __ esubl(r20, r22, r26, true);                                              \/\/    {load}{NF}sub r20d, r22d, r26d    IID339\n+    __ exorl(r10, r25, r19, false);                                             \/\/    {load}{EVEX}xor r10d, r25d, r19d    IID340\n+    __ exorl(r11, r19, r30, true);                                              \/\/    {load}{NF}xor r11d, r19d, r30d    IID341\n+    __ eshldl(r12, r10, rdx, 1, false);                                         \/\/    {EVEX}shld r12d, r10d, edx, 1    IID342\n+    __ eshldl(r20, r30, r18, 16, true);                                         \/\/    {NF}shld r20d, r30d, r18d, 16    IID343\n+    __ eshrdl(r18, r25, r18, 8, false);                                         \/\/    {EVEX}shrd r18d, r25d, r18d, 8    IID344\n+    __ eshrdl(r19, r16, r25, 1, true);                                          \/\/    {NF}shrd r19d, r16d, r25d, 1    IID345\n+    __ ecmovl (Assembler::Condition::overflow, r11, r31, r24);                  \/\/    cmovo r11d, r31d, r24d    IID346\n+    __ ecmovl (Assembler::Condition::noOverflow, r14, r30, r16);                \/\/    cmovno r14d, r30d, r16d    IID347\n+    __ ecmovl (Assembler::Condition::below, r9, r11, r26);                      \/\/    cmovb r9d, r11d, r26d    IID348\n+    __ ecmovl (Assembler::Condition::aboveEqual, r27, rdx, r31);                \/\/    cmovae r27d, edx, r31d    IID349\n+    __ ecmovl (Assembler::Condition::zero, r24, r29, r10);                      \/\/    cmovz r24d, r29d, r10d    IID350\n+    __ ecmovl (Assembler::Condition::notZero, rcx, r21, r15);                   \/\/    cmovnz ecx, r21d, r15d    IID351\n+    __ ecmovl (Assembler::Condition::belowEqual, r23, r17, r26);                \/\/    cmovbe r23d, r17d, r26d    IID352\n+    __ ecmovl (Assembler::Condition::above, r20, r27, r13);                     \/\/    cmova r20d, r27d, r13d    IID353\n+    __ ecmovl (Assembler::Condition::negative, r15, r22, r15);                  \/\/    cmovs r15d, r22d, r15d    IID354\n+    __ ecmovl (Assembler::Condition::positive, r29, r26, r18);                  \/\/    cmovns r29d, r26d, r18d    IID355\n+    __ ecmovl (Assembler::Condition::parity, r9, r9, r22);                      \/\/    cmovp r9d, r9d, r22d    IID356\n+    __ ecmovl (Assembler::Condition::noParity, r30, r23, r11);                  \/\/    cmovnp r30d, r23d, r11d    IID357\n+    __ ecmovl (Assembler::Condition::less, r20, r11, rbx);                      \/\/    cmovl r20d, r11d, ebx    IID358\n+    __ ecmovl (Assembler::Condition::greaterEqual, r28, r16, r20);              \/\/    cmovge r28d, r16d, r20d    IID359\n+    __ ecmovl (Assembler::Condition::lessEqual, r17, r24, r22);                 \/\/    cmovle r17d, r24d, r22d    IID360\n+    __ ecmovl (Assembler::Condition::greater, r16, r15, r15);                   \/\/    cmovg r16d, r15d, r15d    IID361\n+    __ ecmovl (Assembler::Condition::overflow, r28, r25, Address(r29, r16, (Address::ScaleFactor)2, -0x3c9110ad)); \/\/    cmovo r28d, r25d, dword ptr [r29+r16*4-0x3c9110ad]    IID362\n+    __ ecmovl (Assembler::Condition::noOverflow, r23, r15, Address(rbx, r30, (Address::ScaleFactor)3, +0x1cbc58bd)); \/\/    cmovno r23d, r15d, dword ptr [rbx+r30*8+0x1cbc58bd]    IID363\n+    __ ecmovl (Assembler::Condition::below, r26, rbx, Address(r12, rcx, (Address::ScaleFactor)3, +0x84e581a)); \/\/    cmovb r26d, ebx, dword ptr [r12+rcx*8+0x84e581a]    IID364\n+    __ ecmovl (Assembler::Condition::aboveEqual, rcx, r24, Address(r17, +0x5cece92d)); \/\/    cmovae ecx, r24d, dword ptr [r17+0x5cece92d]    IID365\n+    __ ecmovl (Assembler::Condition::zero, r26, r24, Address(r24, r12, (Address::ScaleFactor)3, +0x507746a2)); \/\/    cmovz r26d, r24d, dword ptr [r24+r12*8+0x507746a2]    IID366\n+    __ ecmovl (Assembler::Condition::notZero, r8, r15, Address(rcx, r19, (Address::ScaleFactor)0, -0xf035c76)); \/\/    cmovnz r8d, r15d, dword ptr [rcx+r19*1-0xf035c76]    IID367\n+    __ ecmovl (Assembler::Condition::belowEqual, rdx, r23, Address(r22, r27, (Address::ScaleFactor)0, -0x12fe3534)); \/\/    cmovbe edx, r23d, dword ptr [r22+r27*1-0x12fe3534]    IID368\n+    __ ecmovl (Assembler::Condition::above, r30, r19, Address(r13, r28, (Address::ScaleFactor)0, +0x73b8ee9d)); \/\/    cmova r30d, r19d, dword ptr [r13+r28*1+0x73b8ee9d]    IID369\n+    __ ecmovl (Assembler::Condition::negative, r22, r30, Address(r16, rcx, (Address::ScaleFactor)0, +0x22aac146)); \/\/    cmovs r22d, r30d, dword ptr [r16+rcx*1+0x22aac146]    IID370\n+    __ ecmovl (Assembler::Condition::positive, r17, r30, Address(r17, r9, (Address::ScaleFactor)2, +0x79db2b1)); \/\/    cmovns r17d, r30d, dword ptr [r17+r9*4+0x79db2b1]    IID371\n+    __ ecmovl (Assembler::Condition::parity, r26, rdx, Address(r14, r16, (Address::ScaleFactor)1, -0x8242011)); \/\/    cmovp r26d, edx, dword ptr [r14+r16*2-0x8242011]    IID372\n+    __ ecmovl (Assembler::Condition::noParity, r11, r19, Address(r14, r31, (Address::ScaleFactor)1, -0x4ff251cc)); \/\/    cmovnp r11d, r19d, dword ptr [r14+r31*2-0x4ff251cc]    IID373\n+    __ ecmovl (Assembler::Condition::less, r20, r18, Address(r13, r16, (Address::ScaleFactor)2, -0x19efc6e2)); \/\/    cmovl r20d, r18d, dword ptr [r13+r16*4-0x19efc6e2]    IID374\n+    __ ecmovl (Assembler::Condition::greaterEqual, r19, r13, Address(r13, r23, (Address::ScaleFactor)1, +0x611b7714)); \/\/    cmovge r19d, r13d, dword ptr [r13+r23*2+0x611b7714]    IID375\n+    __ ecmovl (Assembler::Condition::lessEqual, r29, r13, Address(r17, r17, (Address::ScaleFactor)3, +0x3a94a93f)); \/\/    cmovle r29d, r13d, dword ptr [r17+r17*8+0x3a94a93f]    IID376\n+    __ ecmovl (Assembler::Condition::greater, r13, r29, Address(r15, r23, (Address::ScaleFactor)1, +0x76d43532)); \/\/    cmovg r13d, r29d, dword ptr [r15+r23*2+0x76d43532]    IID377\n+#endif \/\/ _LP64\n+#ifdef _LP64\n+    __ adcq(r15, r13);                                                          \/\/    {load}adc r15, r13    IID378\n+    __ cmpq(r9, r12);                                                           \/\/    {load}cmp r9, r12    IID379\n+    __ imulq(r15, r21);                                                         \/\/    {load}imul r15, r21    IID380\n+    __ popcntq(r12, r9);                                                        \/\/    {load}popcnt r12, r9    IID381\n+    __ sbbq(r17, r23);                                                          \/\/    {load}sbb r17, r23    IID382\n+    __ subq(rdx, r16);                                                          \/\/    {load}sub rdx, r16    IID383\n+    __ tzcntq(r29, r10);                                                        \/\/    {load}tzcnt r29, r10    IID384\n+    __ lzcntq(r21, r17);                                                        \/\/    {load}lzcnt r21, r17    IID385\n+    __ addq(r29, r18);                                                          \/\/    {load}add r29, r18    IID386\n+    __ andq(r28, r24);                                                          \/\/    {load}and r28, r24    IID387\n+    __ orq(r10, r20);                                                           \/\/    {load}or r10, r20    IID388\n+    __ xorq(r27, r10);                                                          \/\/    {load}xor r27, r10    IID389\n+    __ movq(r14, r11);                                                          \/\/    {load}mov r14, r11    IID390\n+    __ bsfq(r27, rcx);                                                          \/\/    {load}bsf r27, rcx    IID391\n+    __ bsrq(r22, r15);                                                          \/\/    {load}bsr r22, r15    IID392\n+    __ btq(r31, r30);                                                           \/\/    {load}bt r31, r30    IID393\n+    __ xchgq(r19, r19);                                                         \/\/    {load}xchg r19, r19    IID394\n+    __ testq(r26, r21);                                                         \/\/    {load}test r26, r21    IID395\n+    __ addq(Address(r26, r20, (Address::ScaleFactor)1, -0x4096149c), r14);      \/\/    add qword ptr [r26+r20*2-0x4096149c], r14    IID396\n+    __ andq(Address(r28, r20, (Address::ScaleFactor)2, +0x1bd8898a), r23);      \/\/    and qword ptr [r28+r20*4+0x1bd8898a], r23    IID397\n+    __ cmpq(Address(r15, r19, (Address::ScaleFactor)2, +0x39eee631), r10);      \/\/    cmp qword ptr [r15+r19*4+0x39eee631], r10    IID398\n+    __ orq(Address(r13, rdx, (Address::ScaleFactor)3, +0x1a49859), r13);        \/\/    or qword ptr [r13+rdx*8+0x1a49859], r13    IID399\n+    __ xorq(Address(r21, +0x5fe8636), r24);                                     \/\/    xor qword ptr [r21+0x5fe8636], r24    IID400\n+    __ subq(Address(r30, r23, (Address::ScaleFactor)2, -0x56643cc1), r25);      \/\/    sub qword ptr [r30+r23*4-0x56643cc1], r25    IID401\n+    __ movq(Address(r21, r26, (Address::ScaleFactor)3, +0x7e8544ab), r31);      \/\/    mov qword ptr [r21+r26*8+0x7e8544ab], r31    IID402\n+    __ xaddq(Address(rcx, r24, (Address::ScaleFactor)3, -0x79ca4889), rbx);     \/\/    xadd qword ptr [rcx+r24*8-0x79ca4889], rbx    IID403\n+    __ andq(Address(r13, r31, (Address::ScaleFactor)3, -0xd72b030), 256);       \/\/    and qword ptr [r13+r31*8-0xd72b030], 256    IID404\n+    __ addq(Address(r16, +0x534d775e), 268435456);                              \/\/    add qword ptr [r16+0x534d775e], 268435456    IID405\n+    __ cmpq(Address(r20, r15, (Address::ScaleFactor)2, -0x7cb22277), 268435456); \/\/    cmp qword ptr [r20+r15*4-0x7cb22277], 268435456    IID406\n+    __ sarq(Address(r9, r23, (Address::ScaleFactor)2, -0x72f6d86e), 4);         \/\/    sar qword ptr [r9+r23*4-0x72f6d86e], 4    IID407\n+    __ salq(Address(r11, r24, (Address::ScaleFactor)1, -0x22826f95), 4);        \/\/    sal qword ptr [r11+r24*2-0x22826f95], 4    IID408\n+    __ sbbq(Address(r14, r30, (Address::ScaleFactor)1, +0x1b43fc34), 268435456); \/\/    sbb qword ptr [r14+r30*2+0x1b43fc34], 268435456    IID409\n+    __ shrq(Address(r26, r21, (Address::ScaleFactor)0, -0x3bae50c3), 8);        \/\/    shr qword ptr [r26+r21*1-0x3bae50c3], 8    IID410\n+    __ subq(Address(r22, r10, (Address::ScaleFactor)3, +0x47e1403), 65536);     \/\/    sub qword ptr [r22+r10*8+0x47e1403], 65536    IID411\n+    __ xorq(Address(rdx, r19, (Address::ScaleFactor)3, -0x644a5318), 1);        \/\/    xor qword ptr [rdx+r19*8-0x644a5318], 1    IID412\n+    __ orq(Address(r30, r31, (Address::ScaleFactor)1, +0x2c93c783), 256);       \/\/    or qword ptr [r30+r31*2+0x2c93c783], 256    IID413\n+    __ movq(Address(r26, r24, (Address::ScaleFactor)2, -0x534785f), 65536);     \/\/    mov qword ptr [r26+r24*4-0x534785f], 65536    IID414\n+    __ testq(Address(r14, r30, (Address::ScaleFactor)1, +0x3932e147), -256);    \/\/    test qword ptr [r14+r30*2+0x3932e147], -256    IID415\n+    __ addq(r30, Address(r30, r24, (Address::ScaleFactor)3, -0x66e0235e));      \/\/    add r30, qword ptr [r30+r24*8-0x66e0235e]    IID416\n+    __ andq(r15, Address(r26, +0x36456e42));                                    \/\/    and r15, qword ptr [r26+0x36456e42]    IID417\n+    __ cmpq(r10, Address(r18, +0x5044bed));                                     \/\/    cmp r10, qword ptr [r18+0x5044bed]    IID418\n+    __ lzcntq(r31, Address(r12, rdx, (Address::ScaleFactor)2, -0x1707b7d4));    \/\/    lzcnt r31, qword ptr [r12+rdx*4-0x1707b7d4]    IID419\n+    __ orq(r16, Address(r20, r23, (Address::ScaleFactor)2, -0x26783729));       \/\/    or r16, qword ptr [r20+r23*4-0x26783729]    IID420\n+    __ adcq(r31, Address(r30, r31, (Address::ScaleFactor)0, +0x1ec3265d));      \/\/    adc r31, qword ptr [r30+r31*1+0x1ec3265d]    IID421\n+    __ imulq(r16, Address(rdx, r26, (Address::ScaleFactor)0, +0x3586831b));     \/\/    imul r16, qword ptr [rdx+r26*1+0x3586831b]    IID422\n+    __ popcntq(r12, Address(r18, -0x3c3e9f7a));                                 \/\/    popcnt r12, qword ptr [r18-0x3c3e9f7a]    IID423\n+    __ sbbq(rcx, Address(r8, r21, (Address::ScaleFactor)3, +0x6b1515ab));       \/\/    sbb rcx, qword ptr [r8+r21*8+0x6b1515ab]    IID424\n+    __ subq(r29, Address(rcx, r23, (Address::ScaleFactor)2, +0x4ff06c4d));      \/\/    sub r29, qword ptr [rcx+r23*4+0x4ff06c4d]    IID425\n+    __ tzcntq(r26, Address(r24, r10, (Address::ScaleFactor)1, -0x75d9a189));    \/\/    tzcnt r26, qword ptr [r24+r10*2-0x75d9a189]    IID426\n+    __ xorq(r17, Address(rbx, rbx, (Address::ScaleFactor)0, +0x4033d59c));      \/\/    xor r17, qword ptr [rbx+rbx*1+0x4033d59c]    IID427\n+    __ movq(r18, Address(r22, r12, (Address::ScaleFactor)3, -0x3893347d));      \/\/    mov r18, qword ptr [r22+r12*8-0x3893347d]    IID428\n+    __ leaq(r12, Address(r20, r23, (Address::ScaleFactor)3, +0x4b311560));      \/\/    lea r12, qword ptr [r20+r23*8+0x4b311560]    IID429\n+    __ cvttsd2siq(r29, Address(r10, r28, (Address::ScaleFactor)2, +0x5c3a2657)); \/\/    cvttsd2si r29, qword ptr [r10+r28*4+0x5c3a2657]    IID430\n+    __ xchgq(r22, Address(r13, r25, (Address::ScaleFactor)3, +0x1a3d6f3f));     \/\/    xchg r22, qword ptr [r13+r25*8+0x1a3d6f3f]    IID431\n+    __ testq(r25, Address(r17, r24, (Address::ScaleFactor)3, -0x35addbd8));     \/\/    test r25, qword ptr [r17+r24*8-0x35addbd8]    IID432\n+    __ addq(r18, 1);                                                            \/\/    add r18, 1    IID433\n+    __ andq(r13, 16777216);                                                     \/\/    and r13, 16777216    IID434\n+    __ adcq(r13, 65536);                                                        \/\/    adc r13, 65536    IID435\n+    __ cmpq(r10, 65536);                                                        \/\/    cmp r10, 65536    IID436\n+    __ rclq(r20, 2);                                                            \/\/    rcl r20, 2    IID437\n+    __ rcrq(r9, 16);                                                            \/\/    rcr r9, 16    IID438\n+    __ rolq(r8, 1);                                                             \/\/    rol r8, 1    IID439\n+    __ rorq(r25, 2);                                                            \/\/    ror r25, 2    IID440\n+    __ sarq(r22, 8);                                                            \/\/    sar r22, 8    IID441\n+    __ salq(r17, 1);                                                            \/\/    sal r17, 1    IID442\n+    __ sbbq(r31, 16);                                                           \/\/    sbb r31, 16    IID443\n+    __ shlq(r27, 4);                                                            \/\/    shl r27, 4    IID444\n+    __ shrq(r28, 2);                                                            \/\/    shr r28, 2    IID445\n+    __ subq(rcx, 16777216);                                                     \/\/    sub rcx, 16777216    IID446\n+    __ xorq(r27, 1048576);                                                      \/\/    xor r27, 1048576    IID447\n+    __ movq(r20, 268435456);                                                    \/\/    mov r20, 268435456    IID448\n+    __ mov64(r27, 4503599627370496);                                            \/\/    mov r27, 4503599627370496    IID449\n+    __ btq(r22, 4);                                                             \/\/    bt r22, 4    IID450\n+    __ testq(r8, -4096);                                                        \/\/    test r8, -4096    IID451\n+    __ orq_imm32(r28, 1048576);                                                 \/\/    or r28, 1048576    IID452\n+    __ subq_imm32(r13, 65536);                                                  \/\/    sub r13, 65536    IID453\n+    __ cmovq(Assembler::Condition::overflow, r16, Address(r16, -0x1389a3eb));   \/\/    cmovo r16, qword ptr [r16-0x1389a3eb]    IID454\n+    __ cmovq(Assembler::Condition::noOverflow, rbx, Address(r29, r8, (Address::ScaleFactor)0, +0x1d022615)); \/\/    cmovno rbx, qword ptr [r29+r8*1+0x1d022615]    IID455\n+    __ cmovq(Assembler::Condition::below, rdx, Address(r12, r28, (Address::ScaleFactor)1, -0x34c898e2)); \/\/    cmovb rdx, qword ptr [r12+r28*2-0x34c898e2]    IID456\n+    __ cmovq(Assembler::Condition::aboveEqual, r27, Address(r10, rcx, (Address::ScaleFactor)3, -0x1ef7abf1)); \/\/    cmovae r27, qword ptr [r10+rcx*8-0x1ef7abf1]    IID457\n+    __ cmovq(Assembler::Condition::zero, r14, Address(r13, r29, (Address::ScaleFactor)2, -0x7c4c8369)); \/\/    cmovz r14, qword ptr [r13+r29*4-0x7c4c8369]    IID458\n+    __ cmovq(Assembler::Condition::notZero, r15, Address(r23, rcx, (Address::ScaleFactor)2, -0x6bd22ccf)); \/\/    cmovnz r15, qword ptr [r23+rcx*4-0x6bd22ccf]    IID459\n+    __ cmovq(Assembler::Condition::belowEqual, r24, Address(r15, r10, (Address::ScaleFactor)1, -0x7ffb3d09)); \/\/    cmovbe r24, qword ptr [r15+r10*2-0x7ffb3d09]    IID460\n+    __ cmovq(Assembler::Condition::above, r23, Address(r11, +0x276a863b));      \/\/    cmova r23, qword ptr [r11+0x276a863b]    IID461\n+    __ cmovq(Assembler::Condition::negative, r28, Address(r29, +0x3fb4396e));   \/\/    cmovs r28, qword ptr [r29+0x3fb4396e]    IID462\n+    __ cmovq(Assembler::Condition::positive, r26, Address(r27, rcx, (Address::ScaleFactor)3, +0x4ddea61c)); \/\/    cmovns r26, qword ptr [r27+rcx*8+0x4ddea61c]    IID463\n+    __ cmovq(Assembler::Condition::parity, r10, Address(r22, r19, (Address::ScaleFactor)1, +0x2a126966)); \/\/    cmovp r10, qword ptr [r22+r19*2+0x2a126966]    IID464\n+    __ cmovq(Assembler::Condition::noParity, r12, Address(r10, +0x3d7c59f));    \/\/    cmovnp r12, qword ptr [r10+0x3d7c59f]    IID465\n+    __ cmovq(Assembler::Condition::less, r10, Address(r8, r8, (Address::ScaleFactor)3, -0xe61862d)); \/\/    cmovl r10, qword ptr [r8+r8*8-0xe61862d]    IID466\n+    __ cmovq(Assembler::Condition::greaterEqual, r23, Address(r29, -0x777ed96d)); \/\/    cmovge r23, qword ptr [r29-0x777ed96d]    IID467\n+    __ cmovq(Assembler::Condition::lessEqual, rcx, Address(rbx, r19, (Address::ScaleFactor)1, +0x53c601cb)); \/\/    cmovle rcx, qword ptr [rbx+r19*2+0x53c601cb]    IID468\n+    __ cmovq(Assembler::Condition::greater, r14, Address(r17, rbx, (Address::ScaleFactor)0, -0x768bf073)); \/\/    cmovg r14, qword ptr [r17+rbx*1-0x768bf073]    IID469\n+    __ call(r29);                                                               \/\/    call r29    IID470\n+    __ divq(r10);                                                               \/\/    div r10    IID471\n+    __ idivq(r19);                                                              \/\/    idiv r19    IID472\n+    __ imulq(r15);                                                              \/\/    imul r15    IID473\n+    __ mulq(r27);                                                               \/\/    mul r27    IID474\n+    __ negq(r20);                                                               \/\/    neg r20    IID475\n+    __ notq(r10);                                                               \/\/    not r10    IID476\n+    __ rolq(r16);                                                               \/\/    rol r16, cl    IID477\n+    __ rorq(r27);                                                               \/\/    ror r27, cl    IID478\n+    __ sarq(r9);                                                                \/\/    sar r9, cl    IID479\n+    __ salq(r13);                                                               \/\/    sal r13, cl    IID480\n+    __ shlq(r14);                                                               \/\/    shl r14, cl    IID481\n+    __ shrq(r18);                                                               \/\/    shr r18, cl    IID482\n+    __ incrementq(r28);                                                         \/\/    inc r28    IID483\n+    __ decrementq(r28);                                                         \/\/    dec r28    IID484\n+    __ pushp(r22);                                                              \/\/    pushp r22    IID485\n+    __ popp(r8);                                                                \/\/    popp r8    IID486\n+    __ call(Address(r12, +0x64cc424e));                                         \/\/    call qword ptr [r12+0x64cc424e]    IID487\n+    __ mulq(Address(r26, r29, (Address::ScaleFactor)0, -0x466f085f));           \/\/    mul qword ptr [r26+r29*1-0x466f085f]    IID488\n+    __ negq(Address(r21, r24, (Address::ScaleFactor)0, +0x2037df0b));           \/\/    neg qword ptr [r21+r24*1+0x2037df0b]    IID489\n+    __ sarq(Address(r12, r31, (Address::ScaleFactor)3, -0x57d225aa));           \/\/    sar qword ptr [r12+r31*8-0x57d225aa], cl    IID490\n+    __ salq(Address(r20, -0x1ea02f90));                                         \/\/    sal qword ptr [r20-0x1ea02f90], cl    IID491\n+    __ shrq(Address(r13, r20, (Address::ScaleFactor)3, +0x171081f2));           \/\/    shr qword ptr [r13+r20*8+0x171081f2], cl    IID492\n+    __ incrementq(Address(r31, +0x13a808db));                                   \/\/    inc qword ptr [r31+0x13a808db]    IID493\n+    __ decrementq(Address(r19, -0x180d3ea1));                                   \/\/    dec qword ptr [r19-0x180d3ea1]    IID494\n+    __ imulq(r17, Address(r16, -0x2af2fd58), 4096);                             \/\/    imul r17, qword ptr [r16-0x2af2fd58], 4096    IID495\n+    __ imulq(r28, r25, 16);                                                     \/\/    imul r28, r25, 16    IID496\n+    __ shldq(r27, r13, 16);                                                     \/\/    shld r27, r13, 16    IID497\n+    __ shrdq(r8, r10, 16);                                                      \/\/    shrd r8, r10, 16    IID498\n+    __ pop2(r14, r8);                                                           \/\/    {load}pop2 r8, r14    IID499\n+    __ pop2p(r18, rbx);                                                         \/\/    {load}pop2p rbx, r18    IID500\n+    __ push2(r23, r19);                                                         \/\/    {load}push2 r19, r23    IID501\n+    __ push2p(r12, rbx);                                                        \/\/    {load}push2p rbx, r12    IID502\n+    __ movzbq(r9, Address(r14, r23, (Address::ScaleFactor)3, -0x428d2646));     \/\/    movzx r9, byte ptr [r14+r23*8-0x428d2646]    IID503\n+    __ movzwq(r28, Address(r9, rcx, (Address::ScaleFactor)2, -0x72611661));     \/\/    movzx r28, word ptr [r9+rcx*4-0x72611661]    IID504\n+    __ movsbq(rbx, Address(r24, r21, (Address::ScaleFactor)2, +0x3a6be990));    \/\/    movsx rbx, byte ptr [r24+r21*4+0x3a6be990]    IID505\n+    __ movswq(r16, Address(r22, r10, (Address::ScaleFactor)0, +0x7ef8bdd));     \/\/    movsx r16, word ptr [r22+r10*1+0x7ef8bdd]    IID506\n+    __ movzbq(r28, r14);                                                        \/\/    movzx r28, r14b    IID507\n+    __ movzwq(r13, r28);                                                        \/\/    movzx r13, r28w    IID508\n+    __ movsbq(r11, rdx);                                                        \/\/    movsx r11, dl    IID509\n+    __ movswq(r12, r26);                                                        \/\/    movsx r12, r26w    IID510\n+    __ cmpxchgq(r20, Address(r10, -0xbd2a8da));                                 \/\/    cmpxchg qword ptr [r10-0xbd2a8da], r20    IID511\n+    __ eidivq(r15, false);                                                      \/\/    {EVEX}idiv r15    IID512\n+    __ eidivq(r23, true);                                                       \/\/    {NF}idiv r23    IID513\n+    __ edivq(r14, false);                                                       \/\/    {EVEX}div r14    IID514\n+    __ edivq(r14, true);                                                        \/\/    {NF}div r14    IID515\n+    __ eimulq(r15, false);                                                      \/\/    {EVEX}imul r15    IID516\n+    __ eimulq(r20, true);                                                       \/\/    {NF}imul r20    IID517\n+    __ emulq(rcx, false);                                                       \/\/    {EVEX}mul rcx    IID518\n+    __ emulq(r21, true);                                                        \/\/    {NF}mul r21    IID519\n+    __ emulq(Address(r16, r10, (Address::ScaleFactor)3, +0x5f66ac1e), false);   \/\/    {EVEX}mul qword ptr [r16+r10*8+0x5f66ac1e]    IID520\n+    __ emulq(Address(r21, r22, (Address::ScaleFactor)3, -0xbbc807d), true);     \/\/    {NF}mul qword ptr [r21+r22*8-0xbbc807d]    IID521\n+    __ eimulq(r22, r26, false);                                                 \/\/    {EVEX}imul r22, r26    IID522\n+    __ eimulq(r25, r21, true);                                                  \/\/    {NF}imul r25, r21    IID523\n+    __ elzcntq(r20, r13, false);                                                \/\/    {EVEX}lzcnt r20, r13    IID524\n+    __ elzcntq(r25, r19, true);                                                 \/\/    {NF}lzcnt r25, r19    IID525\n+    __ enegq(r21, r30, false);                                                  \/\/    {EVEX}neg r21, r30    IID526\n+    __ enegq(r29, r11, true);                                                   \/\/    {NF}neg r29, r11    IID527\n+    __ enotq(r22, r8);                                                          \/\/    {EVEX}not r22, r8    IID528\n+    __ epopcntq(r12, r19, false);                                               \/\/    {EVEX}popcnt r12, r19    IID529\n+    __ epopcntq(r29, r23, true);                                                \/\/    {NF}popcnt r29, r23    IID530\n+    __ erolq(r28, r24, false);                                                  \/\/    {EVEX}rol r28, r24, cl    IID531\n+    __ erolq(rdx, r20, true);                                                   \/\/    {NF}rol rdx, r20, cl    IID532\n+    __ erorq(rbx, r30, false);                                                  \/\/    {EVEX}ror rbx, r30, cl    IID533\n+    __ erorq(r10, r15, true);                                                   \/\/    {NF}ror r10, r15, cl    IID534\n+    __ esalq(r17, r13, false);                                                  \/\/    {EVEX}sal r17, r13, cl    IID535\n+    __ esalq(r21, r24, true);                                                   \/\/    {NF}sal r21, r24, cl    IID536\n+    __ esarq(r31, r12, false);                                                  \/\/    {EVEX}sar r31, r12, cl    IID537\n+    __ esarq(rdx, r24, true);                                                   \/\/    {NF}sar rdx, r24, cl    IID538\n+    __ edecq(r21, r24, false);                                                  \/\/    {EVEX}dec r21, r24    IID539\n+    __ edecq(r15, r31, true);                                                   \/\/    {NF}dec r15, r31    IID540\n+    __ eincq(r10, rbx, false);                                                  \/\/    {EVEX}inc r10, rbx    IID541\n+    __ eincq(r18, r8, true);                                                    \/\/    {NF}inc r18, r8    IID542\n+    __ eshlq(r10, r26, false);                                                  \/\/    {EVEX}shl r10, r26, cl    IID543\n+    __ eshlq(r28, r14, true);                                                   \/\/    {NF}shl r28, r14, cl    IID544\n+    __ eshrq(r10, r19, false);                                                  \/\/    {EVEX}shr r10, r19, cl    IID545\n+    __ eshrq(r28, r21, true);                                                   \/\/    {NF}shr r28, r21, cl    IID546\n+    __ etzcntq(r21, r22, false);                                                \/\/    {EVEX}tzcnt r21, r22    IID547\n+    __ etzcntq(r16, r23, true);                                                 \/\/    {NF}tzcnt r16, r23    IID548\n+    __ eimulq(r11, Address(r18, r9, (Address::ScaleFactor)2, -0x132285a1), false); \/\/    {EVEX}imul r11, qword ptr [r18+r9*4-0x132285a1]    IID549\n+    __ eimulq(r13, Address(r24, r15, (Address::ScaleFactor)3, +0x48f50ca0), true); \/\/    {NF}imul r13, qword ptr [r24+r15*8+0x48f50ca0]    IID550\n+    __ elzcntq(r9, Address(r13, +0x2115cf0e), false);                           \/\/    {EVEX}lzcnt r9, qword ptr [r13+0x2115cf0e]    IID551\n+    __ elzcntq(r27, Address(r30, +0x49cabbb), true);                            \/\/    {NF}lzcnt r27, qword ptr [r30+0x49cabbb]    IID552\n+    __ enegq(r21, Address(r13, r31, (Address::ScaleFactor)2, +0x50a8f4d2), false); \/\/    {EVEX}neg r21, qword ptr [r13+r31*4+0x50a8f4d2]    IID553\n+    __ enegq(r22, Address(r18, r20, (Address::ScaleFactor)1, -0x5da0584c), true); \/\/    {NF}neg r22, qword ptr [r18+r20*2-0x5da0584c]    IID554\n+    __ epopcntq(r14, Address(rbx, r22, (Address::ScaleFactor)2, -0x606349d1), false); \/\/    {EVEX}popcnt r14, qword ptr [rbx+r22*4-0x606349d1]    IID555\n+    __ epopcntq(r26, Address(r23, r22, (Address::ScaleFactor)3, -0x72c66c23), true); \/\/    {NF}popcnt r26, qword ptr [r23+r22*8-0x72c66c23]    IID556\n+    __ esalq(r26, Address(r9, +0x334aba09), false);                             \/\/    {EVEX}sal r26, qword ptr [r9+0x334aba09], cl    IID557\n+    __ esalq(r9, Address(r9, r30, (Address::ScaleFactor)3, -0x219a6102), true); \/\/    {NF}sal r9, qword ptr [r9+r30*8-0x219a6102], cl    IID558\n+    __ esarq(r25, Address(r20, -0x2131bab1), false);                            \/\/    {EVEX}sar r25, qword ptr [r20-0x2131bab1], cl    IID559\n+    __ esarq(r16, Address(r28, r16, (Address::ScaleFactor)1, +0x48c483b9), true); \/\/    {NF}sar r16, qword ptr [r28+r16*2+0x48c483b9], cl    IID560\n+    __ edecq(r30, Address(r9, r16, (Address::ScaleFactor)0, -0x88ce84f), false); \/\/    {EVEX}dec r30, qword ptr [r9+r16*1-0x88ce84f]    IID561\n+    __ edecq(r11, Address(r30, r29, (Address::ScaleFactor)2, +0x3eeb8fd0), true); \/\/    {NF}dec r11, qword ptr [r30+r29*4+0x3eeb8fd0]    IID562\n+    __ eincq(r26, Address(r29, r10, (Address::ScaleFactor)3, +0x3ef4822e), false); \/\/    {EVEX}inc r26, qword ptr [r29+r10*8+0x3ef4822e]    IID563\n+    __ eincq(r29, Address(r19, r20, (Address::ScaleFactor)2, -0x3f0f3db9), true); \/\/    {NF}inc r29, qword ptr [r19+r20*4-0x3f0f3db9]    IID564\n+    __ eshrq(r8, Address(r30, r20, (Address::ScaleFactor)0, +0x15b56a17), false); \/\/    {EVEX}shr r8, qword ptr [r30+r20*1+0x15b56a17], cl    IID565\n+    __ eshrq(r26, Address(r11, -0x2de86561), true);                             \/\/    {NF}shr r26, qword ptr [r11-0x2de86561], cl    IID566\n+    __ etzcntq(r11, Address(rcx, r30, (Address::ScaleFactor)1, -0x32ffb1c2), false); \/\/    {EVEX}tzcnt r11, qword ptr [rcx+r30*2-0x32ffb1c2]    IID567\n+    __ etzcntq(r23, Address(r9, r12, (Address::ScaleFactor)1, -0x54823e69), true); \/\/    {NF}tzcnt r23, qword ptr [r9+r12*2-0x54823e69]    IID568\n+    __ eaddq(r20, Address(r13, rcx, (Address::ScaleFactor)3, -0x46116c0d), r15, false); \/\/    {EVEX}add r20, qword ptr [r13+rcx*8-0x46116c0d], r15    IID569\n+    __ eaddq(r13, Address(r9, r23, (Address::ScaleFactor)1, -0x286c7605), r16, true); \/\/    {NF}add r13, qword ptr [r9+r23*2-0x286c7605], r16    IID570\n+    __ eandq(r21, Address(r30, r17, (Address::ScaleFactor)0, +0xf4e30b2), r29, false); \/\/    {EVEX}and r21, qword ptr [r30+r17*1+0xf4e30b2], r29    IID571\n+    __ eandq(r30, Address(r17, r31, (Address::ScaleFactor)0, +0x3ab9dec4), r17, true); \/\/    {NF}and r30, qword ptr [r17+r31*1+0x3ab9dec4], r17    IID572\n+    __ eorq(r10, Address(r27, r30, (Address::ScaleFactor)1, -0x197f1266), r28, false); \/\/    {EVEX}or r10, qword ptr [r27+r30*2-0x197f1266], r28    IID573\n+    __ eorq(r9, Address(r29, r30, (Address::ScaleFactor)0, -0x24ea9b08), r11, true); \/\/    {NF}or r9, qword ptr [r29+r30*1-0x24ea9b08], r11    IID574\n+    __ esubq(r15, Address(r14, -0x4f44bf90), r16, false);                       \/\/    {EVEX}sub r15, qword ptr [r14-0x4f44bf90], r16    IID575\n+    __ esubq(rcx, Address(r21, r18, (Address::ScaleFactor)1, -0x11d0ac8f), r28, true); \/\/    {NF}sub rcx, qword ptr [r21+r18*2-0x11d0ac8f], r28    IID576\n+    __ exorq(r19, Address(r19, r18, (Address::ScaleFactor)0, -0xa5e55ec), r8, false); \/\/    {EVEX}xor r19, qword ptr [r19+r18*1-0xa5e55ec], r8    IID577\n+    __ exorq(r28, Address(r17, r28, (Address::ScaleFactor)1, -0x6eb42fe0), r16, true); \/\/    {NF}xor r28, qword ptr [r17+r28*2-0x6eb42fe0], r16    IID578\n+    __ eaddq(r17, Address(r18, -0x60ab1105), 16777216, false);                  \/\/    {EVEX}add r17, qword ptr [r18-0x60ab1105], 16777216    IID579\n+    __ eaddq(r25, Address(r19, r25, (Address::ScaleFactor)0, +0x122444d9), 65536, true); \/\/    {NF}add r25, qword ptr [r19+r25*1+0x122444d9], 65536    IID580\n+    __ eandq(r30, Address(r9, r28, (Address::ScaleFactor)1, -0x25b00cf3), 4096, false); \/\/    {EVEX}and r30, qword ptr [r9+r28*2-0x25b00cf3], 4096    IID581\n+    __ eandq(r9, Address(r22, rbx, (Address::ScaleFactor)1, -0x7e465026), 268435456, true); \/\/    {NF}and r9, qword ptr [r22+rbx*2-0x7e465026], 268435456    IID582\n+    __ eimulq(r12, Address(r25, r25, (Address::ScaleFactor)1, -0x432d68cc), 1, false); \/\/    {EVEX}imul r12, qword ptr [r25+r25*2-0x432d68cc], 1    IID583\n+    __ eimulq(r15, Address(r17, r31, (Address::ScaleFactor)3, -0x2b97565e), 16, true); \/\/    {NF}imul r15, qword ptr [r17+r31*8-0x2b97565e], 16    IID584\n+    __ eorq(r28, Address(rdx, r31, (Address::ScaleFactor)0, +0x3f1363b1), 256, false); \/\/    {EVEX}or r28, qword ptr [rdx+r31*1+0x3f1363b1], 256    IID585\n+    __ eorq(r16, Address(r12, r23, (Address::ScaleFactor)3, -0x1785863c), 16777216, true); \/\/    {NF}or r16, qword ptr [r12+r23*8-0x1785863c], 16777216    IID586\n+    __ esalq(r8, Address(r14, r24, (Address::ScaleFactor)2, -0x714290a5), 2, false); \/\/    {EVEX}sal r8, qword ptr [r14+r24*4-0x714290a5], 2    IID587\n+    __ esalq(r8, Address(r15, r14, (Address::ScaleFactor)2, +0x21f13243), 16, true); \/\/    {NF}sal r8, qword ptr [r15+r14*4+0x21f13243], 16    IID588\n+    __ esarq(r10, Address(r13, r29, (Address::ScaleFactor)0, +0x7d04cb72), 2, false); \/\/    {EVEX}sar r10, qword ptr [r13+r29*1+0x7d04cb72], 2    IID589\n+    __ esarq(r11, Address(r21, r31, (Address::ScaleFactor)3, -0x2176b4dc), 8, true); \/\/    {NF}sar r11, qword ptr [r21+r31*8-0x2176b4dc], 8    IID590\n+    __ eshrq(rcx, Address(r16, r12, (Address::ScaleFactor)1, +0x260c9a38), 4, false); \/\/    {EVEX}shr rcx, qword ptr [r16+r12*2+0x260c9a38], 4    IID591\n+    __ eshrq(r22, Address(r26, r9, (Address::ScaleFactor)0, -0x5e56bb62), 8, true); \/\/    {NF}shr r22, qword ptr [r26+r9*1-0x5e56bb62], 8    IID592\n+    __ esubq(r31, Address(rbx, r28, (Address::ScaleFactor)1, +0x2b00bb10), 1, false); \/\/    {EVEX}sub r31, qword ptr [rbx+r28*2+0x2b00bb10], 1    IID593\n+    __ esubq(r21, Address(r31, -0x6c10f4ad), 4096, true);                       \/\/    {NF}sub r21, qword ptr [r31-0x6c10f4ad], 4096    IID594\n+    __ exorq(r11, Address(r23, r30, (Address::ScaleFactor)1, +0x51a6026b), 65536, false); \/\/    {EVEX}xor r11, qword ptr [r23+r30*2+0x51a6026b], 65536    IID595\n+    __ exorq(r14, Address(r27, r10, (Address::ScaleFactor)2, -0x34ad9bab), 16, true); \/\/    {NF}xor r14, qword ptr [r27+r10*4-0x34ad9bab], 16    IID596\n+    __ eaddq(r20, r23, 16777216, false);                                        \/\/    {EVEX}add r20, r23, 16777216    IID597\n+    __ eaddq(rax, r23, 16777216, false);                                        \/\/    {EVEX}add rax, r23, 16777216    IID598\n+    __ eaddq(r9, r21, 4096, true);                                              \/\/    {NF}add r9, r21, 4096    IID599\n+    __ eaddq(rax, r21, 4096, true);                                             \/\/    {NF}add rax, r21, 4096    IID600\n+    __ eandq(r20, rdx, 16, false);                                              \/\/    {EVEX}and r20, rdx, 16    IID601\n+    __ eandq(rax, rdx, 16, false);                                              \/\/    {EVEX}and rax, rdx, 16    IID602\n+    __ eandq(r14, r19, 16, true);                                               \/\/    {NF}and r14, r19, 16    IID603\n+    __ eandq(rax, r19, 16, true);                                               \/\/    {NF}and rax, r19, 16    IID604\n+    __ eimulq(r27, r17, 16, false);                                             \/\/    {EVEX}imul r27, r17, 16    IID605\n+    __ eimulq(rax, r17, 16, false);                                             \/\/    {EVEX}imul rax, r17, 16    IID606\n+    __ eimulq(r30, r13, 256, true);                                             \/\/    {NF}imul r30, r13, 256    IID607\n+    __ eimulq(rax, r13, 256, true);                                             \/\/    {NF}imul rax, r13, 256    IID608\n+    __ eorq(r19, r15, 16777216, false);                                         \/\/    {EVEX}or r19, r15, 16777216    IID609\n+    __ eorq(rax, r15, 16777216, false);                                         \/\/    {EVEX}or rax, r15, 16777216    IID610\n+    __ eorq(r16, r28, 268435456, true);                                         \/\/    {NF}or r16, r28, 268435456    IID611\n+    __ eorq(rax, r28, 268435456, true);                                         \/\/    {NF}or rax, r28, 268435456    IID612\n+    __ erclq(rbx, r24, 2);                                                      \/\/    {EVEX}rcl rbx, r24, 2    IID613\n+    __ erclq(rax, r24, 2);                                                      \/\/    {EVEX}rcl rax, r24, 2    IID614\n+    __ erolq(r15, r20, 16, false);                                              \/\/    {EVEX}rol r15, r20, 16    IID615\n+    __ erolq(rax, r20, 16, false);                                              \/\/    {EVEX}rol rax, r20, 16    IID616\n+    __ erolq(r11, rcx, 16, true);                                               \/\/    {NF}rol r11, rcx, 16    IID617\n+    __ erolq(rax, rcx, 16, true);                                               \/\/    {NF}rol rax, rcx, 16    IID618\n+    __ erorq(r13, r26, 16, false);                                              \/\/    {EVEX}ror r13, r26, 16    IID619\n+    __ erorq(rax, r26, 16, false);                                              \/\/    {EVEX}ror rax, r26, 16    IID620\n+    __ erorq(r19, r20, 4, true);                                                \/\/    {NF}ror r19, r20, 4    IID621\n+    __ erorq(rax, r20, 4, true);                                                \/\/    {NF}ror rax, r20, 4    IID622\n+    __ esalq(r19, r28, 16, false);                                              \/\/    {EVEX}sal r19, r28, 16    IID623\n+    __ esalq(rax, r28, 16, false);                                              \/\/    {EVEX}sal rax, r28, 16    IID624\n+    __ esalq(r25, r18, 4, true);                                                \/\/    {NF}sal r25, r18, 4    IID625\n+    __ esalq(rax, r18, 4, true);                                                \/\/    {NF}sal rax, r18, 4    IID626\n+    __ esarq(r10, r27, 4, false);                                               \/\/    {EVEX}sar r10, r27, 4    IID627\n+    __ esarq(rax, r27, 4, false);                                               \/\/    {EVEX}sar rax, r27, 4    IID628\n+    __ esarq(rdx, r22, 8, true);                                                \/\/    {NF}sar rdx, r22, 8    IID629\n+    __ esarq(rax, r22, 8, true);                                                \/\/    {NF}sar rax, r22, 8    IID630\n+    __ eshlq(r28, r15, 1, false);                                               \/\/    {EVEX}shl r28, r15, 1    IID631\n+    __ eshlq(rax, r15, 1, false);                                               \/\/    {EVEX}shl rax, r15, 1    IID632\n+    __ eshlq(rbx, r12, 4, true);                                                \/\/    {NF}shl rbx, r12, 4    IID633\n+    __ eshlq(rax, r12, 4, true);                                                \/\/    {NF}shl rax, r12, 4    IID634\n+    __ eshrq(r26, r11, 1, false);                                               \/\/    {EVEX}shr r26, r11, 1    IID635\n+    __ eshrq(rax, r11, 1, false);                                               \/\/    {EVEX}shr rax, r11, 1    IID636\n+    __ eshrq(rdx, r31, 8, true);                                                \/\/    {NF}shr rdx, r31, 8    IID637\n+    __ eshrq(rax, r31, 8, true);                                                \/\/    {NF}shr rax, r31, 8    IID638\n+    __ esubq(r21, rbx, 1048576, false);                                         \/\/    {EVEX}sub r21, rbx, 1048576    IID639\n+    __ esubq(rax, rbx, 1048576, false);                                         \/\/    {EVEX}sub rax, rbx, 1048576    IID640\n+    __ esubq(r25, r28, 65536, true);                                            \/\/    {NF}sub r25, r28, 65536    IID641\n+    __ esubq(rax, r28, 65536, true);                                            \/\/    {NF}sub rax, r28, 65536    IID642\n+    __ exorq(r22, r14, 1, false);                                               \/\/    {EVEX}xor r22, r14, 1    IID643\n+    __ exorq(rax, r14, 1, false);                                               \/\/    {EVEX}xor rax, r14, 1    IID644\n+    __ exorq(r11, r30, 1048576, true);                                          \/\/    {NF}xor r11, r30, 1048576    IID645\n+    __ exorq(rax, r30, 1048576, true);                                          \/\/    {NF}xor rax, r30, 1048576    IID646\n+    __ eorq_imm32(r20, r19, 1048576, false);                                    \/\/    {EVEX}or r20, r19, 1048576    IID647\n+    __ eorq_imm32(rax, r19, 1048576, false);                                    \/\/    {EVEX}or rax, r19, 1048576    IID648\n+    __ eorq_imm32(r25, r13, 268435456, false);                                  \/\/    {EVEX}or r25, r13, 268435456    IID649\n+    __ eorq_imm32(rax, r13, 268435456, false);                                  \/\/    {EVEX}or rax, r13, 268435456    IID650\n+    __ esubq_imm32(r25, r25, 268435456, false);                                 \/\/    {EVEX}sub r25, r25, 268435456    IID651\n+    __ esubq_imm32(rax, r25, 268435456, false);                                 \/\/    {EVEX}sub rax, r25, 268435456    IID652\n+    __ esubq_imm32(r18, r11, 4194304, true);                                    \/\/    {NF}sub r18, r11, 4194304    IID653\n+    __ esubq_imm32(rax, r11, 4194304, true);                                    \/\/    {NF}sub rax, r11, 4194304    IID654\n+    __ eaddq(r10, r18, Address(r20, +0x756f453), false);                        \/\/    {EVEX}add r10, r18, qword ptr [r20+0x756f453]    IID655\n+    __ eaddq(rbx, r27, Address(r22, r21, (Address::ScaleFactor)0, -0x25abeab7), true); \/\/    {NF}add rbx, r27, qword ptr [r22+r21*1-0x25abeab7]    IID656\n+    __ eandq(rdx, r31, Address(r9, r20, (Address::ScaleFactor)3, -0x4cfe39c), false); \/\/    {EVEX}and rdx, r31, qword ptr [r9+r20*8-0x4cfe39c]    IID657\n+    __ eandq(r16, r25, Address(r14, r27, (Address::ScaleFactor)0, +0x7c6654d9), true); \/\/    {NF}and r16, r25, qword ptr [r14+r27*1+0x7c6654d9]    IID658\n+    __ eorq(r29, rcx, Address(r15, r23, (Address::ScaleFactor)0, +0x45b7f72d), false); \/\/    {EVEX}or r29, rcx, qword ptr [r15+r23*1+0x45b7f72d]    IID659\n+    __ eorq(r19, r17, Address(r13, r22, (Address::ScaleFactor)1, -0x750c1996), true); \/\/    {NF}or r19, r17, qword ptr [r13+r22*2-0x750c1996]    IID660\n+    __ eimulq(r13, r8, Address(r31, r23, (Address::ScaleFactor)1, -0x2211b6b2), false); \/\/    {EVEX}imul r13, r8, qword ptr [r31+r23*2-0x2211b6b2]    IID661\n+    __ eimulq(r11, r28, Address(r13, r11, (Address::ScaleFactor)3, +0x5c0013ab), true); \/\/    {NF}imul r11, r28, qword ptr [r13+r11*8+0x5c0013ab]    IID662\n+    __ esubq(rdx, r18, Address(r18, rcx, (Address::ScaleFactor)0, +0x59557e71), false); \/\/    {EVEX}sub rdx, r18, qword ptr [r18+rcx*1+0x59557e71]    IID663\n+    __ esubq(r27, r11, Address(r22, -0x28469649), true);                        \/\/    {NF}sub r27, r11, qword ptr [r22-0x28469649]    IID664\n+    __ exorq(r10, r9, Address(r24, +0x49691d54), false);                        \/\/    {EVEX}xor r10, r9, qword ptr [r24+0x49691d54]    IID665\n+    __ exorq(r24, r12, Address(r19, +0x22d529aa), true);                        \/\/    {NF}xor r24, r12, qword ptr [r19+0x22d529aa]    IID666\n+    __ eaddq(r20, r9, r10, false);                                              \/\/    {load}{EVEX}add r20, r9, r10    IID667\n+    __ eaddq(r18, r17, r26, true);                                              \/\/    {load}{NF}add r18, r17, r26    IID668\n+    __ eadcxq(r21, r16, r19);                                                   \/\/    {load}{EVEX}adcx r21, r16, r19    IID669\n+    __ eadoxq(rbx, r14, r27);                                                   \/\/    {load}{EVEX}adox rbx, r14, r27    IID670\n+    __ eandq(r9, r12, r22, false);                                              \/\/    {load}{EVEX}and r9, r12, r22    IID671\n+    __ eandq(r17, r25, r10, true);                                              \/\/    {load}{NF}and r17, r25, r10    IID672\n+    __ eimulq(r12, r15, r14, false);                                            \/\/    {load}{EVEX}imul r12, r15, r14    IID673\n+    __ eimulq(r29, r18, r16, true);                                             \/\/    {load}{NF}imul r29, r18, r16    IID674\n+    __ eorq(r11, r9, r10, false);                                               \/\/    {load}{EVEX}or r11, r9, r10    IID675\n+    __ eorq(r25, r13, r16, true);                                               \/\/    {load}{NF}or r25, r13, r16    IID676\n+    __ esubq(r11, r21, r25, false);                                             \/\/    {load}{EVEX}sub r11, r21, r25    IID677\n+    __ esubq(rdx, r20, rbx, true);                                              \/\/    {load}{NF}sub rdx, r20, rbx    IID678\n+    __ exorq(r25, r21, r26, false);                                             \/\/    {load}{EVEX}xor r25, r21, r26    IID679\n+    __ exorq(r23, r27, r21, true);                                              \/\/    {load}{NF}xor r23, r27, r21    IID680\n+    __ eshldq(r10, r12, r31, 2, false);                                         \/\/    {EVEX}shld r10, r12, r31, 2    IID681\n+    __ eshldq(r23, r16, r29, 2, true);                                          \/\/    {NF}shld r23, r16, r29, 2    IID682\n+    __ eshrdq(r19, r24, r23, 4, false);                                         \/\/    {EVEX}shrd r19, r24, r23, 4    IID683\n+    __ eshrdq(r21, r15, r25, 4, true);                                          \/\/    {NF}shrd r21, r15, r25, 4    IID684\n+    __ ecmovq (Assembler::Condition::overflow, r9, r29, rdx);                   \/\/    cmovo r9, r29, rdx    IID685\n+    __ ecmovq (Assembler::Condition::noOverflow, r11, r25, r19);                \/\/    cmovno r11, r25, r19    IID686\n+    __ ecmovq (Assembler::Condition::below, r10, r16, r17);                     \/\/    cmovb r10, r16, r17    IID687\n+    __ ecmovq (Assembler::Condition::aboveEqual, r8, r23, r31);                 \/\/    cmovae r8, r23, r31    IID688\n+    __ ecmovq (Assembler::Condition::zero, r9, r31, rbx);                       \/\/    cmovz r9, r31, rbx    IID689\n+    __ ecmovq (Assembler::Condition::notZero, r16, r29, r9);                    \/\/    cmovnz r16, r29, r9    IID690\n+    __ ecmovq (Assembler::Condition::belowEqual, r24, r10, r9);                 \/\/    cmovbe r24, r10, r9    IID691\n+    __ ecmovq (Assembler::Condition::above, r22, r28, r26);                     \/\/    cmova r22, r28, r26    IID692\n+    __ ecmovq (Assembler::Condition::negative, r18, r25, r20);                  \/\/    cmovs r18, r25, r20    IID693\n+    __ ecmovq (Assembler::Condition::positive, r16, r21, rbx);                  \/\/    cmovns r16, r21, rbx    IID694\n+    __ ecmovq (Assembler::Condition::parity, r28, r22, r19);                    \/\/    cmovp r28, r22, r19    IID695\n+    __ ecmovq (Assembler::Condition::noParity, r13, r15, rdx);                  \/\/    cmovnp r13, r15, rdx    IID696\n+    __ ecmovq (Assembler::Condition::less, r8, r22, r14);                       \/\/    cmovl r8, r22, r14    IID697\n+    __ ecmovq (Assembler::Condition::greaterEqual, r12, r24, r14);              \/\/    cmovge r12, r24, r14    IID698\n+    __ ecmovq (Assembler::Condition::lessEqual, r24, r13, r21);                 \/\/    cmovle r24, r13, r21    IID699\n+    __ ecmovq (Assembler::Condition::greater, rbx, rbx, r27);                   \/\/    cmovg rbx, rbx, r27    IID700\n+    __ ecmovq (Assembler::Condition::overflow, r14, r17, Address(r24, r27, (Address::ScaleFactor)3, +0x9d508f0)); \/\/    cmovo r14, r17, qword ptr [r24+r27*8+0x9d508f0]    IID701\n+    __ ecmovq (Assembler::Condition::noOverflow, r13, r15, Address(r31, r21, (Address::ScaleFactor)2, +0x6ef2c74a)); \/\/    cmovno r13, r15, qword ptr [r31+r21*4+0x6ef2c74a]    IID702\n+    __ ecmovq (Assembler::Condition::below, r13, r27, Address(r31, r25, (Address::ScaleFactor)1, +0x734fe9ab)); \/\/    cmovb r13, r27, qword ptr [r31+r25*2+0x734fe9ab]    IID703\n+    __ ecmovq (Assembler::Condition::aboveEqual, r15, r22, Address(r14, r29, (Address::ScaleFactor)2, -0x67d8bdfb)); \/\/    cmovae r15, r22, qword ptr [r14+r29*4-0x67d8bdfb]    IID704\n+    __ ecmovq (Assembler::Condition::zero, r30, r23, Address(r15, r28, (Address::ScaleFactor)1, -0x2686219)); \/\/    cmovz r30, r23, qword ptr [r15+r28*2-0x2686219]    IID705\n+    __ ecmovq (Assembler::Condition::notZero, r12, r9, Address(r9, r25, (Address::ScaleFactor)3, +0x52aab6b)); \/\/    cmovnz r12, r9, qword ptr [r9+r25*8+0x52aab6b]    IID706\n+    __ ecmovq (Assembler::Condition::belowEqual, r9, r25, Address(r8, r8, (Address::ScaleFactor)3, -0x1e42bd95)); \/\/    cmovbe r9, r25, qword ptr [r8+r8*8-0x1e42bd95]    IID707\n+    __ ecmovq (Assembler::Condition::above, rcx, r20, Address(r27, rbx, (Address::ScaleFactor)2, +0x46823c58)); \/\/    cmova rcx, r20, qword ptr [r27+rbx*4+0x46823c58]    IID708\n+    __ ecmovq (Assembler::Condition::negative, rbx, r12, Address(r21, -0x635b8c8)); \/\/    cmovs rbx, r12, qword ptr [r21-0x635b8c8]    IID709\n+    __ ecmovq (Assembler::Condition::positive, r23, rbx, Address(r27, r26, (Address::ScaleFactor)3, +0x922bcc0)); \/\/    cmovns r23, rbx, qword ptr [r27+r26*8+0x922bcc0]    IID710\n+    __ ecmovq (Assembler::Condition::parity, r25, r9, Address(r23, +0xd2a14ec)); \/\/    cmovp r25, r9, qword ptr [r23+0xd2a14ec]    IID711\n+    __ ecmovq (Assembler::Condition::noParity, r11, r19, Address(r11, -0xfb95a9d)); \/\/    cmovnp r11, r19, qword ptr [r11-0xfb95a9d]    IID712\n+    __ ecmovq (Assembler::Condition::less, r13, r18, Address(r28, r19, (Address::ScaleFactor)0, +0x716b9b7e)); \/\/    cmovl r13, r18, qword ptr [r28+r19*1+0x716b9b7e]    IID713\n+    __ ecmovq (Assembler::Condition::greaterEqual, r21, r16, Address(rcx, r29, (Address::ScaleFactor)0, -0x5af0441e)); \/\/    cmovge r21, r16, qword ptr [rcx+r29*1-0x5af0441e]    IID714\n+    __ ecmovq (Assembler::Condition::lessEqual, r12, r31, Address(r20, r26, (Address::ScaleFactor)0, +0xe0b7fb1)); \/\/    cmovle r12, r31, qword ptr [r20+r26*1+0xe0b7fb1]    IID715\n+    __ ecmovq (Assembler::Condition::greater, r15, r24, Address(r30, +0x2d3b7b4f)); \/\/    cmovg r15, r24, qword ptr [r30+0x2d3b7b4f]    IID716\n@@ -947,406 +1009,468 @@\n-    0x62, 0xdc, 0x5c, 0x14, 0x81, 0xc0, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID255\n-    0x62, 0xdc, 0x6c, 0x10, 0x81, 0xe2, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID256\n-    0x62, 0xd4, 0x14, 0x14, 0x83, 0xe5, 0x01,                                        \/\/ IID257\n-    0x62, 0xdc, 0x7c, 0x08, 0x69, 0xcf, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID258\n-    0x62, 0xcc, 0x7c, 0x0c, 0x69, 0xfd, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID259\n-    0x62, 0xfc, 0x44, 0x10, 0x81, 0xcf, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID260\n-    0x62, 0xd4, 0x54, 0x14, 0x81, 0xc9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID261\n-    0x62, 0xf4, 0x14, 0x18, 0xc1, 0xd2, 0x04,                                        \/\/ IID262\n-    0x62, 0xdc, 0x04, 0x18, 0xc1, 0xc7, 0x08,                                        \/\/ IID263\n-    0x62, 0xd4, 0x3c, 0x1c, 0xc1, 0xc1, 0x02,                                        \/\/ IID264\n-    0x62, 0xd4, 0x34, 0x18, 0xc1, 0xcf, 0x08,                                        \/\/ IID265\n-    0x62, 0xd4, 0x54, 0x14, 0xc1, 0xcc, 0x08,                                        \/\/ IID266\n-    0x62, 0xdc, 0x64, 0x10, 0xd1, 0xe3,                                              \/\/ IID267\n-    0x62, 0xd4, 0x2c, 0x1c, 0xc1, 0xe3, 0x10,                                        \/\/ IID268\n-    0x62, 0xf4, 0x3c, 0x18, 0xc1, 0xfa, 0x08,                                        \/\/ IID269\n-    0x62, 0xdc, 0x4c, 0x14, 0xc1, 0xfe, 0x04,                                        \/\/ IID270\n-    0x62, 0xdc, 0x34, 0x10, 0xc1, 0xe7, 0x10,                                        \/\/ IID271\n-    0x62, 0xd4, 0x2c, 0x1c, 0xc1, 0xe1, 0x08,                                        \/\/ IID272\n-    0x62, 0xd4, 0x14, 0x18, 0xc1, 0xe8, 0x04,                                        \/\/ IID273\n-    0x62, 0xfc, 0x7c, 0x14, 0xc1, 0xed, 0x10,                                        \/\/ IID274\n-    0x62, 0xfc, 0x2c, 0x10, 0x81, 0xef, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID275\n-    0x62, 0xd4, 0x2c, 0x14, 0x81, 0xee, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID276\n-    0x62, 0xdc, 0x24, 0x10, 0x81, 0xf2, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID277\n-    0x62, 0xd4, 0x4c, 0x14, 0x83, 0xf1, 0x01,                                        \/\/ IID278\n-    0x62, 0xdc, 0x4c, 0x10, 0x81, 0xee, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID279\n-    0x62, 0xfc, 0x3c, 0x1c, 0x81, 0xe8, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID280\n-    0x62, 0x04, 0x5c, 0x10, 0x03, 0xac, 0x63, 0x80, 0x09, 0xac, 0x00,                \/\/ IID281\n-    0x62, 0xd4, 0x68, 0x14, 0x03, 0x9c, 0x51, 0x5d, 0x12, 0x4a, 0x43,                \/\/ IID282\n-    0x62, 0x54, 0x08, 0x18, 0x23, 0xbc, 0x9e, 0xee, 0xa5, 0xa5, 0x15,                \/\/ IID283\n-    0x62, 0x0c, 0x1c, 0x14, 0x23, 0xbc, 0xe0, 0x98, 0x81, 0x92, 0x92,                \/\/ IID284\n-    0x62, 0x1c, 0x38, 0x10, 0xaf, 0xac, 0xc8, 0xfd, 0x73, 0x46, 0x78,                \/\/ IID285\n-    0x62, 0x84, 0x3c, 0x14, 0xaf, 0xac, 0xa8, 0x77, 0xc7, 0x99, 0x9c,                \/\/ IID286\n-    0x62, 0x4c, 0x1c, 0x18, 0x0b, 0x86, 0xaa, 0x9a, 0xad, 0x98,                      \/\/ IID287\n-    0x62, 0x34, 0x10, 0x1c, 0x0b, 0xac, 0x8b, 0x27, 0xb2, 0xc6, 0xa0,                \/\/ IID288\n-    0x62, 0x4c, 0x2c, 0x10, 0x2b, 0x8c, 0xd1, 0x66, 0x08, 0xc6, 0xd1,                \/\/ IID289\n-    0x62, 0x34, 0x18, 0x14, 0x2b, 0x84, 0xc2, 0xac, 0x65, 0x26, 0xf1,                \/\/ IID290\n-    0x62, 0xcc, 0x00, 0x10, 0x33, 0xb4, 0xe6, 0xbd, 0x1c, 0xc4, 0x3a,                \/\/ IID291\n-    0x62, 0x44, 0x38, 0x14, 0x33, 0xb4, 0x4d, 0xe3, 0xc2, 0xfd, 0x1e,                \/\/ IID292\n-    0x62, 0x84, 0x7c, 0x10, 0x32, 0x84, 0x79, 0x34, 0xeb, 0x9f, 0x76,                \/\/ IID293\n-    0x62, 0x44, 0x64, 0x14, 0x32, 0x8a, 0x29, 0xb4, 0x39, 0x22,                      \/\/ IID294\n-    0x62, 0xac, 0x31, 0x10, 0x33, 0x9c, 0x40, 0xea, 0xfa, 0x71, 0x1c,                \/\/ IID295\n-    0x62, 0x5c, 0x65, 0x14, 0x33, 0x94, 0x24, 0x03, 0xf3, 0x65, 0xd6,                \/\/ IID296\n-    0x62, 0xcc, 0x64, 0x18, 0x03, 0xf8,                                              \/\/ IID297\n-    0x62, 0x5c, 0x1c, 0x14, 0x03, 0xf0,                                              \/\/ IID298\n-    0x62, 0x4c, 0x0c, 0x10, 0x23, 0xfa,                                              \/\/ IID299\n-    0x62, 0x6c, 0x1c, 0x1c, 0x23, 0xff,                                              \/\/ IID300\n-    0x62, 0xc4, 0x34, 0x18, 0xaf, 0xe2,                                              \/\/ IID301\n-    0x62, 0x44, 0x14, 0x1c, 0xaf, 0xf1,                                              \/\/ IID302\n-    0x62, 0xec, 0x35, 0x10, 0x0b, 0xdf,                                              \/\/ IID303\n-    0x62, 0xe4, 0x1d, 0x1c, 0x0b, 0xc2,                                              \/\/ IID304\n-    0x62, 0xc4, 0x04, 0x10, 0x0b, 0xc9,                                              \/\/ IID305\n-    0x62, 0x74, 0x04, 0x1c, 0x0b, 0xeb,                                              \/\/ IID306\n-    0x62, 0x64, 0x1c, 0x10, 0xa5, 0xeb,                                              \/\/ IID307\n-    0x62, 0x74, 0x4c, 0x14, 0xa5, 0xc3,                                              \/\/ IID308\n-    0x62, 0xc4, 0x3c, 0x18, 0xad, 0xc3,                                              \/\/ IID309\n-    0x62, 0x54, 0x14, 0x1c, 0xad, 0xfc,                                              \/\/ IID310\n-    0x62, 0xcc, 0x74, 0x10, 0x2b, 0xff,                                              \/\/ IID311\n-    0x62, 0xcc, 0x5c, 0x14, 0x2b, 0xf2,                                              \/\/ IID312\n-    0x62, 0x6c, 0x2c, 0x18, 0x33, 0xcb,                                              \/\/ IID313\n-    0x62, 0xcc, 0x24, 0x1c, 0x33, 0xde,                                              \/\/ IID314\n-    0x62, 0xd4, 0x1c, 0x18, 0x24, 0xd2, 0x01,                                        \/\/ IID315\n-    0x62, 0xcc, 0x5c, 0x14, 0x24, 0xd6, 0x10,                                        \/\/ IID316\n-    0x62, 0xcc, 0x6c, 0x10, 0x2c, 0xd1, 0x08,                                        \/\/ IID317\n-    0x62, 0x6c, 0x64, 0x14, 0x2c, 0xc8, 0x01,                                        \/\/ IID318\n-    0x62, 0x4c, 0x24, 0x18, 0x40, 0xf8,                                              \/\/ IID319\n-    0x62, 0x6c, 0x0c, 0x18, 0x41, 0xf0,                                              \/\/ IID320\n-    0x62, 0x5c, 0x34, 0x18, 0x42, 0xda,                                              \/\/ IID321\n-    0x62, 0xdc, 0x24, 0x10, 0x43, 0xd7,                                              \/\/ IID322\n-    0x62, 0x44, 0x3c, 0x10, 0x44, 0xea,                                              \/\/ IID323\n-    0x62, 0xc4, 0x74, 0x18, 0x45, 0xef,                                              \/\/ IID324\n-    0x62, 0xcc, 0x44, 0x10, 0x46, 0xca,                                              \/\/ IID325\n-    0x62, 0x44, 0x5c, 0x10, 0x47, 0xdd,                                              \/\/ IID326\n-    0x62, 0xc4, 0x04, 0x18, 0x48, 0xf7,                                              \/\/ IID327\n-    0x62, 0x6c, 0x14, 0x10, 0x49, 0xd2,                                              \/\/ IID328\n-    0x62, 0x7c, 0x34, 0x18, 0x4a, 0xce,                                              \/\/ IID329\n-    0x62, 0xc4, 0x0c, 0x10, 0x4b, 0xfb,                                              \/\/ IID330\n-    0x62, 0x74, 0x5c, 0x10, 0x4c, 0xdb,                                              \/\/ IID331\n-    0x62, 0xec, 0x1c, 0x10, 0x4d, 0xc4,                                              \/\/ IID332\n-    0x62, 0x6c, 0x74, 0x10, 0x4e, 0xc6,                                              \/\/ IID333\n-    0x62, 0x54, 0x7c, 0x10, 0x4f, 0xff,                                              \/\/ IID334\n-    0x62, 0x4c, 0x18, 0x10, 0x40, 0x8c, 0x85, 0x53, 0xef, 0x6e, 0xc3,                \/\/ IID335\n-    0x62, 0x34, 0x40, 0x10, 0x41, 0xbc, 0xf3, 0xbd, 0x58, 0xbc, 0x1c,                \/\/ IID336\n-    0x62, 0xd4, 0x2c, 0x10, 0x42, 0x9c, 0xcc, 0x1a, 0x58, 0x4e, 0x08,                \/\/ IID337\n-    0x62, 0x6c, 0x74, 0x18, 0x43, 0x81, 0x2d, 0xe9, 0xec, 0x5c,                      \/\/ IID338\n-    0x62, 0x0c, 0x2c, 0x10, 0x44, 0x84, 0xe0, 0xa2, 0x46, 0x77, 0x50,                \/\/ IID339\n-    0x62, 0x74, 0x38, 0x18, 0x45, 0xbc, 0x19, 0x8a, 0xa3, 0xfc, 0xf0,                \/\/ IID340\n-    0x62, 0xac, 0x68, 0x18, 0x46, 0xbc, 0x1e, 0xcc, 0xca, 0x01, 0xed,                \/\/ IID341\n-    0x62, 0x84, 0x08, 0x10, 0x47, 0x9c, 0x25, 0x9d, 0xee, 0xb8, 0x73,                \/\/ IID342\n-    0x62, 0x6c, 0x4c, 0x10, 0x48, 0xb4, 0x08, 0x46, 0xc1, 0xaa, 0x22,                \/\/ IID343\n-    0x62, 0x2c, 0x74, 0x10, 0x49, 0xb4, 0x89, 0xb1, 0xb2, 0x9d, 0x07,                \/\/ IID344\n-    0x62, 0xd4, 0x28, 0x10, 0x4a, 0x94, 0x46, 0xef, 0xdf, 0xdb, 0xf7,                \/\/ IID345\n-    0x62, 0x84, 0x20, 0x18, 0x4b, 0x9c, 0x7e, 0x34, 0xae, 0x0d, 0xb0,                \/\/ IID346\n-    0x62, 0xc4, 0x58, 0x10, 0x4c, 0x94, 0x85, 0x1e, 0x39, 0x10, 0xe6,                \/\/ IID347\n-    0x62, 0x54, 0x60, 0x10, 0x4d, 0xac, 0x7d, 0x14, 0x77, 0x1b, 0x61,                \/\/ IID348\n-    0x62, 0x7c, 0x10, 0x10, 0x4e, 0xac, 0xc9, 0x3f, 0xa9, 0x94, 0x3a,                \/\/ IID349\n-    0x62, 0x44, 0x10, 0x18, 0x4f, 0xac, 0x7f, 0x32, 0x35, 0xd4, 0x76,                \/\/ IID350\n-    0x4d, 0x13, 0xfd,                                                                \/\/ IID351\n-    0x4d, 0x3b, 0xcc,                                                                \/\/ IID352\n-    0xd5, 0x9c, 0xaf, 0xfd,                                                          \/\/ IID353\n-    0xf3, 0x4d, 0x0f, 0xb8, 0xe1,                                                    \/\/ IID354\n-    0xd5, 0x58, 0x1b, 0xcf,                                                          \/\/ IID355\n-    0xd5, 0x18, 0x2b, 0xd0,                                                          \/\/ IID356\n-    0xf3, 0xd5, 0xcd, 0xbc, 0xea,                                                    \/\/ IID357\n-    0xf3, 0xd5, 0xd8, 0xbd, 0xe9,                                                    \/\/ IID358\n-    0xd5, 0x5c, 0x03, 0xea,                                                          \/\/ IID359\n-    0xd5, 0x5d, 0x23, 0xe0,                                                          \/\/ IID360\n-    0xd5, 0x1c, 0x0b, 0xd4,                                                          \/\/ IID361\n-    0xd5, 0x4d, 0x33, 0xda,                                                          \/\/ IID362\n-    0x4d, 0x8b, 0xf3,                                                                \/\/ IID363\n-    0xd5, 0xcc, 0xbc, 0xd9,                                                          \/\/ IID364\n-    0xd5, 0xc9, 0xbd, 0xf7,                                                          \/\/ IID365\n-    0xd5, 0xdd, 0xa3, 0xf7,                                                          \/\/ IID366\n-    0xd5, 0x58, 0x87, 0xdb,                                                          \/\/ IID367\n-    0xd5, 0x5c, 0x85, 0xd5,                                                          \/\/ IID368\n-    0xd5, 0x3d, 0x01, 0xb4, 0x62, 0x64, 0xeb, 0x69, 0xbf,                            \/\/ IID369\n-    0xd5, 0x79, 0x21, 0xbc, 0xa4, 0x8a, 0x89, 0xd8, 0x1b,                            \/\/ IID370\n-    0xd5, 0x2d, 0x39, 0x94, 0x9f, 0x31, 0xe6, 0xee, 0x39,                            \/\/ IID371\n-    0x4d, 0x09, 0xac, 0xd5, 0x59, 0x98, 0xa4, 0x01,                                  \/\/ IID372\n-    0xd5, 0x5c, 0x31, 0x85, 0x36, 0x86, 0xfe, 0x05,                                  \/\/ IID373\n-    0xd5, 0x7d, 0x29, 0x8c, 0xbe, 0x3f, 0xc3, 0x9b, 0xa9,                            \/\/ IID374\n-    0xd5, 0x7e, 0x89, 0xbc, 0xd5, 0xab, 0x44, 0x85, 0x7e,                            \/\/ IID375\n-    0xd5, 0xaa, 0xc1, 0x9c, 0xc1, 0x77, 0xb7, 0x35, 0x86,                            \/\/ IID376\n-    0xd5, 0x2b, 0x81, 0xa4, 0xfd, 0xd0, 0x4f, 0x8d, 0xf2, 0x00, 0x01, 0x00, 0x00,    \/\/ IID377\n-    0xd5, 0x18, 0x81, 0x80, 0x5e, 0x77, 0x4d, 0x53, 0x00, 0x00, 0x00, 0x10,          \/\/ IID378\n-    0xd5, 0x1a, 0x81, 0xbc, 0xbc, 0x89, 0xdd, 0x4d, 0x83, 0x00, 0x00, 0x00, 0x10,    \/\/ IID379\n-    0xd5, 0x29, 0xc1, 0xbc, 0xb9, 0x92, 0x27, 0x09, 0x8d, 0x04,                      \/\/ IID380\n-    0xd5, 0x2b, 0xc1, 0xa4, 0x43, 0x6b, 0x90, 0x7d, 0xdd, 0x04,                      \/\/ IID381\n-    0xd5, 0x2b, 0x81, 0x9c, 0x76, 0x34, 0xfc, 0x43, 0x1b, 0x00, 0x00, 0x00, 0x10,    \/\/ IID382\n-    0xd5, 0x39, 0xc1, 0xac, 0x2a, 0x3d, 0xaf, 0x51, 0xc4, 0x08,                      \/\/ IID383\n-    0xd5, 0x1a, 0x81, 0xac, 0xd6, 0x03, 0x14, 0x7e, 0x04, 0x00, 0x00, 0x01, 0x00,    \/\/ IID384\n-    0xd5, 0x28, 0x83, 0xb4, 0xda, 0xe8, 0xac, 0xb5, 0x9b, 0x01,                      \/\/ IID385\n-    0xd5, 0x3b, 0x81, 0x8c, 0x7e, 0x83, 0xc7, 0x93, 0x2c, 0x00, 0x01, 0x00, 0x00,    \/\/ IID386\n-    0xd5, 0x3b, 0xc7, 0x84, 0x82, 0xa1, 0x87, 0xcb, 0xfa, 0x00, 0x00, 0x01, 0x00,    \/\/ IID387\n-    0xd5, 0x2b, 0xf7, 0x84, 0x76, 0x47, 0xe1, 0x32, 0x39, 0x00, 0xff, 0xff, 0xff,    \/\/ IID388\n-    0xd5, 0x7f, 0x03, 0xb4, 0xc6, 0xa2, 0xdc, 0x1f, 0x99,                            \/\/ IID389\n-    0xd5, 0x1d, 0x23, 0xba, 0x42, 0x6e, 0x45, 0x36,                                  \/\/ IID390\n-    0xd5, 0x1c, 0x3b, 0x92, 0xed, 0x4b, 0x04, 0x05,                                  \/\/ IID391\n-    0xf3, 0xd5, 0xcd, 0xbd, 0xbc, 0x94, 0x2c, 0x48, 0xf8, 0xe8,                      \/\/ IID392\n-    0xd5, 0x78, 0x0b, 0x84, 0xbc, 0xd7, 0xc8, 0x87, 0xd9,                            \/\/ IID393\n-    0xd5, 0x7f, 0x13, 0xbc, 0x3e, 0x5d, 0x26, 0xc3, 0x1e,                            \/\/ IID394\n-    0xd5, 0xea, 0xaf, 0x84, 0x12, 0x1b, 0x83, 0x86, 0x35,                            \/\/ IID395\n-    0xf3, 0xd5, 0x9c, 0xb8, 0xa2, 0x86, 0x60, 0xc1, 0xc3,                            \/\/ IID396\n-    0xd5, 0x29, 0x1b, 0x8c, 0xe8, 0xab, 0x15, 0x15, 0x6b,                            \/\/ IID397\n-    0xd5, 0x6c, 0x2b, 0xac, 0xb9, 0x4d, 0x6c, 0xf0, 0x4f,                            \/\/ IID398\n-    0xf3, 0xd5, 0xdf, 0xbc, 0x94, 0x50, 0x77, 0x5e, 0x26, 0x8a,                      \/\/ IID399\n-    0xd5, 0x48, 0x33, 0x8c, 0x1b, 0x9c, 0xd5, 0x33, 0x40,                            \/\/ IID400\n-    0xd5, 0x5a, 0x8b, 0x94, 0xe6, 0x83, 0xcb, 0x6c, 0xc7,                            \/\/ IID401\n-    0xd5, 0x3c, 0x8d, 0xa4, 0xfc, 0x60, 0x15, 0x31, 0x4b,                            \/\/ IID402\n-    0xf2, 0xd5, 0xef, 0x2c, 0xac, 0xa2, 0x57, 0x26, 0x3a, 0x5c,                      \/\/ IID403\n-    0xd5, 0x6b, 0x87, 0xb4, 0xcd, 0x3f, 0x6f, 0x3d, 0x1a,                            \/\/ IID404\n-    0xd5, 0x7e, 0x85, 0x8c, 0xc1, 0x28, 0x24, 0x52, 0xca,                            \/\/ IID405\n-    0xd5, 0x18, 0x83, 0xc2, 0x01,                                                    \/\/ IID406\n-    0x49, 0x81, 0xe5, 0x00, 0x00, 0x00, 0x01,                                        \/\/ IID407\n-    0x49, 0x81, 0xd5, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID408\n-    0x49, 0x81, 0xfa, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID409\n-    0xd5, 0x18, 0xc1, 0xd4, 0x02,                                                    \/\/ IID410\n-    0x49, 0xc1, 0xd9, 0x10,                                                          \/\/ IID411\n-    0x49, 0xd1, 0xc0,                                                                \/\/ IID412\n-    0xd5, 0x19, 0xc1, 0xc9, 0x02,                                                    \/\/ IID413\n-    0xd5, 0x18, 0xc1, 0xfe, 0x08,                                                    \/\/ IID414\n-    0xd5, 0x18, 0xd1, 0xe1,                                                          \/\/ IID415\n-    0xd5, 0x19, 0x83, 0xdf, 0x10,                                                    \/\/ IID416\n-    0xd5, 0x19, 0xc1, 0xe3, 0x04,                                                    \/\/ IID417\n-    0xd5, 0x19, 0xc1, 0xec, 0x02,                                                    \/\/ IID418\n-    0x48, 0x81, 0xe9, 0x00, 0x00, 0x00, 0x01,                                        \/\/ IID419\n-    0xd5, 0x19, 0x81, 0xf3, 0x00, 0x00, 0x10, 0x00,                                  \/\/ IID420\n-    0xd5, 0x18, 0xc7, 0xc4, 0x00, 0x00, 0x00, 0x10,                                  \/\/ IID421\n-    0xd5, 0x19, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,                \/\/ IID422\n-    0xd5, 0x98, 0xba, 0xe6, 0x04,                                                    \/\/ IID423\n-    0x49, 0xf7, 0xc0, 0x00, 0xf0, 0xff, 0xff,                                        \/\/ IID424\n-    0xd5, 0x19, 0x81, 0xcc, 0x00, 0x00, 0x10, 0x00,                                  \/\/ IID425\n-    0x49, 0x81, 0xed, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID426\n-    0xd5, 0xd8, 0x40, 0x80, 0x15, 0x5c, 0x76, 0xec,                                  \/\/ IID427\n-    0xd5, 0x9b, 0x41, 0x9c, 0x05, 0x15, 0x26, 0x02, 0x1d,                            \/\/ IID428\n-    0xd5, 0xab, 0x42, 0x94, 0x64, 0x1e, 0x67, 0x37, 0xcb,                            \/\/ IID429\n-    0xd5, 0xcd, 0x43, 0x9c, 0xca, 0x0f, 0x54, 0x08, 0xe1,                            \/\/ IID430\n-    0xd5, 0xaf, 0x44, 0xb4, 0xad, 0x97, 0x7c, 0xb3, 0x83,                            \/\/ IID431\n-    0xd5, 0x9c, 0x45, 0xbc, 0x8f, 0x31, 0xd3, 0x2d, 0x94,                            \/\/ IID432\n-    0xd5, 0xcf, 0x46, 0x84, 0x57, 0xf7, 0xc2, 0x04, 0x80,                            \/\/ IID433\n-    0xd5, 0xc9, 0x47, 0xbb, 0x3b, 0x86, 0x6a, 0x27,                                  \/\/ IID434\n-    0xd5, 0xdd, 0x48, 0xa5, 0x6e, 0x39, 0xb4, 0x3f,                                  \/\/ IID435\n-    0xd5, 0xdd, 0x49, 0x94, 0xcb, 0x1c, 0xa6, 0xde, 0x4d,                            \/\/ IID436\n-    0xd5, 0xbc, 0x4a, 0x94, 0x5e, 0x66, 0x69, 0x12, 0x2a,                            \/\/ IID437\n-    0x4d, 0x0f, 0x4b, 0xa2, 0x9f, 0xc5, 0xd7, 0x03,                                  \/\/ IID438\n-    0x4f, 0x0f, 0x4c, 0x94, 0xc0, 0xd3, 0x79, 0x9e, 0xf1,                            \/\/ IID439\n-    0xd5, 0xd9, 0x4d, 0xbd, 0x93, 0x26, 0x81, 0x88,                                  \/\/ IID440\n-    0xd5, 0xa8, 0x4e, 0x8c, 0x5b, 0xcb, 0x01, 0xc6, 0x53,                            \/\/ IID441\n-    0xd5, 0x9c, 0x4f, 0xb4, 0x19, 0x8d, 0x0f, 0x74, 0x89,                            \/\/ IID442\n-    0xd5, 0x11, 0xff, 0xd5,                                                          \/\/ IID443\n-    0x49, 0xf7, 0xf2,                                                                \/\/ IID444\n-    0xd5, 0x18, 0xf7, 0xfb,                                                          \/\/ IID445\n-    0x49, 0xf7, 0xef,                                                                \/\/ IID446\n-    0xd5, 0x19, 0xf7, 0xe3,                                                          \/\/ IID447\n-    0xd5, 0x18, 0xf7, 0xdc,                                                          \/\/ IID448\n-    0x49, 0xf7, 0xd2,                                                                \/\/ IID449\n-    0xd5, 0x18, 0xd3, 0xc0,                                                          \/\/ IID450\n-    0xd5, 0x19, 0xd3, 0xcb,                                                          \/\/ IID451\n-    0x49, 0xd3, 0xf9,                                                                \/\/ IID452\n-    0x49, 0xd3, 0xe5,                                                                \/\/ IID453\n-    0x49, 0xd3, 0xe6,                                                                \/\/ IID454\n-    0xd5, 0x18, 0xd3, 0xea,                                                          \/\/ IID455\n-    0xd5, 0x19, 0xff, 0xc4,                                                          \/\/ IID456\n-    0xd5, 0x19, 0xff, 0xcc,                                                          \/\/ IID457\n-    0xd5, 0x18, 0x56,                                                                \/\/ IID458\n-    0xd5, 0x09, 0x58,                                                                \/\/ IID459\n-    0x41, 0xff, 0x94, 0x24, 0x4e, 0x42, 0xcc, 0x64,                                  \/\/ IID460\n-    0xd5, 0x3b, 0xf7, 0xa4, 0x2a, 0xa1, 0xf7, 0x90, 0xb9,                            \/\/ IID461\n-    0xd5, 0x3a, 0xf7, 0x9c, 0x05, 0x0b, 0xdf, 0x37, 0x20,                            \/\/ IID462\n-    0xd5, 0x2b, 0xd3, 0xbc, 0xfc, 0x56, 0xda, 0x2d, 0xa8,                            \/\/ IID463\n-    0xd5, 0x18, 0xd3, 0xa4, 0x24, 0x70, 0xd0, 0x5f, 0xe1,                            \/\/ IID464\n-    0xd5, 0x29, 0xd3, 0xac, 0xe5, 0xf2, 0x81, 0x10, 0x17,                            \/\/ IID465\n-    0xd5, 0x19, 0xff, 0x87, 0xdb, 0x08, 0xa8, 0x13,                                  \/\/ IID466\n-    0xd5, 0x18, 0xff, 0x8b, 0x5f, 0xc1, 0xf2, 0xe7,                                  \/\/ IID467\n-    0xd5, 0x58, 0x69, 0x88, 0xa8, 0x02, 0x0d, 0xd5, 0x00, 0x10, 0x00, 0x00,          \/\/ IID468\n-    0xd5, 0x5d, 0x6b, 0xe1, 0x10,                                                    \/\/ IID469\n-    0xd5, 0x9d, 0xa4, 0xeb, 0x10,                                                    \/\/ IID470\n-    0x4d, 0x0f, 0xac, 0xd0, 0x10,                                                    \/\/ IID471\n-    0x62, 0xd4, 0x3c, 0x18, 0x8f, 0xc6,                                              \/\/ IID472\n-    0x62, 0xfc, 0xe4, 0x18, 0x8f, 0xc2,                                              \/\/ IID473\n-    0x62, 0xfc, 0x64, 0x10, 0xff, 0xf7,                                              \/\/ IID474\n-    0x62, 0xd4, 0xe4, 0x18, 0xff, 0xf4,                                              \/\/ IID475\n-    0xd5, 0xad, 0xb6, 0x8c, 0xfe, 0xba, 0xd9, 0x72, 0xbd,                            \/\/ IID476\n-    0xd5, 0xcd, 0xb7, 0xa4, 0x89, 0x9f, 0xe9, 0x9e, 0x8d,                            \/\/ IID477\n-    0xd5, 0xb9, 0xbe, 0x9c, 0xa8, 0x90, 0xe9, 0x6b, 0x3a,                            \/\/ IID478\n-    0xd5, 0xda, 0xbf, 0x84, 0x16, 0xdd, 0x8b, 0xef, 0x07,                            \/\/ IID479\n-    0xd5, 0xcd, 0xb6, 0xe6,                                                          \/\/ IID480\n-    0xd5, 0x9d, 0xb7, 0xec,                                                          \/\/ IID481\n-    0x4c, 0x0f, 0xbe, 0xda,                                                          \/\/ IID482\n-    0xd5, 0x9d, 0xbf, 0xe2,                                                          \/\/ IID483\n-    0xd5, 0xc9, 0xb1, 0xa2, 0x26, 0x57, 0x2d, 0xf4,                                  \/\/ IID484\n-    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xff,                                              \/\/ IID485\n-    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xff,                                              \/\/ IID486\n-    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xf6,                                              \/\/ IID487\n-    0x62, 0xd4, 0xfc, 0x0c, 0xf7, 0xf6,                                              \/\/ IID488\n-    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xef,                                              \/\/ IID489\n-    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xec,                                              \/\/ IID490\n-    0x62, 0xf4, 0xfc, 0x08, 0xf7, 0xe1,                                              \/\/ IID491\n-    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xe5,                                              \/\/ IID492\n-    0x62, 0xbc, 0xfc, 0x08, 0xf7, 0xa4, 0xd0, 0x1e, 0xac, 0x66, 0x5f,                \/\/ IID493\n-    0x62, 0xfc, 0xf8, 0x0c, 0xf7, 0xa4, 0xf5, 0x83, 0x7f, 0x43, 0xf4,                \/\/ IID494\n-    0x62, 0xcc, 0xfc, 0x08, 0xaf, 0xf2,                                              \/\/ IID495\n-    0x62, 0x6c, 0xfc, 0x0c, 0xaf, 0xcd,                                              \/\/ IID496\n-    0x62, 0xc4, 0xfc, 0x08, 0xf5, 0xe5,                                              \/\/ IID497\n-    0x62, 0x6c, 0xfc, 0x0c, 0xf5, 0xcb,                                              \/\/ IID498\n-    0x62, 0xdc, 0xd4, 0x10, 0xf7, 0xde,                                              \/\/ IID499\n-    0x62, 0xd4, 0x94, 0x14, 0xf7, 0xdb,                                              \/\/ IID500\n-    0x62, 0xd4, 0xcc, 0x10, 0xf7, 0xd0,                                              \/\/ IID501\n-    0x62, 0x7c, 0xfc, 0x08, 0x88, 0xe3,                                              \/\/ IID502\n-    0x62, 0x6c, 0xfc, 0x0c, 0x88, 0xef,                                              \/\/ IID503\n-    0x62, 0xdc, 0x9c, 0x10, 0xd3, 0xc0,                                              \/\/ IID504\n-    0x62, 0xfc, 0xec, 0x1c, 0xd3, 0xc4,                                              \/\/ IID505\n-    0x62, 0xdc, 0xe4, 0x18, 0xd3, 0xce,                                              \/\/ IID506\n-    0x62, 0xd4, 0xac, 0x1c, 0xd3, 0xcf,                                              \/\/ IID507\n-    0x62, 0xd4, 0xf4, 0x10, 0xd3, 0xe5,                                              \/\/ IID508\n-    0x62, 0xdc, 0xd4, 0x14, 0xd3, 0xe0,                                              \/\/ IID509\n-    0x62, 0xd4, 0x84, 0x10, 0xd3, 0xfc,                                              \/\/ IID510\n-    0x62, 0xdc, 0xec, 0x1c, 0xd3, 0xf8,                                              \/\/ IID511\n-    0x62, 0xdc, 0xd4, 0x10, 0xff, 0xc8,                                              \/\/ IID512\n-    0x62, 0xdc, 0x84, 0x1c, 0xff, 0xcf,                                              \/\/ IID513\n-    0x62, 0xf4, 0xac, 0x18, 0xff, 0xc3,                                              \/\/ IID514\n-    0x62, 0xd4, 0xec, 0x14, 0xff, 0xc0,                                              \/\/ IID515\n-    0x62, 0xdc, 0xac, 0x18, 0xd3, 0xe2,                                              \/\/ IID516\n-    0x62, 0xd4, 0x9c, 0x14, 0xd3, 0xe6,                                              \/\/ IID517\n-    0x62, 0xfc, 0xac, 0x18, 0xd3, 0xeb,                                              \/\/ IID518\n-    0x62, 0xfc, 0x9c, 0x14, 0xd3, 0xed,                                              \/\/ IID519\n-    0x62, 0xec, 0xfc, 0x08, 0xf4, 0xee,                                              \/\/ IID520\n-    0x62, 0xec, 0xfc, 0x0c, 0xf4, 0xc7,                                              \/\/ IID521\n-    0x62, 0x3c, 0xfc, 0x08, 0xaf, 0x9c, 0x8a, 0x5f, 0x7a, 0xdd, 0xec,                \/\/ IID522\n-    0x62, 0x1c, 0xfc, 0x0c, 0xaf, 0xac, 0xf8, 0xa0, 0x0c, 0xf5, 0x48,                \/\/ IID523\n-    0x62, 0x54, 0xfc, 0x08, 0xf5, 0x8d, 0x0e, 0xcf, 0x15, 0x21,                      \/\/ IID524\n-    0x62, 0x4c, 0xfc, 0x0c, 0xf5, 0x9e, 0xbb, 0xab, 0x9c, 0x04,                      \/\/ IID525\n-    0x62, 0x94, 0xd0, 0x10, 0xf7, 0x9c, 0xbd, 0xd2, 0xf4, 0xa8, 0x50,                \/\/ IID526\n-    0x62, 0xfc, 0xc8, 0x14, 0xf7, 0x9c, 0x62, 0xb4, 0xa7, 0x5f, 0xa2,                \/\/ IID527\n-    0x62, 0x74, 0xf8, 0x08, 0x88, 0xb4, 0xb3, 0x2f, 0xb6, 0x9c, 0x9f,                \/\/ IID528\n-    0x62, 0x6c, 0xf8, 0x0c, 0x88, 0x94, 0xf7, 0xdd, 0x93, 0x39, 0x8d,                \/\/ IID529\n-    0x62, 0xd4, 0xac, 0x10, 0xd3, 0xa1, 0x09, 0xba, 0x4a, 0x33,                      \/\/ IID530\n-    0x62, 0x94, 0xb0, 0x1c, 0xd3, 0xa4, 0xf1, 0xfe, 0x9e, 0x65, 0xde,                \/\/ IID531\n-    0x62, 0xfc, 0xb4, 0x10, 0xd3, 0xbc, 0x24, 0x4f, 0x45, 0xce, 0xde,                \/\/ IID532\n-    0x62, 0xdc, 0xf8, 0x14, 0xd3, 0xbc, 0x44, 0xb9, 0x83, 0xc4, 0x48,                \/\/ IID533\n-    0x62, 0xd4, 0x88, 0x10, 0xff, 0x8c, 0x01, 0xb1, 0x17, 0x73, 0xf7,                \/\/ IID534\n-    0x62, 0x9c, 0xa0, 0x1c, 0xff, 0x8c, 0xae, 0xd0, 0x8f, 0xeb, 0x3e,                \/\/ IID535\n-    0x62, 0x9c, 0xac, 0x10, 0xff, 0x84, 0xd5, 0x2e, 0x82, 0xf4, 0x3e,                \/\/ IID536\n-    0x62, 0xfc, 0x90, 0x14, 0xff, 0x84, 0xa3, 0x47, 0xc2, 0xf0, 0xc0,                \/\/ IID537\n-    0x62, 0xdc, 0xb8, 0x18, 0xd3, 0xac, 0x26, 0x17, 0x6a, 0xb5, 0x15,                \/\/ IID538\n-    0x62, 0xd4, 0xac, 0x14, 0xd3, 0xab, 0x9f, 0x9a, 0x17, 0xd2,                      \/\/ IID539\n-    0x62, 0x34, 0xf8, 0x08, 0xf4, 0x9c, 0x71, 0x3e, 0x4e, 0x00, 0xcd,                \/\/ IID540\n-    0x62, 0x84, 0xfc, 0x0c, 0xf4, 0xbc, 0x61, 0x97, 0xc1, 0x7d, 0xab,                \/\/ IID541\n-    0x62, 0x54, 0xdc, 0x10, 0x01, 0xbc, 0xcd, 0xf3, 0x93, 0xee, 0xb9,                \/\/ IID542\n-    0x62, 0xc4, 0x90, 0x1c, 0x01, 0x84, 0x79, 0xfb, 0x89, 0x93, 0xd7,                \/\/ IID543\n-    0x62, 0x4c, 0xd0, 0x10, 0x21, 0xac, 0x0e, 0xb2, 0x30, 0x4e, 0x0f,                \/\/ IID544\n-    0x62, 0xac, 0x88, 0x14, 0x21, 0x8c, 0x39, 0xc4, 0xde, 0xb9, 0x3a,                \/\/ IID545\n-    0x62, 0x0c, 0xa8, 0x18, 0x09, 0xa4, 0x73, 0x9a, 0xed, 0x80, 0xe6,                \/\/ IID546\n-    0x62, 0x1c, 0xb0, 0x1c, 0x09, 0x9c, 0x35, 0xf8, 0x64, 0x15, 0xdb,                \/\/ IID547\n-    0x62, 0xc4, 0x84, 0x18, 0x29, 0x86, 0x70, 0x40, 0xbb, 0xb0,                      \/\/ IID548\n-    0x62, 0x6c, 0xf0, 0x1c, 0x29, 0xa4, 0x55, 0x71, 0x53, 0x2f, 0xee,                \/\/ IID549\n-    0x62, 0x7c, 0xe0, 0x10, 0x31, 0x84, 0x13, 0x14, 0xaa, 0xa1, 0xf5,                \/\/ IID550\n-    0x62, 0xac, 0x98, 0x14, 0x31, 0x84, 0x61, 0x20, 0xd0, 0x4b, 0x91,                \/\/ IID551\n-    0x62, 0xfc, 0xf4, 0x10, 0x81, 0x82, 0xfb, 0xee, 0x54, 0x9f, 0x00, 0x00, 0x00, 0x01, \/\/ IID552\n-    0x62, 0xbc, 0xb0, 0x14, 0x81, 0x84, 0x0b, 0xd9, 0x44, 0x24, 0x12, 0x00, 0x00, 0x01, 0x00, \/\/ IID553\n-    0x62, 0x94, 0x88, 0x10, 0x81, 0xa4, 0x61, 0x0d, 0xf3, 0x4f, 0xda, 0x00, 0x10, 0x00, 0x00, \/\/ IID554\n-    0x62, 0xfc, 0xb4, 0x1c, 0x81, 0xa4, 0x5e, 0xda, 0xaf, 0xb9, 0x81, 0x00, 0x00, 0x00, 0x10, \/\/ IID555\n-    0x62, 0x1c, 0xf8, 0x08, 0x6b, 0xa4, 0x49, 0x34, 0x97, 0xd2, 0xbc, 0x01,          \/\/ IID556\n-    0x62, 0x3c, 0xf8, 0x0c, 0x6b, 0xbc, 0xf9, 0xa2, 0xa9, 0x68, 0xd4, 0x10,          \/\/ IID557\n-    0x62, 0xb4, 0x98, 0x10, 0x81, 0x8c, 0x3a, 0xb1, 0x63, 0x13, 0x3f, 0x00, 0x01, 0x00, 0x00, \/\/ IID558\n-    0x62, 0xd4, 0xf8, 0x14, 0x81, 0x8c, 0xfc, 0xc4, 0x79, 0x7a, 0xe8, 0x00, 0x00, 0x00, 0x01, \/\/ IID559\n-    0x62, 0x94, 0xb8, 0x18, 0xc1, 0xa4, 0x86, 0x5b, 0x6f, 0xbd, 0x8e, 0x02,          \/\/ IID560\n-    0x62, 0x94, 0xbc, 0x1c, 0xc1, 0xa4, 0xb7, 0x43, 0x32, 0xf1, 0x21, 0x10,          \/\/ IID561\n-    0x62, 0x94, 0xa8, 0x18, 0xc1, 0xbc, 0x2d, 0x72, 0xcb, 0x04, 0x7d, 0x02,          \/\/ IID562\n-    0x62, 0xbc, 0xa0, 0x1c, 0xc1, 0xbc, 0xfd, 0x24, 0x4b, 0x89, 0xde, 0x08,          \/\/ IID563\n-    0x62, 0xbc, 0xf4, 0x18, 0xc1, 0xac, 0x60, 0x38, 0x9a, 0x0c, 0x26, 0x04,          \/\/ IID564\n-    0x62, 0x9c, 0xcc, 0x14, 0xc1, 0xac, 0x0a, 0x9e, 0x44, 0xa9, 0xa1, 0x08,          \/\/ IID565\n-    0x62, 0xb4, 0x80, 0x10, 0x83, 0xac, 0x63, 0x10, 0xbb, 0x00, 0x2b, 0x01,          \/\/ IID566\n-    0x62, 0xdc, 0xd4, 0x14, 0x81, 0xaf, 0x53, 0x0b, 0xef, 0x93, 0x00, 0x10, 0x00, 0x00, \/\/ IID567\n-    0x62, 0xbc, 0xa0, 0x18, 0x81, 0xb4, 0x77, 0x6b, 0x02, 0xa6, 0x51, 0x00, 0x00, 0x01, 0x00, \/\/ IID568\n-    0x62, 0x9c, 0x8c, 0x1c, 0x83, 0xb4, 0x93, 0x55, 0x64, 0x52, 0xcb, 0x10,          \/\/ IID569\n-    0x62, 0xfc, 0xdc, 0x10, 0x81, 0xc7, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID570\n-    0x62, 0xfc, 0xb4, 0x1c, 0x81, 0xc5, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID571\n-    0x62, 0xf4, 0xdc, 0x10, 0x83, 0xe2, 0x10,                                        \/\/ IID572\n-    0x62, 0xfc, 0x8c, 0x1c, 0x83, 0xe3, 0x10,                                        \/\/ IID573\n-    0x62, 0x6c, 0xfc, 0x08, 0x6b, 0xd9, 0x10,                                        \/\/ IID574\n-    0x62, 0x44, 0xfc, 0x0c, 0x69, 0xf5, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID575\n-    0x62, 0xd4, 0xe4, 0x10, 0x81, 0xcf, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID576\n-    0x62, 0xdc, 0xfc, 0x14, 0x81, 0xcc, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID577\n-    0x62, 0xdc, 0xe4, 0x18, 0xc1, 0xd0, 0x02,                                        \/\/ IID578\n-    0x62, 0xfc, 0x84, 0x18, 0xc1, 0xc4, 0x10,                                        \/\/ IID579\n-    0x62, 0xf4, 0xa4, 0x1c, 0xc1, 0xc1, 0x10,                                        \/\/ IID580\n-    0x62, 0xdc, 0x94, 0x18, 0xc1, 0xca, 0x10,                                        \/\/ IID581\n-    0x62, 0xfc, 0xe4, 0x14, 0xc1, 0xcc, 0x04,                                        \/\/ IID582\n-    0x62, 0xdc, 0xe4, 0x10, 0xc1, 0xe4, 0x10,                                        \/\/ IID583\n-    0x62, 0xfc, 0xb4, 0x14, 0xc1, 0xe2, 0x04,                                        \/\/ IID584\n-    0x62, 0xdc, 0xac, 0x18, 0xc1, 0xfb, 0x04,                                        \/\/ IID585\n-    0x62, 0xfc, 0xec, 0x1c, 0xc1, 0xfe, 0x08,                                        \/\/ IID586\n-    0x62, 0xd4, 0x9c, 0x10, 0xd1, 0xe7,                                              \/\/ IID587\n-    0x62, 0xd4, 0xe4, 0x1c, 0xc1, 0xe4, 0x04,                                        \/\/ IID588\n-    0x62, 0xd4, 0xac, 0x10, 0xd1, 0xeb,                                              \/\/ IID589\n-    0x62, 0xdc, 0xec, 0x1c, 0xc1, 0xef, 0x08,                                        \/\/ IID590\n-    0x62, 0xf4, 0xd4, 0x10, 0x81, 0xeb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID591\n-    0x62, 0xdc, 0xb4, 0x14, 0x81, 0xec, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID592\n-    0x62, 0xd4, 0xcc, 0x10, 0x83, 0xf6, 0x01,                                        \/\/ IID593\n-    0x62, 0xdc, 0xa4, 0x1c, 0x81, 0xf6, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID594\n-    0x62, 0xfc, 0xdc, 0x10, 0x81, 0xcb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID595\n-    0x62, 0xd4, 0xb4, 0x10, 0x81, 0xcd, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID596\n-    0x62, 0xdc, 0xb4, 0x10, 0x81, 0xe9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID597\n-    0x62, 0xd4, 0xec, 0x14, 0x81, 0xeb, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID598\n-    0x62, 0xec, 0xac, 0x18, 0x03, 0x94, 0x24, 0x53, 0xf4, 0x56, 0x07,                \/\/ IID599\n-    0x62, 0x6c, 0xe0, 0x1c, 0x03, 0x9c, 0x2e, 0x49, 0x15, 0x54, 0xda,                \/\/ IID600\n-    0x62, 0x44, 0xe8, 0x18, 0x23, 0xbc, 0xe1, 0x64, 0x1c, 0x30, 0xfb,                \/\/ IID601\n-    0x62, 0x04, 0xf8, 0x14, 0x23, 0x8c, 0x1e, 0xd9, 0x54, 0x66, 0x7c,                \/\/ IID602\n-    0x62, 0xd4, 0x90, 0x10, 0x0b, 0x8c, 0x3f, 0x2d, 0xf7, 0xb7, 0x45,                \/\/ IID603\n-    0x62, 0xc4, 0xe0, 0x14, 0x0b, 0x8c, 0x75, 0x6a, 0xe6, 0xf3, 0x8a,                \/\/ IID604\n-    0x62, 0x5c, 0x90, 0x18, 0xaf, 0x84, 0x7f, 0x4e, 0x49, 0xee, 0xdd,                \/\/ IID605\n-    0x62, 0x04, 0xa4, 0x1c, 0xaf, 0xa4, 0xdd, 0xab, 0x13, 0x00, 0x5c,                \/\/ IID606\n-    0x62, 0xec, 0xec, 0x18, 0x2b, 0x94, 0x0a, 0x71, 0x7e, 0x55, 0x59,                \/\/ IID607\n-    0x62, 0x7c, 0xa4, 0x14, 0x2b, 0x9e, 0xb7, 0x69, 0xb9, 0xd7,                      \/\/ IID608\n-    0x62, 0x5c, 0xac, 0x18, 0x33, 0x88, 0x54, 0x1d, 0x69, 0x49,                      \/\/ IID609\n-    0x62, 0x7c, 0xbc, 0x14, 0x33, 0xa3, 0xaa, 0x29, 0xd5, 0x22,                      \/\/ IID610\n-    0x62, 0x54, 0xdc, 0x10, 0x03, 0xca,                                              \/\/ IID611\n-    0x62, 0xcc, 0xec, 0x14, 0x03, 0xca,                                              \/\/ IID612\n-    0x62, 0xec, 0xd5, 0x10, 0x66, 0xc3,                                              \/\/ IID613\n-    0x62, 0x5c, 0xe6, 0x18, 0x66, 0xf3,                                              \/\/ IID614\n-    0x62, 0x7c, 0xb4, 0x18, 0x23, 0xe6,                                              \/\/ IID615\n-    0x62, 0x44, 0xf4, 0x14, 0x23, 0xca,                                              \/\/ IID616\n-    0x62, 0x54, 0x9c, 0x18, 0xaf, 0xfe,                                              \/\/ IID617\n-    0x62, 0xec, 0x94, 0x14, 0xaf, 0xd0,                                              \/\/ IID618\n-    0x62, 0x54, 0xa4, 0x18, 0x0b, 0xca,                                              \/\/ IID619\n-    0x62, 0x7c, 0xb4, 0x14, 0x0b, 0xe8,                                              \/\/ IID620\n-    0x62, 0xcc, 0xa4, 0x18, 0x2b, 0xe9,                                              \/\/ IID621\n-    0x62, 0xe4, 0xec, 0x1c, 0x2b, 0xe3,                                              \/\/ IID622\n-    0x62, 0xcc, 0xb4, 0x10, 0x33, 0xea,                                              \/\/ IID623\n-    0x62, 0x6c, 0xc4, 0x14, 0x33, 0xdd,                                              \/\/ IID624\n-    0x62, 0x44, 0xac, 0x18, 0x24, 0xfc, 0x02,                                        \/\/ IID625\n-    0x62, 0x6c, 0xc4, 0x14, 0x24, 0xe8, 0x02,                                        \/\/ IID626\n-    0x62, 0xcc, 0xe4, 0x10, 0x2c, 0xf8, 0x04,                                        \/\/ IID627\n-    0x62, 0x44, 0xd4, 0x14, 0x2c, 0xcf, 0x04,                                        \/\/ IID628\n-    0x62, 0x64, 0xb4, 0x18, 0x40, 0xea,                                              \/\/ IID629\n-    0x62, 0x6c, 0xa4, 0x18, 0x41, 0xcb,                                              \/\/ IID630\n-    0x62, 0xec, 0xac, 0x18, 0x42, 0xc1,                                              \/\/ IID631\n-    0x62, 0xcc, 0xbc, 0x18, 0x43, 0xff,                                              \/\/ IID632\n-    0x62, 0x64, 0xb4, 0x18, 0x44, 0xfb,                                              \/\/ IID633\n-    0x62, 0x44, 0xfc, 0x10, 0x45, 0xe9,                                              \/\/ IID634\n-    0x62, 0x54, 0xbc, 0x10, 0x46, 0xd1,                                              \/\/ IID635\n-    0x62, 0x4c, 0xcc, 0x10, 0x47, 0xe2,                                              \/\/ IID636\n-    0x62, 0x6c, 0xec, 0x10, 0x48, 0xcc,                                              \/\/ IID637\n-    0x62, 0xe4, 0xfc, 0x10, 0x49, 0xeb,                                              \/\/ IID638\n-    0x62, 0xec, 0x9c, 0x10, 0x4a, 0xf3,                                              \/\/ IID639\n-    0x62, 0x74, 0x94, 0x18, 0x4b, 0xfa,                                              \/\/ IID640\n-    0x62, 0xc4, 0xbc, 0x18, 0x4c, 0xf6,                                              \/\/ IID641\n-    0x62, 0x44, 0x9c, 0x18, 0x4d, 0xc6,                                              \/\/ IID642\n-    0x62, 0x7c, 0xbc, 0x10, 0x4e, 0xed,                                              \/\/ IID643\n-    0x62, 0xdc, 0xe4, 0x18, 0x4f, 0xdb,                                              \/\/ IID644\n-    0x62, 0x8c, 0x88, 0x18, 0x40, 0x8c, 0xd8, 0xf0, 0x08, 0xd5, 0x09,                \/\/ IID645\n-    0x62, 0x5c, 0x90, 0x18, 0x41, 0xbc, 0xaf, 0x4a, 0xc7, 0xf2, 0x6e,                \/\/ IID646\n-    0x62, 0x0c, 0x90, 0x18, 0x42, 0x9c, 0x4f, 0xab, 0xe9, 0x4f, 0x73,                \/\/ IID647\n-    0x62, 0x84, 0x80, 0x18, 0x43, 0xb4, 0xae, 0x05, 0x42, 0x27, 0x98,                \/\/ IID648\n-    0x62, 0x84, 0x88, 0x10, 0x44, 0xbc, 0x67, 0xe7, 0x9d, 0x97, 0xfd,                \/\/ IID649\n-    0x62, 0x14, 0x98, 0x18, 0x45, 0x8c, 0xc9, 0x6b, 0xab, 0x2a, 0x05,                \/\/ IID650\n-    0x62, 0x04, 0xb4, 0x18, 0x46, 0x8c, 0xc0, 0x6b, 0x42, 0xbd, 0xe1,                \/\/ IID651\n-    0x62, 0xcc, 0xf4, 0x18, 0x47, 0xa4, 0x9b, 0x58, 0x3c, 0x82, 0x46,                \/\/ IID652\n-    0x62, 0x7c, 0xe4, 0x18, 0x48, 0xa5, 0x38, 0x47, 0xca, 0xf9,                      \/\/ IID653\n-    0x62, 0x9c, 0xc0, 0x10, 0x49, 0x9c, 0xd3, 0xc0, 0xbc, 0x22, 0x09,                \/\/ IID654\n-    0x62, 0x7c, 0xb4, 0x10, 0x4a, 0x8f, 0xec, 0x14, 0x2a, 0x0d,                      \/\/ IID655\n-    0x62, 0xc4, 0xa4, 0x18, 0x4b, 0x9b, 0x63, 0xa5, 0x46, 0xf0,                      \/\/ IID656\n-    0x62, 0xcc, 0x90, 0x18, 0x4c, 0x94, 0x1c, 0x7e, 0x9b, 0x6b, 0x71,                \/\/ IID657\n-    0x62, 0xa4, 0xd0, 0x10, 0x4d, 0x84, 0x29, 0xe2, 0xbb, 0x0f, 0xa5,                \/\/ IID658\n-    0x62, 0x2c, 0x98, 0x18, 0x4e, 0xbc, 0x14, 0xb1, 0x7f, 0x0b, 0x0e,                \/\/ IID659\n-    0x62, 0x4c, 0x84, 0x18, 0x4f, 0x86, 0x4f, 0x7b, 0x3b, 0x2d,                      \/\/ IID660\n+#endif \/\/ _LP64\n+    0x62, 0xf4, 0x7c, 0x18, 0x81, 0xc3, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID255\n+#ifdef _LP64\n+    0x62, 0xdc, 0x5c, 0x14, 0x81, 0xc0, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID256\n+    0x62, 0xdc, 0x7c, 0x1c, 0x81, 0xc0, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID257\n+    0x62, 0xdc, 0x6c, 0x10, 0x81, 0xe2, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID258\n+    0x62, 0xdc, 0x7c, 0x18, 0x81, 0xe2, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID259\n+    0x62, 0xd4, 0x14, 0x14, 0x83, 0xe5, 0x01,                                        \/\/ IID260\n+    0x62, 0xd4, 0x7c, 0x1c, 0x83, 0xe5, 0x01,                                        \/\/ IID261\n+    0x62, 0xdc, 0x7c, 0x08, 0x69, 0xcf, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID262\n+    0x62, 0xdc, 0x7c, 0x08, 0x69, 0xc7, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID263\n+    0x62, 0xcc, 0x7c, 0x0c, 0x69, 0xfd, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID264\n+    0x62, 0xdc, 0x7c, 0x0c, 0x69, 0xc5, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID265\n+    0x62, 0xfc, 0x44, 0x10, 0x81, 0xcf, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID266\n+    0x62, 0xfc, 0x7c, 0x18, 0x81, 0xcf, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID267\n+    0x62, 0xd4, 0x54, 0x14, 0x81, 0xc9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID268\n+    0x62, 0xd4, 0x7c, 0x1c, 0x81, 0xc9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID269\n+    0x62, 0xf4, 0x14, 0x18, 0xc1, 0xd2, 0x04,                                        \/\/ IID270\n+#endif \/\/ _LP64\n+    0x62, 0xf4, 0x7c, 0x18, 0xc1, 0xd2, 0x04,                                        \/\/ IID271\n+#ifdef _LP64\n+    0x62, 0xdc, 0x04, 0x18, 0xc1, 0xc7, 0x08,                                        \/\/ IID272\n+    0x62, 0xdc, 0x7c, 0x18, 0xc1, 0xc7, 0x08,                                        \/\/ IID273\n+    0x62, 0xd4, 0x3c, 0x1c, 0xc1, 0xc1, 0x02,                                        \/\/ IID274\n+    0x62, 0xd4, 0x7c, 0x1c, 0xc1, 0xc1, 0x02,                                        \/\/ IID275\n+    0x62, 0xd4, 0x34, 0x18, 0xc1, 0xcf, 0x08,                                        \/\/ IID276\n+    0x62, 0xd4, 0x7c, 0x18, 0xc1, 0xcf, 0x08,                                        \/\/ IID277\n+    0x62, 0xd4, 0x54, 0x14, 0xc1, 0xcc, 0x08,                                        \/\/ IID278\n+    0x62, 0xd4, 0x7c, 0x1c, 0xc1, 0xcc, 0x08,                                        \/\/ IID279\n+    0x62, 0xdc, 0x64, 0x10, 0xd1, 0xe3,                                              \/\/ IID280\n+    0x62, 0xdc, 0x7c, 0x18, 0xd1, 0xe3,                                              \/\/ IID281\n+    0x62, 0xd4, 0x2c, 0x1c, 0xc1, 0xe3, 0x10,                                        \/\/ IID282\n+    0x62, 0xd4, 0x7c, 0x1c, 0xc1, 0xe3, 0x10,                                        \/\/ IID283\n+    0x62, 0xf4, 0x3c, 0x18, 0xc1, 0xfa, 0x08,                                        \/\/ IID284\n+#endif \/\/ _LP64\n+    0x62, 0xf4, 0x7c, 0x18, 0xc1, 0xfa, 0x08,                                        \/\/ IID285\n+#ifdef _LP64\n+    0x62, 0xdc, 0x4c, 0x14, 0xc1, 0xfe, 0x04,                                        \/\/ IID286\n+    0x62, 0xdc, 0x7c, 0x1c, 0xc1, 0xfe, 0x04,                                        \/\/ IID287\n+    0x62, 0xdc, 0x34, 0x10, 0xc1, 0xe7, 0x10,                                        \/\/ IID288\n+    0x62, 0xdc, 0x7c, 0x18, 0xc1, 0xe7, 0x10,                                        \/\/ IID289\n+    0x62, 0xd4, 0x2c, 0x1c, 0xc1, 0xe1, 0x08,                                        \/\/ IID290\n+    0x62, 0xd4, 0x7c, 0x1c, 0xc1, 0xe1, 0x08,                                        \/\/ IID291\n+    0x62, 0xd4, 0x14, 0x18, 0xc1, 0xe8, 0x04,                                        \/\/ IID292\n+    0x62, 0xd4, 0x7c, 0x18, 0xc1, 0xe8, 0x04,                                        \/\/ IID293\n+    0x62, 0xfc, 0x7c, 0x14, 0xc1, 0xed, 0x10,                                        \/\/ IID294\n+    0x62, 0xfc, 0x7c, 0x1c, 0xc1, 0xed, 0x10,                                        \/\/ IID295\n+    0x62, 0xfc, 0x2c, 0x10, 0x81, 0xef, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID296\n+    0x62, 0xfc, 0x7c, 0x18, 0x81, 0xef, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID297\n+    0x62, 0xd4, 0x2c, 0x14, 0x81, 0xee, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID298\n+    0x62, 0xd4, 0x7c, 0x1c, 0x81, 0xee, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID299\n+    0x62, 0xdc, 0x24, 0x10, 0x81, 0xf2, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID300\n+    0x62, 0xdc, 0x7c, 0x18, 0x81, 0xf2, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID301\n+    0x62, 0xd4, 0x4c, 0x14, 0x83, 0xf1, 0x01,                                        \/\/ IID302\n+    0x62, 0xd4, 0x7c, 0x1c, 0x83, 0xf1, 0x01,                                        \/\/ IID303\n+    0x62, 0xdc, 0x4c, 0x10, 0x81, 0xee, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID304\n+    0x62, 0xdc, 0x7c, 0x18, 0x81, 0xee, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID305\n+    0x62, 0xfc, 0x3c, 0x1c, 0x81, 0xe8, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID306\n+    0x62, 0xfc, 0x7c, 0x1c, 0x81, 0xe8, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID307\n+    0x62, 0x04, 0x5c, 0x10, 0x03, 0xac, 0x63, 0x80, 0x09, 0xac, 0x00,                \/\/ IID308\n+    0x62, 0xd4, 0x68, 0x14, 0x03, 0x9c, 0x51, 0x5d, 0x12, 0x4a, 0x43,                \/\/ IID309\n+    0x62, 0x54, 0x08, 0x18, 0x23, 0xbc, 0x9e, 0xee, 0xa5, 0xa5, 0x15,                \/\/ IID310\n+    0x62, 0x0c, 0x1c, 0x14, 0x23, 0xbc, 0xe0, 0x98, 0x81, 0x92, 0x92,                \/\/ IID311\n+    0x62, 0x1c, 0x38, 0x10, 0xaf, 0xac, 0xc8, 0xfd, 0x73, 0x46, 0x78,                \/\/ IID312\n+    0x62, 0x84, 0x3c, 0x14, 0xaf, 0xac, 0xa8, 0x77, 0xc7, 0x99, 0x9c,                \/\/ IID313\n+    0x62, 0x4c, 0x1c, 0x18, 0x0b, 0x86, 0xaa, 0x9a, 0xad, 0x98,                      \/\/ IID314\n+    0x62, 0x34, 0x10, 0x1c, 0x0b, 0xac, 0x8b, 0x27, 0xb2, 0xc6, 0xa0,                \/\/ IID315\n+    0x62, 0x4c, 0x2c, 0x10, 0x2b, 0x8c, 0xd1, 0x66, 0x08, 0xc6, 0xd1,                \/\/ IID316\n+    0x62, 0x34, 0x18, 0x14, 0x2b, 0x84, 0xc2, 0xac, 0x65, 0x26, 0xf1,                \/\/ IID317\n+    0x62, 0xcc, 0x00, 0x10, 0x33, 0xb4, 0xe6, 0xbd, 0x1c, 0xc4, 0x3a,                \/\/ IID318\n+    0x62, 0x44, 0x38, 0x14, 0x33, 0xb4, 0x4d, 0xe3, 0xc2, 0xfd, 0x1e,                \/\/ IID319\n+    0x62, 0x84, 0x7c, 0x10, 0x32, 0x84, 0x79, 0x34, 0xeb, 0x9f, 0x76,                \/\/ IID320\n+    0x62, 0x44, 0x64, 0x14, 0x32, 0x8a, 0x29, 0xb4, 0x39, 0x22,                      \/\/ IID321\n+    0x62, 0xac, 0x31, 0x10, 0x33, 0x9c, 0x40, 0xea, 0xfa, 0x71, 0x1c,                \/\/ IID322\n+    0x62, 0x5c, 0x65, 0x14, 0x33, 0x94, 0x24, 0x03, 0xf3, 0x65, 0xd6,                \/\/ IID323\n+    0x62, 0xcc, 0x64, 0x18, 0x03, 0xf8,                                              \/\/ IID324\n+    0x62, 0x5c, 0x1c, 0x14, 0x03, 0xf0,                                              \/\/ IID325\n+    0x62, 0x4c, 0x0c, 0x10, 0x23, 0xfa,                                              \/\/ IID326\n+    0x62, 0x6c, 0x1c, 0x1c, 0x23, 0xff,                                              \/\/ IID327\n+    0x62, 0xc4, 0x34, 0x18, 0xaf, 0xe2,                                              \/\/ IID328\n+    0x62, 0x44, 0x14, 0x1c, 0xaf, 0xf1,                                              \/\/ IID329\n+    0x62, 0xec, 0x35, 0x10, 0x0b, 0xdf,                                              \/\/ IID330\n+    0x62, 0xe4, 0x1d, 0x1c, 0x0b, 0xc2,                                              \/\/ IID331\n+    0x62, 0xc4, 0x04, 0x10, 0x0b, 0xc9,                                              \/\/ IID332\n+    0x62, 0x74, 0x04, 0x1c, 0x0b, 0xeb,                                              \/\/ IID333\n+    0x62, 0x64, 0x1c, 0x10, 0xa5, 0xeb,                                              \/\/ IID334\n+    0x62, 0x74, 0x4c, 0x14, 0xa5, 0xc3,                                              \/\/ IID335\n+    0x62, 0xc4, 0x3c, 0x18, 0xad, 0xc3,                                              \/\/ IID336\n+    0x62, 0x54, 0x14, 0x1c, 0xad, 0xfc,                                              \/\/ IID337\n+    0x62, 0xcc, 0x74, 0x10, 0x2b, 0xff,                                              \/\/ IID338\n+    0x62, 0xcc, 0x5c, 0x14, 0x2b, 0xf2,                                              \/\/ IID339\n+    0x62, 0x6c, 0x2c, 0x18, 0x33, 0xcb,                                              \/\/ IID340\n+    0x62, 0xcc, 0x24, 0x1c, 0x33, 0xde,                                              \/\/ IID341\n+    0x62, 0xd4, 0x1c, 0x18, 0x24, 0xd2, 0x01,                                        \/\/ IID342\n+    0x62, 0xcc, 0x5c, 0x14, 0x24, 0xd6, 0x10,                                        \/\/ IID343\n+    0x62, 0xcc, 0x6c, 0x10, 0x2c, 0xd1, 0x08,                                        \/\/ IID344\n+    0x62, 0x6c, 0x64, 0x14, 0x2c, 0xc8, 0x01,                                        \/\/ IID345\n+    0x62, 0x4c, 0x24, 0x18, 0x40, 0xf8,                                              \/\/ IID346\n+    0x62, 0x6c, 0x0c, 0x18, 0x41, 0xf0,                                              \/\/ IID347\n+    0x62, 0x5c, 0x34, 0x18, 0x42, 0xda,                                              \/\/ IID348\n+    0x62, 0xdc, 0x24, 0x10, 0x43, 0xd7,                                              \/\/ IID349\n+    0x62, 0x44, 0x3c, 0x10, 0x44, 0xea,                                              \/\/ IID350\n+    0x62, 0xc4, 0x74, 0x18, 0x45, 0xef,                                              \/\/ IID351\n+    0x62, 0xcc, 0x44, 0x10, 0x46, 0xca,                                              \/\/ IID352\n+    0x62, 0x44, 0x5c, 0x10, 0x47, 0xdd,                                              \/\/ IID353\n+    0x62, 0xc4, 0x04, 0x18, 0x48, 0xf7,                                              \/\/ IID354\n+    0x62, 0x6c, 0x14, 0x10, 0x49, 0xd2,                                              \/\/ IID355\n+    0x62, 0x7c, 0x34, 0x18, 0x4a, 0xce,                                              \/\/ IID356\n+    0x62, 0xc4, 0x0c, 0x10, 0x4b, 0xfb,                                              \/\/ IID357\n+    0x62, 0x74, 0x5c, 0x10, 0x4c, 0xdb,                                              \/\/ IID358\n+    0x62, 0xec, 0x1c, 0x10, 0x4d, 0xc4,                                              \/\/ IID359\n+    0x62, 0x6c, 0x74, 0x10, 0x4e, 0xc6,                                              \/\/ IID360\n+    0x62, 0x54, 0x7c, 0x10, 0x4f, 0xff,                                              \/\/ IID361\n+    0x62, 0x4c, 0x18, 0x10, 0x40, 0x8c, 0x85, 0x53, 0xef, 0x6e, 0xc3,                \/\/ IID362\n+    0x62, 0x34, 0x40, 0x10, 0x41, 0xbc, 0xf3, 0xbd, 0x58, 0xbc, 0x1c,                \/\/ IID363\n+    0x62, 0xd4, 0x2c, 0x10, 0x42, 0x9c, 0xcc, 0x1a, 0x58, 0x4e, 0x08,                \/\/ IID364\n+    0x62, 0x6c, 0x74, 0x18, 0x43, 0x81, 0x2d, 0xe9, 0xec, 0x5c,                      \/\/ IID365\n+    0x62, 0x0c, 0x2c, 0x10, 0x44, 0x84, 0xe0, 0xa2, 0x46, 0x77, 0x50,                \/\/ IID366\n+    0x62, 0x74, 0x38, 0x18, 0x45, 0xbc, 0x19, 0x8a, 0xa3, 0xfc, 0xf0,                \/\/ IID367\n+    0x62, 0xac, 0x68, 0x18, 0x46, 0xbc, 0x1e, 0xcc, 0xca, 0x01, 0xed,                \/\/ IID368\n+    0x62, 0x84, 0x08, 0x10, 0x47, 0x9c, 0x25, 0x9d, 0xee, 0xb8, 0x73,                \/\/ IID369\n+    0x62, 0x6c, 0x4c, 0x10, 0x48, 0xb4, 0x08, 0x46, 0xc1, 0xaa, 0x22,                \/\/ IID370\n+    0x62, 0x2c, 0x74, 0x10, 0x49, 0xb4, 0x89, 0xb1, 0xb2, 0x9d, 0x07,                \/\/ IID371\n+    0x62, 0xd4, 0x28, 0x10, 0x4a, 0x94, 0x46, 0xef, 0xdf, 0xdb, 0xf7,                \/\/ IID372\n+    0x62, 0x84, 0x20, 0x18, 0x4b, 0x9c, 0x7e, 0x34, 0xae, 0x0d, 0xb0,                \/\/ IID373\n+    0x62, 0xc4, 0x58, 0x10, 0x4c, 0x94, 0x85, 0x1e, 0x39, 0x10, 0xe6,                \/\/ IID374\n+    0x62, 0x54, 0x60, 0x10, 0x4d, 0xac, 0x7d, 0x14, 0x77, 0x1b, 0x61,                \/\/ IID375\n+    0x62, 0x7c, 0x10, 0x10, 0x4e, 0xac, 0xc9, 0x3f, 0xa9, 0x94, 0x3a,                \/\/ IID376\n+    0x62, 0x44, 0x10, 0x18, 0x4f, 0xac, 0x7f, 0x32, 0x35, 0xd4, 0x76,                \/\/ IID377\n+    0x4d, 0x13, 0xfd,                                                                \/\/ IID378\n+    0x4d, 0x3b, 0xcc,                                                                \/\/ IID379\n+    0xd5, 0x9c, 0xaf, 0xfd,                                                          \/\/ IID380\n+    0xf3, 0x4d, 0x0f, 0xb8, 0xe1,                                                    \/\/ IID381\n+    0xd5, 0x58, 0x1b, 0xcf,                                                          \/\/ IID382\n+    0xd5, 0x18, 0x2b, 0xd0,                                                          \/\/ IID383\n+    0xf3, 0xd5, 0xcd, 0xbc, 0xea,                                                    \/\/ IID384\n+    0xf3, 0xd5, 0xd8, 0xbd, 0xe9,                                                    \/\/ IID385\n+    0xd5, 0x5c, 0x03, 0xea,                                                          \/\/ IID386\n+    0xd5, 0x5d, 0x23, 0xe0,                                                          \/\/ IID387\n+    0xd5, 0x1c, 0x0b, 0xd4,                                                          \/\/ IID388\n+    0xd5, 0x4d, 0x33, 0xda,                                                          \/\/ IID389\n+    0x4d, 0x8b, 0xf3,                                                                \/\/ IID390\n+    0xd5, 0xcc, 0xbc, 0xd9,                                                          \/\/ IID391\n+    0xd5, 0xc9, 0xbd, 0xf7,                                                          \/\/ IID392\n+    0xd5, 0xdd, 0xa3, 0xf7,                                                          \/\/ IID393\n+    0xd5, 0x58, 0x87, 0xdb,                                                          \/\/ IID394\n+    0xd5, 0x5c, 0x85, 0xd5,                                                          \/\/ IID395\n+    0xd5, 0x3d, 0x01, 0xb4, 0x62, 0x64, 0xeb, 0x69, 0xbf,                            \/\/ IID396\n+    0xd5, 0x79, 0x21, 0xbc, 0xa4, 0x8a, 0x89, 0xd8, 0x1b,                            \/\/ IID397\n+    0xd5, 0x2d, 0x39, 0x94, 0x9f, 0x31, 0xe6, 0xee, 0x39,                            \/\/ IID398\n+    0x4d, 0x09, 0xac, 0xd5, 0x59, 0x98, 0xa4, 0x01,                                  \/\/ IID399\n+    0xd5, 0x5c, 0x31, 0x85, 0x36, 0x86, 0xfe, 0x05,                                  \/\/ IID400\n+    0xd5, 0x7d, 0x29, 0x8c, 0xbe, 0x3f, 0xc3, 0x9b, 0xa9,                            \/\/ IID401\n+    0xd5, 0x7e, 0x89, 0xbc, 0xd5, 0xab, 0x44, 0x85, 0x7e,                            \/\/ IID402\n+    0xd5, 0xaa, 0xc1, 0x9c, 0xc1, 0x77, 0xb7, 0x35, 0x86,                            \/\/ IID403\n+    0xd5, 0x2b, 0x81, 0xa4, 0xfd, 0xd0, 0x4f, 0x8d, 0xf2, 0x00, 0x01, 0x00, 0x00,    \/\/ IID404\n+    0xd5, 0x18, 0x81, 0x80, 0x5e, 0x77, 0x4d, 0x53, 0x00, 0x00, 0x00, 0x10,          \/\/ IID405\n+    0xd5, 0x1a, 0x81, 0xbc, 0xbc, 0x89, 0xdd, 0x4d, 0x83, 0x00, 0x00, 0x00, 0x10,    \/\/ IID406\n+    0xd5, 0x29, 0xc1, 0xbc, 0xb9, 0x92, 0x27, 0x09, 0x8d, 0x04,                      \/\/ IID407\n+    0xd5, 0x2b, 0xc1, 0xa4, 0x43, 0x6b, 0x90, 0x7d, 0xdd, 0x04,                      \/\/ IID408\n+    0xd5, 0x2b, 0x81, 0x9c, 0x76, 0x34, 0xfc, 0x43, 0x1b, 0x00, 0x00, 0x00, 0x10,    \/\/ IID409\n+    0xd5, 0x39, 0xc1, 0xac, 0x2a, 0x3d, 0xaf, 0x51, 0xc4, 0x08,                      \/\/ IID410\n+    0xd5, 0x1a, 0x81, 0xac, 0xd6, 0x03, 0x14, 0x7e, 0x04, 0x00, 0x00, 0x01, 0x00,    \/\/ IID411\n+    0xd5, 0x28, 0x83, 0xb4, 0xda, 0xe8, 0xac, 0xb5, 0x9b, 0x01,                      \/\/ IID412\n+    0xd5, 0x3b, 0x81, 0x8c, 0x7e, 0x83, 0xc7, 0x93, 0x2c, 0x00, 0x01, 0x00, 0x00,    \/\/ IID413\n+    0xd5, 0x3b, 0xc7, 0x84, 0x82, 0xa1, 0x87, 0xcb, 0xfa, 0x00, 0x00, 0x01, 0x00,    \/\/ IID414\n+    0xd5, 0x2b, 0xf7, 0x84, 0x76, 0x47, 0xe1, 0x32, 0x39, 0x00, 0xff, 0xff, 0xff,    \/\/ IID415\n+    0xd5, 0x7f, 0x03, 0xb4, 0xc6, 0xa2, 0xdc, 0x1f, 0x99,                            \/\/ IID416\n+    0xd5, 0x1d, 0x23, 0xba, 0x42, 0x6e, 0x45, 0x36,                                  \/\/ IID417\n+    0xd5, 0x1c, 0x3b, 0x92, 0xed, 0x4b, 0x04, 0x05,                                  \/\/ IID418\n+    0xf3, 0xd5, 0xcd, 0xbd, 0xbc, 0x94, 0x2c, 0x48, 0xf8, 0xe8,                      \/\/ IID419\n+    0xd5, 0x78, 0x0b, 0x84, 0xbc, 0xd7, 0xc8, 0x87, 0xd9,                            \/\/ IID420\n+    0xd5, 0x7f, 0x13, 0xbc, 0x3e, 0x5d, 0x26, 0xc3, 0x1e,                            \/\/ IID421\n+    0xd5, 0xea, 0xaf, 0x84, 0x12, 0x1b, 0x83, 0x86, 0x35,                            \/\/ IID422\n+    0xf3, 0xd5, 0x9c, 0xb8, 0xa2, 0x86, 0x60, 0xc1, 0xc3,                            \/\/ IID423\n+    0xd5, 0x29, 0x1b, 0x8c, 0xe8, 0xab, 0x15, 0x15, 0x6b,                            \/\/ IID424\n+    0xd5, 0x6c, 0x2b, 0xac, 0xb9, 0x4d, 0x6c, 0xf0, 0x4f,                            \/\/ IID425\n+    0xf3, 0xd5, 0xdf, 0xbc, 0x94, 0x50, 0x77, 0x5e, 0x26, 0x8a,                      \/\/ IID426\n+    0xd5, 0x48, 0x33, 0x8c, 0x1b, 0x9c, 0xd5, 0x33, 0x40,                            \/\/ IID427\n+    0xd5, 0x5a, 0x8b, 0x94, 0xe6, 0x83, 0xcb, 0x6c, 0xc7,                            \/\/ IID428\n+    0xd5, 0x3c, 0x8d, 0xa4, 0xfc, 0x60, 0x15, 0x31, 0x4b,                            \/\/ IID429\n+    0xf2, 0xd5, 0xef, 0x2c, 0xac, 0xa2, 0x57, 0x26, 0x3a, 0x5c,                      \/\/ IID430\n+    0xd5, 0x6b, 0x87, 0xb4, 0xcd, 0x3f, 0x6f, 0x3d, 0x1a,                            \/\/ IID431\n+    0xd5, 0x7e, 0x85, 0x8c, 0xc1, 0x28, 0x24, 0x52, 0xca,                            \/\/ IID432\n+    0xd5, 0x18, 0x83, 0xc2, 0x01,                                                    \/\/ IID433\n+    0x49, 0x81, 0xe5, 0x00, 0x00, 0x00, 0x01,                                        \/\/ IID434\n+    0x49, 0x81, 0xd5, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID435\n+    0x49, 0x81, 0xfa, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID436\n+    0xd5, 0x18, 0xc1, 0xd4, 0x02,                                                    \/\/ IID437\n+    0x49, 0xc1, 0xd9, 0x10,                                                          \/\/ IID438\n+    0x49, 0xd1, 0xc0,                                                                \/\/ IID439\n+    0xd5, 0x19, 0xc1, 0xc9, 0x02,                                                    \/\/ IID440\n+    0xd5, 0x18, 0xc1, 0xfe, 0x08,                                                    \/\/ IID441\n+    0xd5, 0x18, 0xd1, 0xe1,                                                          \/\/ IID442\n+    0xd5, 0x19, 0x83, 0xdf, 0x10,                                                    \/\/ IID443\n+    0xd5, 0x19, 0xc1, 0xe3, 0x04,                                                    \/\/ IID444\n+    0xd5, 0x19, 0xc1, 0xec, 0x02,                                                    \/\/ IID445\n+    0x48, 0x81, 0xe9, 0x00, 0x00, 0x00, 0x01,                                        \/\/ IID446\n+    0xd5, 0x19, 0x81, 0xf3, 0x00, 0x00, 0x10, 0x00,                                  \/\/ IID447\n+    0xd5, 0x18, 0xc7, 0xc4, 0x00, 0x00, 0x00, 0x10,                                  \/\/ IID448\n+    0xd5, 0x19, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,                \/\/ IID449\n+    0xd5, 0x98, 0xba, 0xe6, 0x04,                                                    \/\/ IID450\n+    0x49, 0xf7, 0xc0, 0x00, 0xf0, 0xff, 0xff,                                        \/\/ IID451\n+    0xd5, 0x19, 0x81, 0xcc, 0x00, 0x00, 0x10, 0x00,                                  \/\/ IID452\n+    0x49, 0x81, 0xed, 0x00, 0x00, 0x01, 0x00,                                        \/\/ IID453\n+    0xd5, 0xd8, 0x40, 0x80, 0x15, 0x5c, 0x76, 0xec,                                  \/\/ IID454\n+    0xd5, 0x9b, 0x41, 0x9c, 0x05, 0x15, 0x26, 0x02, 0x1d,                            \/\/ IID455\n+    0xd5, 0xab, 0x42, 0x94, 0x64, 0x1e, 0x67, 0x37, 0xcb,                            \/\/ IID456\n+    0xd5, 0xcd, 0x43, 0x9c, 0xca, 0x0f, 0x54, 0x08, 0xe1,                            \/\/ IID457\n+    0xd5, 0xaf, 0x44, 0xb4, 0xad, 0x97, 0x7c, 0xb3, 0x83,                            \/\/ IID458\n+    0xd5, 0x9c, 0x45, 0xbc, 0x8f, 0x31, 0xd3, 0x2d, 0x94,                            \/\/ IID459\n+    0xd5, 0xcf, 0x46, 0x84, 0x57, 0xf7, 0xc2, 0x04, 0x80,                            \/\/ IID460\n+    0xd5, 0xc9, 0x47, 0xbb, 0x3b, 0x86, 0x6a, 0x27,                                  \/\/ IID461\n+    0xd5, 0xdd, 0x48, 0xa5, 0x6e, 0x39, 0xb4, 0x3f,                                  \/\/ IID462\n+    0xd5, 0xdd, 0x49, 0x94, 0xcb, 0x1c, 0xa6, 0xde, 0x4d,                            \/\/ IID463\n+    0xd5, 0xbc, 0x4a, 0x94, 0x5e, 0x66, 0x69, 0x12, 0x2a,                            \/\/ IID464\n+    0x4d, 0x0f, 0x4b, 0xa2, 0x9f, 0xc5, 0xd7, 0x03,                                  \/\/ IID465\n+    0x4f, 0x0f, 0x4c, 0x94, 0xc0, 0xd3, 0x79, 0x9e, 0xf1,                            \/\/ IID466\n+    0xd5, 0xd9, 0x4d, 0xbd, 0x93, 0x26, 0x81, 0x88,                                  \/\/ IID467\n+    0xd5, 0xa8, 0x4e, 0x8c, 0x5b, 0xcb, 0x01, 0xc6, 0x53,                            \/\/ IID468\n+    0xd5, 0x9c, 0x4f, 0xb4, 0x19, 0x8d, 0x0f, 0x74, 0x89,                            \/\/ IID469\n+    0xd5, 0x11, 0xff, 0xd5,                                                          \/\/ IID470\n+    0x49, 0xf7, 0xf2,                                                                \/\/ IID471\n+    0xd5, 0x18, 0xf7, 0xfb,                                                          \/\/ IID472\n+    0x49, 0xf7, 0xef,                                                                \/\/ IID473\n+    0xd5, 0x19, 0xf7, 0xe3,                                                          \/\/ IID474\n+    0xd5, 0x18, 0xf7, 0xdc,                                                          \/\/ IID475\n+    0x49, 0xf7, 0xd2,                                                                \/\/ IID476\n+    0xd5, 0x18, 0xd3, 0xc0,                                                          \/\/ IID477\n+    0xd5, 0x19, 0xd3, 0xcb,                                                          \/\/ IID478\n+    0x49, 0xd3, 0xf9,                                                                \/\/ IID479\n+    0x49, 0xd3, 0xe5,                                                                \/\/ IID480\n+    0x49, 0xd3, 0xe6,                                                                \/\/ IID481\n+    0xd5, 0x18, 0xd3, 0xea,                                                          \/\/ IID482\n+    0xd5, 0x19, 0xff, 0xc4,                                                          \/\/ IID483\n+    0xd5, 0x19, 0xff, 0xcc,                                                          \/\/ IID484\n+    0xd5, 0x18, 0x56,                                                                \/\/ IID485\n+    0xd5, 0x09, 0x58,                                                                \/\/ IID486\n+    0x41, 0xff, 0x94, 0x24, 0x4e, 0x42, 0xcc, 0x64,                                  \/\/ IID487\n+    0xd5, 0x3b, 0xf7, 0xa4, 0x2a, 0xa1, 0xf7, 0x90, 0xb9,                            \/\/ IID488\n+    0xd5, 0x3a, 0xf7, 0x9c, 0x05, 0x0b, 0xdf, 0x37, 0x20,                            \/\/ IID489\n+    0xd5, 0x2b, 0xd3, 0xbc, 0xfc, 0x56, 0xda, 0x2d, 0xa8,                            \/\/ IID490\n+    0xd5, 0x18, 0xd3, 0xa4, 0x24, 0x70, 0xd0, 0x5f, 0xe1,                            \/\/ IID491\n+    0xd5, 0x29, 0xd3, 0xac, 0xe5, 0xf2, 0x81, 0x10, 0x17,                            \/\/ IID492\n+    0xd5, 0x19, 0xff, 0x87, 0xdb, 0x08, 0xa8, 0x13,                                  \/\/ IID493\n+    0xd5, 0x18, 0xff, 0x8b, 0x5f, 0xc1, 0xf2, 0xe7,                                  \/\/ IID494\n+    0xd5, 0x58, 0x69, 0x88, 0xa8, 0x02, 0x0d, 0xd5, 0x00, 0x10, 0x00, 0x00,          \/\/ IID495\n+    0xd5, 0x5d, 0x6b, 0xe1, 0x10,                                                    \/\/ IID496\n+    0xd5, 0x9d, 0xa4, 0xeb, 0x10,                                                    \/\/ IID497\n+    0x4d, 0x0f, 0xac, 0xd0, 0x10,                                                    \/\/ IID498\n+    0x62, 0xd4, 0x3c, 0x18, 0x8f, 0xc6,                                              \/\/ IID499\n+    0x62, 0xfc, 0xe4, 0x18, 0x8f, 0xc2,                                              \/\/ IID500\n+    0x62, 0xfc, 0x64, 0x10, 0xff, 0xf7,                                              \/\/ IID501\n+    0x62, 0xd4, 0xe4, 0x18, 0xff, 0xf4,                                              \/\/ IID502\n+    0xd5, 0xad, 0xb6, 0x8c, 0xfe, 0xba, 0xd9, 0x72, 0xbd,                            \/\/ IID503\n+    0xd5, 0xcd, 0xb7, 0xa4, 0x89, 0x9f, 0xe9, 0x9e, 0x8d,                            \/\/ IID504\n+    0xd5, 0xb9, 0xbe, 0x9c, 0xa8, 0x90, 0xe9, 0x6b, 0x3a,                            \/\/ IID505\n+    0xd5, 0xda, 0xbf, 0x84, 0x16, 0xdd, 0x8b, 0xef, 0x07,                            \/\/ IID506\n+    0xd5, 0xcd, 0xb6, 0xe6,                                                          \/\/ IID507\n+    0xd5, 0x9d, 0xb7, 0xec,                                                          \/\/ IID508\n+    0x4c, 0x0f, 0xbe, 0xda,                                                          \/\/ IID509\n+    0xd5, 0x9d, 0xbf, 0xe2,                                                          \/\/ IID510\n+    0xd5, 0xc9, 0xb1, 0xa2, 0x26, 0x57, 0x2d, 0xf4,                                  \/\/ IID511\n+    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xff,                                              \/\/ IID512\n+    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xff,                                              \/\/ IID513\n+    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xf6,                                              \/\/ IID514\n+    0x62, 0xd4, 0xfc, 0x0c, 0xf7, 0xf6,                                              \/\/ IID515\n+    0x62, 0xd4, 0xfc, 0x08, 0xf7, 0xef,                                              \/\/ IID516\n+    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xec,                                              \/\/ IID517\n+    0x62, 0xf4, 0xfc, 0x08, 0xf7, 0xe1,                                              \/\/ IID518\n+    0x62, 0xfc, 0xfc, 0x0c, 0xf7, 0xe5,                                              \/\/ IID519\n+    0x62, 0xbc, 0xfc, 0x08, 0xf7, 0xa4, 0xd0, 0x1e, 0xac, 0x66, 0x5f,                \/\/ IID520\n+    0x62, 0xfc, 0xf8, 0x0c, 0xf7, 0xa4, 0xf5, 0x83, 0x7f, 0x43, 0xf4,                \/\/ IID521\n+    0x62, 0xcc, 0xfc, 0x08, 0xaf, 0xf2,                                              \/\/ IID522\n+    0x62, 0x6c, 0xfc, 0x0c, 0xaf, 0xcd,                                              \/\/ IID523\n+    0x62, 0xc4, 0xfc, 0x08, 0xf5, 0xe5,                                              \/\/ IID524\n+    0x62, 0x6c, 0xfc, 0x0c, 0xf5, 0xcb,                                              \/\/ IID525\n+    0x62, 0xdc, 0xd4, 0x10, 0xf7, 0xde,                                              \/\/ IID526\n+    0x62, 0xd4, 0x94, 0x14, 0xf7, 0xdb,                                              \/\/ IID527\n+    0x62, 0xd4, 0xcc, 0x10, 0xf7, 0xd0,                                              \/\/ IID528\n+    0x62, 0x7c, 0xfc, 0x08, 0x88, 0xe3,                                              \/\/ IID529\n+    0x62, 0x6c, 0xfc, 0x0c, 0x88, 0xef,                                              \/\/ IID530\n+    0x62, 0xdc, 0x9c, 0x10, 0xd3, 0xc0,                                              \/\/ IID531\n+    0x62, 0xfc, 0xec, 0x1c, 0xd3, 0xc4,                                              \/\/ IID532\n+    0x62, 0xdc, 0xe4, 0x18, 0xd3, 0xce,                                              \/\/ IID533\n+    0x62, 0xd4, 0xac, 0x1c, 0xd3, 0xcf,                                              \/\/ IID534\n+    0x62, 0xd4, 0xf4, 0x10, 0xd3, 0xe5,                                              \/\/ IID535\n+    0x62, 0xdc, 0xd4, 0x14, 0xd3, 0xe0,                                              \/\/ IID536\n+    0x62, 0xd4, 0x84, 0x10, 0xd3, 0xfc,                                              \/\/ IID537\n+    0x62, 0xdc, 0xec, 0x1c, 0xd3, 0xf8,                                              \/\/ IID538\n+    0x62, 0xdc, 0xd4, 0x10, 0xff, 0xc8,                                              \/\/ IID539\n+    0x62, 0xdc, 0x84, 0x1c, 0xff, 0xcf,                                              \/\/ IID540\n+    0x62, 0xf4, 0xac, 0x18, 0xff, 0xc3,                                              \/\/ IID541\n+    0x62, 0xd4, 0xec, 0x14, 0xff, 0xc0,                                              \/\/ IID542\n+    0x62, 0xdc, 0xac, 0x18, 0xd3, 0xe2,                                              \/\/ IID543\n+    0x62, 0xd4, 0x9c, 0x14, 0xd3, 0xe6,                                              \/\/ IID544\n+    0x62, 0xfc, 0xac, 0x18, 0xd3, 0xeb,                                              \/\/ IID545\n+    0x62, 0xfc, 0x9c, 0x14, 0xd3, 0xed,                                              \/\/ IID546\n+    0x62, 0xec, 0xfc, 0x08, 0xf4, 0xee,                                              \/\/ IID547\n+    0x62, 0xec, 0xfc, 0x0c, 0xf4, 0xc7,                                              \/\/ IID548\n+    0x62, 0x3c, 0xfc, 0x08, 0xaf, 0x9c, 0x8a, 0x5f, 0x7a, 0xdd, 0xec,                \/\/ IID549\n+    0x62, 0x1c, 0xfc, 0x0c, 0xaf, 0xac, 0xf8, 0xa0, 0x0c, 0xf5, 0x48,                \/\/ IID550\n+    0x62, 0x54, 0xfc, 0x08, 0xf5, 0x8d, 0x0e, 0xcf, 0x15, 0x21,                      \/\/ IID551\n+    0x62, 0x4c, 0xfc, 0x0c, 0xf5, 0x9e, 0xbb, 0xab, 0x9c, 0x04,                      \/\/ IID552\n+    0x62, 0x94, 0xd0, 0x10, 0xf7, 0x9c, 0xbd, 0xd2, 0xf4, 0xa8, 0x50,                \/\/ IID553\n+    0x62, 0xfc, 0xc8, 0x14, 0xf7, 0x9c, 0x62, 0xb4, 0xa7, 0x5f, 0xa2,                \/\/ IID554\n+    0x62, 0x74, 0xf8, 0x08, 0x88, 0xb4, 0xb3, 0x2f, 0xb6, 0x9c, 0x9f,                \/\/ IID555\n+    0x62, 0x6c, 0xf8, 0x0c, 0x88, 0x94, 0xf7, 0xdd, 0x93, 0x39, 0x8d,                \/\/ IID556\n+    0x62, 0xd4, 0xac, 0x10, 0xd3, 0xa1, 0x09, 0xba, 0x4a, 0x33,                      \/\/ IID557\n+    0x62, 0x94, 0xb0, 0x1c, 0xd3, 0xa4, 0xf1, 0xfe, 0x9e, 0x65, 0xde,                \/\/ IID558\n+    0x62, 0xfc, 0xb4, 0x10, 0xd3, 0xbc, 0x24, 0x4f, 0x45, 0xce, 0xde,                \/\/ IID559\n+    0x62, 0xdc, 0xf8, 0x14, 0xd3, 0xbc, 0x44, 0xb9, 0x83, 0xc4, 0x48,                \/\/ IID560\n+    0x62, 0xd4, 0x88, 0x10, 0xff, 0x8c, 0x01, 0xb1, 0x17, 0x73, 0xf7,                \/\/ IID561\n+    0x62, 0x9c, 0xa0, 0x1c, 0xff, 0x8c, 0xae, 0xd0, 0x8f, 0xeb, 0x3e,                \/\/ IID562\n+    0x62, 0x9c, 0xac, 0x10, 0xff, 0x84, 0xd5, 0x2e, 0x82, 0xf4, 0x3e,                \/\/ IID563\n+    0x62, 0xfc, 0x90, 0x14, 0xff, 0x84, 0xa3, 0x47, 0xc2, 0xf0, 0xc0,                \/\/ IID564\n+    0x62, 0xdc, 0xb8, 0x18, 0xd3, 0xac, 0x26, 0x17, 0x6a, 0xb5, 0x15,                \/\/ IID565\n+    0x62, 0xd4, 0xac, 0x14, 0xd3, 0xab, 0x9f, 0x9a, 0x17, 0xd2,                      \/\/ IID566\n+    0x62, 0x34, 0xf8, 0x08, 0xf4, 0x9c, 0x71, 0x3e, 0x4e, 0x00, 0xcd,                \/\/ IID567\n+    0x62, 0x84, 0xfc, 0x0c, 0xf4, 0xbc, 0x61, 0x97, 0xc1, 0x7d, 0xab,                \/\/ IID568\n+    0x62, 0x54, 0xdc, 0x10, 0x01, 0xbc, 0xcd, 0xf3, 0x93, 0xee, 0xb9,                \/\/ IID569\n+    0x62, 0xc4, 0x90, 0x1c, 0x01, 0x84, 0x79, 0xfb, 0x89, 0x93, 0xd7,                \/\/ IID570\n+    0x62, 0x4c, 0xd0, 0x10, 0x21, 0xac, 0x0e, 0xb2, 0x30, 0x4e, 0x0f,                \/\/ IID571\n+    0x62, 0xac, 0x88, 0x14, 0x21, 0x8c, 0x39, 0xc4, 0xde, 0xb9, 0x3a,                \/\/ IID572\n+    0x62, 0x0c, 0xa8, 0x18, 0x09, 0xa4, 0x73, 0x9a, 0xed, 0x80, 0xe6,                \/\/ IID573\n+    0x62, 0x1c, 0xb0, 0x1c, 0x09, 0x9c, 0x35, 0xf8, 0x64, 0x15, 0xdb,                \/\/ IID574\n+    0x62, 0xc4, 0x84, 0x18, 0x29, 0x86, 0x70, 0x40, 0xbb, 0xb0,                      \/\/ IID575\n+    0x62, 0x6c, 0xf0, 0x1c, 0x29, 0xa4, 0x55, 0x71, 0x53, 0x2f, 0xee,                \/\/ IID576\n+    0x62, 0x7c, 0xe0, 0x10, 0x31, 0x84, 0x13, 0x14, 0xaa, 0xa1, 0xf5,                \/\/ IID577\n+    0x62, 0xac, 0x98, 0x14, 0x31, 0x84, 0x61, 0x20, 0xd0, 0x4b, 0x91,                \/\/ IID578\n+    0x62, 0xfc, 0xf4, 0x10, 0x81, 0x82, 0xfb, 0xee, 0x54, 0x9f, 0x00, 0x00, 0x00, 0x01, \/\/ IID579\n+    0x62, 0xbc, 0xb0, 0x14, 0x81, 0x84, 0x0b, 0xd9, 0x44, 0x24, 0x12, 0x00, 0x00, 0x01, 0x00, \/\/ IID580\n+    0x62, 0x94, 0x88, 0x10, 0x81, 0xa4, 0x61, 0x0d, 0xf3, 0x4f, 0xda, 0x00, 0x10, 0x00, 0x00, \/\/ IID581\n+    0x62, 0xfc, 0xb4, 0x1c, 0x81, 0xa4, 0x5e, 0xda, 0xaf, 0xb9, 0x81, 0x00, 0x00, 0x00, 0x10, \/\/ IID582\n+    0x62, 0x1c, 0xf8, 0x08, 0x6b, 0xa4, 0x49, 0x34, 0x97, 0xd2, 0xbc, 0x01,          \/\/ IID583\n+    0x62, 0x3c, 0xf8, 0x0c, 0x6b, 0xbc, 0xf9, 0xa2, 0xa9, 0x68, 0xd4, 0x10,          \/\/ IID584\n+    0x62, 0xb4, 0x98, 0x10, 0x81, 0x8c, 0x3a, 0xb1, 0x63, 0x13, 0x3f, 0x00, 0x01, 0x00, 0x00, \/\/ IID585\n+    0x62, 0xd4, 0xf8, 0x14, 0x81, 0x8c, 0xfc, 0xc4, 0x79, 0x7a, 0xe8, 0x00, 0x00, 0x00, 0x01, \/\/ IID586\n+    0x62, 0x94, 0xb8, 0x18, 0xc1, 0xa4, 0x86, 0x5b, 0x6f, 0xbd, 0x8e, 0x02,          \/\/ IID587\n+    0x62, 0x94, 0xbc, 0x1c, 0xc1, 0xa4, 0xb7, 0x43, 0x32, 0xf1, 0x21, 0x10,          \/\/ IID588\n+    0x62, 0x94, 0xa8, 0x18, 0xc1, 0xbc, 0x2d, 0x72, 0xcb, 0x04, 0x7d, 0x02,          \/\/ IID589\n+    0x62, 0xbc, 0xa0, 0x1c, 0xc1, 0xbc, 0xfd, 0x24, 0x4b, 0x89, 0xde, 0x08,          \/\/ IID590\n+    0x62, 0xbc, 0xf4, 0x18, 0xc1, 0xac, 0x60, 0x38, 0x9a, 0x0c, 0x26, 0x04,          \/\/ IID591\n+    0x62, 0x9c, 0xcc, 0x14, 0xc1, 0xac, 0x0a, 0x9e, 0x44, 0xa9, 0xa1, 0x08,          \/\/ IID592\n+    0x62, 0xb4, 0x80, 0x10, 0x83, 0xac, 0x63, 0x10, 0xbb, 0x00, 0x2b, 0x01,          \/\/ IID593\n+    0x62, 0xdc, 0xd4, 0x14, 0x81, 0xaf, 0x53, 0x0b, 0xef, 0x93, 0x00, 0x10, 0x00, 0x00, \/\/ IID594\n+    0x62, 0xbc, 0xa0, 0x18, 0x81, 0xb4, 0x77, 0x6b, 0x02, 0xa6, 0x51, 0x00, 0x00, 0x01, 0x00, \/\/ IID595\n+    0x62, 0x9c, 0x8c, 0x1c, 0x83, 0xb4, 0x93, 0x55, 0x64, 0x52, 0xcb, 0x10,          \/\/ IID596\n+    0x62, 0xfc, 0xdc, 0x10, 0x81, 0xc7, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID597\n+    0x62, 0xfc, 0xfc, 0x18, 0x81, 0xc7, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID598\n+    0x62, 0xfc, 0xb4, 0x1c, 0x81, 0xc5, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID599\n+    0x62, 0xfc, 0xfc, 0x1c, 0x81, 0xc5, 0x00, 0x10, 0x00, 0x00,                      \/\/ IID600\n+    0x62, 0xf4, 0xdc, 0x10, 0x83, 0xe2, 0x10,                                        \/\/ IID601\n+    0x62, 0xf4, 0xfc, 0x18, 0x83, 0xe2, 0x10,                                        \/\/ IID602\n+    0x62, 0xfc, 0x8c, 0x1c, 0x83, 0xe3, 0x10,                                        \/\/ IID603\n+    0x62, 0xfc, 0xfc, 0x1c, 0x83, 0xe3, 0x10,                                        \/\/ IID604\n+    0x62, 0x6c, 0xfc, 0x08, 0x6b, 0xd9, 0x10,                                        \/\/ IID605\n+    0x62, 0xfc, 0xfc, 0x08, 0x6b, 0xc1, 0x10,                                        \/\/ IID606\n+    0x62, 0x44, 0xfc, 0x0c, 0x69, 0xf5, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID607\n+    0x62, 0xd4, 0xfc, 0x0c, 0x69, 0xc5, 0x00, 0x01, 0x00, 0x00,                      \/\/ IID608\n+    0x62, 0xd4, 0xe4, 0x10, 0x81, 0xcf, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID609\n+    0x62, 0xd4, 0xfc, 0x18, 0x81, 0xcf, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID610\n+    0x62, 0xdc, 0xfc, 0x14, 0x81, 0xcc, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID611\n+    0x62, 0xdc, 0xfc, 0x1c, 0x81, 0xcc, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID612\n+    0x62, 0xdc, 0xe4, 0x18, 0xc1, 0xd0, 0x02,                                        \/\/ IID613\n+    0x62, 0xdc, 0xfc, 0x18, 0xc1, 0xd0, 0x02,                                        \/\/ IID614\n+    0x62, 0xfc, 0x84, 0x18, 0xc1, 0xc4, 0x10,                                        \/\/ IID615\n+    0x62, 0xfc, 0xfc, 0x18, 0xc1, 0xc4, 0x10,                                        \/\/ IID616\n+    0x62, 0xf4, 0xa4, 0x1c, 0xc1, 0xc1, 0x10,                                        \/\/ IID617\n+    0x62, 0xf4, 0xfc, 0x1c, 0xc1, 0xc1, 0x10,                                        \/\/ IID618\n+    0x62, 0xdc, 0x94, 0x18, 0xc1, 0xca, 0x10,                                        \/\/ IID619\n+    0x62, 0xdc, 0xfc, 0x18, 0xc1, 0xca, 0x10,                                        \/\/ IID620\n+    0x62, 0xfc, 0xe4, 0x14, 0xc1, 0xcc, 0x04,                                        \/\/ IID621\n+    0x62, 0xfc, 0xfc, 0x1c, 0xc1, 0xcc, 0x04,                                        \/\/ IID622\n+    0x62, 0xdc, 0xe4, 0x10, 0xc1, 0xe4, 0x10,                                        \/\/ IID623\n+    0x62, 0xdc, 0xfc, 0x18, 0xc1, 0xe4, 0x10,                                        \/\/ IID624\n+    0x62, 0xfc, 0xb4, 0x14, 0xc1, 0xe2, 0x04,                                        \/\/ IID625\n+    0x62, 0xfc, 0xfc, 0x1c, 0xc1, 0xe2, 0x04,                                        \/\/ IID626\n+    0x62, 0xdc, 0xac, 0x18, 0xc1, 0xfb, 0x04,                                        \/\/ IID627\n+    0x62, 0xdc, 0xfc, 0x18, 0xc1, 0xfb, 0x04,                                        \/\/ IID628\n+    0x62, 0xfc, 0xec, 0x1c, 0xc1, 0xfe, 0x08,                                        \/\/ IID629\n+    0x62, 0xfc, 0xfc, 0x1c, 0xc1, 0xfe, 0x08,                                        \/\/ IID630\n+    0x62, 0xd4, 0x9c, 0x10, 0xd1, 0xe7,                                              \/\/ IID631\n+    0x62, 0xd4, 0xfc, 0x18, 0xd1, 0xe7,                                              \/\/ IID632\n+    0x62, 0xd4, 0xe4, 0x1c, 0xc1, 0xe4, 0x04,                                        \/\/ IID633\n+    0x62, 0xd4, 0xfc, 0x1c, 0xc1, 0xe4, 0x04,                                        \/\/ IID634\n+    0x62, 0xd4, 0xac, 0x10, 0xd1, 0xeb,                                              \/\/ IID635\n+    0x62, 0xd4, 0xfc, 0x18, 0xd1, 0xeb,                                              \/\/ IID636\n+    0x62, 0xdc, 0xec, 0x1c, 0xc1, 0xef, 0x08,                                        \/\/ IID637\n+    0x62, 0xdc, 0xfc, 0x1c, 0xc1, 0xef, 0x08,                                        \/\/ IID638\n+    0x62, 0xf4, 0xd4, 0x10, 0x81, 0xeb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID639\n+    0x62, 0xf4, 0xfc, 0x18, 0x81, 0xeb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID640\n+    0x62, 0xdc, 0xb4, 0x14, 0x81, 0xec, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID641\n+    0x62, 0xdc, 0xfc, 0x1c, 0x81, 0xec, 0x00, 0x00, 0x01, 0x00,                      \/\/ IID642\n+    0x62, 0xd4, 0xcc, 0x10, 0x83, 0xf6, 0x01,                                        \/\/ IID643\n+    0x62, 0xd4, 0xfc, 0x18, 0x83, 0xf6, 0x01,                                        \/\/ IID644\n+    0x62, 0xdc, 0xa4, 0x1c, 0x81, 0xf6, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID645\n+    0x62, 0xdc, 0xfc, 0x1c, 0x81, 0xf6, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID646\n+    0x62, 0xfc, 0xdc, 0x10, 0x81, 0xcb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID647\n+    0x62, 0xfc, 0xfc, 0x18, 0x81, 0xcb, 0x00, 0x00, 0x10, 0x00,                      \/\/ IID648\n+    0x62, 0xd4, 0xb4, 0x10, 0x81, 0xcd, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID649\n+    0x62, 0xd4, 0xfc, 0x18, 0x81, 0xcd, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID650\n+    0x62, 0xdc, 0xb4, 0x10, 0x81, 0xe9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID651\n+    0x62, 0xdc, 0xfc, 0x18, 0x81, 0xe9, 0x00, 0x00, 0x00, 0x10,                      \/\/ IID652\n+    0x62, 0xd4, 0xec, 0x14, 0x81, 0xeb, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID653\n+    0x62, 0xd4, 0xfc, 0x1c, 0x81, 0xeb, 0x00, 0x00, 0x40, 0x00,                      \/\/ IID654\n+    0x62, 0xec, 0xac, 0x18, 0x03, 0x94, 0x24, 0x53, 0xf4, 0x56, 0x07,                \/\/ IID655\n+    0x62, 0x6c, 0xe0, 0x1c, 0x03, 0x9c, 0x2e, 0x49, 0x15, 0x54, 0xda,                \/\/ IID656\n+    0x62, 0x44, 0xe8, 0x18, 0x23, 0xbc, 0xe1, 0x64, 0x1c, 0x30, 0xfb,                \/\/ IID657\n+    0x62, 0x04, 0xf8, 0x14, 0x23, 0x8c, 0x1e, 0xd9, 0x54, 0x66, 0x7c,                \/\/ IID658\n+    0x62, 0xd4, 0x90, 0x10, 0x0b, 0x8c, 0x3f, 0x2d, 0xf7, 0xb7, 0x45,                \/\/ IID659\n+    0x62, 0xc4, 0xe0, 0x14, 0x0b, 0x8c, 0x75, 0x6a, 0xe6, 0xf3, 0x8a,                \/\/ IID660\n+    0x62, 0x5c, 0x90, 0x18, 0xaf, 0x84, 0x7f, 0x4e, 0x49, 0xee, 0xdd,                \/\/ IID661\n+    0x62, 0x04, 0xa4, 0x1c, 0xaf, 0xa4, 0xdd, 0xab, 0x13, 0x00, 0x5c,                \/\/ IID662\n+    0x62, 0xec, 0xec, 0x18, 0x2b, 0x94, 0x0a, 0x71, 0x7e, 0x55, 0x59,                \/\/ IID663\n+    0x62, 0x7c, 0xa4, 0x14, 0x2b, 0x9e, 0xb7, 0x69, 0xb9, 0xd7,                      \/\/ IID664\n+    0x62, 0x5c, 0xac, 0x18, 0x33, 0x88, 0x54, 0x1d, 0x69, 0x49,                      \/\/ IID665\n+    0x62, 0x7c, 0xbc, 0x14, 0x33, 0xa3, 0xaa, 0x29, 0xd5, 0x22,                      \/\/ IID666\n+    0x62, 0x54, 0xdc, 0x10, 0x03, 0xca,                                              \/\/ IID667\n+    0x62, 0xcc, 0xec, 0x14, 0x03, 0xca,                                              \/\/ IID668\n+    0x62, 0xec, 0xd5, 0x10, 0x66, 0xc3,                                              \/\/ IID669\n+    0x62, 0x5c, 0xe6, 0x18, 0x66, 0xf3,                                              \/\/ IID670\n+    0x62, 0x7c, 0xb4, 0x18, 0x23, 0xe6,                                              \/\/ IID671\n+    0x62, 0x44, 0xf4, 0x14, 0x23, 0xca,                                              \/\/ IID672\n+    0x62, 0x54, 0x9c, 0x18, 0xaf, 0xfe,                                              \/\/ IID673\n+    0x62, 0xec, 0x94, 0x14, 0xaf, 0xd0,                                              \/\/ IID674\n+    0x62, 0x54, 0xa4, 0x18, 0x0b, 0xca,                                              \/\/ IID675\n+    0x62, 0x7c, 0xb4, 0x14, 0x0b, 0xe8,                                              \/\/ IID676\n+    0x62, 0xcc, 0xa4, 0x18, 0x2b, 0xe9,                                              \/\/ IID677\n+    0x62, 0xe4, 0xec, 0x1c, 0x2b, 0xe3,                                              \/\/ IID678\n+    0x62, 0xcc, 0xb4, 0x10, 0x33, 0xea,                                              \/\/ IID679\n+    0x62, 0x6c, 0xc4, 0x14, 0x33, 0xdd,                                              \/\/ IID680\n+    0x62, 0x44, 0xac, 0x18, 0x24, 0xfc, 0x02,                                        \/\/ IID681\n+    0x62, 0x6c, 0xc4, 0x14, 0x24, 0xe8, 0x02,                                        \/\/ IID682\n+    0x62, 0xcc, 0xe4, 0x10, 0x2c, 0xf8, 0x04,                                        \/\/ IID683\n+    0x62, 0x44, 0xd4, 0x14, 0x2c, 0xcf, 0x04,                                        \/\/ IID684\n+    0x62, 0x64, 0xb4, 0x18, 0x40, 0xea,                                              \/\/ IID685\n+    0x62, 0x6c, 0xa4, 0x18, 0x41, 0xcb,                                              \/\/ IID686\n+    0x62, 0xec, 0xac, 0x18, 0x42, 0xc1,                                              \/\/ IID687\n+    0x62, 0xcc, 0xbc, 0x18, 0x43, 0xff,                                              \/\/ IID688\n+    0x62, 0x64, 0xb4, 0x18, 0x44, 0xfb,                                              \/\/ IID689\n+    0x62, 0x44, 0xfc, 0x10, 0x45, 0xe9,                                              \/\/ IID690\n+    0x62, 0x54, 0xbc, 0x10, 0x46, 0xd1,                                              \/\/ IID691\n+    0x62, 0x4c, 0xcc, 0x10, 0x47, 0xe2,                                              \/\/ IID692\n+    0x62, 0x6c, 0xec, 0x10, 0x48, 0xcc,                                              \/\/ IID693\n+    0x62, 0xe4, 0xfc, 0x10, 0x49, 0xeb,                                              \/\/ IID694\n+    0x62, 0xec, 0x9c, 0x10, 0x4a, 0xf3,                                              \/\/ IID695\n+    0x62, 0x74, 0x94, 0x18, 0x4b, 0xfa,                                              \/\/ IID696\n+    0x62, 0xc4, 0xbc, 0x18, 0x4c, 0xf6,                                              \/\/ IID697\n+    0x62, 0x44, 0x9c, 0x18, 0x4d, 0xc6,                                              \/\/ IID698\n+    0x62, 0x7c, 0xbc, 0x10, 0x4e, 0xed,                                              \/\/ IID699\n+    0x62, 0xdc, 0xe4, 0x18, 0x4f, 0xdb,                                              \/\/ IID700\n+    0x62, 0x8c, 0x88, 0x18, 0x40, 0x8c, 0xd8, 0xf0, 0x08, 0xd5, 0x09,                \/\/ IID701\n+    0x62, 0x5c, 0x90, 0x18, 0x41, 0xbc, 0xaf, 0x4a, 0xc7, 0xf2, 0x6e,                \/\/ IID702\n+    0x62, 0x0c, 0x90, 0x18, 0x42, 0x9c, 0x4f, 0xab, 0xe9, 0x4f, 0x73,                \/\/ IID703\n+    0x62, 0x84, 0x80, 0x18, 0x43, 0xb4, 0xae, 0x05, 0x42, 0x27, 0x98,                \/\/ IID704\n+    0x62, 0x84, 0x88, 0x10, 0x44, 0xbc, 0x67, 0xe7, 0x9d, 0x97, 0xfd,                \/\/ IID705\n+    0x62, 0x14, 0x98, 0x18, 0x45, 0x8c, 0xc9, 0x6b, 0xab, 0x2a, 0x05,                \/\/ IID706\n+    0x62, 0x04, 0xb4, 0x18, 0x46, 0x8c, 0xc0, 0x6b, 0x42, 0xbd, 0xe1,                \/\/ IID707\n+    0x62, 0xcc, 0xf4, 0x18, 0x47, 0xa4, 0x9b, 0x58, 0x3c, 0x82, 0x46,                \/\/ IID708\n+    0x62, 0x7c, 0xe4, 0x18, 0x48, 0xa5, 0x38, 0x47, 0xca, 0xf9,                      \/\/ IID709\n+    0x62, 0x9c, 0xc0, 0x10, 0x49, 0x9c, 0xd3, 0xc0, 0xbc, 0x22, 0x09,                \/\/ IID710\n+    0x62, 0x7c, 0xb4, 0x10, 0x4a, 0x8f, 0xec, 0x14, 0x2a, 0x0d,                      \/\/ IID711\n+    0x62, 0xc4, 0xa4, 0x18, 0x4b, 0x9b, 0x63, 0xa5, 0x46, 0xf0,                      \/\/ IID712\n+    0x62, 0xcc, 0x90, 0x18, 0x4c, 0x94, 0x1c, 0x7e, 0x9b, 0x6b, 0x71,                \/\/ IID713\n+    0x62, 0xa4, 0xd0, 0x10, 0x4d, 0x84, 0x29, 0xe2, 0xbb, 0x0f, 0xa5,                \/\/ IID714\n+    0x62, 0x2c, 0x98, 0x18, 0x4e, 0xbc, 0x14, 0xb1, 0x7f, 0x0b, 0x0e,                \/\/ IID715\n+    0x62, 0x4c, 0x84, 0x18, 0x4f, 0x86, 0x4f, 0x7b, 0x3b, 0x2d,                      \/\/ IID716\n@@ -1624,0 +1748,1 @@\n+#endif \/\/ _LP64\n@@ -1625,0 +1750,1 @@\n+#ifdef _LP64\n@@ -1626,1 +1752,1 @@\n-    7,    \/\/ IID257\n+    10,   \/\/ IID257\n@@ -1629,10 +1755,10 @@\n-    10,   \/\/ IID260\n-    10,   \/\/ IID261\n-    7,    \/\/ IID262\n-    7,    \/\/ IID263\n-    7,    \/\/ IID264\n-    7,    \/\/ IID265\n-    7,    \/\/ IID266\n-    6,    \/\/ IID267\n-    7,    \/\/ IID268\n-    7,    \/\/ IID269\n+    7,    \/\/ IID260\n+    7,    \/\/ IID261\n+    10,   \/\/ IID262\n+    10,   \/\/ IID263\n+    10,   \/\/ IID264\n+    10,   \/\/ IID265\n+    10,   \/\/ IID266\n+    10,   \/\/ IID267\n+    10,   \/\/ IID268\n+    10,   \/\/ IID269\n@@ -1640,0 +1766,1 @@\n+#endif \/\/ _LP64\n@@ -1641,0 +1768,1 @@\n+#ifdef _LP64\n@@ -1644,3 +1772,3 @@\n-    10,   \/\/ IID275\n-    10,   \/\/ IID276\n-    10,   \/\/ IID277\n+    7,    \/\/ IID275\n+    7,    \/\/ IID276\n+    7,    \/\/ IID277\n@@ -1648,45 +1776,47 @@\n-    10,   \/\/ IID279\n-    10,   \/\/ IID280\n-    11,   \/\/ IID281\n-    11,   \/\/ IID282\n-    11,   \/\/ IID283\n-    11,   \/\/ IID284\n-    11,   \/\/ IID285\n-    11,   \/\/ IID286\n-    10,   \/\/ IID287\n-    11,   \/\/ IID288\n-    11,   \/\/ IID289\n-    11,   \/\/ IID290\n-    11,   \/\/ IID291\n-    11,   \/\/ IID292\n-    11,   \/\/ IID293\n-    10,   \/\/ IID294\n-    11,   \/\/ IID295\n-    11,   \/\/ IID296\n-    6,    \/\/ IID297\n-    6,    \/\/ IID298\n-    6,    \/\/ IID299\n-    6,    \/\/ IID300\n-    6,    \/\/ IID301\n-    6,    \/\/ IID302\n-    6,    \/\/ IID303\n-    6,    \/\/ IID304\n-    6,    \/\/ IID305\n-    6,    \/\/ IID306\n-    6,    \/\/ IID307\n-    6,    \/\/ IID308\n-    6,    \/\/ IID309\n-    6,    \/\/ IID310\n-    6,    \/\/ IID311\n-    6,    \/\/ IID312\n-    6,    \/\/ IID313\n-    6,    \/\/ IID314\n-    7,    \/\/ IID315\n-    7,    \/\/ IID316\n-    7,    \/\/ IID317\n-    7,    \/\/ IID318\n-    6,    \/\/ IID319\n-    6,    \/\/ IID320\n-    6,    \/\/ IID321\n-    6,    \/\/ IID322\n-    6,    \/\/ IID323\n+    7,    \/\/ IID279\n+    6,    \/\/ IID280\n+    6,    \/\/ IID281\n+    7,    \/\/ IID282\n+    7,    \/\/ IID283\n+    7,    \/\/ IID284\n+#endif \/\/ _LP64\n+    7,    \/\/ IID285\n+#ifdef _LP64\n+    7,    \/\/ IID286\n+    7,    \/\/ IID287\n+    7,    \/\/ IID288\n+    7,    \/\/ IID289\n+    7,    \/\/ IID290\n+    7,    \/\/ IID291\n+    7,    \/\/ IID292\n+    7,    \/\/ IID293\n+    7,    \/\/ IID294\n+    7,    \/\/ IID295\n+    10,   \/\/ IID296\n+    10,   \/\/ IID297\n+    10,   \/\/ IID298\n+    10,   \/\/ IID299\n+    10,   \/\/ IID300\n+    10,   \/\/ IID301\n+    7,    \/\/ IID302\n+    7,    \/\/ IID303\n+    10,   \/\/ IID304\n+    10,   \/\/ IID305\n+    10,   \/\/ IID306\n+    10,   \/\/ IID307\n+    11,   \/\/ IID308\n+    11,   \/\/ IID309\n+    11,   \/\/ IID310\n+    11,   \/\/ IID311\n+    11,   \/\/ IID312\n+    11,   \/\/ IID313\n+    10,   \/\/ IID314\n+    11,   \/\/ IID315\n+    11,   \/\/ IID316\n+    11,   \/\/ IID317\n+    11,   \/\/ IID318\n+    11,   \/\/ IID319\n+    11,   \/\/ IID320\n+    10,   \/\/ IID321\n+    11,   \/\/ IID322\n+    11,   \/\/ IID323\n@@ -1704,61 +1834,61 @@\n-    11,   \/\/ IID335\n-    11,   \/\/ IID336\n-    11,   \/\/ IID337\n-    10,   \/\/ IID338\n-    11,   \/\/ IID339\n-    11,   \/\/ IID340\n-    11,   \/\/ IID341\n-    11,   \/\/ IID342\n-    11,   \/\/ IID343\n-    11,   \/\/ IID344\n-    11,   \/\/ IID345\n-    11,   \/\/ IID346\n-    11,   \/\/ IID347\n-    11,   \/\/ IID348\n-    11,   \/\/ IID349\n-    11,   \/\/ IID350\n-    3,    \/\/ IID351\n-    3,    \/\/ IID352\n-    4,    \/\/ IID353\n-    5,    \/\/ IID354\n-    4,    \/\/ IID355\n-    4,    \/\/ IID356\n-    5,    \/\/ IID357\n-    5,    \/\/ IID358\n-    4,    \/\/ IID359\n-    4,    \/\/ IID360\n-    4,    \/\/ IID361\n-    4,    \/\/ IID362\n-    3,    \/\/ IID363\n-    4,    \/\/ IID364\n-    4,    \/\/ IID365\n-    4,    \/\/ IID366\n-    4,    \/\/ IID367\n-    4,    \/\/ IID368\n-    9,    \/\/ IID369\n-    9,    \/\/ IID370\n-    9,    \/\/ IID371\n-    8,    \/\/ IID372\n-    8,    \/\/ IID373\n-    9,    \/\/ IID374\n-    9,    \/\/ IID375\n-    9,    \/\/ IID376\n-    13,   \/\/ IID377\n-    12,   \/\/ IID378\n-    13,   \/\/ IID379\n-    10,   \/\/ IID380\n-    10,   \/\/ IID381\n-    13,   \/\/ IID382\n-    10,   \/\/ IID383\n-    13,   \/\/ IID384\n-    10,   \/\/ IID385\n-    13,   \/\/ IID386\n-    13,   \/\/ IID387\n-    13,   \/\/ IID388\n-    9,    \/\/ IID389\n-    8,    \/\/ IID390\n-    8,    \/\/ IID391\n-    10,   \/\/ IID392\n-    9,    \/\/ IID393\n-    9,    \/\/ IID394\n-    9,    \/\/ IID395\n+    6,    \/\/ IID335\n+    6,    \/\/ IID336\n+    6,    \/\/ IID337\n+    6,    \/\/ IID338\n+    6,    \/\/ IID339\n+    6,    \/\/ IID340\n+    6,    \/\/ IID341\n+    7,    \/\/ IID342\n+    7,    \/\/ IID343\n+    7,    \/\/ IID344\n+    7,    \/\/ IID345\n+    6,    \/\/ IID346\n+    6,    \/\/ IID347\n+    6,    \/\/ IID348\n+    6,    \/\/ IID349\n+    6,    \/\/ IID350\n+    6,    \/\/ IID351\n+    6,    \/\/ IID352\n+    6,    \/\/ IID353\n+    6,    \/\/ IID354\n+    6,    \/\/ IID355\n+    6,    \/\/ IID356\n+    6,    \/\/ IID357\n+    6,    \/\/ IID358\n+    6,    \/\/ IID359\n+    6,    \/\/ IID360\n+    6,    \/\/ IID361\n+    11,   \/\/ IID362\n+    11,   \/\/ IID363\n+    11,   \/\/ IID364\n+    10,   \/\/ IID365\n+    11,   \/\/ IID366\n+    11,   \/\/ IID367\n+    11,   \/\/ IID368\n+    11,   \/\/ IID369\n+    11,   \/\/ IID370\n+    11,   \/\/ IID371\n+    11,   \/\/ IID372\n+    11,   \/\/ IID373\n+    11,   \/\/ IID374\n+    11,   \/\/ IID375\n+    11,   \/\/ IID376\n+    11,   \/\/ IID377\n+    3,    \/\/ IID378\n+    3,    \/\/ IID379\n+    4,    \/\/ IID380\n+    5,    \/\/ IID381\n+    4,    \/\/ IID382\n+    4,    \/\/ IID383\n+    5,    \/\/ IID384\n+    5,    \/\/ IID385\n+    4,    \/\/ IID386\n+    4,    \/\/ IID387\n+    4,    \/\/ IID388\n+    4,    \/\/ IID389\n+    3,    \/\/ IID390\n+    4,    \/\/ IID391\n+    4,    \/\/ IID392\n+    4,    \/\/ IID393\n+    4,    \/\/ IID394\n+    4,    \/\/ IID395\n@@ -1768,2 +1898,2 @@\n-    10,   \/\/ IID399\n-    9,    \/\/ IID400\n+    8,    \/\/ IID399\n+    8,    \/\/ IID400\n@@ -1772,25 +1902,25 @@\n-    10,   \/\/ IID403\n-    9,    \/\/ IID404\n-    9,    \/\/ IID405\n-    5,    \/\/ IID406\n-    7,    \/\/ IID407\n-    7,    \/\/ IID408\n-    7,    \/\/ IID409\n-    5,    \/\/ IID410\n-    4,    \/\/ IID411\n-    3,    \/\/ IID412\n-    5,    \/\/ IID413\n-    5,    \/\/ IID414\n-    4,    \/\/ IID415\n-    5,    \/\/ IID416\n-    5,    \/\/ IID417\n-    5,    \/\/ IID418\n-    7,    \/\/ IID419\n-    8,    \/\/ IID420\n-    8,    \/\/ IID421\n-    11,   \/\/ IID422\n-    5,    \/\/ IID423\n-    7,    \/\/ IID424\n-    8,    \/\/ IID425\n-    7,    \/\/ IID426\n-    8,    \/\/ IID427\n+    9,    \/\/ IID403\n+    13,   \/\/ IID404\n+    12,   \/\/ IID405\n+    13,   \/\/ IID406\n+    10,   \/\/ IID407\n+    10,   \/\/ IID408\n+    13,   \/\/ IID409\n+    10,   \/\/ IID410\n+    13,   \/\/ IID411\n+    10,   \/\/ IID412\n+    13,   \/\/ IID413\n+    13,   \/\/ IID414\n+    13,   \/\/ IID415\n+    9,    \/\/ IID416\n+    8,    \/\/ IID417\n+    8,    \/\/ IID418\n+    10,   \/\/ IID419\n+    9,    \/\/ IID420\n+    9,    \/\/ IID421\n+    9,    \/\/ IID422\n+    9,    \/\/ IID423\n+    9,    \/\/ IID424\n+    9,    \/\/ IID425\n+    10,   \/\/ IID426\n+    9,    \/\/ IID427\n@@ -1799,1 +1929,1 @@\n-    9,    \/\/ IID430\n+    10,   \/\/ IID430\n@@ -1802,30 +1932,30 @@\n-    9,    \/\/ IID433\n-    8,    \/\/ IID434\n-    8,    \/\/ IID435\n-    9,    \/\/ IID436\n-    9,    \/\/ IID437\n-    8,    \/\/ IID438\n-    9,    \/\/ IID439\n-    8,    \/\/ IID440\n-    9,    \/\/ IID441\n-    9,    \/\/ IID442\n-    4,    \/\/ IID443\n-    3,    \/\/ IID444\n-    4,    \/\/ IID445\n-    3,    \/\/ IID446\n-    4,    \/\/ IID447\n-    4,    \/\/ IID448\n-    3,    \/\/ IID449\n-    4,    \/\/ IID450\n-    4,    \/\/ IID451\n-    3,    \/\/ IID452\n-    3,    \/\/ IID453\n-    3,    \/\/ IID454\n-    4,    \/\/ IID455\n-    4,    \/\/ IID456\n-    4,    \/\/ IID457\n-    3,    \/\/ IID458\n-    3,    \/\/ IID459\n-    8,    \/\/ IID460\n-    9,    \/\/ IID461\n-    9,    \/\/ IID462\n+    5,    \/\/ IID433\n+    7,    \/\/ IID434\n+    7,    \/\/ IID435\n+    7,    \/\/ IID436\n+    5,    \/\/ IID437\n+    4,    \/\/ IID438\n+    3,    \/\/ IID439\n+    5,    \/\/ IID440\n+    5,    \/\/ IID441\n+    4,    \/\/ IID442\n+    5,    \/\/ IID443\n+    5,    \/\/ IID444\n+    5,    \/\/ IID445\n+    7,    \/\/ IID446\n+    8,    \/\/ IID447\n+    8,    \/\/ IID448\n+    11,   \/\/ IID449\n+    5,    \/\/ IID450\n+    7,    \/\/ IID451\n+    8,    \/\/ IID452\n+    7,    \/\/ IID453\n+    8,    \/\/ IID454\n+    9,    \/\/ IID455\n+    9,    \/\/ IID456\n+    9,    \/\/ IID457\n+    9,    \/\/ IID458\n+    9,    \/\/ IID459\n+    9,    \/\/ IID460\n+    8,    \/\/ IID461\n+    8,    \/\/ IID462\n@@ -1834,2 +1964,2 @@\n-    9,    \/\/ IID465\n-    8,    \/\/ IID466\n+    8,    \/\/ IID465\n+    9,    \/\/ IID466\n@@ -1837,14 +1967,14 @@\n-    12,   \/\/ IID468\n-    5,    \/\/ IID469\n-    5,    \/\/ IID470\n-    5,    \/\/ IID471\n-    6,    \/\/ IID472\n-    6,    \/\/ IID473\n-    6,    \/\/ IID474\n-    6,    \/\/ IID475\n-    9,    \/\/ IID476\n-    9,    \/\/ IID477\n-    9,    \/\/ IID478\n-    9,    \/\/ IID479\n-    4,    \/\/ IID480\n-    4,    \/\/ IID481\n+    9,    \/\/ IID468\n+    9,    \/\/ IID469\n+    4,    \/\/ IID470\n+    3,    \/\/ IID471\n+    4,    \/\/ IID472\n+    3,    \/\/ IID473\n+    4,    \/\/ IID474\n+    4,    \/\/ IID475\n+    3,    \/\/ IID476\n+    4,    \/\/ IID477\n+    4,    \/\/ IID478\n+    3,    \/\/ IID479\n+    3,    \/\/ IID480\n+    3,    \/\/ IID481\n@@ -1853,15 +1983,15 @@\n-    8,    \/\/ IID484\n-    6,    \/\/ IID485\n-    6,    \/\/ IID486\n-    6,    \/\/ IID487\n-    6,    \/\/ IID488\n-    6,    \/\/ IID489\n-    6,    \/\/ IID490\n-    6,    \/\/ IID491\n-    6,    \/\/ IID492\n-    11,   \/\/ IID493\n-    11,   \/\/ IID494\n-    6,    \/\/ IID495\n-    6,    \/\/ IID496\n-    6,    \/\/ IID497\n-    6,    \/\/ IID498\n+    4,    \/\/ IID484\n+    3,    \/\/ IID485\n+    3,    \/\/ IID486\n+    8,    \/\/ IID487\n+    9,    \/\/ IID488\n+    9,    \/\/ IID489\n+    9,    \/\/ IID490\n+    9,    \/\/ IID491\n+    9,    \/\/ IID492\n+    8,    \/\/ IID493\n+    8,    \/\/ IID494\n+    12,   \/\/ IID495\n+    5,    \/\/ IID496\n+    5,    \/\/ IID497\n+    5,    \/\/ IID498\n@@ -1872,9 +2002,9 @@\n-    6,    \/\/ IID503\n-    6,    \/\/ IID504\n-    6,    \/\/ IID505\n-    6,    \/\/ IID506\n-    6,    \/\/ IID507\n-    6,    \/\/ IID508\n-    6,    \/\/ IID509\n-    6,    \/\/ IID510\n-    6,    \/\/ IID511\n+    9,    \/\/ IID503\n+    9,    \/\/ IID504\n+    9,    \/\/ IID505\n+    9,    \/\/ IID506\n+    4,    \/\/ IID507\n+    4,    \/\/ IID508\n+    4,    \/\/ IID509\n+    4,    \/\/ IID510\n+    8,    \/\/ IID511\n@@ -1889,29 +2019,29 @@\n-    6,    \/\/ IID520\n-    6,    \/\/ IID521\n-    11,   \/\/ IID522\n-    11,   \/\/ IID523\n-    10,   \/\/ IID524\n-    10,   \/\/ IID525\n-    11,   \/\/ IID526\n-    11,   \/\/ IID527\n-    11,   \/\/ IID528\n-    11,   \/\/ IID529\n-    10,   \/\/ IID530\n-    11,   \/\/ IID531\n-    11,   \/\/ IID532\n-    11,   \/\/ IID533\n-    11,   \/\/ IID534\n-    11,   \/\/ IID535\n-    11,   \/\/ IID536\n-    11,   \/\/ IID537\n-    11,   \/\/ IID538\n-    10,   \/\/ IID539\n-    11,   \/\/ IID540\n-    11,   \/\/ IID541\n-    11,   \/\/ IID542\n-    11,   \/\/ IID543\n-    11,   \/\/ IID544\n-    11,   \/\/ IID545\n-    11,   \/\/ IID546\n-    11,   \/\/ IID547\n-    10,   \/\/ IID548\n+    11,   \/\/ IID520\n+    11,   \/\/ IID521\n+    6,    \/\/ IID522\n+    6,    \/\/ IID523\n+    6,    \/\/ IID524\n+    6,    \/\/ IID525\n+    6,    \/\/ IID526\n+    6,    \/\/ IID527\n+    6,    \/\/ IID528\n+    6,    \/\/ IID529\n+    6,    \/\/ IID530\n+    6,    \/\/ IID531\n+    6,    \/\/ IID532\n+    6,    \/\/ IID533\n+    6,    \/\/ IID534\n+    6,    \/\/ IID535\n+    6,    \/\/ IID536\n+    6,    \/\/ IID537\n+    6,    \/\/ IID538\n+    6,    \/\/ IID539\n+    6,    \/\/ IID540\n+    6,    \/\/ IID541\n+    6,    \/\/ IID542\n+    6,    \/\/ IID543\n+    6,    \/\/ IID544\n+    6,    \/\/ IID545\n+    6,    \/\/ IID546\n+    6,    \/\/ IID547\n+    6,    \/\/ IID548\n@@ -1920,24 +2050,24 @@\n-    11,   \/\/ IID551\n-    14,   \/\/ IID552\n-    15,   \/\/ IID553\n-    15,   \/\/ IID554\n-    15,   \/\/ IID555\n-    12,   \/\/ IID556\n-    12,   \/\/ IID557\n-    15,   \/\/ IID558\n-    15,   \/\/ IID559\n-    12,   \/\/ IID560\n-    12,   \/\/ IID561\n-    12,   \/\/ IID562\n-    12,   \/\/ IID563\n-    12,   \/\/ IID564\n-    12,   \/\/ IID565\n-    12,   \/\/ IID566\n-    14,   \/\/ IID567\n-    15,   \/\/ IID568\n-    12,   \/\/ IID569\n-    10,   \/\/ IID570\n-    10,   \/\/ IID571\n-    7,    \/\/ IID572\n-    7,    \/\/ IID573\n-    7,    \/\/ IID574\n+    10,   \/\/ IID551\n+    10,   \/\/ IID552\n+    11,   \/\/ IID553\n+    11,   \/\/ IID554\n+    11,   \/\/ IID555\n+    11,   \/\/ IID556\n+    10,   \/\/ IID557\n+    11,   \/\/ IID558\n+    11,   \/\/ IID559\n+    11,   \/\/ IID560\n+    11,   \/\/ IID561\n+    11,   \/\/ IID562\n+    11,   \/\/ IID563\n+    11,   \/\/ IID564\n+    11,   \/\/ IID565\n+    10,   \/\/ IID566\n+    11,   \/\/ IID567\n+    11,   \/\/ IID568\n+    11,   \/\/ IID569\n+    11,   \/\/ IID570\n+    11,   \/\/ IID571\n+    11,   \/\/ IID572\n+    11,   \/\/ IID573\n+    11,   \/\/ IID574\n@@ -1945,21 +2075,21 @@\n-    10,   \/\/ IID576\n-    10,   \/\/ IID577\n-    7,    \/\/ IID578\n-    7,    \/\/ IID579\n-    7,    \/\/ IID580\n-    7,    \/\/ IID581\n-    7,    \/\/ IID582\n-    7,    \/\/ IID583\n-    7,    \/\/ IID584\n-    7,    \/\/ IID585\n-    7,    \/\/ IID586\n-    6,    \/\/ IID587\n-    7,    \/\/ IID588\n-    6,    \/\/ IID589\n-    7,    \/\/ IID590\n-    10,   \/\/ IID591\n-    10,   \/\/ IID592\n-    7,    \/\/ IID593\n-    10,   \/\/ IID594\n-    10,   \/\/ IID595\n-    10,   \/\/ IID596\n+    11,   \/\/ IID576\n+    11,   \/\/ IID577\n+    11,   \/\/ IID578\n+    14,   \/\/ IID579\n+    15,   \/\/ IID580\n+    15,   \/\/ IID581\n+    15,   \/\/ IID582\n+    12,   \/\/ IID583\n+    12,   \/\/ IID584\n+    15,   \/\/ IID585\n+    15,   \/\/ IID586\n+    12,   \/\/ IID587\n+    12,   \/\/ IID588\n+    12,   \/\/ IID589\n+    12,   \/\/ IID590\n+    12,   \/\/ IID591\n+    12,   \/\/ IID592\n+    12,   \/\/ IID593\n+    14,   \/\/ IID594\n+    15,   \/\/ IID595\n+    12,   \/\/ IID596\n@@ -1968,9 +2098,9 @@\n-    11,   \/\/ IID599\n-    11,   \/\/ IID600\n-    11,   \/\/ IID601\n-    11,   \/\/ IID602\n-    11,   \/\/ IID603\n-    11,   \/\/ IID604\n-    11,   \/\/ IID605\n-    11,   \/\/ IID606\n-    11,   \/\/ IID607\n+    10,   \/\/ IID599\n+    10,   \/\/ IID600\n+    7,    \/\/ IID601\n+    7,    \/\/ IID602\n+    7,    \/\/ IID603\n+    7,    \/\/ IID604\n+    7,    \/\/ IID605\n+    7,    \/\/ IID606\n+    10,   \/\/ IID607\n@@ -1980,14 +2110,14 @@\n-    6,    \/\/ IID611\n-    6,    \/\/ IID612\n-    6,    \/\/ IID613\n-    6,    \/\/ IID614\n-    6,    \/\/ IID615\n-    6,    \/\/ IID616\n-    6,    \/\/ IID617\n-    6,    \/\/ IID618\n-    6,    \/\/ IID619\n-    6,    \/\/ IID620\n-    6,    \/\/ IID621\n-    6,    \/\/ IID622\n-    6,    \/\/ IID623\n-    6,    \/\/ IID624\n+    10,   \/\/ IID611\n+    10,   \/\/ IID612\n+    7,    \/\/ IID613\n+    7,    \/\/ IID614\n+    7,    \/\/ IID615\n+    7,    \/\/ IID616\n+    7,    \/\/ IID617\n+    7,    \/\/ IID618\n+    7,    \/\/ IID619\n+    7,    \/\/ IID620\n+    7,    \/\/ IID621\n+    7,    \/\/ IID622\n+    7,    \/\/ IID623\n+    7,    \/\/ IID624\n@@ -1998,2 +2128,2 @@\n-    6,    \/\/ IID629\n-    6,    \/\/ IID630\n+    7,    \/\/ IID629\n+    7,    \/\/ IID630\n@@ -2002,2 +2132,2 @@\n-    6,    \/\/ IID633\n-    6,    \/\/ IID634\n+    7,    \/\/ IID633\n+    7,    \/\/ IID634\n@@ -2006,16 +2136,16 @@\n-    6,    \/\/ IID637\n-    6,    \/\/ IID638\n-    6,    \/\/ IID639\n-    6,    \/\/ IID640\n-    6,    \/\/ IID641\n-    6,    \/\/ IID642\n-    6,    \/\/ IID643\n-    6,    \/\/ IID644\n-    11,   \/\/ IID645\n-    11,   \/\/ IID646\n-    11,   \/\/ IID647\n-    11,   \/\/ IID648\n-    11,   \/\/ IID649\n-    11,   \/\/ IID650\n-    11,   \/\/ IID651\n-    11,   \/\/ IID652\n+    7,    \/\/ IID637\n+    7,    \/\/ IID638\n+    10,   \/\/ IID639\n+    10,   \/\/ IID640\n+    10,   \/\/ IID641\n+    10,   \/\/ IID642\n+    7,    \/\/ IID643\n+    7,    \/\/ IID644\n+    10,   \/\/ IID645\n+    10,   \/\/ IID646\n+    10,   \/\/ IID647\n+    10,   \/\/ IID648\n+    10,   \/\/ IID649\n+    10,   \/\/ IID650\n+    10,   \/\/ IID651\n+    10,   \/\/ IID652\n@@ -2023,3 +2153,3 @@\n-    11,   \/\/ IID654\n-    10,   \/\/ IID655\n-    10,   \/\/ IID656\n+    10,   \/\/ IID654\n+    11,   \/\/ IID655\n+    11,   \/\/ IID656\n@@ -2029,1 +2159,57 @@\n-    10,   \/\/ IID660\n+    11,   \/\/ IID660\n+    11,   \/\/ IID661\n+    11,   \/\/ IID662\n+    11,   \/\/ IID663\n+    10,   \/\/ IID664\n+    10,   \/\/ IID665\n+    10,   \/\/ IID666\n+    6,    \/\/ IID667\n+    6,    \/\/ IID668\n+    6,    \/\/ IID669\n+    6,    \/\/ IID670\n+    6,    \/\/ IID671\n+    6,    \/\/ IID672\n+    6,    \/\/ IID673\n+    6,    \/\/ IID674\n+    6,    \/\/ IID675\n+    6,    \/\/ IID676\n+    6,    \/\/ IID677\n+    6,    \/\/ IID678\n+    6,    \/\/ IID679\n+    6,    \/\/ IID680\n+    7,    \/\/ IID681\n+    7,    \/\/ IID682\n+    7,    \/\/ IID683\n+    7,    \/\/ IID684\n+    6,    \/\/ IID685\n+    6,    \/\/ IID686\n+    6,    \/\/ IID687\n+    6,    \/\/ IID688\n+    6,    \/\/ IID689\n+    6,    \/\/ IID690\n+    6,    \/\/ IID691\n+    6,    \/\/ IID692\n+    6,    \/\/ IID693\n+    6,    \/\/ IID694\n+    6,    \/\/ IID695\n+    6,    \/\/ IID696\n+    6,    \/\/ IID697\n+    6,    \/\/ IID698\n+    6,    \/\/ IID699\n+    6,    \/\/ IID700\n+    11,   \/\/ IID701\n+    11,   \/\/ IID702\n+    11,   \/\/ IID703\n+    11,   \/\/ IID704\n+    11,   \/\/ IID705\n+    11,   \/\/ IID706\n+    11,   \/\/ IID707\n+    11,   \/\/ IID708\n+    10,   \/\/ IID709\n+    11,   \/\/ IID710\n+    10,   \/\/ IID711\n+    10,   \/\/ IID712\n+    11,   \/\/ IID713\n+    11,   \/\/ IID714\n+    11,   \/\/ IID715\n+    10,   \/\/ IID716\n@@ -2301,406 +2487,468 @@\n-    \"__ eaddl(r20, r24, 4096, true);\",                                                    \/\/ IID255\n-    \"__ eandl(r18, r26, 1048576, false);\",                                                \/\/ IID256\n-    \"__ eandl(r29, r13, 1, true);\",                                                       \/\/ IID257\n-    \"__ eimull(rcx, r31, 65536, false);\",                                                 \/\/ IID258\n-    \"__ eimull(r23, r29, 65536, true);\",                                                  \/\/ IID259\n-    \"__ eorl(r23, r23, 1048576, false);\",                                                 \/\/ IID260\n-    \"__ eorl(r21, r9, 268435456, true);\",                                                 \/\/ IID261\n-    \"__ ercll(r13, rdx, 4);\",                                                             \/\/ IID262\n-    \"__ eroll(r15, r31, 8, false);\",                                                      \/\/ IID263\n-    \"__ eroll(r8, r9, 2, true);\",                                                         \/\/ IID264\n-    \"__ erorl(r9, r15, 8, false);\",                                                       \/\/ IID265\n-    \"__ erorl(r21, r12, 8, true);\",                                                       \/\/ IID266\n-    \"__ esall(r19, r27, 1, false);\",                                                      \/\/ IID267\n-    \"__ esall(r10, r11, 16, true);\",                                                      \/\/ IID268\n-    \"__ esarl(r8, rdx, 8, false);\",                                                       \/\/ IID269\n-    \"__ esarl(r22, r30, 4, true);\",                                                       \/\/ IID270\n-    \"__ eshll(r25, r31, 16, false);\",                                                     \/\/ IID271\n-    \"__ eshll(r10, r9, 8, true);\",                                                        \/\/ IID272\n-    \"__ eshrl(r13, r8, 4, false);\",                                                       \/\/ IID273\n-    \"__ eshrl(r16, r21, 16, true);\",                                                      \/\/ IID274\n-    \"__ esubl(r26, r23, 16777216, false);\",                                               \/\/ IID275\n-    \"__ esubl(r26, r14, 1048576, true);\",                                                 \/\/ IID276\n-    \"__ exorl(r27, r26, 256, false);\",                                                    \/\/ IID277\n-    \"__ exorl(r22, r9, 1, true);\",                                                        \/\/ IID278\n-    \"__ esubl_imm32(r22, r30, 268435456, false);\",                                        \/\/ IID279\n-    \"__ esubl_imm32(r8, r16, 4194304, true);\",                                            \/\/ IID280\n-    \"__ eaddl(r20, r29, Address(r11, r12, (Address::ScaleFactor)1, +0xac0980), false);\",  \/\/ IID281\n-    \"__ eaddl(r18, rbx, Address(r9, r18, (Address::ScaleFactor)1, +0x434a125d), true);\",  \/\/ IID282\n-    \"__ eandl(r14, r15, Address(r14, r19, (Address::ScaleFactor)2, +0x15a5a5ee), false);\", \/\/ IID283\n-    \"__ eandl(r28, r31, Address(r24, r12, (Address::ScaleFactor)3, -0x6d6d7e68), true);\", \/\/ IID284\n-    \"__ eimull(r24, r13, Address(r24, r25, (Address::ScaleFactor)3, +0x784673fd), false);\", \/\/ IID285\n-    \"__ eimull(r24, r21, Address(r8, r13, (Address::ScaleFactor)2, -0x63663889), true);\", \/\/ IID286\n-    \"__ eorl(r12, r24, Address(r30, -0x67526556), false);\",                               \/\/ IID287\n-    \"__ eorl(r13, r13, Address(rbx, r25, (Address::ScaleFactor)2, -0x5f394dd9), true);\",  \/\/ IID288\n-    \"__ esubl(r26, r25, Address(r25, rdx, (Address::ScaleFactor)3, -0x2e39f79a), false);\", \/\/ IID289\n-    \"__ esubl(r28, r8, Address(rdx, r24, (Address::ScaleFactor)3, -0xed99a54), true);\",   \/\/ IID290\n-    \"__ exorl(r31, r22, Address(r30, r20, (Address::ScaleFactor)3, +0x3ac41cbd), false);\", \/\/ IID291\n-    \"__ exorl(r24, r30, Address(r13, r17, (Address::ScaleFactor)1, +0x1efdc2e3), true);\", \/\/ IID292\n-    \"__ exorb(r16, r16, Address(r9, r15, (Address::ScaleFactor)1, +0x769feb34), false);\", \/\/ IID293\n-    \"__ exorb(r19, r25, Address(r10, +0x2239b429), true);\",                               \/\/ IID294\n-    \"__ exorw(r25, r19, Address(r16, r24, (Address::ScaleFactor)1, +0x1c71faea), false);\", \/\/ IID295\n-    \"__ exorw(r19, r10, Address(r28, -0x299a0cfd), true);\",                               \/\/ IID296\n-    \"__ eaddl(rbx, r23, r24, false);\",                                                    \/\/ IID297\n-    \"__ eaddl(r28, r14, r24, true);\",                                                     \/\/ IID298\n-    \"__ eandl(r30, r31, r26, false);\",                                                    \/\/ IID299\n-    \"__ eandl(r12, r31, r23, true);\",                                                     \/\/ IID300\n-    \"__ eimull(r9, r20, r10, false);\",                                                    \/\/ IID301\n-    \"__ eimull(r13, r30, r9, true);\",                                                     \/\/ IID302\n-    \"__ eorw(r25, r19, r23, false);\",                                                     \/\/ IID303\n-    \"__ eorw(r12, r16, rdx, true);\",                                                      \/\/ IID304\n-    \"__ eorl(r31, r17, r9, false);\",                                                      \/\/ IID305\n-    \"__ eorl(r15, r13, rbx, true);\",                                                      \/\/ IID306\n-    \"__ eshldl(r28, rbx, r29, false);\",                                                   \/\/ IID307\n-    \"__ eshldl(r22, rbx, r8, true);\",                                                     \/\/ IID308\n-    \"__ eshrdl(r8, r11, r16, false);\",                                                    \/\/ IID309\n-    \"__ eshrdl(r13, r12, r15, true);\",                                                    \/\/ IID310\n-    \"__ esubl(r17, r23, r31, false);\",                                                    \/\/ IID311\n-    \"__ esubl(r20, r22, r26, true);\",                                                     \/\/ IID312\n-    \"__ exorl(r10, r25, r19, false);\",                                                    \/\/ IID313\n-    \"__ exorl(r11, r19, r30, true);\",                                                     \/\/ IID314\n-    \"__ eshldl(r12, r10, rdx, 1, false);\",                                                \/\/ IID315\n-    \"__ eshldl(r20, r30, r18, 16, true);\",                                                \/\/ IID316\n-    \"__ eshrdl(r18, r25, r18, 8, false);\",                                                \/\/ IID317\n-    \"__ eshrdl(r19, r16, r25, 1, true);\",                                                 \/\/ IID318\n-    \"__ ecmovl (Assembler::Condition::overflow, r11, r31, r24);\",                         \/\/ IID319\n-    \"__ ecmovl (Assembler::Condition::noOverflow, r14, r30, r16);\",                       \/\/ IID320\n-    \"__ ecmovl (Assembler::Condition::below, r9, r11, r26);\",                             \/\/ IID321\n-    \"__ ecmovl (Assembler::Condition::aboveEqual, r27, rdx, r31);\",                       \/\/ IID322\n-    \"__ ecmovl (Assembler::Condition::zero, r24, r29, r10);\",                             \/\/ IID323\n-    \"__ ecmovl (Assembler::Condition::notZero, rcx, r21, r15);\",                          \/\/ IID324\n-    \"__ ecmovl (Assembler::Condition::belowEqual, r23, r17, r26);\",                       \/\/ IID325\n-    \"__ ecmovl (Assembler::Condition::above, r20, r27, r13);\",                            \/\/ IID326\n-    \"__ ecmovl (Assembler::Condition::negative, r15, r22, r15);\",                         \/\/ IID327\n-    \"__ ecmovl (Assembler::Condition::positive, r29, r26, r18);\",                         \/\/ IID328\n-    \"__ ecmovl (Assembler::Condition::parity, r9, r9, r22);\",                             \/\/ IID329\n-    \"__ ecmovl (Assembler::Condition::noParity, r30, r23, r11);\",                         \/\/ IID330\n-    \"__ ecmovl (Assembler::Condition::less, r20, r11, rbx);\",                             \/\/ IID331\n-    \"__ ecmovl (Assembler::Condition::greaterEqual, r28, r16, r20);\",                     \/\/ IID332\n-    \"__ ecmovl (Assembler::Condition::lessEqual, r17, r24, r22);\",                        \/\/ IID333\n-    \"__ ecmovl (Assembler::Condition::greater, r16, r15, r15);\",                          \/\/ IID334\n-    \"__ ecmovl (Assembler::Condition::overflow, r28, r25, Address(r29, r16, (Address::ScaleFactor)2, -0x3c9110ad));\", \/\/ IID335\n-    \"__ ecmovl (Assembler::Condition::noOverflow, r23, r15, Address(rbx, r30, (Address::ScaleFactor)3, +0x1cbc58bd));\", \/\/ IID336\n-    \"__ ecmovl (Assembler::Condition::below, r26, rbx, Address(r12, rcx, (Address::ScaleFactor)3, +0x84e581a));\", \/\/ IID337\n-    \"__ ecmovl (Assembler::Condition::aboveEqual, rcx, r24, Address(r17, +0x5cece92d));\", \/\/ IID338\n-    \"__ ecmovl (Assembler::Condition::zero, r26, r24, Address(r24, r12, (Address::ScaleFactor)3, +0x507746a2));\", \/\/ IID339\n-    \"__ ecmovl (Assembler::Condition::notZero, r8, r15, Address(rcx, r19, (Address::ScaleFactor)0, -0xf035c76));\", \/\/ IID340\n-    \"__ ecmovl (Assembler::Condition::belowEqual, rdx, r23, Address(r22, r27, (Address::ScaleFactor)0, -0x12fe3534));\", \/\/ IID341\n-    \"__ ecmovl (Assembler::Condition::above, r30, r19, Address(r13, r28, (Address::ScaleFactor)0, +0x73b8ee9d));\", \/\/ IID342\n-    \"__ ecmovl (Assembler::Condition::negative, r22, r30, Address(r16, rcx, (Address::ScaleFactor)0, +0x22aac146));\", \/\/ IID343\n-    \"__ ecmovl (Assembler::Condition::positive, r17, r30, Address(r17, r9, (Address::ScaleFactor)2, +0x79db2b1));\", \/\/ IID344\n-    \"__ ecmovl (Assembler::Condition::parity, r26, rdx, Address(r14, r16, (Address::ScaleFactor)1, -0x8242011));\", \/\/ IID345\n-    \"__ ecmovl (Assembler::Condition::noParity, r11, r19, Address(r14, r31, (Address::ScaleFactor)1, -0x4ff251cc));\", \/\/ IID346\n-    \"__ ecmovl (Assembler::Condition::less, r20, r18, Address(r13, r16, (Address::ScaleFactor)2, -0x19efc6e2));\", \/\/ IID347\n-    \"__ ecmovl (Assembler::Condition::greaterEqual, r19, r13, Address(r13, r23, (Address::ScaleFactor)1, +0x611b7714));\", \/\/ IID348\n-    \"__ ecmovl (Assembler::Condition::lessEqual, r29, r13, Address(r17, r17, (Address::ScaleFactor)3, +0x3a94a93f));\", \/\/ IID349\n-    \"__ ecmovl (Assembler::Condition::greater, r13, r29, Address(r15, r23, (Address::ScaleFactor)1, +0x76d43532));\", \/\/ IID350\n-    \"__ adcq(r15, r13);\",                                                                 \/\/ IID351\n-    \"__ cmpq(r9, r12);\",                                                                  \/\/ IID352\n-    \"__ imulq(r15, r21);\",                                                                \/\/ IID353\n-    \"__ popcntq(r12, r9);\",                                                               \/\/ IID354\n-    \"__ sbbq(r17, r23);\",                                                                 \/\/ IID355\n-    \"__ subq(rdx, r16);\",                                                                 \/\/ IID356\n-    \"__ tzcntq(r29, r10);\",                                                               \/\/ IID357\n-    \"__ lzcntq(r21, r17);\",                                                               \/\/ IID358\n-    \"__ addq(r29, r18);\",                                                                 \/\/ IID359\n-    \"__ andq(r28, r24);\",                                                                 \/\/ IID360\n-    \"__ orq(r10, r20);\",                                                                  \/\/ IID361\n-    \"__ xorq(r27, r10);\",                                                                 \/\/ IID362\n-    \"__ movq(r14, r11);\",                                                                 \/\/ IID363\n-    \"__ bsfq(r27, rcx);\",                                                                 \/\/ IID364\n-    \"__ bsrq(r22, r15);\",                                                                 \/\/ IID365\n-    \"__ btq(r31, r30);\",                                                                  \/\/ IID366\n-    \"__ xchgq(r19, r19);\",                                                                \/\/ IID367\n-    \"__ testq(r26, r21);\",                                                                \/\/ IID368\n-    \"__ addq(Address(r26, r20, (Address::ScaleFactor)1, -0x4096149c), r14);\",             \/\/ IID369\n-    \"__ andq(Address(r28, r20, (Address::ScaleFactor)2, +0x1bd8898a), r23);\",             \/\/ IID370\n-    \"__ cmpq(Address(r15, r19, (Address::ScaleFactor)2, +0x39eee631), r10);\",             \/\/ IID371\n-    \"__ orq(Address(r13, rdx, (Address::ScaleFactor)3, +0x1a49859), r13);\",               \/\/ IID372\n-    \"__ xorq(Address(r21, +0x5fe8636), r24);\",                                            \/\/ IID373\n-    \"__ subq(Address(r30, r23, (Address::ScaleFactor)2, -0x56643cc1), r25);\",             \/\/ IID374\n-    \"__ movq(Address(r21, r26, (Address::ScaleFactor)3, +0x7e8544ab), r31);\",             \/\/ IID375\n-    \"__ xaddq(Address(rcx, r24, (Address::ScaleFactor)3, -0x79ca4889), rbx);\",            \/\/ IID376\n-    \"__ andq(Address(r13, r31, (Address::ScaleFactor)3, -0xd72b030), 256);\",              \/\/ IID377\n-    \"__ addq(Address(r16, +0x534d775e), 268435456);\",                                     \/\/ IID378\n-    \"__ cmpq(Address(r20, r15, (Address::ScaleFactor)2, -0x7cb22277), 268435456);\",       \/\/ IID379\n-    \"__ sarq(Address(r9, r23, (Address::ScaleFactor)2, -0x72f6d86e), 4);\",                \/\/ IID380\n-    \"__ salq(Address(r11, r24, (Address::ScaleFactor)1, -0x22826f95), 4);\",               \/\/ IID381\n-    \"__ sbbq(Address(r14, r30, (Address::ScaleFactor)1, +0x1b43fc34), 268435456);\",       \/\/ IID382\n-    \"__ shrq(Address(r26, r21, (Address::ScaleFactor)0, -0x3bae50c3), 8);\",               \/\/ IID383\n-    \"__ subq(Address(r22, r10, (Address::ScaleFactor)3, +0x47e1403), 65536);\",            \/\/ IID384\n-    \"__ xorq(Address(rdx, r19, (Address::ScaleFactor)3, -0x644a5318), 1);\",               \/\/ IID385\n-    \"__ orq(Address(r30, r31, (Address::ScaleFactor)1, +0x2c93c783), 256);\",              \/\/ IID386\n-    \"__ movq(Address(r26, r24, (Address::ScaleFactor)2, -0x534785f), 65536);\",            \/\/ IID387\n-    \"__ testq(Address(r14, r30, (Address::ScaleFactor)1, +0x3932e147), -256);\",           \/\/ IID388\n-    \"__ addq(r30, Address(r30, r24, (Address::ScaleFactor)3, -0x66e0235e));\",             \/\/ IID389\n-    \"__ andq(r15, Address(r26, +0x36456e42));\",                                           \/\/ IID390\n-    \"__ cmpq(r10, Address(r18, +0x5044bed));\",                                            \/\/ IID391\n-    \"__ lzcntq(r31, Address(r12, rdx, (Address::ScaleFactor)2, -0x1707b7d4));\",           \/\/ IID392\n-    \"__ orq(r16, Address(r20, r23, (Address::ScaleFactor)2, -0x26783729));\",              \/\/ IID393\n-    \"__ adcq(r31, Address(r30, r31, (Address::ScaleFactor)0, +0x1ec3265d));\",             \/\/ IID394\n-    \"__ imulq(r16, Address(rdx, r26, (Address::ScaleFactor)0, +0x3586831b));\",            \/\/ IID395\n-    \"__ popcntq(r12, Address(r18, -0x3c3e9f7a));\",                                        \/\/ IID396\n-    \"__ sbbq(rcx, Address(r8, r21, (Address::ScaleFactor)3, +0x6b1515ab));\",              \/\/ IID397\n-    \"__ subq(r29, Address(rcx, r23, (Address::ScaleFactor)2, +0x4ff06c4d));\",             \/\/ IID398\n-    \"__ tzcntq(r26, Address(r24, r10, (Address::ScaleFactor)1, -0x75d9a189));\",           \/\/ IID399\n-    \"__ xorq(r17, Address(rbx, rbx, (Address::ScaleFactor)0, +0x4033d59c));\",             \/\/ IID400\n-    \"__ movq(r18, Address(r22, r12, (Address::ScaleFactor)3, -0x3893347d));\",             \/\/ IID401\n-    \"__ leaq(r12, Address(r20, r23, (Address::ScaleFactor)3, +0x4b311560));\",             \/\/ IID402\n-    \"__ cvttsd2siq(r29, Address(r10, r28, (Address::ScaleFactor)2, +0x5c3a2657));\",       \/\/ IID403\n-    \"__ xchgq(r22, Address(r13, r25, (Address::ScaleFactor)3, +0x1a3d6f3f));\",            \/\/ IID404\n-    \"__ testq(r25, Address(r17, r24, (Address::ScaleFactor)3, -0x35addbd8));\",            \/\/ IID405\n-    \"__ addq(r18, 1);\",                                                                   \/\/ IID406\n-    \"__ andq(r13, 16777216);\",                                                            \/\/ IID407\n-    \"__ adcq(r13, 65536);\",                                                               \/\/ IID408\n-    \"__ cmpq(r10, 65536);\",                                                               \/\/ IID409\n-    \"__ rclq(r20, 2);\",                                                                   \/\/ IID410\n-    \"__ rcrq(r9, 16);\",                                                                   \/\/ IID411\n-    \"__ rolq(r8, 1);\",                                                                    \/\/ IID412\n-    \"__ rorq(r25, 2);\",                                                                   \/\/ IID413\n-    \"__ sarq(r22, 8);\",                                                                   \/\/ IID414\n-    \"__ salq(r17, 1);\",                                                                   \/\/ IID415\n-    \"__ sbbq(r31, 16);\",                                                                  \/\/ IID416\n-    \"__ shlq(r27, 4);\",                                                                   \/\/ IID417\n-    \"__ shrq(r28, 2);\",                                                                   \/\/ IID418\n-    \"__ subq(rcx, 16777216);\",                                                            \/\/ IID419\n-    \"__ xorq(r27, 1048576);\",                                                             \/\/ IID420\n-    \"__ movq(r20, 268435456);\",                                                           \/\/ IID421\n-    \"__ mov64(r27, 4503599627370496);\",                                                   \/\/ IID422\n-    \"__ btq(r22, 4);\",                                                                    \/\/ IID423\n-    \"__ testq(r8, -4096);\",                                                               \/\/ IID424\n-    \"__ orq_imm32(r28, 1048576);\",                                                        \/\/ IID425\n-    \"__ subq_imm32(r13, 65536);\",                                                         \/\/ IID426\n-    \"__ cmovq(Assembler::Condition::overflow, r16, Address(r16, -0x1389a3eb));\",          \/\/ IID427\n-    \"__ cmovq(Assembler::Condition::noOverflow, rbx, Address(r29, r8, (Address::ScaleFactor)0, +0x1d022615));\", \/\/ IID428\n-    \"__ cmovq(Assembler::Condition::below, rdx, Address(r12, r28, (Address::ScaleFactor)1, -0x34c898e2));\", \/\/ IID429\n-    \"__ cmovq(Assembler::Condition::aboveEqual, r27, Address(r10, rcx, (Address::ScaleFactor)3, -0x1ef7abf1));\", \/\/ IID430\n-    \"__ cmovq(Assembler::Condition::zero, r14, Address(r13, r29, (Address::ScaleFactor)2, -0x7c4c8369));\", \/\/ IID431\n-    \"__ cmovq(Assembler::Condition::notZero, r15, Address(r23, rcx, (Address::ScaleFactor)2, -0x6bd22ccf));\", \/\/ IID432\n-    \"__ cmovq(Assembler::Condition::belowEqual, r24, Address(r15, r10, (Address::ScaleFactor)1, -0x7ffb3d09));\", \/\/ IID433\n-    \"__ cmovq(Assembler::Condition::above, r23, Address(r11, +0x276a863b));\",             \/\/ IID434\n-    \"__ cmovq(Assembler::Condition::negative, r28, Address(r29, +0x3fb4396e));\",          \/\/ IID435\n-    \"__ cmovq(Assembler::Condition::positive, r26, Address(r27, rcx, (Address::ScaleFactor)3, +0x4ddea61c));\", \/\/ IID436\n-    \"__ cmovq(Assembler::Condition::parity, r10, Address(r22, r19, (Address::ScaleFactor)1, +0x2a126966));\", \/\/ IID437\n-    \"__ cmovq(Assembler::Condition::noParity, r12, Address(r10, +0x3d7c59f));\",           \/\/ IID438\n-    \"__ cmovq(Assembler::Condition::less, r10, Address(r8, r8, (Address::ScaleFactor)3, -0xe61862d));\", \/\/ IID439\n-    \"__ cmovq(Assembler::Condition::greaterEqual, r23, Address(r29, -0x777ed96d));\",      \/\/ IID440\n-    \"__ cmovq(Assembler::Condition::lessEqual, rcx, Address(rbx, r19, (Address::ScaleFactor)1, +0x53c601cb));\", \/\/ IID441\n-    \"__ cmovq(Assembler::Condition::greater, r14, Address(r17, rbx, (Address::ScaleFactor)0, -0x768bf073));\", \/\/ IID442\n-    \"__ call(r29);\",                                                                      \/\/ IID443\n-    \"__ divq(r10);\",                                                                      \/\/ IID444\n-    \"__ idivq(r19);\",                                                                     \/\/ IID445\n-    \"__ imulq(r15);\",                                                                     \/\/ IID446\n-    \"__ mulq(r27);\",                                                                      \/\/ IID447\n-    \"__ negq(r20);\",                                                                      \/\/ IID448\n-    \"__ notq(r10);\",                                                                      \/\/ IID449\n-    \"__ rolq(r16);\",                                                                      \/\/ IID450\n-    \"__ rorq(r27);\",                                                                      \/\/ IID451\n-    \"__ sarq(r9);\",                                                                       \/\/ IID452\n-    \"__ salq(r13);\",                                                                      \/\/ IID453\n-    \"__ shlq(r14);\",                                                                      \/\/ IID454\n-    \"__ shrq(r18);\",                                                                      \/\/ IID455\n-    \"__ incrementq(r28);\",                                                                \/\/ IID456\n-    \"__ decrementq(r28);\",                                                                \/\/ IID457\n-    \"__ pushp(r22);\",                                                                     \/\/ IID458\n-    \"__ popp(r8);\",                                                                       \/\/ IID459\n-    \"__ call(Address(r12, +0x64cc424e));\",                                                \/\/ IID460\n-    \"__ mulq(Address(r26, r29, (Address::ScaleFactor)0, -0x466f085f));\",                  \/\/ IID461\n-    \"__ negq(Address(r21, r24, (Address::ScaleFactor)0, +0x2037df0b));\",                  \/\/ IID462\n-    \"__ sarq(Address(r12, r31, (Address::ScaleFactor)3, -0x57d225aa));\",                  \/\/ IID463\n-    \"__ salq(Address(r20, -0x1ea02f90));\",                                                \/\/ IID464\n-    \"__ shrq(Address(r13, r20, (Address::ScaleFactor)3, +0x171081f2));\",                  \/\/ IID465\n-    \"__ incrementq(Address(r31, +0x13a808db));\",                                          \/\/ IID466\n-    \"__ decrementq(Address(r19, -0x180d3ea1));\",                                          \/\/ IID467\n-    \"__ imulq(r17, Address(r16, -0x2af2fd58), 4096);\",                                    \/\/ IID468\n-    \"__ imulq(r28, r25, 16);\",                                                            \/\/ IID469\n-    \"__ shldq(r27, r13, 16);\",                                                            \/\/ IID470\n-    \"__ shrdq(r8, r10, 16);\",                                                             \/\/ IID471\n-    \"__ pop2(r14, r8);\",                                                                  \/\/ IID472\n-    \"__ pop2p(r18, rbx);\",                                                                \/\/ IID473\n-    \"__ push2(r23, r19);\",                                                                \/\/ IID474\n-    \"__ push2p(r12, rbx);\",                                                               \/\/ IID475\n-    \"__ movzbq(r9, Address(r14, r23, (Address::ScaleFactor)3, -0x428d2646));\",            \/\/ IID476\n-    \"__ movzwq(r28, Address(r9, rcx, (Address::ScaleFactor)2, -0x72611661));\",            \/\/ IID477\n-    \"__ movsbq(rbx, Address(r24, r21, (Address::ScaleFactor)2, +0x3a6be990));\",           \/\/ IID478\n-    \"__ movswq(r16, Address(r22, r10, (Address::ScaleFactor)0, +0x7ef8bdd));\",            \/\/ IID479\n-    \"__ movzbq(r28, r14);\",                                                               \/\/ IID480\n-    \"__ movzwq(r13, r28);\",                                                               \/\/ IID481\n-    \"__ movsbq(r11, rdx);\",                                                               \/\/ IID482\n-    \"__ movswq(r12, r26);\",                                                               \/\/ IID483\n-    \"__ cmpxchgq(r20, Address(r10, -0xbd2a8da));\",                                        \/\/ IID484\n-    \"__ eidivq(r15, false);\",                                                             \/\/ IID485\n-    \"__ eidivq(r23, true);\",                                                              \/\/ IID486\n-    \"__ edivq(r14, false);\",                                                              \/\/ IID487\n-    \"__ edivq(r14, true);\",                                                               \/\/ IID488\n-    \"__ eimulq(r15, false);\",                                                             \/\/ IID489\n-    \"__ eimulq(r20, true);\",                                                              \/\/ IID490\n-    \"__ emulq(rcx, false);\",                                                              \/\/ IID491\n-    \"__ emulq(r21, true);\",                                                               \/\/ IID492\n-    \"__ emulq(Address(r16, r10, (Address::ScaleFactor)3, +0x5f66ac1e), false);\",          \/\/ IID493\n-    \"__ emulq(Address(r21, r22, (Address::ScaleFactor)3, -0xbbc807d), true);\",            \/\/ IID494\n-    \"__ eimulq(r22, r26, false);\",                                                        \/\/ IID495\n-    \"__ eimulq(r25, r21, true);\",                                                         \/\/ IID496\n-    \"__ elzcntq(r20, r13, false);\",                                                       \/\/ IID497\n-    \"__ elzcntq(r25, r19, true);\",                                                        \/\/ IID498\n-    \"__ enegq(r21, r30, false);\",                                                         \/\/ IID499\n-    \"__ enegq(r29, r11, true);\",                                                          \/\/ IID500\n-    \"__ enotq(r22, r8);\",                                                                 \/\/ IID501\n-    \"__ epopcntq(r12, r19, false);\",                                                      \/\/ IID502\n-    \"__ epopcntq(r29, r23, true);\",                                                       \/\/ IID503\n-    \"__ erolq(r28, r24, false);\",                                                         \/\/ IID504\n-    \"__ erolq(rdx, r20, true);\",                                                          \/\/ IID505\n-    \"__ erorq(rbx, r30, false);\",                                                         \/\/ IID506\n-    \"__ erorq(r10, r15, true);\",                                                          \/\/ IID507\n-    \"__ esalq(r17, r13, false);\",                                                         \/\/ IID508\n-    \"__ esalq(r21, r24, true);\",                                                          \/\/ IID509\n-    \"__ esarq(r31, r12, false);\",                                                         \/\/ IID510\n-    \"__ esarq(rdx, r24, true);\",                                                          \/\/ IID511\n-    \"__ edecq(r21, r24, false);\",                                                         \/\/ IID512\n-    \"__ edecq(r15, r31, true);\",                                                          \/\/ IID513\n-    \"__ eincq(r10, rbx, false);\",                                                         \/\/ IID514\n-    \"__ eincq(r18, r8, true);\",                                                           \/\/ IID515\n-    \"__ eshlq(r10, r26, false);\",                                                         \/\/ IID516\n-    \"__ eshlq(r28, r14, true);\",                                                          \/\/ IID517\n-    \"__ eshrq(r10, r19, false);\",                                                         \/\/ IID518\n-    \"__ eshrq(r28, r21, true);\",                                                          \/\/ IID519\n-    \"__ etzcntq(r21, r22, false);\",                                                       \/\/ IID520\n-    \"__ etzcntq(r16, r23, true);\",                                                        \/\/ IID521\n-    \"__ eimulq(r11, Address(r18, r9, (Address::ScaleFactor)2, -0x132285a1), false);\",     \/\/ IID522\n-    \"__ eimulq(r13, Address(r24, r15, (Address::ScaleFactor)3, +0x48f50ca0), true);\",     \/\/ IID523\n-    \"__ elzcntq(r9, Address(r13, +0x2115cf0e), false);\",                                  \/\/ IID524\n-    \"__ elzcntq(r27, Address(r30, +0x49cabbb), true);\",                                   \/\/ IID525\n-    \"__ enegq(r21, Address(r13, r31, (Address::ScaleFactor)2, +0x50a8f4d2), false);\",     \/\/ IID526\n-    \"__ enegq(r22, Address(r18, r20, (Address::ScaleFactor)1, -0x5da0584c), true);\",      \/\/ IID527\n-    \"__ epopcntq(r14, Address(rbx, r22, (Address::ScaleFactor)2, -0x606349d1), false);\",  \/\/ IID528\n-    \"__ epopcntq(r26, Address(r23, r22, (Address::ScaleFactor)3, -0x72c66c23), true);\",   \/\/ IID529\n-    \"__ esalq(r26, Address(r9, +0x334aba09), false);\",                                    \/\/ IID530\n-    \"__ esalq(r9, Address(r9, r30, (Address::ScaleFactor)3, -0x219a6102), true);\",        \/\/ IID531\n-    \"__ esarq(r25, Address(r20, -0x2131bab1), false);\",                                   \/\/ IID532\n-    \"__ esarq(r16, Address(r28, r16, (Address::ScaleFactor)1, +0x48c483b9), true);\",      \/\/ IID533\n-    \"__ edecq(r30, Address(r9, r16, (Address::ScaleFactor)0, -0x88ce84f), false);\",       \/\/ IID534\n-    \"__ edecq(r11, Address(r30, r29, (Address::ScaleFactor)2, +0x3eeb8fd0), true);\",      \/\/ IID535\n-    \"__ eincq(r26, Address(r29, r10, (Address::ScaleFactor)3, +0x3ef4822e), false);\",     \/\/ IID536\n-    \"__ eincq(r29, Address(r19, r20, (Address::ScaleFactor)2, -0x3f0f3db9), true);\",      \/\/ IID537\n-    \"__ eshrq(r8, Address(r30, r20, (Address::ScaleFactor)0, +0x15b56a17), false);\",      \/\/ IID538\n-    \"__ eshrq(r26, Address(r11, -0x2de86561), true);\",                                    \/\/ IID539\n-    \"__ etzcntq(r11, Address(rcx, r30, (Address::ScaleFactor)1, -0x32ffb1c2), false);\",   \/\/ IID540\n-    \"__ etzcntq(r23, Address(r9, r12, (Address::ScaleFactor)1, -0x54823e69), true);\",     \/\/ IID541\n-    \"__ eaddq(r20, Address(r13, rcx, (Address::ScaleFactor)3, -0x46116c0d), r15, false);\", \/\/ IID542\n-    \"__ eaddq(r13, Address(r9, r23, (Address::ScaleFactor)1, -0x286c7605), r16, true);\",  \/\/ IID543\n-    \"__ eandq(r21, Address(r30, r17, (Address::ScaleFactor)0, +0xf4e30b2), r29, false);\", \/\/ IID544\n-    \"__ eandq(r30, Address(r17, r31, (Address::ScaleFactor)0, +0x3ab9dec4), r17, true);\", \/\/ IID545\n-    \"__ eorq(r10, Address(r27, r30, (Address::ScaleFactor)1, -0x197f1266), r28, false);\", \/\/ IID546\n-    \"__ eorq(r9, Address(r29, r30, (Address::ScaleFactor)0, -0x24ea9b08), r11, true);\",   \/\/ IID547\n-    \"__ esubq(r15, Address(r14, -0x4f44bf90), r16, false);\",                              \/\/ IID548\n-    \"__ esubq(rcx, Address(r21, r18, (Address::ScaleFactor)1, -0x11d0ac8f), r28, true);\", \/\/ IID549\n-    \"__ exorq(r19, Address(r19, r18, (Address::ScaleFactor)0, -0xa5e55ec), r8, false);\",  \/\/ IID550\n-    \"__ exorq(r28, Address(r17, r28, (Address::ScaleFactor)1, -0x6eb42fe0), r16, true);\", \/\/ IID551\n-    \"__ eaddq(r17, Address(r18, -0x60ab1105), 16777216, false);\",                         \/\/ IID552\n-    \"__ eaddq(r25, Address(r19, r25, (Address::ScaleFactor)0, +0x122444d9), 65536, true);\", \/\/ IID553\n-    \"__ eandq(r30, Address(r9, r28, (Address::ScaleFactor)1, -0x25b00cf3), 4096, false);\", \/\/ IID554\n-    \"__ eandq(r9, Address(r22, rbx, (Address::ScaleFactor)1, -0x7e465026), 268435456, true);\", \/\/ IID555\n-    \"__ eimulq(r12, Address(r25, r25, (Address::ScaleFactor)1, -0x432d68cc), 1, false);\", \/\/ IID556\n-    \"__ eimulq(r15, Address(r17, r31, (Address::ScaleFactor)3, -0x2b97565e), 16, true);\", \/\/ IID557\n-    \"__ eorq(r28, Address(rdx, r31, (Address::ScaleFactor)0, +0x3f1363b1), 256, false);\", \/\/ IID558\n-    \"__ eorq(r16, Address(r12, r23, (Address::ScaleFactor)3, -0x1785863c), 16777216, true);\", \/\/ IID559\n-    \"__ esalq(r8, Address(r14, r24, (Address::ScaleFactor)2, -0x714290a5), 2, false);\",   \/\/ IID560\n-    \"__ esalq(r8, Address(r15, r14, (Address::ScaleFactor)2, +0x21f13243), 16, true);\",   \/\/ IID561\n-    \"__ esarq(r10, Address(r13, r29, (Address::ScaleFactor)0, +0x7d04cb72), 2, false);\",  \/\/ IID562\n-    \"__ esarq(r11, Address(r21, r31, (Address::ScaleFactor)3, -0x2176b4dc), 8, true);\",   \/\/ IID563\n-    \"__ eshrq(rcx, Address(r16, r12, (Address::ScaleFactor)1, +0x260c9a38), 4, false);\",  \/\/ IID564\n-    \"__ eshrq(r22, Address(r26, r9, (Address::ScaleFactor)0, -0x5e56bb62), 8, true);\",    \/\/ IID565\n-    \"__ esubq(r31, Address(rbx, r28, (Address::ScaleFactor)1, +0x2b00bb10), 1, false);\",  \/\/ IID566\n-    \"__ esubq(r21, Address(r31, -0x6c10f4ad), 4096, true);\",                              \/\/ IID567\n-    \"__ exorq(r11, Address(r23, r30, (Address::ScaleFactor)1, +0x51a6026b), 65536, false);\", \/\/ IID568\n-    \"__ exorq(r14, Address(r27, r10, (Address::ScaleFactor)2, -0x34ad9bab), 16, true);\",  \/\/ IID569\n-    \"__ eaddq(r20, r23, 16777216, false);\",                                               \/\/ IID570\n-    \"__ eaddq(r9, r21, 4096, true);\",                                                     \/\/ IID571\n-    \"__ eandq(r20, rdx, 16, false);\",                                                     \/\/ IID572\n-    \"__ eandq(r14, r19, 16, true);\",                                                      \/\/ IID573\n-    \"__ eimulq(r27, r17, 16, false);\",                                                    \/\/ IID574\n-    \"__ eimulq(r30, r13, 256, true);\",                                                    \/\/ IID575\n-    \"__ eorq(r19, r15, 16777216, false);\",                                                \/\/ IID576\n-    \"__ eorq(r16, r28, 268435456, true);\",                                                \/\/ IID577\n-    \"__ erclq(rbx, r24, 2);\",                                                             \/\/ IID578\n-    \"__ erolq(r15, r20, 16, false);\",                                                     \/\/ IID579\n-    \"__ erolq(r11, rcx, 16, true);\",                                                      \/\/ IID580\n-    \"__ erorq(r13, r26, 16, false);\",                                                     \/\/ IID581\n-    \"__ erorq(r19, r20, 4, true);\",                                                       \/\/ IID582\n-    \"__ esalq(r19, r28, 16, false);\",                                                     \/\/ IID583\n-    \"__ esalq(r25, r18, 4, true);\",                                                       \/\/ IID584\n-    \"__ esarq(r10, r27, 4, false);\",                                                      \/\/ IID585\n-    \"__ esarq(rdx, r22, 8, true);\",                                                       \/\/ IID586\n-    \"__ eshlq(r28, r15, 1, false);\",                                                      \/\/ IID587\n-    \"__ eshlq(rbx, r12, 4, true);\",                                                       \/\/ IID588\n-    \"__ eshrq(r26, r11, 1, false);\",                                                      \/\/ IID589\n-    \"__ eshrq(rdx, r31, 8, true);\",                                                       \/\/ IID590\n-    \"__ esubq(r21, rbx, 1048576, false);\",                                                \/\/ IID591\n-    \"__ esubq(r25, r28, 65536, true);\",                                                   \/\/ IID592\n-    \"__ exorq(r22, r14, 1, false);\",                                                      \/\/ IID593\n-    \"__ exorq(r11, r30, 1048576, true);\",                                                 \/\/ IID594\n-    \"__ eorq_imm32(r20, r19, 1048576, false);\",                                           \/\/ IID595\n-    \"__ eorq_imm32(r25, r13, 268435456, false);\",                                         \/\/ IID596\n-    \"__ esubq_imm32(r25, r25, 268435456, false);\",                                        \/\/ IID597\n-    \"__ esubq_imm32(r18, r11, 4194304, true);\",                                           \/\/ IID598\n-    \"__ eaddq(r10, r18, Address(r20, +0x756f453), false);\",                               \/\/ IID599\n-    \"__ eaddq(rbx, r27, Address(r22, r21, (Address::ScaleFactor)0, -0x25abeab7), true);\", \/\/ IID600\n-    \"__ eandq(rdx, r31, Address(r9, r20, (Address::ScaleFactor)3, -0x4cfe39c), false);\",  \/\/ IID601\n-    \"__ eandq(r16, r25, Address(r14, r27, (Address::ScaleFactor)0, +0x7c6654d9), true);\", \/\/ IID602\n-    \"__ eorq(r29, rcx, Address(r15, r23, (Address::ScaleFactor)0, +0x45b7f72d), false);\", \/\/ IID603\n-    \"__ eorq(r19, r17, Address(r13, r22, (Address::ScaleFactor)1, -0x750c1996), true);\",  \/\/ IID604\n-    \"__ eimulq(r13, r8, Address(r31, r23, (Address::ScaleFactor)1, -0x2211b6b2), false);\", \/\/ IID605\n-    \"__ eimulq(r11, r28, Address(r13, r11, (Address::ScaleFactor)3, +0x5c0013ab), true);\", \/\/ IID606\n-    \"__ esubq(rdx, r18, Address(r18, rcx, (Address::ScaleFactor)0, +0x59557e71), false);\", \/\/ IID607\n-    \"__ esubq(r27, r11, Address(r22, -0x28469649), true);\",                               \/\/ IID608\n-    \"__ exorq(r10, r9, Address(r24, +0x49691d54), false);\",                               \/\/ IID609\n-    \"__ exorq(r24, r12, Address(r19, +0x22d529aa), true);\",                               \/\/ IID610\n-    \"__ eaddq(r20, r9, r10, false);\",                                                     \/\/ IID611\n-    \"__ eaddq(r18, r17, r26, true);\",                                                     \/\/ IID612\n-    \"__ eadcxq(r21, r16, r19);\",                                                          \/\/ IID613\n-    \"__ eadoxq(rbx, r14, r27);\",                                                          \/\/ IID614\n-    \"__ eandq(r9, r12, r22, false);\",                                                     \/\/ IID615\n-    \"__ eandq(r17, r25, r10, true);\",                                                     \/\/ IID616\n-    \"__ eimulq(r12, r15, r14, false);\",                                                   \/\/ IID617\n-    \"__ eimulq(r29, r18, r16, true);\",                                                    \/\/ IID618\n-    \"__ eorq(r11, r9, r10, false);\",                                                      \/\/ IID619\n-    \"__ eorq(r25, r13, r16, true);\",                                                      \/\/ IID620\n-    \"__ esubq(r11, r21, r25, false);\",                                                    \/\/ IID621\n-    \"__ esubq(rdx, r20, rbx, true);\",                                                     \/\/ IID622\n-    \"__ exorq(r25, r21, r26, false);\",                                                    \/\/ IID623\n-    \"__ exorq(r23, r27, r21, true);\",                                                     \/\/ IID624\n-    \"__ eshldq(r10, r12, r31, 2, false);\",                                                \/\/ IID625\n-    \"__ eshldq(r23, r16, r29, 2, true);\",                                                 \/\/ IID626\n-    \"__ eshrdq(r19, r24, r23, 4, false);\",                                                \/\/ IID627\n-    \"__ eshrdq(r21, r15, r25, 4, true);\",                                                 \/\/ IID628\n-    \"__ ecmovq (Assembler::Condition::overflow, r9, r29, rdx);\",                          \/\/ IID629\n-    \"__ ecmovq (Assembler::Condition::noOverflow, r11, r25, r19);\",                       \/\/ IID630\n-    \"__ ecmovq (Assembler::Condition::below, r10, r16, r17);\",                            \/\/ IID631\n-    \"__ ecmovq (Assembler::Condition::aboveEqual, r8, r23, r31);\",                        \/\/ IID632\n-    \"__ ecmovq (Assembler::Condition::zero, r9, r31, rbx);\",                              \/\/ IID633\n-    \"__ ecmovq (Assembler::Condition::notZero, r16, r29, r9);\",                           \/\/ IID634\n-    \"__ ecmovq (Assembler::Condition::belowEqual, r24, r10, r9);\",                        \/\/ IID635\n-    \"__ ecmovq (Assembler::Condition::above, r22, r28, r26);\",                            \/\/ IID636\n-    \"__ ecmovq (Assembler::Condition::negative, r18, r25, r20);\",                         \/\/ IID637\n-    \"__ ecmovq (Assembler::Condition::positive, r16, r21, rbx);\",                         \/\/ IID638\n-    \"__ ecmovq (Assembler::Condition::parity, r28, r22, r19);\",                           \/\/ IID639\n-    \"__ ecmovq (Assembler::Condition::noParity, r13, r15, rdx);\",                         \/\/ IID640\n-    \"__ ecmovq (Assembler::Condition::less, r8, r22, r14);\",                              \/\/ IID641\n-    \"__ ecmovq (Assembler::Condition::greaterEqual, r12, r24, r14);\",                     \/\/ IID642\n-    \"__ ecmovq (Assembler::Condition::lessEqual, r24, r13, r21);\",                        \/\/ IID643\n-    \"__ ecmovq (Assembler::Condition::greater, rbx, rbx, r27);\",                          \/\/ IID644\n-    \"__ ecmovq (Assembler::Condition::overflow, r14, r17, Address(r24, r27, (Address::ScaleFactor)3, +0x9d508f0));\", \/\/ IID645\n-    \"__ ecmovq (Assembler::Condition::noOverflow, r13, r15, Address(r31, r21, (Address::ScaleFactor)2, +0x6ef2c74a));\", \/\/ IID646\n-    \"__ ecmovq (Assembler::Condition::below, r13, r27, Address(r31, r25, (Address::ScaleFactor)1, +0x734fe9ab));\", \/\/ IID647\n-    \"__ ecmovq (Assembler::Condition::aboveEqual, r15, r22, Address(r14, r29, (Address::ScaleFactor)2, -0x67d8bdfb));\", \/\/ IID648\n-    \"__ ecmovq (Assembler::Condition::zero, r30, r23, Address(r15, r28, (Address::ScaleFactor)1, -0x2686219));\", \/\/ IID649\n-    \"__ ecmovq (Assembler::Condition::notZero, r12, r9, Address(r9, r25, (Address::ScaleFactor)3, +0x52aab6b));\", \/\/ IID650\n-    \"__ ecmovq (Assembler::Condition::belowEqual, r9, r25, Address(r8, r8, (Address::ScaleFactor)3, -0x1e42bd95));\", \/\/ IID651\n-    \"__ ecmovq (Assembler::Condition::above, rcx, r20, Address(r27, rbx, (Address::ScaleFactor)2, +0x46823c58));\", \/\/ IID652\n-    \"__ ecmovq (Assembler::Condition::negative, rbx, r12, Address(r21, -0x635b8c8));\",    \/\/ IID653\n-    \"__ ecmovq (Assembler::Condition::positive, r23, rbx, Address(r27, r26, (Address::ScaleFactor)3, +0x922bcc0));\", \/\/ IID654\n-    \"__ ecmovq (Assembler::Condition::parity, r25, r9, Address(r23, +0xd2a14ec));\",       \/\/ IID655\n-    \"__ ecmovq (Assembler::Condition::noParity, r11, r19, Address(r11, -0xfb95a9d));\",    \/\/ IID656\n-    \"__ ecmovq (Assembler::Condition::less, r13, r18, Address(r28, r19, (Address::ScaleFactor)0, +0x716b9b7e));\", \/\/ IID657\n-    \"__ ecmovq (Assembler::Condition::greaterEqual, r21, r16, Address(rcx, r29, (Address::ScaleFactor)0, -0x5af0441e));\", \/\/ IID658\n-    \"__ ecmovq (Assembler::Condition::lessEqual, r12, r31, Address(r20, r26, (Address::ScaleFactor)0, +0xe0b7fb1));\", \/\/ IID659\n-    \"__ ecmovq (Assembler::Condition::greater, r15, r24, Address(r30, +0x2d3b7b4f));\",    \/\/ IID660\n+#endif \/\/ _LP64\n+    \"__ eaddl(rax, rbx, 65536, false);\",                                                  \/\/ IID255\n+#ifdef _LP64\n+    \"__ eaddl(r20, r24, 4096, true);\",                                                    \/\/ IID256\n+    \"__ eaddl(rax, r24, 4096, true);\",                                                    \/\/ IID257\n+    \"__ eandl(r18, r26, 1048576, false);\",                                                \/\/ IID258\n+    \"__ eandl(rax, r26, 1048576, false);\",                                                \/\/ IID259\n+    \"__ eandl(r29, r13, 1, true);\",                                                       \/\/ IID260\n+    \"__ eandl(rax, r13, 1, true);\",                                                       \/\/ IID261\n+    \"__ eimull(rcx, r31, 65536, false);\",                                                 \/\/ IID262\n+    \"__ eimull(rax, r31, 65536, false);\",                                                 \/\/ IID263\n+    \"__ eimull(r23, r29, 65536, true);\",                                                  \/\/ IID264\n+    \"__ eimull(rax, r29, 65536, true);\",                                                  \/\/ IID265\n+    \"__ eorl(r23, r23, 1048576, false);\",                                                 \/\/ IID266\n+    \"__ eorl(rax, r23, 1048576, false);\",                                                 \/\/ IID267\n+    \"__ eorl(r21, r9, 268435456, true);\",                                                 \/\/ IID268\n+    \"__ eorl(rax, r9, 268435456, true);\",                                                 \/\/ IID269\n+    \"__ ercll(r13, rdx, 4);\",                                                             \/\/ IID270\n+#endif \/\/ _LP64\n+    \"__ ercll(rax, rdx, 4);\",                                                             \/\/ IID271\n+#ifdef _LP64\n+    \"__ eroll(r15, r31, 8, false);\",                                                      \/\/ IID272\n+    \"__ eroll(rax, r31, 8, false);\",                                                      \/\/ IID273\n+    \"__ eroll(r8, r9, 2, true);\",                                                         \/\/ IID274\n+    \"__ eroll(rax, r9, 2, true);\",                                                        \/\/ IID275\n+    \"__ erorl(r9, r15, 8, false);\",                                                       \/\/ IID276\n+    \"__ erorl(rax, r15, 8, false);\",                                                      \/\/ IID277\n+    \"__ erorl(r21, r12, 8, true);\",                                                       \/\/ IID278\n+    \"__ erorl(rax, r12, 8, true);\",                                                       \/\/ IID279\n+    \"__ esall(r19, r27, 1, false);\",                                                      \/\/ IID280\n+    \"__ esall(rax, r27, 1, false);\",                                                      \/\/ IID281\n+    \"__ esall(r10, r11, 16, true);\",                                                      \/\/ IID282\n+    \"__ esall(rax, r11, 16, true);\",                                                      \/\/ IID283\n+    \"__ esarl(r8, rdx, 8, false);\",                                                       \/\/ IID284\n+#endif \/\/ _LP64\n+    \"__ esarl(rax, rdx, 8, false);\",                                                      \/\/ IID285\n+#ifdef _LP64\n+    \"__ esarl(r22, r30, 4, true);\",                                                       \/\/ IID286\n+    \"__ esarl(rax, r30, 4, true);\",                                                       \/\/ IID287\n+    \"__ eshll(r25, r31, 16, false);\",                                                     \/\/ IID288\n+    \"__ eshll(rax, r31, 16, false);\",                                                     \/\/ IID289\n+    \"__ eshll(r10, r9, 8, true);\",                                                        \/\/ IID290\n+    \"__ eshll(rax, r9, 8, true);\",                                                        \/\/ IID291\n+    \"__ eshrl(r13, r8, 4, false);\",                                                       \/\/ IID292\n+    \"__ eshrl(rax, r8, 4, false);\",                                                       \/\/ IID293\n+    \"__ eshrl(r16, r21, 16, true);\",                                                      \/\/ IID294\n+    \"__ eshrl(rax, r21, 16, true);\",                                                      \/\/ IID295\n+    \"__ esubl(r26, r23, 16777216, false);\",                                               \/\/ IID296\n+    \"__ esubl(rax, r23, 16777216, false);\",                                               \/\/ IID297\n+    \"__ esubl(r26, r14, 1048576, true);\",                                                 \/\/ IID298\n+    \"__ esubl(rax, r14, 1048576, true);\",                                                 \/\/ IID299\n+    \"__ exorl(r27, r26, 256, false);\",                                                    \/\/ IID300\n+    \"__ exorl(rax, r26, 256, false);\",                                                    \/\/ IID301\n+    \"__ exorl(r22, r9, 1, true);\",                                                        \/\/ IID302\n+    \"__ exorl(rax, r9, 1, true);\",                                                        \/\/ IID303\n+    \"__ esubl_imm32(r22, r30, 268435456, false);\",                                        \/\/ IID304\n+    \"__ esubl_imm32(rax, r30, 268435456, false);\",                                        \/\/ IID305\n+    \"__ esubl_imm32(r8, r16, 4194304, true);\",                                            \/\/ IID306\n+    \"__ esubl_imm32(rax, r16, 4194304, true);\",                                           \/\/ IID307\n+    \"__ eaddl(r20, r29, Address(r11, r12, (Address::ScaleFactor)1, +0xac0980), false);\",  \/\/ IID308\n+    \"__ eaddl(r18, rbx, Address(r9, r18, (Address::ScaleFactor)1, +0x434a125d), true);\",  \/\/ IID309\n+    \"__ eandl(r14, r15, Address(r14, r19, (Address::ScaleFactor)2, +0x15a5a5ee), false);\", \/\/ IID310\n+    \"__ eandl(r28, r31, Address(r24, r12, (Address::ScaleFactor)3, -0x6d6d7e68), true);\", \/\/ IID311\n+    \"__ eimull(r24, r13, Address(r24, r25, (Address::ScaleFactor)3, +0x784673fd), false);\", \/\/ IID312\n+    \"__ eimull(r24, r21, Address(r8, r13, (Address::ScaleFactor)2, -0x63663889), true);\", \/\/ IID313\n+    \"__ eorl(r12, r24, Address(r30, -0x67526556), false);\",                               \/\/ IID314\n+    \"__ eorl(r13, r13, Address(rbx, r25, (Address::ScaleFactor)2, -0x5f394dd9), true);\",  \/\/ IID315\n+    \"__ esubl(r26, r25, Address(r25, rdx, (Address::ScaleFactor)3, -0x2e39f79a), false);\", \/\/ IID316\n+    \"__ esubl(r28, r8, Address(rdx, r24, (Address::ScaleFactor)3, -0xed99a54), true);\",   \/\/ IID317\n+    \"__ exorl(r31, r22, Address(r30, r20, (Address::ScaleFactor)3, +0x3ac41cbd), false);\", \/\/ IID318\n+    \"__ exorl(r24, r30, Address(r13, r17, (Address::ScaleFactor)1, +0x1efdc2e3), true);\", \/\/ IID319\n+    \"__ exorb(r16, r16, Address(r9, r15, (Address::ScaleFactor)1, +0x769feb34), false);\", \/\/ IID320\n+    \"__ exorb(r19, r25, Address(r10, +0x2239b429), true);\",                               \/\/ IID321\n+    \"__ exorw(r25, r19, Address(r16, r24, (Address::ScaleFactor)1, +0x1c71faea), false);\", \/\/ IID322\n+    \"__ exorw(r19, r10, Address(r28, -0x299a0cfd), true);\",                               \/\/ IID323\n+    \"__ eaddl(rbx, r23, r24, false);\",                                                    \/\/ IID324\n+    \"__ eaddl(r28, r14, r24, true);\",                                                     \/\/ IID325\n+    \"__ eandl(r30, r31, r26, false);\",                                                    \/\/ IID326\n+    \"__ eandl(r12, r31, r23, true);\",                                                     \/\/ IID327\n+    \"__ eimull(r9, r20, r10, false);\",                                                    \/\/ IID328\n+    \"__ eimull(r13, r30, r9, true);\",                                                     \/\/ IID329\n+    \"__ eorw(r25, r19, r23, false);\",                                                     \/\/ IID330\n+    \"__ eorw(r12, r16, rdx, true);\",                                                      \/\/ IID331\n+    \"__ eorl(r31, r17, r9, false);\",                                                      \/\/ IID332\n+    \"__ eorl(r15, r13, rbx, true);\",                                                      \/\/ IID333\n+    \"__ eshldl(r28, rbx, r29, false);\",                                                   \/\/ IID334\n+    \"__ eshldl(r22, rbx, r8, true);\",                                                     \/\/ IID335\n+    \"__ eshrdl(r8, r11, r16, false);\",                                                    \/\/ IID336\n+    \"__ eshrdl(r13, r12, r15, true);\",                                                    \/\/ IID337\n+    \"__ esubl(r17, r23, r31, false);\",                                                    \/\/ IID338\n+    \"__ esubl(r20, r22, r26, true);\",                                                     \/\/ IID339\n+    \"__ exorl(r10, r25, r19, false);\",                                                    \/\/ IID340\n+    \"__ exorl(r11, r19, r30, true);\",                                                     \/\/ IID341\n+    \"__ eshldl(r12, r10, rdx, 1, false);\",                                                \/\/ IID342\n+    \"__ eshldl(r20, r30, r18, 16, true);\",                                                \/\/ IID343\n+    \"__ eshrdl(r18, r25, r18, 8, false);\",                                                \/\/ IID344\n+    \"__ eshrdl(r19, r16, r25, 1, true);\",                                                 \/\/ IID345\n+    \"__ ecmovl (Assembler::Condition::overflow, r11, r31, r24);\",                         \/\/ IID346\n+    \"__ ecmovl (Assembler::Condition::noOverflow, r14, r30, r16);\",                       \/\/ IID347\n+    \"__ ecmovl (Assembler::Condition::below, r9, r11, r26);\",                             \/\/ IID348\n+    \"__ ecmovl (Assembler::Condition::aboveEqual, r27, rdx, r31);\",                       \/\/ IID349\n+    \"__ ecmovl (Assembler::Condition::zero, r24, r29, r10);\",                             \/\/ IID350\n+    \"__ ecmovl (Assembler::Condition::notZero, rcx, r21, r15);\",                          \/\/ IID351\n+    \"__ ecmovl (Assembler::Condition::belowEqual, r23, r17, r26);\",                       \/\/ IID352\n+    \"__ ecmovl (Assembler::Condition::above, r20, r27, r13);\",                            \/\/ IID353\n+    \"__ ecmovl (Assembler::Condition::negative, r15, r22, r15);\",                         \/\/ IID354\n+    \"__ ecmovl (Assembler::Condition::positive, r29, r26, r18);\",                         \/\/ IID355\n+    \"__ ecmovl (Assembler::Condition::parity, r9, r9, r22);\",                             \/\/ IID356\n+    \"__ ecmovl (Assembler::Condition::noParity, r30, r23, r11);\",                         \/\/ IID357\n+    \"__ ecmovl (Assembler::Condition::less, r20, r11, rbx);\",                             \/\/ IID358\n+    \"__ ecmovl (Assembler::Condition::greaterEqual, r28, r16, r20);\",                     \/\/ IID359\n+    \"__ ecmovl (Assembler::Condition::lessEqual, r17, r24, r22);\",                        \/\/ IID360\n+    \"__ ecmovl (Assembler::Condition::greater, r16, r15, r15);\",                          \/\/ IID361\n+    \"__ ecmovl (Assembler::Condition::overflow, r28, r25, Address(r29, r16, (Address::ScaleFactor)2, -0x3c9110ad));\", \/\/ IID362\n+    \"__ ecmovl (Assembler::Condition::noOverflow, r23, r15, Address(rbx, r30, (Address::ScaleFactor)3, +0x1cbc58bd));\", \/\/ IID363\n+    \"__ ecmovl (Assembler::Condition::below, r26, rbx, Address(r12, rcx, (Address::ScaleFactor)3, +0x84e581a));\", \/\/ IID364\n+    \"__ ecmovl (Assembler::Condition::aboveEqual, rcx, r24, Address(r17, +0x5cece92d));\", \/\/ IID365\n+    \"__ ecmovl (Assembler::Condition::zero, r26, r24, Address(r24, r12, (Address::ScaleFactor)3, +0x507746a2));\", \/\/ IID366\n+    \"__ ecmovl (Assembler::Condition::notZero, r8, r15, Address(rcx, r19, (Address::ScaleFactor)0, -0xf035c76));\", \/\/ IID367\n+    \"__ ecmovl (Assembler::Condition::belowEqual, rdx, r23, Address(r22, r27, (Address::ScaleFactor)0, -0x12fe3534));\", \/\/ IID368\n+    \"__ ecmovl (Assembler::Condition::above, r30, r19, Address(r13, r28, (Address::ScaleFactor)0, +0x73b8ee9d));\", \/\/ IID369\n+    \"__ ecmovl (Assembler::Condition::negative, r22, r30, Address(r16, rcx, (Address::ScaleFactor)0, +0x22aac146));\", \/\/ IID370\n+    \"__ ecmovl (Assembler::Condition::positive, r17, r30, Address(r17, r9, (Address::ScaleFactor)2, +0x79db2b1));\", \/\/ IID371\n+    \"__ ecmovl (Assembler::Condition::parity, r26, rdx, Address(r14, r16, (Address::ScaleFactor)1, -0x8242011));\", \/\/ IID372\n+    \"__ ecmovl (Assembler::Condition::noParity, r11, r19, Address(r14, r31, (Address::ScaleFactor)1, -0x4ff251cc));\", \/\/ IID373\n+    \"__ ecmovl (Assembler::Condition::less, r20, r18, Address(r13, r16, (Address::ScaleFactor)2, -0x19efc6e2));\", \/\/ IID374\n+    \"__ ecmovl (Assembler::Condition::greaterEqual, r19, r13, Address(r13, r23, (Address::ScaleFactor)1, +0x611b7714));\", \/\/ IID375\n+    \"__ ecmovl (Assembler::Condition::lessEqual, r29, r13, Address(r17, r17, (Address::ScaleFactor)3, +0x3a94a93f));\", \/\/ IID376\n+    \"__ ecmovl (Assembler::Condition::greater, r13, r29, Address(r15, r23, (Address::ScaleFactor)1, +0x76d43532));\", \/\/ IID377\n+    \"__ adcq(r15, r13);\",                                                                 \/\/ IID378\n+    \"__ cmpq(r9, r12);\",                                                                  \/\/ IID379\n+    \"__ imulq(r15, r21);\",                                                                \/\/ IID380\n+    \"__ popcntq(r12, r9);\",                                                               \/\/ IID381\n+    \"__ sbbq(r17, r23);\",                                                                 \/\/ IID382\n+    \"__ subq(rdx, r16);\",                                                                 \/\/ IID383\n+    \"__ tzcntq(r29, r10);\",                                                               \/\/ IID384\n+    \"__ lzcntq(r21, r17);\",                                                               \/\/ IID385\n+    \"__ addq(r29, r18);\",                                                                 \/\/ IID386\n+    \"__ andq(r28, r24);\",                                                                 \/\/ IID387\n+    \"__ orq(r10, r20);\",                                                                  \/\/ IID388\n+    \"__ xorq(r27, r10);\",                                                                 \/\/ IID389\n+    \"__ movq(r14, r11);\",                                                                 \/\/ IID390\n+    \"__ bsfq(r27, rcx);\",                                                                 \/\/ IID391\n+    \"__ bsrq(r22, r15);\",                                                                 \/\/ IID392\n+    \"__ btq(r31, r30);\",                                                                  \/\/ IID393\n+    \"__ xchgq(r19, r19);\",                                                                \/\/ IID394\n+    \"__ testq(r26, r21);\",                                                                \/\/ IID395\n+    \"__ addq(Address(r26, r20, (Address::ScaleFactor)1, -0x4096149c), r14);\",             \/\/ IID396\n+    \"__ andq(Address(r28, r20, (Address::ScaleFactor)2, +0x1bd8898a), r23);\",             \/\/ IID397\n+    \"__ cmpq(Address(r15, r19, (Address::ScaleFactor)2, +0x39eee631), r10);\",             \/\/ IID398\n+    \"__ orq(Address(r13, rdx, (Address::ScaleFactor)3, +0x1a49859), r13);\",               \/\/ IID399\n+    \"__ xorq(Address(r21, +0x5fe8636), r24);\",                                            \/\/ IID400\n+    \"__ subq(Address(r30, r23, (Address::ScaleFactor)2, -0x56643cc1), r25);\",             \/\/ IID401\n+    \"__ movq(Address(r21, r26, (Address::ScaleFactor)3, +0x7e8544ab), r31);\",             \/\/ IID402\n+    \"__ xaddq(Address(rcx, r24, (Address::ScaleFactor)3, -0x79ca4889), rbx);\",            \/\/ IID403\n+    \"__ andq(Address(r13, r31, (Address::ScaleFactor)3, -0xd72b030), 256);\",              \/\/ IID404\n+    \"__ addq(Address(r16, +0x534d775e), 268435456);\",                                     \/\/ IID405\n+    \"__ cmpq(Address(r20, r15, (Address::ScaleFactor)2, -0x7cb22277), 268435456);\",       \/\/ IID406\n+    \"__ sarq(Address(r9, r23, (Address::ScaleFactor)2, -0x72f6d86e), 4);\",                \/\/ IID407\n+    \"__ salq(Address(r11, r24, (Address::ScaleFactor)1, -0x22826f95), 4);\",               \/\/ IID408\n+    \"__ sbbq(Address(r14, r30, (Address::ScaleFactor)1, +0x1b43fc34), 268435456);\",       \/\/ IID409\n+    \"__ shrq(Address(r26, r21, (Address::ScaleFactor)0, -0x3bae50c3), 8);\",               \/\/ IID410\n+    \"__ subq(Address(r22, r10, (Address::ScaleFactor)3, +0x47e1403), 65536);\",            \/\/ IID411\n+    \"__ xorq(Address(rdx, r19, (Address::ScaleFactor)3, -0x644a5318), 1);\",               \/\/ IID412\n+    \"__ orq(Address(r30, r31, (Address::ScaleFactor)1, +0x2c93c783), 256);\",              \/\/ IID413\n+    \"__ movq(Address(r26, r24, (Address::ScaleFactor)2, -0x534785f), 65536);\",            \/\/ IID414\n+    \"__ testq(Address(r14, r30, (Address::ScaleFactor)1, +0x3932e147), -256);\",           \/\/ IID415\n+    \"__ addq(r30, Address(r30, r24, (Address::ScaleFactor)3, -0x66e0235e));\",             \/\/ IID416\n+    \"__ andq(r15, Address(r26, +0x36456e42));\",                                           \/\/ IID417\n+    \"__ cmpq(r10, Address(r18, +0x5044bed));\",                                            \/\/ IID418\n+    \"__ lzcntq(r31, Address(r12, rdx, (Address::ScaleFactor)2, -0x1707b7d4));\",           \/\/ IID419\n+    \"__ orq(r16, Address(r20, r23, (Address::ScaleFactor)2, -0x26783729));\",              \/\/ IID420\n+    \"__ adcq(r31, Address(r30, r31, (Address::ScaleFactor)0, +0x1ec3265d));\",             \/\/ IID421\n+    \"__ imulq(r16, Address(rdx, r26, (Address::ScaleFactor)0, +0x3586831b));\",            \/\/ IID422\n+    \"__ popcntq(r12, Address(r18, -0x3c3e9f7a));\",                                        \/\/ IID423\n+    \"__ sbbq(rcx, Address(r8, r21, (Address::ScaleFactor)3, +0x6b1515ab));\",              \/\/ IID424\n+    \"__ subq(r29, Address(rcx, r23, (Address::ScaleFactor)2, +0x4ff06c4d));\",             \/\/ IID425\n+    \"__ tzcntq(r26, Address(r24, r10, (Address::ScaleFactor)1, -0x75d9a189));\",           \/\/ IID426\n+    \"__ xorq(r17, Address(rbx, rbx, (Address::ScaleFactor)0, +0x4033d59c));\",             \/\/ IID427\n+    \"__ movq(r18, Address(r22, r12, (Address::ScaleFactor)3, -0x3893347d));\",             \/\/ IID428\n+    \"__ leaq(r12, Address(r20, r23, (Address::ScaleFactor)3, +0x4b311560));\",             \/\/ IID429\n+    \"__ cvttsd2siq(r29, Address(r10, r28, (Address::ScaleFactor)2, +0x5c3a2657));\",       \/\/ IID430\n+    \"__ xchgq(r22, Address(r13, r25, (Address::ScaleFactor)3, +0x1a3d6f3f));\",            \/\/ IID431\n+    \"__ testq(r25, Address(r17, r24, (Address::ScaleFactor)3, -0x35addbd8));\",            \/\/ IID432\n+    \"__ addq(r18, 1);\",                                                                   \/\/ IID433\n+    \"__ andq(r13, 16777216);\",                                                            \/\/ IID434\n+    \"__ adcq(r13, 65536);\",                                                               \/\/ IID435\n+    \"__ cmpq(r10, 65536);\",                                                               \/\/ IID436\n+    \"__ rclq(r20, 2);\",                                                                   \/\/ IID437\n+    \"__ rcrq(r9, 16);\",                                                                   \/\/ IID438\n+    \"__ rolq(r8, 1);\",                                                                    \/\/ IID439\n+    \"__ rorq(r25, 2);\",                                                                   \/\/ IID440\n+    \"__ sarq(r22, 8);\",                                                                   \/\/ IID441\n+    \"__ salq(r17, 1);\",                                                                   \/\/ IID442\n+    \"__ sbbq(r31, 16);\",                                                                  \/\/ IID443\n+    \"__ shlq(r27, 4);\",                                                                   \/\/ IID444\n+    \"__ shrq(r28, 2);\",                                                                   \/\/ IID445\n+    \"__ subq(rcx, 16777216);\",                                                            \/\/ IID446\n+    \"__ xorq(r27, 1048576);\",                                                             \/\/ IID447\n+    \"__ movq(r20, 268435456);\",                                                           \/\/ IID448\n+    \"__ mov64(r27, 4503599627370496);\",                                                   \/\/ IID449\n+    \"__ btq(r22, 4);\",                                                                    \/\/ IID450\n+    \"__ testq(r8, -4096);\",                                                               \/\/ IID451\n+    \"__ orq_imm32(r28, 1048576);\",                                                        \/\/ IID452\n+    \"__ subq_imm32(r13, 65536);\",                                                         \/\/ IID453\n+    \"__ cmovq(Assembler::Condition::overflow, r16, Address(r16, -0x1389a3eb));\",          \/\/ IID454\n+    \"__ cmovq(Assembler::Condition::noOverflow, rbx, Address(r29, r8, (Address::ScaleFactor)0, +0x1d022615));\", \/\/ IID455\n+    \"__ cmovq(Assembler::Condition::below, rdx, Address(r12, r28, (Address::ScaleFactor)1, -0x34c898e2));\", \/\/ IID456\n+    \"__ cmovq(Assembler::Condition::aboveEqual, r27, Address(r10, rcx, (Address::ScaleFactor)3, -0x1ef7abf1));\", \/\/ IID457\n+    \"__ cmovq(Assembler::Condition::zero, r14, Address(r13, r29, (Address::ScaleFactor)2, -0x7c4c8369));\", \/\/ IID458\n+    \"__ cmovq(Assembler::Condition::notZero, r15, Address(r23, rcx, (Address::ScaleFactor)2, -0x6bd22ccf));\", \/\/ IID459\n+    \"__ cmovq(Assembler::Condition::belowEqual, r24, Address(r15, r10, (Address::ScaleFactor)1, -0x7ffb3d09));\", \/\/ IID460\n+    \"__ cmovq(Assembler::Condition::above, r23, Address(r11, +0x276a863b));\",             \/\/ IID461\n+    \"__ cmovq(Assembler::Condition::negative, r28, Address(r29, +0x3fb4396e));\",          \/\/ IID462\n+    \"__ cmovq(Assembler::Condition::positive, r26, Address(r27, rcx, (Address::ScaleFactor)3, +0x4ddea61c));\", \/\/ IID463\n+    \"__ cmovq(Assembler::Condition::parity, r10, Address(r22, r19, (Address::ScaleFactor)1, +0x2a126966));\", \/\/ IID464\n+    \"__ cmovq(Assembler::Condition::noParity, r12, Address(r10, +0x3d7c59f));\",           \/\/ IID465\n+    \"__ cmovq(Assembler::Condition::less, r10, Address(r8, r8, (Address::ScaleFactor)3, -0xe61862d));\", \/\/ IID466\n+    \"__ cmovq(Assembler::Condition::greaterEqual, r23, Address(r29, -0x777ed96d));\",      \/\/ IID467\n+    \"__ cmovq(Assembler::Condition::lessEqual, rcx, Address(rbx, r19, (Address::ScaleFactor)1, +0x53c601cb));\", \/\/ IID468\n+    \"__ cmovq(Assembler::Condition::greater, r14, Address(r17, rbx, (Address::ScaleFactor)0, -0x768bf073));\", \/\/ IID469\n+    \"__ call(r29);\",                                                                      \/\/ IID470\n+    \"__ divq(r10);\",                                                                      \/\/ IID471\n+    \"__ idivq(r19);\",                                                                     \/\/ IID472\n+    \"__ imulq(r15);\",                                                                     \/\/ IID473\n+    \"__ mulq(r27);\",                                                                      \/\/ IID474\n+    \"__ negq(r20);\",                                                                      \/\/ IID475\n+    \"__ notq(r10);\",                                                                      \/\/ IID476\n+    \"__ rolq(r16);\",                                                                      \/\/ IID477\n+    \"__ rorq(r27);\",                                                                      \/\/ IID478\n+    \"__ sarq(r9);\",                                                                       \/\/ IID479\n+    \"__ salq(r13);\",                                                                      \/\/ IID480\n+    \"__ shlq(r14);\",                                                                      \/\/ IID481\n+    \"__ shrq(r18);\",                                                                      \/\/ IID482\n+    \"__ incrementq(r28);\",                                                                \/\/ IID483\n+    \"__ decrementq(r28);\",                                                                \/\/ IID484\n+    \"__ pushp(r22);\",                                                                     \/\/ IID485\n+    \"__ popp(r8);\",                                                                       \/\/ IID486\n+    \"__ call(Address(r12, +0x64cc424e));\",                                                \/\/ IID487\n+    \"__ mulq(Address(r26, r29, (Address::ScaleFactor)0, -0x466f085f));\",                  \/\/ IID488\n+    \"__ negq(Address(r21, r24, (Address::ScaleFactor)0, +0x2037df0b));\",                  \/\/ IID489\n+    \"__ sarq(Address(r12, r31, (Address::ScaleFactor)3, -0x57d225aa));\",                  \/\/ IID490\n+    \"__ salq(Address(r20, -0x1ea02f90));\",                                                \/\/ IID491\n+    \"__ shrq(Address(r13, r20, (Address::ScaleFactor)3, +0x171081f2));\",                  \/\/ IID492\n+    \"__ incrementq(Address(r31, +0x13a808db));\",                                          \/\/ IID493\n+    \"__ decrementq(Address(r19, -0x180d3ea1));\",                                          \/\/ IID494\n+    \"__ imulq(r17, Address(r16, -0x2af2fd58), 4096);\",                                    \/\/ IID495\n+    \"__ imulq(r28, r25, 16);\",                                                            \/\/ IID496\n+    \"__ shldq(r27, r13, 16);\",                                                            \/\/ IID497\n+    \"__ shrdq(r8, r10, 16);\",                                                             \/\/ IID498\n+    \"__ pop2(r14, r8);\",                                                                  \/\/ IID499\n+    \"__ pop2p(r18, rbx);\",                                                                \/\/ IID500\n+    \"__ push2(r23, r19);\",                                                                \/\/ IID501\n+    \"__ push2p(r12, rbx);\",                                                               \/\/ IID502\n+    \"__ movzbq(r9, Address(r14, r23, (Address::ScaleFactor)3, -0x428d2646));\",            \/\/ IID503\n+    \"__ movzwq(r28, Address(r9, rcx, (Address::ScaleFactor)2, -0x72611661));\",            \/\/ IID504\n+    \"__ movsbq(rbx, Address(r24, r21, (Address::ScaleFactor)2, +0x3a6be990));\",           \/\/ IID505\n+    \"__ movswq(r16, Address(r22, r10, (Address::ScaleFactor)0, +0x7ef8bdd));\",            \/\/ IID506\n+    \"__ movzbq(r28, r14);\",                                                               \/\/ IID507\n+    \"__ movzwq(r13, r28);\",                                                               \/\/ IID508\n+    \"__ movsbq(r11, rdx);\",                                                               \/\/ IID509\n+    \"__ movswq(r12, r26);\",                                                               \/\/ IID510\n+    \"__ cmpxchgq(r20, Address(r10, -0xbd2a8da));\",                                        \/\/ IID511\n+    \"__ eidivq(r15, false);\",                                                             \/\/ IID512\n+    \"__ eidivq(r23, true);\",                                                              \/\/ IID513\n+    \"__ edivq(r14, false);\",                                                              \/\/ IID514\n+    \"__ edivq(r14, true);\",                                                               \/\/ IID515\n+    \"__ eimulq(r15, false);\",                                                             \/\/ IID516\n+    \"__ eimulq(r20, true);\",                                                              \/\/ IID517\n+    \"__ emulq(rcx, false);\",                                                              \/\/ IID518\n+    \"__ emulq(r21, true);\",                                                               \/\/ IID519\n+    \"__ emulq(Address(r16, r10, (Address::ScaleFactor)3, +0x5f66ac1e), false);\",          \/\/ IID520\n+    \"__ emulq(Address(r21, r22, (Address::ScaleFactor)3, -0xbbc807d), true);\",            \/\/ IID521\n+    \"__ eimulq(r22, r26, false);\",                                                        \/\/ IID522\n+    \"__ eimulq(r25, r21, true);\",                                                         \/\/ IID523\n+    \"__ elzcntq(r20, r13, false);\",                                                       \/\/ IID524\n+    \"__ elzcntq(r25, r19, true);\",                                                        \/\/ IID525\n+    \"__ enegq(r21, r30, false);\",                                                         \/\/ IID526\n+    \"__ enegq(r29, r11, true);\",                                                          \/\/ IID527\n+    \"__ enotq(r22, r8);\",                                                                 \/\/ IID528\n+    \"__ epopcntq(r12, r19, false);\",                                                      \/\/ IID529\n+    \"__ epopcntq(r29, r23, true);\",                                                       \/\/ IID530\n+    \"__ erolq(r28, r24, false);\",                                                         \/\/ IID531\n+    \"__ erolq(rdx, r20, true);\",                                                          \/\/ IID532\n+    \"__ erorq(rbx, r30, false);\",                                                         \/\/ IID533\n+    \"__ erorq(r10, r15, true);\",                                                          \/\/ IID534\n+    \"__ esalq(r17, r13, false);\",                                                         \/\/ IID535\n+    \"__ esalq(r21, r24, true);\",                                                          \/\/ IID536\n+    \"__ esarq(r31, r12, false);\",                                                         \/\/ IID537\n+    \"__ esarq(rdx, r24, true);\",                                                          \/\/ IID538\n+    \"__ edecq(r21, r24, false);\",                                                         \/\/ IID539\n+    \"__ edecq(r15, r31, true);\",                                                          \/\/ IID540\n+    \"__ eincq(r10, rbx, false);\",                                                         \/\/ IID541\n+    \"__ eincq(r18, r8, true);\",                                                           \/\/ IID542\n+    \"__ eshlq(r10, r26, false);\",                                                         \/\/ IID543\n+    \"__ eshlq(r28, r14, true);\",                                                          \/\/ IID544\n+    \"__ eshrq(r10, r19, false);\",                                                         \/\/ IID545\n+    \"__ eshrq(r28, r21, true);\",                                                          \/\/ IID546\n+    \"__ etzcntq(r21, r22, false);\",                                                       \/\/ IID547\n+    \"__ etzcntq(r16, r23, true);\",                                                        \/\/ IID548\n+    \"__ eimulq(r11, Address(r18, r9, (Address::ScaleFactor)2, -0x132285a1), false);\",     \/\/ IID549\n+    \"__ eimulq(r13, Address(r24, r15, (Address::ScaleFactor)3, +0x48f50ca0), true);\",     \/\/ IID550\n+    \"__ elzcntq(r9, Address(r13, +0x2115cf0e), false);\",                                  \/\/ IID551\n+    \"__ elzcntq(r27, Address(r30, +0x49cabbb), true);\",                                   \/\/ IID552\n+    \"__ enegq(r21, Address(r13, r31, (Address::ScaleFactor)2, +0x50a8f4d2), false);\",     \/\/ IID553\n+    \"__ enegq(r22, Address(r18, r20, (Address::ScaleFactor)1, -0x5da0584c), true);\",      \/\/ IID554\n+    \"__ epopcntq(r14, Address(rbx, r22, (Address::ScaleFactor)2, -0x606349d1), false);\",  \/\/ IID555\n+    \"__ epopcntq(r26, Address(r23, r22, (Address::ScaleFactor)3, -0x72c66c23), true);\",   \/\/ IID556\n+    \"__ esalq(r26, Address(r9, +0x334aba09), false);\",                                    \/\/ IID557\n+    \"__ esalq(r9, Address(r9, r30, (Address::ScaleFactor)3, -0x219a6102), true);\",        \/\/ IID558\n+    \"__ esarq(r25, Address(r20, -0x2131bab1), false);\",                                   \/\/ IID559\n+    \"__ esarq(r16, Address(r28, r16, (Address::ScaleFactor)1, +0x48c483b9), true);\",      \/\/ IID560\n+    \"__ edecq(r30, Address(r9, r16, (Address::ScaleFactor)0, -0x88ce84f), false);\",       \/\/ IID561\n+    \"__ edecq(r11, Address(r30, r29, (Address::ScaleFactor)2, +0x3eeb8fd0), true);\",      \/\/ IID562\n+    \"__ eincq(r26, Address(r29, r10, (Address::ScaleFactor)3, +0x3ef4822e), false);\",     \/\/ IID563\n+    \"__ eincq(r29, Address(r19, r20, (Address::ScaleFactor)2, -0x3f0f3db9), true);\",      \/\/ IID564\n+    \"__ eshrq(r8, Address(r30, r20, (Address::ScaleFactor)0, +0x15b56a17), false);\",      \/\/ IID565\n+    \"__ eshrq(r26, Address(r11, -0x2de86561), true);\",                                    \/\/ IID566\n+    \"__ etzcntq(r11, Address(rcx, r30, (Address::ScaleFactor)1, -0x32ffb1c2), false);\",   \/\/ IID567\n+    \"__ etzcntq(r23, Address(r9, r12, (Address::ScaleFactor)1, -0x54823e69), true);\",     \/\/ IID568\n+    \"__ eaddq(r20, Address(r13, rcx, (Address::ScaleFactor)3, -0x46116c0d), r15, false);\", \/\/ IID569\n+    \"__ eaddq(r13, Address(r9, r23, (Address::ScaleFactor)1, -0x286c7605), r16, true);\",  \/\/ IID570\n+    \"__ eandq(r21, Address(r30, r17, (Address::ScaleFactor)0, +0xf4e30b2), r29, false);\", \/\/ IID571\n+    \"__ eandq(r30, Address(r17, r31, (Address::ScaleFactor)0, +0x3ab9dec4), r17, true);\", \/\/ IID572\n+    \"__ eorq(r10, Address(r27, r30, (Address::ScaleFactor)1, -0x197f1266), r28, false);\", \/\/ IID573\n+    \"__ eorq(r9, Address(r29, r30, (Address::ScaleFactor)0, -0x24ea9b08), r11, true);\",   \/\/ IID574\n+    \"__ esubq(r15, Address(r14, -0x4f44bf90), r16, false);\",                              \/\/ IID575\n+    \"__ esubq(rcx, Address(r21, r18, (Address::ScaleFactor)1, -0x11d0ac8f), r28, true);\", \/\/ IID576\n+    \"__ exorq(r19, Address(r19, r18, (Address::ScaleFactor)0, -0xa5e55ec), r8, false);\",  \/\/ IID577\n+    \"__ exorq(r28, Address(r17, r28, (Address::ScaleFactor)1, -0x6eb42fe0), r16, true);\", \/\/ IID578\n+    \"__ eaddq(r17, Address(r18, -0x60ab1105), 16777216, false);\",                         \/\/ IID579\n+    \"__ eaddq(r25, Address(r19, r25, (Address::ScaleFactor)0, +0x122444d9), 65536, true);\", \/\/ IID580\n+    \"__ eandq(r30, Address(r9, r28, (Address::ScaleFactor)1, -0x25b00cf3), 4096, false);\", \/\/ IID581\n+    \"__ eandq(r9, Address(r22, rbx, (Address::ScaleFactor)1, -0x7e465026), 268435456, true);\", \/\/ IID582\n+    \"__ eimulq(r12, Address(r25, r25, (Address::ScaleFactor)1, -0x432d68cc), 1, false);\", \/\/ IID583\n+    \"__ eimulq(r15, Address(r17, r31, (Address::ScaleFactor)3, -0x2b97565e), 16, true);\", \/\/ IID584\n+    \"__ eorq(r28, Address(rdx, r31, (Address::ScaleFactor)0, +0x3f1363b1), 256, false);\", \/\/ IID585\n+    \"__ eorq(r16, Address(r12, r23, (Address::ScaleFactor)3, -0x1785863c), 16777216, true);\", \/\/ IID586\n+    \"__ esalq(r8, Address(r14, r24, (Address::ScaleFactor)2, -0x714290a5), 2, false);\",   \/\/ IID587\n+    \"__ esalq(r8, Address(r15, r14, (Address::ScaleFactor)2, +0x21f13243), 16, true);\",   \/\/ IID588\n+    \"__ esarq(r10, Address(r13, r29, (Address::ScaleFactor)0, +0x7d04cb72), 2, false);\",  \/\/ IID589\n+    \"__ esarq(r11, Address(r21, r31, (Address::ScaleFactor)3, -0x2176b4dc), 8, true);\",   \/\/ IID590\n+    \"__ eshrq(rcx, Address(r16, r12, (Address::ScaleFactor)1, +0x260c9a38), 4, false);\",  \/\/ IID591\n+    \"__ eshrq(r22, Address(r26, r9, (Address::ScaleFactor)0, -0x5e56bb62), 8, true);\",    \/\/ IID592\n+    \"__ esubq(r31, Address(rbx, r28, (Address::ScaleFactor)1, +0x2b00bb10), 1, false);\",  \/\/ IID593\n+    \"__ esubq(r21, Address(r31, -0x6c10f4ad), 4096, true);\",                              \/\/ IID594\n+    \"__ exorq(r11, Address(r23, r30, (Address::ScaleFactor)1, +0x51a6026b), 65536, false);\", \/\/ IID595\n+    \"__ exorq(r14, Address(r27, r10, (Address::ScaleFactor)2, -0x34ad9bab), 16, true);\",  \/\/ IID596\n+    \"__ eaddq(r20, r23, 16777216, false);\",                                               \/\/ IID597\n+    \"__ eaddq(rax, r23, 16777216, false);\",                                               \/\/ IID598\n+    \"__ eaddq(r9, r21, 4096, true);\",                                                     \/\/ IID599\n+    \"__ eaddq(rax, r21, 4096, true);\",                                                    \/\/ IID600\n+    \"__ eandq(r20, rdx, 16, false);\",                                                     \/\/ IID601\n+    \"__ eandq(rax, rdx, 16, false);\",                                                     \/\/ IID602\n+    \"__ eandq(r14, r19, 16, true);\",                                                      \/\/ IID603\n+    \"__ eandq(rax, r19, 16, true);\",                                                      \/\/ IID604\n+    \"__ eimulq(r27, r17, 16, false);\",                                                    \/\/ IID605\n+    \"__ eimulq(rax, r17, 16, false);\",                                                    \/\/ IID606\n+    \"__ eimulq(r30, r13, 256, true);\",                                                    \/\/ IID607\n+    \"__ eimulq(rax, r13, 256, true);\",                                                    \/\/ IID608\n+    \"__ eorq(r19, r15, 16777216, false);\",                                                \/\/ IID609\n+    \"__ eorq(rax, r15, 16777216, false);\",                                                \/\/ IID610\n+    \"__ eorq(r16, r28, 268435456, true);\",                                                \/\/ IID611\n+    \"__ eorq(rax, r28, 268435456, true);\",                                                \/\/ IID612\n+    \"__ erclq(rbx, r24, 2);\",                                                             \/\/ IID613\n+    \"__ erclq(rax, r24, 2);\",                                                             \/\/ IID614\n+    \"__ erolq(r15, r20, 16, false);\",                                                     \/\/ IID615\n+    \"__ erolq(rax, r20, 16, false);\",                                                     \/\/ IID616\n+    \"__ erolq(r11, rcx, 16, true);\",                                                      \/\/ IID617\n+    \"__ erolq(rax, rcx, 16, true);\",                                                      \/\/ IID618\n+    \"__ erorq(r13, r26, 16, false);\",                                                     \/\/ IID619\n+    \"__ erorq(rax, r26, 16, false);\",                                                     \/\/ IID620\n+    \"__ erorq(r19, r20, 4, true);\",                                                       \/\/ IID621\n+    \"__ erorq(rax, r20, 4, true);\",                                                       \/\/ IID622\n+    \"__ esalq(r19, r28, 16, false);\",                                                     \/\/ IID623\n+    \"__ esalq(rax, r28, 16, false);\",                                                     \/\/ IID624\n+    \"__ esalq(r25, r18, 4, true);\",                                                       \/\/ IID625\n+    \"__ esalq(rax, r18, 4, true);\",                                                       \/\/ IID626\n+    \"__ esarq(r10, r27, 4, false);\",                                                      \/\/ IID627\n+    \"__ esarq(rax, r27, 4, false);\",                                                      \/\/ IID628\n+    \"__ esarq(rdx, r22, 8, true);\",                                                       \/\/ IID629\n+    \"__ esarq(rax, r22, 8, true);\",                                                       \/\/ IID630\n+    \"__ eshlq(r28, r15, 1, false);\",                                                      \/\/ IID631\n+    \"__ eshlq(rax, r15, 1, false);\",                                                      \/\/ IID632\n+    \"__ eshlq(rbx, r12, 4, true);\",                                                       \/\/ IID633\n+    \"__ eshlq(rax, r12, 4, true);\",                                                       \/\/ IID634\n+    \"__ eshrq(r26, r11, 1, false);\",                                                      \/\/ IID635\n+    \"__ eshrq(rax, r11, 1, false);\",                                                      \/\/ IID636\n+    \"__ eshrq(rdx, r31, 8, true);\",                                                       \/\/ IID637\n+    \"__ eshrq(rax, r31, 8, true);\",                                                       \/\/ IID638\n+    \"__ esubq(r21, rbx, 1048576, false);\",                                                \/\/ IID639\n+    \"__ esubq(rax, rbx, 1048576, false);\",                                                \/\/ IID640\n+    \"__ esubq(r25, r28, 65536, true);\",                                                   \/\/ IID641\n+    \"__ esubq(rax, r28, 65536, true);\",                                                   \/\/ IID642\n+    \"__ exorq(r22, r14, 1, false);\",                                                      \/\/ IID643\n+    \"__ exorq(rax, r14, 1, false);\",                                                      \/\/ IID644\n+    \"__ exorq(r11, r30, 1048576, true);\",                                                 \/\/ IID645\n+    \"__ exorq(rax, r30, 1048576, true);\",                                                 \/\/ IID646\n+    \"__ eorq_imm32(r20, r19, 1048576, false);\",                                           \/\/ IID647\n+    \"__ eorq_imm32(rax, r19, 1048576, false);\",                                           \/\/ IID648\n+    \"__ eorq_imm32(r25, r13, 268435456, false);\",                                         \/\/ IID649\n+    \"__ eorq_imm32(rax, r13, 268435456, false);\",                                         \/\/ IID650\n+    \"__ esubq_imm32(r25, r25, 268435456, false);\",                                        \/\/ IID651\n+    \"__ esubq_imm32(rax, r25, 268435456, false);\",                                        \/\/ IID652\n+    \"__ esubq_imm32(r18, r11, 4194304, true);\",                                           \/\/ IID653\n+    \"__ esubq_imm32(rax, r11, 4194304, true);\",                                           \/\/ IID654\n+    \"__ eaddq(r10, r18, Address(r20, +0x756f453), false);\",                               \/\/ IID655\n+    \"__ eaddq(rbx, r27, Address(r22, r21, (Address::ScaleFactor)0, -0x25abeab7), true);\", \/\/ IID656\n+    \"__ eandq(rdx, r31, Address(r9, r20, (Address::ScaleFactor)3, -0x4cfe39c), false);\",  \/\/ IID657\n+    \"__ eandq(r16, r25, Address(r14, r27, (Address::ScaleFactor)0, +0x7c6654d9), true);\", \/\/ IID658\n+    \"__ eorq(r29, rcx, Address(r15, r23, (Address::ScaleFactor)0, +0x45b7f72d), false);\", \/\/ IID659\n+    \"__ eorq(r19, r17, Address(r13, r22, (Address::ScaleFactor)1, -0x750c1996), true);\",  \/\/ IID660\n+    \"__ eimulq(r13, r8, Address(r31, r23, (Address::ScaleFactor)1, -0x2211b6b2), false);\", \/\/ IID661\n+    \"__ eimulq(r11, r28, Address(r13, r11, (Address::ScaleFactor)3, +0x5c0013ab), true);\", \/\/ IID662\n+    \"__ esubq(rdx, r18, Address(r18, rcx, (Address::ScaleFactor)0, +0x59557e71), false);\", \/\/ IID663\n+    \"__ esubq(r27, r11, Address(r22, -0x28469649), true);\",                               \/\/ IID664\n+    \"__ exorq(r10, r9, Address(r24, +0x49691d54), false);\",                               \/\/ IID665\n+    \"__ exorq(r24, r12, Address(r19, +0x22d529aa), true);\",                               \/\/ IID666\n+    \"__ eaddq(r20, r9, r10, false);\",                                                     \/\/ IID667\n+    \"__ eaddq(r18, r17, r26, true);\",                                                     \/\/ IID668\n+    \"__ eadcxq(r21, r16, r19);\",                                                          \/\/ IID669\n+    \"__ eadoxq(rbx, r14, r27);\",                                                          \/\/ IID670\n+    \"__ eandq(r9, r12, r22, false);\",                                                     \/\/ IID671\n+    \"__ eandq(r17, r25, r10, true);\",                                                     \/\/ IID672\n+    \"__ eimulq(r12, r15, r14, false);\",                                                   \/\/ IID673\n+    \"__ eimulq(r29, r18, r16, true);\",                                                    \/\/ IID674\n+    \"__ eorq(r11, r9, r10, false);\",                                                      \/\/ IID675\n+    \"__ eorq(r25, r13, r16, true);\",                                                      \/\/ IID676\n+    \"__ esubq(r11, r21, r25, false);\",                                                    \/\/ IID677\n+    \"__ esubq(rdx, r20, rbx, true);\",                                                     \/\/ IID678\n+    \"__ exorq(r25, r21, r26, false);\",                                                    \/\/ IID679\n+    \"__ exorq(r23, r27, r21, true);\",                                                     \/\/ IID680\n+    \"__ eshldq(r10, r12, r31, 2, false);\",                                                \/\/ IID681\n+    \"__ eshldq(r23, r16, r29, 2, true);\",                                                 \/\/ IID682\n+    \"__ eshrdq(r19, r24, r23, 4, false);\",                                                \/\/ IID683\n+    \"__ eshrdq(r21, r15, r25, 4, true);\",                                                 \/\/ IID684\n+    \"__ ecmovq (Assembler::Condition::overflow, r9, r29, rdx);\",                          \/\/ IID685\n+    \"__ ecmovq (Assembler::Condition::noOverflow, r11, r25, r19);\",                       \/\/ IID686\n+    \"__ ecmovq (Assembler::Condition::below, r10, r16, r17);\",                            \/\/ IID687\n+    \"__ ecmovq (Assembler::Condition::aboveEqual, r8, r23, r31);\",                        \/\/ IID688\n+    \"__ ecmovq (Assembler::Condition::zero, r9, r31, rbx);\",                              \/\/ IID689\n+    \"__ ecmovq (Assembler::Condition::notZero, r16, r29, r9);\",                           \/\/ IID690\n+    \"__ ecmovq (Assembler::Condition::belowEqual, r24, r10, r9);\",                        \/\/ IID691\n+    \"__ ecmovq (Assembler::Condition::above, r22, r28, r26);\",                            \/\/ IID692\n+    \"__ ecmovq (Assembler::Condition::negative, r18, r25, r20);\",                         \/\/ IID693\n+    \"__ ecmovq (Assembler::Condition::positive, r16, r21, rbx);\",                         \/\/ IID694\n+    \"__ ecmovq (Assembler::Condition::parity, r28, r22, r19);\",                           \/\/ IID695\n+    \"__ ecmovq (Assembler::Condition::noParity, r13, r15, rdx);\",                         \/\/ IID696\n+    \"__ ecmovq (Assembler::Condition::less, r8, r22, r14);\",                              \/\/ IID697\n+    \"__ ecmovq (Assembler::Condition::greaterEqual, r12, r24, r14);\",                     \/\/ IID698\n+    \"__ ecmovq (Assembler::Condition::lessEqual, r24, r13, r21);\",                        \/\/ IID699\n+    \"__ ecmovq (Assembler::Condition::greater, rbx, rbx, r27);\",                          \/\/ IID700\n+    \"__ ecmovq (Assembler::Condition::overflow, r14, r17, Address(r24, r27, (Address::ScaleFactor)3, +0x9d508f0));\", \/\/ IID701\n+    \"__ ecmovq (Assembler::Condition::noOverflow, r13, r15, Address(r31, r21, (Address::ScaleFactor)2, +0x6ef2c74a));\", \/\/ IID702\n+    \"__ ecmovq (Assembler::Condition::below, r13, r27, Address(r31, r25, (Address::ScaleFactor)1, +0x734fe9ab));\", \/\/ IID703\n+    \"__ ecmovq (Assembler::Condition::aboveEqual, r15, r22, Address(r14, r29, (Address::ScaleFactor)2, -0x67d8bdfb));\", \/\/ IID704\n+    \"__ ecmovq (Assembler::Condition::zero, r30, r23, Address(r15, r28, (Address::ScaleFactor)1, -0x2686219));\", \/\/ IID705\n+    \"__ ecmovq (Assembler::Condition::notZero, r12, r9, Address(r9, r25, (Address::ScaleFactor)3, +0x52aab6b));\", \/\/ IID706\n+    \"__ ecmovq (Assembler::Condition::belowEqual, r9, r25, Address(r8, r8, (Address::ScaleFactor)3, -0x1e42bd95));\", \/\/ IID707\n+    \"__ ecmovq (Assembler::Condition::above, rcx, r20, Address(r27, rbx, (Address::ScaleFactor)2, +0x46823c58));\", \/\/ IID708\n+    \"__ ecmovq (Assembler::Condition::negative, rbx, r12, Address(r21, -0x635b8c8));\",    \/\/ IID709\n+    \"__ ecmovq (Assembler::Condition::positive, r23, rbx, Address(r27, r26, (Address::ScaleFactor)3, +0x922bcc0));\", \/\/ IID710\n+    \"__ ecmovq (Assembler::Condition::parity, r25, r9, Address(r23, +0xd2a14ec));\",       \/\/ IID711\n+    \"__ ecmovq (Assembler::Condition::noParity, r11, r19, Address(r11, -0xfb95a9d));\",    \/\/ IID712\n+    \"__ ecmovq (Assembler::Condition::less, r13, r18, Address(r28, r19, (Address::ScaleFactor)0, +0x716b9b7e));\", \/\/ IID713\n+    \"__ ecmovq (Assembler::Condition::greaterEqual, r21, r16, Address(rcx, r29, (Address::ScaleFactor)0, -0x5af0441e));\", \/\/ IID714\n+    \"__ ecmovq (Assembler::Condition::lessEqual, r12, r31, Address(r20, r26, (Address::ScaleFactor)0, +0xe0b7fb1));\", \/\/ IID715\n+    \"__ ecmovq (Assembler::Condition::greater, r15, r24, Address(r30, +0x2d3b7b4f));\",    \/\/ IID716\n","filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h","additions":1805,"deletions":1557,"binary":false,"changes":3362,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    # 'rax': {64: 'rax', 32: 'eax', 16: 'ax', 8: 'al'},\n+    'rax': {64: 'rax', 32: 'eax', 16: 'ax', 8: 'al'},\n@@ -418,1 +418,1 @@\n-test_regs = list(registers_mapping.keys())\n+test_regs = [key for key in registers_mapping.keys() if key != 'rax']\n@@ -627,0 +627,7 @@\n+                # additional tests with rax as destination\n+                if RegOp in [RegRegImmNddInstruction]:\n+                    test_reg1 = 'rax'\n+                    lp64_flag = handle_lp64_flag(lp64_flag, print_lp64_flag, test_reg1, test_reg2)\n+                    instr = RegOp(*op, reg1=test_reg1, reg2=test_reg2, imm=imm)\n+                    print_instruction(instr, lp64_flag, print_lp64_flag)\n+\n","filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}