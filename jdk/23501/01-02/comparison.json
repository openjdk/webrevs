{"files":[{"patch":"@@ -5552,1 +5552,1 @@\n-  predicate(!UseAPX && UseCountLeadingZerosInstruction);\n+  predicate(UseCountLeadingZerosInstruction);\n@@ -5563,11 +5563,0 @@\n-instruct countLeadingZerosI_nf(rRegI dst, rRegI src) %{\n-  predicate(UseAPX && UseCountLeadingZerosInstruction);\n-  match(Set dst (CountLeadingZerosI src));\n-\n-  format %{ \"elzcntl  $dst, $src\\t# count leading zeros (int  nf)\" %}\n-  ins_encode %{\n-    __ elzcntl($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -5575,1 +5564,1 @@\n-  predicate(!UseAPX && UseCountLeadingZerosInstruction);\n+  predicate(UseCountLeadingZerosInstruction);\n@@ -5586,11 +5575,0 @@\n-instruct countLeadingZerosI_mem_nf(rRegI dst, memory src) %{\n-  predicate(UseAPX && UseCountLeadingZerosInstruction);\n-  match(Set dst (CountLeadingZerosI (LoadI src)));\n-  ins_cost(175);\n-  format %{ \"elzcntl  $dst, $src\\t# count leading zeros (int) nf\" %}\n-  ins_encode %{\n-    __ elzcntl($dst$$Register, $src$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg_mem);\n-%}\n-\n@@ -5623,1 +5601,1 @@\n-  predicate(!UseAPX && UseCountLeadingZerosInstruction);\n+  predicate(UseCountLeadingZerosInstruction);\n@@ -5634,11 +5612,0 @@\n-instruct countLeadingZerosL_nf(rRegI dst, rRegL src) %{\n-  predicate(UseAPX && UseCountLeadingZerosInstruction);\n-  match(Set dst (CountLeadingZerosL src));\n-\n-  format %{ \"elzcntq  $dst, $src\\t# count leading zeros (long nf)\" %}\n-  ins_encode %{\n-    __ elzcntq($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -5646,1 +5613,1 @@\n-  predicate(!UseAPX && UseCountLeadingZerosInstruction);\n+  predicate(UseCountLeadingZerosInstruction);\n@@ -5657,12 +5624,0 @@\n-instruct countLeadingZerosL_mem_nf(rRegI dst, memory src) %{\n-  predicate(UseAPX && UseCountLeadingZerosInstruction);\n-  match(Set dst (CountLeadingZerosL (LoadL src)));\n-\n-  ins_cost(175);\n-  format %{ \"elzcntq  $dst, $src\\t# count leading zeros (long) nf\" %}\n-  ins_encode %{\n-    __ elzcntq($dst$$Register, $src$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg_mem);\n-%}\n-\n@@ -5695,1 +5650,1 @@\n-  predicate(!UseAPX && UseCountTrailingZerosInstruction);\n+  predicate(UseCountTrailingZerosInstruction);\n@@ -5706,11 +5661,0 @@\n-instruct countTrailingZerosI_nf(rRegI dst, rRegI src) %{\n-  predicate(UseAPX && UseCountTrailingZerosInstruction);\n-  match(Set dst (CountTrailingZerosI src));\n-\n-  format %{ \"etzcntl    $dst, $src\\t# count trailing zeros (int nf)\" %}\n-  ins_encode %{\n-    __ etzcntl($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -5718,1 +5662,1 @@\n-  predicate(!UseAPX && UseCountTrailingZerosInstruction);\n+  predicate(UseCountTrailingZerosInstruction);\n@@ -5729,12 +5673,0 @@\n-instruct countTrailingZerosI_mem_nf(rRegI dst, memory src) %{\n-  predicate(UseAPX && UseCountTrailingZerosInstruction);\n-  match(Set dst (CountTrailingZerosI (LoadI src)));\n-\n-  ins_cost(175);\n-  format %{ \"etzcntl    $dst, $src\\t# count trailing zeros (int) nf\" %}\n-  ins_encode %{\n-    __ etzcntl($dst$$Register, $src$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg_mem);\n-%}\n-\n@@ -5762,1 +5694,1 @@\n-  predicate(!UseAPX && UseCountTrailingZerosInstruction);\n+  predicate(UseCountTrailingZerosInstruction);\n@@ -5773,11 +5705,0 @@\n-instruct countTrailingZerosL_nf(rRegI dst, rRegL src) %{\n-  predicate(UseAPX && UseCountTrailingZerosInstruction);\n-  match(Set dst (CountTrailingZerosL src));\n-\n-  format %{ \"etzcntq    $dst, $src\\t# count trailing zeros (long nf)\" %}\n-  ins_encode %{\n-    __ etzcntq($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -5785,1 +5706,1 @@\n-  predicate(!UseAPX && UseCountTrailingZerosInstruction);\n+  predicate(UseCountTrailingZerosInstruction);\n@@ -5796,12 +5717,0 @@\n-instruct countTrailingZerosL_mem_nf(rRegI dst, memory src) %{\n-  predicate(UseAPX && UseCountTrailingZerosInstruction);\n-  match(Set dst (CountTrailingZerosL (LoadL src)));\n-\n-  ins_cost(175);\n-  format %{ \"etzcntq    $dst, $src\\t# count trailing zeros (long) nf\" %}\n-  ins_encode %{\n-    __ etzcntq($dst$$Register, $src$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg_mem);\n-%}\n-\n@@ -5876,1 +5785,1 @@\n-  predicate(!UseAPX && UsePopCountInstruction);\n+  predicate(UsePopCountInstruction);\n@@ -5887,10 +5796,0 @@\n-instruct popCountI_nf(rRegI dst, rRegI src) %{\n-  predicate(UsePopCountInstruction && UseAPX);\n-  match(Set dst (PopCountI src));\n-\n-  format %{ \"epopcntl  $dst, $src\\t pop count (int nf)\" %}\n-  ins_encode %{\n-    __ epopcntl($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n@@ -5899,1 +5798,1 @@\n-  predicate(!UseAPX && UsePopCountInstruction);\n+  predicate(UsePopCountInstruction);\n@@ -5911,11 +5810,0 @@\n-instruct popCountI_mem_nf(rRegI dst, memory mem) %{\n-  predicate(UseAPX && UsePopCountInstruction);\n-  match(Set dst (PopCountI (LoadI mem)));\n-\n-  format %{ \"epopcntl  $dst, $mem\\t pop count (int nf)\" %}\n-  ins_encode %{\n-    __ epopcntl($dst$$Register, $mem$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n@@ -5924,1 +5812,1 @@\n-  predicate(!UseAPX && UsePopCountInstruction);\n+  predicate(UsePopCountInstruction);\n@@ -5935,11 +5823,0 @@\n-\/\/ Note: Long.bitCount(long) returns an int.\n-instruct popCountL_nf(rRegI dst, rRegL src) %{\n-  predicate(UseAPX && UsePopCountInstruction);\n-  match(Set dst (PopCountL src));\n-\n-  format %{ \"epopcntq  $dst, $src\\t# pop count (long nf)\" %}\n-  ins_encode %{\n-    __ epopcntq($dst$$Register, $src$$Register, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n@@ -5949,1 +5826,1 @@\n-  predicate(!UseAPX && UsePopCountInstruction);\n+  predicate(UsePopCountInstruction);\n@@ -5960,11 +5837,0 @@\n-instruct popCountL_mem_nf(rRegI dst, memory mem) %{\n-  predicate(UseAPX && UsePopCountInstruction);\n-  match(Set dst (PopCountL (LoadL mem)));\n-\n-  format %{ \"epopcntq  $dst, $mem\\t pop count (long nf)\" %}\n-  ins_encode %{\n-    __ epopcntq($dst$$Register, $mem$$Address, true);\n-  %}\n-  ins_pipe(ialu_reg);\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":12,"deletions":146,"binary":false,"changes":158,"status":"modified"}]}