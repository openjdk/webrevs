{"files":[{"patch":"@@ -43,1 +43,1 @@\n-\/\/ .\/build\/macosx-aarch64-server-release\/xcode\/build\/jdk\/bin\/java -XX:+UnlockDiagnosticVMOptions -XX:NativeMemoryTracking=summary -XX:NMTBenchmarkRecordedPID=43100 -XX:NMTBenchmarkRecordedLoops=10\n+\/\/ .\/build\/macosx-aarch64-server-release\/xcode\/build\/jdk\/bin\/java -XX:+UnlockDiagnosticVMOptions -XX:NativeMemoryTracking=summary -XX:NMTBenchmarkRecordedPID=55996 -XX:NMTBenchmarkRecordedLoops=10\n@@ -53,0 +53,1 @@\n+#include \"nmt\/memTracker.hpp\"\n@@ -172,1 +173,1 @@\n-#define IS_MALOC(e)          ((e->requested  > 0) && (e->old == nullptr))\n+#define IS_MALLOC(e)         ((e->requested  > 0) && (e->old == nullptr))\n@@ -393,1 +394,1 @@\n-    jlong total = 0;\n+    jlong nanoseconds = 0;\n@@ -412,1 +413,0 @@\n-\n@@ -417,1 +417,1 @@\n-        if (IS_MALOC(e) || (IS_MALLOC_REALLOC(e))) {\n+        if (IS_MALLOC(e) || (IS_MALLOC_REALLOC(e))) {\n@@ -424,6 +424,2 @@\n-          if (MemTracker::enabled()) {\n-            actual += NMT_LogRecorder::mallocSize((address)MallocHeader::resolve_checked(client_ptr));\n-          } else {\n-            actual += NMT_LogRecorder::mallocSize(client_ptr);\n-          }\n-          requested += e->requested;\n+          requested = e->requested;\n+          actual = e->actual;\n@@ -434,1 +430,1 @@\n-          for (off_t j = i; j >= 0; j--) {\n+          for (off_t j = i-1; j >= 0; j--) {\n@@ -436,7 +432,2 @@\n-            if ((e->ptr == p->ptr) && (pointers[j] != nullptr)) {\n-              address client_ptr = pointers[j];\n-              if (MemTracker::enabled()) {\n-                actual -= NMT_LogRecorder::mallocSize((address)MallocHeader::resolve_checked(client_ptr));\n-              } else {\n-                actual -= NMT_LogRecorder::mallocSize(client_ptr);\n-              }\n+            if (e->old == p->ptr) {\n+              address ptr = pointers[j];\n@@ -444,0 +435,1 @@\n+              actual -= p->actual;\n@@ -446,1 +438,1 @@\n-                client_ptr = (address)os::realloc(client_ptr, e->requested, mem_tag, stack);\n+                ptr = (address)os::realloc(ptr, e->requested, mem_tag, stack);\n@@ -449,5 +441,0 @@\n-              if (MemTracker::enabled()) {\n-                actual += NMT_LogRecorder::mallocSize((address)MallocHeader::resolve_checked(client_ptr));\n-              } else {\n-                actual += NMT_LogRecorder::mallocSize(client_ptr);\n-              }\n@@ -455,1 +442,2 @@\n-              pointers[i] = client_ptr;\n+              actual += e->actual;\n+              pointers[i] = ptr;\n@@ -463,1 +451,1 @@\n-          for (off_t j = i; j >= 0; j--) {\n+          for (off_t j = i-1; j >= 0; j--) {\n@@ -465,7 +453,2 @@\n-            if ((e->ptr == p->ptr) && (pointers[j] != nullptr)) {\n-              void* client_ptr = pointers[j];\n-              if (MemTracker::enabled()) {\n-                actual -= NMT_LogRecorder::mallocSize((address)MallocHeader::resolve_checked(client_ptr));\n-              } else {\n-                actual -= NMT_LogRecorder::mallocSize(client_ptr);\n-              }\n+            if ((e->old == p->ptr) || (e->ptr == p->ptr)) {\n+              void* ptr = pointers[j];\n@@ -473,0 +456,1 @@\n+              actual -= p->actual;\n@@ -475,1 +459,1 @@\n-                os::free(client_ptr);\n+                os::free(ptr);\n@@ -487,1 +471,0 @@\n-\n@@ -490,0 +473,1 @@\n+        \/\/fprintf(stderr, \"requested:%ld, actual:%ld\\n\", requested, actual);\n@@ -492,1 +476,1 @@\n-      total += duration;\n+      nanoseconds += duration;\n@@ -497,1 +481,1 @@\n-      char type = (IS_MALOC(e) * 1) | (IS_REALLOC(e) * 2) | (IS_FREE(e) * 4);\n+      char type = (IS_MALLOC(e) * 1) | (IS_REALLOC(e) * 2) | (IS_FREE(e) * 4);\n@@ -503,1 +487,1 @@\n-    fprintf(stderr, \"time:%ld[ns] [samples:%ld] memory overhead=%'zu bytes [%.2f%%] [requestedTotal=%'zu actualTotal=%'zu]\\n\", total, count, overhead, overheadPercentage, requestedTotal, actualTotal);\n+    fprintf(stderr, \"time:%'ld[ns] [samples:%'ld] memory overhead=%'zu bytes [%.2f%%] [requestedTotal=%'zu actualTotal=%'zu]\\n\", nanoseconds, count, overhead, overheadPercentage, requestedTotal, actualTotal);\n@@ -543,7 +527,1 @@\n-#if defined(LINUX)\n-        entry.actual = permit_forbidden_function::malloc_usable_size(ptr);\n-#elif defined(WINDOWS)\n-        entry.actual = permit_forbidden_function::_msize(ptr);\n-#elif defined(__APPLE__)\n-        entry.actual = permit_forbidden_function::malloc_size(ptr);\n-#endif\n+        entry.actual = NMT_LogRecorder::mallocSize(ptr);\n@@ -602,7 +580,1 @@\n-#if defined(LINUX)\n-        actual = permit_forbidden_function::malloc_usable_size(ptr);\n-#elif defined(WINDOWS)\n-        actual = permit_forbidden_function::_msize(ptr);\n-#elif defined(__APPLE__)\n-        actual = permit_forbidden_function::malloc_size(ptr);\n-#endif\n+        actual = NMT_LogRecorder::mallocSize(ptr);\n@@ -620,0 +592,16 @@\n+void NMT_MemoryLogRecorder::print(Entry *e) {\n+  if (e == nullptr) {\n+    fprintf(stderr, \"nullptr\\n\");\n+  } else {\n+    if (IS_FREE(e)) {\n+      fprintf(stderr, \"           FREE: \");\n+    } else if (IS_REALLOC(e)) {\n+      fprintf(stderr, \"        REALLOC: \");\n+    } else if (IS_MALLOC_REALLOC(e)) {\n+      fprintf(stderr, \"MALLOC\/RERALLOC: \");\n+    } else if (IS_MALLOC(e)) {\n+      fprintf(stderr, \"         MALLOC: \");\n+    }\n+    fprintf(stderr, \"time:%15ld, thread:%6ld, ptr:%14p, old:%14p, requested:%8ld, actual:%8ld, mem_tag:%s\\n\", e->time, e->thread, e->ptr, e->old, e->requested, e->actual, NMTUtil::tag_to_name(NMTUtil::index_to_tag((int)e->mem_tag)));\n+  }\n+}\n@@ -704,1 +692,1 @@\n-\n+        \n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":42,"deletions":54,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-  struct Entry {\n+    struct Entry {\n@@ -97,0 +97,1 @@\n+  static void print(Entry *e);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}