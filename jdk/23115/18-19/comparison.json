{"files":[{"patch":"@@ -79,3 +79,17 @@\n-void NMT_LogRecorder::initialize(intx memoryCount, intx virtualMemoryCount) {\n-  NMT_MemoryLogRecorder::initialize(NMTRecordMemoryAllocations);\n-  NMT_VirtualMemoryLogRecorder::initialize(NMTRecordVirtualMemoryAllocations);\n+void NMT_LogRecorder::initialize() {\n+  char* NMTRecordMemoryAllocations = getenv(\"NMTRecordMemoryAllocations\");\n+  if (NMTRecordMemoryAllocations != nullptr) {\n+    long count = atol(NMTRecordMemoryAllocations);\n+    if (count == 0) {\n+      count = strtol(NMTRecordMemoryAllocations, NULL, 16);\n+    }\n+    NMT_MemoryLogRecorder::initialize(count);\n+  }\n+  char* NMTRecordVirtualMemoryAllocations = getenv(\"NMTRecordVirtualMemoryAllocations\");\n+  if (NMTRecordVirtualMemoryAllocations != nullptr) {\n+    long count = atol(NMTRecordVirtualMemoryAllocations);\n+    if (count == 0) {\n+      count = strtol(NMTRecordVirtualMemoryAllocations, NULL, 16);\n+    }\n+    NMT_VirtualMemoryLogRecorder::initialize(count);\n+  }\n@@ -93,3 +107,7 @@\n-void NMT_LogRecorder::replay(const int pid) {\n-  NMT_MemoryLogRecorder::instance()->replay(pid);\n-  NMT_VirtualMemoryLogRecorder::instance()->replay(pid);\n+void NMT_LogRecorder::replay() {\n+  char* NMTBenchmarkRecordedPID = getenv(\"NMTBenchmarkRecordedPID\");\n+  if (NMTBenchmarkRecordedPID != nullptr) {\n+    int pid = atoi(NMTBenchmarkRecordedPID);\n+    NMT_MemoryLogRecorder::instance()->replay(pid);\n+    NMT_VirtualMemoryLogRecorder::instance()->replay(pid);\n+  }\n@@ -314,1 +332,1 @@\n-      fprintf(stderr, \">> _memLogRecorder._log_fd:%d\\n\", recorder->_log_fd);\n+      \/\/fprintf(stderr, \">> _memLogRecorder._log_fd:%d\\n\", recorder->_log_fd);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  static void initialize(intx memoryCount, intx virtualMemoryCount);\n+  static void initialize();\n@@ -53,1 +53,1 @@\n-  static void replay(const int pid);\n+  static void replay();\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-  NMT_LogRecorder::initialize(NMTRecordMemoryAllocations, NMTRecordVirtualMemoryAllocations);\n+  NMT_LogRecorder::initialize();\n@@ -99,1 +99,1 @@\n-  NMT_LogRecorder::replay(NMTBenchmarkRecordedPID);\n+  NMT_LogRecorder::replay();\n","filename":"src\/hotspot\/share\/nmt\/memTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -580,16 +580,0 @@\n-  product(intx, NMTRecordMemoryAllocations, 0, DIAGNOSTIC,                  \\\n-          \"Record the specified number of memory allocations.\"              \\\n-          \" 0: (the default) disables this feature.\"                        \\\n-          \" max_jint (0x7FFFFFFF): keep recording until the process exits\") \\\n-          range(0, max_jint)                                                \\\n-                                                                            \\\n-  product(intx, NMTRecordVirtualMemoryAllocations, 0, DIAGNOSTIC,           \\\n-          \"Record the specified number of virtual memory allocations.\"      \\\n-          \" 0: (the default) disables this feature.\"                        \\\n-          \" max_jint (0x7FFFFFFF): keep recording until the process exits\") \\\n-          range(0, max_jint)                                                \\\n-                                                                            \\\n-  product(int, NMTBenchmarkRecordedPID, 0, DIAGNOSTIC,                      \\\n-          \"Benchmark memory allocations using results recorderd with PID\")  \\\n-          range(0, max_jint)                                                \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"}]}