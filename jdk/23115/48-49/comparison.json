{"files":[{"patch":"@@ -138,2 +138,2 @@\n-  _threads_names_counter = 1;\n-  _threads_names = (thread_name_info*)permit_forbidden_function::calloc(_threads_names_counter, sizeof(thread_name_info));\n+  _threads_names_size = 1;\n+  _threads_names = (thread_name_info*)permit_forbidden_function::calloc(_threads_names_size, sizeof(thread_name_info));\n@@ -170,6 +170,11 @@\n-#if defined(LINUX) || defined(__APPLE__)\n-  return (intx)pthread_self();\n-#elif defined(_WIN64)\n-  \/\/ TODO: NMT_LogRecorder::thread_id\n-  return 0;\n-#endif\n+  return os::current_thread_id();\n+\/\/#if defined(LINUX) || defined(__APPLE__)\n+\/\/  intx tid = (intx)pthread_self();\n+\/\/  if (tid == 0) {\n+\/\/    fprintf(stderr, \"NMT_LogRecorder::thread_id: %6ld\\n\", tid);\n+\/\/  }\n+\/\/  return tid;\n+\/\/#elif defined(_WIN64)\n+\/\/  \/\/ TODO: NMT_LogRecorder::thread_id\n+\/\/  return 0;\n+\/\/#endif\n@@ -178,1 +183,1 @@\n-void NMT_LogRecorder::thread_name(char* buf) {\n+void NMT_LogRecorder::get_thread_name(char* buf) {\n@@ -192,0 +197,2 @@\n+\/\/ first time we see a new thread id, we add it\n+\/\/ second time we see a thread we get its name\n@@ -193,3 +200,21 @@\n-  for (size_t i = 0; i < _threads_names_counter; i++) {\n-    if (_threads_names[i].thread == thread_id()) {\n-      return;\n+  NMT_LogRecorder::lock();\n+  {\n+    bool found = false;\n+    intx tid = NMT_LogRecorder::thread_id();\n+    for (size_t i = 0; i < _threads_names_size; i++) {\n+      if (_threads_names[i].thread == tid) {\n+        found = true;\n+        if (_threads_names[i].name[0] == 0) {\n+          NMT_LogRecorder::get_thread_name(_threads_names[i].name);\n+          \/\/fprintf(stderr, \" got name for thread %6ld:%lx [%s]\\n\", tid, tid, _threads_names[i].name);\n+        }\n+        break;\n+      }\n+    }\n+    if (!found) {\n+      \/\/fprintf(stderr, \" added:%6ld:%lx [%6zu]\\n\", tid, tid, _threads_names_size);\n+      size_t i = _threads_names_size-1;\n+      _threads_names[i].thread = tid;\n+      _threads_names[i].name[0] = 0;\n+      _threads_names_size++;\n+      _threads_names = (thread_name_info*)permit_forbidden_function::realloc((void*)_threads_names, _threads_names_size*sizeof(thread_name_info));\n@@ -198,8 +223,1 @@\n-  static char name[MAXTHREADNAMESIZE];\n-  thread_name(name);\n-  if (strlen(name) > 0) {\n-    _threads_names_counter++;\n-    _threads_names = (thread_name_info*)permit_forbidden_function::realloc((void*)_threads_names, (_threads_names_counter+1)*sizeof(thread_name_info));\n-    _threads_names[_threads_names_counter-1].thread = thread_id();\n-    strncpy((char*)_threads_names[_threads_names_counter-1].name, name, MAXTHREADNAMESIZE);\n-  }\n+  NMT_LogRecorder::unlock();\n@@ -370,1 +388,1 @@\n-      _write_and_check(threads_fd, recorder->_threads_names, recorder->_threads_names_counter*sizeof(thread_name_info));\n+      _write_and_check(threads_fd, recorder->_threads_names, (recorder->_threads_names_size-1)*sizeof(thread_name_info));\n@@ -431,0 +449,3 @@\n+\/\/  for (int i = 0; i < countThreads; i++) {\n+\/\/    fprintf(stderr, \"thread: %64s:%6ld\\n\", thread_entries[i].name, thread_entries[i].thread);\n+\/\/  }\n@@ -574,0 +595,1 @@\n+    bool found = false;\n@@ -577,0 +599,1 @@\n+        found = true;\n@@ -581,0 +604,5 @@\n+    if (!found) {\n+      fprintf(stderr, \"NOT FOUND: %6ld\\n\", thread_entries[i].thread);\n+      NMT_MemoryLogRecorder::print(e);\n+    }\n+\n@@ -653,3 +681,4 @@\n-  fprintf(stderr, \"-------------------------------------------------------------------------------------------------------------------------\\n\");\n-  fprintf(stderr, \"threads info:\\n\\n\");\n-  for (int i = 1; i < countThreads; i++) {\n+  fprintf(stderr, \"threads allocations info:\\n\\n\");\n+  fprintf(stderr, \"%64s: %15s: %8s:\\n\", \"thread\", \"operations\", \"ops%\");\n+  fprintf(stderr, \"--------------------------------------------------------------------------------------------\\n\");\n+  for (int i = 0; i < countThreads; i++) {\n@@ -658,1 +687,1 @@\n-      fprintf(stderr, \"%32s: \" LD_FORMAT2 \" [ops]     %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n+      fprintf(stderr, \"%64s: \" LD_FORMAT2 \" [ops]     %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n@@ -660,1 +689,1 @@\n-      fprintf(stderr, \"%32s: \" LD_FORMAT2 \" [ops]    %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n+      fprintf(stderr, \"%64s: \" LD_FORMAT2 \" [ops]    %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n@@ -740,14 +769,14 @@\n-\/\/void NMT_MemoryLogRecorder::print(Entry *e) {\n-\/\/  if (e == nullptr) {\n-\/\/    fprintf(stderr, \"nullptr\\n\");\n-\/\/  } else {\n-\/\/    if (IS_FREE(e)) {\n-\/\/      fprintf(stderr, \"           FREE: \");\n-\/\/    } else if (IS_REALLOC(e)) {\n-\/\/      fprintf(stderr, \"        REALLOC: \");\n-\/\/    } else if (IS_MALLOC(e)) {\n-\/\/      fprintf(stderr, \"         MALLOC: \");\n-\/\/    }\n-\/\/    fprintf(stderr, \"time:%15ld, thread:%6ld, ptr:%14p, old:%14p, requested:%8ld, actual:%8ld, mem_tag:%s\\n\", e->time, e->thread, e->ptr, e->old, e->requested, e->actual, NMTUtil::tag_to_name(NMTUtil::index_to_tag((int)e->mem_tag)));\n-\/\/  }\n-\/\/}\n+void NMT_MemoryLogRecorder::print(Entry *e) {\n+  if (e == nullptr) {\n+    fprintf(stderr, \"nullptr\\n\");\n+  } else {\n+    if (IS_FREE(e)) {\n+      fprintf(stderr, \"           FREE: \");\n+    } else if (IS_REALLOC(e)) {\n+      fprintf(stderr, \"        REALLOC: \");\n+    } else if (IS_MALLOC(e)) {\n+      fprintf(stderr, \"         MALLOC: \");\n+    }\n+    fprintf(stderr, \"time:%15ld, thread:%6ld, ptr:%14p, old:%14p, requested:%8ld, actual:%8ld, mem_tag:%s\\n\", e->time, e->thread, e->ptr, e->old, e->requested, e->actual, NMTUtil::tag_to_name(NMTUtil::index_to_tag((int)e->mem_tag)));\n+  }\n+}\n@@ -915,1 +944,1 @@\n-      entry.thread = os::current_thread_id();\n+      entry.thread = NMT_LogRecorder::thread_id();\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":70,"deletions":41,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  volatile size_t _threads_names_counter = 0;\n+  volatile size_t _threads_names_size = 0;\n@@ -53,0 +53,1 @@\n+  intx access[1024];\n@@ -67,1 +68,1 @@\n-  void thread_name(char* buf);\n+  void get_thread_name(char* buf);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}