{"files":[{"patch":"@@ -81,0 +81,1 @@\n+#define LD_FORMAT2 \"%10ld\"\n@@ -86,0 +87,1 @@\n+#define LD_FORMAT2 \"%'10ld\"\n@@ -417,0 +419,13 @@\n+  file_info threads_fi = _open_file_and_read(THREADS_LOG_FILE, path, pid);\n+  if (threads_fi.fd == -1) {\n+    return;\n+  }\n+  thread_name_info* thread_entries = (thread_name_info*)threads_fi.ptr;\n+  long int countThreads = (long int)(threads_fi.size \/ sizeof(thread_name_info));\n+  long int* histogramsThreads = nullptr;\n+#if !defined(_WIN64)\n+  long int size_threads = (long int)(countThreads * sizeof(long int));\n+  histogramsThreads = (long int*)::mmap(NULL, size_threads, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANONYMOUS, -1, 0);\n+  assert(histogramsThreads != MAP_FAILED, \"histogramsThreads != MAP_FAILED\");\n+#endif\n+\n@@ -559,0 +574,7 @@\n+    for (int i = 0; i < countThreads; i++) {\n+      if (e->thread == thread_entries[i].thread) {\n+        histogramsThreads[i]++;\n+        break;\n+      }\n+    }\n+\n@@ -630,0 +652,12 @@\n+  fprintf(stderr, \"\\n\\n\");\n+  fprintf(stderr, \"-------------------------------------------------------------------------------------------------------------------------\\n\");\n+  fprintf(stderr, \"threads info:\\n\\n\");\n+  for (int i = 1; i < countThreads; i++) {\n+    double percentageOps = 100.0 * (double)histogramsThreads[i] \/ (double)count;\n+    if (percentageOps < 10.0) {\n+      fprintf(stderr, \"%32s: \" LD_FORMAT2 \" [ops]     %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n+    } else {\n+      fprintf(stderr, \"%32s: \" LD_FORMAT2 \" [ops]    %.2f%%\\n\", thread_entries[i].name, histogramsThreads[i], percentageOps);\n+    }\n+  }\n+\n@@ -631,0 +665,1 @@\n+  _close_and_check(threads_fi.fd);\n@@ -643,0 +678,1 @@\n+  munmap((void*)histogramsThreads, size_threads);\n@@ -661,1 +697,1 @@\n-      entry.thread = os::current_thread_id();\n+      entry.thread = NMT_LogRecorder::thread_id();\n@@ -774,9 +810,0 @@\n-  \/\/ compare the recorded and current levels of NMT and exit if different\n-  \/\/    file_info log_fi = _open_file_and_read(INFO_LOG_FILE, path, pid);\n-  \/\/    size_t* status_file_bytes = (size_t*)log_fi.ptr;\n-  \/\/    NMT_TrackingLevel recorded_nmt_level = (NMT_TrackingLevel)status_file_bytes[0];\n-  \/\/    if (NMTUtil::parse_tracking_level(NativeMemoryTracking) != recorded_nmt_level) {\n-  \/\/      tty->print(\"NativeMemoryTracking mismatch [%u != %u].\\n\", recorded_nmt_level, NMTUtil::parse_tracking_level(NativeMemoryTracking));\n-  \/\/      tty->print(\"Re-run with \\\"-XX:NativeMemoryTracking=%s\\\"\\n\", NMTUtil::tracking_level_to_string(recorded_nmt_level));\n-  \/\/      os::exit(-1);\n-  \/\/    }\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":37,"deletions":10,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+  static intx thread_id();\n@@ -66,1 +67,0 @@\n-  intx thread_id();\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}