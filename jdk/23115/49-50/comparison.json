{"files":[{"patch":"@@ -181,2 +181,0 @@\n-  NMT_MemoryLogRecorder::log_malloc(mem_tag, size, malloc_base, &stack, old_malloc_base);\n-\n@@ -213,2 +211,0 @@\n-  NMT_MemoryLogRecorder::log_free(header);\n-\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -366,1 +366,0 @@\n-      \/\/fprintf(stderr, \">> _memLogRecorder._log_fd:%d\\n\", recorder->_log_fd);\n@@ -407,0 +406,1 @@\n+  os::exit(0);\n@@ -478,0 +478,1 @@\n+\n@@ -484,0 +485,3 @@\n+  long int countFree = 0;\n+  long int countMalloc = 0;\n+  long int countRealloc = 0;\n@@ -507,14 +511,1 @@\n-      if (IS_MALLOC(e)) {\n-        address client_ptr = nullptr;\n-        start = os::javaTimeNanos();\n-        {\n-          client_ptr = (address)os::malloc(e->requested, mem_tag, stack);\n-        }\n-        end = os::javaTimeNanos();\n-        requested = (long int)e->requested;\n-        actual = (long int)e->actual;\n-        pointers[i] = client_ptr;\n-        if (mem_tag == mtNone) {\n-          fprintf(stderr, \"MALLOC?\\n\");\n-        }\n-      } else if (IS_REALLOC(e)) {\n+      if (IS_REALLOC(e)) {\n@@ -526,0 +517,1 @@\n+            countRealloc++;\n@@ -544,0 +536,14 @@\n+      } else if (IS_MALLOC(e)) {\n+          countMalloc++;\n+          address ptr = nullptr;\n+          start = os::javaTimeNanos();\n+          {\n+            ptr = (address)os::malloc(e->requested, mem_tag, stack);\n+          }\n+          end = os::javaTimeNanos();\n+          requested = (long int)e->requested;\n+          actual = (long int)e->actual;\n+          pointers[i] = ptr;\n+          if (mem_tag == mtNone) {\n+            fprintf(stderr, \"MALLOC?\\n\");\n+          }\n@@ -550,0 +556,1 @@\n+            countFree++;\n@@ -577,2 +584,4 @@\n-        headers--;\n-        nmtObjectsByCategory[NMTUtil::tag_to_index(mem_tag)]--;\n+        if (mem_tag != mtNone) {\n+          headers--;\n+          nmtObjectsByCategory[NMTUtil::tag_to_index(mem_tag)]--;\n+        }\n@@ -604,5 +613,0 @@\n-    if (!found) {\n-      fprintf(stderr, \"NOT FOUND: %6ld\\n\", thread_entries[i].thread);\n-      NMT_MemoryLogRecorder::print(e);\n-    }\n-\n@@ -619,1 +623,4 @@\n-  long int overhead_NMT = (long int)(headers * MemTracker::overhead_per_malloc());\n+  long int overhead_NMT = 0;\n+  if (MemTracker::enabled()) {\n+    overhead_NMT = (long int)(headers * MemTracker::overhead_per_malloc());\n+  }\n@@ -627,0 +634,1 @@\n+    fprintf(stderr, \"[malloc#:\" LD_FORMAT \"] [realloc#:\" LD_FORMAT \"] [free#:\" LD_FORMAT \"]\\n\", countMalloc, countRealloc, countFree);\n@@ -715,1 +723,1 @@\n-void NMT_MemoryLogRecorder::_log(MemTag mem_tag, size_t requested, address ptr, address old, const NativeCallStack *stack){\n+void NMT_MemoryLogRecorder::_record(MemTag mem_tag, size_t requested, address ptr, address old, const NativeCallStack *stack){\n@@ -717,1 +725,0 @@\n-  \/\/fprintf(stderr, \"NMT_MemoryLogRecorder::log(%16s, %6ld, %12p, %12p)\\n\", NMTUtil::tag_to_name(mem_tag), requested, ptr, old);\n@@ -729,0 +736,1 @@\n+      fprintf(stderr, \"record %p:%zu:%p\\n\", ptr, requested, old);fflush(stderr);\n@@ -730,3 +738,0 @@\n-      if (entry.requested > 0) {\n-        \/\/entry.requested += MemTracker::overhead_per_malloc();\n-      }\n@@ -741,1 +746,1 @@\n-        \/\/ are used, so they get benchmarked\n+        \/\/ are used, so they get benchmarked as well\n@@ -760,3 +765,9 @@\n-void NMT_MemoryLogRecorder::log_free(void *ptr) {\n-  \/\/fprintf(stderr, \"NMT_MemoryLogRecorder::log(%16p)\\n\", ptr);\n-  NMT_MemoryLogRecorder::_log(mtNone, 0, (address)ptr, nullptr, nullptr);\n+void NMT_MemoryLogRecorder::record_free(void *ptr) {\n+  NMT_MemoryLogRecorder *recorder = NMT_MemoryLogRecorder::instance();\n+  if (!recorder->done()) {\n+    address resolved_ptr = (address)ptr;\n+    if (MemTracker::enabled()) {\n+      resolved_ptr = (address)ptr - 16;\n+    }\n+    NMT_MemoryLogRecorder::_record(mtNone, 0, resolved_ptr, nullptr, nullptr);\n+  }\n@@ -765,2 +776,11 @@\n-void NMT_MemoryLogRecorder::log_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old) {\n-  NMT_MemoryLogRecorder::_log(mem_tag, requested, (address)ptr, (address)old, stack);\n+void NMT_MemoryLogRecorder::record_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old) {\n+  NMT_MemoryLogRecorder *recorder = NMT_MemoryLogRecorder::instance();\n+  if (!recorder->done()) {\n+    address resolved_old = (address)old;\n+    if (old != nullptr) {\n+      if (MemTracker::enabled()) {\n+        resolved_old = (address)old - 16;\n+      }\n+    }\n+    NMT_MemoryLogRecorder::_record(mem_tag, requested, (address)ptr, resolved_old, stack);\n+  }\n@@ -930,2 +950,2 @@\n-void NMT_VirtualMemoryLogRecorder::_log(NMT_VirtualMemoryLogRecorder::Type type, MemTag mem_tag, MemTag mem_tag_split, size_t size, size_t size_split, address ptr, const NativeCallStack *stack) {\n-  \/\/fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::log (%s, %hhu, %hhu, %ld, %ld, %p, %p)\\n\",\n+void NMT_VirtualMemoryLogRecorder::_record(NMT_VirtualMemoryLogRecorder::Type type, MemTag mem_tag, MemTag mem_tag_split, size_t size, size_t size_split, address ptr, const NativeCallStack *stack) {\n+  \/\/fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::record (%s, %hhu, %hhu, %ld, %ld, %p, %p)\\n\",\n@@ -971,2 +991,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_reserve(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::RESERVE, mem_tag, mtNone, size, 0, (address)addr, &stack);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_reserve(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::RESERVE, mem_tag, mtNone, size, 0, (address)addr, &stack);\n@@ -975,2 +995,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_release(address addr, size_t size) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::RELEASE, mtNone, mtNone, size, 0, (address)addr, nullptr);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_release(address addr, size_t size) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::RELEASE, mtNone, mtNone, size, 0, (address)addr, nullptr);\n@@ -979,2 +999,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_uncommit(address addr, size_t size) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::UNCOMMIT, mtNone, mtNone, size, 0, (address)addr, nullptr);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_uncommit(address addr, size_t size) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::UNCOMMIT, mtNone, mtNone, size, 0, (address)addr, nullptr);\n@@ -983,2 +1003,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_reserve_and_commit(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::RESERVE_AND_COMMIT, mem_tag, mtNone, size, 0, (address)addr, &stack);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_reserve_and_commit(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::RESERVE_AND_COMMIT, mem_tag, mtNone, size, 0, (address)addr, &stack);\n@@ -987,2 +1007,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_commit(void* addr, size_t size, const NativeCallStack& stack) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::COMMIT, mtNone, mtNone, size, 0, (address)addr, &stack);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_commit(void* addr, size_t size, const NativeCallStack& stack) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::COMMIT, mtNone, mtNone, size, 0, (address)addr, &stack);\n@@ -991,2 +1011,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_split_reserved(void* addr, size_t size, size_t split, MemTag mem_tag, MemTag split_mem_tag) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::SPLIT_RESERVED, mem_tag, split_mem_tag, size, split, (address)addr, nullptr);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_split_reserved(void* addr, size_t size, size_t split, MemTag mem_tag, MemTag split_mem_tag) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::SPLIT_RESERVED, mem_tag, split_mem_tag, size, split, (address)addr, nullptr);\n@@ -995,2 +1015,2 @@\n-void NMT_VirtualMemoryLogRecorder::log_virtual_memory_tag(void* addr, MemTag mem_tag) {\n-  NMT_VirtualMemoryLogRecorder::_log(Type::TAG, mem_tag, mtNone, 0, 0, (address)addr, nullptr);\n+void NMT_VirtualMemoryLogRecorder::record_virtual_memory_tag(void* addr, MemTag mem_tag) {\n+  NMT_VirtualMemoryLogRecorder::_record(Type::TAG, mem_tag, mtNone, 0, 0, (address)addr, nullptr);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":70,"deletions":50,"binary":false,"changes":120,"status":"modified"},{"patch":"@@ -103,2 +103,2 @@\n-  static void log_free(void *ptr);\n-  static void log_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr);\n+  static void record_free(void *ptr);\n+  static void record_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr);\n@@ -108,1 +108,1 @@\n-  static void _log(MemTag mem_tag, size_t requested, address ptr, address old, const NativeCallStack *stack);\n+  static void _record(MemTag mem_tag, size_t requested, address ptr, address old, const NativeCallStack *stack);\n@@ -147,7 +147,7 @@\n-  static void log_virtual_memory_reserve(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag = mtNone);\n-  static void log_virtual_memory_release(address addr, size_t size);\n-  static void log_virtual_memory_uncommit(address addr, size_t size);\n-  static void log_virtual_memory_reserve_and_commit(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag = mtNone);\n-  static void log_virtual_memory_commit(void* addr, size_t size, const NativeCallStack& stack);\n-  static void log_virtual_memory_split_reserved(void* addr, size_t size, size_t split, MemTag flag, MemTag mem_tag_split);\n-  static void log_virtual_memory_tag(void* addr, MemTag mem_tag);\n+  static void record_virtual_memory_reserve(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag = mtNone);\n+  static void record_virtual_memory_release(address addr, size_t size);\n+  static void record_virtual_memory_uncommit(address addr, size_t size);\n+  static void record_virtual_memory_reserve_and_commit(void* addr, size_t size, const NativeCallStack& stack, MemTag mem_tag = mtNone);\n+  static void record_virtual_memory_commit(void* addr, size_t size, const NativeCallStack& stack);\n+  static void record_virtual_memory_split_reserved(void* addr, size_t size, size_t split, MemTag flag, MemTag mem_tag_split);\n+  static void record_virtual_memory_tag(void* addr, MemTag mem_tag);\n@@ -156,1 +156,1 @@\n-  static void _log(NMT_VirtualMemoryLogRecorder::Type type, MemTag mem_tag, MemTag mem_tag_split, size_t size, size_t size_split, address ptr, const NativeCallStack *stack);\n+  static void _record(NMT_VirtualMemoryLogRecorder::Type type, MemTag mem_tag, MemTag mem_tag_split, size_t size, size_t size_split, address ptr, const NativeCallStack *stack);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+    void* ptr = mem_base;\n@@ -83,1 +84,1 @@\n-      return MallocTracker::record_malloc(mem_base, size, mem_tag, stack, old_base);\n+      ptr = MallocTracker::record_malloc(mem_base, size, mem_tag, stack, old_base);\n@@ -85,1 +86,2 @@\n-    return mem_base;\n+    NMT_MemoryLogRecorder::record_malloc(mem_tag, size, mem_base, &stack, old_base);\n+    return ptr;\n@@ -92,0 +94,1 @@\n+    NMT_MemoryLogRecorder::record_free(memblock);\n@@ -130,1 +133,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_reserve((address)addr, size, stack, mem_tag);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_reserve((address)addr, size, stack, mem_tag);\n@@ -139,1 +142,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_release((address)addr, size);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_release((address)addr, size);\n@@ -148,1 +151,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_uncommit((address)addr, size);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_uncommit((address)addr, size);\n@@ -159,1 +162,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_reserve_and_commit((address)addr, size, stack, mem_tag);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_reserve_and_commit((address)addr, size, stack, mem_tag);\n@@ -171,1 +174,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_commit((address)addr, size, stack);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_commit((address)addr, size, stack);\n@@ -220,1 +223,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_split_reserved((address)addr, size, split, mem_tag, split_tag);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_split_reserved((address)addr, size, split, mem_tag, split_tag);\n@@ -230,1 +233,1 @@\n-      NMT_VirtualMemoryLogRecorder::log_virtual_memory_tag((address)addr, mem_tag);\n+      NMT_VirtualMemoryLogRecorder::record_virtual_memory_tag((address)addr, mem_tag);\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}