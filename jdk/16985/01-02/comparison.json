{"files":[{"patch":"@@ -445,0 +445,4 @@\n+  for (uint i = 0; i < GCOverheadLimitThreshold; i++) {\n+    _gc_historical_utilization[i] = 0.0;\n+    _gc_historical_duration[i] = 0.0;\n+  }\n@@ -511,0 +515,1 @@\n+  _gcu_historical(0.0),\n@@ -876,3 +881,0 @@\n-}\n-\n-bool ShenandoahHeap::gc_overhead_exceeds_limit() {\n@@ -882,1 +884,1 @@\n-    weighted_sum = _gc_historical_utilization[i] * _gc_historical_duration[i];\n+    weighted_sum += _gc_historical_utilization[i] * _gc_historical_duration[i];\n@@ -884,0 +886,5 @@\n+#undef KELVIN_OVERHEAD\n+#ifdef KELVIN_OVERHEAD\n+    log_info(gc)(\"history[%u] utilization: %.3f, duration: %.3f, weighted sum: %.3f, total_duration: %.3f\",\n+                 i, _gc_historical_utilization[i], _gc_historical_duration[i], weighted_sum, total_duration);\n+#endif\n@@ -885,2 +892,12 @@\n-  uint weighted_avg = (uint) ((total_duration > 0)? 100 * weighted_sum \/ total_duration: 0.0);\n-  return (weighted_avg > GCTimeLimit);\n+  _gcu_historical = ((total_duration > 0)? weighted_sum \/ total_duration: 0.0);\n+#ifdef KELVIN_OVERHEAD\n+  log_info(gc)(\"computed utilization as weighted average: %.3f\", _gcu_historical);\n+#endif\n+}\n+\n+bool ShenandoahHeap::gc_overhead_exceeds_limit() {\n+  double target_threshold = GCTimeLimit \/ 100.0;\n+#ifdef KELVIN_OVERHEAD\n+  log_info(gc)(\"testing gc_overhead %.3f against threshold: %.3f\", _gcu_historical, target_threshold);\n+#endif\n+  return (_gcu_historical > target_threshold);\n@@ -916,1 +933,3 @@\n-        *gc_overhead_limit_was_exceeded = true;\n+        if (gc_overhead_limit_was_exceeded != nullptr) {\n+          *gc_overhead_limit_was_exceeded = true;\n+        }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":26,"deletions":7,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -300,1 +300,2 @@\n-  size_t _gc_history_first;;\n+  double _gcu_historical;\n+  size_t _gc_history_first;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  product(uint, ShenandoahGCTimeLimit, 75, EXPERIMENTAL,                    \\\n+  product(uint, ShenandoahGCTimeLimit, 90, EXPERIMENTAL,                    \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}