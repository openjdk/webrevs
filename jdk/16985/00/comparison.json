{"files":[{"patch":"@@ -878,12 +878,0 @@\n-    \/\/ Check that gc overhead is not exceeded.\n-    \/\/\n-    \/\/ Shenandoah will grind along for quite a while allocating one\n-    \/\/ object at a time using shared (non-tlab) allocations. This check\n-    \/\/ is testing that the GC overhead limit has not been exceeded.\n-    \/\/ This will notify the collector to start a cycle, but will raise\n-    \/\/ an OOME to the mutator if the last Full GCs have not made progress.\n-    if (result == nullptr && !req.is_lab_alloc() && get_gc_no_progress_count() > ShenandoahNoProgressThreshold) {\n-      control_thread()->handle_alloc_failure(req, false);\n-      return nullptr;\n-    }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"}]}