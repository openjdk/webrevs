{"files":[{"patch":"@@ -106,6 +106,1 @@\n-    if (jt->thread_state() == _thread_in_Java) {\n-      ThreadInVMfromJava transition(jt);\n-      event.commit();\n-      return;\n-    } else if (jt->thread_state() != _thread_in_vm) {\n-      assert(jt->thread_state() == _thread_in_native, \"invariant\");\n+    if (jt->thread_state() == _thread_in_native) {\n@@ -117,0 +112,3 @@\n+    \/\/ If a thread comes here still _thread_in_Java, which can happen for example\n+    \/\/ when loading the disassembler library in response to traps in JIT code - all is ok.\n+    \/\/ Since there is no ljf, an event will be committed without a stacktrace.\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrNativeLibraryLoadEvent.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}