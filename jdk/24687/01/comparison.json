{"files":[{"patch":"@@ -730,1 +730,0 @@\n-java\/util\/logging\/LoggingDeadlock5.java       8354424 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -33,0 +34,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -118,1 +121,7 @@\n-        private final static Duration JOIN_WAIT = Duration.ofMillis(500);\n+        \/\/ Since this is used to self-test for an expected deadlock, it will\n+        \/\/ delay the test by at least this duration (so being overly large is\n+        \/\/ a potential issue). The deadlock is set up so it should occur almost\n+        \/\/ immediately (if it occurs), but tests are run under very high loads\n+        \/\/ in higher tiers, so it's necessary to be a bit pessimistic here.\n+        private final static Duration JOIN_WAIT =\n+                Duration.ofMillis(Utils.adjustTimeout(2000));\n","filename":"test\/jdk\/java\/util\/logging\/LoggingDeadlock5.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}