{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+        \/\/ retains only network interface whose bound addresses match\n@@ -67,2 +68,17 @@\n-                                      .map(nif -> new Object[] { new InetSocketAddress(a, 0), nif })\n-                                      .forEach(list::add) );\n+                .filter(nif -> nif.inetAddresses().toList().contains(a))\n+                .map(nif -> new Object[] { new InetSocketAddress(a, 0), nif })\n+                .forEach(list::add) );\n+        \/\/ any network interface should work with the wildcard address\n+        nc.multicastInterfaces(true)\n+                .map(nif -> new Object[] {new InetSocketAddress(0), nif})\n+                .forEach(list::add);\n+        return list.stream().toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider(name = \"interfaces\")\n+    public Object[][] interfaces() throws Exception {\n+        List<Object[]> list = new ArrayList<>();\n+        NetworkConfiguration nc = NetworkConfiguration.probe();\n+        nc.multicastInterfaces(true)\n+                .map(nif -> new Object[] {nif})\n+                .forEach(list::add);\n@@ -85,2 +101,2 @@\n-    @Test(dataProvider = \"scenarios\")\n-    public void testSetGetInterfaceUnbound(InetSocketAddress ignore, NetworkInterface nif)\n+    @Test(dataProvider = \"interfaces\")\n+    public void testSetGetInterfaceUnbound(NetworkInterface nif)\n@@ -109,2 +125,2 @@\n-    @Test(dataProvider = \"scenarios\")\n-    public void testSetGetOptionUnbound(InetSocketAddress ignore, NetworkInterface nif)\n+    @Test(dataProvider = \"interfaces\")\n+    public void testSetGetOptionUnbound(NetworkInterface nif)\n@@ -142,2 +158,2 @@\n-    public void testGettInterfaceUnbound() throws Exception {\n-        out.println(\"\\n\\n--- testGettInterfaceUnbound \");\n+    public void testGetInterfaceUnbound() throws Exception {\n+        out.println(\"\\n\\n--- testGetInterfaceUnbound \");\n","filename":"test\/jdk\/java\/net\/MulticastSocket\/IPMulticastIF.java","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"}]}