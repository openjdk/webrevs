{"files":[{"patch":"@@ -56,0 +56,7 @@\n+static void print_node_list(const Node_List& nodes, stringStream& ss) {\n+  for (uint i = 0; i < nodes.size(); ++i) {\n+    ss.print(\"  \");\n+    nodes.at(i)->dump(\"\\n\", false, &ss);\n+  }\n+}\n+\n@@ -171,2 +178,1 @@\n-                new AtSingleOutputOfType(&Node::is_IfFalse, new TruePattern()))) {\n-  }\n+                new AtSingleOutputOfType(&Node::is_IfFalse, new TruePattern()))) {}\n@@ -195,2 +201,1 @@\n-                    NodeClassIsAndBind(Region, _region_node)))) {\n-  }\n+                    NodeClassIsAndBind(Region, _region_node)))) {}\n@@ -273,8 +278,0 @@\n-\n-private:\n-  static void print_node_list(const Node_List& ctrl_succ, stringStream& ss) {\n-    for (uint i = 0; i < ctrl_succ.size(); ++i) {\n-      ss.print(\"  \");\n-      ctrl_succ.at(i)->dump(\"\\n\", false, &ss);\n-    }\n-  }\n@@ -325,3 +322,1 @@\n-          for (uint i = 0; i < non_null_inputs.size(); ++i) {\n-            non_null_inputs.at(i)->dump(\"\\n\", false, &ss);\n-          }\n+          print_node_list(non_null_inputs, ss);\n@@ -452,1 +447,1 @@\n-      ss.print_cr(\"The required_outcnt of a MultiBranch node must be smaller than or equal to its outcnt. But required_outcnt=%d vs. outcnt=%d\", mb->required_outcnt(), mb->outcnt());\n+      ss.print_cr(\"The required_outcnt of a MultiBranch node must be smaller than or equal to its outcnt. But required_outcnt=%d vs. outcnt=%u\", mb->required_outcnt(), mb->outcnt());\n","filename":"src\/hotspot\/share\/opto\/graphInvariants.cpp","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-#endif\n+#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/share\/opto\/graphInvariants.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}