{"files":[{"patch":"@@ -193,1 +193,2 @@\n-  Unique_Node_List _collected_nodes; \/\/ The resulting node collection of all nodes on paths from source->target(s).\n+  \/\/ The resulting node collection of all nodes on paths from source->target(s).\n+  Unique_Node_List _collected_nodes;\n@@ -214,4 +215,3 @@\n-    if (_collected_nodes.size() != 0) {\n-      backtrack_from_target_nodes();\n-      assert(_collected_nodes.member(start_node), \"must find start node again when backtracking\");\n-    }\n+    backtrack_from_target_nodes();\n+    assert(_collected_nodes.size() == 0 || _collected_nodes.member(start_node),\n+           \"either target node predicate was never true or must find start node again when doing backtracking work\");\n@@ -243,1 +243,2 @@\n-  \/\/ Backtrack from all previously collected target nodes by using the visited set of the start->target(s) search.\n+  \/\/ Backtrack from all previously collected target nodes by using the visited set of the start->target(s) search. If no\n+  \/\/ node was collected in the first place (i.e. target node predicate was never true), then nothing needs to be done.\n","filename":"src\/hotspot\/share\/opto\/predicates.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}