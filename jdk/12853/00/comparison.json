{"files":[{"patch":"@@ -612,1 +612,1 @@\n-  check_info_file(tname_file, \"Xen\", XenHVM, NULL, NoDetectedVirtualization);\n+  check_info_file(tname_file, \"Xen\", XenPVHVM, NULL, NoDetectedVirtualization);\n@@ -618,6 +618,8 @@\n-    VirtualizationType vrt = VM_Version::get_detected_virtualization();\n-    if (vrt == KVM) {\n-      st->print_cr(\"KVM virtualization detected\");\n-    } else if (vrt == VMWare) {\n-      st->print_cr(\"VMWare virtualization detected\");\n-    }\n+  VirtualizationType vrt = VM_Version::get_detected_virtualization();\n+  if (vrt == KVM) {\n+    st->print_cr(\"KVM virtualization detected\");\n+  } else if (vrt == VMWare) {\n+    st->print_cr(\"VMWare virtualization detected\");\n+  } else if (vrt == XenPVHVM) {\n+    st->print_cr(\"Xen virtualization detected\");\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -256,0 +256,2 @@\n+  } else if (vrt == XenPVHVM) {\n+    return \"Xen optimized paravirtualization\";\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrOSInterface.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+  XenPVHVM, \/\/ mix-mode on Linux aarch64\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}