{"files":[{"patch":"@@ -24,0 +24,5 @@\n+import jdk.test.lib.containers.systemd.SystemdRunOptions;\n+import jdk.test.lib.containers.systemd.SystemdTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.whitebox.WhiteBox;\n+import jtreg.SkippedException;\n@@ -36,5 +41,0 @@\n-import jdk.test.lib.containers.systemd.SystemdRunOptions;\n-import jdk.test.lib.containers.systemd.SystemdTestUtils;\n-import jdk.test.whitebox.WhiteBox;\n-\n-\n@@ -59,2 +59,3 @@\n-        if (physicalCpus < 3) {\n-           System.err.println(\"WARNING: host system only has \" + physicalCpus + \" expected >= 3\");\n+        if (physicalCpus < 2) {\n+           System.err.println(\"WARNING: host system only has \" + physicalCpus + \" cpus. Expected >= 2\");\n+           System.err.println(\"The active_processor_count assertion will trivially pass.\");\n@@ -62,2 +63,2 @@\n-        \/\/ 1 or 2 cores limit depending on physical CPUs\n-        int coreLimit = Math.min(physicalCpus, 2);\n+        \/\/ Use a CPU core limit of 1 for best coverage\n+        int coreLimit = 1;\n@@ -68,5 +69,14 @@\n-        SystemdTestUtils.buildAndRunSystemdJava(opts)\n-            .shouldHaveExitValue(0)\n-            .shouldContain(\"Hello Systemd\")\n-            .shouldContain(\"OSContainer::active_processor_count: \" + coreLimit)\n-            .shouldContain(String.format(\"Memory Limit is: %d\", (expectedMemLimit * MB)));\n+        OutputAnalyzer out = SystemdTestUtils.buildAndRunSystemdJava(opts);\n+        out.shouldHaveExitValue(0)\n+           .shouldContain(\"Hello Systemd\")\n+           .shouldContain(String.format(\"Memory Limit is: %d\", (expectedMemLimit * MB)));\n+        try {\n+            out.shouldContain(\"OSContainer::active_processor_count: \" + coreLimit);\n+        } catch (RuntimeException e) {\n+            \/\/ CPU delegation needs to be enabled when run as user on cg v2\n+            if (SystemdTestUtils.RUN_AS_USER) {\n+                String hint = \"When run as user on cg v2 cpu delegation needs to be configured!\";\n+                throw new SkippedException(hint);\n+            }\n+            throw e;\n+        }\n","filename":"test\/hotspot\/jtreg\/containers\/systemd\/SystemdMemoryAwarenessTest.java","additions":24,"deletions":14,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private static boolean RUN_AS_USER = !Platform.isRoot() && CGROUPS_V2;\n+    public static boolean RUN_AS_USER = !Platform.isRoot() && CGROUPS_V2;\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/systemd\/SystemdTestUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}