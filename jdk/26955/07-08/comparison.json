{"files":[{"patch":"@@ -288,7 +288,1 @@\n-  if (std::numeric_limits<size_t>::max() - value < MaxHeapSize) { \/\/ overflow\n-    JVMFlag::printError(verbose,\n-                        \"Sum of HeapBaseMinAddress (%zu) and MaxHeapSize (%zu) results in an overflow (%zu)\\n\",\n-                        value , MaxHeapSize, value + MaxHeapSize);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-  if (UseCompressedOops && FLAG_IS_ERGO(MaxHeapSize) && (value > (max_uintx - MaxHeapSize))) {\n+  if (value > (max_uintx - MaxHeapSize)) {\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}