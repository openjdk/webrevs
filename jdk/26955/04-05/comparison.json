{"files":[{"patch":"@@ -442,1 +442,1 @@\n-          size <= (uint64_t)(upper_bound - reserved.base())) {\n+          size <= (size_t)(upper_bound - reserved.base())) {\n@@ -551,1 +551,1 @@\n-  uint64_t aligned_heap_base_min_address = align_up(MAX2(HeapBaseMinAddress, alignment), alignment);\n+  uintptr_t aligned_heap_base_min_address = align_up(MAX2(HeapBaseMinAddress, alignment), alignment);\n@@ -583,2 +583,2 @@\n-      uint64_t const highest_start = align_down(UnscaledOopHeapMax - size, attach_point_alignment);\n-      uint64_t const lowest_start  = align_up(aligned_heap_base_min_address, attach_point_alignment);\n+      uintptr_t const highest_start = align_down(UnscaledOopHeapMax - size, attach_point_alignment);\n+      uintptr_t const lowest_start  = align_up(aligned_heap_base_min_address, attach_point_alignment);\n@@ -592,1 +592,1 @@\n-    uint64_t zerobased_max = OopEncodingHeapMax;\n+    size_t zerobased_max = OopEncodingHeapMax;\n@@ -603,1 +603,1 @@\n-      uint64_t const highest_start = align_down(zerobased_max - size, attach_point_alignment);\n+      uintptr_t const highest_start = align_down(zerobased_max - size, attach_point_alignment);\n@@ -606,4 +606,3 @@\n-      uint64_t lowest_start = aligned_heap_base_min_address;\n-      uint64_t unscaled_end = UnscaledOopHeapMax - size;\n-      if (unscaled_end < UnscaledOopHeapMax) { \/\/ unscaled_end wrapped if size is large\n-        lowest_start = MAX2(lowest_start, unscaled_end);\n+      uintptr_t lowest_start = aligned_heap_base_min_address;\n+      if (size < UnscaledOopHeapMax) {\n+        lowest_start = MAX2(lowest_start, UnscaledOopHeapMax - size);\n@@ -635,1 +634,1 @@\n-      assert((uint64_t)attach_point >= aligned_heap_base_min_address, \"Flag support broken\");\n+      assert((uintptr_t)attach_point >= aligned_heap_base_min_address, \"Flag support broken\");\n","filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"}]}