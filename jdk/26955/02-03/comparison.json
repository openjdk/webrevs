{"files":[{"patch":"@@ -288,1 +288,1 @@\n-  if (value + MaxHeapSize < MaxHeapSize) {\/\/ overflow\n+  if (value + MaxHeapSize < MaxHeapSize) { \/\/ overflow\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -559,2 +559,2 @@\n-    reserved = try_reserve_memory(size + noaccess_prefix, alignment, page_size, (char *)aligned_heap_base_min_address);\n-    if (reserved.base() != (char *)aligned_heap_base_min_address) { \/\/ Enforce this exact address.\n+    reserved = try_reserve_memory(size + noaccess_prefix, alignment, page_size, (char*)aligned_heap_base_min_address);\n+    if (reserved.base() != (char*)aligned_heap_base_min_address) { \/\/ Enforce this exact address.\n@@ -583,6 +583,6 @@\n-      char* const highest_start = align_down((char *)UnscaledOopHeapMax - size, attach_point_alignment);\n-      char* const lowest_start  = align_up((char *)aligned_heap_base_min_address, attach_point_alignment);\n-      assert(lowest_start <= highest_start, \"lowest: \" INTPTR_FORMAT \" highest: \" INTPTR_FORMAT ,\n-                                          p2i(lowest_start), p2i(highest_start));\n-      reserved = try_reserve_range(highest_start, lowest_start, attach_point_alignment,\n-                                   (char *)aligned_heap_base_min_address, (char *)UnscaledOopHeapMax, size, alignment, page_size);\n+      uintptr_t const highest_start = align_down(UnscaledOopHeapMax - size, attach_point_alignment);\n+      uintptr_t const lowest_start  = align_up(aligned_heap_base_min_address, attach_point_alignment);\n+      assert(lowest_start < highest_start, \"lowest: \" INTPTR_FORMAT \" highest: \" INTPTR_FORMAT ,\n+                                          lowest_start, highest_start);\n+      reserved = try_reserve_range((char*)highest_start, (char*)lowest_start, attach_point_alignment,\n+                                   (char*)aligned_heap_base_min_address, (char*)UnscaledOopHeapMax, size, alignment, page_size);\n@@ -592,1 +592,1 @@\n-    char *zerobased_max = (char *)OopEncodingHeapMax;\n+    uintptr_t zerobased_max = OopEncodingHeapMax;\n@@ -595,1 +595,1 @@\n-    if (aligned_heap_base_min_address + size <= (uintptr_t)zerobased_max && \/\/ Zerobased theoretical possible.\n+    if (aligned_heap_base_min_address + size <= zerobased_max && \/\/ Zerobased theoretical possible.\n@@ -597,1 +597,1 @@\n-         (reserved.end() > zerobased_max))) {                    \/\/ Unscaled delivered an arbitrary address.\n+         (reserved.end() > (char*)zerobased_max))) {             \/\/ Unscaled delivered an arbitrary address.\n@@ -603,1 +603,1 @@\n-      char *const highest_start = align_down(zerobased_max - size, attach_point_alignment);\n+      uintptr_t const highest_start = align_down(zerobased_max - size, attach_point_alignment);\n@@ -606,1 +606,1 @@\n-      char *lowest_start = (char *)aligned_heap_base_min_address;\n+      uintptr_t lowest_start = aligned_heap_base_min_address;\n@@ -609,1 +609,1 @@\n-        lowest_start = MAX2(lowest_start, (char*)unscaled_end);\n+        lowest_start = MAX2(lowest_start, unscaled_end);\n@@ -612,4 +612,4 @@\n-      assert(lowest_start <= highest_start, \"lowest: \" INTPTR_FORMAT \" highest: \" INTPTR_FORMAT,\n-                                          p2i(lowest_start), p2i(highest_start));\n-      reserved = try_reserve_range(highest_start, lowest_start, attach_point_alignment,\n-                                   (char *)aligned_heap_base_min_address, zerobased_max, size, alignment, page_size);\n+      assert(lowest_start < highest_start, \"lowest: \" INTPTR_FORMAT \" highest: \" INTPTR_FORMAT,\n+                                          lowest_start, highest_start);\n+      reserved = try_reserve_range((char*)highest_start, (char*)lowest_start, attach_point_alignment,\n+                                   (char*)aligned_heap_base_min_address, (char*)zerobased_max, size, alignment, page_size);\n@@ -625,4 +625,4 @@\n-    while ((addresses[i] != nullptr) &&       \/\/ End of array not yet reached.\n-           ((!reserved.is_reserved()) ||      \/\/ No previous try succeeded.\n-           (reserved.end() > zerobased_max && \/\/ Not zerobased or unscaled address.\n-                                              \/\/ Not disjoint address.\n+    while ((addresses[i] != nullptr) &&              \/\/ End of array not yet reached.\n+           ((!reserved.is_reserved()) ||             \/\/ No previous try succeeded.\n+           (reserved.end() > (char*)zerobased_max && \/\/ Not zerobased or unscaled address.\n+                                                     \/\/ Not disjoint address.\n","filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"}]}