{"files":[{"patch":"@@ -43,1 +43,1 @@\n-  _offset_base = ((u_char*)bot_reserved.start() - (uintptr_t(_reserved.start()) >> CardTable::card_shift()));\n+  _offset_base = ((uint8_t*)bot_reserved.start() - (uintptr_t(_reserved.start()) >> CardTable::card_shift()));\n@@ -51,3 +51,3 @@\n-void G1BlockOffsetTable::check_address(u_char* addr, const char* msg) const {\n-  u_char* start_addr = const_cast<u_char *>(_offset_base + (uintptr_t(_reserved.start()) >> CardTable::card_shift()));\n-  u_char* end_addr = const_cast<u_char *>(_offset_base + (uintptr_t(_reserved.end()) >> CardTable::card_shift()));\n+void G1BlockOffsetTable::check_address(uint8_t* addr, const char* msg) const {\n+  uint8_t* start_addr = const_cast<uint8_t *>(_offset_base + (uintptr_t(_reserved.start()) >> CardTable::card_shift()));\n+  uint8_t* end_addr = const_cast<uint8_t *>(_offset_base + (uintptr_t(_reserved.end()) >> CardTable::card_shift()));\n@@ -105,1 +105,1 @@\n-void G1BlockOffsetTablePart::set_remainder_to_point_to_start_incl(u_char* start_card, u_char* end_card) {\n+void G1BlockOffsetTablePart::set_remainder_to_point_to_start_incl(uint8_t* start_card, uint8_t* end_card) {\n@@ -110,2 +110,2 @@\n-  u_char* start_card_for_region = start_card;\n-  u_char offset = max_jubyte;\n+  uint8_t* start_card_for_region = start_card;\n+  uint8_t offset = max_jubyte;\n@@ -116,1 +116,1 @@\n-    u_char* reach = start_card - 1 + (BOTConstants::power_to_cards_back(i+1) - 1);\n+    uint8_t* reach = start_card - 1 + (BOTConstants::power_to_cards_back(i+1) - 1);\n@@ -134,1 +134,1 @@\n-void G1BlockOffsetTablePart::check_all_cards(u_char* start_card, u_char* end_card) const {\n+void G1BlockOffsetTablePart::check_all_cards(uint8_t* start_card, uint8_t* end_card) const {\n@@ -139,2 +139,2 @@\n-  for (u_char* c = start_card + 1; c <= end_card; c++ \/* yeah! *\/) {\n-    u_char entry = _bot->offset_array(c);\n+  for (uint8_t* c = start_card + 1; c <= end_card; c++ \/* yeah! *\/) {\n+    uint8_t entry = _bot->offset_array(c);\n@@ -150,1 +150,1 @@\n-    u_char* landing_card = c - backskip;\n+    uint8_t* landing_card = c - backskip;\n@@ -182,1 +182,1 @@\n-  u_char* const offset_card =  _bot->entry_for_addr(cur_card_boundary);\n+  uint8_t* const offset_card =  _bot->entry_for_addr(cur_card_boundary);\n@@ -203,1 +203,1 @@\n-  u_char* end_card = _bot->entry_for_addr(blk_end - 1);\n+  uint8_t* end_card = _bot->entry_for_addr(blk_end - 1);\n@@ -218,1 +218,1 @@\n-  u_char* previous_card = _bot->entry_for_addr(blk_start);\n+  uint8_t* previous_card = _bot->entry_for_addr(blk_start);\n@@ -228,1 +228,1 @@\n-  for (u_char* j = offset_card + 1; j <= end_card; j++) {\n+  for (uint8_t* j = offset_card + 1; j <= end_card; j++) {\n@@ -231,1 +231,1 @@\n-             (u_char) (CardTable::card_size_in_words() + BOTConstants::N_powers - 1),\n+             (uint8_t) (CardTable::card_size_in_words() + BOTConstants::N_powers - 1),\n@@ -243,2 +243,2 @@\n-  u_char* start_card = _bot->entry_for_addr(_hr->bottom());\n-  u_char* end_card = _bot->entry_for_addr(_hr->top() - 1);\n+  uint8_t* start_card = _bot->entry_for_addr(_hr->bottom());\n+  uint8_t* end_card = _bot->entry_for_addr(_hr->top() - 1);\n@@ -246,2 +246,2 @@\n-  for (u_char* current_card = start_card; current_card < end_card; current_card++) {\n-    u_char entry = _bot->offset_array(current_card);\n+  for (uint8_t* current_card = start_card; current_card < end_card; current_card++) {\n+    uint8_t entry = _bot->offset_array(current_card);\n@@ -284,2 +284,2 @@\n-  u_char* from_card = _bot->entry_for_addr(_hr->bottom());\n-  u_char* to_card = _bot->entry_for_addr(_hr->end());\n+  uint8_t* from_card = _bot->entry_for_addr(_hr->bottom());\n+  uint8_t* to_card = _bot->entry_for_addr(_hr->end());\n@@ -289,1 +289,1 @@\n-  for (u_char* i = from_card; i < to_card; ++i) {\n+  for (uint8_t* i = from_card; i < to_card; ++i) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  volatile u_char* _offset_base;\n+  volatile uint8_t* _offset_base;\n@@ -65,1 +65,1 @@\n-  inline u_char offset_array(u_char* addr) const;\n+  inline uint8_t offset_array(uint8_t* addr) const;\n@@ -67,2 +67,2 @@\n-  inline void set_offset_array_raw(u_char* addr, u_char offset);\n-  inline void set_offset_array(u_char* addr, u_char offset);\n+  inline void set_offset_array_raw(uint8_t* addr, uint8_t offset);\n+  inline void set_offset_array(uint8_t* addr, uint8_t offset);\n@@ -70,1 +70,1 @@\n-  inline void set_offset_array(u_char* addr, HeapWord* high, HeapWord* low);\n+  inline void set_offset_array(uint8_t* addr, HeapWord* high, HeapWord* low);\n@@ -72,1 +72,1 @@\n-  inline void set_offset_array(u_char* left, u_char* right, u_char offset);\n+  inline void set_offset_array(uint8_t* left, uint8_t* right, uint8_t offset);\n@@ -74,1 +74,1 @@\n-  void check_address(u_char* addr, const char* msg) const NOT_DEBUG_RETURN;\n+  void check_address(uint8_t* addr, const char* msg) const NOT_DEBUG_RETURN;\n@@ -95,1 +95,1 @@\n-  u_char* entry_for_addr(const void* const p) const;\n+  uint8_t* entry_for_addr(const void* const p) const;\n@@ -98,1 +98,1 @@\n-  HeapWord* addr_for_entry(const u_char* const p) const;\n+  HeapWord* addr_for_entry(const uint8_t* const p) const;\n@@ -113,1 +113,1 @@\n-  void set_remainder_to_point_to_start_incl(u_char* start, u_char* end);\n+  void set_remainder_to_point_to_start_incl(uint8_t* start, uint8_t* end);\n@@ -118,1 +118,1 @@\n-  void check_all_cards(u_char* left_card, u_char* right_card) const NOT_DEBUG_RETURN;\n+  void check_all_cards(uint8_t* left_card, uint8_t* right_card) const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    u_char offset = _bot->offset_array(_bot->entry_for_addr(_hr->bottom()));\n+    uint8_t offset = _bot->offset_array(_bot->entry_for_addr(_hr->bottom()));\n@@ -47,2 +47,2 @@\n-  u_char* entry = _bot->entry_for_addr(addr);\n-  u_char offset = _bot->offset_array(entry);\n+  uint8_t* entry = _bot->entry_for_addr(addr);\n+  uint8_t offset = _bot->offset_array(entry);\n@@ -61,1 +61,1 @@\n-u_char G1BlockOffsetTable::offset_array(u_char* addr) const {\n+uint8_t G1BlockOffsetTable::offset_array(uint8_t* addr) const {\n@@ -66,1 +66,1 @@\n-void G1BlockOffsetTable::set_offset_array_raw(u_char* addr, u_char offset) {\n+void G1BlockOffsetTable::set_offset_array_raw(uint8_t* addr, uint8_t offset) {\n@@ -70,1 +70,1 @@\n-void G1BlockOffsetTable::set_offset_array(u_char* addr, u_char offset) {\n+void G1BlockOffsetTable::set_offset_array(uint8_t* addr, uint8_t offset) {\n@@ -75,1 +75,1 @@\n-void G1BlockOffsetTable::set_offset_array(u_char* addr, HeapWord* high, HeapWord* low) {\n+void G1BlockOffsetTable::set_offset_array(uint8_t* addr, HeapWord* high, HeapWord* low) {\n@@ -80,1 +80,1 @@\n-  set_offset_array(addr, (u_char)offset);\n+  set_offset_array(addr, (uint8_t)offset);\n@@ -83,1 +83,1 @@\n-void G1BlockOffsetTable::set_offset_array(u_char* left, u_char* right, u_char offset) {\n+void G1BlockOffsetTable::set_offset_array(uint8_t* left, uint8_t* right, uint8_t offset) {\n@@ -87,2 +87,1 @@\n-  memset_with_concurrent_readers\n-    (const_cast<u_char*> (left), offset, num_cards);\n+  memset_with_concurrent_readers(left, offset, num_cards);\n@@ -91,1 +90,1 @@\n-inline u_char* G1BlockOffsetTable::entry_for_addr(const void* const p) const {\n+inline uint8_t* G1BlockOffsetTable::entry_for_addr(const void* const p) const {\n@@ -94,1 +93,1 @@\n-  u_char* result = const_cast<u_char *>(&_offset_base[uintptr_t(p) >> CardTable::card_shift()]);\n+  uint8_t* result = const_cast<uint8_t *>(&_offset_base[uintptr_t(p) >> CardTable::card_shift()]);\n@@ -98,2 +97,2 @@\n-inline HeapWord* G1BlockOffsetTable::addr_for_entry(const u_char* const p) const {\n-  size_t delta = pointer_delta(p, _offset_base, sizeof(u_char));\n+inline HeapWord* G1BlockOffsetTable::addr_for_entry(const uint8_t* const p) const {\n+  size_t delta = pointer_delta(p, _offset_base, sizeof(uint8_t));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}