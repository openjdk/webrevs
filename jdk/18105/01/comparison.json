{"files":[{"patch":"@@ -519,0 +519,5 @@\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n@@ -520,1 +525,1 @@\n-    AIX_ONLY(SIZE_256M)  \/\/ Known shm boundary alignment.\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n@@ -522,0 +527,1 @@\n+\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1895,1 +1895,10 @@\n-  const size_t alignment_adjusted = MAX2(alignment, os::vm_allocation_granularity());\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t system_allocation_granularity =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+\n+  const size_t alignment_adjusted = MAX2(alignment, system_allocation_granularity);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -38,4 +38,0 @@\n-\/\/ On AIX, these tests make no sense as long as JDK-8315321 remains unfixed since the attach\n-\/\/ addresses are not predictable.\n-#ifndef AIX\n-\n@@ -65,1 +61,9 @@\n-    EXPECT_TRUE(is_aligned(addr, os::vm_allocation_granularity())) << ERRINFO;\n+\n+    \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+    \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+    \/\/ of possible start points of the memory region (256M) differ.\n+    \/\/ This is not reflected by os_allocation_granularity().\n+    \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+    AIX_ONLY(EXPECT_TRUE(is_aligned(addr, os::vm_page_size() == 4*K ? 4*K : 256*M)) << ERRINFO)\n+    NOT_AIX(EXPECT_TRUE(is_aligned(addr, os::vm_allocation_granularity())) << ERRINFO);\n+\n@@ -181,1 +185,8 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t ag =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n@@ -260,1 +271,9 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t ag =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n@@ -278,1 +297,11 @@\n-  for (size_t range_size = os::vm_allocation_granularity(); range_size <= large_end; range_size *= 2) {\n+\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t system_allocation_granularity =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+\n+  for (size_t range_size = system_allocation_granularity; range_size <= large_end; range_size *= 2) {\n@@ -283,1 +312,1 @@\n-        for (size_t alignment = os::vm_allocation_granularity(); alignment < large_end; alignment *= 2) {\n+        for (size_t alignment = system_allocation_granularity; alignment < large_end; alignment *= 2) {\n@@ -294,1 +323,10 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t ag =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+\n@@ -334,1 +372,10 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t ag =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+\n@@ -345,2 +392,0 @@\n-\n-#endif \/\/ AIX\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_reserve_between.cpp","additions":58,"deletions":13,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -110,1 +110,0 @@\n-runtime\/CompressedOops\/CompressedClassPointers.java 8322943 aix-ppc64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}