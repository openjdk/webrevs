{"files":[{"patch":"@@ -251,4 +251,0 @@\n-  if (page->is_old()) {\n-    page->remset_delete();\n-  }\n-\n@@ -265,3 +261,0 @@\n-    if (page->is_old()) {\n-      page->remset_delete();\n-    }\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -812,0 +812,5 @@\n+  \/\/ Remove the remset before recycling\n+  if (to_recycle->is_old() && to_recycle == page) {\n+    to_recycle->remset_delete();\n+  }\n+\n@@ -883,12 +888,3 @@\n-  ZArray<ZPage*> to_recycle_pages;\n-\n-  \/\/ Prepare pages for recycling before taking the lock\n-  ZListRemoveIterator<ZPage> allocation_pages_iter(allocation->pages());\n-  for (ZPage* page; allocation_pages_iter.next(&page);) {\n-    \/\/ Prepare to recycle\n-    ZPage* const to_recycle = prepare_to_recycle(page, false \/* allow_defragment *\/);\n-\n-    \/\/ Register for recycling\n-    to_recycle_pages.push(to_recycle);\n-  }\n-\n+  \/\/ The page(s) in the allocation are either taken from the cache or a newly\n+  \/\/ created, mapped and commited ZPage. These page(s) have not been inserted in\n+  \/\/ the page table, nor allocated a remset, so prepare_to_recycle is not required.\n@@ -904,1 +900,1 @@\n-  ZArrayIterator<ZPage*> iter(&to_recycle_pages);\n+  ZListRemoveIterator<ZPage> iter(allocation->pages());\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"}]}