{"files":[{"patch":"@@ -251,4 +251,0 @@\n-  if (page->is_old()) {\n-    page->remset_delete();\n-  }\n-\n@@ -265,3 +261,0 @@\n-    if (page->is_old()) {\n-      page->remset_delete();\n-    }\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -812,0 +812,5 @@\n+  \/\/ Remove the remset before recycling\n+  if (to_recycle->is_old() && to_recycle == page) {\n+    to_recycle->remset_delete();\n+  }\n+\n@@ -883,12 +888,0 @@\n-  ZArray<ZPage*> to_recycle_pages;\n-\n-  \/\/ Prepare pages for recycling before taking the lock\n-  ZListRemoveIterator<ZPage> allocation_pages_iter(allocation->pages());\n-  for (ZPage* page; allocation_pages_iter.next(&page);) {\n-    \/\/ Prepare to recycle\n-    ZPage* const to_recycle = prepare_to_recycle(page, false \/* allow_defragment *\/);\n-\n-    \/\/ Register for recycling\n-    to_recycle_pages.push(to_recycle);\n-  }\n-\n@@ -904,1 +897,1 @@\n-  ZArrayIterator<ZPage*> iter(&to_recycle_pages);\n+  ZListRemoveIterator<ZPage> iter(allocation->pages());\n@@ -907,1 +900,1 @@\n-    recycle_page(page);\n+    _cache.free_page(page);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"}]}