{"files":[{"patch":"@@ -127,0 +127,1 @@\n+    \/\/ Test failures on ideal phases only.\n@@ -128,4 +129,3 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP},\n-        counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 3})\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n+    @IR(failOn = {IRNode.STORE, IRNode.OOPMAP_WITH, \"asdf\", IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"2\", IRNode.FIELD_ACCESS, \"2\", IRNode.STORE_I, \"1\"})\n+    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1)\n@@ -133,3 +133,3 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP})\n-    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_IDEAL, failOn = 1)\n-    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n+    @IR(failOn = {IRNode.STORE_F, IRNode.OOPMAP_WITH, \"asdf\", IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"2\", IRNode.FIELD_ACCESS, \"2\", IRNode.STORE_I, \"2\"})\n+    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_IDEAL, counts = 3)\n@@ -137,3 +137,9 @@\n-    @IR(counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 2)\n+    @IR(failOn = {IRNode.STORE, IRNode.OOPMAP_WITH, \"asdf\", IRNode.COUNTED_LOOP})\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, failOn = 1)\n+\n+    @IR(counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n+    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+\n+    @IR(failOn = {IRNode.STORE, IRNode.OOPMAP_WITH, \"asdf\", IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n+    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 3})\n@@ -142,1 +148,1 @@\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_IDEAL, counts = 1)\n+    @ExpectedFailure(ruleId = 6, phase = CompilePhase.PRINT_IDEAL, counts = 1)\n@@ -148,0 +154,1 @@\n+    \/\/ Test failures on mach phases only.\n@@ -150,1 +157,1 @@\n-        counts = {IRNode.STORE_F, \"3\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n+        counts = {IRNode.STORE_I, \"1\", IRNode.FIELD_ACCESS, \"2\", IRNode.OOPMAP_WITH, \"asdf\", \"< 2\"})\n@@ -152,1 +159,4 @@\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+\n+    @IR(failOn = {IRNode.STORE_F, IRNode.OOPMAP_WITH, \"asdf\", IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE_I, \"1\", IRNode.FIELD_ACCESS, \"1\", IRNode.OOPMAP_WITH, \"asdf\", \"< 2\"})\n+    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 2)\n@@ -155,1 +165,1 @@\n-    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n@@ -157,2 +167,2 @@\n-    @IR(counts = {IRNode.STORE_F, \"3\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+    @IR(counts = {IRNode.STORE_I, \"1\", IRNode.FIELD_ACCESS, \"1\", IRNode.OOPMAP_WITH, \"asdf\", \"3\"})\n+    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = {2, 3})\n@@ -161,4 +171,2 @@\n-        counts = {IRNode.STORE_F, \"3\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2, counts = 2)\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+        counts = {IRNode.STORE_I, \"1\", IRNode.FIELD_ACCESS, \"1\", IRNode.OOPMAP_WITH, \"asdf\", \"3\"})\n+    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_OPTO_ASSEMBLY,  failOn = 2, counts = {2, 3})\n@@ -166,4 +174,5 @@\n-    @IR(counts = {IRNode.FIELD_ACCESS, \"2\"})\n-    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 1)\n-    public Object defaultOnOptoAssembly(Helper h) {\n-        return h.getString();\n+    @IR(counts = {IRNode.FIELD_ACCESS, \"1\"})\n+    @ExpectedFailure(ruleId = 6, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 1)\n+    public void defaultOnOptoAssembly() {\n+        i = 34;\n+        l = 34;\n@@ -172,0 +181,1 @@\n+    \/\/ Test failures on ideal and mach phases.\n@@ -174,1 +184,2 @@\n-        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"3\", IRNode.COUNTED_LOOP, \"2\"})\n+        counts = {IRNode.STORE, \"2\", IRNode.FIELD_ACCESS, \"2\", IRNode.STORE_I, \"1\"})\n+    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1)\n@@ -176,1 +187,0 @@\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 3})\n@@ -182,2 +192,2 @@\n-    @IR(counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+    @IR(counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"1\", IRNode.STORE_I, \"1\"})\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = 1)\n@@ -187,2 +197,1 @@\n-        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2, counts = 2)\n+        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n@@ -190,0 +199,1 @@\n+    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2, counts = 2)\n@@ -191,3 +201,5 @@\n-    @IR(counts = {IRNode.FIELD_ACCESS, \"2\"})\n-    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 1)\n-    public Object defaultOnBoth(Helper h) {\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP, IRNode.STORE_I},\n+        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\", IRNode.OOPMAP_WITH, \"asdf\", \"2\"})\n+    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_IDEAL, failOn = {1, 4}, counts = {1, 3})\n+    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2, counts = {2, 4})\n+    public void defaultOnBoth() {\n@@ -196,1 +208,0 @@\n-        return h.getString();\n@@ -218,1 +229,1 @@\n-    @Run(test = {\"removeLoopsWithMultipleCompilations\", \"defaultOnOptoAssembly\", \"defaultOnBoth\"})\n+    @Run(test = \"removeLoopsWithMultipleCompilations\")\n@@ -227,2 +238,0 @@\n-        defaultOnOptoAssembly(new Helper(\"a\", 1));\n-        defaultOnBoth(new Helper(\"a\", 1));\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPhaseIRMatching.java","additions":46,"deletions":37,"binary":false,"changes":83,"status":"modified"}]}