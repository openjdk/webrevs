{"files":[{"patch":"@@ -92,3 +92,13 @@\n-    static Map<String, Class<? extends Annotation>> nameToAnnotation;\n-\n-    class NameToAnnotationEntry extends  AbstractMap.SimpleEntry<String, Class<? extends Annotation>> {\n+    \/\/ Use a compile-time mapping to avoid repeated runtime reflective lookups.\n+    private static final Map<String, Class<? extends Annotation>> nameToAnnotation =\n+        Map.ofEntries(new NameToAnnotationEntry(\"java.lang.Override\", Override.class),\n+                      new NameToAnnotationEntry(\"java.lang.annotation.Repeatable\", Repeatable.class),\n+                      new NameToAnnotationEntry(\"java.lang.annotation.Target\", Target.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.Test\", BasicAnnoTests.Test.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.Tests\",BasicAnnoTests.Tests.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TA\",   BasicAnnoTests.TA.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TB\",   BasicAnnoTests.TB.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TC\",   BasicAnnoTests.TC.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TCs\",  BasicAnnoTests.TCs.class));\n+\n+    static class NameToAnnotationEntry extends  AbstractMap.SimpleEntry<String, Class<? extends Annotation>> {\n@@ -105,11 +115,0 @@\n-        \/\/ Compile-time mapping to avoid repeated reflective lookups at runtime.\n-        nameToAnnotation =\n-            Map.ofEntries(new NameToAnnotationEntry(\"java.lang.Override\", Override.class),\n-                          new NameToAnnotationEntry(\"java.lang.annotation.Repeatable\", Repeatable.class),\n-                          new NameToAnnotationEntry(\"java.lang.annotation.Target\", Target.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.Test\", BasicAnnoTests.Test.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.Tests\",BasicAnnoTests.Tests.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.TA\",   BasicAnnoTests.TA.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.TB\",   BasicAnnoTests.TB.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.TC\",   BasicAnnoTests.TC.class),\n-                          new NameToAnnotationEntry(\"BasicAnnoTests.TCs\",  BasicAnnoTests.TCs.class));\n@@ -318,1 +317,1 @@\n-     * getAnnotatinMirrors() has a matching annotation from\n+     * getAnnotationMirrors() has a matching annotation from\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}