{"files":[{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +42,2 @@\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n@@ -42,1 +45,0 @@\n-import java.util.Locale;\n@@ -54,1 +56,0 @@\n-\n@@ -56,0 +57,10 @@\n+    private String dateStr;\n+    private String timeStr;\n+\n+    private final String datePattern = \"EEEE, MMMM d, y\";\n+    private final String timePattern = \"h:mm:ss a zzzz\";\n+\n+    \/\/ Use non-factory methods w\/ pattern to ensure test data can be round\n+    \/\/ tripped and guarantee no re-use of the same instance\n+    private DateFormat dateFormat = new SimpleDateFormat(datePattern);\n+    private DateFormat timeFormat = new SimpleDateFormat(timePattern);\n@@ -61,0 +72,3 @@\n+        \/\/ Generate the strings for parsing using dedicated separate instances\n+        dateStr = new SimpleDateFormat(datePattern).format(date);\n+        timeStr = new SimpleDateFormat(timePattern).format(date);\n@@ -63,1 +77,9 @@\n-    private DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.FULL, Locale.ENGLISH);\n+    @Benchmark\n+    public String testTimeFormat() {\n+        return timeFormat.format(date);\n+    }\n+\n+    @Benchmark\n+    public String testTimeFormatObject() {\n+        return timeFormat.format(objDate);\n+    }\n@@ -66,1 +88,1 @@\n-    public String testFormatDate() {\n+    public String testDateFormat() {\n@@ -71,1 +93,1 @@\n-    public String testFormatObject() {\n+    public String testDateFormatObject() {\n@@ -75,0 +97,10 @@\n+    @Benchmark\n+    public Date testDateParse() throws ParseException {\n+        return dateFormat.parse(dateStr);\n+    }\n+\n+    @Benchmark\n+    public Date testTimeParse() throws ParseException {\n+        return timeFormat.parse(timeStr);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/text\/DateFormatterBench.java","additions":37,"deletions":5,"binary":false,"changes":42,"status":"modified"}]}