{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1031,1 +1031,1 @@\n-\/\/ Search either the patch-module or exploded build entries for class.\n+\/\/ Search the module list for the class file stream based on the file name and java package\n@@ -1034,1 +1034,1 @@\n-                                                    const char* const class_name,\n+                                                    PackageEntry* pkg_entry, \/\/ Java package entry derived from the class name\n@@ -1038,4 +1038,1 @@\n-  \/\/ Find the class' defining module in the boot loader's module entry table\n-  TempNewSymbol class_name_symbol = SymbolTable::new_symbol(class_name);\n-  TempNewSymbol pkg_name = package_from_class_name(class_name_symbol);\n-  PackageEntry* pkg_entry = get_package_entry(pkg_name, ClassLoaderData::the_null_class_loader_data());\n+  \/\/ Find the defining module in the boot loader's module entry table\n@@ -1086,1 +1083,1 @@\n-InstanceKlass* ClassLoader::load_class(Symbol* name, bool search_append_only, TRAPS) {\n+InstanceKlass* ClassLoader::load_class(Symbol* name, PackageEntry* pkg_entry, bool search_append_only, TRAPS) {\n@@ -1133,1 +1130,1 @@\n-      stream = search_module_entries(THREAD, _patch_mod_entries, class_name, file_name);\n+      stream = search_module_entries(THREAD, _patch_mod_entries, pkg_entry, file_name);\n@@ -1145,1 +1142,1 @@\n-      stream = search_module_entries(THREAD, _exploded_entries, class_name, file_name);\n+      stream = search_module_entries(THREAD, _exploded_entries, pkg_entry, file_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,1 +295,1 @@\n-  \/\/ Attempt load of individual class from either the patched or exploded modules build lists\n+  \/\/ Search the module list for the class file stream based on the file name and java package\n@@ -298,1 +298,1 @@\n-                                                const char* const class_name,\n+                                                PackageEntry* pkg_entry, \/\/ Java package entry derived from the class name\n@@ -302,1 +302,1 @@\n-  static InstanceKlass* load_class(Symbol* class_name, bool search_append_only, TRAPS);\n+  static InstanceKlass* load_class(Symbol* class_name, PackageEntry* pkg_entry, bool search_append_only, TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1279,1 +1279,1 @@\n-      k = ClassLoader::load_class(class_name, search_only_bootloader_append, CHECK_NULL);\n+      k = ClassLoader::load_class(class_name, pkg_entry, search_only_bootloader_append, CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}