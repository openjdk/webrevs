{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -367,1 +367,1 @@\n-        int utflen = utfLen(str, countNonZeroAscii);\n+        long utflenLong = utfLen(str, countNonZeroAscii);\n@@ -369,2 +369,2 @@\n-        if (utflen > 65535 || \/* overflow *\/ utflen < strlen)\n-            throw new UTFDataFormatException(tooLongMsg(str, utflen));\n+        if (utflenLong > 65535L)\n+            throw new UTFDataFormatException(tooLongMsg(str, utflenLong));\n@@ -372,0 +372,1 @@\n+        int utflen = (int)utflenLong;\n@@ -394,1 +395,1 @@\n-    private static String tooLongMsg(String s, int bits32) {\n+    private static String tooLongMsg(String s, long utflen) {\n@@ -398,2 +399,0 @@\n-        \/\/ handle int overflow with max 3x expansion\n-        long actualLength = (long)slen + Integer.toUnsignedLong(bits32 - slen);\n@@ -401,1 +400,1 @@\n-            + actualLength + \" bytes\";\n+            + utflen + \" bytes\";\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataOutputStream.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1902,2 +1902,2 @@\n-            int utflen = utfLen(str, countNonZeroAscii);\n-            if (utflen <= 0xFFFF) {\n+            long utflen = utfLen(str, countNonZeroAscii);\n+            if (utflen <= 0xFFFFL) {\n@@ -1907,1 +1907,1 @@\n-                writeShort(utflen);\n+                writeShort((int)utflen);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -278,2 +278,5 @@\n-        int utflen = utfLen(str, countNonZeroAscii);\n-        Util.checkU2(utflen, \"utf8 length\");\n+        long utflenLong = utfLen(str, countNonZeroAscii);\n+        if (utflenLong > 65535L) {\n+            throw new IllegalArgumentException(\"utf8 length out of range of u2: \" + utflenLong);\n+        }\n+        int utflen = (int)utflenLong;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,3 +67,3 @@\n-    public static int utfLen(String str, int countNonZeroAscii) {\n-        int utflen = str.length();\n-        for (int i = utflen - 1; i >= countNonZeroAscii; i--) {\n+    public static long utfLen(String str, int countNonZeroAscii) {\n+        long utflen = str.length();\n+        for (int i = (int)utflen - 1; i >= countNonZeroAscii; i--) {\n@@ -71,1 +72,1 @@\n-                utflen += (c >= 0x800) ? 2 : 1;\n+                utflen += (c >= 0x800) ? 2L : 1L;\n@@ -93,2 +94,1 @@\n-        \/\/ The check strLen > CONSTANT_POOL_UTF8_MAX_BYTES above ensures that utfLen can't overflow here.\n-        int utfLen = utfLen(str, 0);\n+        long utfLen = utfLen(str, 0);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ModifiedUtf.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}