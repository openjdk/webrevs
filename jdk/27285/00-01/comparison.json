{"files":[{"patch":"@@ -29,0 +29,2 @@\n+import java.lang.runtime.ExactConversionsSupport;\n+\n@@ -369,1 +371,1 @@\n-        if (utflenLong > 65535L)\n+        if (!ExactConversionsSupport.isLongToCharExact(utflenLong))\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataOutputStream.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import java.lang.runtime.ExactConversionsSupport;\n+\n@@ -1903,1 +1905,1 @@\n-            if (utflen <= 0xFFFFL) {\n+            if (ExactConversionsSupport.isLongToCharExact(utflen)) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.lang.runtime.ExactConversionsSupport;\n@@ -279,1 +280,1 @@\n-        if (utflenLong > 65535L) {\n+        if (!ExactConversionsSupport.isLongToCharExact(utflenLong)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8366421\n+ * @summary Test for ModifiedUtf.utfLen() return type change from int to long to avoid overflow\n+ * @modules java.base\/jdk.internal.util\n+ * @run main TestUtfLen\n+ *\/\n+\n+import jdk.internal.util.ModifiedUtf;\n+\n+public class TestUtfLen {\n+    private static final String ONE_BYTE   = \"A\";        \/\/ 1-byte UTF-8\n+    private static final String TWO_BYTE   = \"\\u0100\";   \/\/ 2-byte UTF-8\n+    private static final String THREE_BYTE = \"\\u2600\";   \/\/ 3-byte UTF-8\n+\n+    public static void main(String[] args) {\n+        String chunk = ONE_BYTE + TWO_BYTE + THREE_BYTE;\n+        long perChunkLen = ModifiedUtf.utfLen(chunk, 0);\n+        if (perChunkLen != 6L) {\n+            throw new RuntimeException(\"Expected perChunkLen=6 but got \" + perChunkLen);\n+        }\n+\n+        int iterations = (Integer.MAX_VALUE \/ 6) + 1;\n+        long total = 0L;\n+        for (int i = 0; i < iterations; i++) {\n+            total += ModifiedUtf.utfLen(chunk, 0);\n+        }\n+        long expected = perChunkLen * iterations;\n+        if (total != expected) {\n+            throw new RuntimeException(\"Expected total=\" + expected + \" but got \" + total);\n+        }\n+        System.out.println(\"PASSED\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/jdk\/internal\/util\/TestUtfLen.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}