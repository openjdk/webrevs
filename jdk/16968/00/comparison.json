{"files":[{"patch":"@@ -395,0 +395,4 @@\n+\n+  \/\/ end_card might be just beyond the heap, so need to use the _raw variant.\n+  HeapWord* end_address = ct->addr_for_raw(end_card);\n+\n@@ -417,0 +421,7 @@\n+    \/\/ This might be the last object in this area, avoid trying to access the\n+    \/\/ card beyond the allowed area.\n+    HeapWord* next_address = obj_start_addr + obj->size();\n+    if (next_address >= end_address) {\n+      break;\n+    }\n+\n@@ -418,1 +429,1 @@\n-    CardValue* next_obj_card = ct->byte_for(obj_start_addr + obj->size());\n+    CardValue* next_obj_card = ct->byte_for(next_address);\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -86,0 +86,8 @@\n+  \/\/ Mapping from card marking array entry to address of first word without checks.\n+  HeapWord* addr_for_raw(const CardValue* p) const {\n+    \/\/ As _byte_map_base may be \"negative\" (the card table has been allocated before\n+    \/\/ the heap in memory), do not use pointer_delta() to avoid the assertion failure.\n+    size_t delta = p - _byte_map_base;\n+    return (HeapWord*) (delta << _card_shift);\n+  }\n+\n@@ -147,1 +155,1 @@\n-  \/\/ Mapping from card marking array entry to address of first word\n+  \/\/ Mapping from card marking array entry to address of first word.\n@@ -153,4 +161,1 @@\n-    \/\/ As _byte_map_base may be \"negative\" (the card table has been allocated before\n-    \/\/ the heap in memory), do not use pointer_delta() to avoid the assertion failure.\n-    size_t delta = p - _byte_map_base;\n-    HeapWord* result = (HeapWord*) (delta << _card_shift);\n+    HeapWord* result = addr_for_raw(p);\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}