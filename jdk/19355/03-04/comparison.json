{"files":[{"patch":"@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/ResolvedConstants.java","additions":0,"deletions":1,"binary":false,"changes":1,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ResolvedConstants.java","status":"renamed"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Fieldref entry for putfield bytecodes for a final field cannot be preresolved if it's used by a\n+ *          method outside of <clinit>\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @build ResolvedPutFieldHelper\n+ * @build ResolvedPutField\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar app.jar ResolvedPutFieldApp ResolvedPutFieldHelper\n+ * @run driver ResolvedPutField\n+ *\/\n+\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class ResolvedPutField {\n+    static final String classList = \"ResolvedPutField.classlist\";\n+    static final String appJar = ClassFileInstaller.getJarPath(\"app.jar\");\n+    static final String mainClass = ResolvedPutFieldApp.class.getName();\n+    static final String error = \"Update to non-static final field ResolvedPutFieldHelper.x attempted from a different method (set_x) than the initializer method <init>\";\n+    public static void main(String[] args) throws Exception {\n+        \/\/ dump class list\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass)\n+            .assertNormalExit(error);\n+\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList,\n+                       \"-cp\", appJar,\n+                       \"-Xlog:cds+resolve=trace\");\n+        CDSTestUtils.createArchiveAndCheck(opts)\n+            .shouldMatch(\"cds,resolve.*Failed to resolve putfield .*ResolvedPutFieldHelper -> ResolvedPutFieldHelper.x:I\");\n+    }\n+}\n+\n+class ResolvedPutFieldApp {\n+    public static void main(String args[]) {\n+        try {\n+            ResolvedPutFieldHelper.main(args);\n+        } catch (IllegalAccessError e) {\n+            System.out.println(\"IllegalAccessError expected:\");\n+            System.out.println(e);\n+            System.exit(0);\n+        }\n+        throw new RuntimeException(\"IllegalAccessError expected!\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/ResolvedPutField.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\n+\/*\n+\n+class ResolvedPutFieldHelper {\n+   int x; \/\/ change it to 'final'\n+   ResolvedPutFieldHelper() { x = 1; }\n+   void set_x() { x = 2; }\n+\n+    public static void main(String args[]) {\n+        ResolvedPutFieldHelper s = new ResolvedPutFieldHelper();\n+        s.set_x();\n+        System.out.println(s.x);\n+    }\n+}\n+\n+*\/\n+\n+\n+\n+super class ResolvedPutFieldHelper\n+    version 66:0\n+{\n+  \/\/WAS Field x:I;\n+  final Field x:I;\n+\n+  Method \"<init>\":\"()V\"\n+    stack 2 locals 1\n+  {\n+        aload_0;\n+        invokespecial    Method java\/lang\/Object.\"<init>\":\"()V\";\n+        aload_0;\n+        iconst_1;\n+        putfield         Field x:\"I\";\n+        return;\n+  }\n+\n+  \/\/ set_x is not allowed to write to the final \"x\" field. If CDS pre-resolves its\n+  \/\/ ResolvedFieldEntry for the putfield bytecode, then we cannot get\n+  \/\/ the IllegalAccessError at runtime. See JDK-8157181 for the code that\n+  \/\/ throws the IllegalAccessError.\n+\n+  Method set_x:\"()V\"\n+    stack 2 locals 1\n+  {\n+        aload_0;\n+        iconst_2;\n+        putfield         Field x:\"I\";\n+        return;\n+  }\n+  public static Method main:\"([Ljava\/lang\/String;)V\"\n+    stack 2 locals 2\n+  {\n+        new              class ResolvedPutFieldHelper;\n+        dup;\n+        invokespecial    Method \"<init>\":\"()V\";\n+        astore_1;\n+        aload_1;\n+        invokevirtual    Method set_x:\"()V\";\n+        getstatic         Field java\/lang\/System.out:\"Ljava\/io\/PrintStream;\";\n+        aload_1;\n+        getfield         Field x:\"I\";\n+        invokevirtual    Method java\/io\/PrintStream.println:\"(I)V\";\n+        return;\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/ResolvedPutFieldHelper.jasm","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"}]}