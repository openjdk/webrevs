{"files":[{"patch":"@@ -47,0 +47,1 @@\n+import java.util.function.Function;\n@@ -56,0 +57,1 @@\n+import static java.lang.constant.ConstantDescs.BSM_NULL_CONSTANT;\n@@ -277,1 +279,6 @@\n-                out.accept(quoteAndEscapeYaml(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"null\");\n+                } else {\n+                    out.accept(quoteAndEscapeYaml(v));\n+                }\n@@ -332,0 +339,1 @@\n+        if (s.equalsIgnoreCase(\"null\")) return \"'\" + s + \"'\";\n@@ -361,1 +369,6 @@\n-                out.accept(quoteAndEscapeJson(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"null\");\n+                } else {\n+                    out.accept(quoteAndEscapeJson(v));\n+                }\n@@ -437,1 +450,6 @@\n-                out.accept(xmlEscape(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"<null\/>\");\n+                } else {\n+                    out.accept(xmlEscape(v));\n+                }\n@@ -545,1 +563,1 @@\n-                        case NULL -> ret.accept(\"null\");\n+                        case NULL -> ret.accept(BSM_NULL_CONSTANT);\n@@ -932,1 +950,1 @@\n-                                    .map(Utf8Entry::stringValue).orElse(\"null\"),\n+                                    .map((Function<Utf8Entry, ConstantDesc>)Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT),\n@@ -934,1 +952,1 @@\n-                                    .map(Utf8Entry::stringValue).orElse(\"null\")));\n+                                    .map((Function<Utf8Entry, ConstantDesc>)Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)));\n@@ -943,2 +961,2 @@\n-                                        .map(cle -> cle.name().stringValue()).orElse(\"null\")),\n-                                leaf(\"inner name\", ic.innerName().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                        .map(cle -> (ConstantDesc)cle.name().stringValue()).orElse(BSM_NULL_CONSTANT)),\n+                                leaf(\"inner name\", ic.innerName().map((Function<Utf8Entry, ConstantDesc>)Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n@@ -951,1 +969,1 @@\n-                                leaf(\"name\", p.name().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                leaf(\"name\", p.name().map((Function<Utf8Entry, ConstantDesc>)Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n@@ -959,1 +977,1 @@\n-                                  leaf(\"version\", ma.moduleVersion().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                  leaf(\"version\", ma.moduleVersion().map((Function<Utf8Entry, ConstantDesc>)Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":28,"deletions":10,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -475,1 +475,1 @@\n-                        {\"inner class\": \"Phoo\", \"outer class\": \"null\", \"inner name\": \"null\", \"flags\": [\"PRIVATE\"]}],\n+                        {\"inner class\": \"Phoo\", \"outer class\": null, \"inner name\": null, \"flags\": [\"PRIVATE\"]}],\n@@ -728,1 +728,1 @@\n-                        <cls><inner_class>Phoo<\/inner_class><outer_class>null<\/outer_class><inner_name>null<\/inner_name><flags><flag>PRIVATE<\/flag><\/flags><\/cls><\/inner_classes>\n+                        <cls><inner_class>Phoo<\/inner_class><outer_class><null\/><\/outer_class><inner_name><null\/><\/inner_name><flags><flag>PRIVATE<\/flag><\/flags><\/cls><\/inner_classes>\n","filename":"test\/jdk\/jdk\/classfile\/ClassPrinterTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}