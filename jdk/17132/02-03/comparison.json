{"files":[{"patch":"@@ -119,2 +119,0 @@\n-    private static final Class<?> BYTE_ARRAY_CLASS;\n-\n@@ -122,98 +120,87 @@\n-        try {\n-            BYTE_ARRAY_CLASS = Class.forName(\"[B\");\n-            Class<?> str = Class.forName(\"[Ljava.lang.String;\");\n-\n-            add(EMAIL_ADDRESS_OID, false, str,\n-                a -> Arrays.stream(a).map(\n-                    Throws.unchecked(DerValue::getAsString)).toArray(),\n-                (v,t) -> t.putIA5String((String) v),\n-                DerValue.tag_IA5String);\n-\n-            add(UNSTRUCTURED_NAME_OID, false, str,\n-                a -> Arrays.stream(a).map(\n-                    Throws.unchecked(DerValue::getAsString)).toArray(),\n-                (v,t) -> t.putIA5String((String) v),\n-                DerValue.tag_IA5String,\n-                DerValue.tag_PrintableString,\n-                DerValue.tag_T61String,\n-                DerValue.tag_BMPString,\n-                DerValue.tag_UniversalString,\n-                DerValue.tag_UTF8String);\n-\n-            add(CONTENT_TYPE_OID, true, Class.forName(\"sun.security.util.ObjectIdentifier\"),\n-                Throws.unchecked(a -> a[0].getOID()),\n-                (v,t) -> mkDerStream(t, new DerOutputStream().putOID((ObjectIdentifier) v)),\n-                DerValue.tag_ObjectId);\n-\n-            add(MESSAGE_DIGEST_OID, true, byte[].class,\n-                Throws.unchecked(a -> a[0].getOctetString()),\n-                (v,t) -> mkDerStream(t, new DerOutputStream().putOctetString((byte[]) v)),\n-                DerValue.tag_OctetString);\n-\n-            \/\/CHECK - Original converts to DerInputStream and back??\n-            add(SIGNING_TIME_OID, true, Class.forName(\"java.util.Date\"),\n-                Throws.unchecked(a -> a[0].getTime()),\n-                (v,t) -> mkDerStream(t, new DerOutputStream().putTime((Date) v)),\n-                DerValue.tag_UtcTime,\n-                DerValue.tag_GeneralizedTime);\n-\n-            add(COUNTERSIGNATURE_OID, false,\n-                Class.forName(\"[Lsun.security.pkcs.SignerInfo;\"),\n-                a -> Arrays.stream(a).map(Throws.unchecked(\n-                    e -> new SignerInfo(e.toDerInputStream()))).toArray(),\n-                (v,t) -> t.putOrderedSetOf(DerValue.tag_Set, (DerEncoder[]) v),\n-                DerValue.tag_Sequence);\n-\n-            add(CHALLENGE_PASSWORD_OID, true, Class.forName(\"java.lang.String\"),\n-                Throws.unchecked(a -> a[0].getAsString()),\n-                (v,t) -> mkDerStream(t, new DerOutputStream().putPrintableString((String) v)),\n-                DerValue.tag_PrintableString,\n-                DerValue.tag_T61String,\n-                DerValue.tag_BMPString,\n-                DerValue.tag_UniversalString,\n-                DerValue.tag_UTF8String);\n-\n-            add(UNSTRUCTURED_ADDRESS_OID, false, str,\n-                a -> Arrays.stream(a).map(\n-                    Throws.unchecked(DerValue::getAsString)).toArray(String[]::new),\n-                (v,t) -> t.putPrintableString((String) v),\n-                DerValue.tag_PrintableString,\n-                DerValue.tag_T61String,\n-                DerValue.tag_BMPString,\n-                DerValue.tag_UniversalString,\n-                DerValue.tag_UTF8String);\n-\n-            add(EXTENSION_REQUEST_OID, true,\n-                Class.forName(\"sun.security.x509.CertificateExtensions\"),\n-                Throws.unchecked(a -> new CertificateExtensions(\n-                    new DerInputStream(a[0].toByteArray()))),\n-                (v,t) -> {\n-                    DerOutputStream temp = new DerOutputStream();\n-                    CertificateExtensions exts = (CertificateExtensions) v;\n-                    exts.encode(temp, true);\n-                    return mkDerStream(t, temp);},\n-                DerValue.tag_Sequence);\n-\n-            add(SIGNING_CERTIFICATE_OID, true,\n-                Class.forName(\"sun.security.pkcs.SigningCertificateInfo\"),\n-                Throws.unchecked(a -> new SigningCertificateInfo(a[0].toByteArray())),\n-                (v,t) -> {\n-                    DerOutputStream temp = new DerOutputStream();\n-                    SigningCertificateInfo info = (SigningCertificateInfo) v;\n-                    temp.writeBytes(info.toByteArray());\n-                    return mkDerStream(t, temp);},\n-                DerValue.tag_Sequence);\n-\n-            add(SIGNATURE_TIMESTAMP_TOKEN_OID, true, byte[].class,\n-                a -> a[0].toByteArray(),\n-                (v,t) -> t.write(DerValue.tag_Set, (byte[]) v),\n-                DerValue.tag_Sequence);\n-\n-            add(CMS_ALGORITHM_PROTECTION_OID, true, byte[].class,\n-                a -> a[0].toByteArray(),\n-                (v,t) -> t.write(DerValue.tag_Set, (byte[]) v),\n-                DerValue.tag_Sequence);\n-\n-        } catch (ClassNotFoundException e) {\n-            throw new ExceptionInInitializerError(e.toString());\n-        }\n+        add(EMAIL_ADDRESS_OID, false, String[].class,\n+            a -> Arrays.stream(a).map(\n+                Throws.unchecked(DerValue::getAsString)).toArray(),\n+            (v,t) -> t.putIA5String((String) v),\n+            DerValue.tag_IA5String);\n+\n+        add(UNSTRUCTURED_NAME_OID, false, String[].class,\n+            a -> Arrays.stream(a).map(\n+                Throws.unchecked(DerValue::getAsString)).toArray(),\n+            (v,t) -> t.putIA5String((String) v),\n+            DerValue.tag_IA5String,\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(CONTENT_TYPE_OID, true, sun.security.util.ObjectIdentifier.class,\n+            Throws.unchecked(a -> a[0].getOID()),\n+            (v,t) -> mkDerStream(t, new DerOutputStream().putOID((ObjectIdentifier) v)),\n+            DerValue.tag_ObjectId);\n+\n+        add(MESSAGE_DIGEST_OID, true, byte[].class,\n+            Throws.unchecked(a -> a[0].getOctetString()),\n+            (v,t) -> mkDerStream(t, new DerOutputStream().putOctetString((byte[]) v)),\n+            DerValue.tag_OctetString);\n+\n+        \/\/CHECK - Original converts to DerInputStream and back??\n+        add(SIGNING_TIME_OID, true, java.util.Date.class,\n+            Throws.unchecked(a -> a[0].getTime()),\n+            (v,t) -> mkDerStream(t, new DerOutputStream().putTime((Date) v)),\n+            DerValue.tag_UtcTime,\n+            DerValue.tag_GeneralizedTime);\n+\n+        add(COUNTERSIGNATURE_OID, false, sun.security.pkcs.SignerInfo[].class,\n+            a -> Arrays.stream(a).map(Throws.unchecked(\n+                e -> new SignerInfo(e.toDerInputStream()))).toArray(),\n+            (v,t) -> t.putOrderedSetOf(DerValue.tag_Set, (DerEncoder[]) v),\n+            DerValue.tag_Sequence);\n+\n+        add(CHALLENGE_PASSWORD_OID, true, String.class,\n+            Throws.unchecked(a -> a[0].getAsString()),\n+            (v,t) -> mkDerStream(t, new DerOutputStream().putPrintableString((String) v)),\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(UNSTRUCTURED_ADDRESS_OID, false, String[].class,\n+            a -> Arrays.stream(a).map(\n+                Throws.unchecked(DerValue::getAsString)).toArray(String[]::new),\n+            (v,t) -> t.putPrintableString((String) v),\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(EXTENSION_REQUEST_OID, true, sun.security.x509.CertificateExtensions.class,\n+            Throws.unchecked(a -> new CertificateExtensions(\n+                new DerInputStream(a[0].toByteArray()))),\n+            (v,t) -> {\n+                DerOutputStream temp = new DerOutputStream();\n+                CertificateExtensions exts = (CertificateExtensions) v;\n+                exts.encode(temp, true);\n+                return mkDerStream(t, temp);},\n+            DerValue.tag_Sequence);\n+\n+        add(SIGNING_CERTIFICATE_OID, true, sun.security.pkcs.SigningCertificateInfo.class,\n+            Throws.unchecked(a -> new SigningCertificateInfo(a[0].toByteArray())),\n+            (v,t) -> {\n+                DerOutputStream temp = new DerOutputStream();\n+                SigningCertificateInfo info = (SigningCertificateInfo) v;\n+                temp.writeBytes(info.toByteArray());\n+                return mkDerStream(t, temp);},\n+            DerValue.tag_Sequence);\n+\n+        add(SIGNATURE_TIMESTAMP_TOKEN_OID, true, byte[].class,\n+            a -> a[0].toByteArray(),\n+            (v,t) -> t.write(DerValue.tag_Set, (byte[]) v),\n+            DerValue.tag_Sequence);\n+\n+        add(CMS_ALGORITHM_PROTECTION_OID, true, byte[].class,\n+            a -> a[0].toByteArray(),\n+            (v,t) -> t.write(DerValue.tag_Set, (byte[]) v),\n+            DerValue.tag_Sequence);\n@@ -258,1 +245,1 @@\n-        Class<?> clazz = info == null ? BYTE_ARRAY_CLASS : info.valueClass();\n+        Class<?> clazz = info == null ? byte[].class : info.valueClass();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":88,"deletions":101,"binary":false,"changes":189,"status":"modified"}]}