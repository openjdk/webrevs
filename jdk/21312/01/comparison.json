{"files":[{"patch":"@@ -37,0 +37,3 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n@@ -38,0 +41,3 @@\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n@@ -62,0 +68,18 @@\n+    @FunctionalInterface\n+    private interface IOFunction<T, R> {\n+      public R apply(T t) throws IOException;\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static <R> R filesFunctionPrivileged(IOFunction<Path, R> function, final Path path, Supplier<R> def) throws IOException {\n+      try {\n+        return AccessController.doPrivileged((PrivilegedExceptionAction<R>) () -> function.apply(path));\n+      } catch (PrivilegedActionException e) {\n+          if (e.getException() instanceof IOException ioe) throw ioe; else return def.get();\n+      }\n+    }\n+\n+    private static Optional<Path> readSymlink(Path symlink) throws IOException { return Optional.ofNullable(Files.readSymbolicLink(symlink)); }\n+\n+    private static Boolean FALSE() { return false; } \/\/ there should be something in j.u.f or j.l for this!\n+\n@@ -63,1 +87,1 @@\n-        Path nsPath = null;\n+        Optional<Path> nsPath = Optional.empty();\n@@ -66,1 +90,1 @@\n-            nsPath = Files.readSymbolicLink(SELF.resolve(NS_MNT));\n+            nsPath = filesFunctionPrivileged(VirtualMachineImpl::readSymlink, SELF.resolve(NS_MNT), Optional::empty);\n@@ -68,1 +92,1 @@\n-            \/\/ do nothing\n+            \/\/ do nothing...\n@@ -70,1 +94,1 @@\n-            SELF_MNT_NS = Optional.ofNullable(nsPath);\n+            SELF_MNT_NS = nsPath;\n@@ -280,1 +304,1 @@\n-                targetMountNS = Optional.ofNullable(Files.readSymbolicLink(procPidPath.resolve(NS_MNT)));\n+                targetMountNS = filesFunctionPrivileged(VirtualMachineImpl::readSymlink, procPidPath.resolve(NS_MNT), Optional::empty);\n@@ -283,1 +307,1 @@\n-                if (!Files.exists(procPidPath)) {\n+                if (!filesFunctionPrivileged(Files::exists, procPidPath, VirtualMachineImpl::FALSE)) {\n@@ -296,1 +320,1 @@\n-                if (Files.isReadable(procPidRootTmp)) {\n+                if (filesFunctionPrivileged(Files::isReadable, procPidRootTmp, VirtualMachineImpl::FALSE)) {\n@@ -306,1 +330,1 @@\n-                curPidNS = Optional.ofNullable(Files.readSymbolicLink(procPidPath.resolve(NS_PID)));\n+                curPidNS = filesFunctionPrivileged(VirtualMachineImpl::readSymlink, procPidPath.resolve(NS_PID), Optional::empty);\n@@ -309,1 +333,1 @@\n-                if (!Files.exists(procPidPath)) {\n+                if (!filesFunctionPrivileged(Files::exists, procPidPath, VirtualMachineImpl::FALSE)) {\n","filename":"src\/jdk.attach\/linux\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":33,"deletions":9,"binary":false,"changes":42,"status":"modified"}]}