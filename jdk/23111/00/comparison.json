{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -340,5 +340,5 @@\n-          \" promo_limit: \" SIZE_FORMAT\n-          \" total_free_limit: \" SIZE_FORMAT\n-          \" max_old_gen_size: \" SIZE_FORMAT\n-          \" max_eden_size: \" SIZE_FORMAT\n-          \" mem_free_limit: \" SIZE_FORMAT,\n+          \" promo_limit: %zu\"\n+          \" total_free_limit: %zu\"\n+          \" max_old_gen_size: %zu\"\n+          \" max_eden_size: %zu\"\n+          \" mem_free_limit: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/adaptiveSizePolicy.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-      st->print_cr(\"- age %3u: \" SIZE_FORMAT_W(10) \" bytes, \" SIZE_FORMAT_W(10) \" total\",\n+      st->print_cr(\"- age %3u: %10zu bytes, %10zu total\",\n","filename":"src\/hotspot\/share\/gc\/shared\/ageTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -408,1 +408,1 @@\n-                            \" size=\" SIZE_FORMAT, loop_count, word_size);\n+                            \" size=%zu\", loop_count, word_size);\n@@ -484,1 +484,1 @@\n-  assert((int)len >= 0, \"size too large \" SIZE_FORMAT \" becomes %d\", words, (int)len);\n+  assert((int)len >= 0, \"size too large %zu becomes %d\", words, (int)len);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-    warning(\"Compact object headers require a java heap size smaller than \" SIZE_FORMAT\n-            \"%s (given: \" SIZE_FORMAT \"%s). Disabling compact object headers.\",\n+    warning(\"Compact object headers require a java heap size smaller than %zu\"\n+            \"%s (given: %zu%s). Disabling compact object headers.\",\n","filename":"src\/hotspot\/share\/gc\/shared\/fullGCForwarding.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-  log_debug(gc, heap)(\"Minimum heap \" SIZE_FORMAT \"  Initial heap \" SIZE_FORMAT \"  Maximum heap \" SIZE_FORMAT,\n+  log_debug(gc, heap)(\"Minimum heap %zu  Initial heap %zu  Maximum heap %zu\",\n@@ -112,1 +112,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" less than SpaceAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu less than SpaceAlignment: %zu\",\n@@ -115,1 +115,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" not aligned by SpaceAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu not aligned by SpaceAlignment: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/gcArguments.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-    log_info_p(gc, init)(\"NUMA Nodes: \" SIZE_FORMAT, os::numa_get_groups_num());\n+    log_info_p(gc, init)(\"NUMA Nodes: %zu\", os::numa_get_groups_num());\n@@ -94,1 +94,1 @@\n-  log_info_p(gc, init)(\"Heap Min Capacity: \" SIZE_FORMAT \"%s\",\n+  log_info_p(gc, init)(\"Heap Min Capacity: %zu%s\",\n@@ -96,1 +96,1 @@\n-  log_info_p(gc, init)(\"Heap Initial Capacity: \" SIZE_FORMAT \"%s\",\n+  log_info_p(gc, init)(\"Heap Initial Capacity: %zu%s\",\n@@ -98,1 +98,1 @@\n-  log_info_p(gc, init)(\"Heap Max Capacity: \" SIZE_FORMAT \"%s\",\n+  log_info_p(gc, init)(\"Heap Max Capacity: %zu%s\",\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-    out.print(\" \" SIZE_FORMAT \"M->\" SIZE_FORMAT \"M(\"  SIZE_FORMAT \"M)\", used_before_m, used_m, capacity_m);\n+    out.print(\" %zuM->%zuM(%zuM)\", used_before_m, used_m, capacity_m);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTraceTime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-              \"NewSize, current value \" SIZE_FORMAT \"%s.\",\n+              \"NewSize, current value %zu%s.\",\n@@ -262,1 +262,1 @@\n-  log_debug(gc)(\"After Metaspace GC failed to allocate size \" SIZE_FORMAT, _size);\n+  log_debug(gc)(\"After Metaspace GC failed to allocate size %zu\", _size);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" less than GenAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu less than GenAlignment: %zu\",\n@@ -85,1 +85,1 @@\n-         \"GenAlignment: \" SIZE_FORMAT \" not aligned by SpaceAlignment: \" SIZE_FORMAT,\n+         \"GenAlignment: %zu not aligned by SpaceAlignment: %zu\",\n@@ -88,1 +88,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" not aligned by GenAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu not aligned by GenAlignment: %zu\",\n@@ -131,2 +131,2 @@\n-        log_warning(gc, ergo)(\"MaxNewSize (\" SIZE_FORMAT \"k) is equal to or greater than the entire \"\n-                              \"heap (\" SIZE_FORMAT \"k).  A new max generation size of \" SIZE_FORMAT \"k will be used.\",\n+        log_warning(gc, ergo)(\"MaxNewSize (%zuk) is equal to or greater than the entire \"\n+                              \"heap (%zuk).  A new max generation size of %zuk will be used.\",\n@@ -150,2 +150,2 @@\n-      log_warning(gc, ergo)(\"NewSize (\" SIZE_FORMAT \"k) is greater than the MaxNewSize (\" SIZE_FORMAT \"k). \"\n-                            \"A new max generation size of \" SIZE_FORMAT \"k will be used.\",\n+      log_warning(gc, ergo)(\"NewSize (%zuk) is greater than the MaxNewSize (%zuk). \"\n+                            \"A new max generation size of %zuk will be used.\",\n@@ -248,1 +248,1 @@\n-  log_trace(gc, heap)(\"1: Minimum young \" SIZE_FORMAT \"  Initial young \" SIZE_FORMAT \"  Maximum young \" SIZE_FORMAT,\n+  log_trace(gc, heap)(\"1: Minimum young %zu  Initial young %zu  Maximum young %zu\",\n@@ -290,1 +290,1 @@\n-    log_trace(gc, heap)(\"2: Minimum young \" SIZE_FORMAT \"  Initial young \" SIZE_FORMAT \"  Maximum young \" SIZE_FORMAT,\n+    log_trace(gc, heap)(\"2: Minimum young %zu  Initial young %zu  Maximum young %zu\",\n@@ -307,1 +307,1 @@\n-  log_trace(gc, heap)(\"Minimum old \" SIZE_FORMAT \"  Initial old \" SIZE_FORMAT \"  Maximum old \" SIZE_FORMAT,\n+  log_trace(gc, heap)(\"Minimum old %zu  Initial old %zu  Maximum old %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/genArguments.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-                        \"%s (\" SIZE_FORMAT \") must be \"\n-                        \"greater than or equal to ergonomic PLAB minimum size (\" SIZE_FORMAT \")\\n\",\n+                        \"%s (%zu) must be \"\n+                        \"greater than or equal to ergonomic PLAB minimum size (%zu)\\n\",\n@@ -73,2 +73,2 @@\n-                        \"%s (\" SIZE_FORMAT \") must be \"\n-                        \"less than or equal to ergonomic PLAB maximum size (\" SIZE_FORMAT \")\\n\",\n+                        \"%s (%zu) must be \"\n+                        \"less than or equal to ergonomic PLAB maximum size (%zu)\\n\",\n@@ -127,1 +127,1 @@\n-                        \"MaxHeapSize (\" SIZE_FORMAT \") or SoftRefLRUPolicyMSPerMB \"\n+                        \"MaxHeapSize (%zu) or SoftRefLRUPolicyMSPerMB \"\n@@ -144,2 +144,2 @@\n-                        \"MarkStackSize (\" SIZE_FORMAT \") must be \"\n-                        \"less than or equal to MarkStackSizeMax (\" SIZE_FORMAT \")\\n\",\n+                        \"MarkStackSize (%zu) must be \"\n+                        \"less than or equal to MarkStackSizeMax (%zu)\\n\",\n@@ -236,2 +236,2 @@\n-                        \"%s (\" SIZE_FORMAT \") must be \"\n-                        \"less than or equal to aligned maximum value (\" SIZE_FORMAT \")\\n\",\n+                        \"%s (%zu) must be \"\n+                        \"less than or equal to aligned maximum value (%zu)\\n\",\n@@ -291,2 +291,2 @@\n-                        \"HeapBaseMinAddress (\" SIZE_FORMAT \") or MaxHeapSize (\" SIZE_FORMAT \") is too large. \"\n-                        \"Sum of them must be less than or equal to maximum of size_t (\" SIZE_FORMAT \")\\n\",\n+                        \"HeapBaseMinAddress (%zu) or MaxHeapSize (%zu) is too large. \"\n+                        \"Sum of them must be less than or equal to maximum of size_t (%zu)\\n\",\n@@ -315,2 +315,2 @@\n-                        \"MinTLABSize (\" SIZE_FORMAT \") must be \"\n-                        \"greater than or equal to reserved area in TLAB (\" SIZE_FORMAT \")\\n\",\n+                        \"MinTLABSize (%zu) must be \"\n+                        \"greater than or equal to reserved area in TLAB (%zu)\\n\",\n@@ -322,2 +322,2 @@\n-                        \"MinTLABSize (\" SIZE_FORMAT \") must be \"\n-                        \"less than or equal to ergonomic TLAB maximum (\" SIZE_FORMAT \")\\n\",\n+                        \"MinTLABSize (%zu) must be \"\n+                        \"less than or equal to ergonomic TLAB maximum (%zu)\\n\",\n@@ -335,2 +335,2 @@\n-                          \"TLABSize (\" SIZE_FORMAT \") must be \"\n-                          \"greater than or equal to MinTLABSize (\" SIZE_FORMAT \")\\n\",\n+                          \"TLABSize (%zu) must be \"\n+                          \"greater than or equal to MinTLABSize (%zu)\\n\",\n@@ -342,2 +342,2 @@\n-                          \"TLABSize (\" SIZE_FORMAT \") must be \"\n-                          \"less than or equal to ergonomic TLAB maximum size (\" SIZE_FORMAT \")\\n\",\n+                          \"TLABSize (%zu) must be \"\n+                          \"less than or equal to ergonomic TLAB maximum size (%zu)\\n\",\n@@ -361,1 +361,1 @@\n-                          \"less than or equal to ergonomic TLAB waste increment maximum size(\" SIZE_FORMAT \")\\n\",\n+                          \"less than or equal to ergonomic TLAB waste increment maximum size(%zu)\\n\",\n@@ -374,1 +374,1 @@\n-                        \"less than or equal to ergonomic SurvivorRatio maximum (\" SIZE_FORMAT \")\\n\",\n+                        \"less than or equal to ergonomic SurvivorRatio maximum (%zu)\\n\",\n@@ -386,2 +386,2 @@\n-                        \"MetaspaceSize (\" SIZE_FORMAT \") must be \"\n-                        \"less than or equal to MaxMetaspaceSize (\" SIZE_FORMAT \")\\n\",\n+                        \"MetaspaceSize (%zu) must be \"\n+                        \"less than or equal to MaxMetaspaceSize (%zu)\\n\",\n@@ -398,2 +398,2 @@\n-                        \"MaxMetaspaceSize (\" SIZE_FORMAT \") must be \"\n-                        \"greater than or equal to MetaspaceSize (\" SIZE_FORMAT \")\\n\",\n+                        \"MaxMetaspaceSize (%zu) must be \"\n+                        \"greater than or equal to MetaspaceSize (%zu)\\n\",\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -297,2 +297,2 @@\n-           \"Allocation failed, but actual size was updated. min: \" SIZE_FORMAT\n-           \", desired: \" SIZE_FORMAT \", actual: \" SIZE_FORMAT,\n+           \"Allocation failed, but actual size was updated. min: %zu\"\n+           \", desired: %zu, actual: %zu\",\n@@ -303,1 +303,1 @@\n-         PTR_FORMAT \" min: \" SIZE_FORMAT \", desired: \" SIZE_FORMAT,\n+         PTR_FORMAT \" min: %zu, desired: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -582,1 +582,1 @@\n-  log_debug(oopstorage, blocks)(\"%s: expand active array \" SIZE_FORMAT,\n+  log_debug(oopstorage, blocks)(\"%s: expand active array %zu\",\n@@ -1124,2 +1124,2 @@\n-          (\"Parallel iteration on %s: blocks = \" SIZE_FORMAT\n-           \", processed = \" SIZE_FORMAT \" (%2.f%%)\",\n+          (\"Parallel iteration on %s: blocks = %zu\"\n+           \", processed = %zu (%2.f%%)\",\n@@ -1174,1 +1174,1 @@\n-  st->print(\"%s: \" SIZE_FORMAT \" entries in \" SIZE_FORMAT \" blocks (%.F%%), \" SIZE_FORMAT \" bytes\",\n+  st->print(\"%s: %zu entries in %zu blocks (%.F%%), %zu bytes\",\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-         \"Minimum PLAB size \" SIZE_FORMAT \" must be larger than alignment reserve \" SIZE_FORMAT \" \"\n+         \"Minimum PLAB size %zu must be larger than alignment reserve %zu \"\n","filename":"src\/hotspot\/share\/gc\/shared\/plab.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-  assert(_stack.is_empty(), \"stack expected to be empty, size = \" SIZE_FORMAT,\n+  assert(_stack.is_empty(), \"stack expected to be empty, size = %zu\",\n@@ -73,1 +73,1 @@\n-         \"stack expected to have no cached segments, cache size = \" SIZE_FORMAT,\n+         \"stack expected to have no cached segments, cache size = %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-         \"Chunk size \" SIZE_FORMAT \" is smaller than page size \" SIZE_FORMAT,\n+         \"Chunk size %zu is smaller than page size %zu\",\n@@ -82,1 +82,1 @@\n-    log_debug(gc, heap)(\"Running %s with %u workers for \" SIZE_FORMAT \" work units pre-touching \" SIZE_FORMAT \"B.\",\n+    log_debug(gc, heap)(\"Running %s with %u workers for %zu work units pre-touching %zuB.\",\n@@ -87,1 +87,1 @@\n-    log_debug(gc, heap)(\"Running %s pre-touching \" SIZE_FORMAT \"B.\",\n+    log_debug(gc, heap)(\"Running %s pre-touching %zuB.\",\n","filename":"src\/hotspot\/share\/gc\/shared\/pretouchTask.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,1 @@\n-  assert(count == 0, \"%ss must be empty but has \" SIZE_FORMAT \" elements\", type, count);\n+  assert(count == 0, \"%ss must be empty but has %zu elements\", type, count);\n@@ -368,1 +368,1 @@\n-  log_develop_trace(gc, ref)(\" Dropped \" SIZE_FORMAT \" active Refs out of \" SIZE_FORMAT\n+  log_develop_trace(gc, ref)(\" Dropped %zu active Refs out of %zu\"\n@@ -562,1 +562,1 @@\n-    ls.print(SIZE_FORMAT \" \", list[i].length());\n+    ls.print(\"%zu \", list[i].length());\n@@ -565,1 +565,1 @@\n-  ls.print_cr(\"(\" SIZE_FORMAT \")\", total);\n+  ls.print_cr(\"(%zu)\", total);\n@@ -577,1 +577,1 @@\n-    assert(ref_lists[i].length() == 0, SIZE_FORMAT \" unexpected References in %u\",\n+    assert(ref_lists[i].length() == 0, \"%zu unexpected References in %u\",\n@@ -1098,1 +1098,1 @@\n-    log_develop_trace(gc, ref)(\" Dropped \" SIZE_FORMAT \" Refs out of \" SIZE_FORMAT \" Refs in discovered list \" PTR_FORMAT,\n+    log_develop_trace(gc, ref)(\" Dropped %zu Refs out of %zu Refs in discovered list \" PTR_FORMAT,\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-  tty->print_cr(\"  SATB BUFFER [%s] buf: \" PTR_FORMAT \" index: \" SIZE_FORMAT\n-                \" capacity: \" SIZE_FORMAT,\n+  tty->print_cr(\"  SATB BUFFER [%s] buf: \" PTR_FORMAT \" index: %zu\"\n+                \" capacity: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/satbMarkQueue.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,2 +78,1 @@\n-  #define FMT SIZE_FORMAT_W(*)\n-  stream->print(FMT, width, _stats[0]);\n+  stream->print(\"%*zu\", width, _stats[0]);\n@@ -81,1 +80,1 @@\n-    stream->print(\" \" FMT, width, _stats[i]);\n+    stream->print(\" %*zu\", width, _stats[i]);\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,1 @@\n-                      \" refills %d  alloc: %8.6f desired_size: \" SIZE_FORMAT \" -> \" SIZE_FORMAT,\n+                      \" refills %d  alloc: %8.6f desired_size: %zu -> %zu\",\n@@ -266,1 +266,1 @@\n-  log_develop_trace(gc, tlab)(\"TLAB min: \" SIZE_FORMAT \" initial: \" SIZE_FORMAT \" max: \" SIZE_FORMAT,\n+  log_develop_trace(gc, tlab)(\"TLAB min: %zu initial: %zu max: %zu\",\n@@ -302,2 +302,2 @@\n-            \" desired_size: \" SIZE_FORMAT \"KB\"\n-            \" slow allocs: %d  refill waste: \" SIZE_FORMAT \"B\"\n+            \" desired_size: %zuKB\"\n+            \" slow allocs: %d  refill waste: %zuB\"\n@@ -454,2 +454,2 @@\n-                      \" gc: \" SIZE_FORMAT \"B max: \" SIZE_FORMAT \"B\"\n-                      \" slow: \" SIZE_FORMAT \"B max: \" SIZE_FORMAT \"B\",\n+                      \" gc: %zuB max: %zuB\"\n+                      \" slow: %zuB max: %zuB\",\n","filename":"src\/hotspot\/share\/gc\/shared\/threadLocalAllocBuffer.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    log_trace(gc, tlab)(\"ThreadLocalAllocBuffer::compute_size(\" SIZE_FORMAT \") returns failure\",\n+    log_trace(gc, tlab)(\"ThreadLocalAllocBuffer::compute_size(%zu) returns failure\",\n@@ -68,1 +68,1 @@\n-  log_trace(gc, tlab)(\"ThreadLocalAllocBuffer::compute_size(\" SIZE_FORMAT \") returns \" SIZE_FORMAT,\n+  log_trace(gc, tlab)(\"ThreadLocalAllocBuffer::compute_size(%zu) returns %zu\",\n@@ -89,3 +89,3 @@\n-                              \" obj: \" SIZE_FORMAT\n-                              \" free: \" SIZE_FORMAT\n-                              \" waste: \" SIZE_FORMAT,\n+                              \" obj: %zu\"\n+                              \" free: %zu\"\n+                              \" waste: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/threadLocalAllocBuffer.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-  out->print(\" Min: \" SIZE_FORMAT \", Avg: %4.1lf, Max: \" SIZE_FORMAT \", Diff: \" SIZE_FORMAT, min, avg, max, diff);\n+  out->print(\" Min: %zu, Avg: %4.1lf, Max: %zu, Diff: %zu\", min, avg, max, diff);\n@@ -54,1 +54,1 @@\n-    out->print(\", Sum: \" SIZE_FORMAT, sum);\n+    out->print(\", Sum: %zu\", sum);\n@@ -78,1 +78,1 @@\n-      out->print(\"  \" SIZE_FORMAT, phase->get(i));\n+      out->print(\"  %zu\", phase->get(i));\n","filename":"src\/hotspot\/share\/gc\/shared\/workerDataArray.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}