{"files":[{"patch":"@@ -232,0 +232,3 @@\n+  ifeq ($$($1_NAME), )\n+    $$(error NAME must not be empty in $1)\n+  endif\n","filename":"make\/common\/NativeCompilation.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+  $1_CREATE_DEBUGINFO := false\n@@ -44,1 +45,3 @@\n-        # Generate debuginfo files.\n+        $1_CREATE_DEBUGINFO := true\n+\n+        # Setup where the platform specific debuginfo files end up\n@@ -46,5 +49,0 @@\n-          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb\" \\\n-              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\"\n-          ifeq ($(SHIP_DEBUG_SYMBOLS), public)\n-            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).stripped.pdb\"\n-          endif\n@@ -53,21 +51,1 @@\n-\n-        else ifeq ($(call isTargetOs, linux), true)\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n-          # Setup the command line creating debuginfo files, to be run after linking.\n-          # It cannot be run separately since it updates the original target file\n-          # Creating the debuglink is done in another command rather than all at once\n-          # so we can run it after strip is called, since strip can sometimes mangle the\n-          # embedded debuglink, which we want to avoid.\n-          $1_CREATE_DEBUGINFO_CMDS := \\\n-              $$($1_OBJCOPY) --only-keep-debug $$($1_TARGET) $$($1_DEBUGINFO_FILES) && \\\n-              $$(CHMOD) -x $$($1_DEBUGINFO_FILES)\n-          $1_CREATE_DEBUGLINK_CMDS := $(CD) $$($1_SYMBOLS_DIR) && \\\n-              $$($1_OBJCOPY) --add-gnu-debuglink=$$($1_DEBUGINFO_FILES) $$($1_TARGET)\n-\n-        else ifeq ($(call isTargetOs, aix), true)\n-          # AIX does not provide the equivalent of OBJCOPY to extract debug symbols,\n-          # so we copy the compiled object with symbols to the .debuginfo file, which\n-          # happens prior to the STRIP_CMD on the original target object file.\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n-          $1_CREATE_DEBUGINFO_CMDS := $(CP) $$($1_TARGET) $$($1_DEBUGINFO_FILES)\n-\n+          $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).diz\n@@ -78,2 +56,12 @@\n-          $1_CREATE_DEBUGINFO_CMDS := \\\n-              $(DSYMUTIL) --out $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM $$($1_TARGET)\n+          $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n+        else ifeq ($(call isTargetOsType, unix), true)\n+          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n+          $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n+        endif\n+\n+        ifeq ($(call isTargetOs, windows), true)\n+          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb\" \\\n+              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\"\n+          ifeq ($(SHIP_DEBUG_SYMBOLS), public)\n+            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).stripped.pdb\"\n+          endif\n@@ -101,7 +89,0 @@\n-          ifeq ($(call isTargetOs, windows), true)\n-            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).diz\n-          else\n-            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n-          endif\n-          $1 += $$($1_DEBUGINFO_ZIP)\n-\n@@ -114,0 +95,1 @@\n+          $1 += $$($1_DEBUGINFO_ZIP)\n","filename":"make\/common\/native\/DebugSymbols.gmk","additions":18,"deletions":36,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -55,6 +55,3 @@\n-  ifneq ($$($1_STRIP_SYMBOLS), false)\n-    # Default to using the global STRIPFLAGS. Allow for overriding with an\n-    # empty value\n-    $1_STRIPFLAGS ?= $(STRIPFLAGS)\n-    $1_STRIP_CMD := $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n-  endif\n+  # Default to using the global STRIPFLAGS. Allow for overriding with an\n+  # empty value\n+  $1_STRIPFLAGS ?= $(STRIPFLAGS)\n@@ -117,1 +114,1 @@\n-\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_run_ar, \\\n@@ -138,0 +135,7 @@\n+  ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n+    $1_CODESIGN_OPTS := \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp \\\n+        --options runtime\n+  else ifeq ($(MACOSX_CODESIGN_MODE), debug)\n+    $1_CODESIGN_OPTS := -\n+  endif\n+\n@@ -140,1 +144,1 @@\n-      $$($1_CREATE_DEBUGINFO_CMDS) $$($1_STRIP_CMD) $$($1_CREATE_DEBUGLINK_CMDS)\n+      $$($1_DEBUGINFO_FILES) $$($1_STRIPFLAGS)\n@@ -156,1 +160,1 @@\n-\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_run_ld, \\\n@@ -161,15 +165,38 @@\n-\t$$($1_CREATE_DEBUGINFO_CMDS)\n-\t$$($1_STRIP_CMD)\n-\t$$($1_CREATE_DEBUGLINK_CMDS)\n-        # On macosx, optionally run codesign on every binary.\n-        # Remove signature explicitly first to avoid warnings if the linker\n-        # added a default adhoc signature.\n-        ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n-\t  $(CODESIGN) --remove-signature $$@\n-\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp \\\n-\t      --options runtime --entitlements \\\n-\t      $$(call GetEntitlementsFile, $$@) $$@\n-        else ifeq ($(MACOSX_CODESIGN_MODE), debug)\n-\t  $(CODESIGN) --remove-signature $$@\n-\t  $(CODESIGN) -f -s - --entitlements \\\n-\t      $$(call GetEntitlementsFile, $$@) $$@\n+        ifeq ($$($1_CREATE_DEBUGINFO), true)\n+          ifeq ($(call isTargetOs, linux), true)\n+            # This cannot be run separately since it updates the original target\n+            # file.\n+\t    $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_create_debuginfo, \\\n+\t      $$($1_OBJCOPY) --only-keep-debug $$($1_TARGET) $$($1_DEBUGINFO_FILES))\n+\t    $$(CHMOD) -x $$($1_DEBUGINFO_FILES)\n+          else ifeq ($(call isTargetOs, aix), true)\n+            # AIX does not provide the equivalent of objcopy to extract debug\n+            # symbols, so we copy unstripped library instead.\n+\t    $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_create_debuginfo, \\\n+\t      $(CP) $$($1_TARGET) $$($1_DEBUGINFO_FILES))\n+          else ifeq ($(call isTargetOs, macosx), true)\n+\t    $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_create_debuginfo, \\\n+\t      $(DSYMUTIL) --out $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM $$($1_TARGET))\n+          endif\n+        endif\n+        ifneq ($$($1_STRIP_SYMBOLS), false)\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_strip, \\\n+\t    $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n+        endif\n+        ifeq ($$($1_CREATE_DEBUGINFO), true)\n+          ifeq ($(call isTargetOs, linux), true)\n+            # Run this after strip is called, since strip can sometimes mangle\n+            # the embedded debuglink, which we want to avoid.\n+\t    $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_add_debuginfo_link, \\\n+\t      $(CD) $$($1_SYMBOLS_DIR) && \\\n+\t          $$($1_OBJCOPY) --add-gnu-debuglink=$$($1_DEBUGINFO_FILES) $$($1_TARGET))\n+          endif\n+        endif\n+        ifneq ($(MACOSX_CODESIGN_MODE), disabled)\n+          # Remove signature explicitly first to avoid warnings if the linker\n+          # added a default adhoc signature.\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_codesign_clear, \\\n+\t    $(CODESIGN) --remove-signature $$@)\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_codesign_add, \\\n+\t    $(CODESIGN) -f -s $$($1_CODESIGN_OPTS) --entitlements \\\n+\t        $$(call GetEntitlementsFile, $$@) $$@)\n","filename":"make\/common\/native\/Link.gmk","additions":51,"deletions":24,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_run_lib, \\\n@@ -101,1 +101,1 @@\n-\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_run_ld, \\\n@@ -111,1 +111,2 @@\n-\t  $$($1_MT) -nologo -manifest $$($1_MANIFEST) \\\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_manifest, \\\n+\t    $$($1_MT) -nologo -manifest $$($1_MANIFEST) \\\n@@ -113,1 +114,1 @@\n-\t      -outputresource:$$@;#1\n+\t      -outputresource:$$@;#1)\n","filename":"make\/common\/native\/LinkMicrosoft.gmk","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}