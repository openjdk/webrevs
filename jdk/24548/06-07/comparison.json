{"files":[{"patch":"@@ -34,4 +34,4 @@\n-    Anno a = (Anno & Serializable) ()-> null; \/\/ annotations not allowed\n-    Anno a = (Serializable & Anno & Anno2) ()-> null; \/\/ annotations not allowed\n-    Anno b = (Anno & Serializable) ClassInIntersectionTypeTest::myAnnoType; \/\/ annotations not allowed\n-    Anno b = (Serializable & Anno2 & Anno) ClassInIntersectionTypeTest::myAnnoType; \/\/ annotations not allowed\n+    Anno anno1 = (Anno & Serializable) ()-> null; \/\/ annotations not allowed\n+    Anno anno2 = (Serializable & Anno & Anno2) ()-> null; \/\/ annotations not allowed\n+    Anno anno3 = (Anno & Serializable) ClassInIntersectionTypeTest::myAnnoType; \/\/ annotations not allowed\n+    Anno anno4 = (Serializable & Anno2 & Anno) ClassInIntersectionTypeTest::myAnnoType; \/\/ annotations not allowed\n@@ -45,1 +45,1 @@\n-        t.annotationType();  \/\/ annotations not allowed\n+        t.annotationType();\n@@ -48,1 +48,1 @@\n-    Anno c = ()-> null; \/\/ annotations are not functional interfaces\n+    Anno anno5 = ()-> null; \/\/ annotations are not functional interfaces\n","filename":"test\/langtools\/tools\/javac\/lambda\/ClassInIntersectionTypeTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-ClassInIntersectionTypeTest.java:35:10: compiler.err.already.defined: kindname.variable, a, kindname.class, ClassInIntersectionTypeTest\n-ClassInIntersectionTypeTest.java:37:10: compiler.err.already.defined: kindname.variable, b, kindname.class, ClassInIntersectionTypeTest\n@@ -7,4 +5,4 @@\n-ClassInIntersectionTypeTest.java:34:36: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n-ClassInIntersectionTypeTest.java:35:44: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n-ClassInIntersectionTypeTest.java:36:36: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n-ClassInIntersectionTypeTest.java:37:44: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno2))\n+ClassInIntersectionTypeTest.java:34:40: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n+ClassInIntersectionTypeTest.java:35:48: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n+ClassInIntersectionTypeTest.java:36:40: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno))\n+ClassInIntersectionTypeTest.java:37:48: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest.Anno2))\n@@ -13,2 +11,2 @@\n-ClassInIntersectionTypeTest.java:48:14: compiler.err.prob.found.req: (compiler.misc.not.a.functional.intf: ClassInIntersectionTypeTest.Anno)\n-13 errors\n+ClassInIntersectionTypeTest.java:48:18: compiler.err.prob.found.req: (compiler.misc.not.a.functional.intf: ClassInIntersectionTypeTest.Anno)\n+11 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/ClassInIntersectionTypeTest.out","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}