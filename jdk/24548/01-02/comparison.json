{"files":[{"patch":"@@ -3342,1 +3342,1 @@\n-                                if (bound.tsym != syms.objectType.tsym && (!bound.isInterface() || (bound.tsym.flags() & ANNOTATION) != 0)) {\n+                                if (bound.tsym != syms.objectType.tsym && !bound.isInterface()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,0 +8,2 @@\n+import java.io.Serializable;\n+\n@@ -22,0 +24,3 @@\n+\n+    @interface Anno {}\n+    Anno a = (Anno & Serializable) ()-> null; \/\/ OK\n","filename":"test\/langtools\/tools\/javac\/lambda\/ClassInIntersectionTypeTest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-ClassInIntersectionTypeTest.java:11:58: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest))\n-ClassInIntersectionTypeTest.java:16:12: compiler.err.prob.found.req: (compiler.misc.infer.no.conforming.assignment.exists: T, (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest)))\n+ClassInIntersectionTypeTest.java:13:58: compiler.err.prob.found.req: (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest))\n+ClassInIntersectionTypeTest.java:18:12: compiler.err.prob.found.req: (compiler.misc.infer.no.conforming.assignment.exists: T, (compiler.misc.bad.intersection.target.for.functional.expr: (compiler.misc.not.an.intf.component: ClassInIntersectionTypeTest)))\n","filename":"test\/langtools\/tools\/javac\/lambda\/ClassInIntersectionTypeTest.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}