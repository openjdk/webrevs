{"files":[{"patch":"@@ -846,0 +846,157 @@\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL,\n+        applyIfCPUFeature = {\"sve\", \"true\"},\n+        applyIfCPUFeatureAnd = {\"avx\", \"true\", \"sve\", \"true\"})\n+    @IR(failOn = IRNode.CALL,\n+        applyIfCPUFeatureAnd = {\"sve\", \"true\", \"avx\", \"true\"},\n+        applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL,\n+        applyIfCPUFeature = {\"sve\", \"true\"},\n+        applyIfCPUFeatureAnd = {\"sve\", \"true\", \"avx\", \"true\"},\n+        applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\"})\n+    public void onlyOneApplyIfCPUFeature() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"true\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"true\", \"avx\"})\n+    public void applyIfCPUFeatureTooManyFlags() {}\n+\n+    @FailCount(4)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"Bla\"})\n+    public void applyIfCPUFeatureMissingValue() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sveeee\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"xyz\", \"foo\"})\n+    public void applyIfCPUFeatureUnknownFlag() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"avx\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\" \", \" \"})\n+    public void applyIfCPUFeatureEmptyValue() {}\n+\n+    @FailCount(10)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"!=0\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \">0\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"<0\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \">=0\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeature = {\"sve\", \"<=0\"})\n+    public void applyIfCPUFeatureFaultyComparator() {}\n+\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"true\", \"avx\"})\n+    public void applyIfCPUFeatureAndNotEnoughFlags() {}\n+\n+    @FailCount(6)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"true\", \"avx\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"Bla\"})\n+    public void applyIfCPUFeatureAndMissingValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"svee\", \"true\", \"sve\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfCPUFeatureAndUnknownFlag() {}\n+\n+    @FailCount(11)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"\", \"avx\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\" \", \" \", \" \", \" \"})\n+    public void applyIfCPUFeatureAndEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"! 34\", \"avx\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"!== 34\", \"avx\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<<= 34\", \"avx\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"=<34\", \"avx\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<\", \"avx\", \"!=\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"!=0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \">0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \">=0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureAnd = {\"sve\", \"<=0\", \"avx\", \"true\"})\n+    public void applyIfCPUFeatureAndFaultyComparator() {}\n+\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\"})\n+    public void applyIfCPUFeatureOrNotEnoughFlags() {}\n+\n+    @FailCount(6)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"Bla\"})\n+    public void applyIfCPUFeatureOrMissingValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"svee\", \"true\", \"sve\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfCPUFeatureOrUnknownFlag() {}\n+\n+    @FailCount(11)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"\", \"avx\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\" \", \" \", \" \", \" \"})\n+    public void applyIfCPUFeatureOrEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"! 34\", \"avx\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"!== 34\", \"avx\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<<= 34\", \"avx\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"=<34\", \"avx\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<\", \"avx\", \"!=\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"!=0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \">0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \">=0\", \"avx\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfCPUFeatureOr = {\"sve\", \"<=0\", \"avx\", \"true\"})\n+    public void applyIfCPUFeatureOrFaultyComparator() {}\n+\n+\n@@ -848,2 +1005,161 @@\n-    @IR(failOn = IRNode.CALL, applyIf = {\"TLABRefillWasteFraction\", \"50\"}, applyIfNot = {\"UseTLAB\", \"true\"})\n-    @IR(failOn = IRNode.CALL, applyIfAnd = {\"TLABRefillWasteFraction\", \"50\", \"UseTLAB\", \"true\"},\n+    @IR(failOn = IRNode.CALL,\n+        applyIfPlatform = {\"x64\", \"true\"},\n+        applyIfPlatformAnd = {\"x64\", \"true\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL,\n+        applyIfPlatformAnd = {\"aarch64\", \"true\", \"x64\", \"true\"},\n+        applyIfPlatformOr = {\"aarch64\", \"true\", \"x64\", \"true\"})\n+    @IR(failOn = IRNode.CALL,\n+        applyIfPlatform = {\"aarch64\", \"true\"},\n+        applyIfPlatformAnd = {\"aarch64\", \"true\", \"x64\", \"true\"},\n+        applyIfPlatformOr = {\"aarch64\", \"true\", \"x64\", \"true\"})\n+    public void onlyOneApplyIfPlatform() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"true\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"true\", \"aarch64\"})\n+    public void applyIfPlatformTooManyFlags() {}\n+\n+    @FailCount(4)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"Bla\"})\n+    public void applyIfPlatformMissingValue() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64eee\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"xyz\", \"foo\"})\n+    public void applyIfPlatformUnknownFlag() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"aarch64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\" \", \" \"})\n+    public void applyIfPlatformEmptyValue() {}\n+\n+    @FailCount(10)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"!=0\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \">0\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"<0\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \">=0\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatform = {\"x64\", \"<=0\"})\n+    public void applyIfPlatformFaultyComparator() {}\n+\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"true\", \"aarch64\"})\n+    public void applyIfPlatformAndNotEnoughFlags() {}\n+\n+    @FailCount(6)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"true\", \"aarch64\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"Bla\"})\n+    public void applyIfPlatformAndMissingValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64e\", \"true\", \"x64\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfPlatformAndUnknownFlag() {}\n+\n+    @FailCount(11)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"\", \"aarch64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\" \", \" \", \" \", \" \"})\n+    public void applyIfPlatformAndEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"! 34\", \"x64\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"!== 34\", \"x64\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<<= 34\", \"x64\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"=<34\", \"x64\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<\", \"x64\", \"!=\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"!=0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \">0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \">=0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformAnd = {\"x64\", \"<=0\", \"aarch64\", \"true\"})\n+    public void applyIfPlatformAndFaultyComparator() {}\n+\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\"})\n+    public void applyIfPlatformOrNotEnoughFlags() {}\n+\n+    @FailCount(6)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"Bla\"})\n+    public void applyIfPlatformOrMissingValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64e\", \"true\", \"x64\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfPlatformOrUnknownFlag() {}\n+\n+    @FailCount(11)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"\", \"aarch64\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\" \", \" \", \" \", \" \"})\n+    public void applyIfPlatformOrEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"! 34\", \"x64\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"!== 34\", \"x64\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<<= 34\", \"x64\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"=<34\", \"x64\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<\", \"x64\", \"!=\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"!=0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \">0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \">=0\", \"aarch64\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfPlatformOr = {\"x64\", \"<=0\", \"aarch64\", \"true\"})\n+    public void applyIfPlatformOrFaultyComparator() {}\n+\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL,\n+        applyIf = {\"TLABRefillWasteFraction\", \"50\"},\n+        applyIfNot = {\"UseTLAB\", \"true\"})\n+    @IR(failOn = IRNode.CALL,\n+        applyIfAnd = {\"TLABRefillWasteFraction\", \"50\", \"UseTLAB\", \"true\"},\n@@ -851,1 +1167,3 @@\n-    @IR(failOn = IRNode.CALL, applyIf = {\"TLABRefillWasteFraction\", \"50\"}, applyIfNot = {\"TLABRefillWasteFraction\", \"50\"},\n+    @IR(failOn = IRNode.CALL,\n+        applyIf = {\"TLABRefillWasteFraction\", \"50\"},\n+        applyIfNot = {\"TLABRefillWasteFraction\", \"50\"},\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestBadFormat.java","additions":321,"deletions":3,"binary":false,"changes":324,"status":"modified"}]}