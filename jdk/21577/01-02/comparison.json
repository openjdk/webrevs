{"files":[{"patch":"@@ -285,2 +285,2 @@\n-                \/\/ keyExchange is null for TLSv1.3 cipher suites,\n-                \/\/ it means ECDHE for both key exchange and authentication.\n+                \/\/ keyExchange is null for TLSv1.3 cipher suites, it means\n+                \/\/ undefined for both key exchange and authentication.\n@@ -288,1 +288,1 @@\n-                    return new String[]{\"ECDHE\", \"ECDHE\"};\n+                    return new String[]{null, null};\n@@ -290,1 +290,3 @@\n-                    return new String[]{cipherSuite.keyExchange.kx, cipherSuite.keyExchange.authn};\n+                    return new String[]{\n+                        cipherSuite.keyExchange.kx,\n+                        cipherSuite.keyExchange.authn};\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLAlgorithmDecomposer.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -383,3 +383,3 @@\n-                        new IllegalArgumentException(\"TLSCipherConstraint \"\n-                                + \"should not be linked with other constraints. \"\n-                                + \"Constraint: \" + constraintEntry);\n+                    new IllegalArgumentException(\n+                        \"TLSCipherConstraint should not be linked with other \"\n+                        + \"constraints. Constraint: \" + constraintEntry);\n@@ -448,2 +448,4 @@\n-                    } else if (PROPERTY_TLS_DISABLED_ALGS.equalsIgnoreCase(propertyName) &&\n-                            (segment = TLSCipherSegment.nameOf(entry)) != null) {\n+                    } else if (PROPERTY_TLS_DISABLED_ALGS\n+                                   .equalsIgnoreCase(propertyName) &&\n+                               (segment = TLSCipherSegment.nameOf(entry))\n+                               != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8341964\n- * @summary Add mechanism to disable different parts of TLS cipher suite\n- * @run testng\/othervm TLSCipherConstrainDisablePartsOfCipherSuiteTLSv13\n- *\/\n-\n-import static org.testng.AssertJUnit.assertTrue;\n-\n-import org.testng.annotations.BeforeTest;\n-import org.testng.annotations.Test;\n-\n-import java.security.Security;\n-import java.util.List;\n-\n-public class TLSCipherConstrainDisablePartsOfCipherSuiteTLSv13 extends NoDesRC4DesEdeCiphSuite {\n-\n-    private static final String SECURITY_PROPERTY = \"jdk.tls.disabledAlgorithms\";\n-    private static final String TEST_ALGORITHMS = \"ECDHE kx\";\n-    private static final String[] CIPHER_SUITES = new String[] {\n-        \"TLS_AES_256_GCM_SHA384\",\n-        \"TLS_AES_128_GCM_SHA256\",\n-        \"TLS_CHACHA20_POLY1305_SHA256\"\n-    };\n-    static final List<Integer> CIPHER_SUITES_IDS = List.of(\n-        0x1302,\n-        0x1301,\n-        0x1303\n-    );\n-\n-    @Override\n-    protected String getProtocol() {\n-        return \"TLSv1.3\";\n-    }\n-\n-    @BeforeTest\n-    void setUp() throws Exception {\n-        Security.setProperty(SECURITY_PROPERTY, TEST_ALGORITHMS);\n-    }\n-\n-    @Test\n-    public void testDefault() throws Exception {\n-        assertTrue(testDefaultCase(CIPHER_SUITES_IDS));\n-    }\n-\n-    @Test\n-    public void testAddDisabled() throws Exception {\n-        assertTrue(testEngAddDisabled(CIPHER_SUITES, CIPHER_SUITES_IDS));\n-    }\n-\n-    @Test\n-    public void testOnlyDisabled() throws Exception {\n-        assertTrue(testEngOnlyDisabled(CIPHER_SUITES));\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/ssl\/CipherSuite\/TLSCipherConstrainDisablePartsOfCipherSuiteTLSv13.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"}]}