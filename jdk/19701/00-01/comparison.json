{"files":[{"patch":"@@ -341,1 +341,1 @@\n-            if (notSignedByAlias || aliasNotInStore) {\n+            if (notSignedByAlias) {\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,1 @@\n+                .shouldNotContain(\"not signed by alias in this keystore\")\n@@ -86,1 +87,1 @@\n-        \/\/ Verify with only CA keystore is also mostly OK\n+        \/\/ Verify with only CA keystore is mostly OK\n@@ -89,1 +90,2 @@\n-                .shouldHaveExitValue(32); \/\/aliasNotInStore(32)\n+                .shouldContain(\"not signed by alias in this keystore\")\n+                .shouldHaveExitValue(0);\n@@ -95,0 +97,2 @@\n+                .shouldContainOrderedSequence(\"Error:\", \"certificate chain is invalid\", \"Warning:\")\n+                .shouldNotContain(\"not signed by alias in this keystore\")\n@@ -98,1 +102,1 @@\n-        \/\/ \"chain invalid\" and \"not alias in keystore\"\n+        \/\/ \"chain invalid\" and the warning is \"not alias in keystore\"\n@@ -102,1 +106,3 @@\n-                .shouldHaveExitValue(36);\n+                .shouldContainOrderedSequence(\"Error:\", \"certificate chain is invalid\", \"Warning:\")\n+                .shouldContainOrderedSequence(\"Warning:\", \"not signed by alias in this keystore\")\n+                .shouldHaveExitValue(4);\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/CheckUsage.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                .shouldHaveExitValue(36); \/\/ aliasNotInStore(32), chainNotValidated(4)\n+                .shouldHaveExitValue(4);\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/EnableRevocation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,2 +120,1 @@\n-        int expectedExitCode = ALIAS_NOT_IN_STORE_EXIT_CODE\n-                + CHAIN_NOT_VALIDATED_EXIT_CODE;\n+        int expectedExitCode = CHAIN_NOT_VALIDATED_EXIT_CODE;\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/warnings\/AliasNotInStoreTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,0 @@\n-    static final int ALIAS_NOT_IN_STORE_EXIT_CODE = 32;\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/warnings\/Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,1 +245,0 @@\n-    }\n@@ -247,0 +246,26 @@\n+        \/\/ Multi lines\n+        OutputAnalyzer multi = new OutputAnalyzer(\"\"\"\n+                first\n+                second\n+                third\n+                fourth\n+                fifth\n+                \"\"\", \"\");\n+        multi.shouldContainOrderedSequence();\n+        multi.shouldContainOrderedSequence(\"first\");\n+        multi.shouldContainOrderedSequence(\"first\", \"third\", \"fifth\");\n+        multi.shouldContainOrderedSequence(\"fir\", \"ird\", \"fif\");\n+        multi.shouldContainOrderedSequence(\"second\", \"fourth\");\n+        try {\n+            multi.shouldContainOrderedSequence(\"second\", \"first\");\n+            throw new RuntimeException(\"Should not succeed\");\n+        } catch (RuntimeException e) {\n+            \/\/ good\n+        }\n+        try {\n+            multi.shouldContainOrderedSequence(\"second\", \"sixth\");\n+            throw new RuntimeException(\"Should not succeed\");\n+        } catch (RuntimeException e) {\n+            \/\/ good\n+        }\n+    }\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/OutputAnalyzerTest.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -900,0 +900,21 @@\n+    \/**\n+     * Verify that lines in the stdout and stderr contents of output buffer\n+     * contains each item of strings, in the order they appear. Note that\n+     * two items cannot appear in the same line.\n+     *\n+     * @param strings Strings that buffer should contain\n+     * @throws RuntimeException If not all string are found\n+     *\/\n+    public OutputAnalyzer shouldContainOrderedSequence(String... strings) {\n+        String[] lines = asLines().toArray(new String[0]);\n+        int elementIndex = 0;\n+        for (String line : lines) {\n+            if (elementIndex < strings.length && line.contains(strings[elementIndex])) {\n+                elementIndex++;\n+            }\n+        }\n+        if (elementIndex != strings.length) {\n+            throw new RuntimeException(\"Elements do not appear in the correct order.\");\n+        }\n+        return this;\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/process\/OutputAnalyzer.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}