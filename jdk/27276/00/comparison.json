{"files":[{"patch":"@@ -122,4 +122,3 @@\n-        char[] b = key.toCharArray();\n-        if (b[0] >= 'a' && b[0] <= 'z') {\n-            b[0] = (char)(b[0] - ('a' - 'A'));\n-        } else if (b[0] == '\\r' || b[0] == '\\n')\n+        int i = 0;\n+        char c = key.charAt(i);\n+        if (c == '\\r' || c == '\\n')\n@@ -127,0 +126,14 @@\n+        if (c >= 'a' && c <= 'z') {\n+            \/\/ start with lowercase\n+        } else {\n+            i++;\n+            for (; i < len; i++) {\n+                c = key.charAt(i);\n+                if (c == '\\r' || c == '\\n')\n+                    throw new IllegalArgumentException(\"illegal character in key\");\n+                else if (c >= 'A' && c <='Z') {\n+                    break;\n+                }\n+            }\n+        }\n+        if (i == len) return key;\n@@ -128,4 +141,10 @@\n-        for (int i=1; i<len; i++) {\n-            if (b[i] >= 'A' && b[i] <= 'Z') {\n-                b[i] = (char) (b[i] + ('a' - 'A'));\n-            } else if (b[i] == '\\r' || b[i] == '\\n')\n+        char[] b = key.toCharArray();\n+        if (i == 0) {\n+            b[0] = (char)(b[0] - ('a' - 'A'));\n+            i++;\n+        }\n+        for (; i < len; i++) {\n+            c = b[i];\n+            if (c >= 'A' && c <= 'Z') {\n+                b[i] = (char) (c + ('a'-'A'));\n+            } else if (c == '\\r' || c == '\\n')\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Headers.java","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -292,0 +292,2 @@\n+        assertThrows(IAE, () -> h0.putAll(Map.of(\"AbC\\n\", List.of(\"hey\"))));\n+        assertThrows(IAE, () -> h0.putAll(Map.of(\"Ab\\n\", List.of(\"hi\"))));\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HeadersTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}