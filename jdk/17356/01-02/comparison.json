{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -82,1 +82,0 @@\n-#include \"utilities\/preserveErrno.hpp\"\n@@ -300,2 +299,1 @@\n-      log_trace(os,map)(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + maxDisclaimSize, errno);\n-      trcVerbose(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + maxDisclaimSize, errno);\n+      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, maxDisclaimSize), os::strerror(ep.saved()));\n@@ -310,2 +308,1 @@\n-      log_trace(os,map)(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + lastDisclaimSize, errno);\n-      trcVerbose(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + lastDisclaimSize, errno);\n+      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, lastDisclaimSize), os::strerror(ep.saved()));\n@@ -1475,6 +1472,3 @@\n-      trcVerbose(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not a sub \"\n-              \"range of [\" PTR_FORMAT \" - \" PTR_FORMAT \"].\",\n-              p2i(p), p2i(p + s), p2i(addr), p2i(addr + size));\n-      log_trace(os,map)(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not a sub \"\n-              \"range of [\" PTR_FORMAT \" - \" PTR_FORMAT \"].\",\n-              p2i(p), p2i(p + s), p2i(addr), p2i(addr + size));\n+      log_trace(os,map)(RANGEFMT \" is not a sub \"\n+                \"range of \" RANGEFMT, RANGEFMTARGS(p, s),\n+                RANGEFMTARGS(addr, size));\n@@ -1484,4 +1478,1 @@\n-      trcVerbose(\"range [\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not\"\n-              \" aligned to pagesize (%lu)\", p2i(p), p2i(p + s), (unsigned long) pagesize);\n-      log_trace(os,map)(\"range [\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not\"\n-              \" aligned to pagesize (%lu)\", p2i(p), p2i(p + s), (unsigned long) pagesize);\n+      log_trace(os,map)(\"range \" RANGEFMT \" is not aligned to pagesize (%lu)\", RANGEFMTARGS(p, s), (unsigned long) pagesize);\n@@ -1555,2 +1546,1 @@\n-    trcVerbose(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n-    log_trace(os,map)(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n+    log_info(os,map)(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n@@ -1575,2 +1565,1 @@\n-    log_trace(os,map)(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno: %d).\", size, errno);\n-    trcVerbose(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno: %d).\", size, errno);\n+    log_trace(os,map)(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno=%s).\", size, os::strerror(ep.saved()));\n@@ -1591,4 +1580,2 @@\n-    log_trace(os,map)(\"Failed to set page size (need \" UINTX_FORMAT \" 64K pages) - shmctl failed with %d.\",\n-               size \/ (64*K), errno);\n-    trcVerbose(\"Failed to set page size (need \" UINTX_FORMAT \" 64K pages) - shmctl failed with %d.\",\n-               size \/ (64*K), errno);\n+    log_trace(os,map)(\"Failed to set page size (need \" UINTX_FORMAT \" 64K pages) - shmctl failed. (errno=%s).\",\n+               size \/ (64*K), os::strerror(ep.saved()));\n@@ -1612,2 +1599,1 @@\n-    log_trace(os,map)(\"shmctl(%u, IPC_RMID) failed (%d)\\n\", shmid, errno);\n-    trcVerbose(\"shmctl(%u, IPC_RMID) failed (%d)\\n\", shmid, errno);\n+    log_trace(os,map)(\"shmctl(%u, IPC_RMID) failed (errno=%s)\\n\", shmid, os::strerror(ep.saved()));\n@@ -1620,2 +1606,1 @@\n-    log_trace(os,map)(\"Failed to attach segment at \" PTR_FORMAT \" (%d).\", p2i(requested_addr), errno_shmat);\n-    trcVerbose(\"Failed to attach segment at \" PTR_FORMAT \" (%d).\", p2i(requested_addr), errno_shmat);\n+    log_trace(os,map)(\"Failed to attach segment at \" PTR_FORMAT \" (errno=%s).\", p2i(requested_addr), os::strerror(ep.saved()));\n@@ -1630,1 +1615,0 @@\n-    trcVerbose(\"pagesize is, surprisingly, \" SIZE_FORMAT, real_pagesize);\n@@ -1634,2 +1618,2 @@\n-    trcVerbose(\"shm-allocated \" PTR_FORMAT \" .. \" PTR_FORMAT \" (\" UINTX_FORMAT \" bytes, \" UINTX_FORMAT \" %s pages)\",\n-      p2i(addr), p2i(addr + size - 1), size, size\/real_pagesize, describe_pagesize(real_pagesize));\n+    log_trace(os,map)(\"shm-allocated succeeded: \" RANGEFMT \" (\" UINTX_FORMAT \" %s pages)\",\n+              RANGEFMTARGS(addr, size), size\/real_pagesize, describe_pagesize(real_pagesize));\n@@ -1638,2 +1622,1 @@\n-      log_trace(os,map)(\"failed to shm-allocate \" UINTX_FORMAT \" bytes at with address \" PTR_FORMAT \".\", size, p2i(requested_addr));\n-      trcVerbose(\"failed to shm-allocate \" UINTX_FORMAT \" bytes at with address \" PTR_FORMAT \".\", size, p2i(requested_addr));\n+      log_trace(os,map)(\"shm-allocate failed: \" RANGEFMT, RANGEFMTARGS(requested_addr, size));\n@@ -1642,1 +1625,0 @@\n-      trcVerbose(\"failed to shm-allocate \" UINTX_FORMAT \" bytes at any address.\", size);\n@@ -1663,2 +1645,1 @@\n-    log_trace(os,map)(\"shmdt failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n-    trcVerbose(\"error (%d).\", errno);\n+    log_trace(os,map)(\"shmdt failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1666,1 +1647,1 @@\n-    trcVerbose(\"ok.\");\n+    log_trace(os,map)(\"shmdt succeded: \" RANGEFMT, RANGEFMTARGS(addr, size));\n@@ -1696,1 +1677,0 @@\n-    trcVerbose(\"Wish address \" PTR_FORMAT \" not aligned to page boundary.\", p2i(requested_addr));\n@@ -1704,1 +1684,0 @@\n-    trcVerbose(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n@@ -1748,2 +1727,1 @@\n-    log_trace(os,map)(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) failed (%d)\", p2i(requested_addr), size, errno);\n-    trcVerbose(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) failed (%d)\", p2i(requested_addr), size, errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, size), os::strerror(ep.saved()));\n@@ -1752,4 +1730,2 @@\n-    log_trace(os,map)(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) succeeded, but at a different address than requested (\" PTR_FORMAT \"), will unmap\",\n-               p2i(requested_addr), size, p2i(addr));\n-    trcVerbose(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) succeeded, but at a different address than requested (\" PTR_FORMAT \"), will unmap\",\n-               p2i(requested_addr), size, p2i(addr));\n+    log_trace(os,map)(\"mmap succeeded: \" RANGEFMT \", but at a different address than requested (\" PTR_FORMAT \"), will unmap\",\n+              RANGEFMTARGS(requested_addr, size), p2i(addr));\n@@ -1795,2 +1771,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n-    trcVerbose(\"failed (%d)\\n\", errno);\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1799,1 +1774,1 @@\n-    trcVerbose(\"ok.\");\n+    log_trace(os,map)(\"munmap succeeded: \" RANGEFMT, RANGEFMTARGS(addr, size));\n@@ -1818,2 +1793,1 @@\n-    log_trace(os,map)(\"msync failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n-    trcVerbose(\"failed (%d)\\n\", errno);\n+    log_trace(os,map)(\"msync failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1822,1 +1796,1 @@\n-    trcVerbose(\"ok.\");\n+    log_trace(os,map)(\"msync succeeded: \" RANGEFMT, RANGEFMTARGS(addr, size));\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":26,"deletions":52,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,0 @@\n-#include \"utilities\/preserveErrno.hpp\"\n@@ -1570,1 +1569,1 @@\n-    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1579,1 +1578,1 @@\n-      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1588,1 +1587,1 @@\n-      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1598,1 +1597,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1679,1 +1678,1 @@\n-    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1686,1 +1685,1 @@\n-      log_trace(os,map)(\"madvise failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      log_trace(os,map)(\"madvise failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1693,1 +1692,1 @@\n-      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1701,1 +1700,1 @@\n-      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1711,1 +1710,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -1742,1 +1741,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(requested_addr, bytes), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved()));\n@@ -1753,1 +1752,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -82,1 +82,0 @@\n-#include \"utilities\/preserveErrno.hpp\"\n@@ -2842,1 +2841,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -2849,1 +2848,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -3349,1 +3348,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -3573,1 +3572,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(requested_addr, bytes), errno);\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved()));\n@@ -3599,1 +3598,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(start, extra_size), errno);\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, extra_size), os::strerror(ep.saved()));\n@@ -3611,1 +3610,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(start, size), errno);\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, size), os::strerror(ep.saved()));\n@@ -3618,1 +3617,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(end_aligned, size), errno);\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(end_aligned, size), os::strerror(ep.saved()));\n@@ -3630,1 +3629,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n@@ -4065,1 +4064,1 @@\n-      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(small_start, small_size), errno);\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(small_start, small_size), os::strerror(ep.saved()));\n@@ -4077,1 +4076,1 @@\n-      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(aligned_start, large_bytes), errno);\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(aligned_start, large_bytes), os::strerror(ep.saved()));\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -506,7 +506,0 @@\n-class ErrnoPreserver: public StackObj {\n-  const int _saved;\n-public:\n-  ErrnoPreserver() : _saved(errno) {}\n-  ~ErrnoPreserver() { errno = _saved; }\n-};\n-\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1815,1 +1815,1 @@\n-    log_debug(os,map)(\"Reserved [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\", p2i(result), p2i(result + bytes), bytes);\n+    log_debug(os,map)(\"Reserved \" RANGEFMT, RANGEFMTARGS(result, bytes));\n@@ -1826,1 +1826,1 @@\n-    log_debug(os,map)(\"Reserved [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\", p2i(result), p2i(result + bytes), bytes);\n+    log_debug(os,map)(\"Reserved \" RANGEFMT, RANGEFMTARGS(result, bytes));\n@@ -1828,2 +1828,1 @@\n-    log_info(os,map)(\"Attempt to reserve [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes) failed\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_info(os,map)(\"Attempt to reserve \" RANGEFMT \" failed\", RANGEFMTARGS(addr, bytes));\n@@ -2037,2 +2036,1 @@\n-    log_debug(os,map)(\"Committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_debug(os,map)(\"Committed \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2040,2 +2038,1 @@\n-    log_info(os,map)(\"Failed to commit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_info(os,map)(\"Failed to commit \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2052,2 +2049,1 @@\n-    log_debug(os,map)(\"Committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n-      p2i(addr), p2i(addr + size), size);\n+    log_debug(os,map)(\"Committed \" RANGEFMT, RANGEFMTARGS(addr, size));\n@@ -2055,2 +2051,1 @@\n-    log_info(os,map)(\"Failed to commit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n-      p2i(addr), p2i(addr + size), size);\n+    log_info(os,map)(\"Failed to commit \" RANGEFMT, RANGEFMTARGS(addr, size));\n@@ -2089,2 +2084,1 @@\n-    log_debug(os,map)(\"Uncommitted [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_debug(os,map)(\"Uncommitted \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2092,2 +2086,1 @@\n-    log_info(os,map)(\"Failed to uncommit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_info(os,map)(\"Failed to uncommit \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2113,2 +2106,1 @@\n-    log_info(os,map)(\"Failed to release [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_info(os,map)(\"Failed to release \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2116,2 +2108,1 @@\n-    log_debug(os,map)(\"Released [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n-      p2i(addr), p2i(addr + bytes), bytes);\n+    log_debug(os,map)(\"Released \" RANGEFMT, RANGEFMTARGS(addr, bytes));\n@@ -2222,2 +2213,1 @@\n-    log_debug(os,map)(\"Reserved and committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n-      p2i(result), p2i(result + size), size);\n+    log_debug(os,map)(\"Reserved and committed \" RANGEFMT, RANGEFMTARGS(result, size));\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,0 +155,19 @@\n+\n+\/\/ Preserve errno across a range of calls\n+\n+class ErrnoPreserver {\n+    int _e;\n+    public:\n+        ErrnoPreserver() {\n+            _e = errno;\n+        }\n+\n+        ~ErrnoPreserver() {\n+            errno = _e;\n+        }\n+\n+        int saved() {\n+          return _e;\n+        }\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -382,2 +382,2 @@\n-#define RANGEFMT                      \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"], (\" SIZE_FORMAT \" bytes);\"\n-#define RANGEFMTARGS(p1, size)    p2i(p1), p2i(p1 + size -1), size\n+#define RANGEFMT                      \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"), (\" SIZE_FORMAT \" bytes)\"\n+#define RANGEFMTARGS(p1, size)    p2i(p1), p2i(p1 + size), size\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,16 +0,0 @@\n-#include <errno.h>\n-\n-\n-\/\/ Preserve errno across a range of calls\n-\n-class ErrnoPreserver {\n-    int _e;\n-    public:\n-        ErrnoPreserver() {\n-            _e = errno;\n-        }\n-\n-        ~ErrnoPreserver() {\n-            errno = _e;\n-        }\n-};\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/utilities\/preserveErrno.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -107,4 +107,4 @@\n-                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n-                        String.format(\"Committed \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", COMMIT_SIZE),\n-                        String.format(\"Uncommitted \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", COMMIT_SIZE),\n-                        String.format(\"Released \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE)\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", PAGE_SIZE),\n+                        String.format(\"Committed \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", COMMIT_SIZE),\n+                        String.format(\"Uncommitted \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", COMMIT_SIZE),\n+                        String.format(\"Released \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", PAGE_SIZE)\n@@ -117,2 +117,2 @@\n-                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n-                        String.format(\"Attempt to reserve \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\) failed\"),\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", PAGE_SIZE),\n+                        String.format(\"Attempt to reserve \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) failed\"),\n@@ -120,1 +120,1 @@\n-                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                        \"mmap failed: \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) errno=\\\\(Not enough space\\\\)\"\n@@ -129,1 +129,1 @@\n-                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                        \"mmap failed: \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) errno=\\\\(Not enough space\\\\)\"\n@@ -136,1 +136,1 @@\n-                        String.format(\"Failed to commit \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\)\", COMMIT_SIZE),\n+                        String.format(\"Failed to commit \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", COMMIT_SIZE),\n@@ -138,1 +138,1 @@\n-                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 22)\n+                        \"mmap failed: \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) errno=\\\\(Invalid argument\\\\)\"\n@@ -145,2 +145,2 @@\n-                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n-                        \"Failed to uncommit \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\)\",\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\), \\\\(%d bytes\\\\)\", PAGE_SIZE),\n+                        \"Failed to uncommit \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\)\",\n@@ -148,1 +148,1 @@\n-                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                        \"mmap failed: \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) errno=\\\\(Not enough space\\\\)\"\n@@ -155,1 +155,1 @@\n-                        \"Failed to release \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\)\",\n+                        \"Failed to release \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\)\",\n@@ -157,1 +157,1 @@\n-                        String.format(\"munmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 22)\n+                        \"munmap failed: \\\\[0x.* - 0x.*\\\\), \\\\(.* bytes\\\\) errno=\\\\(Invalid argument\\\\)\"\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestMemoryAllocationLogging.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}