{"files":[{"patch":"@@ -82,0 +82,1 @@\n+#include \"utilities\/preserveErrno.hpp\"\n@@ -298,0 +299,2 @@\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + maxDisclaimSize, errno);\n@@ -306,0 +309,2 @@\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"Cannot disclaim %p - %p (errno %d)\\n\", p, p + lastDisclaimSize, errno);\n@@ -1473,0 +1478,3 @@\n+      log_trace(os,map)(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not a sub \"\n+              \"range of [\" PTR_FORMAT \" - \" PTR_FORMAT \"].\",\n+              p2i(p), p2i(p + s), p2i(addr), p2i(addr + size));\n@@ -1478,0 +1486,2 @@\n+      log_trace(os,map)(\"range [\" PTR_FORMAT \" - \" PTR_FORMAT \"] is not\"\n+              \" aligned to pagesize (%lu)\", p2i(p), p2i(p + s), (unsigned long) pagesize);\n@@ -1546,0 +1556,1 @@\n+    log_trace(os,map)(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n@@ -1563,0 +1574,2 @@\n+    ErrorPreserver ep;\n+    log_trace(os,map)(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno: %d).\", size, errno);\n@@ -1577,0 +1590,3 @@\n+    ErrorPreserver ep;\n+    log_trace(os,map)(\"Failed to set page size (need \" UINTX_FORMAT \" 64K pages) - shmctl failed with %d.\",\n+               size \/ (64*K), errno);\n@@ -1595,0 +1611,2 @@\n+    ErrorPreserver ep;\n+    log_trace(os,map)(\"shmctl(%u, IPC_RMID) failed (%d)\\n\", shmid, errno);\n@@ -1601,0 +1619,2 @@\n+    ErrorPreserver ep;\n+    log_trace(os,map)(\"Failed to attach segment at \" PTR_FORMAT \" (%d).\", p2i(requested_addr), errno_shmat);\n@@ -1609,0 +1629,1 @@\n+    log_trace(os,map)(\"pagesize is, surprisingly, \" SIZE_FORMAT, real_pagesize);\n@@ -1617,0 +1638,1 @@\n+      log_trace(os,map)(\"failed to shm-allocate \" UINTX_FORMAT \" bytes at with address \" PTR_FORMAT \".\", size, p2i(requested_addr));\n@@ -1619,0 +1641,1 @@\n+      log_trace(os,map)(\"failed to shm-allocate \" UINTX_FORMAT \" bytes at any address.\", size);\n@@ -1639,0 +1662,2 @@\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"shmdt failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1670,0 +1695,1 @@\n+    log_trace(os,map)(\"Wish address \" PTR_FORMAT \" not aligned to page boundary.\", p2i(requested_addr));\n@@ -1677,0 +1703,1 @@\n+    log_trace(os,map)(\"Wish address \" PTR_FORMAT \" is too close to the BRK segment.\", p2i(requested_addr));\n@@ -1720,0 +1747,2 @@\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) failed (%d)\", p2i(requested_addr), size, errno);\n@@ -1723,0 +1752,2 @@\n+    log_trace(os,map)(\"mmap(\" PTR_FORMAT \", \" UINTX_FORMAT \", ..) succeeded, but at a different address than requested (\" PTR_FORMAT \"), will unmap\",\n+               p2i(requested_addr), size, p2i(addr));\n@@ -1763,0 +1794,2 @@\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1784,0 +1817,2 @@\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"msync failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+#include \"utilities\/preserveErrno.hpp\"\n@@ -1567,0 +1568,3 @@\n+  } else {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1573,0 +1577,3 @@\n+    } else {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1579,0 +1586,3 @@\n+    } else {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1586,0 +1596,3 @@\n+  } else {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1662,1 +1675,7 @@\n-  return ::mprotect(addr, size, PROT_NONE) == 0;\n+  if (::mprotect(addr, size, PROT_NONE) == 0) {\n+    return true;\n+  } else {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    return false;\n+  }\n@@ -1666,0 +1685,9 @@\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"madvise failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      return false;\n+    }\n+    if (::mprotect(addr, size, PROT_NONE) == 0) {\n+      return true;\n+    } else {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -1668,1 +1696,0 @@\n-    return ::mprotect(addr, size, PROT_NONE) == 0;\n@@ -1672,1 +1699,6 @@\n-    return res  != (uintptr_t) MAP_FAILED;\n+    if (res == (uintptr_t) MAP_FAILED) {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+      return false;\n+    }\n+    return true;\n@@ -1677,1 +1709,6 @@\n-  return res  != (uintptr_t) MAP_FAILED;\n+  if (res == (uintptr_t) MAP_FAILED) {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    return false;\n+  }\n+  return true;\n@@ -1703,2 +1740,6 @@\n-\n-  return addr == MAP_FAILED ? nullptr : addr;\n+  if (addr == MAP_FAILED) {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(requested_addr, bytes), errno);\n+    return nullptr;\n+  }\n+  return addr;\n@@ -1708,1 +1749,7 @@\n-  return ::munmap(addr, size) == 0;\n+  if (::munmap(addr, size) == 0) {\n+    return 1;\n+  } else {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    return 0;\n+  }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":54,"deletions":7,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+#include \"utilities\/preserveErrno.hpp\"\n@@ -2839,0 +2840,3 @@\n+  } else {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -2844,0 +2848,2 @@\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n@@ -3341,1 +3347,6 @@\n-  return res  != (uintptr_t) MAP_FAILED;\n+  if (res == (uintptr_t) MAP_FAILED) {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    return false;\n+  }\n+  return true;\n@@ -3560,2 +3571,6 @@\n-\n-  return addr == MAP_FAILED ? nullptr : addr;\n+  if (addr == MAP_FAILED) {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(requested_addr, bytes), errno);\n+    return nullptr;\n+  }\n+  return addr;\n@@ -3582,1 +3597,4 @@\n-        ::munmap(start, extra_size);\n+        if (::munmap(start, extra_size) != 0) {\n+          ErrnoPreserver ep;\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(start, extra_size), errno);\n+        }\n@@ -3590,1 +3608,5 @@\n-        ::munmap(start, start_aligned - start);\n+        if (::munmap(start, start_aligned - start) != 0) {\n+          ErrnoPreserver ep;\n+          size_t size = start_aligned - start;\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(start, size), errno);\n+        }\n@@ -3593,1 +3615,5 @@\n-        ::munmap(end_aligned, end - end_aligned);\n+        if (::munmap(end_aligned, end - end_aligned) != 0) {\n+          ErrnoPreserver ep;\n+          size_t size = end - end_aligned;\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(end_aligned, size), errno);\n+        }\n@@ -3602,1 +3628,6 @@\n-  return ::munmap(addr, size) == 0;\n+  if (::munmap(addr, size) != 0) {\n+    ErrnoPreserver ep;\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(addr, size), errno);\n+    return 0;\n+  }\n+  return 1;\n@@ -4032,1 +4063,4 @@\n-    ::munmap(small_start, small_size);\n+    if (::munmap(small_start, small_size) != 0) {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(small_start, small_size), errno);\n+    }\n@@ -4041,1 +4075,4 @@\n-    ::munmap(aligned_start, large_bytes);\n+    if (::munmap(aligned_start, large_bytes) != 0) {\n+      ErrnoPreserver ep;\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%d)\", RANGEFMTARGS(aligned_start, large_bytes), errno);\n+    }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":46,"deletions":9,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -1815,0 +1815,3 @@\n+    log_debug(os,map)(\"Reserved [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\", p2i(result), p2i(result + bytes), bytes);\n+  } else {\n+    log_info(os,map)(\"Reserve failed (%zu bytes)\", bytes);\n@@ -1823,1 +1826,1 @@\n-    log_debug(os)(\"Reserved memory at \" INTPTR_FORMAT \" for \" SIZE_FORMAT \" bytes.\", p2i(addr), bytes);\n+    log_debug(os,map)(\"Reserved [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\", p2i(result), p2i(result + bytes), bytes);\n@@ -1825,2 +1828,2 @@\n-    log_debug(os)(\"Attempt to reserve memory at \" INTPTR_FORMAT \" for \"\n-                 SIZE_FORMAT \" bytes failed, errno %d\", p2i(addr), bytes, get_last_error());\n+    log_info(os,map)(\"Attempt to reserve [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes) failed\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n@@ -2034,0 +2037,5 @@\n+    log_debug(os,map)(\"Committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n+  } else {\n+    log_info(os,map)(\"Failed to commit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n@@ -2044,0 +2052,5 @@\n+    log_debug(os,map)(\"Committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n+      p2i(addr), p2i(addr + size), size);\n+  } else {\n+    log_info(os,map)(\"Failed to commit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n+      p2i(addr), p2i(addr + size), size);\n@@ -2074,0 +2087,9 @@\n+\n+  if (res) {\n+    log_debug(os,map)(\"Uncommitted [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n+  } else {\n+    log_info(os,map)(\"Failed to uncommit [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n+  }\n+\n@@ -2091,1 +2113,5 @@\n-    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), bytes);\n+    log_info(os,map)(\"Failed to release [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes)\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n+  } else {\n+    log_debug(os,map)(\"Released [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n+      p2i(addr), p2i(addr + bytes), bytes);\n@@ -2196,0 +2222,4 @@\n+    log_debug(os,map)(\"Reserved and committed [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu bytes).\",\n+      p2i(result), p2i(result + size), size);\n+  } else {\n+    log_info(os,map)(\"Reserve and commit failed (%zu bytes)\", size);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":34,"deletions":4,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -382,0 +382,3 @@\n+#define RANGEFMT                      \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"], (\" SIZE_FORMAT \" bytes);\"\n+#define RANGEFMTARGS(p1, size)    p2i(p1), p2i(p1 + size -1), size\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,16 @@\n+#include <errno.h>\n+\n+\n+\/\/ Preserve errno across a range of calls\n+\n+class ErrnoPreserver {\n+    int _e;\n+    public:\n+        ErrnoPreserver() {\n+            _e = errno;\n+        }\n+\n+        ~ErrnoPreserver() {\n+            errno = _e;\n+        }\n+};\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/utilities\/preserveErrno.hpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,225 @@\n+\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.io.IOException;\n+\n+import jdk.test.whitebox.WhiteBox;\n+\n+\n+\n+\/*\n+ * @test id=testSuccessfulFlow\n+ * @summary Test that memory allocation logging works when allocation operations run without error\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testSuccessfulFlow\n+ *\/\n+\n+\/*\n+ * @test id=testAttemptedReserveFailed\n+ * @summary Test that memory allocation logging warns when attempted reservation fails\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testAttemptedReserveFailed\n+ *\/\n+\n+\/*\n+ * @test id=testReserveFailed\n+ * @summary Test that memory allocation logging warns when reservation fails\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testReserveFailed\n+ *\/\n+\n+\/*\n+ * @test id=testCommitFailed\n+ * @summary Test that memory allocation logging warns when commit attempts fail\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testCommitFailed\n+ *\/\n+\n+\/*\n+ * @test id=testUncommitFailed\n+ * @summary Test that memory allocation logging warns when memory uncommitment fails\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testUncommitFailed\n+ *\/\n+\n+\/*\n+ * @test id=testReleaseFailed\n+ * @summary Test that memory allocation logging warns when memory release fails\n+ * @library \/test\/lib\n+ * @requires os.family != \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run driver TestMemoryAllocationLogging testReleaseFailed\n+ *\/\n+\n+public class TestMemoryAllocationLogging {\n+\n+    protected static final long PAGE_SIZE = 64 * 1024; \/\/ 64Kb - largest page size in any system\n+    protected static final long COMMIT_SIZE = 1024;\n+    protected static long tooBig = 1024L * 1000000000000L; \/\/ 1Tb\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            throw new RuntimeException(\"Argument error\");\n+        }\n+        String[] options = new String[] {\n+                \"-Xlog:os+map=trace\", \/\/ trace level will also print debug level\n+                \"-XX:-CreateCoredumpOnCrash\",\n+                \"-Xms17m\",\n+                \"-Xmx17m\",\n+                \/\/ Options for WhiteBox below\n+                \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:+WhiteBoxAPI\",\n+                \"-Xbootclasspath\/a:.\",\n+                TestMemoryAllocationLogging.Tester.class.getName(),\n+                args[0]};\n+\n+        String[] expectedLogs;\n+\n+        \/* Debug logging level tests *\/\n+        switch (args[0]) {\n+            case \"testSuccessfulFlow\": {\n+                expectedLogs = new String[]{\n+                        \/* Debug level log *\/\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n+                        String.format(\"Committed \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", COMMIT_SIZE),\n+                        String.format(\"Uncommitted \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", COMMIT_SIZE),\n+                        String.format(\"Released \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE)\n+                };\n+                break;\n+            }\n+            case \"testAttemptedReserveFailed\": {\n+                expectedLogs = new String[] {\n+                        \/* Debug level log *\/\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n+                        String.format(\"Attempt to reserve \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\) failed\"),\n+                        \/* Trace level log *\/\n+                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                };\n+                break;\n+            }\n+            case \"testReserveFailed\": {\n+                expectedLogs = new String[] {\n+                        \/* Debug level log *\/\n+                        \"Reserve failed \\\\(.* bytes\\\\)\",\n+                        \/* Trace level log *\/\n+                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                };\n+                break;\n+            }\n+            case \"testCommitFailed\": {\n+                expectedLogs = new String[] {\n+                        \/* Debug level log *\/\n+                        String.format(\"Failed to commit \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\)\", COMMIT_SIZE),\n+                        \/* Trace level log *\/\n+                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 22)\n+                };\n+                break;\n+            }\n+            case \"testUncommitFailed\": {\n+                expectedLogs = new String[] {\n+                        \/* Debug level log *\/\n+                        String.format(\"Reserved \\\\[0x.* - 0x.*\\\\] \\\\(%d bytes\\\\).\", PAGE_SIZE),\n+                        \"Failed to uncommit \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\)\",\n+                        \/* Trace level log *\/\n+                        String.format(\"mmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 12)\n+                };\n+                break;\n+            }\n+            case \"testReleaseFailed\": {\n+                expectedLogs = new String[] {\n+                        \/* Debug level log *\/\n+                        \"Failed to release \\\\[0x.* - 0x.*\\\\] \\\\(.* bytes\\\\)\",\n+                        \/* Trace level log *\/\n+                        String.format(\"munmap failed: \\\\[0x.* - 0x.*\\\\], \\\\(.* bytes\\\\); errno=\\\\(%d\\\\)\", 22)\n+                };\n+                break;\n+            }\n+\n+            default: {\n+                throw new RuntimeException(\"Invalid test \" + args[0]);\n+            }\n+        }\n+\n+        OutputAnalyzer output = runTestWithOptions(options);\n+        checkExpectedLogMessages(output, expectedLogs);\n+    }\n+\n+    private static OutputAnalyzer runTestWithOptions(String[] options) throws IOException {\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(options);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        return output;\n+    }\n+\n+    private static void checkExpectedLogMessages(OutputAnalyzer output, String[] regexs) throws RuntimeException {\n+        for (String regex : regexs) {\n+            output.shouldMatch(regex);\n+        }\n+    }\n+\n+    static class Tester {\n+        public static void main(String[] args) throws Exception {\n+            System.out.println(\"Tester execution...\");\n+            WhiteBox wb = WhiteBox.getWhiteBox();\n+\n+            switch (args[0]) {\n+                case \"testSuccessfulFlow\": {\n+                    long addr = wb.NMTReserveMemory(PAGE_SIZE);\n+                    wb.NMTCommitMemory(addr, COMMIT_SIZE);\n+                    wb.NMTUncommitMemory(addr, COMMIT_SIZE);\n+                    wb.NMTReleaseMemory(addr, PAGE_SIZE);\n+                    break;\n+                }\n+                case \"testAttemptedReserveFailed\": {\n+                    long addr = wb.NMTReserveMemory(PAGE_SIZE);\n+                    wb.NMTAttemptReserveMemoryAt(addr, tooBig);\n+                    break;\n+                }\n+                case \"testReserveFailed\": {\n+                    wb.NMTReserveMemory(tooBig);\n+                    break;\n+                }\n+                case \"testCommitFailed\": {\n+                    wb.NMTCommitMemory(1, COMMIT_SIZE);\n+                    break;\n+                }\n+                case \"testUncommitFailed\": {\n+                    long addr = wb.NMTReserveMemory(PAGE_SIZE);\n+                    wb.NMTUncommitMemory(addr, tooBig);\n+                    break;\n+                }\n+                case \"testReleaseFailed\": {\n+                    wb.NMTReleaseMemory(-1, tooBig);\n+                    break;\n+                }\n+                default: {\n+                    throw new RuntimeException(\"Invalid test \" + args[0]);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestMemoryAllocationLogging.java","additions":225,"deletions":0,"binary":false,"changes":225,"status":"added"}]}