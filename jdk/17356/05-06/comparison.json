{"files":[{"patch":"@@ -299,1 +299,1 @@\n-      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, maxDisclaimSize), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, maxDisclaimSize), os::strerror(ep.saved_errno()));\n@@ -308,1 +308,1 @@\n-      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, lastDisclaimSize), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"disclaim failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(p, lastDisclaimSize), os::strerror(ep.saved_errno()));\n@@ -1567,1 +1567,1 @@\n-    log_trace(os,map)(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno=%s).\", size, os::strerror(ep.saved()));\n+    log_trace(os,map)(\"shmget(.., \" UINTX_FORMAT \", ..) failed (errno=%s).\", size, os::strerror(ep.saved_errno()));\n@@ -1583,1 +1583,1 @@\n-               size \/ (64*K), os::strerror(ep.saved()));\n+               size \/ (64*K), os::strerror(ep.saved_errno()));\n@@ -1601,1 +1601,1 @@\n-    log_trace(os,map)(\"shmctl(%u, IPC_RMID) failed (errno=%s)\\n\", shmid, os::strerror(ep.saved()));\n+    log_trace(os,map)(\"shmctl(%u, IPC_RMID) failed (errno=%s)\\n\", shmid, os::strerror(ep.saved_errno()));\n@@ -1608,1 +1608,1 @@\n-    log_trace(os,map)(\"Failed to attach segment at \" PTR_FORMAT \" (errno=%s).\", p2i(requested_addr), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"Failed to attach segment at \" PTR_FORMAT \" (errno=%s).\", p2i(requested_addr), os::strerror(ep.saved_errno()));\n@@ -1647,1 +1647,1 @@\n-    log_trace(os,map)(\"shmdt failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"shmdt failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1729,1 +1729,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, size), os::strerror(ep.saved_errno()));\n@@ -1773,1 +1773,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1795,1 +1795,1 @@\n-    log_trace(os,map)(\"msync failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"msync failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1583,1 +1583,1 @@\n-    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1592,1 +1592,1 @@\n-      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1601,1 +1601,1 @@\n-      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1611,1 +1611,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1696,1 +1696,1 @@\n-    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1703,1 +1703,1 @@\n-      log_trace(os,map)(\"madvise failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"madvise failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1710,1 +1710,1 @@\n-      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"mprotect failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1718,1 +1718,1 @@\n-      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1728,1 +1728,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -1759,1 +1759,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved_errno()));\n@@ -1770,1 +1770,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2857,1 +2857,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -2864,1 +2864,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -3398,1 +3398,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -3622,1 +3622,1 @@\n-    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"mmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(requested_addr, bytes), os::strerror(ep.saved_errno()));\n@@ -3648,1 +3648,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, extra_size), os::strerror(ep.saved()));\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, extra_size), os::strerror(ep.saved_errno()));\n@@ -3659,1 +3659,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, (size_t) (start_aligned - start)), os::strerror(ep.saved()));\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(start, (size_t) (start_aligned - start)), os::strerror(ep.saved_errno()));\n@@ -3665,1 +3665,1 @@\n-          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(end_aligned, (size_t) (end - end_aligned)), os::strerror(ep.saved()));\n+          log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(end_aligned, (size_t) (end - end_aligned)), os::strerror(ep.saved_errno()));\n@@ -3677,1 +3677,1 @@\n-    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved()));\n+    log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(addr, size), os::strerror(ep.saved_errno()));\n@@ -4112,1 +4112,1 @@\n-      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(small_start, small_size), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(small_start, small_size), os::strerror(ep.saved_errno()));\n@@ -4124,1 +4124,1 @@\n-      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(aligned_start, large_bytes), os::strerror(ep.saved()));\n+      log_trace(os,map)(\"munmap failed: \" RANGEFMT \" errno=(%s)\", RANGEFMTARGS(aligned_start, large_bytes), os::strerror(ep.saved_errno()));\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-        int saved() {\n+        int saved_errno() {\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,23 @@\n-\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestMemoryAllocationLogging.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}