[{"commit":{"message":"8346954: [JMH] jdk.incubator.vector.MaskedLogicOpts fails due to IndexOutOfBoundsException\n\nSuite MaskedLogicOpts.maskedLogicOperationsLong512() failed on both x86\nand AArch64 with the following error:\n\n```\njava.lang.IndexOutOfBoundsException: Index 252 out of bounds for length 249\n```\n\nThe variable `long256_arr_idx` is misused when indexing `LongVector l2`,\n`l3`, `l4`, `l5` in function `maskedLogicOperationsLongKernel()`\nresulting in the IndexOutOfBoundsException error. On the other hand, the\nunified index for 128-bit, 256-bit and 512-bit species might not be\nproper since it leaves gaps in between when accessing the data\nfor 128-bit and 256-bit species. This will unnecessarily include the\nnoise due to cache misses or (on some targets) prefetching additional\ncache lines which are not usable, thereby impacting the crispness of\nmicrobenchmark.\n\nHence, we improved the benchmark from several aspects,\n1. Used sufficient number of predicated operations within the vector\nloop while minimizing the noise due to memory operations.\n2. Modified the index computation logic which can now withstand any\nARRAYLEN without resulting in an IOOBE.\n3. Removed redundant vector read\/writes to instance fields, thus\neliminating significant boxing penalty which translates into throughput\ngains.\n\nChange-Id: Ie8a9d495b1ca5e36f1eae069ff70a815a2de00c0"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskedLogicOpts.java"}],"sha":"896c27ea0b74f2848185d1bd8f931a0f44249673"},{"commit":{"message":"Revert \"8346954: [JMH] jdk.incubator.vector.MaskedLogicOpts fails due to IndexOutOfBoundsException\"\n\nThis reverts commit 083bedec04d5ab78a420e156e74c1257ce30aee8."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskedLogicOpts.java"}],"sha":"a80a24077e714b0d2c3943775e285c0330f75ed8"}]