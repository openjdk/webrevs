{"files":[{"patch":"@@ -216,1 +216,0 @@\n-                        ListBuffer<PatternDescription> bindings = new ListBuffer<>();\n@@ -235,0 +234,1 @@\n+                        Set<Symbol> filteredPermitted = new HashSet<>(permitted);\n@@ -238,2 +238,11 @@\n-                                Set<Symbol> currentPermittedSubTypes =\n-                                        allPermittedSubTypes(bpOther.type.tsym, s -> true);\n+                                Set<Symbol> currentSubTypes;\n+\n+                                if (bpOther.type.tsym.isAbstract()) {\n+                                    currentSubTypes =\n+                                            permitted.stream()\n+                                                     .filter(perm -> types.isSubtype(types.erasure(perm.type),\n+                                                                                     types.erasure(bpOther.type)))\n+                                                     .collect(Collectors.toSet());\n+                                } else {\n+                                    currentSubTypes = Set.of(bpOther.type.tsym);\n+                                }\n@@ -241,1 +250,1 @@\n-                                PERMITTED: for (Iterator<Symbol> it = permitted.iterator(); it.hasNext();) {\n+                                PERMITTED: for (Iterator<Symbol> it = filteredPermitted.iterator(); it.hasNext();) {\n@@ -244,1 +253,1 @@\n-                                    for (Symbol currentPermitted : currentPermittedSubTypes) {\n+                                    for (Symbol currentPermitted : currentSubTypes) {\n@@ -259,1 +268,1 @@\n-                        if (permitted.isEmpty()) {\n+                        if (filteredPermitted.isEmpty()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ExhaustivenessComputer.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815 8325215 8333169 8327368 8364991\n+ * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815 8325215 8333169 8327368 8364991 8366968\n@@ -2279,0 +2279,26 @@\n+    @Test \/\/JDK-8366968\n+    public void testNonSealed(Path base) throws Exception {\n+        doTest(base,\n+               new String[0],\n+               \"\"\"\n+               class Demo {\n+\n+                   sealed interface Base permits Special, Value {}\n+\n+                   non-sealed interface Value extends Base {}\n+\n+                   sealed interface Special extends Base permits SpecialValue {}\n+\n+                   non-sealed interface SpecialValue extends Value, Special {}\n+\n+                   static int demo(final Base base) {\n+                       return switch (base) {\n+                           case Value value -> 0;\n+                       };\n+\n+                   }\n+\n+               }\n+               \"\"\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java","additions":27,"deletions":1,"binary":false,"changes":28,"status":"modified"}]}