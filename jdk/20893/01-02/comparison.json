{"files":[{"patch":"@@ -367,14 +367,15 @@\n-            switch (mon) {\n-            case \"Jan\", \"January\": return Month.JANUARY;\n-            case \"Feb\", \"February\": return Month.FEBRUARY;\n-            case \"Mar\", \"March\": return Month.MARCH;\n-            case \"Apr\", \"April\": return Month.APRIL;\n-            case \"May\": return Month.MAY;\n-            case \"Jun\", \"June\": return Month.JUNE;\n-            case \"Jul\", \"July\": return Month.JULY;\n-            case \"Aug\", \"August\": return Month.AUGUST;\n-            case \"Sep\", \"September\": return Month.SEPTEMBER;\n-            case \"Oct\", \"October\": return Month.OCTOBER;\n-            case \"Nov\", \"November\": return Month.NOVEMBER;\n-            case \"Dec\", \"December\": return Month.DECEMBER;\n-            }\n+            int len = mon.length();\n+\n+            if (mon.regionMatches(true, 0, \"January\", 0, len)) return Month.JANUARY;\n+            if (mon.regionMatches(true, 0, \"February\", 0, len)) return Month.FEBRUARY;\n+            if (mon.regionMatches(true, 0, \"March\", 0, len)) return Month.MARCH;\n+            if (mon.regionMatches(true, 0, \"April\", 0, len)) return Month.APRIL;\n+            if (mon.regionMatches(true, 0, \"May\", 0, len)) return Month.MAY;\n+            if (mon.regionMatches(true, 0, \"June\", 0, len)) return Month.JUNE;\n+            if (mon.regionMatches(true, 0, \"July\", 0, len)) return Month.JULY;\n+            if (mon.regionMatches(true, 0, \"August\", 0, len)) return Month.AUGUST;\n+            if (mon.regionMatches(true, 0, \"September\", 0, len)) return Month.SEPTEMBER;\n+            if (mon.regionMatches(true, 0, \"October\", 0, len)) return Month.OCTOBER;\n+            if (mon.regionMatches(true, 0, \"November\", 0, len)) return Month.NOVEMBER;\n+            if (mon.regionMatches(true, 0, \"December\", 0, len)) return Month.DECEMBER;\n+\n@@ -385,9 +386,10 @@\n-            switch (dow) {\n-            case \"Mon\", \"Monday\": return DayOfWeek.MONDAY;\n-            case \"Tue\", \"Tuesday\": return DayOfWeek.TUESDAY;\n-            case \"Wed\", \"Wednesday\": return DayOfWeek.WEDNESDAY;\n-            case \"Thu\", \"Thursday\": return DayOfWeek.THURSDAY;\n-            case \"Fri\", \"Friday\": return DayOfWeek.FRIDAY;\n-            case \"Sat\", \"Saturday\": return DayOfWeek.SATURDAY;\n-            case \"Sun\", \"Sunday\": return DayOfWeek.SUNDAY;\n-            }\n+            int len = dow.length();\n+\n+            if (dow.regionMatches(true, 0, \"Monday\", 0, len)) return DayOfWeek.MONDAY;\n+            if (dow.regionMatches(true, 0, \"Tuesday\", 0, len)) return DayOfWeek.TUESDAY;\n+            if (dow.regionMatches(true, 0, \"Wednesday\", 0, len)) return DayOfWeek.WEDNESDAY;\n+            if (dow.regionMatches(true, 0, \"Thursday\", 0, len)) return DayOfWeek.THURSDAY;\n+            if (dow.regionMatches(true, 0, \"Friday\", 0, len)) return DayOfWeek.FRIDAY;\n+            if (dow.regionMatches(true, 0, \"Saturday\", 0, len)) return DayOfWeek.SATURDAY;\n+            if (dow.regionMatches(true, 0, \"Sunday\", 0, len)) return DayOfWeek.SUNDAY;\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/tzdb\/TzdbZoneRulesProvider.java","additions":25,"deletions":23,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -24,5 +24,0 @@\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n@@ -50,9 +45,0 @@\n-    private static final Map<String,Month> abbreviations\n-                                = new HashMap<String,Month>(12);\n-\n-    static {\n-        for (Month m : Month.values()) {\n-            abbreviations.put(m.abbr, m);\n-        }\n-    }\n-\n@@ -73,8 +59,16 @@\n-        if (name.length() > 3) {\n-            name = name.substring(0, 3);\n-        }\n-        Month m = abbreviations.get(name);\n-        if (m != null) {\n-            return m;\n-        }\n-        return null;\n+        int len = name.length();\n+\n+        if (name.regionMatches(true, 0, \"January\", 0, len)) return Month.JANUARY;\n+        if (name.regionMatches(true, 0, \"February\", 0, len)) return Month.FEBRUARY;\n+        if (name.regionMatches(true, 0, \"March\", 0, len)) return Month.MARCH;\n+        if (name.regionMatches(true, 0, \"April\", 0, len)) return Month.APRIL;\n+        if (name.regionMatches(true, 0, \"May\", 0, len)) return Month.MAY;\n+        if (name.regionMatches(true, 0, \"June\", 0, len)) return Month.JUNE;\n+        if (name.regionMatches(true, 0, \"July\", 0, len)) return Month.JULY;\n+        if (name.regionMatches(true, 0, \"August\", 0, len)) return Month.AUGUST;\n+        if (name.regionMatches(true, 0, \"September\", 0, len)) return Month.SEPTEMBER;\n+        if (name.regionMatches(true, 0, \"October\", 0, len)) return Month.OCTOBER;\n+        if (name.regionMatches(true, 0, \"November\", 0, len)) return Month.NOVEMBER;\n+        if (name.regionMatches(true, 0, \"December\", 0, len)) return Month.DECEMBER;\n+\n+        throw new IllegalArgumentException(\"Unknown month: \" + name);\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/Month.java","additions":16,"deletions":22,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -24,5 +24,0 @@\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n@@ -37,7 +32,0 @@\n-    private static final Map<String,DayOfWeek> abbreviations = new HashMap<String,DayOfWeek>(7);\n-    static {\n-        for (DayOfWeek day : DayOfWeek.values()) {\n-            abbreviations.put(day.getAbbr(), day);\n-        }\n-    }\n-\n@@ -169,5 +157,12 @@\n-    private static DayOfWeek getDOW(String abbr) {\n-        if (abbr.length() > 3) {\n-            abbr = abbr.substring(0, 3);\n-        }\n-        return abbreviations.get(abbr);\n+    private static DayOfWeek getDOW(String name) {\n+        int len = name.length();\n+\n+        if (name.regionMatches(true, 0, \"Monday\", 0, len)) return DayOfWeek.MONDAY;\n+        if (name.regionMatches(true, 0, \"Tuesday\", 0, len)) return DayOfWeek.TUESDAY;\n+        if (name.regionMatches(true, 0, \"Wednesday\", 0, len)) return DayOfWeek.WEDNESDAY;\n+        if (name.regionMatches(true, 0, \"Thursday\", 0, len)) return DayOfWeek.THURSDAY;\n+        if (name.regionMatches(true, 0, \"Friday\", 0, len)) return DayOfWeek.FRIDAY;\n+        if (name.regionMatches(true, 0, \"Saturday\", 0, len)) return DayOfWeek.SATURDAY;\n+        if (name.regionMatches(true, 0, \"Sunday\", 0, len)) return DayOfWeek.SUNDAY;\n+\n+        throw new IllegalArgumentException(\"Unknown day-of-week: \" + name);\n@@ -178,1 +173,1 @@\n-     * name defined in {@link java.util.Calenda}.\n+     * name defined in {@link java.util.Calendar}.\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/RuleDay.java","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"}]}