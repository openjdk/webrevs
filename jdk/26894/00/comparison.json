{"files":[{"patch":"@@ -2591,1 +2591,1 @@\n-  \/\/ Get strings and string lengths\n+  \/\/ Get strings.\n@@ -2594,1 +2594,0 @@\n-  int buf_len = (int)strlen(klass_name);\n@@ -2597,1 +2596,0 @@\n-  buf_len += (int)strlen(method_name);\n@@ -2603,1 +2601,0 @@\n-    buf_len += (int)strlen(source_file_name);\n@@ -2610,1 +2607,0 @@\n-    buf_len += (int)strlen(module_name);\n@@ -2613,1 +2609,0 @@\n-      buf_len += (int)strlen(module_version);\n@@ -2617,3 +2612,2 @@\n-  \/\/ Allocate temporary buffer with extra space for formatting and line number\n-  const size_t buf_size = buf_len + 64;\n-  char* buf = NEW_RESOURCE_ARRAY(char, buf_size);\n+  \/\/ The string stream that will handle all of the formatting and outputting.\n+  stringStream ss;\n@@ -2622,1 +2616,1 @@\n-  size_t buf_off = os::snprintf_checked(buf, buf_size, \"\\tat %s.%s(\", klass_name, method_name);\n+  ss.print(\"\\tat %s.%s(\", klass_name, method_name);\n@@ -2627,1 +2621,1 @@\n-      buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s@%s\/\", module_name, module_version);\n+      ss.print(\"%s@%s\/\", module_name, module_version);\n@@ -2629,1 +2623,1 @@\n-      buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s\/\", module_name);\n+      ss.print(\"%s\/\", module_name);\n@@ -2636,1 +2630,1 @@\n-    strcat(buf, \"Redefined)\");\n+    ss.print(\"Redefined)\");\n@@ -2640,1 +2634,1 @@\n-      strcat(buf, \"Native Method)\");\n+      ss.print(\"Native Method)\");\n@@ -2644,1 +2638,1 @@\n-        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s:%d)\", source_file_name, line_number);\n+        ss.print(\"%s:%d)\", source_file_name, line_number);\n@@ -2647,1 +2641,1 @@\n-        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s)\", source_file_name);\n+        ss.print(\"%s)\", source_file_name);\n@@ -2650,1 +2644,1 @@\n-        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"Unknown Source)\");\n+        ss.print(\"Unknown Source)\");\n@@ -2654,1 +2648,1 @@\n-        os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n+        ss.print(\"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n@@ -2659,1 +2653,2 @@\n-  st->print_cr(\"%s\", buf);\n+  ss.cr();\n+  st->print_raw(ss.freeze(), ss.size());\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"}]}