{"files":[{"patch":"@@ -5487,4 +5487,14 @@\n-    \/\/ Check if x and y are both 8-byte aligned.\n-    orr(t0, xlen, ylen);\n-    test_bit(t0, t0, 0);\n-    beqz(t0, L_multiply_64_x_64_loop);\n+    int base_offset = arrayOopDesc::base_offset_in_bytes(T_INT);\n+    assert((base_offset % (UseCompactObjectHeaders ? 4 :\n+                           (UseCompressedClassPointers ? 8 : 4))) == 0, \"Must be\");\n+\n+    if ((base_offset % 8) == 0) {\n+      \/\/ multiply_64_x_64_loop emits 8-byte load\/store to access two elements\n+      \/\/ at a time from int arrays x and y. When base_offset is 8 bytes, these\n+      \/\/ accesses are naturally aligned if both xlen and ylen are even numbers.\n+      orr(t0, xlen, ylen);\n+      test_bit(t0, t0, 0);\n+      beqz(t0, L_multiply_64_x_64_loop);\n+    }\n+\n+    Label L_second_loop_unaligned, L_third_loop, L_third_loop_exit;\n@@ -5496,1 +5506,0 @@\n-    Label L_second_loop_unaligned;\n@@ -5502,0 +5511,1 @@\n+\n@@ -5509,1 +5519,0 @@\n-    Label L_third_loop, L_third_loop_exit;\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"}]}