{"files":[{"patch":"@@ -89,1 +89,0 @@\n-    static private void println()           { System.out.println();    }\n@@ -95,1 +94,1 @@\n-            Integer keyInt = new Integer(i);\n+            Integer keyInt = Integer.valueOf(i);\n@@ -153,0 +152,2 @@\n+                    e.printStackTrace();\n+                    return;\n@@ -154,4 +155,0 @@\n-                System.out.println(\"SYSTEM_GC BEFORE\");\n-                wb.fullGC();\n-                fullGcCounts += 1;\n-                System.out.println(\"SYSTEM_GC AFTER\");\n@@ -159,0 +156,2 @@\n+                long gcCountBefore = collector.getCollectionCount();\n+                wb.fullGC();\n@@ -160,1 +159,2 @@\n-                Asserts.assertLessThanOrEqual(gcCountBefore + fullGcCounts, gcCountAfter, \"Triggered more Full GCs than expected\");\n+\n+                Asserts.assertLessThan(gcCountBefore, gcCountAfter, \"Triggered more Full GCs than expected\");\n@@ -169,1 +169,1 @@\n-            println(\"usage: JNICriticalStressTest3 <duration sec> <alloc threads> <jni critical threads>\");\n+            println(\"usage: JNICriticalStressTest <duration sec> <alloc threads> <jni critical threads> <gc name>\");\n@@ -194,1 +194,0 @@\n-\n@@ -196,1 +195,0 @@\n-            println(collectors.get(i).getName());\n@@ -221,2 +219,0 @@\n-        gcCountBefore = collector.getCollectionCount();\n-\n@@ -232,1 +228,3 @@\n-            } catch (Exception e) {\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+                return;\n","filename":"test\/hotspot\/jtreg\/gc\/TestJNICriticalStressTest.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}