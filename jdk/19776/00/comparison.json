{"files":[{"patch":"@@ -403,0 +403,9 @@\n+      \/\/ Allow for \"<cmd> help\" to enable help diagnostic command\n+      \/\/ if the only argument provided is \"help\"\n+      if (strcmp(line.args_addr(), \" help\") == 0) {\n+        stringStream updated_line;\n+        reorder_help_cmd(line, updated_line);\n+        CmdLine updated_cmd(updated_line.base(),\n+                            updated_line.size(), false);\n+        line = updated_cmd;\n+      }\n@@ -414,0 +423,5 @@\n+void DCmd::reorder_help_cmd(CmdLine line, stringStream& updated_line) {\n+  updated_line.print(\"%s\", \"help \");\n+  updated_line.write(line.cmd_addr(), line.cmd_len());\n+}\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -315,0 +315,2 @@\n+  \/\/ Helper method to substitute \"<cmd> help\" for \"help <cmd>\".\n+  static void reorder_help_cmd(CmdLine line, stringStream& updated_line);\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8332124\n+ * @summary Test to verify jcmd accepts the \"help\" suboption as a command argument\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run main\/othervm TestJcmdSubcommandHelp\n+ *\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\n+public class TestJcmdSubcommandHelp {\n+\n+    private static final String HELP = \"help\";\n+    private static final String CMD = \"VM.metaspace\";\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ Sanity check with empty input\n+        OutputAnalyzer output = JcmdBase.jcmd();\n+        output.shouldContain(\"The following commands are available:\");\n+\n+        \/\/ Sanity check with existing usage for \"help <cmd>\"\n+        output = JcmdBase.jcmd(HELP, CMD);\n+        String expectedOutput = output.getOutput();\n+        output.shouldNotContain(\"Unknown diagnostic command\");\n+\n+        \/\/ Check help as a suboption to the command is accepted i.e. \"<cmd> help\"\n+        output = JcmdBase.jcmd(CMD, HELP);\n+        String issuedOutput = output.getOutput();\n+        output.shouldNotContain(\"Unknown diagnostic command\");\n+\n+        if (!expectedOutput.equals(output.getOutput())) {\n+            System.out.println(\"Expected output: \");\n+            System.out.println(expectedOutput);\n+            System.out.println(\"Issued output: \");\n+            System.out.println(issuedOutput);\n+            throw new Exception(\"Expected jcmd to accept 'help' suboption as a command argument\" +\n+                                \" and issue the same help output.\");\n+        }\n+\n+        \/\/ Issue incorrect suboption to command argument containing 'help'\n+        String incorrectOpt = \"helpln;n\";\n+        output = JcmdBase.jcmd(CMD, incorrectOpt);\n+        output.shouldContain(\"Unknown argument \\'\" + incorrectOpt + \"\\' in diagnostic command.\");\n+\n+        \/\/ Issue multiple suboptions along with 'help'\n+        output = JcmdBase.jcmd(CMD, HELP, \"basic\");\n+        output.shouldContain(\"Unknown argument \\'\" + HELP + \"\\' in diagnostic command.\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdSubcommandHelp.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}