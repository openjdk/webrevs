{"files":[{"patch":"@@ -403,1 +403,1 @@\n-      \/\/ Allow for \"<cmd> -h\" or \"<cmd> --help\" to enable\n+      \/\/ Allow for \"<cmd> -h|-help|--help\" to enable\n@@ -429,1 +429,2 @@\n-    if (strcmp(token, \"-h\") == 0 || strcmp(token, \"--help\") == 0) {\n+    if (strcmp(token, \"-h\") == 0 || strcmp(token, \"--help\") == 0 ||\n+        strcmp(token, \"-help\") == 0) {\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -315,1 +315,2 @@\n-  \/\/ Helper method to substitute \"<cmd> -h\" for \"help <cmd>\" if applicable.\n+  \/\/ Helper method to substitute help options \"<cmd> -h|-help|--help\"\n+  \/\/ for \"help <cmd>\".\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @summary Test to verify jcmd accepts the \"-help\" and \"--help\" suboptions as a command argument\n+ * @summary Test to verify jcmd accepts the \"-help\", \"--help\" and \"-h\" suboptions as a command argument\n@@ -41,1 +41,1 @@\n-    private static final String HELP_ONE_DASH = \"-h\";\n+    private static final String HELP_ONE_DASH = \"-help\";\n@@ -43,0 +43,1 @@\n+    private static final String HELP_POSIX = \"-h\";\n@@ -44,0 +45,1 @@\n+    private static final String ILLEGAL = \"IllegalArgumentException: Unknown argument\";\n@@ -58,0 +60,1 @@\n+        testExpectedUsage(HELP_POSIX, expectedOutput);\n@@ -61,0 +64,1 @@\n+        testIgnoreAdditionalArgs(HELP_POSIX, expectedOutput);\n@@ -64,0 +68,5 @@\n+        testIgnoreTrailingSpaces(HELP_POSIX, expectedOutput);\n+\n+        testSimilarCommand(HELP_ONE_DASH + \"less\", ILLEGAL);\n+        testSimilarCommand(HELP_TWO_DASH + \"me\", ILLEGAL);\n+        testSimilarCommand(HELP_POSIX + \"ello\", ILLEGAL);\n@@ -81,0 +90,14 @@\n+    private static void testSimilarCommand(String helpOption, String expectedOutput) throws Exception {\n+        verifyOutputContains(new String[] {CMD, helpOption}, expectedOutput,\n+                \"Expected jcmd to NOT accept '%s' suboption with trailing content\".formatted(helpOption));\n+    }\n+\n+    private static void verifyOutputContains(String[] args, String expectedOutput, String errorMessage) throws Exception {\n+        OutputAnalyzer output = JcmdBase.jcmd(args);\n+        String issuedOutput = output.getOutput();\n+        if (!issuedOutput.contains(expectedOutput)) {\n+            printDifferingOutputs(expectedOutput, issuedOutput);\n+            throw new Exception(errorMessage);\n+        }\n+    }\n+\n@@ -85,4 +108,1 @@\n-            System.out.println(\"Expected output: \");\n-            System.out.println(expectedOutput);\n-            System.out.println(\"Issued output: \");\n-            System.out.println(issuedOutput);\n+            printDifferingOutputs(expectedOutput, issuedOutput);\n@@ -92,0 +112,7 @@\n+\n+    private static void printDifferingOutputs(String expectedOutput, String issuedOutput) {\n+        System.out.println(\"Expected output: \");\n+        System.out.println(expectedOutput);\n+        System.out.println(\"Issued output: \");\n+        System.out.println(issuedOutput);\n+    }\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdSubcommandHelp.java","additions":33,"deletions":6,"binary":false,"changes":39,"status":"modified"}]}