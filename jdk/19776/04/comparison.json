{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -403,0 +403,9 @@\n+      \/\/ Allow for \"<cmd> -h\" or \"<cmd> --help\" to enable\n+      \/\/ the help diagnostic command. Ignores any additional\n+      \/\/ arguments.\n+      stringStream updated_line;\n+      if (reorder_help_cmd(line, updated_line)) {\n+        CmdLine updated_cmd(updated_line.base(), updated_line.size(), false);\n+        line = updated_cmd;\n+      }\n+\n@@ -414,0 +423,18 @@\n+bool DCmd::reorder_help_cmd(CmdLine line, stringStream &updated_line) {\n+  stringStream args;\n+  args.print(\"%s\", line.args_addr());\n+  char *rest = args.as_string();\n+  char *token = strtok_r(rest, \" \", &rest);\n+  while (token != NULL) {\n+    if (strcmp(token, \"-h\") == 0 || strcmp(token, \"--help\") == 0) {\n+      updated_line.print(\"%s\", \"help \");\n+      updated_line.write(line.cmd_addr(), line.cmd_len());\n+      updated_line.write(\"\\0\", 1);\n+      return true;\n+    }\n+    token = strtok_r(rest, \" \", &rest);\n+  }\n+\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,0 +315,2 @@\n+  \/\/ Helper method to substitute \"<cmd> -h\" for \"help <cmd>\" if applicable.\n+  static bool reorder_help_cmd(CmdLine line, stringStream& updated_line);\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8332124\n+ * @summary Test to verify jcmd accepts the \"-help\" and \"--help\" suboptions as a command argument\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run main\/othervm TestJcmdSubcommandHelp\n+ *\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\n+public class TestJcmdSubcommandHelp {\n+\n+    private static final String HELP_ONE_DASH = \"-h\";\n+    private static final String HELP_TWO_DASH = \"--help\";\n+    private static final String CMD = \"VM.metaspace\";\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ Sanity check with empty input\n+        OutputAnalyzer output = JcmdBase.jcmd();\n+        output.shouldContain(\"The following commands are available:\");\n+\n+        \/\/ Sanity check with existing usage for \"help <cmd>\"\n+        output = JcmdBase.jcmd(\"help\", CMD);\n+        String expectedOutput = output.getOutput();\n+        output.shouldNotContain(\"Unknown diagnostic command\");\n+\n+        testExpectedUsage(HELP_ONE_DASH, expectedOutput);\n+        testExpectedUsage(HELP_TWO_DASH, expectedOutput);\n+\n+        testIgnoreAdditionalArgs(HELP_ONE_DASH, expectedOutput);\n+        testIgnoreAdditionalArgs(HELP_TWO_DASH, expectedOutput);\n+\n+        testIgnoreTrailingSpaces(HELP_ONE_DASH, expectedOutput);\n+        testIgnoreTrailingSpaces(HELP_TWO_DASH, expectedOutput);\n+    }\n+\n+    private static void testExpectedUsage(String helpOption, String expectedOutput) throws Exception {\n+        verifyOutput(new String[] {CMD, helpOption}, expectedOutput,\n+                \"Expected jcmd to accept '%s' suboption as a command argument and issue the same help output.\".formatted(helpOption));\n+    }\n+\n+    private static void testIgnoreAdditionalArgs(String helpOption, String expectedOutput) throws Exception {\n+        verifyOutput(new String[] {CMD, helpOption, \"basic\"}, expectedOutput,\n+                \"Expected jcmd to accept '%s' suboption with additional arguments after help.\".formatted(helpOption));\n+    }\n+\n+    private static void testIgnoreTrailingSpaces(String helpOption, String expectedOutput) throws Exception {\n+        verifyOutput(new String[] {CMD, \"%s    \".formatted(helpOption)}, expectedOutput,\n+                \"Expected jcmd to accept '%s' suboption with trailing spaces\".formatted(helpOption));\n+    }\n+\n+    private static void verifyOutput(String[] args, String expectedOutput, String errorMessage) throws Exception {\n+        OutputAnalyzer output = JcmdBase.jcmd(args);\n+        String issuedOutput = output.getOutput();\n+        if (!expectedOutput.equals(issuedOutput)) {\n+            System.out.println(\"Expected output: \");\n+            System.out.println(expectedOutput);\n+            System.out.println(\"Issued output: \");\n+            System.out.println(issuedOutput);\n+            throw new Exception(errorMessage);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdSubcommandHelp.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"}]}