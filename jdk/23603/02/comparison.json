{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -496,4 +496,3 @@\n-      if (cidx >= charinfo.length) {\n-          break; \/\/ layout bailed for some reason\n-      }\n-      float adv = charinfo[cidx];\n+      float adv = cidx < charinfo.length ?\n+                  charinfo[cidx] : \/\/ layout provided info for this glyph\n+                  0; \/\/ glyph info omitted, assume no advance\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/ExtendedTextSourceLabel.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -275,0 +275,1 @@\n+     hb_buffer_set_invisible_glyph(buffer, INVISIBLE_GLYPH_ID);\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/HBShaper.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,0 +110,1 @@\n+     hb_buffer_set_invisible_glyph(buffer, INVISIBLE_GLYPH_ID);\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/HBShaper_Panama.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,2 @@\n+\/\/ Matches sun.font.CharToGlyphMapper.INVISIBLE_GLYPH_ID\n+#define INVISIBLE_GLYPH_ID 0xffff\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/hb-jdk-p.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,3 @@\n+\/\/ Matches sun.font.CharToGlyphMapper.INVISIBLE_GLYPH_ID\n+#define INVISIBLE_GLYPH_ID 0xffff\n+\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/hb-jdk.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8208377 6562489\n+ * @bug 8208377 6562489 8270265\n@@ -278,0 +278,6 @@\n+\n+        int max = metrics.stringWidth(\"AB\") + 2; \/\/ add a little wiggle room to the max width\n+        LineBreakMeasurer measurer1 = new LineBreakMeasurer(as1.getIterator(), frc);\n+        LineBreakMeasurer measurer2 = new LineBreakMeasurer(as2.getIterator(), frc);\n+        assertEqual(2, measurer1.nextOffset(max), \"nextOffset 1\", c, font);\n+        assertEqual(7, measurer2.nextOffset(max), \"nextOffset 2\", c, font);\n","filename":"test\/jdk\/java\/awt\/font\/TextLayout\/FormatCharAdvanceTest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}