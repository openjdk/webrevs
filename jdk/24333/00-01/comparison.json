{"files":[{"patch":"@@ -79,1 +79,3 @@\n-                                                    cfs->source(), false, \/* from_class_file_load_hook *\/ true);\n+                                                    cfs->source(),\n+                                                    \/* from_boot_loader_modules_image *\/ false,\n+                                                    \/* from_class_file_load_hook *\/ true);\n@@ -158,1 +160,3 @@\n-                                   stream->source(), false, \/* from_class_file_load_hook *\/ true);\n+                                   stream->source(),\n+                                   \/* from_boot_loader_modules_image *\/ false,\n+                                   \/* from_class_file_load_hook *\/ true);\n","filename":"src\/hotspot\/share\/classfile\/klassFactory.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Make sure --patch-module for java.base verifies the classfile.\n+ * @summary Show that --patch-module for java.base does not verify the classfile.\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleJavaBaseVerify.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,2 @@\n- * @test Verifier should verify ClassFileLoadHook bytes even if on bootclasspath\n+ * @test \n+ * @summary Verifier should verify ClassFileLoadHook bytes even if on bootclasspath\n@@ -71,1 +72,1 @@\n-            \/\/System.out.println(\"Maybe transforming module class \" + className);\n+          \n@@ -103,1 +104,0 @@\n-                    System.out.println(e);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/CFLH\/TestVerify.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}