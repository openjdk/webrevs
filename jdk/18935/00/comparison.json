{"files":[{"patch":"@@ -2975,2 +2975,6 @@\n-  if (aryptr_t == nullptr ||\n-      type2aelembytes(aryptr_t->elem()->array_element_basic_type()) != _store->memory_size()) {\n+  if (aryptr_t == nullptr) {\n+    return nullptr;\n+  }\n+  BasicType bt = aryptr_t->elem()->array_element_basic_type();\n+  if (!is_java_primitive(bt) ||\n+      type2aelembytes(bt) != _store->memory_size()) {\n@@ -3022,2 +3026,7 @@\n-  int size1 = type2aelembytes(aryptr_t1->elem()->array_element_basic_type());\n-  int size2 = type2aelembytes(aryptr_t2->elem()->array_element_basic_type());\n+  BasicType aryptr_bt1 = aryptr_t1->elem()->array_element_basic_type();\n+  BasicType aryptr_bt2 = aryptr_t2->elem()->array_element_basic_type();\n+  if (!is_java_primitive(aryptr_bt1) || !is_java_primitive(aryptr_bt2)) {\n+    return false;\n+  }\n+  int size1 = type2aelembytes(aryptr_bt1);\n+  int size2 = type2aelembytes(aryptr_bt2);\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @bug 8318446\n+ * @bug 8318446 8331054\n@@ -45,1 +45,1 @@\n- * @bug 8318446\n+ * @bug 8318446 8331054\n@@ -186,0 +186,4 @@\n+\n+        testGroups.put(\"test600\", new HashMap<String,TestFunction>());\n+        testGroups.get(\"test600\").put(\"test600R\", (_,i) -> { return test600R(aB.clone(), aI.clone(), i); });\n+        testGroups.get(\"test600\").put(\"test600a\", (_,i) -> { return test600a(aB.clone(), aI.clone(), i); });\n@@ -218,1 +222,2 @@\n-                 \"test502a\"})\n+                 \"test502a\",\n+                 \"test600a\"})\n@@ -1247,0 +1252,47 @@\n+\n+    @DontCompile\n+    static Object[] test600R(byte[] aB, int[] aI, int i) {\n+        Object a = null;\n+        long base = 0;\n+        if (i % 2 == 0) {\n+          a = aB;\n+          base = UNSAFE.ARRAY_BYTE_BASE_OFFSET;\n+        } else {\n+          a = aI;\n+          base = UNSAFE.ARRAY_INT_BASE_OFFSET;\n+        }\n+        UNSAFE.putByte(a, base + 0, (byte)0xbe);\n+        UNSAFE.putByte(a, base + 1, (byte)0xba);\n+        UNSAFE.putByte(a, base + 2, (byte)0xad);\n+        UNSAFE.putByte(a, base + 3, (byte)0xba);\n+        UNSAFE.putByte(a, base + 4, (byte)0xef);\n+        UNSAFE.putByte(a, base + 5, (byte)0xbe);\n+        UNSAFE.putByte(a, base + 6, (byte)0xad);\n+        UNSAFE.putByte(a, base + 7, (byte)0xde);\n+        return new Object[]{ aB, aI };\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_B_OF_CLASS, \"bottom\\\\\\\\[int:>=0] \\\\\\\\(java\/lang\/Cloneable,java\/io\/Serializable\\\\\\\\)\", \"8\"}) \/\/ note: bottom type\n+    static Object[] test600a(byte[] aB, int[] aI, int i) {\n+        Object a = null;\n+        long base = 0;\n+        if (i % 2 == 0) {\n+          a = aB;\n+          base = UNSAFE.ARRAY_BYTE_BASE_OFFSET;\n+        } else {\n+          a = aI;\n+          base = UNSAFE.ARRAY_INT_BASE_OFFSET;\n+        }\n+        \/\/ array a is an aryptr, but its element type is unknown, i.e. bottom.\n+        UNSAFE.putByte(a, base + 0, (byte)0xbe);\n+        UNSAFE.putByte(a, base + 1, (byte)0xba);\n+        UNSAFE.putByte(a, base + 2, (byte)0xad);\n+        UNSAFE.putByte(a, base + 3, (byte)0xba);\n+        UNSAFE.putByte(a, base + 4, (byte)0xef);\n+        UNSAFE.putByte(a, base + 5, (byte)0xbe);\n+        UNSAFE.putByte(a, base + 6, (byte)0xad);\n+        UNSAFE.putByte(a, base + 7, (byte)0xde);\n+        return new Object[]{ aB, aI };\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMergeStores.java","additions":55,"deletions":3,"binary":false,"changes":58,"status":"modified"}]}