{"files":[{"patch":"@@ -1107,5 +1107,0 @@\n-\/\/ Moved from inline file as they are not called inline\n-ContiguousSpace* DefNewGeneration::first_compaction_space() const {\n-  return eden();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -171,2 +171,0 @@\n-  virtual ContiguousSpace* first_compaction_space() const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,10 +58,0 @@\n-\/\/ A \"ScratchBlock\" represents a block of memory in one generation usable by\n-\/\/ another.  It represents \"num_words\" free words, starting at and including\n-\/\/ the address of \"this\".\n-struct ScratchBlock {\n-  ScratchBlock* next;\n-  size_t num_words;\n-  HeapWord scratch_space[1];  \/\/ Actually, of size \"num_words-2\" (assuming\n-                              \/\/ first two fields are word-sized.)\n-};\n-\n@@ -178,4 +168,0 @@\n-  \/\/ Returns the first space, if any, in the generation that can participate\n-  \/\/ in compaction, or else \"null\".\n-  virtual ContiguousSpace* first_compaction_space() const = 0;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -104,2 +104,0 @@\n-  ContiguousSpace* first_compaction_space() const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,4 +52,0 @@\n-inline ContiguousSpace* TenuredGeneration::first_compaction_space() const {\n-  return space();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}