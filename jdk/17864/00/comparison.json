{"files":[{"patch":"@@ -44,0 +44,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -411,0 +412,1 @@\n+    mem_zap_end_padding(mem);\n@@ -416,0 +418,16 @@\n+#ifndef PRODUCT\n+void ObjArrayAllocator::mem_zap_end_padding(HeapWord* mem) const {\n+  const size_t length_in_bytes = static_cast<size_t>(_length) << ArrayKlass::cast(_klass)->log2_element_size();\n+  const BasicType element_type = ArrayKlass::cast(_klass)->element_type();\n+  const size_t base_offset_in_bytes = arrayOopDesc::base_offset_in_bytes(element_type);\n+  const size_t size_in_bytes = _word_size * BytesPerWord;\n+\n+  const address obj_end = reinterpret_cast<address>(mem) + size_in_bytes;\n+\n+  const size_t padding_in_bytes = size_in_bytes - base_offset_in_bytes - length_in_bytes;\n+  if (padding_in_bytes != 0) {\n+    Copy::fill_to_bytes(obj_end - padding_in_bytes, padding_in_bytes, heapPaddingByte);\n+  }\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -101,0 +101,2 @@\n+  void mem_zap_end_padding(HeapWord* mem) const PRODUCT_RETURN;\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,0 +135,2 @@\n+  mem_zap_end_padding(mem);\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1038,0 +1038,1 @@\n+const jubyte   heapPaddingByte  = 0xBD;                     \/\/ value used to zap object padding in the heap\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}