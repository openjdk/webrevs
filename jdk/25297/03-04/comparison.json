{"files":[{"patch":"@@ -194,1 +194,1 @@\n-     * the {@code a} argument is returned.\n+     * the {@code o1} argument is returned.\n@@ -196,2 +196,2 @@\n-     * @param   a   an argument.\n-     * @param   b   another argument.\n+     * @param   o1   an argument.\n+     * @param   o2   another argument.\n@@ -199,4 +199,5 @@\n-     * @return  the larger of {@code a} and {@code b} according to this comparator.\n-     * @throws  ClassCastException if the collection contains elements that are\n-     *          not <em>mutually comparable<\/em> (for example, strings and\n-     *          integers).\n+     * @return  the larger of {@code o1} and {@code o2} according to this comparator.\n+     * @throws  NullPointerException if an argument is null and this\n+     *          comparator does not permit null arguments\n+     * @throws  ClassCastException if the arguments' types prevent them from\n+     *          being compared by this comparator.\n@@ -206,2 +207,2 @@\n-    default <U extends T> U max(U a, U b) {\n-        return compare(a, b) >= 0 ? a : b;\n+    default <U extends T> U max(U o1, U o2) {\n+        return compare(o1, o2) >= 0 ? o1 : o2;\n@@ -213,1 +214,1 @@\n-     * the {@code a} argument is returned.\n+     * the {@code o1} argument is returned.\n@@ -215,2 +216,2 @@\n-     * @param   a   an argument.\n-     * @param   b   another argument.\n+     * @param   o1   an argument.\n+     * @param   o2   another argument.\n@@ -218,4 +219,5 @@\n-     * @return  the smaller of {@code a} and {@code b} according to this comparator.\n-     * @throws  ClassCastException if the collection contains elements that are\n-     *          not <em>mutually comparable<\/em> (for example, strings and\n-     *          integers).\n+     * @return  the smaller of {@code o1} and {@code o2} according to this comparator.\n+     * @throws  NullPointerException if an argument is null and this\n+     *          comparator does not permit null arguments\n+     * @throws  ClassCastException if the arguments' types prevent them from\n+     *          being compared by this comparator.\n@@ -225,2 +227,2 @@\n-    default <U extends T> U min(U a, U b) {\n-        return compare(a, b) <= 0 ? a : b;\n+    default <U extends T> U min(U o1, U o2) {\n+        return compare(o1, o2) <= 0 ? o1 : o2;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Comparator.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"}]}