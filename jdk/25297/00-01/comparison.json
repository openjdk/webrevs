{"files":[{"patch":"@@ -194,1 +194,1 @@\n-     * the {@code b} argument is returned.\n+     * the {@code a} argument is returned.\n@@ -206,1 +206,1 @@\n-        return compare(a, b) > 0 ? a : b;\n+        return compare(a, b) >= 0 ? a : b;\n@@ -224,1 +224,1 @@\n-        return compare(a, b) > 0 ? b : a;\n+        return compare(a, b) <= 0 ? a : b;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Comparator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run testng MinMaxTest\n+ * @run junit MinMaxTest\n@@ -31,1 +31,1 @@\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.Test;\n@@ -34,1 +34,0 @@\n-import static org.testng.Assert.*;\n@@ -36,1 +35,2 @@\n-@Test(groups = \"unit\")\n+import static org.junit.jupiter.api.Assertions.*;\n+\n@@ -38,0 +38,1 @@\n+  @Test\n@@ -40,2 +41,2 @@\n-    assertEquals(c.min(\"a\", \"b\"), \"a\");\n-    assertEquals(c.min(\"b\", \"a\"), \"a\");\n+    assertEquals(\"a\", c.min(\"a\", \"b\"));\n+    assertEquals(\"a\", c.min(\"b\", \"a\"));\n@@ -44,0 +45,1 @@\n+  @Test\n@@ -46,2 +48,2 @@\n-    assertEquals(c.max(\"a\", \"b\"), \"b\");\n-    assertEquals(c.max(\"b\", \"a\"), \"b\");\n+    assertEquals(\"b\", c.max(\"a\", \"b\"));\n+    assertEquals(\"b\", c.max(\"b\", \"a\"));\n@@ -50,0 +52,1 @@\n+  @Test\n@@ -58,0 +61,1 @@\n+  @Test\n@@ -67,1 +71,2 @@\n-  public void testEqualReturnFirstOrLast() {\n+  @Test\n+  public void testEqualReturnFirst() {\n@@ -71,2 +76,2 @@\n-    assertSame(allEqual.min(o1, o2), o1);\n-    assertSame(allEqual.max(o1, o2), o2);\n+    assertSame(o1, allEqual.min(o1, o2));\n+    assertSame(o1, allEqual.max(o1, o2));\n","filename":"test\/jdk\/java\/util\/Comparator\/MinMaxTest.java","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"}]}