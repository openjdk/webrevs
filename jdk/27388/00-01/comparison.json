{"files":[{"patch":"@@ -44,1 +44,0 @@\n-import org.junit.jupiter.params.provider.Arguments;\n@@ -65,1 +64,0 @@\n-import java.util.stream.Stream;\n@@ -92,5 +90,5 @@\n-    static SSLContext sslContext;\n-    static Http2TestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n-    static Http2TestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n-    static String http2URI;\n-    static String https2URI;\n+    private static SSLContext sslContext;\n+    private static Http2TestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n+    private static Http2TestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n+    private static String http2URI;\n+    private static String https2URI;\n@@ -134,6 +132,6 @@\n-    static Stream<Arguments> variants() {\n-        return Stream.of(\n-                Arguments.of(http2URI,  false, oneContinuation),\n-                Arguments.of(https2URI, false, oneContinuation),\n-                Arguments.of(http2URI,  true,  oneContinuation),\n-                Arguments.of(https2URI, true,  oneContinuation),\n+    static Object[][] variants() {\n+        return new Object[][] {\n+                { http2URI, false, oneContinuation },\n+                { https2URI, false, oneContinuation },\n+                { http2URI, true, oneContinuation },\n+                { https2URI, true, oneContinuation },\n@@ -141,5 +139,5 @@\n-                Arguments.of(http2URI,  false, byteAtATime),\n-                Arguments.of(https2URI, false, byteAtATime),\n-                Arguments.of(http2URI,  true,  byteAtATime),\n-                Arguments.of(https2URI, true,  byteAtATime)\n-        );\n+                {http2URI, false, byteAtATime },\n+                {https2URI, false, byteAtATime },\n+                {http2URI, true, byteAtATime },\n+                {https2URI, true, byteAtATime },\n+        };\n@@ -148,1 +146,0 @@\n-\n@@ -247,1 +244,1 @@\n-    public static void setup() throws Exception {\n+    static void setup() throws Exception {\n@@ -272,1 +269,1 @@\n-    public static void teardown() throws Exception {\n+    static void teardown() throws Exception {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/BadHeadersTest.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    public static void setup() throws Exception {\n+    static void setup() throws Exception {\n@@ -91,1 +91,1 @@\n-    public static void teardown() {\n+    static void teardown() {\n@@ -99,1 +99,1 @@\n-    public void test() throws Exception {\n+    void test() {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/BadPushPromiseTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-    public void test() throws Exception {\n+    void test() throws Exception {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/BasicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-import java.util.stream.Stream;\n@@ -72,1 +71,0 @@\n-import org.junit.jupiter.params.provider.Arguments;\n@@ -79,6 +77,6 @@\n-    static SSLContext sslContext;\n-    static HttpTestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n-    static HttpTestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n-    static String http2URI;\n-    static String https2URI;\n-    final AtomicInteger reqid = new AtomicInteger();\n+    private static SSLContext sslContext;\n+    private static HttpTestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n+    private static HttpTestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n+    private static String http2URI;\n+    private static String https2URI;\n+    private final AtomicInteger reqid = new AtomicInteger();\n@@ -86,5 +84,5 @@\n-    static Stream<Arguments> variants() {\n-        return Stream.of(\n-                Arguments.of(http2URI),\n-                Arguments.of(https2URI)\n-        );\n+    static Object[][] variants() {\n+        return new Object[][] {\n+                {http2URI},\n+                {https2URI},\n+        };\n@@ -133,1 +131,1 @@\n-                            assertEquals(ckey, label, \"Unexpected key for \" + query);\n+                            assertEquals(label, ckey, \"Unexpected key for \" + query);\n@@ -159,1 +157,1 @@\n-                            assertEquals(ckey, label, \"Unexpected key for \" + query);\n+                            assertEquals(label, ckey, \"Unexpected key for \" + query);\n@@ -212,1 +210,1 @@\n-                assertNotEquals(ckey, label);\n+                assertNotEquals(label, ckey);\n@@ -244,1 +242,1 @@\n-    public static void setup() throws Exception {\n+    static void setup() throws Exception {\n@@ -264,2 +262,2 @@\n-        http2TestServerLocal.start();\n-        https2TestServerLocal.start();\n+        http2TestServer.start();\n+        https2TestServer.start();\n@@ -269,1 +267,1 @@\n-    public static void teardown() throws Exception {\n+    static void teardown() throws Exception {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ConnectionFlowControlTest.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import java.util.stream.Stream;\n@@ -67,1 +66,0 @@\n-import org.junit.jupiter.params.provider.Arguments;\n@@ -75,8 +73,8 @@\n-    static SSLContext sslContext;\n-    static Http2TestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n-    static Http2TestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n-    static String http2URI;\n-    static String https2URI;\n-    static String noBodyhttp2URI;\n-    static String noBodyhttps2URI;\n-    final static ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n+    private static SSLContext sslContext;\n+    private static Http2TestServer http2TestServer;   \/\/ HTTP\/2 ( h2c )\n+    private static Http2TestServer https2TestServer;  \/\/ HTTP\/2 ( h2  )\n+    private static String http2URI;\n+    private static String https2URI;\n+    private static String noBodyhttp2URI;\n+    private static String noBodyhttps2URI;\n+    private final static ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n@@ -137,17 +135,17 @@\n-    static Stream<Arguments> variants() {\n-        return Stream.of(\n-                Arguments.of(http2URI,  false, oneContinuation),\n-                Arguments.of(https2URI, false, oneContinuation),\n-                Arguments.of(http2URI,  true,  oneContinuation),\n-                Arguments.of(https2URI, true,  oneContinuation),\n-\n-                Arguments.of(noBodyhttp2URI,  false, twoContinuation),\n-                Arguments.of(noBodyhttp2URI,  true,  twoContinuation),\n-                Arguments.of(noBodyhttps2URI, false, twoContinuation),\n-                Arguments.of(noBodyhttps2URI, true,  twoContinuation),\n-\n-                Arguments.of(http2URI,  false, byteAtATime),\n-                Arguments.of(https2URI, false, byteAtATime),\n-                Arguments.of(http2URI,  true,  byteAtATime),\n-                Arguments.of(https2URI, true,  byteAtATime)\n-        );\n+    static Object[][] variants() {\n+        return new Object[][] {\n+                {http2URI,  false, oneContinuation},\n+                {https2URI, false, oneContinuation},\n+                {http2URI,  true,  oneContinuation},\n+                {https2URI, true,  oneContinuation},\n+\n+                {noBodyhttp2URI,  false, twoContinuation},\n+                {noBodyhttp2URI,  true,  twoContinuation},\n+                {noBodyhttps2URI, false, twoContinuation},\n+                {noBodyhttps2URI, true,  twoContinuation},\n+\n+                {http2URI,  false, byteAtATime},\n+                {https2URI, false, byteAtATime},\n+                {http2URI,  true,  byteAtATime},\n+                {https2URI, true,  byteAtATime},\n+        };\n@@ -202,1 +200,1 @@\n-    public static void setup() throws Exception {\n+    static void setup() throws Exception {\n@@ -231,1 +229,1 @@\n-    public static void teardown() throws Exception {\n+    static void teardown() throws Exception {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ContinuationFrameTest.java","additions":27,"deletions":29,"binary":false,"changes":56,"status":"modified"}]}