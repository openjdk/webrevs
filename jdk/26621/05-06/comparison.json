{"files":[{"patch":"@@ -4953,1 +4953,0 @@\n-      log_warning(os)(\"Could not sample thread CPU time (return code %d)\", rc);\n@@ -5028,1 +5027,0 @@\n-    log_warning(os)(\"Could not sample thread CPU time (nullptr)\");\n@@ -5040,1 +5038,0 @@\n-    log_warning(os)(\"Could not sample thread CPU time (count != 13)\");\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1617,1 +1617,0 @@\n-    log_warning(os)(\"Could not sample process CPU time\");\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1197,1 +1197,0 @@\n-    log_warning(os)(\"Could not sample process CPU time\");\n@@ -1203,1 +1202,0 @@\n-    log_warning(os)(\"Could not sample process CPU time\");\n@@ -1209,1 +1207,0 @@\n-    log_warning(os)(\"Could not sample process CPU time\");\n@@ -4914,1 +4911,0 @@\n-    log_warning(os)(\"Could not sample thread CPU time\");\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+#include \"services\/cpuTimeUsage.hpp\"\n@@ -1324,0 +1325,1 @@\n+  const bool has_error = CPUTimeUsage::Error::has_error();\n@@ -1327,0 +1329,3 @@\n+    if (has_error) {\n+      cpuLog.print(\"WARNING: CPU time sampling reported errors, numbers may be unreliable\");\n+    }\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+volatile bool CPUTimeUsage::Error::_has_error = false;\n+\n@@ -44,0 +46,2 @@\n+      } else {\n+        CPUTimeUsage::Error::mark_error();\n@@ -77,1 +81,5 @@\n-    return os::thread_cpu_time((Thread*)StringDedup::_processor->_thread);\n+    jlong cpu_time = os::thread_cpu_time((Thread*)StringDedup::_processor->_thread);\n+    if (cpu_time == -1) {\n+      CPUTimeUsage::Error::mark_error();\n+    }\n+    return cpu_time;\n@@ -85,0 +93,8 @@\n+\n+bool CPUTimeUsage::Error::has_error() {\n+  return Atomic::load(&_has_error);\n+}\n+\n+void CPUTimeUsage::Error::mark_error() {\n+  Atomic::store(&_has_error, true);\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/services\/cpuTimeUsage.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -54,0 +54,8 @@\n+\n+    class Error : public AllStatic {\n+    private:\n+        static volatile bool _has_error;\n+    public:\n+        static bool has_error();\n+        static void mark_error();\n+    };\n","filename":"src\/hotspot\/share\/services\/cpuTimeUsage.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}