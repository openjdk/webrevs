{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,1 @@\n+     * @throws    NullPointerException if {@code ze} is null\n@@ -71,0 +72,1 @@\n+     * @throws    NullPointerException if {@code je} is null\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarEntry.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,3 @@\n- *\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,3 @@\n- *\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarOutputStream.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,3 @@\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n@@ -84,1 +87,2 @@\n-     * @param jarFilename the name of the corresponding jar archive if available\n+     * @param jarFilename the name of the corresponding jar archive\n+     *                    if available, else null\n@@ -95,1 +99,1 @@\n-     * @param jv the JarVerifier to use\n+     * @param jv the JarVerifier to use if any, else null\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/Manifest.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,3 @@\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a method\n+ * in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Deflater.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,3 @@\n+        \/\/ \"in\" being null isn't allowed. we use a null check for \"in\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Deflater\n+        \/\/ for such erroneous cases.\n@@ -167,0 +170,1 @@\n+     * @throws NullPointerException if {@code b} is null\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterInputStream.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n@@ -161,0 +164,3 @@\n+        \/\/ \"out\" being null isn't allowed. we use a null check for \"out\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Deflater\n+        \/\/ for such erroneous cases.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterOutputStream.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,1 @@\n+     * @throws    NullPointerException if {@code in} is null\n@@ -77,0 +78,3 @@\n+        \/\/ \"in\" being null isn't allowed. we use a null check for \"in\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Inflater\n+        \/\/ for such erroneous cases.\n@@ -88,0 +92,1 @@\n+     * @throws    NullPointerException if {@code in} is null\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPInputStream.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,4 @@\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n+ *\n@@ -93,0 +97,3 @@\n+        \/\/ \"out\" being null isn't allowed. we use a null check for \"out\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Deflater\n+        \/\/ for such erroneous cases.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPOutputStream.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,3 @@\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Inflater.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,3 @@\n- *\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n@@ -109,0 +111,3 @@\n+        \/\/ \"in\" being null isn't allowed. we use a null check for \"in\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Inflater\n+        \/\/ for such erroneous cases.\n@@ -113,1 +118,1 @@\n-    private byte[] singleByteBuf = new byte[1];\n+    private final byte[] singleByteBuf = new byte[1];\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterInputStream.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,3 @@\n+        \/\/ \"out\" being null isn't allowed. we use a null check for \"out\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Inflater\n+        \/\/ for such erroneous cases.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterOutputStream.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -225,1 +225,1 @@\n-     *\n+     * @throws NullPointerException if {@code time} is null\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,3 @@\n- *\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,3 @@\n- *\n+ * <p> Unless otherwise noted, passing a {@code null} argument to a constructor\n+ * or method in this class will cause a {@link NullPointerException} to be\n+ * thrown.\n@@ -133,0 +135,3 @@\n+        \/\/ \"out\" being null isn't allowed. we use a null check for \"out\"\n+        \/\/ merely to avoid an unnecessary instance creation of the Deflater\n+        \/\/ for such erroneous cases.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipOutputStream.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}