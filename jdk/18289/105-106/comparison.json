{"files":[{"patch":"@@ -47,1 +47,1 @@\n-  VMATree::SummaryDiff diff = file->_tree.reserve_mapping(offset, size, regiondata);\n+  VMATree::SummaryDiff diff = file->_tree.commit_mapping(offset, size, regiondata);\n@@ -50,1 +50,1 @@\n-    summary->reserve_memory(diff.flag[i].reserve);\n+    summary->commit_memory(diff.flag[i].commit);\n@@ -58,1 +58,1 @@\n-    summary->reserve_memory(diff.flag[i].reserve);\n+    summary->commit_memory(diff.flag[i].commit);\n@@ -73,3 +73,3 @@\n-    if (prev->val().out.type() == VMATree::StateType::Reserved) {\n-      const auto& start_addr = prev->key();\n-      const auto& end_addr = current->key();\n+    if (prev->val().out.type() == VMATree::StateType::Committed) {\n+      const VMATree::position& start_addr = prev->key();\n+      const VMATree::position& end_addr = current->key();\n@@ -159,4 +159,3 @@\n-      auto snap = snapshot->by_type(NMTUtil::index_to_flag(i));\n-      auto current = file->_summary.by_type(NMTUtil::index_to_flag(i));\n-      \/\/ The MemoryFileTracker stores the memory as reserved but it's accounted as committed.\n-      snap->commit_memory(current->reserved());\n+      VirtualMemory* snap = snapshot->by_type(NMTUtil::index_to_flag(i));\n+      const VirtualMemory* current = file->_summary.by_type(NMTUtil::index_to_flag(i));\n+      snap->commit_memory(current->committed());\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    int cmp_B = AddressComparator::cmp(head->key(), B);\n+    int cmp_B = PositionComparator::cmp(head->key(), B);\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+public:\n@@ -44,1 +45,1 @@\n-  class AddressComparator {\n+  class PositionComparator {\n@@ -54,1 +55,0 @@\n-public:\n@@ -121,1 +121,1 @@\n-  using VMATreap = TreapCHeap<position, IntervalChange, AddressComparator>;\n+  using VMATreap = TreapCHeap<position, IntervalChange, PositionComparator>;\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,13 +35,13 @@\n-    MemoryFileTracker::MemoryFile* dev = tracker.make_device(\"test\");\n-    tracker.allocate_memory(dev, 0, 100, CALLER_PC, mtTest);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(100));\n-    tracker.allocate_memory(dev, 100, 100, CALLER_PC, mtTest);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(200));\n-    tracker.allocate_memory(dev, 200, 100, CALLER_PC, mtTest);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(300));\n-    tracker.free_memory(dev, 0, 300);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(0));\n-    tracker.allocate_memory(dev, 0, 100, CALLER_PC, mtTest);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(100));\n-    tracker.free_memory(dev, 50, 10);\n-    EXPECT_EQ(dev->_summary.by_type(mtTest)->reserved(), sz(90));\n+    MemoryFileTracker::MemoryFile* file = tracker.make_file(\"test\");\n+    tracker.allocate_memory(file, 0, 100, CALLER_PC, mtTest);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(100));\n+    tracker.allocate_memory(file, 100, 100, CALLER_PC, mtTest);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(200));\n+    tracker.allocate_memory(file, 200, 100, CALLER_PC, mtTest);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(300));\n+    tracker.free_memory(file, 0, 300);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(0));\n+    tracker.allocate_memory(file, 0, 100, CALLER_PC, mtTest);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(100));\n+    tracker.free_memory(file, 50, 10);\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(90));\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_memoryfiletracker.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}