{"files":[{"patch":"@@ -65,3 +65,3 @@\n-  \/\/ 4096 buckets ensures that probability of collision is 50% at approximately 64\n-  \/\/ different call stacks.\n-  static const constexpr int nr_buckets = 4096;\n+  \/\/ Pick a prime number of buckets.\n+  \/\/ 4099 gives a 50% probability of collisions at 76 stacks (as per birthday problem).\n+  static const constexpr int nr_buckets = 4099;\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-VMATree::SummaryDiff VMATree::register_mapping(size_t A, size_t B, StateType state,\n+VMATree::SummaryDiff VMATree::register_mapping(position A, position B, StateType state,\n@@ -38,1 +38,1 @@\n-    size_t address;\n+    position address;\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,4 @@\n+\n+  \/\/ A position in memory.\n+  using position = size_t;\n+\n@@ -44,1 +48,1 @@\n-    static int cmp(size_t a, size_t b) {\n+    static int cmp(position a, position b) {\n@@ -114,1 +118,1 @@\n-  using VMATreap = TreapCHeap<size_t, IntervalChange, AddressComparator>;\n+  using VMATreap = TreapCHeap<position, IntervalChange, AddressComparator>;\n@@ -133,1 +137,1 @@\n-  SummaryDiff register_mapping(size_t A, size_t B, StateType state, Metadata& metadata);\n+  SummaryDiff register_mapping(position A, position B, StateType state, Metadata& metadata);\n@@ -135,1 +139,1 @@\n-  SummaryDiff reserve_mapping(size_t from, size_t sz, Metadata& metadata) {\n+  SummaryDiff reserve_mapping(position from, position sz, Metadata& metadata) {\n@@ -139,1 +143,1 @@\n-  SummaryDiff commit_mapping(size_t from, size_t sz, Metadata& metadata) {\n+  SummaryDiff commit_mapping(position from, position sz, Metadata& metadata) {\n@@ -143,1 +147,1 @@\n-  SummaryDiff release_mapping(size_t from, size_t sz) {\n+  SummaryDiff release_mapping(position from, position sz) {\n@@ -150,1 +154,1 @@\n-  void visit(size_t from, size_t to, F f) {\n+  void visit(position from, position to, F f) {\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}