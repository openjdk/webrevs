{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/nmt\/memReporter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/nmt\/memTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,0 +178,1 @@\n+    assert(device != nullptr, \"must be\");\n@@ -186,0 +187,1 @@\n+    assert(device != nullptr, \"must be\");\n@@ -194,0 +196,1 @@\n+    assert(device != nullptr, \"must be\");\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n-                                            size_t size, MEMFLAGS flag,\n-                                            const NativeCallStack& stack) {\n+                                        size_t size, MEMFLAGS flag,\n+                                        const NativeCallStack& stack) {\n@@ -47,2 +47,2 @@\n-  DeviceSpace::Metadata metadata(sidx, flag);\n-  DeviceSpace::SummaryDiff diff = device->_tree.reserve_mapping(offset, size, metadata);\n+  VMATree::Metadata metadata(sidx, flag);\n+  VMATree::SummaryDiff diff = device->_tree.reserve_mapping(offset, size, metadata);\n@@ -57,1 +57,1 @@\n-  DeviceSpace::SummaryDiff diff = device->_tree.release_mapping(offset, size);\n+  VMATree::SummaryDiff diff = device->_tree.release_mapping(offset, size);\n@@ -68,2 +68,2 @@\n-  VMATree::VTreap* prev = nullptr;\n-  device->_tree.in_order_traversal([&](VMATree::VTreap* current) {\n+  VMATree::TreapNode* prev = nullptr;\n+  device->_tree.in_order_traversal([&](VMATree::TreapNode* current) {\n@@ -84,2 +84,2 @@\n-                       NMTUtil::flag_to_name(pval.out.metadata().flag));\n-      pval.out.metadata().stack_idx.stack().print_on(stream, 4);\n+                       NMTUtil::flag_to_name(pval.out.flag()));\n+      pval.out.stack().print_on(stream, 4);\n@@ -122,2 +122,2 @@\n-                                                      size_t size, MEMFLAGS flag,\n-                                                      const NativeCallStack& stack) {\n+                                                  size_t size, MEMFLAGS flag,\n+                                                  const NativeCallStack& stack) {\n@@ -128,1 +128,1 @@\n-                                                  size_t size) {\n+                                              size_t size) {\n@@ -138,1 +138,1 @@\n-                                                      outputStream* stream, size_t scale) {\n+                                                  outputStream* stream, size_t scale) {\n@@ -152,1 +152,1 @@\n-      \/\/ PDT stores the memory as reserved but it's accounted as committed.\n+      \/\/ The MemoryFileTracker stores the memory as reserved but it's accounted as committed.\n","filename":"src\/hotspot\/share\/nmt\/nmtMemoryFileTracker.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -48,3 +48,0 @@\n-  \/\/ Each device has its own memory space.\n-  using DeviceSpace = VMATree;\n-\n@@ -57,1 +54,1 @@\n-    DeviceSpace _tree;\n+    VMATree _tree;\n@@ -61,2 +58,1 @@\n-      : _descriptive_name(descriptive_name) {\n-    }\n+      : _descriptive_name(descriptive_name) {}\n","filename":"src\/hotspot\/share\/nmt\/nmtMemoryFileTracker.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_NMT_TREAP_HPP\n-#define SHARE_NMT_TREAP_HPP\n+#ifndef SHARE_NMT_NMTTREAP_HPP\n+#define SHARE_NMT_NMTTREAP_HPP\n@@ -281,1 +281,1 @@\n-#endif \/\/SHARE_NMT_TREAP_HPP\n+#endif \/\/SHARE_NMT_NMTTREAP_HPP\n","filename":"src\/hotspot\/share\/nmt\/nmtTreap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+\n@@ -35,2 +36,7 @@\n-    MEMFLAGS flag_out() const {\n-      return state.out.metadata().flag;\n+\n+    const IntervalState& out() const {\n+      return state.out;\n+    }\n+\n+    const IntervalState& in() const {\n+      return state.in;\n@@ -48,1 +54,1 @@\n-  VTreap* geqB_n = tree.closest_geq(B);\n+  TreapNode* geqB_n = tree.closest_geq(B);\n@@ -65,1 +71,1 @@\n-  VTreap* leqA_n = tree.closest_leq(A);\n+  TreapNode* leqA_n = tree.closest_leq(A);\n@@ -130,1 +136,1 @@\n-    GrowableArrayCHeap<VTreap*, mtNMT> to_visit;\n+    GrowableArrayCHeap<TreapNode*, mtNMT> to_visit;\n@@ -132,1 +138,1 @@\n-    VTreap* head = nullptr;\n+    TreapNode* head = nullptr;\n@@ -187,2 +193,2 @@\n-    auto& rescom = diff.flag[NMTUtil::flag_to_index(LEQ_A.flag_out())];\n-    if (LEQ_A.state.out.type() == StateType::Reserved) {\n+    auto& rescom = diff.flag[NMTUtil::flag_to_index(LEQ_A.out().flag())];\n+    if (LEQ_A.out().type() == StateType::Reserved) {\n@@ -190,1 +196,1 @@\n-    } else if (LEQ_A.state.out.type() == StateType::Committed) {\n+    } else if (LEQ_A.out().type() == StateType::Committed) {\n@@ -202,1 +208,1 @@\n-  AddressState prev = {A, stA};\n+  AddressState prev{A, stA};\n@@ -209,2 +215,2 @@\n-    auto& rescom = diff.flag[NMTUtil::flag_to_index(delete_me.state.in.flag())];\n-    if (delete_me.state.in.type() == StateType::Reserved) {\n+    auto& rescom = diff.flag[NMTUtil::flag_to_index(delete_me.in().flag())];\n+    if (delete_me.in().type() == StateType::Reserved) {\n@@ -212,1 +218,1 @@\n-    } else if (delete_me.state.in.type() == StateType::Committed) {\n+    } else if (delete_me.in().type() == StateType::Committed) {\n@@ -219,2 +225,2 @@\n-  if (prev.address != A && prev.state.out.type() != StateType::Released &&\n-      GEQ_B.state.in.type() != StateType::Released) {\n+  if (prev.address != A && prev.out().type() != StateType::Released &&\n+      GEQ_B.in().type() != StateType::Released) {\n@@ -224,2 +230,2 @@\n-    if (prev.state.out.type() == StateType::Reserved) {\n-      auto& rescom = diff.flag[NMTUtil::flag_to_index(prev.flag_out())];\n+    if (prev.out().type() == StateType::Reserved) {\n+      auto& rescom = diff.flag[NMTUtil::flag_to_index(prev.out().flag())];\n@@ -227,2 +233,2 @@\n-    } else if (prev.state.out.type() == StateType::Committed) {\n-      auto& rescom = diff.flag[NMTUtil::flag_to_index(prev.flag_out())];\n+    } else if (prev.out().type() == StateType::Committed) {\n+      auto& rescom = diff.flag[NMTUtil::flag_to_index(prev.out().flag())];\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -60,4 +60,2 @@\n-    Metadata()\n-      : stack_idx(),\n-        flag(mtNone) {\n-    }\n+    Metadata() : stack_idx(), flag(mtNone) {}\n+\n@@ -65,3 +63,2 @@\n-      : stack_idx(stack_idx),\n-        flag(flag) {\n-    }\n+    : stack_idx(stack_idx), flag(flag) {}\n+\n@@ -69,2 +66,2 @@\n-      return NativeCallStackStorage::StackIndex::equals(a.stack_idx, b.stack_idx) &&\n-             a.flag == b.flag;\n+      return a.flag == b.flag &&\n+             NativeCallStackStorage::StackIndex::equals(a.stack_idx, b.stack_idx);\n@@ -99,0 +96,4 @@\n+\n+   const NativeCallStack& stack() const {\n+      return sidx.stack();\n+    }\n@@ -113,3 +114,3 @@\n-  using VTreapTree = TreapCHeap<size_t, IntervalChange, AddressComparator>;\n-  using VTreap = VTreapTree::TreapNode;\n-  VTreapTree tree;\n+  using VMATreap = TreapCHeap<size_t, IntervalChange, AddressComparator>;\n+  using TreapNode = VMATreap::TreapNode;\n+  VMATreap tree;\n@@ -117,3 +118,1 @@\n-  VMATree()\n-    : tree() {\n-  }\n+  VMATree() : tree() {}\n@@ -154,1 +153,1 @@\n-    GrowableArray<VTreap*> to_visit(&area, 16, 0, nullptr);\n+    GrowableArray<TreapNode*> to_visit(&area, 16, 0, nullptr);\n@@ -156,1 +155,1 @@\n-    VTreap* head = nullptr;\n+    TreapNode* head = nullptr;\n@@ -179,1 +178,1 @@\n-  void in_order_traversal_doer(F f, VTreap* node) const {\n+  void in_order_traversal_doer(F f, TreapNode* node) const {\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  VMATree::VTreap* treap_of(VMATree& tree) {\n+  VMATree::TreapNode* treap_of(VMATree& tree) {\n@@ -56,1 +56,1 @@\n-  using Node = Tree::VTreap;\n+  using Node = Tree::TreapNode;\n@@ -255,1 +255,1 @@\n-  using Node = Tree::VTreap;\n+  using Node = Tree::TreapNode;\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestZNMT.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}