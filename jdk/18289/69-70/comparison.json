{"files":[{"patch":"@@ -45,1 +45,1 @@\n-  MemTracker::allocate_memory_in(ZNMT::_device, untype(offset), size, mtJavaHeap, CALLER_PC);\n+  MemTracker::allocate_memory_in(ZNMT::_device, untype(offset), size, CALLER_PC, mtJavaHeap);\n","filename":"src\/hotspot\/share\/gc\/z\/zNMT.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-                                        MEMFLAGS flag, const NativeCallStack& stack) {\n+                                       const NativeCallStack& stack, MEMFLAGS flag) {\n@@ -191,1 +191,1 @@\n-    MemoryFileTracker::Instance::allocate_memory(device, offset, size, flag, stack);\n+    MemoryFileTracker::Instance::allocate_memory(device, offset, size, stack, flag);\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n-                                        size_t size, MEMFLAGS flag,\n-                                        const NativeCallStack& stack) {\n+                                        size_t size, const NativeCallStack& stack,\n+                                        MEMFLAGS flag) {\n@@ -120,2 +120,2 @@\n-                                                  size_t size, MEMFLAGS flag,\n-                                                  const NativeCallStack& stack) {\n+                                                  size_t size, const NativeCallStack& stack,\n+                                                  MEMFLAGS flag) {\n","filename":"src\/hotspot\/share\/nmt\/nmtMemoryFileTracker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-  void allocate_memory(MemoryFile* device, size_t offset, size_t size, MEMFLAGS flag,\n-                       const NativeCallStack& stack);\n+  void allocate_memory(MemoryFile* device, size_t offset, size_t size, const NativeCallStack& stack,\n+                       MEMFLAGS flag);\n@@ -101,1 +101,1 @@\n-                                MEMFLAGS flag, const NativeCallStack& stack);\n+                                const NativeCallStack& stack, MEMFLAGS flag);\n","filename":"src\/hotspot\/share\/nmt\/nmtMemoryFileTracker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    tracker.allocate_memory(dev, 0, 100, mtTest, CALLER_PC);\n+    tracker.allocate_memory(dev, 0, 100, CALLER_PC, mtTest);\n@@ -38,1 +38,1 @@\n-    tracker.allocate_memory(dev, 100, 100, mtTest, CALLER_PC);\n+    tracker.allocate_memory(dev, 100, 100, CALLER_PC, mtTest);\n@@ -40,1 +40,1 @@\n-    tracker.allocate_memory(dev, 200, 100, mtTest, CALLER_PC);\n+    tracker.allocate_memory(dev, 200, 100, CALLER_PC, mtTest);\n@@ -44,1 +44,1 @@\n-    tracker.allocate_memory(dev, 0, 100, mtTest, CALLER_PC);\n+    tracker.allocate_memory(dev, 0, 100, CALLER_PC, mtTest);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_memoryfiletracker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}