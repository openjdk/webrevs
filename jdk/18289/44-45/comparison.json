{"files":[{"patch":"@@ -163,1 +163,2 @@\n-        } else { \/* Unreachable *\/\n+        } else {\n+          assert(false, \"Cannot happen.\");\n@@ -167,1 +168,1 @@\n-        assert(false, \"cannot happen.\");\n+        assert(false, \"Cannot happen.\");\n@@ -171,0 +172,1 @@\n+\n@@ -173,3 +175,2 @@\n-      (!stB.is_noop() || \/\/ The operation is differing Or\n-       !Metadata::equals(stB.out.metadata(), Metadata{})) \/\/ The metadata was changed from empty earlier\n-  ) {\n+      !stB.is_noop())   \/\/ The operation is differing\n+    {\n@@ -183,2 +184,1 @@\n-  if (to_be_deleted_inbetween_a_b.length() == 0 && LEQ_A_found && GEQ_B_found &&\n-      GEQ_B.address >= B) {\n+  if (to_be_deleted_inbetween_a_b.length() == 0 && LEQ_A_found && GEQ_B_found) {\n@@ -196,1 +196,1 @@\n-  \/\/ Sort them in address order, lowest first.\n+  \/\/ Sort them in address order, lowest first. This is for accounting purposes only.\n@@ -217,0 +217,1 @@\n+\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -96,0 +96,13 @@\n+  { \/\/ Overlapping reservations should also only result in 2 nodes.\n+    VMATree::Metadata md{si1, mtTest};\n+    Tree tree2;\n+    for (int i = 99; i >= 0; i--) {\n+      tree2.reserve_mapping(i * 100, 101, md);\n+    }\n+    int found_nodes = 0;\n+    tree2.visit(0, 999999, [&](Node* x) {\n+      found_nodes++;\n+    });\n+    EXPECT_EQ(2, found_nodes) << \"Adjacent reservations should result in exactly 2 nodes\";\n+  }\n+\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}