{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/z\/zInitialize.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-    const VMATree::SingleDiff& rescom = diff.flag[i];\n@@ -52,1 +51,1 @@\n-    summary->reserve_memory(rescom.reserve);\n+    summary->reserve_memory(diff.flag[i].reserve);\n@@ -59,1 +58,0 @@\n-    const VMATree::SingleDiff& rescom = diff.flag[i];\n@@ -61,1 +59,1 @@\n-    summary->reserve_memory(rescom.reserve);\n+    summary->reserve_memory(diff.flag[i].reserve);\n","filename":"src\/hotspot\/share\/nmt\/nmtMemoryFileTracker.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -250,0 +250,9 @@\n+\n+  { \/\/ Attempting to reserve or commit an empty region should not change the tree.\n+    Tree tree;\n+    Tree::Metadata md{si1, mtNMT};\n+    tree.reserve_mapping(0, 0, md);\n+    EXPECT_EQ(nullptr, treap_of(tree));\n+    tree.commit_mapping(0, 0, md);\n+    EXPECT_EQ(nullptr, treap_of(tree));\n+  }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}