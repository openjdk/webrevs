{"files":[{"patch":"@@ -350,0 +350,1 @@\n+  const size_t page_size = 4096;\n@@ -376,1 +377,1 @@\n-    assert(size % 4096 == 0 && start % 4096 == 0, \"page alignment\");\n+    assert(size % page_size == 0 && start % page_size == 0, \"page alignment\");\n@@ -378,2 +379,2 @@\n-    const size_t page_count = size \/ 4096;\n-    const size_t start_idx = start \/ 4096;\n+    const size_t page_count = size \/ page_size;\n+    const size_t start_idx = start \/ page_size;\n@@ -389,1 +390,1 @@\n-        diff.flag[(int)old_info.flag].reserve -= 4096;\n+        diff.flag[(int)old_info.flag].reserve -= page_size;\n@@ -391,2 +392,2 @@\n-        diff.flag[(int)old_info.flag].reserve -= 4096;\n-        diff.flag[(int)old_info.flag].commit -= 4096;\n+        diff.flag[(int)old_info.flag].reserve -= page_size;\n+        diff.flag[(int)old_info.flag].commit -= page_size;\n@@ -396,1 +397,1 @@\n-        diff.flag[(int)new_info.flag].reserve += 4096;\n+        diff.flag[(int)new_info.flag].reserve += page_size;\n@@ -398,2 +399,2 @@\n-        diff.flag[(int)new_info.flag].reserve += 4096;\n-        diff.flag[(int)new_info.flag].commit += 4096;\n+        diff.flag[(int)new_info.flag].reserve += page_size;\n+        diff.flag[(int)new_info.flag].commit += page_size;\n@@ -423,1 +424,0 @@\n-\n@@ -425,0 +425,1 @@\n+  const size_t page_size = tr->page_size;\n@@ -443,2 +444,2 @@\n-    const size_t start = page_start * 4096;\n-    const size_t size = num_pages * 4096;\n+    const size_t start = page_start * page_size;\n+    const size_t size = num_pages * page_size;\n@@ -473,3 +474,3 @@\n-    \/\/ Every ten thousand operations do an in-depth check of the consistency of the data\n-    \/\/ between the two trackers.\n-    if (i % 10000 == 0) {\n+\n+    \/\/ Do an in-depth check every 25 000 iterations.\n+    if (i % 25000 == 0) {\n@@ -500,1 +501,1 @@\n-        VMATree::TreapNode* startn = find(treap, start * 4096);\n+        VMATree::TreapNode* startn = find(treap, start * page_size);\n@@ -502,1 +503,1 @@\n-        VMATree::TreapNode* endn = find(treap, (end * 4096) + 4096);\n+        VMATree::TreapNode* endn = find(treap, (end * page_size) + page_size);\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"}]}