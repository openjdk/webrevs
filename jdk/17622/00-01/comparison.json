{"files":[{"patch":"@@ -28,1 +28,0 @@\n-#include \"runtime\/os.hpp\"\n@@ -128,8 +127,0 @@\n-StringUtils::CommaSeparatedStringIterator::CommaSeparatedStringIterator(ccstrlist option) {\n-  \/\/ Immediately make a private copy of option, and\n-  \/\/ replace spaces and newlines with comma.\n-  _list = (char*) canonicalize(option);\n-  _saved_ptr = _list;\n-  _token = strtok_r(_saved_ptr, \",\", &_saved_ptr);\n-}\n-\n@@ -140,5 +131,0 @@\n-StringUtils::CommaSeparatedStringIterator& StringUtils::CommaSeparatedStringIterator::operator++() {\n-  _token = strtok_r(nullptr, \",\", &_saved_ptr);\n-  return *this;\n-}\n-\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,0 +30,5 @@\n+#ifdef _WINDOWS\n+  \/\/ strtok_s is the Windows thread-safe equivalent of POSIX strtok_r\n+# define strtok_r strtok_s\n+#endif\n+\n@@ -60,1 +65,7 @@\n-    CommaSeparatedStringIterator(ccstrlist option);\n+    CommaSeparatedStringIterator(ccstrlist option) {\n+      \/\/ Immediately make a private copy of option, and\n+      \/\/ replace spaces and newlines with comma.\n+      _list = (char*) canonicalize(option);\n+      _saved_ptr = _list;\n+      _token = strtok_r(_saved_ptr, \",\", &_saved_ptr);\n+    }\n@@ -66,1 +77,4 @@\n-    CommaSeparatedStringIterator& operator++();\n+    CommaSeparatedStringIterator& operator++() {\n+      _token = strtok_r(nullptr, \",\", &_saved_ptr);\n+      return *this;\n+    }\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.hpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"}]}