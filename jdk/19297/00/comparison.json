{"files":[{"patch":"@@ -166,1 +166,1 @@\n-        a.stderrShouldMatch(\"\\\\A\\\\Z\");\n+        a.stderrShouldMatchIgnoreDeprecatedWarnings(\"\\\\A\\\\Z\");\n","filename":"test\/jdk\/java\/util\/zip\/EntryCount64k.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -668,1 +668,1 @@\n-     * after filtering out the Hotespot warning messages\n+     * after filtering out the Hotspot warning messages\n@@ -684,0 +684,18 @@\n+    \/**\n+     * Verify that the stderr contents of output buffer matches the pattern,\n+     * after filtering out the Hotspot deprecation warning messages\n+     *\n+     * @param pattern\n+     * @throws RuntimeException If the pattern was not found\n+     *\/\n+    public OutputAnalyzer stderrShouldMatchIgnoreDeprecatedWarnings(String pattern) {\n+        String stderr = getStderr().replaceAll(deprecatedmsg + \"\\\\R\", \"\");\n+        Matcher matcher = Pattern.compile(pattern, Pattern.MULTILINE).matcher(stderr);\n+        if (!matcher.find()) {\n+            reportDiagnosticSummary();\n+            throw new RuntimeException(\"'\" + pattern\n+                  + \"' missing from stderr\");\n+        }\n+        return this;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/process\/OutputAnalyzer.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}