{"files":[{"patch":"@@ -101,1 +101,1 @@\n-  \/\/ This is a necessary (not but sufficient) condition for keeping a direct pointer\n+  \/\/ This is a necessary (but not sufficient) condition for keeping a direct pointer\n@@ -106,1 +106,1 @@\n-  \/\/ Request that ik to be added to the candidates table. This will return succeed only if\n+  \/\/ Request that ik be added to the candidates table. This will return true only if\n","filename":"src\/hotspot\/share\/cds\/aotClassLinker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"cds\/cdsProtectionDomain.hpp\"\n@@ -33,1 +32,0 @@\n-#include \"cds\/lambdaFormInvokers.inline.hpp\"\n@@ -35,2 +33,0 @@\n-#include \"classfile\/classLoaderDataGraph.hpp\"\n-#include \"classfile\/classLoaderExt.hpp\"\n@@ -42,1 +38,0 @@\n-#include \"compiler\/compilationPolicy.hpp\"\n@@ -45,1 +40,0 @@\n-#include \"oops\/constantPool.inline.hpp\"\n@@ -49,4 +43,1 @@\n-#include \"runtime\/javaCalls.hpp\"\n-#include \"runtime\/perfData.inline.hpp\"\n-#include \"runtime\/timer.hpp\"\n-#include \"services\/management.hpp\"\n+#include \"runtime\/java.hpp\"\n@@ -75,6 +66,0 @@\n-  if (!CDSConfig::is_using_aot_linked_classes()) {\n-    return;\n-  }\n-\n-  HandleMark hm(current);\n-  ResourceMark rm(current);\n@@ -82,0 +67,2 @@\n+  ResourceMark rm(current);\n+  HandleMark hm(current);\n@@ -83,1 +70,14 @@\n-  Handle h_loader(current, class_loader_oop);\n+  load_classes_in_loader_impl(loader_kind, class_loader_oop, current);\n+  if (current->has_pending_exception()) {\n+    \/\/ We cannot continue, as we might have loaded some of the aot-linked classes, which\n+    \/\/ may have dangling C++ pointers to other aot-linked classes that we have failed to load.\n+    if (current->pending_exception()->is_a(vmClasses::OutOfMemoryError_klass())) {\n+      log_error(cds)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+                     SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+    } else {\n+      log_error(cds)(\"%s: %s\", current->pending_exception()->klass()->external_name(),\n+                     java_lang_String::as_utf8_string(java_lang_Throwable::message(current->pending_exception())));\n+    }\n+    vm_exit_during_initialization(\"Unexpected exception when loading aot-linked classes.\");\n+  }\n+}\n@@ -85,2 +85,4 @@\n-  load_table(AOTLinkedClassTable::for_static_archive(),  loader_kind, h_loader, current);\n-  assert(!current->has_pending_exception(), \"VM should have exited due to ExceptionMark\");\n+void AOTLinkedClassBulkLoader::load_classes_in_loader_impl(LoaderKind loader_kind, oop class_loader_oop, TRAPS) {\n+  if (!CDSConfig::is_using_aot_linked_classes()) {\n+    return;\n+  }\n@@ -88,2 +90,3 @@\n-  load_table(AOTLinkedClassTable::for_dynamic_archive(), loader_kind, h_loader, current);\n-  assert(!current->has_pending_exception(), \"VM should have exited due to ExceptionMark\");\n+  Handle h_loader(THREAD, class_loader_oop);\n+  load_table(AOTLinkedClassTable::for_static_archive(),  loader_kind, h_loader, CHECK);\n+  load_table(AOTLinkedClassTable::for_dynamic_archive(), loader_kind, h_loader, CHECK);\n@@ -143,1 +146,1 @@\n-      ResourceMark rm;\n+      ResourceMark rm(THREAD);\n@@ -162,1 +165,1 @@\n-          ResourceMark rm;\n+          ResourceMark rm(THREAD);\n@@ -196,1 +199,1 @@\n-        ResourceMark rm;\n+        ResourceMark rm(current);\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":27,"deletions":24,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+  static void load_classes_in_loader_impl(LoaderKind loader_kind, oop class_loader_oop, TRAPS);\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -910,3 +910,3 @@\n-                                                              STATS_PARAMS(unlinked_klasses),\n-                                                              boot_unlinked, platform_unlinked,\n-                                                              app_unlinked, unreg_unlinked);\n+                                          STATS_PARAMS(unlinked_klasses),\n+                                          boot_unlinked, platform_unlinked,\n+                                          app_unlinked, unreg_unlinked);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2047,1 +2047,1 @@\n-      \/\/ It's too later to recover -- we have already committed to use the archived metaspace objects, but\n+      \/\/ It's too late to recover -- we have already committed to use the archived metaspace objects, but\n@@ -2455,0 +2455,5 @@\n+    if (has_aot_linked_classes()) {\n+      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when the \"\n+                     \"java.system.class.loader property is specified.\");\n+      return false;\n+    }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-    log_info(cds)(\"Base archive already have aot-linked lambda form holder classes. Cannot regenerate.\");\n+    log_info(cds)(\"Base archive already has aot-linked lambda form holder classes. Cannot regenerate.\");\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,5 @@\n+        testCase(\"Cannot use -Djava.system.class.loader\");\n+        TestCommon.run(\"-cp\", appJar, \"-Djava.system.class.loader=dummy\", \"Hello\")\n+            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+                                \" It cannot be used when the java.system.class.loader property is specified.\");\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTClassLinkingVMOptions.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}