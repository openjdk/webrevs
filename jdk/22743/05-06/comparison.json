{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -2362,1 +2362,0 @@\n-      unmap_non_reserved_region(MetaspaceShared::hp);\n@@ -2413,1 +2412,1 @@\n-void FileMapInfo::unmap_regions(int regions[], int num_regions, ReservedSpace rs) {\n+void FileMapInfo::unmap_regions(int regions[], int num_regions, ReservedSpace containing_rs) {\n@@ -2416,16 +2415,1 @@\n-\n-    \/\/ If the region is inside an active ReservedSpace, its memory and address space will be\n-    \/\/ freed when the ReservedSpace is released. Skip unmap here to avoid a double release\n-    if (rs.is_reserved()) {\n-      FileMapRegion* r = region_at(idx);\n-      char* mapped_base = r->mapped_base();\n-      size_t size = r->used_aligned();\n-\n-      if (r->mapped_from_file()) {\n-        assert(rs.base() <= mapped_base && mapped_base + size <= rs.end(),\n-              PTR_FORMAT \" <= \" PTR_FORMAT \" < \" PTR_FORMAT \" <= \" PTR_FORMAT,\n-              p2i(rs.base()), p2i(mapped_base), p2i(mapped_base + size), p2i(rs.end()));\n-      }\n-    } else {\n-      unmap_non_reserved_region(idx);\n-    }\n+    unmap_region(idx, containing_rs);\n@@ -2437,1 +2421,1 @@\n-void FileMapInfo::unmap_region(int i) {\n+void FileMapInfo::unmap_region(int i, ReservedSpace containing_rs) {\n@@ -2444,1 +2428,7 @@\n-      log_info(cds)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n+      if (containing_rs.is_reserved()) {\n+        \/\/ Don't unmap here; this regions will be released when the containing_rs is released.\n+        assert(containing_rs.base() <= mapped_base && mapped_base + size <= containing_rs.end(),\n+               PTR_FORMAT \" <= \" PTR_FORMAT \" < \" PTR_FORMAT \" <= \" PTR_FORMAT,\n+               p2i(containing_rs.base()), p2i(mapped_base), p2i(mapped_base + size), p2i(containing_rs.end()));\n+      } else {\n+        log_info(cds)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n@@ -2446,2 +2436,3 @@\n-      if (!os::unmap_memory(mapped_base, size)) {\n-        fatal(\"os::unmap_memory failed\");\n+        if (!os::unmap_memory(mapped_base, size)) {\n+          fatal(\"os::unmap_memory failed\");\n+        }\n@@ -2454,6 +2445,0 @@\n-\/\/ The mapped region is not within a reserved space so it can be\n-\/\/ released directly\n-void FileMapInfo::unmap_non_reserved_region(int i) {\n-  unmap_region(i);\n-}\n-\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":14,"deletions":29,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -370,1 +370,0 @@\n-  void  unmap_region(int i);\n@@ -474,1 +473,2 @@\n-  void  unmap_regions(int regions[], int num_regions, ReservedSpace rs);\n+  void  unmap_region(int i, ReservedSpace containing_rs);\n+  void  unmap_regions(int regions[], int num_regions, ReservedSpace containing_rs);\n@@ -482,1 +482,0 @@\n-  void unmap_non_reserved_region(int i);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1636,1 +1636,1 @@\n-    mapinfo->unmap_non_reserved_region(MetaspaceShared::bm);\n+    mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n@@ -1676,1 +1676,1 @@\n-  static_mapinfo->unmap_non_reserved_region(MetaspaceShared::bm);\n+  static_mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n@@ -1685,1 +1685,1 @@\n-    dynamic_mapinfo->unmap_non_reserved_region(MetaspaceShared::bm);\n+    dynamic_mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}