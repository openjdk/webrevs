{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1892,1 +1892,1 @@\n-  assert(r->mapped_base() == nullptr, \"must be not mapped yet\");\n+  assert(!is_mapped(), \"must be not mapped yet\");\n@@ -1943,0 +1943,9 @@\n+    \/\/ Only for Posix: verify that the region is inside the reserved space\n+    if (rs.is_reserved()) {\n+      char* mapped_base = r->mapped_base();\n+      assert(rs.base() <= mapped_base && mapped_base + size <= rs.end(),\n+             PTR_FORMAT \" <= \" PTR_FORMAT \" < \" PTR_FORMAT \" <= \" PTR_FORMAT,\n+             p2i(rs.base()), p2i(mapped_base), p2i(mapped_base + size), p2i(rs.end()));\n+    }\n+    r->set_in_reserved_space(rs.is_reserved());\n+\n@@ -2362,1 +2371,0 @@\n-      unmap_region(MetaspaceShared::hp);\n@@ -2431,2 +2439,9 @@\n-      if (!os::unmap_memory(mapped_base, size)) {\n-        fatal(\"os::unmap_memory failed\");\n+      if (r->in_reserved_space()) {\n+        \/\/ This region was mapped inside a ReservedSpace. Its memory will be freed when the ReservedSpace\n+        \/\/ is released. Zero it so that we don't accidentally read its content.\n+        log_info(cds)(\"Region #%d (%s) is in a reserved space, it will be freed when the space is released\", i, shared_region_name[i]);\n+        r->set_mapped_base(nullptr);\n+      } else {\n+        if (!os::unmap_memory(mapped_base, size)) {\n+          fatal(\"os::unmap_memory failed\");\n+        }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,0 +166,1 @@\n+  bool   in_reserved_space()        const { return _in_reserved_space; }\n@@ -171,0 +172,1 @@\n+  void set_in_reserved_space(bool is_reserved) { _in_reserved_space = is_reserved; }\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1356,0 +1356,2 @@\n+    \/\/ The RW and RO regions are in a reserved space so they must only be\n+    \/\/ unmapped when the reserved space is released\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+  bool    _in_reserved_space; \/\/ Is this region in a ReservedSpace\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}