{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1892,1 +1892,1 @@\n-  assert(r->mapped_base() == nullptr, \"must be not mapped yet\");\n+  assert(!is_mapped(), \"must be not mapped yet\");\n@@ -2362,1 +2362,0 @@\n-      unmap_region(MetaspaceShared::hp);\n@@ -2413,1 +2412,1 @@\n-void FileMapInfo::unmap_regions(int regions[], int num_regions) {\n+void FileMapInfo::unmap_regions(int regions[], int num_regions, ReservedSpace containing_rs) {\n@@ -2416,1 +2415,1 @@\n-    unmap_region(idx);\n+    unmap_region(idx, containing_rs);\n@@ -2422,1 +2421,1 @@\n-void FileMapInfo::unmap_region(int i) {\n+void FileMapInfo::unmap_region(int i, ReservedSpace containing_rs) {\n@@ -2429,1 +2428,7 @@\n-      log_info(cds)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n+      if (containing_rs.is_reserved()) {\n+        \/\/ Don't unmap here; this regions will be released when the containing_rs is released.\n+        assert(containing_rs.base() <= mapped_base && mapped_base + size <= containing_rs.end(),\n+               PTR_FORMAT \" <= \" PTR_FORMAT \" < \" PTR_FORMAT \" <= \" PTR_FORMAT,\n+               p2i(containing_rs.base()), p2i(mapped_base), p2i(mapped_base + size), p2i(containing_rs.end()));\n+      } else {\n+        log_info(cds)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n@@ -2431,2 +2436,3 @@\n-      if (!os::unmap_memory(mapped_base, size)) {\n-        fatal(\"os::unmap_memory failed\");\n+        if (!os::unmap_memory(mapped_base, size)) {\n+          fatal(\"os::unmap_memory failed\");\n+        }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -473,1 +473,2 @@\n-  void  unmap_regions(int regions[], int num_regions);\n+  void  unmap_region(int i, ReservedSpace containing_rs);\n+  void  unmap_regions(int regions[], int num_regions, ReservedSpace containing_rs);\n@@ -481,1 +482,0 @@\n-  void  unmap_region(int i);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1351,2 +1351,4 @@\n-    unmap_archive(static_mapinfo);\n-    unmap_archive(dynamic_mapinfo);\n+    \/\/ The RW and RO regions are in a reserved space so they must only be\n+    \/\/ unmapped when the reserved space is released\n+    unmap_archive(static_mapinfo, archive_space_rs);\n+    unmap_archive(dynamic_mapinfo, archive_space_rs);\n@@ -1604,1 +1606,1 @@\n-    unmap_archive(mapinfo);\n+    unmap_archive(mapinfo, rs);\n@@ -1609,1 +1611,1 @@\n-    unmap_archive(mapinfo);\n+    unmap_archive(mapinfo, rs);\n@@ -1622,1 +1624,1 @@\n-    unmap_archive(mapinfo);\n+    unmap_archive(mapinfo, rs);\n@@ -1630,1 +1632,1 @@\n-void MetaspaceShared::unmap_archive(FileMapInfo* mapinfo) {\n+void MetaspaceShared::unmap_archive(FileMapInfo* mapinfo, ReservedSpace archive_space_rs) {\n@@ -1633,2 +1635,2 @@\n-    mapinfo->unmap_regions(archive_regions, archive_regions_count);\n-    mapinfo->unmap_region(MetaspaceShared::bm);\n+    mapinfo->unmap_regions(archive_regions, archive_regions_count, archive_space_rs);\n+    mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n@@ -1674,1 +1676,1 @@\n-  static_mapinfo->unmap_region(MetaspaceShared::bm);\n+  static_mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n@@ -1683,1 +1685,1 @@\n-    dynamic_mapinfo->unmap_region(MetaspaceShared::bm);\n+    dynamic_mapinfo->unmap_region(MetaspaceShared::bm, {} \/* containing_rs *\/);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-  static void unmap_archive(FileMapInfo* mapinfo);\n+  static void unmap_archive(FileMapInfo* mapinfo, ReservedSpace archive_space_rs);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}