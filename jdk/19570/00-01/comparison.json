{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -60,2 +61,1 @@\n-  while (Atomic::load(&_state) == locked ||\n-      Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n+  do {\n@@ -66,5 +66,0 @@\n-    } else if (ALLOW_BLOCK) {\n-      \/\/We know SP is synchronizing and block is allosed,\n-      \/\/yield to safepoint call to so VM will reach safepoint faster.\n-      ThreadBlockInVM block(JavaThread::cast(thread), true);\n-      os::naked_yield();\n@@ -72,1 +67,9 @@\n-      os::naked_yield();\n+      if (ALLOW_BLOCK && SafepointSynchronize::is_synchronizing())) {\n+        \/\/ We know SP is synchronizing and block is allowed, block the thread in VM for faster SP synchronization.\n+        \/\/ Need to wait on STS_lock ( suspendible thread set)\n+        ThreadBlockInVM block(JavaThread::cast(thread), true);\n+        MonitorLocker ml(STS_lock, Mutex::_safepoint_check_flag);\n+        ml.wait();\n+      } else {\n+        os::naked_yield();\n+      }\n@@ -74,1 +77,1 @@\n-  }\n+  } while (!try_lock(ALLOW_BLOCK));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.cpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  volatile Thread* _owner;\n+  Thread* volatile _owner;\n@@ -45,0 +45,7 @@\n+\n+  inline bool try_lock(bool allow_lock) {\n+    if (Atomic::load(&_state) == locked) return false;\n+    if (SafepointSynchronize::is_synchronizing() && allow_lock) return false;\n+    return Atomic::cmpxchg(&_state, unlocked, locked) == unlocked; \n+  }\n+\n@@ -51,3 +58,7 @@\n-    \/\/ Try to lock fast, or dive into contended lock handling.\n-    if (Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n-      contended_lock(allow_block_for_safepoint);\n+    if(allow_block_for_safepoint && SafepointSynchronize::is_synchronizing()) {\n+        contended_lock(allow_block_for_safepoint);\n+    } else {\n+      \/\/ Try to lock fast, or dive into contended lock handling.\n+      if (Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n+        contended_lock(allow_block_for_safepoint);\n+      }\n@@ -58,1 +69,1 @@\n-    DEBUG_ONLY(Atomic::store(&_owner, Thread::current());)\n+    Atomic::store(&_owner, Thread::current());\n@@ -63,1 +74,1 @@\n-    DEBUG_ONLY(Atomic::store(&_owner, (Thread*)nullptr);)\n+    Atomic::store(&_owner, (Thread*)nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.hpp","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"}]}