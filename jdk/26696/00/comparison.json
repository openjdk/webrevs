{"files":[{"patch":"@@ -374,0 +374,1 @@\n+    CompileTask* next = current->next();\n@@ -382,1 +383,1 @@\n-    current = current->next();\n+    current = next;\n@@ -507,0 +508,2 @@\n+  task->set_next(nullptr);\n+  task->set_prev(nullptr);\n@@ -1731,6 +1734,9 @@\n-  if (!task->is_complete() && is_compilation_disabled_forever()) {\n-    \/\/ Task is not complete, and we are exiting for compilation shutdown.\n-    \/\/ The task can still be executed by some compiler thread, therefore\n-    \/\/ we cannot delete it. This will leave task allocated, which leaks it.\n-    \/\/ At this (degraded) point, it is less risky to abandon the task,\n-    \/\/ rather than attempting a more complicated deletion protocol.\n+  if (!task->is_complete()) {\n+    \/\/ Task is not complete, likely because we are exiting for compilation\n+    \/\/ shutdown. The task can still be reached through the queue, or executed\n+    \/\/ by some compiler thread. There is no coordination with either MCQ lock\n+    \/\/ holders or compilers, therefore we cannot delete the task.\n+    \/\/\n+    \/\/ This will leave task allocated, which leaks it. At this (degraded) point,\n+    \/\/ it is less risky to abandon the task, rather than attempting a more\n+    \/\/ complicated deletion protocol.\n@@ -1742,0 +1748,2 @@\n+    assert(task->next() == nullptr && task->prev() == nullptr,\n+           \"Completed task should not be in the queue\");\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -77,0 +77,1 @@\n+  _prev = nullptr;\n@@ -93,0 +94,6 @@\n+#ifdef ASSERT\n+  \/\/ Zap the deleted task memory to catch lifecycle errors.\n+  \/\/ Do this before notifying any waiters: nothing can wait on this task.\n+  memset(this, freeBlockPad, sizeof(CompileTask));\n+#endif\n+\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,1 +104,2 @@\n-  CompileTask*         _next, *_prev;\n+  CompileTask*         _next;\n+  CompileTask*         _prev;\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}