{"files":[{"patch":"@@ -169,1 +169,1 @@\n-  JfrMsg_lock->notify_all();\n+  JfrMsg_lock->notify();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrPostBox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -653,0 +653,4 @@\n+\n+    public synchronized void flush() {\n+        MetadataRepository.getInstance().flush();\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import jdk.jfr.internal.PlatformRecorder;\n+import jdk.jfr.internal.PrivateAccess;\n@@ -47,1 +49,2 @@\n-        MetadataRepository.getInstance().flush();\n+        PlatformRecorder recorder = PrivateAccess.getInstance().getPlatformRecorder();\n+        recorder.flush();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/periodic\/FlushTask.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}