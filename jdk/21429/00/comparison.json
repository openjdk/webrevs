{"files":[{"patch":"@@ -175,0 +175,1 @@\n+    public final Content searchTagsLabel;\n@@ -328,0 +329,1 @@\n+        searchTagsLabel = getContent(\"doclet.searchTags\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Contents.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-     * <li>Detailed summary info: constant values, serialized form, system properties\n+     * <li>Detailed summary info: constant values, search tags, serialized form, system properties\n@@ -349,0 +349,9 @@\n+        \/\/ Search Tags\n+        if (configuration.conditionalPages.contains(HtmlConfiguration.ConditionalPage.SEARCH_TAGS)) {\n+            section = newHelpSection(contents.searchTagsLabel, PageMode.SEARCH_TAGS);\n+            Content searchTagsBody = getContent(\"doclet.help.searchTags.body\",\n+                    links.createLink(DocPaths.SEARCH_TAGS, resources.getText(\"doclet.searchTags\")));\n+            section.add(HtmlTree.P(searchTagsBody));\n+            pageKindsSection.add(section);\n+        }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-        SERIALIZED_FORM, SYSTEM_PROPERTIES, NEW\n+        SEARCH_TAGS, SERIALIZED_FORM, SYSTEM_PROPERTIES, NEW\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,0 +286,1 @@\n+            writerFactory.newSearchTagsWriter().buildPage();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,286 @@\n+\/*\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.doclets.formats.html;\n+\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.TreeMap;\n+import java.util.WeakHashMap;\n+import java.util.stream.Collectors;\n+\n+import com.sun.source.doctree.DocTree;\n+\n+import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.doclets.toolkit.DocFileElement;\n+import jdk.javadoc.internal.doclets.toolkit.OverviewElement;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocFileIOException;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocPath;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocPaths;\n+import jdk.javadoc.internal.doclets.toolkit.util.IndexItem;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n+\n+import static java.util.stream.Collectors.groupingBy;\n+\n+\/**\n+ * Generates summary files for tags represented by {@code IndexItem}.\n+ * Supported items are search tags and system properties.\n+ *\/\n+public abstract class IndexItemListWriter extends HtmlDocletWriter {\n+\n+    \/**\n+     * Cached contents of {@code <title>...<\/title>} tags of the HTML pages.\n+     *\/\n+    final Map<DocFileElement, String> titles = new WeakHashMap<>();\n+\n+    \/**\n+     * Constructs a IndexItemListWriter object.\n+     *\n+     * @param configuration The current configuration\n+     * @param path the doc path of the file to write\n+     *\/\n+    protected IndexItemListWriter(HtmlConfiguration configuration, DocPath path) {\n+        super(configuration, path, false);\n+    }\n+\n+    @Override\n+    public void buildPage() throws DocFileIOException {\n+        boolean hasTags = configuration.indexBuilder != null\n+                && !configuration.indexBuilder.getItems(getKind()).isEmpty();\n+        if (!hasTags) {\n+            return;\n+        }\n+\n+        writeGenerating();\n+        configuration.conditionalPages.add(getConditionalPage());\n+\n+        String title = getPageLabel().toString();\n+        HtmlTree body = getBody(getWindowTitle(title));\n+        Content mainContent = new ContentBuilder();\n+        addIndexItems(mainContent);\n+        body.add(new BodyContents()\n+                .setHeader(getHeader(getPageMode()))\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n+                        HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, getPageLabel())))\n+                .addMainContent(mainContent)\n+                .setFooter(getFooter()));\n+        printHtmlDocument(null, title.toLowerCase(Locale.ROOT), body);\n+\n+        if (configuration.indexBuilder != null) {\n+            configuration.indexBuilder.add(IndexItem.of(IndexItem.Category.TAGS, title, path));\n+        }\n+    }\n+\n+    protected Map<String, List<IndexItem>> groupTags() {\n+        return configuration.indexBuilder.getItems(getKind()).stream()\n+                .collect(groupingBy(IndexItem::getLabel, TreeMap::new, Collectors.toCollection(ArrayList::new)));\n+    }\n+\n+    protected Content createLink(IndexItem i) {\n+        assert i.getDocTree().getKind() == getKind() : i;\n+        var element = i.getElement();\n+        if (element instanceof OverviewElement) {\n+            return links.createLink(pathToRoot.resolve(i.getUrl()),\n+                    resources.getText(\"doclet.Overview\"));\n+        } else if (element instanceof DocFileElement e) {\n+            var fo = e.getFileObject();\n+            var t = titles.computeIfAbsent(e, this::getFileTitle);\n+            if (t.isBlank()) {\n+                \/\/ The user should probably be notified (a warning?) that this\n+                \/\/ file does not have a title\n+                var p = Path.of(fo.toUri());\n+                t = p.getFileName().toString();\n+            }\n+            var b = new ContentBuilder()\n+                    .add(HtmlTree.CODE(Text.of(i.getHolder() + \": \")))\n+                    .add(t);\n+            return links.createLink(pathToRoot.resolve(i.getUrl()), b);\n+        } else {\n+            \/\/ program elements should be displayed using a code font\n+            var link = links.createLink(pathToRoot.resolve(i.getUrl()), i.getHolder());\n+            return HtmlTree.CODE(link);\n+        }\n+    }\n+\n+    \/**\n+     * Adds a table with the included index items to the content.\n+     *\n+     * @param target the content to which the table will be added\n+     *\/\n+    protected abstract void addIndexItems(Content target);\n+\n+    \/**\n+     * {@return the kind of index item to list in this page}\n+     *\/\n+    protected abstract DocTree.Kind getKind();\n+\n+    \/**\n+     * {@return the conditional page value}\n+     *\/\n+    protected abstract HtmlConfiguration.ConditionalPage getConditionalPage();\n+\n+    \/**\n+     * {@return the label for the page heading}\n+     *\/\n+    protected abstract Content getPageLabel();\n+\n+    \/**\n+     * {@return the Navigation.PageMode value}\n+     *\/\n+    protected abstract Navigation.PageMode getPageMode();\n+\n+    \/\/ Note: The reason we can't use anonymous classes below is that HtmlDocletWriter.getBodyStyle()\n+    \/\/ uses the writer's class name to deduce the CSS body style name.\n+\n+    public static IndexItemListWriter createSystemPropertiesWriter(HtmlConfiguration configuration) {\n+        return new SystemPropertiesWriter(configuration);\n+    }\n+\n+    public static IndexItemListWriter createSearchTagsWriter(HtmlConfiguration configuration) {\n+        return new SearchTagsWriter(configuration);\n+    }\n+\n+    static class SystemPropertiesWriter extends IndexItemListWriter {\n+        SystemPropertiesWriter(HtmlConfiguration configuration) {\n+            super(configuration, DocPaths.SYSTEM_PROPERTIES);\n+        }\n+\n+        @Override\n+        protected DocTree.Kind getKind() {\n+            return DocTree.Kind.SYSTEM_PROPERTY;\n+        }\n+\n+        @Override\n+        protected HtmlConfiguration.ConditionalPage getConditionalPage() {\n+            return HtmlConfiguration.ConditionalPage.SYSTEM_PROPERTIES;\n+        }\n+\n+        @Override\n+        protected Content getPageLabel() {\n+            return contents.systemPropertiesLabel;\n+        }\n+\n+        @Override\n+        protected Navigation.PageMode getPageMode() {\n+            return PageMode.SYSTEM_PROPERTIES;\n+        }\n+\n+        \/**\n+         * Creates a 2-column table containing system properties.\n+         *\n+         * @param target the content to which the links will be added\n+         *\/\n+        @Override\n+        protected void addIndexItems(Content target) {\n+            Map<String, List<IndexItem>> searchIndexMap = groupTags();\n+            Content separator = Text.of(\", \");\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n+                    .setCaption(contents.systemPropertiesSummaryLabel)\n+                    .setHeader(new TableHeader(contents.propertyLabel, contents.referencedIn))\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n+            searchIndexMap.forEach((key, searchIndexItems) -> {\n+                Content propertyName = Text.of(key);\n+                Content referenceLinks = new ContentBuilder();\n+                for (IndexItem searchIndexItem : searchIndexItems) {\n+                    if (!referenceLinks.isEmpty()) {\n+                        referenceLinks.add(separator);\n+                    }\n+                    referenceLinks.add(createLink(searchIndexItem));\n+                }\n+                table.addRow(propertyName, HtmlTree.DIV(HtmlStyles.block, referenceLinks));\n+            });\n+            target.add(table);\n+        }\n+    }\n+\n+    static class SearchTagsWriter extends IndexItemListWriter {\n+        SearchTagsWriter(HtmlConfiguration configuration) {\n+            super(configuration, DocPaths.SEARCH_TAGS);\n+        }\n+\n+        @Override\n+        protected DocTree.Kind getKind() {\n+            return DocTree.Kind.INDEX;\n+        }\n+\n+        @Override\n+        protected HtmlConfiguration.ConditionalPage getConditionalPage() {\n+            return HtmlConfiguration.ConditionalPage.SEARCH_TAGS;\n+        }\n+\n+        @Override\n+        protected Content getPageLabel() {\n+            return contents.searchTagsLabel;\n+        }\n+\n+        @Override\n+        protected Navigation.PageMode getPageMode() {\n+            return PageMode.SEARCH_TAGS;\n+        }\n+\n+        \/**\n+         * Creates a 3-column table containing search tags.\n+         *\n+         * @param target the content to which the links will be added\n+         *\/\n+        @Override\n+        protected void addIndexItems(Content target) {\n+            Map<String, List<IndexItem>> searchIndexMap = groupTags();\n+            Content separator = Text.of(\", \");\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n+                    .setCaption(contents.getContent(\"doclet.searchTagsSummary\"))\n+                    .setHeader(new TableHeader(contents.getContent(\"doclet.searchTag\"),\n+                            contents.descriptionLabel,\n+                            contents.getContent(\"doclet.DefinedIn\")))\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n+            searchIndexMap.forEach((key, searchIndexItems) -> {\n+                Content propertyName = Text.of(key);\n+                Content referenceLinks = new ContentBuilder();\n+                String description = \"\";\n+                for (IndexItem searchIndexItem : searchIndexItems) {\n+                    if (!referenceLinks.isEmpty()) {\n+                        referenceLinks.add(separator);\n+                    }\n+                    referenceLinks.add(createLink(searchIndexItem));\n+                    if (description.isEmpty()) {\n+                        description = searchIndexItem.getDescription();\n+                        Objects.requireNonNull(description);\n+                    }\n+                }\n+                table.addRow(propertyName, Text.of(description), HtmlTree.DIV(HtmlStyles.block, referenceLinks));\n+            });\n+            target.add(table);\n+        }\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexItemListWriter.java","additions":286,"deletions":0,"binary":false,"changes":286,"status":"added"},{"patch":"@@ -90,1 +90,0 @@\n-        SERIALIZED_FORM,\n@@ -92,0 +91,2 @@\n+        SEARCH_TAGS,\n+        SERIALIZED_FORM,\n@@ -277,0 +278,1 @@\n+            case SEARCH_TAGS:\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,158 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclets.formats.html;\n-\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Map.Entry;\n-import java.util.TreeMap;\n-import java.util.WeakHashMap;\n-import java.util.stream.Collectors;\n-\n-import com.sun.source.doctree.DocTree;\n-\n-import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n-import jdk.javadoc.internal.doclets.toolkit.DocFileElement;\n-import jdk.javadoc.internal.doclets.toolkit.OverviewElement;\n-import jdk.javadoc.internal.doclets.toolkit.util.DocFileIOException;\n-import jdk.javadoc.internal.doclets.toolkit.util.DocPaths;\n-import jdk.javadoc.internal.doclets.toolkit.util.IndexItem;\n-import jdk.javadoc.internal.html.Content;\n-import jdk.javadoc.internal.html.ContentBuilder;\n-import jdk.javadoc.internal.html.HtmlTree;\n-import jdk.javadoc.internal.html.Text;\n-\n-import static java.util.stream.Collectors.groupingBy;\n-\n-\/**\n- * Generates the file with the summary of all the system properties.\n- *\/\n-public class SystemPropertiesWriter extends HtmlDocletWriter {\n-\n-    \/**\n-     * Cached contents of {@code <title>...<\/title>} tags of the HTML pages.\n-     *\/\n-    final Map<DocFileElement, String> titles = new WeakHashMap<>();\n-\n-    \/**\n-     * Constructs SystemPropertiesWriter object.\n-     *\n-     * @param configuration The current configuration\n-     *\/\n-    public SystemPropertiesWriter(HtmlConfiguration configuration) {\n-        super(configuration, DocPaths.SYSTEM_PROPERTIES, false);\n-    }\n-\n-    @Override\n-    public void buildPage() throws DocFileIOException {\n-        boolean hasSystemProperties = configuration.indexBuilder != null\n-                && !configuration.indexBuilder.getItems(DocTree.Kind.SYSTEM_PROPERTY).isEmpty();\n-        if (!hasSystemProperties) {\n-            return;\n-        }\n-\n-        writeGenerating();\n-        configuration.conditionalPages.add(HtmlConfiguration.ConditionalPage.SYSTEM_PROPERTIES);\n-\n-        String title = resources.getText(\"doclet.systemProperties\");\n-        HtmlTree body = getBody(getWindowTitle(title));\n-        Content mainContent = new ContentBuilder();\n-        addSystemProperties(mainContent);\n-        body.add(new BodyContents()\n-                .setHeader(getHeader(PageMode.SYSTEM_PROPERTIES))\n-                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n-                        HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING,\n-                                contents.getContent(\"doclet.systemProperties\"))))\n-                .addMainContent(mainContent)\n-                .setFooter(getFooter()));\n-        printHtmlDocument(null, \"system properties\", body);\n-\n-        if (configuration.indexBuilder != null) {\n-            configuration.indexBuilder.add(IndexItem.of(IndexItem.Category.TAGS, title, path));\n-        }\n-    }\n-\n-    \/**\n-     * Adds all the system properties to the content.\n-     *\n-     * @param target the content to which the links will be added\n-     *\/\n-    protected void addSystemProperties(Content target) {\n-        Map<String, List<IndexItem>> searchIndexMap = groupSystemProperties();\n-        Content separator = Text.of(\", \");\n-        var table = new Table<Void>(HtmlStyles.summaryTable)\n-                .setCaption(contents.systemPropertiesSummaryLabel)\n-                .setHeader(new TableHeader(contents.propertyLabel, contents.referencedIn))\n-                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n-        for (Entry<String, List<IndexItem>> entry : searchIndexMap.entrySet()) {\n-            Content propertyName = Text.of(entry.getKey());\n-            List<IndexItem> searchIndexItems = entry.getValue();\n-            Content separatedReferenceLinks = new ContentBuilder();\n-            separatedReferenceLinks.add(createLink(searchIndexItems.get(0)));\n-            for (int i = 1; i < searchIndexItems.size(); i++) {\n-                separatedReferenceLinks.add(separator);\n-                separatedReferenceLinks.add(createLink(searchIndexItems.get(i)));\n-            }\n-            table.addRow(propertyName, HtmlTree.DIV(HtmlStyles.block, separatedReferenceLinks));\n-        }\n-        target.add(table);\n-    }\n-\n-    private Map<String, List<IndexItem>> groupSystemProperties() {\n-        return configuration.indexBuilder.getItems(DocTree.Kind.SYSTEM_PROPERTY).stream()\n-                .collect(groupingBy(IndexItem::getLabel, TreeMap::new, Collectors.toCollection(ArrayList::new)));\n-    }\n-\n-    private Content createLink(IndexItem i) {\n-        assert i.getDocTree().getKind() == DocTree.Kind.SYSTEM_PROPERTY : i;\n-        var element = i.getElement();\n-        if (element instanceof OverviewElement) {\n-            return links.createLink(pathToRoot.resolve(i.getUrl()),\n-                    resources.getText(\"doclet.Overview\"));\n-        } else if (element instanceof DocFileElement e) {\n-            var fo = e.getFileObject();\n-            var t = titles.computeIfAbsent(e, this::getFileTitle);\n-            if (t.isBlank()) {\n-                \/\/ The user should probably be notified (a warning?) that this\n-                \/\/ file does not have a title\n-                var p = Path.of(fo.toUri());\n-                t = p.getFileName().toString();\n-            }\n-            var b = new ContentBuilder()\n-                    .add(HtmlTree.CODE(Text.of(i.getHolder() + \": \")))\n-                    .add(t);\n-            return links.createLink(pathToRoot.resolve(i.getUrl()), b);\n-        } else {\n-            \/\/ program elements should be displayed using a code font\n-            var link = links.createLink(pathToRoot.resolve(i.getUrl()), i.getHolder());\n-            return HtmlTree.CODE(link);\n-        }\n-    }\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SystemPropertiesWriter.java","additions":0,"deletions":158,"binary":false,"changes":158,"status":"deleted"},{"patch":"@@ -40,1 +40,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.IndexBuilder;\n@@ -187,0 +186,7 @@\n+    \/**\n+     * {@return a new writer for the page listing search tags defined in the API}\n+     *\/\n+    public HtmlDocletWriter newSearchTagsWriter() {\n+        return IndexItemListWriter.createSearchTagsWriter(configuration);\n+    }\n+\n@@ -198,1 +204,1 @@\n-        return new SystemPropertiesWriter(configuration);\n+        return IndexItemListWriter.createSystemPropertiesWriter(configuration);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/WriterFactory.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -860,0 +860,5 @@\n+    \/**\n+     * The class of the {@code body} element for the search tags page.\n+     *\/\n+    searchTagsPage,\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyles.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -138,0 +138,3 @@\n+doclet.searchTag=Search Tag\n+doclet.searchTags=Search Tags\n+doclet.searchTagsSummary=Search Tags Summary\n@@ -174,0 +177,1 @@\n+doclet.DefinedIn=Defined In\n@@ -343,0 +347,3 @@\n+# 0: link to Search Tags page\n+doclet.help.searchTags.body=\\\n+    The {0} page lists search tags defined in the documentation.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -175,0 +175,3 @@\n+    \/** The name of the file for search tags index page. *\/\n+    public static final DocPath SEARCH_TAGS = DocPath.create(\"search-tags.html\");\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8213957 8213958\n+ * @bug 8213957 8213958 8340565\n@@ -124,0 +124,17 @@\n+\n+        checkOrder(\"search-tags.html\",\n+            \"\"\"\n+                <div class=\"col-first even-row-color\">test.name.1<\/div>\n+                <div class=\"col-second even-row-color\">additional info<\/div>\n+                <div class=\"col-last even-row-color\">\n+                <div class=\"block\"><code><a href=\"p\/q\/package-summary.html#test.name.1\">package p.q<\/a><\/code><\/div>\"\"\",\n+            \"\"\"\n+                <div class=\"col-first odd-row-color\">test.name.2<\/div>\n+                <div class=\"col-second odd-row-color\">additional info<\/div>\n+                <div class=\"col-last odd-row-color\">\n+                <div class=\"block\"><a href=\"p\/q\/doc-files\/extra.html#test.name.2\"><code>package p.q: <\/code>Extra<\/a><\/div>\"\"\",\n+            \"\"\"\n+                <div class=\"col-first even-row-color\">test.name.3<\/div>\n+                <div class=\"col-second even-row-color\">additional info<\/div>\n+                <div class=\"col-last even-row-color\">\n+                <div class=\"block\"><a href=\"index.html#test.name.3\">Overview<\/a><\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInPackageFiles\/TestIndexInPackageFiles.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8202462\n+ * @bug 8202462 8340565\n@@ -36,1 +36,0 @@\n-import java.nio.file.Paths;\n@@ -87,0 +86,15 @@\n+\n+        checkOrder(\"search-tags.html\",\n+                \"\"\"\n+                    <h1>Search Tags<\/h1>\"\"\",\n+                \"\"\"\n+                    <div class=\"caption\"><span>Search Tags Summary<\/span><\/div>\n+                    <div class=\"summary-table three-column-summary\">\n+                    <div class=\"table-header col-first\">Search Tag<\/div>\n+                    <div class=\"table-header col-second\">Description<\/div>\n+                    <div class=\"table-header col-last\">Defined In<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"col-first even-row-color\">search_phrase_a<\/div>\n+                    <div class=\"col-second even-row-color\">class a<\/div>\n+                    <div class=\"col-last even-row-color\">\n+                    <div class=\"block\"><code><a href=\"pkg\/A.html#search_phrase_a\">pkg.A.func(A)<\/a><\/code><\/div>\"\"\");\n@@ -133,0 +147,8 @@\n+\n+        checkOrder(\"search-tags.html\",\n+                \"\"\"\n+                    <div class=\"col-first even-row-color\">foo<\/div>\n+                    <div class=\"col-second even-row-color\">first<\/div>\n+                    <div class=\"col-last even-row-color\">\n+                    <div class=\"block\"><code><a href=\"pkg\/A.html#foo\">class pkg.A<\/a><\/code>, <code\\\n+                    ><a href=\"pkg\/A.html#foo-1\">pkg.A.m()<\/a><\/code><\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexTaglet\/TestIndexTaglet.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"}]}