{"files":[{"patch":"@@ -32,13 +32,9 @@\n-      [enable krb5 support (default=yes), or \"no\" to disable])])\n-\n-  # Determine if krb5 should be disabled\n-  KRB5_DISABLED=no\n-  if test \"x${with_krb5}\" = xno; then\n-    AC_MSG_NOTICE([krb5 explicitly disabled])\n-    KRB5_DISABLED=yes\n-  elif test \"x$NEEDS_LIB_KRB5\" = xfalse; then\n-    if test \"x${with_krb5}\" != x && test \"x${with_krb5}\" != xno; then\n-      AC_MSG_WARN([[krb5 not used, so --with-krb5 is ignored]])\n-    fi\n-    KRB5_DISABLED=yes\n-  fi\n+      [specify prefix directory for the krb5 package on Linux, or use \"yes\/no\/auto\" (default=auto)])])\n+  AC_ARG_WITH(krb5-include, [AS_HELP_STRING([--with-krb5-include],\n+      [specify directory for the krb5 include files on Linux])])\n+  AC_ARG_WITH(krb5-lib, [AS_HELP_STRING([--with-krb5-lib],\n+      [specify directory for the krb5 library on Linux])])\n+\n+  KRB5_CFLAGS=\n+  KRB5_LIBS=\n+  ENABLE_LIBKRB5_LINUX=false\n@@ -46,4 +42,2 @@\n-  if test \"x$KRB5_DISABLED\" = xyes; then\n-    KRB5_CFLAGS=\n-    KRB5_LIBS=\n-    ENABLE_LIBLINUXKRB5=false\n+  if test \"x$OPENJDK_TARGET_OS\" != \"xlinux\" && test \"x${with_krb5}\" = \"xyes\"; then\n+    AC_MSG_ERROR([krb5 support is only available on Linux])\n@@ -51,11 +45,10 @@\n-    # First try pkg-config (most modern approach)\n-    AC_PATH_TOOL([PKG_CONFIG], [pkg-config], [no])\n-    use_pkgconfig_for_krb5=no\n-\n-    if test \"x$PKG_CONFIG\" != \"xno\"; then\n-      AC_MSG_CHECKING([if pkg-config knows about krb5])\n-      if $PKG_CONFIG --exists krb5; then\n-        AC_MSG_RESULT([yes])\n-        use_pkgconfig_for_krb5=yes\n-      else\n-        AC_MSG_RESULT([no])\n+    KRB5_FOUND=no\n+\n+    if test \"x${with_krb5}\" != \"x\" && test \"x${with_krb5}\" != \"xyes\" && test \"x${with_krb5}\" != \"xauto\"; then\n+      # if a path was provided, use it\n+      if test \"x${with_krb5}\" != \"x\"; then\n+        AC_MSG_CHECKING([for krb5])\n+        KRB5_LIBS=\"-L${with_krb5}\/lib -lkrb5 -lcom_err\"\n+        KRB5_CFLAGS=\"-I${with_krb5}\/include\"\n+        KRB5_FOUND=yes\n+        AC_MSG_RESULT([${with_krb5}])\n@@ -65,5 +58,6 @@\n-    if test \"x$use_pkgconfig_for_krb5\" = \"xyes\"; then\n-      # Use pkg-config to get compiler and linker flags\n-      AC_MSG_CHECKING([for krb5 cflags via pkg-config])\n-      KRB5_CFLAGS=\"`$PKG_CONFIG --cflags krb5`\"\n-      AC_MSG_RESULT([$KRB5_CFLAGS])\n+    if test \"x${with_krb5_include}\" != \"x\"; then\n+      AC_MSG_CHECKING([for krb5 includes])\n+      KRB5_CFLAGS=\"-I${with_krb5_include}\"\n+      KRB5_FOUND=yes\n+      AC_MSG_RESULT([${with_krb5_include}])\n+    fi\n@@ -71,3 +65,6 @@\n-      AC_MSG_CHECKING([for krb5 libs via pkg-config])\n-      KRB5_LIBS=\"`$PKG_CONFIG --libs krb5`\"\n-      AC_MSG_RESULT([$KRB5_LIBS])\n+    if test \"x${with_krb5_lib}\" != \"x\"; then\n+      AC_MSG_CHECKING([for krb5 libs])\n+      KRB5_LIBS=\"-L${with_krb5_lib} -lkrb5 -lcom_err\"\n+      KRB5_FOUND=yes\n+      AC_MSG_RESULT([${with_krb5_lib}])\n+    fi\n@@ -75,4 +72,29 @@\n-      ENABLE_LIBLINUXKRB5=true\n-    else\n-      # Fallback: try krb5-config\n-      AC_PATH_TOOL([KRB5CONF], [krb5-config], [no])\n+    if test \"x$KRB5_FOUND\" = \"xno\"; then\n+      if test \"x$SYSROOT\" != \"x\"; then\n+        AC_MSG_CHECKING([for krb5 ($SYSROOT)])\n+        # Cross-compilation with SYSROOT - look at known locations in SYSROOT.\n+        KRB5_LIB_PATH=\"\"\n+        COM_ERR_LIB_PATH=\"\"\n+\n+        # Look for libkrb5\/libcom_err\n+        if test -f \"$SYSROOT\/usr\/lib64\/libkrb5.so\" && test \"x$OPENJDK_TARGET_CPU_BITS\" = x64; then\n+          KRB5_LIB_PATH=\"$SYSROOT\/usr\/lib64\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/libkrb5.so\"; then\n+          KRB5_LIB_PATH=\"$SYSROOT\/usr\/lib\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libkrb5.so\"; then\n+          KRB5_LIB_PATH=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libkrb5.so\"; then\n+          KRB5_LIB_PATH=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\"\n+        fi\n+\n+        if test -f \"$KRB5_LIB_PATH\/libcom_err.so\"; then\n+          COM_ERR_LIB_PATH=\"$KRB5_LIB_PATH\"\n+        elif test -f \"$SYSROOT\/usr\/lib64\/libcom_err.so\" && test \"x$OPENJDK_TARGET_CPU_BITS\" = x64; then\n+          COM_ERR_LIB_PATH=\"$SYSROOT\/usr\/lib64\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/libcom_err.so\"; then\n+          COM_ERR_LIB_PATH=\"$SYSROOT\/usr\/lib\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libcom_err.so\"; then\n+          COM_ERR_LIB_PATH=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\"\n+        elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libcom_err.so\"; then\n+          COM_ERR_LIB_PATH=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\"\n+        fi\n@@ -80,5 +102,3 @@\n-      if test \"x$KRB5CONF\" != \"xno\"; then\n-        # Use krb5-config to get compiler and linker flags\n-        AC_MSG_CHECKING([for krb5 cflags via krb5-config])\n-        KRB5_CFLAGS=\"`$KRB5CONF --cflags`\"\n-        AC_MSG_RESULT([$KRB5_CFLAGS])\n+        # Check for matching include files\n+        KRB5_INCLUDE_PATH=\"\"\n+        COM_ERR_INCLUDE_PATH=\"\"\n@@ -86,3 +106,3 @@\n-        AC_MSG_CHECKING([for krb5 libs via krb5-config])\n-        KRB5_LIBS=\"`$KRB5CONF --libs`\"\n-        AC_MSG_RESULT([$KRB5_LIBS])\n+        if test -f \"$SYSROOT\/usr\/include\/krb5\/krb5.h\"; then\n+          KRB5_INCLUDE_PATH=\"$SYSROOT\/usr\/include\"\n+        fi\n@@ -90,1 +110,21 @@\n-        ENABLE_LIBLINUXKRB5=true\n+        if test -f \"$SYSROOT\/usr\/include\/com_err.h\"; then\n+          COM_ERR_INCLUDE_PATH=\"$SYSROOT\/usr\/include\"\n+        fi\n+\n+        # Check everything was found and merge paths\n+        if test \"x$KRB5_LIB_PATH\" != \"x\" && test \"x$COM_ERR_LIB_PATH\" != \"x\" && \\\n+             test \"x$KRB5_INCLUDE_PATH\" != \"x\" && test \"x$COM_ERR_INCLUDE_PATH\" != \"x\"; then\n+          KRB5_LIBS=\"-L$KRB5_LIB_PATH -lkrb5\"\n+          if test \"x$COM_ERR_LIB_PATH\" != \"x\" && test \"x$COM_ERR_LIB_PATH\" != \"x$KRB5_LIB_PATH\"; then\n+            KRB5_LIBS=\"$KRB5_LIBS -L$COM_ERR_LIB_PATH\"\n+          fi\n+          KRB5_LIBS=\"$KRB5_LIBS -lcom_err\"\n+\n+          KRB5_CFLAGS=\"-I$KRB5_INCLUDE_PATH\"\n+          if test \"x$COM_ERR_INCLUDE_PATH\" != \"x\" && test \"x$COM_ERR_INCLUDE_PATH\" != \"x$KRB5_INCLUDE_PATH\"; then\n+            KRB5_CFLAGS=\"$KRB5_CFLAGS -I$COM_ERR_INCLUDE_PATH\"\n+          fi\n+\n+          KRB5_FOUND=yes\n+        fi\n+        AC_MSG_RESULT([$KRB5_FOUND])\n@@ -92,2 +132,18 @@\n-        # Final fallback: try manual detection in system locations\n-        AC_CHECK_HEADERS([krb5.h], [\n+        PKG_CHECK_MODULES(KRB5, krb5, [KRB5_FOUND=yes], [KRB5_FOUND=no])\n+        if test \"x$KRB5_FOUND\" = \"xno\"; then\n+          UTIL_LOOKUP_PROGS(KRB5CONF, krb5-config)\n+          if test \"x$KRB5CONF\" != \"x\"; then\n+            AC_MSG_CHECKING([for krb5 using krb5-config])\n+            KRB5_CFLAGS=\"`$KRB5CONF --cflags`\"\n+            KRB5_LIBS=\"`$KRB5CONF --libs`\"\n+            KRB5_FOUND=yes\n+            AC_MSG_RESULT([$KRB5_FOUND])\n+          fi\n+        fi\n+      fi\n+    fi\n+\n+    # No sysconfig\/pkg-config\/krb5-config, so auto-detect\n+    if test \"x$KRB5_FOUND\" = \"xno\"; then\n+      AC_CHECK_HEADERS([krb5.h], [\n+        AC_CHECK_HEADERS([com_err.h], [\n@@ -97,5 +153,2 @@\n-            # Check for com_err header and library which are often required\n-            AC_CHECK_HEADERS([com_err.h], [\n-              AC_CHECK_LIB([com_err], [com_err], [\n-                KRB5_LIBS=\"$KRB5_LIBS -lcom_err\"\n-              ])\n+            AC_CHECK_LIB([com_err], [com_err], [\n+              KRB5_LIBS=\"$KRB5_LIBS -lcom_err\"\n@@ -103,3 +156,9 @@\n-            ENABLE_LIBLINUXKRB5=true\n-          ], [ENABLE_LIBLINUXKRB5=false])\n-        ], [ENABLE_LIBLINUXKRB5=false])\n+            KRB5_FOUND=yes\n+          ])\n+        ])\n+      ])\n+    fi\n+\n+    if test \"x$KRB5_FOUND\" = \"xno\"; then\n+      if test \"x${with_krb5}\" = \"xyes\"; then\n+        AC_MSG_ERROR([krb5 was required but could not be found])\n@@ -107,0 +166,5 @@\n+      KRB5_CFLAGS=\n+      KRB5_LIBS=\n+      ENABLE_LIBKRB5_LINUX=false\n+    else\n+      ENABLE_LIBKRB5_LINUX=true\n@@ -112,2 +176,2 @@\n-  AC_SUBST(ENABLE_LIBLINUXKRB5)\n-])\n+  AC_SUBST(ENABLE_LIBKRB5_LINUX)\n+])\n\\ No newline at end of file\n","filename":"make\/autoconf\/lib-krb5.m4","additions":125,"deletions":61,"binary":false,"changes":186,"status":"modified"},{"patch":"@@ -85,7 +85,0 @@\n-  # Check if krb5 is needed\n-  if test \"x$OPENJDK_TARGET_OS\" = xlinux -o \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n-    NEEDS_LIB_KRB5=true\n-  else\n-    NEEDS_LIB_KRB5=false\n-  fi\n-\n","filename":"make\/autoconf\/libraries.m4","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-ENABLE_LIBLINUXKRB5 := @ENABLE_LIBLINUXKRB5@\n+ENABLE_LIBKRB5_LINUX := @ENABLE_LIBKRB5_LINUX@\n","filename":"make\/autoconf\/spec.gmk.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,8 +113,9 @@\n-# Kerberos native test library - only build if krb5 is available\n-ifeq ($(ENABLE_LIBLINUXKRB5), true)\n-  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libNativeCredentialCacheHelper := $(KRB5_LIBS)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libNativeCredentialCacheHelper := $(KRB5_CFLAGS)\n-\n-  ifeq ($(call isTargetOs, macosx), true)\n-    # On macOS, disable deprecation warnings for krb5 API\n-    BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libNativeCredentialCacheHelper += -Wno-deprecated-declarations\n+# Kerberos native test library configuration\n+ifeq ($(call isTargetOs, linux), true)\n+  # Linux: only build if krb5 is enabled and working\n+  ifeq ($(ENABLE_LIBKRB5_LINUX), true)\n+    BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libNativeCredentialCacheHelper := $(KRB5_LIBS)\n+    BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libNativeCredentialCacheHelper := $(KRB5_CFLAGS)\n+  else\n+    # Exclude the Kerberos test library if krb5 is not available on Linux\n+    BUILD_JDK_JTREG_EXCLUDE += libNativeCredentialCacheHelper.c\n@@ -122,0 +123,4 @@\n+else ifeq ($(call isTargetOs, macosx), true)\n+  # macOS: build with system krb5 and disable deprecation warnings\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libNativeCredentialCacheHelper := -lkrb5 -lcom_err\n+  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libNativeCredentialCacheHelper := -Wno-deprecated-declarations\n@@ -123,1 +128,1 @@\n-  # Exclude the Kerberos test library if krb5 is not available\n+  # Other platforms: exclude the library\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}