{"files":[{"patch":"@@ -1999,1 +1999,1 @@\n-void ShenandoahHeap::set_gc_state(uint mask, bool value) {\n+void ShenandoahHeap::set_gc_state_at_safepoint(uint mask, bool value) {\n@@ -2016,1 +2016,1 @@\n-  set_gc_state(mask, in_progress);\n+  set_gc_state_at_safepoint(mask, in_progress);\n@@ -2032,1 +2032,1 @@\n-    set_gc_state(OLD_MARKING, in_progress);\n+    set_gc_state_at_safepoint(OLD_MARKING, in_progress);\n@@ -2034,1 +2034,1 @@\n-    set_gc_state(MARKING | OLD_MARKING, in_progress);\n+    set_gc_state_at_safepoint(MARKING | OLD_MARKING, in_progress);\n@@ -2061,1 +2061,1 @@\n-  set_gc_state(EVACUATION, in_progress);\n+  set_gc_state_at_safepoint(EVACUATION, in_progress);\n@@ -2073,1 +2073,1 @@\n-  set_gc_state(WEAK_ROOTS, cond);\n+  set_gc_state_at_safepoint(WEAK_ROOTS, cond);\n@@ -2220,1 +2220,1 @@\n-  set_gc_state(HAS_FORWARDED, cond);\n+  set_gc_state_at_safepoint(HAS_FORWARDED, cond);\n@@ -2260,1 +2260,1 @@\n-  set_gc_state(UPDATEREFS, in_progress);\n+  set_gc_state_at_safepoint(UPDATEREFS, in_progress);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -367,3 +367,1 @@\n-  \/\/ However, in some cases (init update refs, e.g.), the gc state may change concurrently\n-  \/\/ and will be propagated to all threads by a handshake operation.\n-  void set_gc_state(uint mask, bool value);\n+  void set_gc_state_at_safepoint(uint mask, bool value);\n@@ -378,1 +376,3 @@\n-  \/\/ compare against the thread local state).\n+  \/\/ compare against the thread local state). The thread local gc state may also be changed\n+  \/\/ by a handshake operation, in which case, this function continues using the updated thread\n+  \/\/ local value.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}