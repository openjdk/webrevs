[{"commit":{"message":"Fix comments"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"9aaef708d0ca2fc288424ac5242974dd740f6141"},{"commit":{"message":"Fix comment, revert unnecessary change"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"3b8d7f860be636d80b183223e700f12b177c4115"},{"commit":{"message":"Merge remote-tracking branch 'jdk\/master' into remove-init-update-refs-safepoint"},"files":[],"sha":"2422c3e68931c875b1157aee70f18ba355fb6482"},{"commit":{"message":"Fix phase encoding to handle weak roots"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionCounters.cpp"}],"sha":"4c8e7058ab7faea09c83855565e6508d5bb9ab68"},{"commit":{"message":"WIP: Use Threads::threads_do for propagating gc state (consolidated)"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"efa97eab79009992fe627dd830933e9839a222c4"},{"commit":{"message":"WIP: Use Threads::threads_do for propagating gc state"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"6db0a6bc37ea9f6efaf8b316435d5a521ee841a1"},{"commit":{"message":"Remove unnecessary gc state propagations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"d457c45c52741d640da8e1adc4fad1cbb4baed6c"},{"commit":{"message":"Encapsulate gc state"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"24e487a85d116fa270327a734f89909fcd7dacb3"},{"commit":{"message":"Revert unnecessary changes"},"files":[],"sha":"76452f5b5619850eb1eaea60c1268101e8e59e4d"},{"commit":{"message":"Merge tag 'jdk-25+1' into two-steps-backward\n\nAdded tag jdk-25+1 for changeset bedb68ab"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"68ec00411c63fa9f090a60a0daf6f7013a8667ae"},{"commit":{"message":"Hide thread local usage behind existing APIs"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetClone.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVMOperations.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"218b1cc88e3500153a96b253fef7bfd0d225d370"},{"commit":{"message":"Allow weak roots in progress from thread local or global variable"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"77fedcd395beefc4921f70cf8feee140a77536b5"},{"commit":{"message":"Revert \"Allow access to pointers in trash regions during weak roots\"\n\nThis reverts commit a580cb9f24308a39bae47b2376d75bc911a37f64."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"bc49475e7f4a62875a2e00216a529194043df524"},{"commit":{"message":"Revert \"Do not verify after gc before gc is completed\"\n\nThis reverts commit 645bb3b723e4e06f579e797aef245d5faab1ff3a."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"dbd75719bb8a5070c84b7820d2dcdbc0d151c3a3"},{"commit":{"message":"Allow access to pointers in trash regions during weak roots"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"a580cb9f24308a39bae47b2376d75bc911a37f64"},{"commit":{"message":"Merge remote-tracking branch 'jdk\/master' into remove-init-update-refs"},"files":[],"sha":"6dbdf1c45e99ba28603f595955ef77e8940c389c"},{"commit":{"message":"Do not verify after gc before gc is completed"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"645bb3b723e4e06f579e797aef245d5faab1ff3a"},{"commit":{"message":"Okay, VMThread can have a thread local copy of gc state too"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"1af18b9466acee4bc33cd3fed142ece550898e59"},{"commit":{"message":"Use thread local gc state here"},"files":[],"sha":"21f278c9b8a570eb9aab3aca335b0459bd23e7f3"},{"commit":{"message":"Only safepoint for init-update-refs when verify or pacing is enabled"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"0ba2fb992c764f6c6c2e7694f0a2890c1f2d72c0"},{"commit":{"message":"Propagate gc state to worker threads for full GC"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"39de5c627d382f23c4dbb7d337bec44d41e81bde"},{"commit":{"message":"WIP: Figuring out which threads really need local gc-state and which don't"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetClone.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahThreadLocalData.hpp"}],"sha":"5bbdfe587abcce0c2b08d2f69472f9764cc9b295"},{"commit":{"message":"WIP: Control thread needs to know gc state too"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahThreadLocalData.hpp"}],"sha":"e7e1b8f30f3ce00a87aed280df82a24e93fe218f"},{"commit":{"message":"Fix builds"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"17c25eaf75c8171011fb4abf8698dec54ee2e5da"},{"commit":{"message":"Add comments to new method"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"5d3eac6f7b8d8d62732466fc54b18ebbf75c787a"},{"commit":{"message":"Anticipate future work with better names for things"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"704576368633fbeaf80b6f6cb1ff0c5255446cc0"},{"commit":{"message":"Fix safepoint worker handling"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"d098df7f0583dfb0c218f2e4aa49686e381bc3f5"},{"commit":{"message":"Restore gc labs to safepoint workers\n\nThese are used for heap dumps during concurrent evacuation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"d6ef2839a6225813d9074f86255fbf31e9357b10"},{"commit":{"message":"Retire mutator gc labs with handshake"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"1a37f08706dc216c78d1a716115d430bee32d011"},{"commit":{"message":"Retire gc labs concurrently"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"ef902fcee4a898514c25e1b4db245a5199261528"}]