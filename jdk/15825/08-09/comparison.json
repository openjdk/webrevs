{"files":[{"patch":"@@ -136,1 +136,1 @@\n-  bool                       _was_scalar_replaced;     \/\/ Whether this ObjectValue describes an object scalar replaced or just\n+  bool                       _is_scalar_replaced;      \/\/ Whether this ObjectValue describes an object scalar replaced or just\n@@ -143,1 +143,1 @@\n-  ObjectValue(int id, ScopeValue* klass = nullptr, bool was_scalar_replaced = true)\n+  ObjectValue(int id, ScopeValue* klass = nullptr, bool is_scalar_replaced = true)\n@@ -149,1 +149,1 @@\n-     , _was_scalar_replaced(was_scalar_replaced)\n+     , _is_scalar_replaced(is_scalar_replaced)\n@@ -163,1 +163,1 @@\n-  bool was_scalar_replaced() const { return _was_scalar_replaced; }\n+  bool                        is_scalar_replaced() const  { return _is_scalar_replaced; }\n@@ -166,1 +166,1 @@\n-  void                        set_id(int id)              { _id = id; }\n+  void                        set_id(int id)                   { _id = id; }\n@@ -168,3 +168,3 @@\n-  void                        set_visited(bool visited)   { _visited = visited; }\n-  void                        set_was_scalar_replaced(bool scd) { _was_scalar_replaced = scd; }\n-  void                        set_root(bool root)         { _is_root = root; }\n+  void                        set_visited(bool visited)        { _visited = visited; }\n+  void                        set_is_scalar_replaced(bool scd) { _is_scalar_replaced = scd; }\n+  void                        set_root(bool root)              { _is_root = root; }\n","filename":"src\/hotspot\/share\/code\/debugInfo.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-      if (!sv->was_scalar_replaced()) {\n+      if (!sv->is_scalar_replaced()) {\n","filename":"src\/hotspot\/share\/code\/scopeDesc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -468,1 +468,0 @@\n-      assert(ptn->ideal_node() != nullptr && ptn->ideal_node()->is_Allocate(), \"sanity\");\n@@ -473,0 +472,1 @@\n+        assert(alloc->Opcode() == Op_AllocateArray, \"Unexpected type of allocation.\");\n@@ -2976,11 +2976,1 @@\n-      bool further_validate = false;\n-\n-      for (BaseIterator i(field); i.has_next(); i.next()) {\n-        Node* base = i.get()->ideal_node();\n-        if (base->is_Phi() && !reducible_merges.member(base)) {\n-          further_validate = true;\n-          break;\n-        }\n-      }\n-\n-      if (further_validate) {\n+      if (has_non_reducible_merge(field, reducible_merges)) {\n@@ -3016,0 +3006,10 @@\n+bool ConnectionGraph::has_non_reducible_merge(FieldNode* field, Unique_Node_List& reducible_merges) {\n+  for (BaseIterator i(field); i.has_next(); i.next()) {\n+    Node* base = i.get()->ideal_node();\n+    if (base->is_Phi() && !reducible_merges.member(base)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -593,0 +593,1 @@\n+  bool has_non_reducible_merge(FieldNode* field, Unique_Node_List& reducible_merges);\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1552,1 +1552,1 @@\n-\/\/ Some differences from original method:\n+\/\/ Some differences from original method (split_through_phi):\n@@ -1559,2 +1559,0 @@\n-           base    = (base->is_CastPP()) ? base->in(1) : base;\n-  bool base_is_phi = (base != nullptr) && base->is_Phi();\n@@ -1562,1 +1560,5 @@\n-  if (req() > 3 || !base_is_phi) {\n+  if (base->is_CastPP()) {\n+    base = base->in(1);\n+  }\n+\n+  if (req() > 3 || base == nullptr || !base->is_Phi()) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -253,1 +253,1 @@\n-    return new StackValue(hdl, hdl.is_null() && ov->was_scalar_replaced() ? 1 : 0);\n+    return new StackValue(hdl, hdl.is_null() && ov->is_scalar_replaced() ? 1 : 0);\n","filename":"src\/hotspot\/share\/runtime\/stackValue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}