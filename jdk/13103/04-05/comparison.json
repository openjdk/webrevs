{"files":[{"patch":"@@ -34,5 +34,2 @@\n-struct CountTrailingZerosImpl {\n-  static inline unsigned call(unsigned int x);\n-  static inline unsigned call(unsigned long x);\n-  static inline unsigned call(unsigned long long x);\n-};\n+template <typename T>\n+struct CountTrailingZerosImpl;\n@@ -51,1 +48,1 @@\n-  return CountTrailingZerosImpl::call(static_cast<P>(static_cast<U>(x)));\n+  return CountTrailingZerosImpl<U>{}(static_cast<P>(static_cast<U>(x)));\n@@ -59,3 +56,6 @@\n-inline unsigned CountTrailingZerosImpl::call(unsigned int x) {\n-  return __builtin_ctz(x);\n-}\n+template <>\n+struct CountTrailingZerosImpl<unsigned int> {\n+  inline unsigned operator()(unsigned int x) const {\n+    return __builtin_ctz(x);\n+  }\n+};\n@@ -63,3 +63,6 @@\n-inline unsigned CountTrailingZerosImpl::call(unsigned long x) {\n-  return __builtin_ctzl(x);\n-}\n+template <>\n+struct CountTrailingZerosImpl<unsigned long> {\n+  inline unsigned operator()(unsigned long x) const {\n+    return __builtin_ctzl(x);\n+  }\n+};\n@@ -67,3 +70,6 @@\n-inline unsigned CountTrailingZerosImpl::call(unsigned long long x) {\n-  return __builtin_ctzll(x);\n-}\n+template <>\n+struct CountTrailingZerosImpl<unsigned long long> {\n+  inline unsigned operator()(unsigned long long x) const {\n+    return __builtin_ctzll(x);\n+  }\n+};\n@@ -83,10 +89,6 @@\n-inline unsigned CountTrailingZerosImpl::call(unsigned int x) {\n-  return call(static_cast<unsigned long>(x));\n-}\n-\n-inline unsigned CountTrailingZerosImpl::call(unsigned long x) {\n-  unsigned long index;\n-  unsigned char result = _BitScanForward(&index, x);\n-  postcond(result != 0);\n-  return static_cast<unsigned>(index);\n-}\n+template <>\n+struct CountTrailingZerosImpl<unsigned int> {\n+  inline unsigned operator()(unsigned int x) const {\n+    return CountTrailingZerosImpl<unsigned long>{}(x);\n+  }\n+};\n@@ -94,11 +96,5 @@\n-inline unsigned CountTrailingZerosImpl::call(unsigned long long x) {\n-#ifdef _LP64\n-  unsigned long index;\n-  unsigned char result = _BitScanForward64(&index, x);\n-  postcond(result != 0);\n-  return static_cast<unsigned>(index);\n-#else\n-  unsigned long index;\n-  unsigned long low = static_cast<unsigned long>(x);\n-  if (low != 0ul) {\n-    unsigned char result = _BitScanForward(&index, low);\n+template <>\n+struct CountTrailingZerosImpl<unsigned long> {\n+  inline unsigned operator()(unsigned long x) const {\n+    unsigned long index;\n+    unsigned char result = _BitScanForward(&index, x);\n@@ -106,2 +102,10 @@\n-  } else {\n-    unsigned char result = _BitScanForward(&index, static_cast<unsigned long>(x >> 32));\n+    return static_cast<unsigned>(index);\n+  }\n+};\n+\n+template <>\n+struct CountTrailingZerosImpl<unsigned long long> {\n+  inline unsigned operator()(unsigned long long x) const {\n+  #ifdef _LP64\n+    unsigned long index;\n+    unsigned char result = _BitScanForward64(&index, x);\n@@ -109,1 +113,13 @@\n-    index += 32ul;\n+    return static_cast<unsigned>(index);\n+  #else\n+    unsigned long index;\n+    unsigned long low = static_cast<unsigned long>(x);\n+    if (low != 0ul) {\n+      unsigned char result = _BitScanForward(&index, low);\n+      postcond(result != 0);\n+    } else {\n+      unsigned char result = _BitScanForward(&index, static_cast<unsigned long>(x >> 32));\n+      postcond(result != 0);\n+      index += 32ul;\n+    }\n+    return static_cast<unsigned>(index);\n@@ -111,3 +127,1 @@\n-  return static_cast<unsigned>(index);\n-#endif\n-}\n+};\n","filename":"src\/hotspot\/share\/utilities\/count_trailing_zeros.hpp","additions":56,"deletions":42,"binary":false,"changes":98,"status":"modified"}]}