{"files":[{"patch":"@@ -1771,1 +1771,1 @@\n-            return switch(fType) {\n+            return switch (fType) {\n@@ -1777,1 +1777,2 @@\n-                default ->  throw new IllegalArgumentException(String.format(\n+                \/\/ These classe(s) do not support String patterns\n+                default -> throw new IllegalArgumentException(String.format(\n","filename":"src\/java.base\/share\/classes\/java\/text\/MessageFormat.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+    \/\/ java.text.ListFormat does not support String subformatPatterns\n@@ -64,1 +65,1 @@\n-        assertThrows(IllegalArgumentException.class, () ->\n+        IllegalArgumentException exc = assertThrows(IllegalArgumentException.class, () ->\n@@ -66,0 +67,2 @@\n+        assertEquals(\"Unexpected modifier for List: standard\", exc.getMessage());\n+\n@@ -67,1 +70,1 @@\n-        assertThrows(IllegalArgumentException.class, () ->\n+        exc = assertThrows(IllegalArgumentException.class, () ->\n@@ -69,0 +72,2 @@\n+        assertEquals(\"unknown format type: listt\", exc.getMessage());\n+\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/ListSubFormats.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -169,2 +169,3 @@\n-        \/\/ Not a supported FormatStyle\n-        assertThrows(IllegalArgumentException.class, () ->\n+        \/\/ Not a supported FormatStyle: throws the underlying IAE from DTF\n+        \/\/ as it is interpreted as a subformatPattern\n+        IllegalArgumentException exc = assertThrows(IllegalArgumentException.class, () ->\n@@ -172,0 +173,1 @@\n+        assertEquals(\"Unknown pattern letter: l\", exc.getMessage());\n@@ -173,2 +175,2 @@\n-        \/\/ Not a legal SubformatPattern, catch the underlying exception\n-        assertThrows(IllegalArgumentException.class, () ->\n+        \/\/ Not a legal SubformatPattern: throws the underlying IAE from DTF\n+        exc = assertThrows(IllegalArgumentException.class, () ->\n@@ -176,0 +178,1 @@\n+        assertEquals(\"Pattern letter count must be 2: V\", exc.getMessage());\n@@ -179,1 +182,1 @@\n-                \"Style on a pre-defined formatter should be ignored, instead of throwing an exception\");\n+                \"Style on a pre-defined DTF should be ignored, instead of throwing an exception\");\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/TemporalSubFormats.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}