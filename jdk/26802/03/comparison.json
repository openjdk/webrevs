{"files":[{"patch":"@@ -225,0 +225,1 @@\n+    private static final int JAVA_CLASSNAME_MAX_LEN = 65535;\n@@ -470,0 +471,1 @@\n+        validateClassNameLength(className);\n@@ -552,0 +554,1 @@\n+        validateClassNameLength(name);\n@@ -600,1 +603,3 @@\n-        Objects.requireNonNull(name);\n+        if (!classNameLengthIsValid(name)) {\n+            return null;\n+        }\n@@ -4151,0 +4156,29 @@\n+\n+    \/\/ Checks whether the class name exceeds the maximum allowed length.\n+    private static boolean classNameLengthIsValid(String name) {\n+        Objects.requireNonNull(name);\n+        return getUtf8Length(name) <= JAVA_CLASSNAME_MAX_LEN;\n+    }\n+\n+    \/\/ Validates the length of the class name and throws an exception if it exceeds the maximum allowed length.\n+    private static void validateClassNameLength(String name) throws ClassNotFoundException {\n+        if (!classNameLengthIsValid(name)) {\n+            throw new ClassNotFoundException(\n+            \"Class name exceeds maximum length of \" + JAVA_CLASSNAME_MAX_LEN);\n+        }\n+    }\n+\n+    \/\/ Calculates the length of string encoded in Modified UTF-8.\n+    private static int getUtf8Length(String str) {\n+        int slen = str.length();\n+        int extra = 0;\n+        for (int i = 0; i < slen; i++) {\n+            int ch = string.charAt(i);\n+            if (ch > 0x007f || ch == 0x0000) {\n+                extra++;\n+                if (ch > 0x07ff)\n+                    extra++;\n+            }\n+        }\n+        return slen + extra;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"}]}