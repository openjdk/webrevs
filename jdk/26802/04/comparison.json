{"files":[{"patch":"@@ -95,0 +95,1 @@\n+import static jdk.internal.util.ModifiedUtf.utfLen;\n@@ -225,0 +226,1 @@\n+    private static final int JAVA_CLASSNAME_MAX_LEN = 65535;\n@@ -470,0 +472,1 @@\n+        validateClassNameLength(className);\n@@ -552,0 +555,1 @@\n+        validateClassNameLength(name);\n@@ -600,1 +604,3 @@\n-        Objects.requireNonNull(name);\n+        if (!classNameLengthIsValid(name)) {\n+            return null;\n+        }\n@@ -4151,0 +4157,21 @@\n+\n+    \/\/ Checks whether the class name exceeds the maximum allowed length.\n+    private static boolean classNameLengthIsValid(String name) {\n+        Objects.requireNonNull(name);\n+        \/\/ Quick approximation: each char can be at most 3 bytes in Modified UTF-8.\n+        \/\/ If the string is short enough, it definitely fits.\n+        if (name.length() * 3 <= JAVA_CLASSNAME_MAX_LEN) {\n+            return true;\n+        }\n+        \/\/ Compute exact Modified UTF-8 length.\n+        return utfLen(name, 0) <= JAVA_CLASSNAME_MAX_LEN;\n+    }\n+\n+    \/\/ Validates the length of the class name and throws an exception if it exceeds the maximum allowed length.\n+    private static void validateClassNameLength(String name) throws ClassNotFoundException {\n+        if (!classNameLengthIsValid(name)) {\n+            throw new ClassNotFoundException(\n+            \"Class name exceeds maximum length of \" + JAVA_CLASSNAME_MAX_LEN);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}