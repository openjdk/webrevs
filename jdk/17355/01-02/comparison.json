{"files":[{"patch":"@@ -2401,2 +2401,2 @@\n-            CompactNumberFormat [locale: \"%s\", compact patterns: \"%s\", decimal pattern: \"%s\"]\n-            \"\"\".formatted(symbols.getLocale().getDisplayName(), Arrays.toString(compactPatterns), decimalPattern);\n+            CompactNumberFormat [locale: \"%s\", decimal pattern: \"%s\", compact patterns: \"%s\"]\n+            \"\"\".formatted(symbols.getLocale().getDisplayName(), decimalPattern, Arrays.toString(compactPatterns));\n","filename":"src\/java.base\/share\/classes\/java\/text\/CompactNumberFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.text.ChoiceFormat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value. There is no null locale test as\n+    \/\/ ChoiceFormat is not localized.\n+    @Test\n+    public void normalValueTest() {\n+        String expectedStr = \"ChoiceFormat [pattern: \\\"1.0#foo\\\"]\\n\";\n+        var c = new ChoiceFormat(\"1.0#foo\");\n+        assertEquals(expectedStr, c.toString());\n+    }\n+\n+    \/\/ Ensure toString throws no exception when ChoiceFormat is created\n+    \/\/ with empty arrays\n+    @Test\n+    public void oddValueTest() {\n+        var c2 = new ChoiceFormat(new double[]{}, new String[]{});\n+        System.out.println(c2);\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/ChoiceFormat\/ToStringTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.text.CompactNumberFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.NumberFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value. There is no null test as the getInstance\n+    \/\/ methods and constructor (which takes DFS) throw NPE if the locale param is null.\n+    @Test\n+    public void expectedValueTest() {\n+        String expectedStr = \"CompactNumberFormat [locale: \\\"English (Canada)\\\", decimal pattern: \\\"#,##0.###\\\", compact patterns: \\\"[, , , {one:0' 'thousand other:0' 'thousand}, {one:00' 'thousand other:00' 'thousand}, {one:000' 'thousand other:000' 'thousand}, {one:0' 'million other:0' 'million}, {one:00' 'million other:00' 'million}, {one:000' 'million other:000' 'million}, {one:0' 'billion other:0' 'billion}, {one:00' 'billion other:00' 'billion}, {one:000' 'billion other:000' 'billion}, {one:0' 'trillion other:0' 'trillion}, {one:00' 'trillion other:00' 'trillion}, {one:000' 'trillion other:000' 'trillion}]\\\"]\\n\";\n+        var c = NumberFormat.getCompactNumberInstance(Locale.CANADA, NumberFormat.Style.LONG);\n+        assertEquals(expectedStr, c.toString());\n+    }\n+\n+    \/\/ Check an odd value with empty decimal pattern and compact patterns.\n+    @Test\n+    public void oddValueTest() {\n+        String expectedStr = \"CompactNumberFormat [locale: \\\"English (Canada)\\\", decimal pattern: \\\"\\\", compact patterns: \\\"[]\\\"]\\n\";\n+        var c = new CompactNumberFormat(\"\", new DecimalFormatSymbols(Locale.CANADA), new String[]{});\n+        assertEquals(expectedStr, c.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/ToStringTest.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @library \/java\/text\/testlib\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.io.InputStream;\n+import java.io.ObjectInputStream;\n+import java.text.DateFormat;\n+import java.text.DateFormatSymbols;\n+import java.text.SimpleDateFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value\n+    @Test\n+    public void normalValueTest() {\n+        String expectedStr =\n+                \"SimpleDateFormat [locale: \\\"English (Canada)\\\", pattern: \\\"MMM d, y\\\"]\\n\";\n+        var s = DateFormat.getDateInstance(DateFormat.DEFAULT, Locale.CANADA);\n+        assertEquals(expectedStr, s.toString());\n+    }\n+\n+    \/\/ Check an odd value. SimpleDateFormat constructor that takes DFS, will use\n+    \/\/ the default locale, not the locale from the DFS.\n+    @Test\n+    public void oddValueTest() {\n+        String expectedStr =\n+                \"SimpleDateFormat [locale: \\\"\"+Locale.getDefault().getDisplayName()+\"\\\", pattern: \\\"MMM d, y\\\"]\\n\";\n+        var s = new SimpleDateFormat(\"MMM d, y\", new DateFormatSymbols(Locale.JAPAN));\n+        assertEquals(expectedStr, s.toString());\n+    }\n+\n+\n+    \/\/ Check the expected value when the locale is null. This is only possible\n+    \/\/ via an older SimpleDateFormat that was deserialized. The current constructor\n+    \/\/ will throw NPE if locale is null.\n+    @Test\n+    public void nullLocaleTest() {\n+        String expectedStr =\n+                \"SimpleDateFormat [locale: \\\"None\\\", pattern: \\\"yyyy.MM.dd E hh.mm.ss zzz\\\"]\\n\";\n+        \/\/ Borrowed from DateFormatSymbolsSerializationTest\n+        SimpleDateFormat s;\n+        try (InputStream is = HexDumpReader.getStreamFromHexDump(\"SDFserialized.ser.txt\");\n+             ObjectInputStream iStream = new ObjectInputStream(is)) {\n+            s = (SimpleDateFormat)iStream.readObject();\n+            assertEquals(expectedStr, s.toString());\n+        } catch (Exception e) {\n+            System.out.println(\"Error building stream from deserialized simple date format\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/ToStringTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.NumberFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value. There is no null locale test as\n+    \/\/ DecimalFormatSymbols will throw an exception when created with a null locale.\n+    @Test\n+    public void expectedValueTest() {\n+        String expectedStr =\n+                \"DecimalFormat [locale: \\\"English (Canada)\\\", pattern: \\\"foo#00.00bar\\\"]\\n\";\n+        var d = new DecimalFormat(\"foo#00.00bar\", new DecimalFormatSymbols(Locale.CANADA));\n+        assertEquals(expectedStr, d.toString());\n+\n+        String expectedStr2 =\n+                \"DecimalFormat [locale: \\\"English (Canada)\\\", pattern: \\\"#,##0.###\\\"]\\n\";\n+        var d2 = NumberFormat.getInstance(Locale.CANADA);\n+        assertEquals(expectedStr2, d2.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/ToStringTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.text.ListFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value. There is no null test as the getInstance\n+    \/\/ methods throw NPE if any arguments are null.\n+    @Test\n+    public void expectedValueTest() {\n+        String expectedStr =\n+                \"ListFormat [locale: \\\"English (Canada)\\\", start: \\\"{0}, {1}\\\", middle: \\\"{0}, {1}\\\", end: \\\"{0} and {1}\\\", two: \\\"{0} and {1}\\\", three: \\\"{0}, {1} and {2}\\\"]\\n\";\n+        var l = ListFormat.getInstance(Locale.CANADA, ListFormat.Type.STANDARD, ListFormat.Style.FULL);\n+        assertEquals(expectedStr, l.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/ListFormat\/ToStringTest.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321545\n+ * @summary Ensure value returned by overridden toString method is as expected\n+ * @run junit ToStringTest\n+ *\/\n+\n+import java.text.MessageFormat;\n+import java.util.Locale;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class ToStringTest {\n+\n+    \/\/ Check a normal expected value\n+    @Test\n+    public void expectedValueTest() {\n+        String expectedStr =\n+                \"MessageFormat [locale: \\\"English (Canada)\\\", pattern: \\\"foo {0}\\\"]\\n\";\n+        var m = new MessageFormat(\"foo {0}\", Locale.CANADA);\n+        assertEquals(expectedStr, m.toString());\n+    }\n+\n+    \/\/ Check the expected value when the locale is null\n+    @Test\n+    public void nullLocaleTest() {\n+        String expectedStr =\n+                \"MessageFormat [locale: \\\"None\\\", pattern: \\\"foo {0}\\\"]\\n\";\n+        var m = new MessageFormat(\"foo {0}\", null);\n+        assertEquals(expectedStr, m.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/MessageFormat\/ToStringTest.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}