{"files":[{"patch":"@@ -79,2 +79,1 @@\n-    private record Deallocator(long address, long size, int capacity,\n-                               boolean temporary) implements Runnable {\n+    private record Deallocator(long address, long size, int capacity) implements Runnable {\n@@ -87,2 +86,1 @@\n-            if (!temporary)\n-                Bits.unreserveMemory(size, capacity);\n+            Bits.unreserveMemory(size, capacity);\n@@ -133,8 +131,10 @@\n-        try {\n-            cleaner = Cleaner.create(this, new Deallocator(base, size, cap, temporary));\n-        } catch (Throwable t) {\n-            \/\/ Prevent leak if the Deallocator or Cleaner fail for any reason\n-            UNSAFE.freeMemory(base);\n-            if (!temporary)\n-                Bits.unreserveMemory(size, cap);\n-            throw t;\n+        if (!temporary) {\n+            try {\n+                cleaner = Cleaner.create(this, new Deallocator(base, size, cap));\n+            } catch (Throwable t) {\n+                \/\/ Prevent leak if the Deallocator or Cleaner fail for any reason\n+                UNSAFE.freeMemory(base);\n+                throw t;\n+            }\n+        } else { \/\/ temporary\n+            cleaner = null;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Direct-X-Buffer.java.template","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-        ((DirectBuffer)buf).cleaner().clean();\n+        unsafe.freeMemory(((DirectBuffer)buf).address());\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Util.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}