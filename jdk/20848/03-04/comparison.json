{"files":[{"patch":"@@ -55,1 +55,2 @@\n-    @Param({\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"64\", \"512\", \"4096\", \"32768\", \"262144\", \"2097152\", \"16777216\", \"134217728\"})\n+    @Param({\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"64\", \"512\",\n+            \"4096\", \"32768\", \"262144\", \"2097152\", \"16777216\", \"134217728\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Mismatch.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,5 +53,2 @@\n-    @Param({\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\n-            \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n-            \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n-            \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n-            \"32\", \"128\", \"256\", \"384\", \"511\", \"512\"})\n+    @Param({\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"64\", \"512\",\n+            \"4096\", \"32768\", \"262144\", \"2097152\", \"16777216\", \"134217728\"})\n@@ -76,1 +73,1 @@\n-    public void arrays_fill() {\n+    public void arraysFill() {\n@@ -80,0 +77,1 @@\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n@@ -81,1 +79,1 @@\n-    public void heap_segment_fill() {\n+    public void heapSegmentFillJava() {\n@@ -85,0 +83,1 @@\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n@@ -86,1 +85,13 @@\n-    public void native_segment_fill() {\n+    public void heapSegmentFillUnsafe() {\n+        heapSegment.fill((byte) 0);\n+    }\n+\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n+    @Benchmark\n+    public void nativeSegmentFillJava() {\n+        nativeSegment.fill((byte) 0);\n+    }\n+\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n+    @Benchmark\n+    public void nativeSegmentFillUnsafe() {\n@@ -90,0 +101,7 @@\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n+    @Benchmark\n+    public void unalignedSegmentFillJava() {\n+        unalignedSegment.fill((byte) 0);\n+    }\n+\n+    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n@@ -91,1 +109,1 @@\n-    public void unaligned_segment_fill() {\n+    public void unalignedSegmentFillUnsafe() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestFill.java","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"}]}