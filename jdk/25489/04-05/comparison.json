{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.awt.geom.Point2D;\n@@ -48,0 +49,1 @@\n+    private final AffineTransform deviceTransform;\n@@ -50,0 +52,4 @@\n+        this(pf, null);\n+    }\n+\n+    CPrinterGraphicsConfig(PageFormat pf, AffineTransform deviceTransform) {\n@@ -52,0 +58,1 @@\n+        this.deviceTransform = deviceTransform;\n@@ -181,1 +188,2 @@\n-        return new AffineTransform();\n+        return deviceTransform == null ?\n+                new AffineTransform() : new AffineTransform(deviceTransform);\n@@ -227,1 +235,5 @@\n-        return new Rectangle(0, 0, (int)pf.getWidth(), (int)pf.getHeight());\n+        Point2D.Double pt = new Point2D.Double(pf.getWidth(), pf.getHeight());\n+        Point2D.Double transformedPt = new Point2D.Double();\n+        getDefaultTransform().transform(pt, transformedPt);\n+        return new Rectangle(0, 0,\n+                (int)transformedPt.getX(), (int)transformedPt.getY());\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterGraphicsConfig.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.awt.geom.AffineTransform;\n@@ -488,0 +489,18 @@\n+    \/**\n+     * Returns the resolution in dots per inch across the width\n+     * of the page. This method take into account the page orientation.\n+     *\/\n+    private double getXRes(PageFormat pageFormat) {\n+        return pageFormat.getOrientation() == PageFormat.PORTRAIT ?\n+                getXRes() : getYRes();\n+    }\n+\n+    \/**\n+     * Returns the resolution in dots per inch across the height\n+     * of the page. This method take into account the page orientation.\n+     *\/\n+    private double getYRes(PageFormat pageFormat) {\n+        return pageFormat.getOrientation() == PageFormat.PORTRAIT ?\n+                getYRes() : getXRes();\n+    }\n+\n@@ -775,21 +794,0 @@\n-    private PageFormat scalePageFormat(PageFormat page, double scaleX, double scaleY) {\n-        PageFormat scaledPage = (PageFormat) page.clone();\n-        if (scaleX == 1 && scaleY == 1) {\n-            return scaledPage;\n-        }\n-        Paper paper = page.getPaper();\n-        Paper scaledPaper = new Paper();\n-        scaledPaper.setSize(\n-                paper.getWidth() * scaleX,\n-                paper.getHeight() * scaleY\n-        );\n-        scaledPaper.setImageableArea(\n-                paper.getImageableX() * scaleX,\n-                paper.getImageableY() * scaleY,\n-                paper.getWidth() * scaleX,\n-                paper.getHeight() * scaleY\n-        );\n-        scaledPage.setPaper(scaledPaper);\n-        return scaledPage;\n-    }\n-\n@@ -851,4 +849,5 @@\n-                double scaleX = getXRes()\/ USER_SPACE_DPI;\n-                double scaleY = getYRes()\/ USER_SPACE_DPI;\n-                PageFormat scaledPage = scalePageFormat(page, scaleX, scaleY);\n-                SurfaceData sd = CPrinterSurfaceData.createData(scaledPage, context); \/\/ Just stores page into an ivar\n+                AffineTransform deviceTransform = new AffineTransform(\n+                        getXRes(page) \/ USER_SPACE_DPI, 0, 0,\n+                        getYRes(page) \/ USER_SPACE_DPI, 0, 0);\n+                SurfaceData sd = CPrinterSurfaceData\n+                        .createData(page, deviceTransform, context); \/\/ Just stores page into an ivar\n@@ -859,0 +858,1 @@\n+\n@@ -860,2 +860,0 @@\n-                pathGraphics.scale(scaledPage.getWidth() \/ page.getWidth(),\n-                        scaledPage.getHeight() \/ page.getHeight());\n@@ -898,3 +896,0 @@\n-                        double scaleX = getXRes() \/ USER_SPACE_DPI;\n-                        double scaleY = getYRes() \/ USER_SPACE_DPI;\n-                        PageFormat scaledPageFormat = scalePageFormat(pageFormat, scaleX, scaleY);\n@@ -902,4 +897,1 @@\n-                              new BufferedImage(\n-                                  (int)Math.round(scaledPageFormat.getWidth()),\n-                                  (int)Math.round(scaledPageFormat.getHeight()),\n-                                  BufferedImage.TYPE_INT_ARGB_PRE);\n+                              new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE);\n@@ -908,2 +900,0 @@\n-                        peekGraphics.scale(scaledPageFormat.getWidth() \/ pageFormat.getWidth(),\n-                                scaledPageFormat.getHeight() \/ pageFormat.getHeight());\n@@ -913,0 +903,3 @@\n+                        double scaleX = getXRes(pageFormat) \/ USER_SPACE_DPI;\n+                        double scaleY = getYRes(pageFormat) \/ USER_SPACE_DPI;\n+                        peekGraphics.scale(scaleX, scaleY);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":29,"deletions":36,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.awt.geom.AffineTransform;\n@@ -43,2 +44,2 @@\n-    static SurfaceData createData(PageFormat pf, long context) {\n-        return new CPrinterSurfaceData(CPrinterGraphicsConfig.getConfig(pf), context);\n+    static SurfaceData createData(PageFormat pf, AffineTransform deviceTransform, long context) {\n+        return new CPrinterSurfaceData(new CPrinterGraphicsConfig(pf, deviceTransform), context);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterSurfaceData.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -89,2 +89,2 @@\n-    DECLARE_METHOD(jm_getXRes, sjc_CPrinterJob, \"getXRes\", \"()D\");\n-    DECLARE_METHOD(jm_getYRes, sjc_CPrinterJob, \"getYRes\", \"()D\");\n+    DECLARE_METHOD(jm_getXRes, sjc_CPrinterJob, \"getXRes\", \"(Ljava\/awt\/print\/PageFormat;)D\");\n+    DECLARE_METHOD(jm_getYRes, sjc_CPrinterJob, \"getYRes\", \"(Ljava\/awt\/print\/PageFormat;)D\");\n@@ -110,1 +110,1 @@\n-    jdouble hRes = (*env)->CallDoubleMethod(env, fPrinterJob, jm_getXRes);\n+    jdouble hRes = (*env)->CallDoubleMethod(env, fPrinterJob, jm_getXRes, fCurPageFormat);\n@@ -112,1 +112,1 @@\n-    jdouble vRes = (*env)->CallDoubleMethod(env, fPrinterJob, jm_getYRes);\n+    jdouble vRes = (*env)->CallDoubleMethod(env, fPrinterJob, jm_getYRes, fCurPageFormat);\n@@ -119,5 +119,1 @@\n-            if ([[[NSPrintOperation currentOperation] printInfo] orientation] == NSPaperOrientationPortrait) {\n-                CGContextScaleCTM(cgRef, scaleX, scaleY);\n-            } else {\n-                CGContextScaleCTM(cgRef, scaleY, scaleX);\n-            }\n+            CGContextScaleCTM(cgRef, scaleX, scaleY);\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/PrinterView.m","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}