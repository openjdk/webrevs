{"files":[{"patch":"@@ -4212,1 +4212,2 @@\n-  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx2() : VM_Version::supports_evex(), \"\");\n+  assert((vector_len == AVX_256bit && VM_Version::supports_avx2()) ||\n+         (vector_len == AVX_512bit && VM_Version::supports_evex()), \"\");\n@@ -4220,1 +4221,2 @@\n-  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx2() : VM_Version::supports_evex(), \"\");\n+  assert((vector_len == AVX_256bit && VM_Version::supports_avx2()) ||\n+         (vector_len == AVX_512bit && VM_Version::supports_evex()), \"\");\n@@ -4229,0 +4231,9 @@\n+void Assembler::vpermps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert((vector_len == AVX_256bit && VM_Version::supports_avx2()) ||\n+         (vector_len == AVX_512bit && VM_Version::supports_evex()), \"\");\n+  \/\/ VEX.NDS.XXX.66.0F38.W0 16 \/r\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x16, (0xC0 | encode));\n+}\n+\n@@ -4250,0 +4261,7 @@\n+void Assembler::vpermilps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx() : VM_Version::supports_evex(), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x0C, (0xC0 | encode));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1765,0 +1765,1 @@\n+  void vpermps(XMMRegister dst,  XMMRegister nds, XMMRegister src, int vector_len);\n@@ -1768,0 +1769,1 @@\n+  void vpermilps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6092,0 +6092,11 @@\n+void C2_MacroAssembler::vector_rearrange_int_float(BasicType bt, XMMRegister dst,\n+                                                   XMMRegister shuffle, XMMRegister src, int vlen_enc) {\n+  if (vlen_enc == AVX_128bit) {\n+    vpermilps(dst, src, shuffle, vlen_enc);\n+  } else if (bt == T_INT) {\n+    vpermd(dst, shuffle, src, vlen_enc);\n+  } else {\n+    assert(bt == T_FLOAT, \"\");\n+    vpermps(dst, shuffle, src, vlen_enc);\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -487,0 +487,3 @@\n+  void vector_rearrange_int_float(BasicType bt, XMMRegister dst, XMMRegister shuffle,\n+                                  XMMRegister src, int vlen_enc);\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -8585,1 +8585,1 @@\n-            Matcher::vector_length(n) == 4 && UseAVX < 2);\n+            Matcher::vector_length(n) == 4 && UseAVX == 0);\n@@ -8614,2 +8614,2 @@\n- predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n-           Matcher::vector_length(n) == 4 && UseAVX < 2);\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n+            UseAVX == 0);\n@@ -8627,1 +8627,1 @@\n-            UseAVX >= 2);\n+            UseAVX > 0);\n@@ -8631,1 +8631,1 @@\n-  int vlen_enc = vector_length_encoding(this);\n+    int vlen_enc = vector_length_encoding(this);\n@@ -8639,1 +8639,1 @@\n-            UseAVX >= 2);\n+            UseAVX > 0);\n@@ -8644,4 +8644,2 @@\n-    if (vlen_enc == Assembler::AVX_128bit) {\n-      vlen_enc = Assembler::AVX_256bit;\n-    }\n-    __ vpermd($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, vlen_enc);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ vector_rearrange_int_float(bt, $dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"}]}