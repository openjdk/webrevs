{"files":[{"patch":"@@ -4229,0 +4229,8 @@\n+void Assembler::vpermps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx2() : VM_Version::supports_evex(), \"\");\n+  \/\/ VEX.NDS.XXX.66.0F38.W0 16 \/r\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x16, (0xC0 | encode));\n+}\n+\n@@ -4250,0 +4258,7 @@\n+void Assembler::vpermilps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx() : VM_Version::supports_evex(), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x0C, (0xC0 | encode));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1765,0 +1765,1 @@\n+  void vpermps(XMMRegister dst,  XMMRegister nds, XMMRegister src, int vector_len);\n@@ -1768,0 +1769,1 @@\n+  void vpermilps(XMMRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8588,1 +8588,1 @@\n-            Matcher::vector_length(n) == 4 && UseAVX < 2);\n+            Matcher::vector_length(n) == 4 && UseAVX == 0);\n@@ -8617,2 +8617,2 @@\n- predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n-           Matcher::vector_length(n) == 4 && UseAVX < 2);\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n+            UseAVX == 0);\n@@ -8630,1 +8630,1 @@\n-            UseAVX >= 2);\n+            UseAVX > 0);\n@@ -8642,1 +8642,1 @@\n-            UseAVX >= 2);\n+            UseAVX > 0);\n@@ -8648,1 +8648,5 @@\n-      vlen_enc = Assembler::AVX_256bit;\n+      __ vpermilps($dst$$XMMRegister, $src$$XMMRegister, $shuffle$$XMMRegister, vlen_enc);\n+    } else if (Matcher::vector_element_basic_type(this) == T_INT) {\n+      __ vpermd($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, vlen_enc);\n+    } else {\n+      __ vpermps($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, vlen_enc);\n@@ -8650,1 +8654,0 @@\n-    __ vpermd($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}