{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,16 +85,10 @@\n-        Deflater deflater = new Deflater(compressionLevel);\n-        deflater.setInput(bytesIn);\n-        ByteArrayOutputStream stream = new ByteArrayOutputStream(bytesIn.length);\n-        byte[] buffer = new byte[1024];\n-\n-        deflater.finish();\n-        while (!deflater.finished()) {\n-            int count = deflater.deflate(buffer);\n-            stream.write(buffer, 0, count);\n-        }\n-\n-        try {\n-            stream.close();\n-        } catch (IOException ex) {\n-            return bytesIn;\n-        }\n+        try (Deflater deflater = new Deflater(compressionLevel)) {\n+            deflater.setInput(bytesIn);\n+            ByteArrayOutputStream stream = new ByteArrayOutputStream(bytesIn.length);\n+            byte[] buffer = new byte[1024];\n+\n+            deflater.finish();\n+            while (!deflater.finished()) {\n+                int count = deflater.deflate(buffer);\n+                stream.write(buffer, 0, count);\n+            }\n@@ -102,2 +96,5 @@\n-        byte[] bytesOut = stream.toByteArray();\n-        deflater.end();\n+            try {\n+                stream.close();\n+            } catch (IOException ex) {\n+                return bytesIn; \/\/ return the original uncompressed input\n+            }\n@@ -105,1 +102,2 @@\n-        return bytesOut;\n+            return stream.toByteArray(); \/\/ the compressed output\n+        }\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/ZipPlugin.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"}]}