{"files":[{"patch":"@@ -145,1 +145,0 @@\n-        subtypeNames.sort((s1, s2) -> s1.compareTo(s2));\n@@ -698,0 +697,31 @@\n+\n+    @Test\n+    public void testClientSwapsOrder(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        Path foo = src.resolve(\"Foo.java\");\n+        Path fooUser = src.resolve(\"FooUser.java\");\n+\n+        tb.writeFile(fooUser,\n+                \"\"\"\n+                public class FooUser {\n+                    public void blah(Foo.R2 a, Foo.R1 b) {}\n+                }\n+                \"\"\");\n+\n+        tb.writeFile(foo,\n+                \"\"\"\n+                public sealed interface Foo {\n+                    record R1() implements Foo {}\n+                    record R2() implements Foo {}\n+                }\n+                \"\"\");\n+\n+        Path out = base.resolve(\"out\");\n+        Files.createDirectories(out);\n+\n+        new JavacTask(tb)\n+                .outdir(out)\n+                .files(fooUser, foo)\n+                .run();\n+        checkSealedClassFile(out, \"Foo.class\", List.of(\"Foo$R1\", \"Foo$R2\"));\n+    }\n","filename":"test\/langtools\/tools\/javac\/sealed\/SealedDiffConfigurationsTest.java","additions":31,"deletions":1,"binary":false,"changes":32,"status":"modified"}]}