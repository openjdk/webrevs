{"files":[{"patch":"@@ -144,1 +144,1 @@\n-  bool is_life() const { return _canary == _header_canary_life_mark; }\n+  bool is_live() const { return _canary == _header_canary_life_mark; }\n","filename":"src\/hotspot\/share\/services\/mallocHeader.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,3 +246,3 @@\n-        \/\/ We continue search even if we found a header but were outside of it if the header was dead since\n-        \/\/ its area may be reused by another, larger block further down.\n-        if (candidate->is_life()) {\n+        \/\/ Break if we found a live header but the pointer had not been nearby. If this was a dead header, it may be\n+        \/\/ a remnant from an older freed block, so continue searching.\n+        if (candidate->is_live()) {\n","filename":"src\/hotspot\/share\/services\/mallocTracker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -682,2 +682,2 @@\n-      _st->print_cr(PTR_FORMAT \" in mmap'd memory region [\" PTR_FORMAT \" - \" PTR_FORMAT \"] by %s\",\n-        p2i(_p), p2i(rgn->base()), p2i(rgn->base() + rgn->size()), rgn->flag_name());\n+      _st->print_cr(PTR_FORMAT \" in mmap'd memory region [\" PTR_FORMAT \" - \" PTR_FORMAT \"], tag %s\",\n+        p2i(_p), p2i(rgn->base()), p2i(rgn->base() + rgn->size()), NMTUtil::flag_to_enum_name(rgn->flag()));\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1891,4 +1891,0 @@\n-    case 18: {\n-      char* c = NEW_C_HEAP_ARRAY(char, 100, mtTest);\n-      fatal(\"test \" PTR_FORMAT, p2i(c));\n-    }\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,6 +65,0 @@\n-TEST_VM(NMT, barrierrr) {\n-  for (size_t i = 0; i < os::vm_page_size(); i ++) {\n-    test_for_c_heap(os::vm_page_size(), i);\n-  }\n-\n-}\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_locationprinting.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}