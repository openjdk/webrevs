{"files":[{"patch":"@@ -34,1 +34,1 @@\n-static const char* sem_init_strerror(kern_return_t value) {\n+static const char* sem_strerror(kern_return_t value) {\n@@ -36,3 +36,7 @@\n-    case KERN_INVALID_ARGUMENT:  return \"Invalid argument\";\n-    case KERN_RESOURCE_SHORTAGE: return \"Resource shortage\";\n-    default:                     return \"Unknown\";\n+    case KERN_INVALID_ARGUMENT:    return \"Invalid argument\";\n+    case KERN_RESOURCE_SHORTAGE:   return \"Resource shortage\";\n+    case KERN_TERMINATED:          return \"Resource has been destroyed\";\n+    case KERN_ABORTED:             return \"Operation was aborted\";\n+    case KERN_INVALID_VALUE:       return \"Invalid time specified\";\n+    case KERN_OPERATION_TIMED_OUT: return \"Operation timed-out\";\n+    default:                       return \"Unknown\";\n@@ -45,1 +49,2 @@\n-  guarantee(ret == KERN_SUCCESS, \"Failed to create semaphore: %s\", sem_init_strerror(ret));\n+  guarantee(ret == KERN_SUCCESS, \"Failed to create semaphore: %s (0x%x)\",\n+            sem_strerror(ret), (uint)ret);\n@@ -56,1 +61,2 @@\n-    assert(ret == KERN_SUCCESS, \"Failed to signal semaphore\");\n+    assert(ret == KERN_SUCCESS, \"Failed to signal semaphore: %s (0x%x)\",\n+           sem_strerror(ret), (uint)ret);\n@@ -65,1 +71,2 @@\n-  assert(ret == KERN_SUCCESS, \"Failed to wait on semaphore\");\n+  assert(ret == KERN_SUCCESS, \"Failed to wait on semaphore: %s (0x%x)\",\n+         sem_strerror(ret), (uint)ret);\n@@ -103,0 +110,4 @@\n+  assert(kr == KERN_SUCCESS || kr == KERN_OPERATION_TIMED_OUT,\n+         \"Failed to timed-wait on semaphore: %s (0x%x)\",\n+         sem_strerror(kr), (uint)kr);\n+\n","filename":"src\/hotspot\/os\/bsd\/semaphore_bsd.cpp","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"}]}