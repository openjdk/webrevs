{"files":[{"patch":"@@ -1230,3 +1230,3 @@\n-    \/\/ Check for min_jlong % '-1', result is defined to be '0'\n-    \/\/ We don't need to check for min_jint % '-1' as its result is defined when using jlong.\n-    if (i1->get_con_as_long(bt) == min_jlong && i2->get_con_as_long(bt) == -1) {\n+    \/\/ Special case: min_jlong % '-1' is UB, and e.g., x86 triggers a division error.\n+    \/\/ Any value % -1 is 0, so we can return 0 and avoid that scenario.\n+    if (i2->get_con_as_long(bt) == -1) {\n@@ -1237,3 +1237,4 @@\n-  \/\/ The magnitude of the divisor is in range [1, 2^31] or [1, 2^63], depending on the BasicType.\n-  \/\/ We know it isn't 0 as we handled that above.\n-  \/\/ That means at least one value is nonzero, so its absolute value is bigger than zero.\n+  \/\/ We checked that t2 is not the zero constant. Hence, at least i2->_lo or i2->_hi must be non-zero,\n+  \/\/ and hence its absoute value is bigger than zero. Hence, the magnitude of the divisor (i.e. the\n+  \/\/ largest absolute value for any value in i2) must be in the range [1, 2^31] or [1, 2^63], depending\n+  \/\/ on the BasicType.\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}