{"files":[{"patch":"@@ -1,36 +0,0 @@\n-<!--\n- Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-\n-Verify that scaled components are rendered smoothly to image.\n-\n-1. Run the test.\n-2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\n-If so, press PASS, else press FAIL.\n-\n-<applet  code=\"bug8032667.class\" width=400 height=400><\/applet>\n-\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.html","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-\/*\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.awt.BorderLayout;\n-import java.awt.Canvas;\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.Image;\n-import java.awt.image.BufferedImage;\n-import javax.swing.JApplet;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComponent;\n-import javax.swing.SwingUtilities;\n-\n-\/* @test\n- * @bug 8032667\n- * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n- * @run applet\/manual=yesno bug8032667.html\n- *\/\n-public class bug8032667 extends JApplet {\n-\n-    static final int scale = 2;\n-    static final int width = 130;\n-    static final int height = 50;\n-    static final int scaledWidth = scale * width;\n-    static final int scaledHeight = scale * height;\n-\n-    @Override\n-    public void init() {\n-        SwingUtilities.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-\n-                final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n-                final Image image2 = getImage(getCheckBox(\"Selected\", true));\n-\n-                Canvas canvas = new Canvas() {\n-\n-                    @Override\n-                    public void paint(Graphics g) {\n-                        super.paint(g);\n-                        g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n-                        g.drawImage(image2, 0, scaledHeight + 5,\n-                                scaledWidth, scaledHeight, this);\n-                    }\n-                };\n-\n-                getContentPane().add(canvas, BorderLayout.CENTER);\n-            }\n-        });\n-    }\n-\n-    static JCheckBox getCheckBox(String text, boolean selected) {\n-        JCheckBox checkBox = new JCheckBox(text);\n-        checkBox.setSelected(selected);\n-        checkBox.setSize(new Dimension(width, height));\n-        return checkBox;\n-    }\n-\n-    static Image getImage(JComponent component) {\n-        final BufferedImage image = new BufferedImage(\n-                scaledWidth, scaledHeight, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image.getGraphics();\n-        ((Graphics2D) g).scale(scale, scale);\n-        component.paint(g);\n-        g.dispose();\n-\n-        return image;\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.java","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,116 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.awt.Dimension;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.Image;\n-import java.awt.image.BufferedImage;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComponent;\n-import javax.swing.SwingUtilities;\n-\n-import jdk.test.lib.Platform;\n-\n-\/* @test\n- * @bug 8032667\n- * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n- * @library \/test\/lib\n- * @build jdk.test.lib.Platform\n- * @run main bug8032667_image_diff\n- *\/\n-public class bug8032667_image_diff {\n-\n-    static final int IMAGE_WIDTH = 130;\n-    static final int IMAGE_HEIGHT = 50;\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        if (!Platform.isOSX()) {\n-            return;\n-        }\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-\n-                JCheckBox checkBox = new JCheckBox();\n-                checkBox.setSelected(true);\n-                checkBox.setSize(new Dimension(IMAGE_WIDTH, IMAGE_HEIGHT));\n-\n-                final BufferedImage image1 = getHiDPIImage(checkBox);\n-                final BufferedImage image2 = getScaledImage(checkBox);\n-\n-                if(equal(image1, image2)){\n-                    throw new RuntimeException(\"2x image equals to non smooth image\");\n-                }\n-            }\n-        });\n-    }\n-\n-    static boolean equal(BufferedImage image1, BufferedImage image2) {\n-\n-        int w = image1.getWidth();\n-        int h = image1.getHeight();\n-\n-        if (w != image2.getWidth() || h != image2.getHeight()) {\n-            return false;\n-        }\n-\n-        for (int i = 0; i < w; i++) {\n-            for (int j = 0; j < h; j++) {\n-                int color1 = image1.getRGB(i, j);\n-                int color2 = image2.getRGB(i, j);\n-\n-                if (color1 != color2) {\n-                    return false;\n-                }\n-            }\n-        }\n-        return true;\n-    }\n-\n-    static BufferedImage getHiDPIImage(JComponent component) {\n-        return getImage(component, 2, IMAGE_WIDTH, IMAGE_HEIGHT);\n-    }\n-\n-    static BufferedImage getScaledImage(JComponent component) {\n-        Image image1x = getImage(component, 1, IMAGE_WIDTH, IMAGE_HEIGHT);\n-        final BufferedImage image2x = new BufferedImage(\n-                2 * IMAGE_WIDTH, 2 * IMAGE_HEIGHT, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image2x.getGraphics();\n-        ((Graphics2D) g).scale(2, 2);\n-        g.drawImage(image1x, 0, 0, null);\n-        g.dispose();\n-        return image2x;\n-    }\n-\n-    static BufferedImage getImage(JComponent component, int scale, int width, int height) {\n-        final BufferedImage image = new BufferedImage(\n-                scale * width, scale * height, BufferedImage.TYPE_INT_ARGB);\n-        final Graphics g = image.getGraphics();\n-        ((Graphics2D) g).scale(scale, scale);\n-        component.paint(g);\n-        g.dispose();\n-        return image;\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667_image_diff.java","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.image.BufferedImage;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+\n+\/* @test\n+ * @bug 8032667\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary [macosx] Components cannot be rendered in HiDPI to BufferedImage\n+ * @run main\/manual bug8032667\n+ *\/\n+\n+public class bug8032667 {\n+\n+    static final int scale = 2;\n+    static final int width = 130;\n+    static final int height = 50;\n+    static final int scaledWidth = scale * width;\n+    static final int scaledHeight = scale * height;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify that scaled components are rendered smoothly to image.\n+\n+            1. Run the test.\n+            2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\n+            If so, press PASS, else press FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug8032667 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(bug8032667::createAndShowGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createAndShowGUI() {\n+        JFrame frame = new JFrame(\"bug8032667 HiDPI Component Test\");\n+        frame.setLayout(new BorderLayout());\n+        frame.setBounds(0, 400, 400, 400);\n+\n+        final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n+        final Image image2 = getImage(getCheckBox(\"Selected\", true));\n+        JPanel panel = new JPanel() {\n+            @Override\n+            public void paint(Graphics g) {\n+                super.paint(g);\n+                g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n+                g.drawImage(image2, 0, scaledHeight + 5,\n+                        scaledWidth, scaledHeight, this);\n+            }\n+        };\n+        frame.getContentPane().add(panel, BorderLayout.CENTER);\n+        return frame;\n+    }\n+\n+    static JCheckBox getCheckBox(String text, boolean selected) {\n+        JCheckBox checkBox = new JCheckBox(text);\n+        checkBox.setSelected(selected);\n+        checkBox.setSize(new Dimension(width, height));\n+        return checkBox;\n+    }\n+\n+    static Image getImage(JComponent component) {\n+        final BufferedImage image = new BufferedImage(\n+                scaledWidth, scaledHeight, BufferedImage.TYPE_INT_ARGB);\n+        final Graphics g = image.getGraphics();\n+        ((Graphics2D) g).scale(scale, scale);\n+        component.paint(g);\n+        g.dispose();\n+\n+        return image;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/bug8032667.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"}]}