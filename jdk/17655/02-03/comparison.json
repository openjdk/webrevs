{"files":[{"patch":"@@ -1200,1 +1200,1 @@\n-    output()->print_cr(\"missing argument\");\n+    output()->print_cr(\"Usage: VM.debug find ADDRESS\");\n@@ -1236,1 +1236,1 @@\n-      output()->print_cr(\"missing argument\");\n+      output()->print_cr(\"Usage: VM.debug findclass CLASS_PATTERN FLAGS\");\n@@ -1243,1 +1243,1 @@\n-      output()->print_cr(\"missing argument\");\n+      output()->print_cr(\"Usage: VM.debug findmethod CLASS_PATTERN METHOD_PATTERN FLAGS\");\n@@ -1251,1 +1251,1 @@\n-    output()->print_cr(\"unknown sub-command\");\n+    output()->print_cr(\"Unknown sub-command.\");\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -579,0 +579,1 @@\n+\/\/ VM state inspection. Subcommands to provide utilities similar to debug.cpp.\n@@ -593,1 +594,1 @@\n-    return \"Debug utilities. Subcommands: events, threads, find ADDRESS, findclass CLASS_PATTERN FLAGS, findmethod CLASS_PATTERN METHOD_PATTERN FLAGS\";\n+    return \"Inspect VM state. Requires -XX:+UnlockDiagnosticVMOptions. Subcommands: events, threads, find ADDRESS, findclass CLASS_PATTERN FLAGS, findmethod CLASS_PATTERN METHOD_PATTERN FLAGS\";\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        } \n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/VMDebugTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}