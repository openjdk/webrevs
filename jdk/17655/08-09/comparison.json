{"files":[{"patch":"@@ -1244,1 +1244,1 @@\n-  _arg1(\"arg1\", \"\", \"STRING\", false, nullptr),\n+  _address(\"address\", \"\", \"STRING\", true, nullptr),\n@@ -1247,1 +1247,1 @@\n-  _dcmdparser.add_dcmd_argument(&_arg1);\n+  _dcmdparser.add_dcmd_argument(&_address);\n@@ -1258,1 +1258,1 @@\n-  if (!_arg1.has_value()) {\n+  if (!_address.has_value()) {\n@@ -1261,1 +1261,1 @@\n-    intptr_t x = strtoll(_arg1.value(), nullptr, 0);\n+    intptr_t x = strtoll(_address.value(), nullptr, 0);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -581,1 +581,1 @@\n-  DCmdArgument<char*> _arg1;\n+  DCmdArgument<char*> _address;\n@@ -584,1 +584,1 @@\n-  static int num_arguments() { return 1; }\n+  static int num_arguments() { return 2; }\n@@ -590,1 +590,1 @@\n-    return \"Inspect VM object at address.\";\n+    return \"Inspect at address: decode Java heap and some other areas and objects known to the VM.\";\n@@ -600,1 +600,0 @@\n-  void find();\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm -Dvminspect.enabled=true -XX:+UnlockDiagnosticVMOptions VMInspectTest \n+ * @run testng\/othervm -Dvminspect.enabled=true -XX:+UnlockDiagnosticVMOptions VMInspectTest\n@@ -83,1 +83,1 @@\n-        \/\/ Tests where enabled:\n+        \/\/ Tests with VM.inspect enabled:\n@@ -89,2 +89,1 @@\n-        \/\/ Test VM.inspect:\n-        testFind(executor);\n+        testInspectAddress(executor);\n@@ -93,1 +92,1 @@\n-    public void testFind(CommandExecutor executor) {\n+    public void testInspectAddress(CommandExecutor executor) {\n@@ -95,0 +94,3 @@\n+\n+        \/\/ Test that address is mandatory:\n+        \/\/ java.lang.IllegalArgumentException: The argument 'address' is mandatory.\n@@ -96,1 +98,2 @@\n-        output.shouldContain(\"Usage: VM.inspect\");\n+        output.shouldContain(\"is mandatory\");\n+\n@@ -102,0 +105,1 @@\n+\n@@ -124,0 +128,1 @@\n+\n@@ -205,1 +210,1 @@\n-    public void work() {{\n+    public void work() {\n@@ -207,6 +212,6 @@\n-          System.out.println(\"Hello\");\n-          synchronized(lock) {\n-            try {\n-              lock.wait();\n-            } catch (Exception e) { }\n-          }\n+            System.out.println(\"Hello\");\n+            synchronized(lock) {\n+                try {\n+                    lock.wait();\n+                } catch (Exception e) { }\n+            }\n@@ -216,1 +221,0 @@\n-      }\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/VMInspectTest.java","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"}]}