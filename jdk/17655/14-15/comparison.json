{"files":[{"patch":"@@ -173,3 +173,0 @@\n-  product(bool, UnlockDiagnosticVMFeatures, trueInDebug,                    \\\n-          \"Enable VM features relating to field diagnostics\")               \\\n-                                                                            \\\n@@ -1788,0 +1785,3 @@\n+  product(bool, EnableVMInspectCommand, trueInDebug,                        \\\n+          \"Enable diagnostic command to inspect arbitrary objects.\")        \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1254,2 +1254,2 @@\n-  if (!UnlockDiagnosticVMFeatures) {\n-    output()->print_cr(\"-XX:+UnlockDiagnosticVMFeatures is required\");\n+  if (!EnableVMInspectCommand) {\n+    output()->print_cr(\"-XX:+EnableVMInspectCommand is required\");\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm -Dvminspect.enabled=true -XX:+UnlockDiagnosticVMFeatures VMInspectTest\n+ * @run testng\/othervm -Dvminspect.enabled=true -XX:+EnableVMInspectCommand VMInspectTest\n@@ -84,2 +84,2 @@\n-        \/\/ Testing VM.inspect requires UnlockDiagnosticVMFeatures or a debug JVM.\n-        \/\/ This test runs with a System Property set as a hint whether UnlockDiagnosticVMFeatures is set.\n+        \/\/ VM.inspect requires EnableVMInspectCommand or a debug JVM.\n+        \/\/ This test runs with a System Property set as a hint whether EnableVMInspectCommand is set.\n@@ -91,1 +91,1 @@\n-            output.shouldContain(\"-XX:+UnlockDiagnosticVMFeatures is required\");\n+            output.shouldContain(\"-XX:+EnableVMInspectCommand is required\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/VMInspectTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}