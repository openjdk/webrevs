{"files":[{"patch":"@@ -38,0 +38,3 @@\n+    \/\/ No hardware barriers are necessary. All members are volatile and the profiler\n+    \/\/ is run from a signal handler and only observers the thread its running on.\n+\n@@ -39,1 +42,1 @@\n-    OrderAccess::release();\n+\n@@ -41,2 +44,0 @@\n-    \/\/ Fence?\n-    OrderAccess::fence();\n@@ -49,2 +50,0 @@\n-\n-    OrderAccess::release();\n@@ -55,1 +54,3 @@\n-    \/\/ In order to make sure the transition state is valid for \"this\"\n+    \/\/ No hardware barriers are necessary. All members are volatile and the profiler\n+    \/\/ is run from a signal handler and only observers the thread its running on.\n+\n@@ -57,4 +58,0 @@\n-    \/\/ Hack Alert: Temporary bugfix for 4717480\/4721647\n-    \/\/ To act like previous version (pd_cache_state) don't null _last_Java_sp\n-    \/\/ unless the value is changing.\n-    \/\/\n@@ -62,1 +59,0 @@\n-      OrderAccess::release();\n@@ -64,1 +60,0 @@\n-      OrderAccess::fence();\n@@ -69,1 +64,0 @@\n-    OrderAccess::release();\n@@ -83,1 +77,1 @@\n-  void set_last_Java_sp(intptr_t* sp) { OrderAccess::release(); _last_Java_sp = sp; }\n+  void set_last_Java_sp(intptr_t* sp) { _last_Java_sp = sp; }\n","filename":"src\/hotspot\/cpu\/s390\/javaFrameAnchor_s390.hpp","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}