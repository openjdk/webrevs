{"files":[{"patch":"@@ -402,5 +402,8 @@\n-            if (tag != TAG_UTF8) throw new ConstantPoolException(\"Not a UTF8 - index: \" + index);\n-            AbstractPoolEntry.Utf8EntryImpl uinfo\n-                    = new AbstractPoolEntry.Utf8EntryImpl(this, index, buffer, q + 2, readU2(q));\n-            cp[index] = uinfo;\n-            return uinfo;\n+            if (tag == TAG_UTF8) {\n+                AbstractPoolEntry.Utf8EntryImpl uinfo\n+                        = new AbstractPoolEntry.Utf8EntryImpl(this, index, buffer, q + 2, readU2(q));\n+                cp[index] = uinfo;\n+                return uinfo;\n+            }\n+        } else if (info instanceof AbstractPoolEntry.Utf8EntryImpl utf8) {\n+            return utf8;\n@@ -408,1 +411,1 @@\n-        return (AbstractPoolEntry.Utf8EntryImpl) info;\n+        throw new ConstantPoolException(\"Not a UTF8 - index: \" + index);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8320360 8330684 8331320\n+ * @bug 8320360 8330684 8331320 8331655\n@@ -39,0 +39,1 @@\n+import java.lang.classfile.constantpool.IntegerEntry;\n@@ -109,0 +110,8 @@\n+    @Test\n+    void testInvalidUtf8Entry() {\n+        var cp = ClassFile.of().parse(new byte[]{(byte)0xCA, (byte)0xFE, (byte)0xBA, (byte)0xBE,\n+            0, 0, 0, 0, 0, 3, ClassFile.TAG_INTEGER, 0, 0, 0, 0, ClassFile.TAG_NAMEANDTYPE, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).constantPool();\n+        assertTrue(cp.entryByIndex(1) instanceof IntegerEntry); \/\/parse valid int entry first\n+        assertThrows(ConstantPoolException.class, () -> cp.entryByIndex(2));\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}