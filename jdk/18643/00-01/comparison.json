{"files":[{"patch":"@@ -113,5 +113,1 @@\n-  if (is_empty()) {\n-    return 0;\n-  } else {\n-    return stack_size() - bottom() - frame::metadata_words_at_top;\n-  }\n+  return stack_size() - bottom() - frame::metadata_words_at_top;\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.inline.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -648,0 +648,2 @@\n+  chunk->set_max_thawing_size(cont_size());\n+\n@@ -652,2 +654,0 @@\n-  chunk->set_max_thawing_size(cont_size());\n-\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -110,2 +110,0 @@\n-  static inline void set_bottom(HeapWord* chunk, int value);\n-\n@@ -119,0 +117,1 @@\n+  static inline void set_bottom(HeapWord* chunk, int value);\n","filename":"src\/hotspot\/share\/runtime\/continuationJavaClasses.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}