{"files":[{"patch":"@@ -1138,0 +1138,20 @@\n+bool OopStorage::print_containing(oop* addr, outputStream* st) {\n+  if (addr != nullptr) {\n+    Block *block = find_block_or_null(addr);\n+    if (block != nullptr && block->print_containing(addr, st)) {\n+      st->print_cr(\" in oop storage \\\"%s\\\"\", name());\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n+bool OopStorage::Block::print_containing(oop* addr, outputStream* st) {\n+  if (contains(addr)) {\n+    st->print(INTPTR_FORMAT \" is a pointer %u\/%lu into block %zu\",\n+              p2i(addr), get_index(addr), ARRAY_SIZE(_data), _active_index);\n+    return true;\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -216,0 +216,1 @@\n+  bool print_containing(oop* addr, outputStream* st);\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -199,0 +199,2 @@\n+\n+  bool print_containing(oop* addr, outputStream* st);\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.inline.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,0 +85,11 @@\n+bool OopStorageSet::print_containing(oop* addr, outputStream* st) {\n+  if (addr != nullptr) {\n+    for (uint i = 0; i < OopStorageSet::all_count; i++) {\n+      if (_storages[i]->print_containing(addr, st)) {\n+        return true;\n+      }\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"oops\/oop.hpp\"\n@@ -92,0 +93,2 @@\n+  \/\/ Debugging: print location info, if in storage.\n+  static bool print_containing(oop* addr, outputStream* st);\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/shared\/oopStorageSet.hpp\"\n@@ -1320,0 +1321,5 @@\n+  \/\/ Ask if any OopStorage knows about this address.\n+  if (OopStorageSet::print_containing((oop*)addr, st)) {\n+    return;\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/shared\/oopStorage.hpp\"\n+#include \"gc\/shared\/oopStorage.inline.hpp\"\n@@ -29,0 +29,3 @@\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n+#include \"runtime\/vmOperations.hpp\"\n+#include \"runtime\/vmThread.hpp\"\n@@ -35,0 +38,3 @@\n+using ::testing::StrEq;\n+using ::testing::HasSubstr;\n+\n@@ -86,0 +92,2 @@\n+\n+  class VM_PrintAtSafepoint;\n@@ -99,0 +107,59 @@\n+\n+class OopStorageSetTest::VM_PrintAtSafepoint : public VM_GTestExecuteAtSafepoint {\n+private:\n+ class PrintContainingClosure : public Closure {\n+  public:\n+    void do_oop(oop* addr) {\n+      stringStream ss;\n+      bool printed = OopStorageSet::print_containing(addr, &ss);\n+      ASSERT_TRUE(printed);\n+      ASSERT_THAT(ss.freeze(), HasSubstr(\"is a pointer\"));\n+      ASSERT_THAT(ss.freeze(), HasSubstr(\"into block\"));\n+      ASSERT_THAT(ss.freeze(), HasSubstr(\"in oop storage\"));\n+    }\n+  };\n+\n+public:\n+  void doit() {\n+    for (auto id: EnumRange<OopStorageSet::Id>()) {\n+      OopStorage* oop_storage = OopStorageSet::storage(id);\n+      PrintContainingClosure cl;\n+      oop_storage->oops_do(&cl);\n+    }\n+  }\n+};\n+\n+TEST_VM_F(OopStorageSetTest, print_containing) {\n+  \/\/ nullptrs print nothing\n+  {\n+    stringStream ss;\n+    bool printed = OopStorageSet::print_containing(nullptr, &ss);\n+    ASSERT_FALSE(printed);\n+    ASSERT_THAT(\"\", StrEq(ss.freeze()));\n+  }\n+\n+  \/\/ Goofy values print nothing: unaligned out of storage pointer.\n+  {\n+    stringStream ss;\n+    bool printed = OopStorageSet::print_containing((oop*)0x1, &ss);\n+    ASSERT_FALSE(printed);\n+    ASSERT_THAT(\"\", StrEq(ss.freeze()));\n+  }\n+\n+  \/\/ Goofy values print nothing: aligned out of storage pointer.\n+  {\n+    stringStream ss;\n+    bool printed = OopStorageSet::print_containing((oop*)0x8, &ss);\n+    ASSERT_FALSE(printed);\n+    ASSERT_THAT(\"\", StrEq(ss.freeze()));\n+  }\n+\n+  \/\/ All slot addresses should print well.\n+  {\n+    VM_PrintAtSafepoint op;\n+    {\n+      ThreadInVMfromNative invm(JavaThread::current());\n+      VMThread::execute(&op);\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_oopStorageSet.cpp","additions":68,"deletions":1,"binary":false,"changes":69,"status":"modified"}]}