{"files":[{"patch":"@@ -48,1 +48,2 @@\n-    _bitmap(bitmap_size(size, NumSegments)),\n+    _bitmap_size(bitmap_size(size, NumSegments)),\n+    _bitmap(0),\n@@ -51,0 +52,6 @@\n+void ZLiveMap::allocate_bitmap() {\n+  if (_bitmap.size() != _bitmap_size) {\n+    _bitmap.initialize(_bitmap_size, false \/* clear *\/);\n+  }\n+}\n+\n@@ -67,0 +74,4 @@\n+      \/\/ We lazily initialize the bitmap the first time the page is\n+      \/\/ marked, i.e. a bit is about to be set for the first time.\n+      allocate_bitmap();\n+\n@@ -130,1 +141,4 @@\n-  if (_bitmap.size() != new_bitmap_size) {\n+  _bitmap_size = new_bitmap_size;\n+  _segment_shift = log2i_exact(segment_size());\n+\n+  if (_bitmap.size() != 0 && _bitmap.size() != new_bitmap_size) {\n@@ -132,1 +146,0 @@\n-    _segment_shift = log2i_exact(segment_size());\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,1 @@\n+  size_t            _bitmap_size;\n@@ -68,0 +69,2 @@\n+  void allocate_bitmap();\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n-  return _bitmap.size() \/ NumSegments;\n+  return _bitmap_size \/ NumSegments;\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-    return (uint32_t)(size() >> object_alignment_shift());\n+    return checked_cast<uint32_t>(size() >> object_alignment_shift());\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}