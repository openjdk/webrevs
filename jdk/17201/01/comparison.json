{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1346,1 +1346,1 @@\n-  assert(k == nullptr || k->is_klass() && k->is_array_klass(), \"should be array klass\");\n+  assert(k == nullptr || (k->is_klass() && k->is_array_klass()), \"should be array klass\");\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -539,1 +539,1 @@\n-              this_size < has_size && *fp == '\\0', \/\/ last field can be short\n+              (this_size < has_size && *fp == '\\0'), \/\/ last field can be short\n","filename":"src\/hotspot\/share\/interpreter\/bytecodes.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -542,1 +542,1 @@\n-    assert(offset == 0 || offset >= second_part && offset <= operands->length(), \"oob (3)\");\n+    assert(offset == 0 || (offset >= second_part && offset <= operands->length()), \"oob (3)\");\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -329,1 +329,1 @@\n-  assert(is_native() && bcp == code_base() || contains(bcp) || VMError::is_error_reported(),\n+  assert((is_native() && bcp == code_base()) || contains(bcp) || VMError::is_error_reported(),\n@@ -363,1 +363,1 @@\n-  assert(is_native() && bcp == code_base() || contains(bcp), \"bcp doesn't belong to this method\");\n+  assert((is_native() && bcp == code_base()) || contains(bcp), \"bcp doesn't belong to this method\");\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,4 +344,4 @@\n-    unsigned char res = b0 | b0 - 1 |\n-                        b1 | b1 - 1 |\n-                        b2 | b2 - 1 |\n-                        b3 | b3 - 1;\n+    unsigned char res = b0 | (b0 - 1) |\n+                        b1 | (b1 - 1) |\n+                        b2 | (b2 - 1) |\n+                        b3 | (b3 - 1);\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}