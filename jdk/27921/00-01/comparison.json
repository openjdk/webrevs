{"files":[{"patch":"@@ -55,0 +55,1 @@\n+import java.util.Arrays;\n@@ -262,1 +263,6 @@\n-        return new SecretKeySpec(engineGenerateSecret(), algorithm);\n+        byte[] bytes = engineGenerateSecret();\n+        try {\n+            return new SecretKeySpec(bytes, algorithm);\n+        } finally {\n+            Arrays.fill(bytes, (byte)0);\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDHKeyAgreement.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.util.Arrays;\n@@ -48,1 +49,1 @@\n-    private byte[] privateKey;\n+    private XECPrivateKey privateKey;\n@@ -104,1 +105,1 @@\n-        XECPrivateKey privateKey = (XECPrivateKey) key;\n+        privateKey = (XECPrivateKey) key;\n@@ -110,1 +111,1 @@\n-        this.privateKey = privateKey.getScalar().orElseThrow(\n+        byte[] tmp = privateKey.getScalar().orElseThrow(\n@@ -113,0 +114,1 @@\n+        Arrays.fill(tmp, (byte)0);\n@@ -147,0 +149,1 @@\n+        byte[] scalar = this.privateKey.getScalar().get();\n@@ -148,1 +151,1 @@\n-            this.privateKey,\n+            scalar,\n@@ -150,0 +153,1 @@\n+        Arrays.fill(scalar, (byte)0);\n@@ -216,1 +220,6 @@\n-        return new SecretKeySpec(engineGenerateSecret(), algorithm);\n+        byte[] bytes = engineGenerateSecret();\n+        try {\n+            return new SecretKeySpec(bytes, algorithm);\n+        } finally {\n+            Arrays.fill(bytes, (byte)0);\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHKeyAgreement.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"}]}