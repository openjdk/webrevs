{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+import java.util.Arrays;\n@@ -95,1 +96,1 @@\n-    private byte[] privateKey;\n+    private EdECPrivateKey privateKey;\n@@ -144,1 +145,6 @@\n-        EdECPrivateKey edKey = (EdECPrivateKey) privateKey;\n+        this.privateKey = (EdECPrivateKey) privateKey;\n+\n+        initImpl(this.privateKey.getParams());\n+        byte[] tmp = this.privateKey.getBytes().orElseThrow(\n+                () -> new InvalidKeyException(\"No private key value\"));\n+        Arrays.fill(tmp, (byte)0);\n@@ -146,3 +152,0 @@\n-        initImpl(edKey.getParams());\n-        this.privateKey = edKey.getBytes().orElseThrow(\n-        () -> new InvalidKeyException(\"No private key value\"));\n@@ -202,4 +205,8 @@\n-        byte[] result = ops.sign(this.sigParams, this.privateKey,\n-            message.getMessage());\n-        message = null;\n-        return result;\n+        byte[] bytes = this.privateKey.getBytes().get();\n+        try {\n+            return ops.sign(this.sigParams, bytes,\n+                    message.getMessage());\n+        } finally {\n+            Arrays.fill(bytes, (byte)0);\n+            message = null;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSASignature.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"}]}