{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -500,1 +500,1 @@\n-  if (UseNotificationThread && Notification_lock->owned_by_self()) {\n+  if (Notification_lock->owned_by_self()) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -506,1 +506,0 @@\n-  { \"UseNotificationThread\",        JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n@@ -515,0 +514,1 @@\n+  { \"UseNotificationThread\",        JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -955,3 +955,0 @@\n-  product(bool, UseNotificationThread, true,                                \\\n-          \"(Deprecated) Use Notification Thread\")                           \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -238,7 +238,2 @@\n-  MUTEX_DEFN(Service_lock                    , PaddedMonitor, service);      \/\/ used for service thread operations\n-\n-  if (UseNotificationThread) {\n-    MUTEX_DEFN(Notification_lock             , PaddedMonitor, service);  \/\/ used for notification thread operations\n-  } else {\n-    Notification_lock = Service_lock;\n-  }\n+  MUTEX_DEFN(Service_lock                    , PaddedMonitor, service);          \/\/ used for service thread operations\n+  MUTEX_DEFN(Notification_lock               , PaddedMonitor, service);          \/\/ used for notification thread operations\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -84,1 +84,0 @@\n-    bool sensors_changed = false;\n@@ -86,2 +85,0 @@\n-    bool has_gc_notification_event = false;\n-    bool has_dcmd_notification_event = false;\n@@ -116,4 +113,1 @@\n-      while (((sensors_changed = (!UseNotificationThread && LowMemoryDetector::has_pending_requests())) |\n-              (has_jvmti_events = _jvmti_service_queue.has_events()) |\n-              (has_gc_notification_event = (!UseNotificationThread && GCNotifier::has_event())) |\n-              (has_dcmd_notification_event = (!UseNotificationThread && DCmdFactory::has_pending_jmx_notification())) |\n+      while (((has_jvmti_events = _jvmti_service_queue.has_events()) |\n@@ -161,14 +155,0 @@\n-    if (!UseNotificationThread) {\n-      if (sensors_changed) {\n-        LowMemoryDetector::process_sensor_changes(jt);\n-      }\n-\n-      if(has_gc_notification_event) {\n-        GCNotifier::sendNotification(CHECK);\n-      }\n-\n-      if(has_dcmd_notification_event) {\n-        DCmdFactory::send_notification(CHECK);\n-      }\n-    }\n-\n","filename":"src\/hotspot\/share\/runtime\/serviceThread.cpp","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,1 @@\n-\/\/ Memory detection code runs in the Notification thread or\n-\/\/ ServiceThread depending on UseNotificationThread flag.\n+\/\/ Memory detection code runs in the Notification thread.\n","filename":"src\/hotspot\/share\/services\/lowMemoryDetector.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -152,3 +152,2 @@\n-  if (UseNotificationThread) {\n-    NotificationThread::initialize();\n-  }\n+  NotificationThread::initialize();\n+\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}