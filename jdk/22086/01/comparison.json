{"files":[{"patch":"@@ -62,0 +62,5 @@\n+    \/\/ chunkSize is multiple of block size, but otherwise fairly arbitrary\n+    \/\/ Should be large enough to provide intrinsic with optimization\n+    \/\/ opportunities\n+    private final int chunkSize = 1024*100;\n+\n@@ -151,2 +156,9 @@\n-        return implEncrypt(plain, plainOffset, plainLen,\n-                           cipher, cipherOffset);\n+        int processed = 0;\n+        for (;  plainLen > chunkSize; cipherOffset += chunkSize,\n+            plainOffset += chunkSize, plainLen -= chunkSize) {\n+            processed +=\n+               implEncrypt(plain, plainOffset, chunkSize, cipher, cipherOffset);\n+        }\n+        processed +=\n+            implEncrypt(plain, plainOffset, plainLen, cipher, cipherOffset);\n+        return processed;\n@@ -202,1 +214,9 @@\n-        return implDecrypt(cipher, cipherOffset, cipherLen, plain, plainOffset);\n+        int processed = 0;\n+        for (;  cipherLen > chunkSize; cipherOffset += chunkSize,\n+            plainOffset += chunkSize, cipherLen -= chunkSize) {\n+            processed +=\n+               implDecrypt(cipher, cipherOffset, chunkSize, plain, plainOffset);\n+        }\n+        processed +=\n+            implDecrypt(cipher, cipherOffset, cipherLen, plain, plainOffset);\n+        return processed;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherBlockChaining.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"}]}