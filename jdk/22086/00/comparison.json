{"files":[{"patch":"@@ -151,2 +151,15 @@\n-        return implEncrypt(plain, plainOffset, plainLen,\n-                           cipher, cipherOffset);\n+        \/\/ chunkSize is multiple of block size, but otherwise fairly arbitrary\n+        \/\/ Should be large enough to provide intrinsic with optimization\n+        \/\/ oportunities\n+        int processed = 0;\n+        final int chunkSize = 1024*100;\n+        for (;  plainLen > chunkSize; cipherOffset += chunkSize,\n+            plainOffset += chunkSize, plainLen -= chunkSize) {\n+            processed +=\n+               implEncrypt(plain, plainOffset, chunkSize, cipher, cipherOffset);\n+        }\n+        if (plainLen > 0) {\n+            processed +=\n+               implEncrypt(plain, plainOffset, plainLen, cipher, cipherOffset);\n+        }\n+        return processed;\n@@ -202,1 +215,12 @@\n-        return implDecrypt(cipher, cipherOffset, cipherLen, plain, plainOffset);\n+        int processed = 0;\n+        final int chunkSize = 1024*100;\n+        for (;  cipherLen > chunkSize; cipherOffset += chunkSize,\n+            plainOffset += chunkSize, cipherLen -= chunkSize) {\n+            processed +=\n+               implDecrypt(cipher, cipherOffset, chunkSize, plain, plainOffset);\n+        }\n+        if (cipherLen > 0) {\n+            processed +=\n+               implDecrypt(cipher, cipherOffset, cipherLen, plain, plainOffset);\n+        }\n+        return processed;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherBlockChaining.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"}]}