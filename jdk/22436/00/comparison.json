{"files":[{"patch":"@@ -151,2 +151,0 @@\n-            \/\/ Iterator iterates with the access control context stored\n-            \/\/ at ServiceLoader creation time.\n@@ -200,2 +198,0 @@\n-            \/\/ Iterator iterates with the access control context stored\n-            \/\/ at ServiceLoader creation time.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/logger\/LoggerFinderLoader.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-    \/\/ non final field - make it volatile to make sure that other threads\n+    \/\/ non-final field - make it volatile to make sure that other threads\n@@ -315,1 +315,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -425,3 +424,0 @@\n-    \/\/ LoggerContext maps from AppContext\n-    private WeakHashMap<Object, LoggerContext> contextsMap = null;\n-\n@@ -431,3 +427,2 @@\n-        LoggerContext context = null;\n-        \/\/ for standalone app, return userContext\n-        return context != null ? context : userContext;\n+        \/\/ return userContext\n+        return userContext;\n@@ -450,1 +445,1 @@\n-    \/\/ Otherwise a new logger instance is created and registered\n+    \/\/ Otherwise, a new logger instance is created and registered\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/LogManager.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}