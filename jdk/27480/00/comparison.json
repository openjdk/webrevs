{"files":[{"patch":"@@ -56,1 +56,1 @@\n-        SystemDictionaryShared::warn_excluded(k, \"Class loader not alive\");\n+        SystemDictionaryShared::log_exclusion(k, \"Class loader not alive\");\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -357,2 +357,1 @@\n-\/\/ Returns true so the caller can do:    return warn_excluded(\".....\");\n-bool SystemDictionaryShared::warn_excluded(InstanceKlass* k, const char* reason) {\n+void SystemDictionaryShared::log_exclusion(InstanceKlass* k, const char* reason, bool is_warning) {\n@@ -360,2 +359,5 @@\n-  aot_log_warning(aot)(\"Skipping %s: %s\", k->name()->as_C_string(), reason);\n-  return true;\n+  if (is_warning) {\n+    aot_log_warning(aot)(\"Skipping %s: %s\", k->name()->as_C_string(), reason);\n+  } else {\n+    aot_log_info(aot)(\"Skipping %s: %s\", k->name()->as_C_string(), reason);\n+  }\n@@ -380,0 +382,11 @@\n+  bool log_warning = false;\n+  const char* error = check_self_exclusion_helper(k, log_warning);\n+  if (error != nullptr) {\n+    log_exclusion(k, error, log_warning);\n+    return true; \/\/ Should be excluded\n+  } else {\n+    return false; \/\/ Should not be excluded\n+  }\n+}\n+\n+const char* SystemDictionaryShared::check_self_exclusion_helper(InstanceKlass* k, bool& log_warning) {\n@@ -383,1 +396,1 @@\n-    return false; \/\/ Do not exclude: unregistered classes are passed from preimage to final image.\n+    return nullptr; \/\/ Do not exclude: unregistered classes are passed from preimage to final image.\n@@ -387,1 +400,2 @@\n-    return warn_excluded(k, \"In error state\");\n+    log_warning = true;\n+    return \"In error state\";\n@@ -390,1 +404,1 @@\n-    return warn_excluded(k, \"A scratch class\");\n+    return \"A scratch class\";\n@@ -393,1 +407,1 @@\n-    return warn_excluded(k, \"Not in loaded state\");\n+    return \"Not in loaded state\";\n@@ -396,1 +410,1 @@\n-    return warn_excluded(k, \"Has been redefined\");\n+    return \"Has been redefined\";\n@@ -404,3 +418,1 @@\n-        ResourceMark rm;\n-        aot_log_info(aot)(\"Skipping %s because it is dynamically generated\", k->name()->as_C_string());\n-        return true; \/\/ exclude without warning\n+        return \"dynamically generated\";\n@@ -411,1 +423,1 @@\n-      return warn_excluded(k, \"Unsupported location\");\n+      return \"Unsupported location\";\n@@ -418,1 +430,1 @@\n-    return warn_excluded(k, \"Signed JAR\");\n+    return \"Signed JAR\";\n@@ -425,1 +437,1 @@\n-    return warn_excluded(k, \"JFR event class\");\n+    return \"JFR event class\";\n@@ -430,1 +442,2 @@\n-      return warn_excluded(k, \"Failed verification\");\n+      log_warning = true;\n+      return \"Failed verification\";\n@@ -436,1 +449,1 @@\n-      return warn_excluded(k, \"Unlinked class not supported by AOTClassLinking\");\n+      return \"Unlinked class not supported by AOTClassLinking\";\n@@ -440,1 +453,1 @@\n-      return warn_excluded(k, \"Unlinked class not supported by AOTConfiguration\");\n+      return \"Unlinked class not supported by AOTConfiguration\";\n@@ -450,1 +463,1 @@\n-      return warn_excluded(k, \"Old class has been linked\");\n+      return \"Old class has been linked\";\n@@ -455,3 +468,1 @@\n-    ResourceMark rm;\n-    aot_log_info(aot)(\"Skipping %s: used only when dumping CDS archive\", k->name()->as_C_string());\n-    return true;\n+    return \"used only when dumping CDS archive\";\n@@ -460,1 +471,1 @@\n-  return false;\n+  return nullptr;\n@@ -514,1 +525,1 @@\n-    aot_log_warning(aot)(\"Skipping %s: %s %s is excluded\", k->name()->as_C_string(), type, dependency->name()->as_C_string());\n+    aot_log_info(aot)(\"Skipping %s: %s %s is excluded\", k->name()->as_C_string(), type, dependency->name()->as_C_string());\n@@ -841,1 +852,1 @@\n-        SystemDictionaryShared::warn_excluded(k, \"Duplicated unregistered class\");\n+        SystemDictionaryShared::log_exclusion(k, \"Duplicated unregistered class\");\n@@ -970,1 +981,1 @@\n-  warn_excluded(ik, \"From ClassFileLoadHook\");\n+  log_exclusion(ik, \"From ClassFileLoadHook\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":37,"deletions":26,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -183,0 +183,1 @@\n+  static const char* check_self_exclusion_helper(InstanceKlass* k, bool& log_warning);\n@@ -280,1 +281,1 @@\n-  static bool warn_excluded(InstanceKlass* k, const char* reason);\n+  static void log_exclusion(InstanceKlass* k, const char* reason, bool is_warning = false);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-        SystemDictionaryShared::warn_excluded(klass, \"Verified with old verifier\");\n+        SystemDictionaryShared::log_exclusion(klass, \"Verified with old verifier\");\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-      LogStreamHandle(Warning, training) log;\n+      LogStreamHandle(Info, training) log;\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+                \"-Xlog:aot\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/OldClassSupport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-            .addVmArgs(\"-Xlog:aot+class=debug\")\n+            .addVmArgs(\"-Xlog:aot,aot+class=debug\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/VerifierFailOver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-                \"-Xlog:cds,aot+load,cds+class=debug,aot+class=debug\",\n+                \"-Xlog:cds,aot,aot+load,cds+class=debug,aot+class=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}