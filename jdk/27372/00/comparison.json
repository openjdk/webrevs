{"files":[{"patch":"@@ -107,1 +107,0 @@\n-\n@@ -112,1 +111,2 @@\n-    return InstanceKlass::cast(klass)->allocate_objArray(1, length, THREAD);\n+    ArrayKlass* ak = InstanceKlass::cast(klass)->array_klass(CHECK_NULL);\n+    return ObjArrayKlass::cast(ak)->allocate_instance(length, THREAD);\n","filename":"src\/hotspot\/share\/memory\/oopFactory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1564,9 +1564,0 @@\n-objArrayOop InstanceKlass::allocate_objArray(int n, int length, TRAPS) {\n-  check_array_allocation_length(length, arrayOopDesc::max_array_length(T_OBJECT), CHECK_NULL);\n-  size_t size = objArrayOopDesc::object_size(length);\n-  ArrayKlass* ak = array_klass(n, CHECK_NULL);\n-  objArrayOop o = (objArrayOop)Universe::heap()->array_allocate(ak, size, length,\n-                                                                \/* do_zero *\/ true, CHECK_NULL);\n-  return o;\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -815,1 +815,0 @@\n-  objArrayOop allocate_objArray(int n, int length, TRAPS);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,3 @@\n-  Klass** element_klass_addr()      { return &_element_klass; }\n+\n+  \/\/ Compiler\/Interpreter offset\n+  static ByteSize element_klass_offset() { return byte_offset_of(ObjArrayKlass, _element_klass); }\n@@ -76,3 +78,0 @@\n-  \/\/ Compiler\/Interpreter offset\n-  static ByteSize element_klass_offset() { return byte_offset_of(ObjArrayKlass, _element_klass); }\n-\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}