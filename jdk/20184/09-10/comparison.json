{"files":[{"patch":"@@ -46,0 +46,4 @@\n+\n+### Verbose Printing\n+\n+For debugging purposes, one can enable verbose printing, with `-DCompileFrameworkVerbose=true`.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/README.md","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-* TODO\n+* Utility class, with many helper methods for the Compile Framework.\n@@ -45,1 +45,1 @@\n-    * TODO\n+    * Verbose printing, enabled with {@code -DCompileFrameworkVerbose=true}.\n@@ -54,1 +54,4 @@\n-    * TODO\n+    * Create a temporary directory, with a unique name, so that there can be no collisions\n+    * with multi-threading. Used to create the sources and classes directories. Since they\n+    * are unique even across threads, the Compile Framework is multi-threading safe, i.e.\n+    * it does not have collisions if two instances generate classes with the same name.\n@@ -65,1 +68,1 @@\n-    * TODO\n+    * Get all paths in the classpath.\n@@ -73,1 +76,1 @@\n-    * TODO\n+    * Get the path of asmtools, which is shipped with JTREG.\n@@ -110,1 +113,1 @@\n-    * TODO\n+    * Write sources to file.\n@@ -123,1 +126,1 @@\n-    * TODO\n+    * Execute a given compilation, given as a {@code command}.\n@@ -158,1 +161,1 @@\n-    * TODO\n+    * Return the classpath, appended with the {@code classesDir}.\n@@ -164,2 +167,2 @@\n-        \/\/ Escape the backslash for Windows paths. We are using the path in the command-line\n-        \/\/ and Java code, so we always want it to be escaped.\n+        \/\/ Escape the backslash for Windows paths. We are using the path in the\n+        \/\/ command-line and Java code, so we always want it to be escaped.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/Utils.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"}]}