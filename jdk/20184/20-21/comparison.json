{"files":[{"patch":"@@ -51,0 +51,4 @@\n+### Running the compiled code in a new VM\n+\n+One can also run the compiled code in a new VM. For this, one has to set the classpath with `compileFramework.getEscapedClassPathOfCompiledClasses()` ([RunWithFlagsExample](..\/..\/..\/testlibrary_tests\/compile_framework\/examples\/RunWithFlagsExample.java))\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/README.md","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework and run the compiled code with additional flags\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.RunWithFlagsExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+\n+import jdk.test.lib.Utils;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.concurrent.TimeUnit;\n+import java.util.List;\n+\n+\/**\n+ * This test shows how the generated code can be compiled and invoked in a new VM. This allows\n+ * the execution of the code with additional VM flags and options.\n+ * <p>\n+ * The new VM must be able to locate the class files of the newly compiled code. For this we\n+ * set the class path using {@link CompileFramework#getEscapedClassPathOfCompiledClasses}.\n+ *\/\n+public class RunWithFlagsExample {\n+\n+    private static String generate() {\n+        return \"\"\"\n+               package p.xyz;\n+\n+               public class X {\n+                   public static void main(String args[]) {\n+                       System.out.println(\"Hello world!\");\n+                       System.out.println(System.getProperty(\"MyMessage\", \"fail\"));\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJavaSourceCode(\"p.xyz.X\", generate());\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ Build command line.\n+        List<String> command = new ArrayList<>();\n+        command.add(\"%s\/bin\/java\".formatted(System.getProperty(\"test.jdk\")));\n+        \/\/ Pass JVM options from JTREG to our new VM.\n+        command.addAll(Arrays.asList(Utils.getTestJavaOpts()));\n+        \/\/ Set the classpath to include our newly compiled class.\n+        command.add(\"-classpath\");\n+        command.add(comp.getEscapedClassPathOfCompiledClasses());\n+        \/\/ Pass additional flags here.\n+        \/\/ And \"-Xbatch\" is a harmless VM flag, so this example runs everywhere without issue.\n+        \/\/ We can also pass properties like \"MyMessage\".\n+        command.add(\"-Xbatch\");\n+        command.add(\"-DMyMessage=hello_world\");\n+        command.add(\"p.xyz.X\");\n+        System.out.println(\"Running on command-line: \" + String.join(\" \", command));\n+\n+        \/\/ Execute command, and capture the output.\n+        ProcessBuilder builder = new ProcessBuilder(command);\n+        builder.redirectErrorStream(true);\n+\n+        String output;\n+        int exitCode;\n+        try {\n+            Process process = builder.start();\n+            boolean exited = process.waitFor(60, TimeUnit.SECONDS);\n+            if (!exited) {\n+                process.destroyForcibly();\n+                System.out.println(\"Timeout: compile command: \" + String.join(\" \", command));\n+                throw new RuntimeException(\"Process timeout: compilation took too long.\");\n+            }\n+            output = new String(process.getInputStream().readAllBytes(), StandardCharsets.UTF_8);\n+            exitCode = process.exitValue();\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"IOException when launching new VM\", e);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(\"InterruptedException when launching new VM\", e);\n+        }\n+\n+        \/\/ Verify output.\n+        System.err.println(\"Exit code: \" + exitCode);\n+        System.err.println(\"Output: '\" + output + \"'\");\n+        if (exitCode != 0) {\n+            throw new RuntimeException(\"Exit code must be zero!\");\n+        }\n+        if (!output.contains(\"Hello world!\")) {\n+            throw new RuntimeException(\"Did not find 'Hello world!' in output!\");\n+        }\n+        if (!output.contains(\"hello_world\")) {\n+            throw new RuntimeException(\"Did not find 'hello_world' in output!\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/RunWithFlagsExample.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"}]}