{"files":[{"patch":"@@ -36,1 +36,2 @@\n-    private List<SourceCode> sourceCodes = new ArrayList<>();\n+    private List<SourceCode> javaSources = new ArrayList<>();\n+    private List<SourceCode> jasmSources = new ArrayList<>();\n@@ -52,1 +53,1 @@\n-        sourceCodes.add(new SourceCode(className, code, SourceCode.Kind.JAVA));\n+        javaSources.add(new SourceCode(className, \"java\", code));\n@@ -59,1 +60,1 @@\n-        sourceCodes.add(new SourceCode(className, code, SourceCode.Kind.JASM));\n+        jasmSources.add(new SourceCode(className, \"jasm\", code));\n@@ -62,1 +63,1 @@\n-    private String sourceCodesAsString() {\n+    private String sourceCodesAsString(List<SourceCode> sourceCodes) {\n@@ -66,1 +67,1 @@\n-            builder.append(sourceCode.code).append(System.lineSeparator());\n+            builder.append(sourceCode.code()).append(System.lineSeparator());\n@@ -80,10 +81,2 @@\n-        Utils.printlnVerbose(sourceCodesAsString());\n-\n-        List<SourceCode> javaSources = new ArrayList<SourceCode>();\n-        List<SourceCode> jasmSources = new ArrayList<SourceCode>();\n-        for (SourceCode sourceCode : sourceCodes) {\n-            switch (sourceCode.kind) {\n-                case SourceCode.Kind.JASM -> { jasmSources.add(sourceCode);  }\n-                case SourceCode.Kind.JAVA -> { javaSources.add(sourceCode);  }\n-            }\n-        }\n+        Utils.printlnVerbose(sourceCodesAsString(jasmSources));\n+        Utils.printlnVerbose(sourceCodesAsString(javaSources));\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/CompileFramework.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -29,17 +29,1 @@\n-class SourceCode {\n-    enum Kind { JAVA, JASM };\n-\n-    public final String className;\n-    public final String code;\n-    public final Kind kind;\n-\n-    public SourceCode(String className, String code, Kind kind) {\n-        this.className = className;\n-        this.code = code;\n-        this.kind = kind;\n-    }\n-\n-    public String fileExtension() {\n-        return kind.name().toLowerCase();\n-    }\n-\n+record SourceCode(String className, String extension, String code) {\n@@ -48,1 +32,0 @@\n-        String extension = kind.name().toLowerCase();\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/SourceCode.java","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-            writeCodeToFile(sourceCode.code, path);\n+            writeCodeToFile(sourceCode.code(), path);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}