{"files":[{"patch":"@@ -26,2 +26,0 @@\n-\n-import java.io.IOException;\n@@ -29,1 +27,1 @@\n-import java.net.URLClassLoader;\n+import java.io.IOException;\n@@ -31,0 +29,2 @@\n+import java.net.URLClassLoader;\n+import java.nio.file.Path;\n@@ -33,1 +33,0 @@\n-import java.nio.file.Path;\n@@ -36,1 +35,6 @@\n-* TODO\n+* Build a ClassLoader that loads from classpath and {@code classesDir}.\n+* Helper class that generates a ClassLoader which allows loading classes\n+* from the classpath (see {@code Utils.getClassPaths()}) and {@code classesDir}.\n+*\n+* The CompileFramework compiles all its classes to a specific {@code classesDir},\n+* and this generated ClassLoader thus can be used to load those classes.\n@@ -41,1 +45,1 @@\n-    * TODO\n+    * Build a ClassLoader that loads from classpath and {@code classesDir}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/ClassLoaderBuilder.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.nio.file.Path;\n@@ -28,1 +29,0 @@\n-import java.nio.file.Path;\n@@ -31,1 +31,1 @@\n-* TODO\n+* Helper class for compilation of Java and Jasm {@code SourceCode}.\n@@ -36,1 +36,2 @@\n-    * TODO\n+    * Compile all sources in {@code jasmSources}. First write them to the {@code sourceDir},\n+    * then compile them to class-files which are stored in {@code classesDir}.\n@@ -51,1 +52,2 @@\n-    * TODO\n+    * Compile a list of files (i.e. {@code paths}) using asmtools jasm and store\n+    * them in {@code classesDir}.\n@@ -70,1 +72,2 @@\n-    * TODO\n+    * Compile all sources in {@code javaSources}. First write them to the {@code sourceDir},\n+    * then compile them to class-files which are stored in {@code classesDir}.\n@@ -85,1 +88,2 @@\n-    * TODO\n+    * Compile a list of files (i.e. {@code paths}) using javac and store\n+    * them in {@code classesDir}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/Compile.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    public String getClassPathOfCompiledClasses() {\n+    public String getEscapedClassPathOfCompiledClasses() {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/CompileFramework.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+ *\n+ * Additionally, we must set the classpath for the Test-VM, so that it has access to all compiled\n+ * classes (see {@code getEscapedClassPathOfCompiledClasses}).\n@@ -76,1 +79,1 @@\n-               \"\"\", comp.getClassPathOfCompiledClasses());\n+               \"\"\", comp.getEscapedClassPathOfCompiledClasses());\n@@ -112,1 +115,1 @@\n-               \"\"\", comp.getClassPathOfCompiledClasses());\n+               \"\"\", comp.getEscapedClassPathOfCompiledClasses());\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/TestFrameworkJavaExample.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}