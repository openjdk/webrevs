{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import java.nio.file.FileStore;\n@@ -71,0 +72,2 @@\n+    private static final String TMP_DIR =\n+        System.getProperty(\"copymove.tmp.dir\", \".\");\n@@ -73,1 +76,1 @@\n-        Path currentDir = null;\n+        Path tempFile = null;\n@@ -75,1 +78,1 @@\n-            currentDir = Files.createTempFile(Path.of(\".\"), \"this\", \"that\");\n+            tempFile = Files.createTempFile(Path.of(TMP_DIR), \"this\", \"that\");\n@@ -77,1 +80,1 @@\n-                Files.getFileStore(currentDir).supportsFileAttributeView(\"posix\");\n+                Files.getFileStore(tempFile).supportsFileAttributeView(\"posix\");\n@@ -81,1 +84,1 @@\n-            if (currentDir != null) {\n+            if (tempFile != null) {\n@@ -83,1 +86,1 @@\n-                    Files.delete(currentDir);\n+                    Files.delete(tempFile);\n@@ -94,0 +97,7 @@\n+    private static boolean isSameFileStore(Path p1, Path p2)\n+        throws IOException {\n+        FileStore fs1 = p1.getFileSystem().provider().getFileStore(p1);\n+        FileStore fs2 = p2.getFileSystem().provider().getFileStore(p2);\n+        return fs1.equals(fs2);\n+    }\n+\n@@ -145,1 +155,1 @@\n-        Path currentDir = Path.of(\".\");\n+        Path tmpDir = Path.of(TMP_DIR);\n@@ -149,1 +159,1 @@\n-                    source = Files.createTempFile(currentDir, \"file\", \"dat\");\n+                    source = Files.createTempFile(tmpDir, \"file\", \"dat\");\n@@ -151,1 +161,1 @@\n-                    source = Files.createTempDirectory(currentDir, \"dir\");\n+                    source = Files.createTempDirectory(tmpDir, \"dir\");\n@@ -153,1 +163,1 @@\n-                    linkTarget = Files.createTempFile(currentDir, \"link\", \"target\");\n+                    linkTarget = Files.createTempFile(tmpDir, \"link\", \"target\");\n@@ -167,1 +177,1 @@\n-                target = Files.createTempFile(currentDir, \"file\", \"target\");\n+                target = Files.createTempFile(tmpDir, \"file\", \"target\");\n@@ -196,1 +206,5 @@\n-                    Files.move(source, target, options);\n+                    try {\n+                        Files.move(source, target, options);\n+                    } catch (AccessDeniedException ade) {\n+                        assertTrue(mode.charAt(0) != 'r');\n+                    }\n@@ -216,1 +230,14 @@\n-                        assertTrue(mode.charAt(1) != 'w');\n+                        Path other = target.getParent();\n+                        if (other == null)\n+                            other = Path.of(System.getProperty(\"user.dir\"));\n+                        if (isSameFileStore(source, other)) {\n+                            \/\/ directories on same store should be renamed\n+                            assertTrue(mode.charAt(1) != 'w');\n+                        } else {\n+                            \/\/ directories on different stores will likely be\n+                            \/\/ moved by a copy which requires read permission\n+                            if (mode.charAt(1) == 'w')\n+                                assertTrue(mode.charAt(0) != 'r');\n+                            else\n+                                assertTrue(mode.charAt(1) != 'w');\n+                        }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyMoveVariations.java","additions":39,"deletions":12,"binary":false,"changes":51,"status":"modified"}]}