{"files":[{"patch":"@@ -1054,0 +1054,4 @@\n+  if (adjusted_val->is_top() || adjusted_lim->is_top()) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8308660\n+ * @summary C2 compilation hits 'node must be dead' assert\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=242006623 TestFoldIfRemovesTopNode\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN TestFoldIfRemovesTopNode\n+ *\n+ *\/\n+\n+public class TestFoldIfRemovesTopNode {\n+\n+    public static void main(String[] args) {\n+        int[] array = new int[100];\n+        for (int i = 0; i < 20_000; i++) {\n+            test(false, true, 0, array);\n+            test(false, false, 0, array);\n+            testHelper2(false, false, 0, array);\n+            testHelper(0, true, array);\n+        }\n+    }\n+\n+    private static void test(boolean flag, boolean flag2, int k, int[] array) {\n+        if (flag2) {\n+            testHelper2(flag, flag2, k, array);\n+        }\n+    }\n+\n+    private static void testHelper2(boolean flag, boolean flag2, int k, int[] array) {\n+        if (flag2) {\n+            k = -1;\n+        }\n+        testHelper(k, flag, array);\n+    }\n+\n+    private static void testHelper(int k, boolean flag, int[] array) {\n+        if (flag) {\n+            k = new int[k].length;\n+            int j = k + 3;\n+            if (j >= 0 && j <= array.length) {\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestFoldIfRemovesTopNode.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}