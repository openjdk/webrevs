{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import java.net.http.HttpResponse.BodySubscriber;\n+import java.net.http.HttpResponse.BodySubscribers;\n@@ -135,2 +137,18 @@\n- *  <p id=\"closing\">\n- *  The JDK built-in implementation of the {@code HttpClient} overrides\n+ *  <p id=\"streaming\">\n+ *  The HttpClient {@link BodyHandlers} and {@link BodySubscribers}\n+ *  API provide some {@linkplain BodySubscribers##streaming-body streaming\n+ *  or publishing {@code BodyHandler} and {@code BodySubscriber}\n+ *  implementations} which allow to stream body data back to the caller.\n+ *  In order for the resources associated with these streams to be\n+ *  reclaimed, and for the HTTP request to be considered completed,\n+ *  a caller must eventually {@linkplain  HttpResponse#body()\n+ *  obtain the streaming response body} and close, cancel, or\n+ *  read the returned streams to exhaustion. Likewise, a custom\n+ *  {@link BodySubscriber} implementation should either {@linkplain\n+ *  Subscription#request(long) request} all data until {@link\n+ *  BodySubscriber#onComplete() onComplete} or {@link\n+ *  BodySubscriber#onError(Throwable) onError} is signalled, or eventually\n+ *  {@linkplain Subscription#cancel() cancel} its subscription.\n+ *\n+ * <p id=\"closing\">\n+ * The JDK built-in implementation of the {@code HttpClient} overrides\n@@ -140,8 +158,1 @@\n- * read returned streams to exhaustion, such as streams provided when using\n- * {@link BodyHandlers#ofInputStream()}, {@link BodyHandlers#ofLines()}, or\n- * {@link BodyHandlers#ofPublisher()}, may prevent requests submitted\n- * before an {@linkplain #shutdown() orderly shutdown}\n- * to run to completion. Likewise, failing to\n- * {@linkplain Subscription#request(long) request data} or {@linkplain\n- * Subscription#cancel() cancel subscriptions} from a custom {@linkplain\n- * java.net.http.HttpResponse.BodySubscriber BodySubscriber} may stop\n+ * read {@link ##streaming streaming bodies} to exhaustion may stop\n@@ -149,1 +160,17 @@\n- * orderly shutdown}.\n+ * orderly shutdown}. The {@link #shutdownNow()} method will attempt\n+ * to cancel any such non-completed requests, but may cause\n+ * abrupt termination of any on going operation.\n+ *\n+ * <p id=\"gc\">\n+ * If not {@linkplain ##closing explicitly closed}, the JDK\n+ * built-in implementation of the {@code HttpClient} releases\n+ * its resources when an {@code HttpClient} instance is no longer\n+ * strongly reachable, and all operations started on that instance have\n+ * eventually completed. This relies both on the garbage collector\n+ * to notice that the instance is no longer reachable, and on all\n+ * requests started on the client to eventually complete. Failure\n+ * to properly close {@linkplain ##streaming streaming bodies} may\n+ * prevent the associated requests from running to completion, and\n+ * prevent the resources allocated by the associated client from\n+ * being reclaimed by the garbage collector.\n+ *\n@@ -158,1 +185,1 @@\n- * HttpResponse.BodySubscriber response body subscribers}, and {@linkplain\n+ * BodySubscriber response body subscribers}, and {@linkplain\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":40,"deletions":13,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -299,0 +299,7 @@\n+     *  @apiNote\n+     *  Some {@linkplain HttpResponse#body() body implementations} created by\n+     *  {@linkplain BodySubscribers##streaming-body body subscribers} may need to be\n+     *  properly closed, read, or cancelled for the associated resources to\n+     *  be reclaimed and for the associated request to {@linkplain HttpClient##closing\n+     *  run to completion}.\n+     *\n@@ -636,0 +643,7 @@\n+         * <p>\n+         * To ensure that all resources associated with the\n+         * corresponding exchange are properly released the caller must\n+         * eventually obtain and close the {@linkplain BodySubscribers#ofInputStream()\n+         * returned stream}.\n+         *\n+         * @return a {@linkplain HttpClient##streaming streaming} response body handler\n@@ -637,1 +651,0 @@\n-         * @return a response body handler\n@@ -654,1 +667,8 @@\n-         * @return a response body handler\n+         * @apiNote\n+         * To ensure that all resources associated with the\n+         * corresponding exchange are properly released the caller must\n+         * eventually obtain and close the {@linkplain BodySubscribers#ofLines(Charset)\n+         * returned stream}.\n+         *\n+         * @return a {@linkplain HttpClient##streaming streaming} response body handler\n+         *\n@@ -729,1 +749,2 @@\n-         * @apiNote See {@link BodySubscribers#ofPublisher()} for more\n+         * @apiNote\n+         * See {@link BodySubscribers#ofPublisher()} for more\n@@ -731,0 +752,7 @@\n+         * <p>\n+         * To ensure that all resources associated with the\n+         * corresponding exchange are properly released the caller must\n+         * subscribe to the publisher and conform to the rules outlined in\n+         * {@linkplain BodySubscribers#ofPublisher()}\n+         *\n+         * @return a {@linkplain HttpClient##streaming publishing} response body handler\n@@ -732,1 +760,0 @@\n-         * @return a response body handler\n@@ -843,1 +870,1 @@\n-         * @param pushPromiseHandler t he body handler to use for push promises\n+         * @param pushPromiseHandler the body handler to use for push promises\n@@ -940,0 +967,14 @@\n+     *  @apiNote\n+     *  <p id=\"streaming-body\">\n+     *  Some {@linkplain HttpResponse#body() body implementations} created by\n+     *  {@linkplain BodySubscriber#getBody() body subscribers} may allow response bytes\n+     *  to be streamed to the caller. These implementations are typically\n+     *  {@link AutoCloseable} and may need to be explicitly closed in order for\n+     *  the resources associated with the request and the client to be {@linkplain\n+     *  HttpClient##closing eventually reclaimed}.\n+     *  Some other implementations are {@linkplain  Publisher publishers} which need to be\n+     *  {@link BodySubscribers#ofPublisher() subscribed} in order for their associated\n+     *  resources to be released and for the associated request to {@linkplain\n+     *  HttpClient##closing run to completion}.\n+     *\n+     *\n@@ -1171,1 +1212,1 @@\n-         * @return a BodySubscriber\n+         * @return a body subscriber\n@@ -1202,2 +1243,2 @@\n-         * @return a body subscriber that streams the response body as an\n-         *         {@link InputStream}.\n+         * @return a {@linkplain HttpClient##streaming streaming body subscriber}\n+         *         that streams the response body as an {@link InputStream}.\n@@ -1228,2 +1269,2 @@\n-         * @return a body subscriber that streams the response body as a\n-         *         {@link Stream Stream}{@code <String>}.\n+         * @return a {@linkplain HttpClient##streaming streaming body subscriber} that streams\n+         *          the response body as a {@link Stream Stream}{@code <String>}.\n@@ -1271,1 +1312,2 @@\n-         * @return A {@code BodySubscriber} which publishes the response body\n+         * @return A {@linkplain HttpClient##streaming publishing body subscriber}\n+         *         which publishes the response body\n@@ -1273,0 +1315,1 @@\n+         *\n@@ -1285,1 +1328,1 @@\n-         * @return a {@code BodySubscriber}\n+         * @return a body subscriber\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpResponse.java","additions":56,"deletions":13,"binary":false,"changes":69,"status":"modified"}]}