{"files":[{"patch":"@@ -2010,1 +2010,2 @@\n-instruct reduce_addF(fRegF dst, fRegF src1, vReg src2, vReg tmp) %{\n+instruct reduce_addF_ordered(fRegF dst, fRegF src1, vReg src2, vReg tmp) %{\n+  predicate(n->as_Reduction()->requires_strict_order());\n@@ -2014,1 +2015,1 @@\n-  format %{ \"reduce_addF $dst, $src1, $src2\\t# KILL $tmp\" %}\n+  format %{ \"reduce_addF_ordered $dst, $src1, $src2\\t# KILL $tmp\" %}\n@@ -2025,1 +2026,18 @@\n-instruct reduce_addD(fRegD dst, fRegD src1, vReg src2, vReg tmp) %{\n+instruct reduce_addF_unordered(fRegF dst, fRegF src1, vReg src2, vReg tmp) %{\n+  predicate(!n->as_Reduction()->requires_strict_order());\n+  match(Set dst (AddReductionVF src1 src2));\n+  effect(TEMP tmp);\n+  ins_cost(VEC_COST);\n+  format %{ \"reduce_addF_unordered $dst, $src1, $src2\\t# KILL $tmp\" %}\n+  ins_encode %{\n+    __ vsetvli_helper(T_FLOAT, Matcher::vector_length(this, $src2));\n+    __ vfmv_s_f(as_VectorRegister($tmp$$reg), $src1$$FloatRegister);\n+    __ vfredusum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n+                    as_VectorRegister($tmp$$reg));\n+    __ vfmv_f_s($dst$$FloatRegister, as_VectorRegister($tmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct reduce_addD_ordered(fRegD dst, fRegD src1, vReg src2, vReg tmp) %{\n+  predicate(n->as_Reduction()->requires_strict_order());\n@@ -2029,1 +2047,1 @@\n-  format %{ \"reduce_addD $dst, $src1, $src2\\t# KILL $tmp\" %}\n+  format %{ \"reduce_addD_ordered $dst, $src1, $src2\\t# KILL $tmp\" %}\n@@ -2035,0 +2053,16 @@\n+    __ vfmv_f_s($dst$$FloatRegister, as_VectorRegister($tmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct reduce_addD_unordered(fRegD dst, fRegD src1, vReg src2, vReg tmp) %{\n+  predicate(!n->as_Reduction()->requires_strict_order());\n+  match(Set dst (AddReductionVD src1 src2));\n+  effect(TEMP tmp);\n+  ins_cost(VEC_COST);\n+  format %{ \"reduce_addD_unordered $dst, $src1, $src2\\t# KILL $tmp\" %}\n+  ins_encode %{\n+    __ vsetvli_helper(T_DOUBLE, Matcher::vector_length(this, $src2));\n+    __ vfmv_s_f(as_VectorRegister($tmp$$reg), $src1$$FloatRegister);\n+    __ vfredusum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n+                    as_VectorRegister($tmp$$reg));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":38,"deletions":4,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -59,0 +59,5 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VF, \">=1\"},\n+        failOn = {\"no_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -74,0 +79,5 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VD, \">=1\"},\n+        failOn = {\"no_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestVectorFPReduction.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,0 +84,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=8\"},\n+        counts = {IRNode.ADD_REDUCTION_VF, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -94,0 +100,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=16\"},\n+        counts = {IRNode.ADD_REDUCTION_VF, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -104,0 +116,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=32\"},\n+        counts = {IRNode.ADD_REDUCTION_VF, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -114,0 +132,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=64\"},\n+        counts = {IRNode.ADD_REDUCTION_VF, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -133,0 +157,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=16\"},\n+        counts = {IRNode.ADD_REDUCTION_VD, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -143,0 +173,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=32\"},\n+        counts = {IRNode.ADD_REDUCTION_VD, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n@@ -153,0 +189,6 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"v\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">=64\"},\n+        counts = {IRNode.ADD_REDUCTION_VD, \">=1\", \"no_strict_order\", \">=1\"},\n+        failOn = {\"requires_strict_order\"},\n+        phase = CompilePhase.PRINT_IDEAL)\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestVectorAddMulReduction.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"}]}