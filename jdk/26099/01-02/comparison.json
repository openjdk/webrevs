{"files":[{"patch":"@@ -1038,0 +1038,7 @@\n+        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"byte[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (byte)(i * 5));\n+                })\n+        );\n+\n@@ -1065,0 +1072,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1072,0 +1094,5 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1078,2 +1105,2 @@\n-           Stream.of(BYTE_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1038,0 +1038,7 @@\n+        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"byte[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (byte)(i * 5));\n+                })\n+        );\n+\n@@ -1065,0 +1072,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1072,0 +1094,5 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1078,2 +1105,2 @@\n-           Stream.of(BYTE_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1038,0 +1038,7 @@\n+        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"byte[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (byte)(i * 5));\n+                })\n+        );\n+\n@@ -1065,0 +1072,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1072,0 +1094,5 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1078,2 +1105,2 @@\n-           Stream.of(BYTE_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1038,0 +1038,7 @@\n+        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"byte[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (byte)(i * 5));\n+                })\n+        );\n+\n@@ -1065,0 +1072,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1072,0 +1094,5 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1078,2 +1105,2 @@\n-           Stream.of(BYTE_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1043,0 +1043,7 @@\n+        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"byte[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (byte)(i * 5));\n+                })\n+        );\n+\n@@ -1070,0 +1077,15 @@\n+    static final List<IntFunction<byte[]>> BYTE_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"byte[Byte.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE));\n+            }),\n+            withToString(\"byte[Byte.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(Byte.MAX_VALUE - 100));\n+            }),\n+            withToString(\"byte[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (byte)(-1));\n+            })\n+    );\n+\n@@ -1077,0 +1099,5 @@\n+    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1083,2 +1110,2 @@\n-           Stream.of(BYTE_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"int[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (int)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(INT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> INT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n@@ -3579,1 +3606,1 @@\n-\n+\/*\n@@ -6974,0 +7001,1 @@\n+ *\/\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":31,"deletions":3,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"int[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (int)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(INT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> INT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"int[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (int)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(INT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> INT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"int[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (int)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(INT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> INT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1033,0 +1033,7 @@\n+        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"int[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (int)(i * 5));\n+                })\n+        );\n+\n@@ -1060,0 +1067,15 @@\n+    static final List<IntFunction<int[]>> INT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"int[Integer.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE));\n+            }),\n+            withToString(\"int[Integer.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(Integer.MAX_VALUE - 100));\n+            }),\n+            withToString(\"int[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (int)(-1));\n+            })\n+    );\n+\n@@ -1067,0 +1089,5 @@\n+    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1073,2 +1100,2 @@\n-           Stream.of(INT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> INT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1018,0 +1018,7 @@\n+        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"long[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (long)(i * 5));\n+                })\n+        );\n+\n@@ -1045,0 +1052,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1052,0 +1074,5 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1058,2 +1085,2 @@\n-           Stream.of(LONG_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1018,0 +1018,7 @@\n+        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"long[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (long)(i * 5));\n+                })\n+        );\n+\n@@ -1045,0 +1052,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1052,0 +1074,5 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1058,2 +1085,2 @@\n-           Stream.of(LONG_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1018,0 +1018,7 @@\n+        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"long[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (long)(i * 5));\n+                })\n+        );\n+\n@@ -1045,0 +1052,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1052,0 +1074,5 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1058,2 +1085,2 @@\n-           Stream.of(LONG_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1018,0 +1018,7 @@\n+        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"long[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (long)(i * 5));\n+                })\n+        );\n+\n@@ -1045,0 +1052,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1052,0 +1074,5 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1058,2 +1085,2 @@\n-           Stream.of(LONG_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1023,0 +1023,7 @@\n+        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"long[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (long)(i * 5));\n+                })\n+        );\n+\n@@ -1050,0 +1057,15 @@\n+    static final List<IntFunction<long[]>> LONG_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"long[Long.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE));\n+            }),\n+            withToString(\"long[Long.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(Long.MAX_VALUE - 100));\n+            }),\n+            withToString(\"long[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (long)(-1));\n+            })\n+    );\n+\n@@ -1057,0 +1079,5 @@\n+    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1063,2 +1090,2 @@\n-           Stream.of(LONG_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"short[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (short)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(SHORT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"short[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (short)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(SHORT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"short[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (short)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(SHORT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1028,0 +1028,7 @@\n+        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"short[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (short)(i * 5));\n+                })\n+        );\n+\n@@ -1055,0 +1062,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1062,0 +1084,5 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1068,2 +1095,2 @@\n-           Stream.of(SHORT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1033,0 +1033,7 @@\n+        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"short[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> (short)(i * 5));\n+                })\n+        );\n+\n@@ -1060,0 +1067,15 @@\n+    static final List<IntFunction<short[]>> SHORT_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"short[Short.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE));\n+            }),\n+            withToString(\"short[Short.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(Short.MAX_VALUE - 100));\n+            }),\n+            withToString(\"short[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> (short)(-1));\n+            })\n+    );\n+\n@@ -1067,0 +1089,5 @@\n+    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1073,2 +1100,2 @@\n-           Stream.of(SHORT_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1300,0 +1300,7 @@\n+        static final List<IntFunction<$type$[]>> $TYPE$_GENERATORS_SATURATING_ASSOC = List.of(\n+                withToString(\"$type$[i * 5]\", (int s) -> {\n+                    return fill(s * BUFFER_REPS,\n+                                i -> ($type$)(i * 5));\n+                })\n+        );\n+\n@@ -1327,0 +1334,15 @@\n+    static final List<IntFunction<$type$[]>> $TYPE$_SATURATING_GENERATORS_ASSOC = List.of(\n+            withToString(\"$type$[$Boxtype$.MAX_VALUE]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)($Boxtype$.MAX_VALUE));\n+            }),\n+            withToString(\"$type$[$Boxtype$.MAX_VALUE - 100]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)($Boxtype$.MAX_VALUE - 100));\n+            }),\n+            withToString(\"$type$[-1]\", (int s) -> {\n+                return fill(s * BUFFER_REPS,\n+                            i -> ($type$)(-1));\n+            })\n+    );\n+\n@@ -1336,0 +1358,5 @@\n+    static final List<List<IntFunction<$type$[]>>> $TYPE$_SATURATING_GENERATOR_PAIRS_ASSOC =\n+        Stream.of($TYPE$_GENERATORS_SATURATING_ASSOC.get(0)).\n+                flatMap(fa -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n+                collect(Collectors.toList());\n+\n@@ -1342,2 +1369,2 @@\n-           Stream.of($TYPE$_GENERATOR_PAIRS.get(0)).\n-                   flatMap(pair -> $TYPE$_SATURATING_GENERATORS.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n+           $TYPE$_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n+                   flatMap(pair -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"}]}