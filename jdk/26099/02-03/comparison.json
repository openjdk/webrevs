{"files":[{"patch":"@@ -1038,7 +1038,0 @@\n-        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"byte[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (byte)(i * 5));\n-                })\n-        );\n-\n@@ -1094,5 +1087,0 @@\n-    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1105,3 +1093,4 @@\n-           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1038,7 +1038,0 @@\n-        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"byte[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (byte)(i * 5));\n-                })\n-        );\n-\n@@ -1094,5 +1087,0 @@\n-    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1105,3 +1093,4 @@\n-           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1038,7 +1038,0 @@\n-        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"byte[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (byte)(i * 5));\n-                })\n-        );\n-\n@@ -1094,5 +1087,0 @@\n-    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1105,3 +1093,4 @@\n-           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1038,7 +1038,0 @@\n-        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"byte[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (byte)(i * 5));\n-                })\n-        );\n-\n@@ -1094,5 +1087,0 @@\n-    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1105,3 +1093,4 @@\n-           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1043,7 +1043,0 @@\n-        static final List<IntFunction<byte[]>> BYTE_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"byte[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (byte)(i * 5));\n-                })\n-        );\n-\n@@ -1099,5 +1092,0 @@\n-    static final List<List<IntFunction<byte[]>>> BYTE_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(BYTE_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1110,3 +1098,4 @@\n-           BYTE_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(BYTE_GENERATORS.get(1))\n+                    .flatMap(fa -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> BYTE_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"int[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (int)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n@@ -3606,1 +3595,1 @@\n-\/*\n+\n@@ -7001,1 +6990,0 @@\n- *\/\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"int[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (int)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"int[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (int)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"int[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (int)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1033,7 +1033,0 @@\n-        static final List<IntFunction<int[]>> INT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"int[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (int)(i * 5));\n-                })\n-        );\n-\n@@ -1089,5 +1082,0 @@\n-    static final List<List<IntFunction<int[]>>> INT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(INT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1100,3 +1088,4 @@\n-           INT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(INT_GENERATORS.get(1))\n+                    .flatMap(fa -> INT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> INT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1018,7 +1018,0 @@\n-        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"long[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (long)(i * 5));\n-                })\n-        );\n-\n@@ -1074,5 +1067,0 @@\n-    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1085,3 +1073,4 @@\n-           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1018,7 +1018,0 @@\n-        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"long[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (long)(i * 5));\n-                })\n-        );\n-\n@@ -1074,5 +1067,0 @@\n-    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1085,3 +1073,4 @@\n-           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1018,7 +1018,0 @@\n-        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"long[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (long)(i * 5));\n-                })\n-        );\n-\n@@ -1074,5 +1067,0 @@\n-    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1085,3 +1073,4 @@\n-           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1018,7 +1018,0 @@\n-        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"long[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (long)(i * 5));\n-                })\n-        );\n-\n@@ -1074,5 +1067,0 @@\n-    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1085,3 +1073,4 @@\n-           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1023,7 +1023,0 @@\n-        static final List<IntFunction<long[]>> LONG_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"long[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (long)(i * 5));\n-                })\n-        );\n-\n@@ -1079,5 +1072,0 @@\n-    static final List<List<IntFunction<long[]>>> LONG_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(LONG_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1090,3 +1078,4 @@\n-           LONG_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(LONG_GENERATORS.get(1))\n+                    .flatMap(fa -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> LONG_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"short[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (short)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"short[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (short)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"short[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (short)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1028,7 +1028,0 @@\n-        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"short[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (short)(i * 5));\n-                })\n-        );\n-\n@@ -1084,5 +1077,0 @@\n-    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1095,3 +1083,4 @@\n-           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1033,7 +1033,0 @@\n-        static final List<IntFunction<short[]>> SHORT_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"short[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> (short)(i * 5));\n-                })\n-        );\n-\n@@ -1089,5 +1082,0 @@\n-    static final List<List<IntFunction<short[]>>> SHORT_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of(SHORT_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1100,3 +1088,4 @@\n-           SHORT_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of(SHORT_GENERATORS.get(1))\n+                    .flatMap(fa -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> SHORT_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1300,7 +1300,0 @@\n-        static final List<IntFunction<$type$[]>> $TYPE$_GENERATORS_SATURATING_ASSOC = List.of(\n-                withToString(\"$type$[i * 5]\", (int s) -> {\n-                    return fill(s * BUFFER_REPS,\n-                                i -> ($type$)(i * 5));\n-                })\n-        );\n-\n@@ -1358,5 +1351,0 @@\n-    static final List<List<IntFunction<$type$[]>>> $TYPE$_SATURATING_GENERATOR_PAIRS_ASSOC =\n-        Stream.of($TYPE$_GENERATORS_SATURATING_ASSOC.get(0)).\n-                flatMap(fa -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb))).\n-                collect(Collectors.toList());\n-\n@@ -1369,3 +1357,4 @@\n-           $TYPE$_SATURATING_GENERATOR_PAIRS_ASSOC.stream().\n-                   flatMap(pair -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f))).\n-                   collect(Collectors.toList());\n+            Stream.of($TYPE$_GENERATORS.get(1))\n+                    .flatMap(fa -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(fb -> List.of(fa, fb)))\n+                    .flatMap(pair -> $TYPE$_SATURATING_GENERATORS_ASSOC.stream().map(f -> List.of(pair.get(0), pair.get(1), f)))\n+                    .collect(Collectors.toList());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"}]}