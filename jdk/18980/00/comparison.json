{"files":[{"patch":"@@ -338,0 +338,4 @@\n+        \/\/ Print a notice if the documentation contains diagnostic markers\n+        if (messages.containsDiagnosticMarkers()) {\n+            messages.notice(\"doclet.contains.diagnostic.markers\");\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1614,0 +1614,1 @@\n+        messages.setContainsDiagnosticMarkers();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    private boolean containsDiagnosticMarkers = false;\n@@ -215,0 +216,15 @@\n+    \/**\n+     * {@return true if the generated documentation contains one or more diagnostic markers\n+     * for invalid input}\n+     *\/\n+    public boolean containsDiagnosticMarkers() {\n+        return containsDiagnosticMarkers;\n+    }\n+\n+    \/**\n+     * Sets the flag for documentation containing a diagnostic marker for invalid input.\n+     *\/\n+    public void setContainsDiagnosticMarkers() {\n+        this.containsDiagnosticMarkers = true;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Messages.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -265,0 +265,2 @@\n+doclet.contains.diagnostic.markers=\\\n+ The generated documentation contains diagnostic markers for invalid input.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8004834 8007610 8129909 8182765 8247815\n+ * @bug 8004834 8007610 8129909 8182765 8247815 8296175\n@@ -120,1 +120,4 @@\n-        OPT_BADPACKAGEARG(ERROR, \"error: Invalid argument for -Xdoclint\/package option\");\n+        OPT_BADPACKAGEARG(ERROR, \"error: Invalid argument for -Xdoclint\/package option\"),\n+\n+        \/\/ javadoc notice about markers for invalid input\n+        JD_NOTE_MARK(NOTE, \"The generated documentation contains diagnostic markers for invalid input.\");\n@@ -154,1 +157,2 @@\n-                    EnumSet.of(Message.DL_ERR10A, Message.DL_WRN14A));\n+                    EnumSet.of(Message.DL_ERR10A, Message.DL_WRN14A,\n+                            Message.JD_NOTE_MARK));\n@@ -158,1 +162,2 @@\n-                    EnumSet.of(Message.DL_ERR10, Message.DL_WRN14));\n+                    EnumSet.of(Message.DL_ERR10, Message.DL_WRN14,\n+                            Message.JD_NOTE_MARK));\n@@ -166,1 +171,2 @@\n-                    EnumSet.of(Message.DL_ERR10, Message.DL_WRN14));\n+                    EnumSet.of(Message.DL_ERR10, Message.DL_WRN14,\n+                            Message.JD_NOTE_MARK));\n@@ -178,1 +184,1 @@\n-                    EnumSet.of(Message.DL_WRN14));\n+                    EnumSet.of(Message.DL_WRN14, Message.JD_NOTE_MARK));\n@@ -182,1 +188,2 @@\n-                    EnumSet.of(Message.DL_ERR6, Message.DL_ERR10, Message.DL_WRN14));\n+                    EnumSet.of(Message.DL_ERR6, Message.DL_ERR10,\n+                            Message.DL_WRN14, Message.JD_NOTE_MARK));\n@@ -186,1 +193,2 @@\n-                    EnumSet.of(Message.DL_ERR6, Message.DL_WRN14));\n+                    EnumSet.of(Message.DL_ERR6, Message.DL_WRN14,\n+                            Message.JD_NOTE_MARK));\n@@ -190,1 +198,1 @@\n-                    EnumSet.of(Message.DL_ERR10));\n+                    EnumSet.of(Message.DL_ERR10, Message.JD_NOTE_MARK));\n@@ -202,1 +210,1 @@\n-                            Message.DL_WARN_P1TEST, Message.DL_WARN_P2TEST));\n+                            Message.DL_WARN_P1TEST, Message.DL_WARN_P2TEST, Message.JD_NOTE_MARK));\n@@ -207,1 +215,2 @@\n-                            Message.DL_WARN_P1TEST));\n+                            Message.DL_WARN_P1TEST,\n+                            Message.JD_NOTE_MARK));\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/doclint\/DocLintTest.java","additions":21,"deletions":12,"binary":false,"changes":33,"status":"modified"}]}