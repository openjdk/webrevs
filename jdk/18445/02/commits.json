[{"commit":{"message":"s\/cmpwi\/cmpdi  for intx value"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"59d9338952f654ae2d8275f12da3249a0f46e182"},{"commit":{"message":"Restore use of lwz for loading int flags"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"9c75c8347d6834cb278aaada91b5042dffced655"},{"commit":{"message":"s\/lw\/lwu to zero extend flags value"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"}],"sha":"bfe6275161b0131ec4b9c7dd2336f6bc35607f4a"},{"commit":{"message":"s\/lwz\/ld\/"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"1b2769ce779d9923d9975fc735d71f37fa086a18"},{"commit":{"message":"Missed a fix for ppc"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"32a62a27357efd2ac28fb085c35dc6b01af899cb"},{"commit":{"message":"Merge branch 'master' into 8327743-jni-monitor-count"},"files":[{"filename":"src\/hotspot\/share\/runtime\/javaThread.cpp"},{"filename":"src\/hotspot\/share\/runtime\/javaThread.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp"}],"sha":"6f92d4eda3b7ba52b313c6a8eb8a7f6822cdb2d0"},{"commit":{"message":"PPC fixes"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"df328861b707ebbafe177bb4316c20f5f4eb0dab"},{"commit":{"message":"Fix old comment.\nAdd missing @requires, as the logging only happens from continuation code"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/vthread\/JNIMonitor\/JNIMonitor.java"}],"sha":"9e92f888dd422ab489de1e36f6821aaba953d5e4"},{"commit":{"message":"Initial ppc version"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"}],"sha":"61f3f8f69197bb20c2de482b5f7134ff59f334f4"},{"commit":{"message":"riscv version - thanks Fredrik!"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"}],"sha":"f581219bb1a9c790bc17fc51e78e4395e7b0732d"},{"commit":{"message":"Restructure native library loading code to avoid problem with Driver mode"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/vthread\/JNIMonitor\/JNIMonitor.java"}],"sha":"9fa37c5c0e0c069c0a1b737a9abcdf5749e5031a"},{"commit":{"message":"Aaarch64 version - thanks Fredrik!"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"}],"sha":"e3e7c9ba4cc6d334b1a5797ddc0bcf98d4be91db"},{"commit":{"message":"Add explanatory comment"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"0552c6965d532a25840ef074a768194619b96267"},{"commit":{"message":"Expanded testcases that include leaving the monitor locked when a VT\nterminates. The faulting conditions are emulated using a custom scheduler."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/vthread\/JNIMonitor\/JNIMonitor.java"}],"sha":"450268ac34af2761af02c995c1724885f314476b"},{"commit":{"message":"Expand logging to include thread name"},"files":[{"filename":"src\/hotspot\/share\/runtime\/javaThread.cpp"}],"sha":"bcb609420ba82ccede513cf6465c00838eeedfd2"},{"commit":{"message":"Save RAX around VM call"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"17f570832c6d6f30eeac23947b8790f7222e275b"},{"commit":{"message":"Enhanced diagnostics for test output"},"files":[{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorInfo\/GetOwnedMonitorInfoTest.java"}],"sha":"659025739a50845a44d0acf7e433ecc1dcb9fe08"},{"commit":{"message":"Restructured the code so there is no additional logic executed in release builds unless CheckJNICalls is set."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"d2af44279ce0876e0200c378e3290b2be35d0595"},{"commit":{"message":"Remove changes to fill_continuation_entry as the count will always be zero when mounting a new vthread.\nFix the termination logic - the zeroing of the JNI count should not have been under the CheckJNICalls guard."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"e60ea9f2ab1ac3e071a9143a2876e7c6b8dc7d0d"},{"commit":{"message":"Fix previous version so we correctly zero the JNI monitor count for vthreads"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"3f8233ea9f2fa8a9403d4518a965b7a3fdf63b94"},{"commit":{"message":"Remove parent_jni_monitor_count again"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"48c7d90df8407e0bb471ee322807cf33d79c24d3"},{"commit":{"message":"Verify we are in a virtual thread continuation before doing the warning.\nMove the warning code prior to any values being pushed to the carrier thread."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"d6c1f610f0f7f130ce27e3f0554e3af5d14ccc73"},{"commit":{"message":"Fixed assert for the case of a detaching thread"},"files":[{"filename":"src\/hotspot\/share\/runtime\/javaThread.cpp"}],"sha":"ee3dfee68871b46b736439330149e0663e9e7c33"},{"commit":{"message":"Use correct format specifiers"},"files":[{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"}],"sha":"509ca1f2dc99afde1a90b628ccd608503b8fe7ac"},{"commit":{"message":"8327743: JVM crash in hotspot\/share\/runtime\/javaThread.cpp - failed: held monitor count should be equal to jni: 0 != 1"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/share\/runtime\/javaThread.cpp"},{"filename":"src\/hotspot\/share\/runtime\/javaThread.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp"}],"sha":"0a94adb813feab4578e0b1d130b48e9e23b632d8"}]