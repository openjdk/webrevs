{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.tools.javac.code.Lint;\n@@ -72,3 +73,0 @@\n-    \/** flag: is the \"preview\" lint category enabled? *\/\n-    private final boolean verbose;\n-\n@@ -91,0 +89,1 @@\n+    private final Lint rootLint;\n@@ -110,0 +109,1 @@\n+        rootLint = Lint.instance(context);\n@@ -111,1 +111,0 @@\n-        verbose = Lint.instance(context).isEnabled(LintCategory.PREVIEW);\n@@ -199,1 +198,1 @@\n-        previewHandler.report(pos, feature.isPlural() ?\n+        previewHandler.report(lint, pos, feature.isPlural() ?\n@@ -201,2 +200,1 @@\n-                LintWarnings.PreviewFeatureUse(feature.nameFragment()),\n-            lint.isEnabled(LintCategory.PREVIEW));\n+                LintWarnings.PreviewFeatureUse(feature.nameFragment()));\n@@ -212,1 +210,1 @@\n-        if (verbose) {\n+        if (rootLint.isEnabled(LintCategory.PREVIEW)) {\n@@ -228,1 +226,1 @@\n-        previewHandler.report(pos, warnKey, verbose);\n+        previewHandler.report(rootLint, pos, warnKey);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -240,7 +240,4 @@\n-            if (!lint.isSuppressed(LintCategory.REMOVAL)) {\n-                boolean verbose = lint.isEnabled(LintCategory.REMOVAL);\n-                if (sym.kind == MDL) {\n-                    removalHandler.report(pos, LintWarnings.HasBeenDeprecatedForRemovalModule(sym), verbose);\n-                } else {\n-                    removalHandler.report(pos, LintWarnings.HasBeenDeprecatedForRemoval(sym, sym.location()), verbose);\n-                }\n+            if (sym.kind == MDL) {\n+                removalHandler.report(lint, pos, LintWarnings.HasBeenDeprecatedForRemovalModule(sym));\n+            } else {\n+                removalHandler.report(lint, pos, LintWarnings.HasBeenDeprecatedForRemoval(sym, sym.location()));\n@@ -248,2 +245,1 @@\n-        } else if (!lint.isSuppressed(LintCategory.DEPRECATION)) {\n-            boolean verbose = lint.isEnabled(LintCategory.DEPRECATION);\n+        } else {\n@@ -251,1 +247,1 @@\n-                deprecationHandler.report(pos, LintWarnings.HasBeenDeprecatedModule(sym), verbose);\n+                deprecationHandler.report(lint, pos, LintWarnings.HasBeenDeprecatedModule(sym));\n@@ -253,1 +249,1 @@\n-                deprecationHandler.report(pos, LintWarnings.HasBeenDeprecated(sym, sym.location()), verbose);\n+                deprecationHandler.report(lint, pos, LintWarnings.HasBeenDeprecated(sym, sym.location()));\n@@ -289,2 +285,1 @@\n-        if (!lint.isSuppressed(LintCategory.UNCHECKED))\n-            uncheckedHandler.report(pos, warnKey, lint.isEnabled(LintCategory.UNCHECKED));\n+        uncheckedHandler.report(lint, pos, warnKey);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import com.sun.tools.javac.code.Lint;\n@@ -142,0 +143,1 @@\n+     * @param lint the applicable Lint configuration\n@@ -144,1 +146,0 @@\n-     * @param verbose true to emit a distinct warning, false just to register a deferred message\n@@ -146,1 +147,1 @@\n-    public void report(DiagnosticPosition pos, LintWarning warnKey, boolean verbose) {\n+    public void report(Lint lint, DiagnosticPosition pos, LintWarning warnKey) {\n@@ -150,1 +151,3 @@\n-        if (verbose) {\n+        if (lint.isSuppressed(lintCategory)) {\n+            return;\n+        } else if (lint.isEnabled(lintCategory)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/MandatoryWarningHandler.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -327,1 +327,3 @@\n-                            if (lint == Lint.ENABLE_PREVIEW && suppress == Suppress.NO) {\n+                            if (suppress == Suppress.YES) {\n+                                expected = Set.of();\n+                            } else if (lint == Lint.ENABLE_PREVIEW) {\n","filename":"test\/langtools\/tools\/javac\/preview\/PreviewErrors.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}