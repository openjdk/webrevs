{"files":[{"patch":"@@ -267,1 +267,1 @@\n-    blob = new (size) BufferBlob(name, CodeBlobKind::Blob_Buffer, size);\n+    blob = new (size) BufferBlob(name, CodeBlobKind::Buffer, size);\n@@ -289,1 +289,1 @@\n-    blob = new (size) BufferBlob(name, CodeBlobKind::Blob_Buffer, cb, size);\n+    blob = new (size) BufferBlob(name, CodeBlobKind::Buffer, cb, size);\n@@ -310,1 +310,1 @@\n-  BufferBlob(\"I2C\/C2I adapters\", CodeBlobKind::Blob_Adapter, cb, size) {\n+  BufferBlob(\"I2C\/C2I adapters\", CodeBlobKind::Adapter, cb, size) {\n@@ -345,1 +345,1 @@\n-  BufferBlob(name, CodeBlobKind::Blob_Vtable, size) {\n+  BufferBlob(name, CodeBlobKind::Vtable, size) {\n@@ -416,1 +416,1 @@\n-: RuntimeBlob(name, CodeBlobKind::Blob_Runtime_Stub, cb, size, sizeof(RuntimeStub),\n+: RuntimeBlob(name, CodeBlobKind::Runtime_Stub, cb, size, sizeof(RuntimeStub),\n@@ -473,1 +473,1 @@\n-: SingletonBlob(\"DeoptimizationBlob\", CodeBlobKind::Blob_Deoptimization, cb,\n+: SingletonBlob(\"DeoptimizationBlob\", CodeBlobKind::Deoptimization, cb,\n@@ -523,1 +523,1 @@\n-: SingletonBlob(\"UncommonTrapBlob\", CodeBlobKind::Blob_Uncommon_Trap, cb,\n+: SingletonBlob(\"UncommonTrapBlob\", CodeBlobKind::Uncommon_Trap, cb,\n@@ -560,1 +560,1 @@\n-: SingletonBlob(\"ExceptionBlob\", CodeBlobKind::Blob_Exception, cb,\n+: SingletonBlob(\"ExceptionBlob\", CodeBlobKind::Exception, cb,\n@@ -596,1 +596,1 @@\n-: SingletonBlob(\"SafepointBlob\", CodeBlobKind::Blob_Safepoint, cb,\n+: SingletonBlob(\"SafepointBlob\", CodeBlobKind::Safepoint, cb,\n@@ -623,1 +623,1 @@\n-  RuntimeBlob(name, CodeBlobKind::Blob_Upcall, cb, size, sizeof(UpcallStub),\n+  RuntimeBlob(name, CodeBlobKind::Upcall, cb, size, sizeof(UpcallStub),\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -78,13 +78,13 @@\n-  Blob_None,\n-  Blob_Nmethod,\n-  Blob_Buffer,\n-  Blob_Adapter,\n-  Blob_Vtable,\n-  Blob_MH_Adapter,\n-  Blob_Runtime_Stub,\n-  Blob_Deoptimization,\n-  Blob_Exception,\n-  Blob_Safepoint,\n-  Blob_Uncommon_Trap,\n-  Blob_Upcall,\n-  Blob_Number_Of_Kinds\n+  None,\n+  Nmethod,\n+  Buffer,\n+  Adapter,\n+  Vtable,\n+  MH_Adapter,\n+  Runtime_Stub,\n+  Deoptimization,\n+  Exception,\n+  Safepoint,\n+  Uncommon_Trap,\n+  Upcall,\n+  Number_Of_Kinds\n@@ -158,11 +158,11 @@\n-  bool is_nmethod() const                     { return _kind == CodeBlobKind::Blob_Nmethod; }\n-  bool is_buffer_blob() const                 { return _kind == CodeBlobKind::Blob_Buffer; }\n-  bool is_runtime_stub() const                { return _kind == CodeBlobKind::Blob_Runtime_Stub; }\n-  bool is_deoptimization_stub() const         { return _kind == CodeBlobKind::Blob_Deoptimization; }\n-  bool is_uncommon_trap_stub() const          { return _kind == CodeBlobKind::Blob_Uncommon_Trap; }\n-  bool is_exception_stub() const              { return _kind == CodeBlobKind::Blob_Exception; }\n-  bool is_safepoint_stub() const              { return _kind == CodeBlobKind::Blob_Safepoint; }\n-  bool is_adapter_blob() const                { return _kind == CodeBlobKind::Blob_Adapter; }\n-  bool is_vtable_blob() const                 { return _kind == CodeBlobKind::Blob_Vtable; }\n-  bool is_method_handles_adapter_blob() const { return _kind == CodeBlobKind::Blob_MH_Adapter; }\n-  bool is_upcall_stub() const                 { return _kind == CodeBlobKind::Blob_Upcall; }\n+  bool is_nmethod() const                     { return _kind == CodeBlobKind::Nmethod; }\n+  bool is_buffer_blob() const                 { return _kind == CodeBlobKind::Buffer; }\n+  bool is_runtime_stub() const                { return _kind == CodeBlobKind::Runtime_Stub; }\n+  bool is_deoptimization_stub() const         { return _kind == CodeBlobKind::Deoptimization; }\n+  bool is_uncommon_trap_stub() const          { return _kind == CodeBlobKind::Uncommon_Trap; }\n+  bool is_exception_stub() const              { return _kind == CodeBlobKind::Exception; }\n+  bool is_safepoint_stub() const              { return _kind == CodeBlobKind::Safepoint; }\n+  bool is_adapter_blob() const                { return _kind == CodeBlobKind::Adapter; }\n+  bool is_vtable_blob() const                 { return _kind == CodeBlobKind::Vtable; }\n+  bool is_method_handles_adapter_blob() const { return _kind == CodeBlobKind::MH_Adapter; }\n+  bool is_upcall_stub() const                 { return _kind == CodeBlobKind::Upcall; }\n@@ -328,1 +328,1 @@\n-  virtual void preserve_callee_argument_oops(frame fr, const RegisterMap* reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n+  void preserve_callee_argument_oops(frame fr, const RegisterMap* reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n@@ -330,3 +330,3 @@\n-  virtual void verify() override;\n-  virtual void print_on(outputStream* st) const override;\n-  virtual void print_value_on(outputStream* st) const override;\n+  void verify() override;\n+  void print_on(outputStream* st) const override;\n+  void print_value_on(outputStream* st) const override;\n@@ -365,1 +365,1 @@\n-  MethodHandlesAdapterBlob(int size): BufferBlob(\"MethodHandles adapters\", CodeBlobKind::Blob_MH_Adapter, size) {}\n+  MethodHandlesAdapterBlob(int size): BufferBlob(\"MethodHandles adapters\", CodeBlobKind::MH_Adapter, size) {}\n@@ -409,1 +409,1 @@\n-  virtual void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n+  void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n@@ -411,3 +411,3 @@\n-  virtual void verify() override;\n-  virtual void print_on(outputStream* st) const override;\n-  virtual void print_value_on(outputStream* st) const override;\n+  void verify() override;\n+  void print_on(outputStream* st) const override;\n+  void print_value_on(outputStream* st) const override;\n@@ -442,4 +442,4 @@\n-  virtual void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n-  virtual void verify() override; \/\/ does nothing\n-  virtual void print_on(outputStream* st) const override;\n-  virtual void print_value_on(outputStream* st) const override;\n+  void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override { \/* nothing to do *\/ }\n+  void verify() override; \/\/ does nothing\n+  void print_on(outputStream* st) const override;\n+  void print_value_on(outputStream* st) const override;\n@@ -491,1 +491,1 @@\n-  virtual void print_value_on(outputStream* st) const override;\n+  void print_value_on(outputStream* st) const override;\n@@ -635,2 +635,2 @@\n-  virtual void preserve_callee_argument_oops(frame fr, const RegisterMap* reg_map, OopClosure* f) override;\n-  virtual void verify() override;\n+  void preserve_callee_argument_oops(frame fr, const RegisterMap* reg_map, OopClosure* f) override;\n+  void verify() override;\n@@ -639,2 +639,2 @@\n-  virtual void print_on(outputStream* st) const override;\n-  virtual void print_value_on(outputStream* st) const override;\n+  void print_on(outputStream* st) const override;\n+  void print_value_on(outputStream* st) const override;\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -1214,1 +1214,1 @@\n-  : CodeBlob(\"native nmethod\", CodeBlobKind::Blob_Nmethod, code_buffer, nmethod_size, sizeof(nmethod),\n+  : CodeBlob(\"native nmethod\", CodeBlobKind::Nmethod, code_buffer, nmethod_size, sizeof(nmethod),\n@@ -1359,1 +1359,1 @@\n-  : CodeBlob(\"nmethod\", CodeBlobKind::Blob_Nmethod, code_buffer, nmethod_size, sizeof(nmethod),\n+  : CodeBlob(\"nmethod\", CodeBlobKind::Nmethod, code_buffer, nmethod_size, sizeof(nmethod),\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -753,1 +753,1 @@\n-  virtual void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override;\n+  void preserve_callee_argument_oops(frame fr, const RegisterMap *reg_map, OopClosure* f) override;\n@@ -771,1 +771,1 @@\n-  virtual void clear_inline_caches();\n+  void clear_inline_caches();\n@@ -804,1 +804,1 @@\n-  virtual void purge(bool free_code_cache_data, bool unregister_nmethod) override;\n+  void purge(bool free_code_cache_data, bool unregister_nmethod) override;\n@@ -892,1 +892,1 @@\n-  virtual void verify() override;\n+  void verify() override;\n@@ -904,2 +904,2 @@\n-  virtual void print()                  const override;\n-  void print(outputStream* st)          const;\n+  void print()                 const override;\n+  void print(outputStream* st) const;\n@@ -934,1 +934,1 @@\n-  virtual void print_on(outputStream* st) const override { CodeBlob::print_on(st); }\n+  void print_on(outputStream* st) const override { CodeBlob::print_on(st); }\n@@ -943,1 +943,1 @@\n-  virtual void print_block_comment(outputStream* stream, address block_begin) const override {\n+  void print_block_comment(outputStream* stream, address block_begin) const override {\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-\/\/ (a) the given PC belongs to a nmethod and\n+\/\/ (a) the given PC belongs to an nmethod and\n","filename":"src\/hotspot\/share\/code\/nmethod.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-\/\/ This is the behaviour for checking if a nmethod is unloading\n+\/\/ This is the behaviour for checking if an nmethod is unloading\n","filename":"src\/hotspot\/share\/gc\/shared\/gcBehaviours.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-  virtual bool has_dead_oop(nmethod* const nm) const {\n+  virtual bool has_dead_oop(nmethod* nm) const {\n@@ -93,1 +93,1 @@\n-  virtual bool lock(nmethod* const nm) {\n+  virtual bool lock(nmethod* nm) {\n@@ -100,1 +100,1 @@\n-  virtual void unlock(nmethod* const nm) {\n+  virtual void unlock(nmethod* nm) {\n@@ -106,1 +106,1 @@\n-  virtual bool is_safe(nmethod* const nm) {\n+  virtual bool is_safe(nmethod* nm) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-  virtual bool has_dead_oop(nmethod* const nm) const {\n+  virtual bool has_dead_oop(nmethod* nm) const {\n@@ -89,1 +89,1 @@\n-  virtual bool lock(nmethod* const nm) {\n+  virtual bool lock(nmethod* nm) {\n@@ -95,1 +95,1 @@\n-  virtual void unlock(nmethod* const nm) {\n+  virtual void unlock(nmethod* nm) {\n@@ -100,1 +100,1 @@\n-  virtual bool is_safe(nmethod* const nm) {\n+  virtual bool is_safe(nmethod* nm) {\n","filename":"src\/hotspot\/share\/gc\/x\/xUnload.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-  virtual bool has_dead_oop(nmethod* const nm) const {\n+  virtual bool has_dead_oop(nmethod* nm) const {\n@@ -92,1 +92,1 @@\n-  virtual bool lock(nmethod* const nm) {\n+  virtual bool lock(nmethod* nm) {\n@@ -98,1 +98,1 @@\n-  virtual void unlock(nmethod* const nm) {\n+  virtual void unlock(nmethod* nm) {\n@@ -103,1 +103,1 @@\n-  virtual bool is_safe(nmethod* const nm) {\n+  virtual bool is_safe(nmethod* nm) {\n","filename":"src\/hotspot\/share\/gc\/z\/zUnload.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1610,1 +1610,1 @@\n-      ::new (blob) BufferBlob(\"WB::DummyBlob\", CodeBlobKind::Blob_Buffer, full_size);\n+      ::new (blob) BufferBlob(\"WB::DummyBlob\", CodeBlobKind::Buffer, full_size);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  nmethod*       _deopt_nmethod;                 \/\/ nmethod that is currently being deoptimized\n+  nmethod*      _deopt_nmethod;                  \/\/ nmethod that is currently being deoptimized\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1781,1 +1781,1 @@\n-  \/\/ The check above makes sure this is a nmethod.\n+  \/\/ The check above makes sure this is an nmethod.\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1288,1 +1288,1 @@\n-\/\/ (See CompiledMethod::is_at_poll_return())\n+\/\/ (See nmethod::is_at_poll_return())\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}