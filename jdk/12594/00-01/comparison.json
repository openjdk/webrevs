{"files":[{"patch":"@@ -30,0 +30,2 @@\n+import jdk.test.lib.util.ForceGC;\n+\n@@ -35,0 +37,2 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n@@ -39,2 +43,1 @@\n-    private static final long ENQUEUE_TIMEOUT = 1_000; \/\/ 1 sec, in millis\n-    private static final int MAX_ATTEMPTS = 5;\n+    private static final long ENQUEUE_TIMEOUT = 50;\n@@ -51,1 +54,1 @@\n-    private static void test(Frame frame) throws InterruptedException {\n+    private static void test(Frame frame) {\n@@ -68,12 +71,1 @@\n-        int count = 1;\n-        Reference<? extends List> ref;\n-        do {\n-            System.out.println(\"Attempt \" + count);\n-            System.gc();\n-            System.out.println(\"    GC invoked\");\n-            ref = referenceQueue.remove(ENQUEUE_TIMEOUT);\n-            System.out.println(\"    ref: \" + ref);\n-        } while (++count <= MAX_ATTEMPTS\n-                 && ref != phantomListRef);\n-\n-        if (ref != phantomListRef) {\n+        if (!ForceGC.wait(() -> phantomListRef == remove(referenceQueue))) {\n@@ -83,0 +75,8 @@\n+\n+    private static Reference<?> remove(ReferenceQueue<?> queue) {\n+        try {\n+            return queue.remove(ENQUEUE_TIMEOUT);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n","filename":"test\/jdk\/java\/awt\/List\/ListGarbageCollectionTest\/AwtListGarbageCollectionTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}