{"files":[{"patch":"@@ -82,1 +82,0 @@\n-import java.security.AccessController;\n@@ -103,2 +102,0 @@\n-import sun.security.action.GetBooleanAction;\n-import sun.security.action.GetPropertyAction;\n@@ -125,1 +122,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -127,1 +123,1 @@\n-        if (AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.nativedebug\"))) {\n+        if (Boolean.getBoolean(\"sun.awt.nativedebug\")) {\n@@ -131,2 +127,1 @@\n-            GetPropertyAction.privilegedGetProperty(\n-                \"awt.touchKeyboardAutoShowIsEnabled\", \"true\"));\n+            System.getProperty(\"awt.touchKeyboardAutoShowIsEnabled\", \"true\"));\n@@ -234,1 +229,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -236,1 +230,1 @@\n-            AccessController.doPrivileged(new GetBooleanAction(\"awt.lock.fair\")));\n+            Boolean.getBoolean(\"awt.lock.fair\"));\n@@ -676,1 +670,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -678,1 +671,1 @@\n-        return AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.noerasebackground\"));\n+        return Boolean.getBoolean(\"sun.awt.noerasebackground\");\n@@ -685,1 +678,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -687,1 +679,1 @@\n-        return AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.erasebackgroundonresize\"));\n+        return Boolean.getBoolean(\"sun.awt.erasebackgroundonresize\");\n@@ -1161,1 +1153,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1165,2 +1156,1 @@\n-            language = AccessController.doPrivileged(\n-                            new GetPropertyAction(\"user.language\", \"en\"));\n+            language = System.getProperty(\"user.language\", \"en\");\n@@ -1168,2 +1158,1 @@\n-            region = AccessController.doPrivileged(\n-                            new GetPropertyAction(\"user.region\"));\n+            region = System.getProperty(\"user.region\");\n@@ -1181,4 +1170,2 @@\n-                country = AccessController.doPrivileged(\n-                                new GetPropertyAction(\"user.country\", \"\"));\n-                variant = AccessController.doPrivileged(\n-                                new GetPropertyAction(\"user.variant\", \"\"));\n+                country = System.getProperty(\"user.country\", \"\");\n+                variant = System.getProperty(\"user.variant\", \"\");\n@@ -1205,3 +1192,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String noxembed = AccessController.\n-            doPrivileged(new GetPropertyAction(\"sun.awt.noxembed\", \"false\"));\n+        String noxembed = System.getProperty(\"sun.awt.noxembed\", \"false\");\n@@ -1239,1 +1224,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1241,1 +1225,1 @@\n-        return AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.xembedserver\"));\n+        return Boolean.getBoolean(\"sun.awt.xembedserver\");\n@@ -1761,1 +1745,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1768,3 +1751,1 @@\n-                systemAAFonts =\n-                    AccessController.doPrivileged(\n-                         new GetPropertyAction(\"awt.useSystemAAFontSettings\"));\n+                systemAAFonts = System.getProperty(\"awt.useSystemAAFontSettings\");\n@@ -1864,1 +1845,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1867,2 +1847,1 @@\n-            sunAwtDisableMixing = AccessController.doPrivileged(\n-                                      new GetBooleanAction(\"sun.awt.disableMixing\"));\n+            sunAwtDisableMixing = Boolean.getBoolean(\"sun.awt.disableMixing\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":13,"deletions":34,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -167,7 +166,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Object>() {\n-            public Object run() {\n-                feeder.interrupt();\n-                return null;\n-            }\n-        });\n+        feeder.interrupt();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageDecoder.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -279,1 +279,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -313,16 +312,9 @@\n-       java.security.AccessController.doPrivileged(\n-           new java.security.PrivilegedAction<Object>() {\n-               public Object run() {\n-                   for (int i = 0; i < info.fetchers.length; i++) {\n-                       if (info.fetchers[i] == null) {\n-                           ImageFetcher f = new ImageFetcher(fetcherGroup, i);\n-                       try {\n-                           f.start();\n-                           info.fetchers[i] = f;\n-                           info.numFetchers++;\n-                           break;\n-                       } catch (Error e) {\n-                       }\n-                   }\n-                 }\n-                 return null;\n+       for (int i = 0; i < info.fetchers.length; i++) {\n+           if (info.fetchers[i] == null) {\n+               ImageFetcher f = new ImageFetcher(fetcherGroup, i);\n+               try {\n+                   f.start();\n+                   info.fetchers[i] = f;\n+                   info.numFetchers++;\n+                   break;\n+               } catch (Error e) {\n@@ -330,2 +322,2 @@\n-           });\n-       return;\n+           }\n+        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageFetcher.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -92,12 +88,0 @@\n-    static class AccWeakReference<T> extends WeakReference<T> {\n-\n-         @SuppressWarnings(\"removal\")\n-         private final AccessControlContext acc;\n-\n-         @SuppressWarnings(\"removal\")\n-         AccWeakReference(T ref) {\n-             super(ref);\n-             acc = AccessController.getContext();\n-         }\n-    }\n-\n@@ -109,1 +93,1 @@\n-        private final AccWeakReference<ImageObserver> myref;\n+        private final WeakReference<ImageObserver> myref;\n@@ -113,1 +97,1 @@\n-            myref = new AccWeakReference<ImageObserver>(obs);\n+            myref = new WeakReference<ImageObserver>(obs);\n@@ -139,14 +123,0 @@\n-        @SuppressWarnings(\"removal\")\n-        private static boolean update(ImageObserver iw, AccessControlContext acc,\n-                                      Image img, int info,\n-                                      int x, int y, int w, int h) {\n-\n-            if (acc != null || System.getSecurityManager() != null) {\n-                return AccessController.doPrivileged(\n-                       (PrivilegedAction<Boolean>) () -> {\n-                            return iw.imageUpdate(img, info, x, y, w, h);\n-                      }, acc);\n-            }\n-            return false;\n-        }\n-\n@@ -162,1 +132,1 @@\n-            } else if (update(myiw, myref.acc, img, info, x, y, w, h) == false) {\n+            } else if (myiw.imageUpdate(img, info, x, y, w, h) == false) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageWatched.java","additions":3,"deletions":33,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -54,1 +52,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings(\"restricted\")\n@@ -93,12 +91,7 @@\n-        PrivilegedAction<Boolean> doMlibInitialization =\n-            new PrivilegedAction<Boolean>() {\n-                public Boolean run() {\n-                    try {\n-                        System.loadLibrary(\"mlib_image\");\n-                    } catch (UnsatisfiedLinkError e) {\n-                        return Boolean.FALSE;\n-                    }\n-                    boolean success = init();\n-                    return Boolean.valueOf(success);\n-                }\n-            };\n+        boolean success;\n+        try {\n+            System.loadLibrary(\"mlib_image\");\n+            success = init();\n+        } catch (UnsatisfiedLinkError e) {\n+            success = false;\n+        }\n@@ -106,1 +99,1 @@\n-        useLib = AccessController.doPrivileged(doMlibInitialization);\n+        useLib = Boolean.valueOf(success);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImagingLib.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings(\"restricted\")\n@@ -57,7 +57,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"javajpeg\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"javajpeg\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/JPEGImageDecoder.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -57,7 +57,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"awt\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"awt\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/NativeLibLoader.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -40,3 +39,1 @@\n-        Boolean.parseBoolean(java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\n-                    \"sun.java2d.vsynclimit\", \"true\")));\n+        Boolean.parseBoolean(System.getProperty(\"sun.java2d.vsynclimit\", \"true\"));\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/VSyncedBSManager.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -90,3 +89,1 @@\n-        String perfLoggingProp =\n-            java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"sun.perflog\"));\n+        String perfLoggingProp = System.getProperty(\"sun.perflog\");\n@@ -97,3 +94,1 @@\n-            String perfNanoProp =\n-                java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\"sun.perflog.nano\"));\n+            String perfNanoProp = System.getProperty(\"sun.perflog.nano\");\n@@ -110,15 +105,9 @@\n-                    java.security.AccessController.doPrivileged(\n-                    new java.security.PrivilegedAction<Void>() {\n-                        public Void run() {\n-                            try {\n-                                File logFile = new File(logFileName);\n-                                logFile.createNewFile();\n-                                logWriter = new FileWriter(logFile);\n-                            } catch (Exception e) {\n-                                System.out.println(e + \": Creating logfile \" +\n-                                                   logFileName +\n-                                                   \".  Log to console\");\n-                            }\n-                            return null;\n-                        }\n-                    });\n+                    try {\n+                        File logFile = new File(logFileName);\n+                        logFile.createNewFile();\n+                        logWriter = new FileWriter(logFile);\n+                    } catch (Exception e) {\n+                        System.out.println(e + \": Creating logfile \" +\n+                                           logFileName +\n+                                           \".  Log to console\");\n+                    }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/util\/PerformanceLogger.java","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,1 +51,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings(\"restricted\")\n@@ -65,7 +63,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"awt\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"awt\");\n@@ -73,2 +65,1 @@\n-        String type = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\"sun.java2d.reftype\"));\n+        String type = System.getProperty(\"sun.java2d.reftype\");\n@@ -85,10 +76,7 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            String name = \"Java2D Disposer\";\n-            ThreadGroup rootTG = ThreadGroupUtils.getRootThreadGroup();\n-            Thread t = new Thread(rootTG, disposerInstance, name, 0, false);\n-            t.setContextClassLoader(null);\n-            t.setDaemon(true);\n-            t.setPriority(Thread.MAX_PRIORITY);\n-            t.start();\n-            return null;\n-        });\n+        String name = \"Java2D Disposer\";\n+        ThreadGroup rootTG = ThreadGroupUtils.getRootThreadGroup();\n+        Thread t = new Thread(rootTG, disposerInstance, name, 0, false);\n+        t.setContextClassLoader(null);\n+        t.setDaemon(true);\n+        t.setPriority(Thread.MAX_PRIORITY);\n+        t.start();\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/Disposer.java","additions":10,"deletions":22,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import java.security.AccessController;\n@@ -53,1 +52,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -68,1 +66,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -70,2 +67,1 @@\n-            = \"true\".equals(AccessController.doPrivileged(\n-            new GetPropertyAction(\"sun.java2d.uiScale.enabled\", \"true\")));\n+            = \"true\".equals(System.getProperty(\"sun.java2d.uiScale.enabled\", \"true\"));\n@@ -296,3 +292,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String scaleFactor = AccessController.doPrivileged(\n-                new GetPropertyAction(propertyName, \"-1\"));\n+        String scaleFactor = System.getProperty(propertyName, \"-1\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphicsEnvironment.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,3 +41,0 @@\n-import java.security.AccessController;\n-import sun.security.action.GetPropertyAction;\n-\n@@ -73,3 +70,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String manimg = AccessController.doPrivileged(\n-            new GetPropertyAction(\"sun.java2d.managedimages\"));\n+        String manimg = System.getProperty(\"sun.java2d.managedimages\");\n@@ -82,3 +77,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String num = AccessController.doPrivileged(\n-            new GetPropertyAction(\"sun.java2d.accthreshold\"));\n+        String num = System.getProperty(\"sun.java2d.accthreshold\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SurfaceDataProxy.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -30,3 +30,0 @@\n-import java.security.AccessController;\n-\n-import sun.security.action.GetPropertyAction;\n@@ -48,3 +45,1 @@\n-        GetPropertyAction gpa = new GetPropertyAction(\"sun.java2d.cmm\");\n-        @SuppressWarnings(\"removal\")\n-        String cmmProviderClass = AccessController.doPrivileged(gpa);\n+        String cmmProviderClass = System.getProperty(\"sun.java2d.cmm\");\n@@ -70,3 +65,1 @@\n-        gpa = new GetPropertyAction(\"sun.java2d.cmm.trace\");\n-        @SuppressWarnings(\"removal\")\n-        String cmmTrace = AccessController.doPrivileged(gpa);\n+        String cmmTrace = System.getProperty(\"sun.java2d.cmm.trace\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/CMSManager.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -152,11 +152,5 @@\n-        java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<Object>() {\n-                    public Object run() {\n-                        \/* We need to load awt here because of usage trace and\n-                         * disposer frameworks\n-                         *\/\n-                        System.loadLibrary(\"awt\");\n-                        System.loadLibrary(\"lcms\");\n-                        return null;\n-                    }\n-                });\n+        \/* We need to load awt here because of usage trace and\n+         * disposer frameworks\n+         *\/\n+        System.loadLibrary(\"awt\");\n+        System.loadLibrary(\"lcms\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMS.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,2 +39,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -49,1 +47,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -339,3 +336,1 @@\n-        GetPropertyAction gpa = new GetPropertyAction(\"sun.java2d.trace\");\n-        @SuppressWarnings(\"removal\")\n-        String trace = AccessController.doPrivileged(gpa);\n+        String trace = System.getProperty(\"sun.java2d.trace\");\n@@ -404,11 +399,6 @@\n-                @SuppressWarnings(\"removal\")\n-                FileOutputStream o = AccessController.doPrivileged(\n-                    new PrivilegedAction<FileOutputStream>() {\n-                        public FileOutputStream run() {\n-                            try {\n-                                return new FileOutputStream(tracefile);\n-                            } catch (FileNotFoundException e) {\n-                                return null;\n-                            }\n-                        }\n-                    });\n+                FileOutputStream o;\n+                try {\n+                    o = new FileOutputStream(tracefile);\n+                } catch (FileNotFoundException e) {\n+                    o = null;\n+                }\n@@ -428,1 +418,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -430,9 +419,6 @@\n-            AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-                TraceReporter t = new TraceReporter();\n-                Thread thread = new Thread(\n-                        ThreadGroupUtils.getRootThreadGroup(), t,\n-                        \"TraceReporter\", 0, false);\n-                thread.setContextClassLoader(null);\n-                Runtime.getRuntime().addShutdownHook(thread);\n-                return null;\n-            });\n+            TraceReporter t = new TraceReporter();\n+            Thread thread = new Thread(\n+                    ThreadGroupUtils.getRootThreadGroup(), t,\n+                    \"TraceReporter\", 0, false);\n+            thread.setContextClassLoader(null);\n+            Runtime.getRuntime().addShutdownHook(thread);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/loops\/GraphicsPrimitive.java","additions":13,"deletions":27,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.security.AccessController;\n@@ -43,1 +42,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -1122,4 +1120,2 @@\n-        @SuppressWarnings(\"removal\")\n-        final String refType = AccessController.doPrivileged(\n-                            new GetPropertyAction(\"sun.java2d.renderer.useRef\",\n-                            \"soft\"));\n+        final String refType = System.getProperty(\"sun.java2d.renderer.useRef\",\n+                            \"soft\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/DMarlinRenderingEngine.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.security.AccessController;\n@@ -30,1 +29,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -291,1 +289,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -293,2 +290,1 @@\n-        return AccessController.doPrivileged(\n-                  new GetPropertyAction(key, def));\n+        return System.getProperty(key, def);\n@@ -297,1 +293,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -299,2 +294,1 @@\n-        return Boolean.parseBoolean(AccessController.doPrivileged(\n-                  new GetPropertyAction(key, def)));\n+        return Boolean.parseBoolean(System.getProperty(key, def));\n@@ -306,3 +300,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final String property = AccessController.doPrivileged(\n-                                    new GetPropertyAction(key));\n+        final String property = System.getProperty(key);\n@@ -337,3 +329,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final String property = AccessController.doPrivileged(\n-                                    new GetPropertyAction(key));\n+        final String property = System.getProperty(key);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/MarlinProperties.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -360,1 +358,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -362,3 +359,1 @@\n-            AccessController.doPrivileged(\n-                (PrivilegedAction<Void>) () -> {\n-                    final Thread hook = new Thread(\n+            final Thread hook = new Thread(\n@@ -374,2 +369,2 @@\n-                    hook.setContextClassLoader(null);\n-                    Runtime.getRuntime().addShutdownHook(hook);\n+            hook.setContextClassLoader(null);\n+            Runtime.getRuntime().addShutdownHook(hook);\n@@ -377,8 +372,6 @@\n-                    if (USE_DUMP_THREAD) {\n-                        final Timer statTimer = new Timer(\"RendererStats\");\n-                        statTimer.scheduleAtFixedRate(new TimerTask() {\n-                            @Override\n-                            public void run() {\n-                                dump();\n-                            }\n-                        }, DUMP_INTERVAL, DUMP_INTERVAL);\n+            if (USE_DUMP_THREAD) {\n+                final Timer statTimer = new Timer(\"RendererStats\");\n+                statTimer.scheduleAtFixedRate(new TimerTask() {\n+                    @Override\n+                    public void run() {\n+                        dump();\n@@ -386,3 +379,2 @@\n-                    return null;\n-                }\n-            );\n+                }, DUMP_INTERVAL, DUMP_INTERVAL);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/RendererStats.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -47,1 +45,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -53,1 +50,1 @@\n-        flusher = AccessController.doPrivileged((PrivilegedAction<QueueFlusher>) QueueFlusher::new);\n+        flusher = new QueueFlusher();\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/opengl\/OGLRenderQueue.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -181,4 +181,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String fbo = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\n-                    \"sun.java2d.opengl.fbobject\"));\n+            String fbo = System.getProperty(\"sun.java2d.opengl.fbobject\");\n@@ -188,4 +185,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String lcd = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\n-                    \"sun.java2d.opengl.lcdshader\"));\n+            String lcd = System.getProperty(\"sun.java2d.opengl.lcdshader\");\n@@ -195,4 +189,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String biop = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\n-                    \"sun.java2d.opengl.biopshader\"));\n+            String biop = System.getProperty(\"sun.java2d.opengl.biopshader\");\n@@ -202,4 +193,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String grad = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\n-                    \"sun.java2d.opengl.gradshader\"));\n+            String grad = System.getProperty(\"sun.java2d.opengl.gradshader\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/opengl\/OGLSurfaceData.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -33,3 +33,0 @@\n-import java.security.AccessController;\n-import sun.security.action.GetPropertyAction;\n-\n@@ -123,4 +120,1 @@\n-        GetPropertyAction gpa =\n-            new GetPropertyAction(\"sun.java2d.renderer\");\n-        @SuppressWarnings(\"removal\")\n-        String reClass = AccessController.doPrivileged(gpa);\n+        String reClass = System.getProperty(\"sun.java2d.renderer\");\n@@ -147,3 +141,1 @@\n-        gpa = new GetPropertyAction(\"sun.java2d.renderer.verbose\");\n-        @SuppressWarnings(\"removal\")\n-        String verbose = AccessController.doPrivileged(gpa);\n+        String verbose = System.getProperty(\"sun.java2d.renderer.verbose\");\n@@ -154,3 +146,1 @@\n-        gpa = new GetPropertyAction(\"sun.java2d.renderer.trace\");\n-        @SuppressWarnings(\"removal\")\n-        String reTrace = AccessController.doPrivileged(gpa);\n+        String reTrace = System.getProperty(\"sun.java2d.renderer.trace\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/pipe\/RenderingEngine.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -341,1 +341,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -343,10 +342,2 @@\n-       \/\/enable privileges so initProps can access system properties,\n-        \/\/ open the property file, etc.\n-        java.security.AccessController.doPrivileged(\n-                            new java.security.PrivilegedAction<Object>() {\n-            public Object run() {\n-                mFontProps = initProps();\n-                isMac = OSInfo.getOSType() == OSInfo.OSType.MACOSX;\n-                return null;\n-            }\n-        });\n+        mFontProps = initProps();\n+        isMac = OSInfo.getOSType() == OSInfo.OSType.MACOSX;\n@@ -515,1 +506,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -554,1 +544,1 @@\n-                    java.security.AccessController.doPrivileged(po);\n+                    po.run();\n@@ -644,14 +634,7 @@\n-            Boolean isPS = java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<Boolean>() {\n-                    public Boolean run() {\n-                       try {\n-                           Class<?> psClass = Class.forName(\"sun.print.IPPPrintService\");\n-                           if (psClass.isInstance(pservice)) {\n-                               Method isPSMethod = psClass.getMethod(\"isPostscript\",\n-                                                                     (Class[])null);\n-                               return (Boolean)isPSMethod.invoke(pservice, (Object[])null);\n-                           }\n-                       } catch (Throwable t) {\n-                       }\n-                       return Boolean.TRUE;\n-                    }\n+            Boolean isPS = Boolean.TRUE;\n+            try {\n+                Class<?> psClass = Class.forName(\"sun.print.IPPPrintService\");\n+                if (psClass.isInstance(pservice)) {\n+                    Method isPSMethod = psClass.getMethod(\"isPostscript\",\n+                                                          (Class[])null);\n+                    isPS = (Boolean)isPSMethod.invoke(pservice, (Object[])null);\n@@ -659,1 +642,2 @@\n-            );\n+            } catch (Throwable t) {\n+            }\n@@ -680,1 +664,1 @@\n-    \/\/ Inner class to run \"privileged\" to open the printer output stream.\n+    \/\/ Inner class to open the printer output stream.\n@@ -682,1 +666,1 @@\n-    private class PrinterOpener implements java.security.PrivilegedAction<OutputStream> {\n+    private class PrinterOpener {\n@@ -707,1 +691,1 @@\n-    \/\/ Inner class to run \"privileged\" to invoke the system print command\n+    \/\/ Inner class to invoke the system print command\n@@ -709,1 +693,1 @@\n-    private class PrinterSpooler implements java.security.PrivilegedAction<Object> {\n+    private class PrinterSpooler {\n@@ -770,1 +754,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -775,10 +758,3 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Object>() {\n-\n-            public Object run() {\n-               if (spoolFile != null && spoolFile.exists()) {\n-                   spoolFile.delete();\n-               }\n-               return null;\n-            }\n-        });\n+        if (spoolFile != null && spoolFile.exists()) {\n+            spoolFile.delete();\n+        }\n@@ -792,1 +768,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -817,1 +792,1 @@\n-            java.security.AccessController.doPrivileged(spooler);\n+            spooler.run();\n@@ -862,13 +837,8 @@\n-            @SuppressWarnings(\"removal\")\n-            Boolean isPS = java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<Boolean>() {\n-                    public Boolean run() {\n-                        try {\n-                            Class<?> psClass =\n-                                Class.forName(\"sun.print.IPPPrintService\");\n-                            if (psClass.isInstance(pservice)) {\n-                                Method isPSMethod =\n-                                    psClass.getMethod(\"isPostscript\",\n-                                                      (Class[])null);\n-                                return (Boolean)\n-                                    isPSMethod.invoke(pservice,\n+            Boolean isPS = Boolean.TRUE;\n+            try {\n+                Class<?> psClass = Class.forName(\"sun.print.IPPPrintService\");\n+                if (psClass.isInstance(pservice)) {\n+                    Method isPSMethod =\n+                                psClass.getMethod(\"isPostscript\",\n+                                                  (Class[])null);\n+                    isPS = (Boolean) isPSMethod.invoke(pservice,\n@@ -876,8 +846,3 @@\n-                            }\n-                        } catch (Throwable t) {\n-                        }\n-                        return Boolean.TRUE;\n-                    }\n-                    }\n-                );\n-\n+                }\n+            } catch (Throwable t) {\n+            }\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PSPrinterJob.java","additions":31,"deletions":66,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -177,3 +177,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String forceStr = java.security.AccessController.doPrivileged(\n-                   new sun.security.action.GetPropertyAction(FORCE_PIPE_PROP));\n+        String forceStr = System.getProperty(FORCE_PIPE_PROP);\n@@ -189,3 +187,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String shapeTextStr =java.security.AccessController.doPrivileged(\n-                   new sun.security.action.GetPropertyAction(SHAPE_TEXT_PROP));\n+        String shapeTextStr = System.getProperty(SHAPE_TEXT_PROP);\n@@ -734,13 +730,1 @@\n-        @SuppressWarnings(\"removal\")\n-        PrintService service = java.security.AccessController.doPrivileged(\n-                               new java.security.PrivilegedAction<PrintService>() {\n-                public PrintService run() {\n-                    PrintService service = getPrintService();\n-                    if (service == null) {\n-                        ServiceDialog.showNoPrintService(gc);\n-                        return null;\n-                    }\n-                    return service;\n-                }\n-            });\n-\n+        PrintService service = getPrintService();\n@@ -748,0 +732,1 @@\n+            ServiceDialog.showNoPrintService(gc);\n@@ -815,13 +800,1 @@\n-        @SuppressWarnings(\"removal\")\n-        PrintService service = java.security.AccessController.doPrivileged(\n-                               new java.security.PrivilegedAction<PrintService>() {\n-                public PrintService run() {\n-                    PrintService service = getPrintService();\n-                    if (service == null) {\n-                        ServiceDialog.showNoPrintService(gc);\n-                        return null;\n-                    }\n-                    return service;\n-                }\n-            });\n-\n+        PrintService service = getPrintService();\n@@ -829,0 +802,1 @@\n+            ServiceDialog.showNoPrintService(gc);\n@@ -956,1 +930,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1011,12 +984,1 @@\n-        PrintService service = java.security.AccessController.doPrivileged(\n-                               new java.security.PrivilegedAction<PrintService>() {\n-                public PrintService run() {\n-                    PrintService service = getPrintService();\n-                    if (service == null) {\n-                        ServiceDialog.showNoPrintService(gc);\n-                        return null;\n-                    }\n-                    return service;\n-                }\n-            });\n-\n+        PrintService service = getPrintService();\n@@ -1024,0 +986,1 @@\n+            ServiceDialog.showNoPrintService(gc);\n@@ -1036,7 +999,1 @@\n-            services = java.security.AccessController.doPrivileged(\n-                       new java.security.PrivilegedAction<PrintService[]>() {\n-                public PrintService[] run() {\n-                    PrintService[] services = PrinterJob.lookupPrintServices();\n-                    return services;\n-                }\n-            });\n+            services = PrinterJob.lookupPrintServices();\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":9,"deletions":52,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -452,1 +452,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -454,13 +453,6 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Object>() {\n-                public Object run() {\n-                    try {\n-                        messageRB = ResourceBundle.getBundle(strBundle);\n-                        return null;\n-                    } catch (java.util.MissingResourceException e) {\n-                        throw new Error(\"Fatal: Resource for ServiceUI \" +\n-                                        \"is missing\");\n-                    }\n-                }\n-            }\n-        );\n+        try {\n+            messageRB = ResourceBundle.getBundle(strBundle);\n+        } catch (java.util.MissingResourceException e) {\n+            throw new Error(\"Fatal: Resource for ServiceUI \" +\n+                            \"is missing\");\n+        }\n@@ -546,9 +538,1 @@\n-        @SuppressWarnings(\"removal\")\n-        URL url = java.security.AccessController.doPrivileged(\n-                       new java.security.PrivilegedAction<URL>() {\n-                public URL run() {\n-                    URL url = ServiceDialog.class.getResource(\n-                                                  \"resources\/\" + key);\n-                    return url;\n-                }\n-        });\n+        URL url = ServiceDialog.class.getResource(\"resources\/\" + key);\n@@ -2947,8 +2931,1 @@\n-            @SuppressWarnings(\"removal\")\n-            Icon icon = java.security.AccessController.doPrivileged(\n-                                 new java.security.PrivilegedAction<Icon>() {\n-                public Icon run() {\n-                    Icon icon = new ImageIcon(imgURL);\n-                    return icon;\n-                }\n-            });\n+            Icon icon = new ImageIcon(imgURL);\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/ServiceDialog.java","additions":8,"deletions":31,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import java.security.AccessController;\n@@ -58,1 +57,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -108,3 +106,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static boolean copyBufferEnabled = \"true\".equals(AccessController.\n-            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n+    private static boolean copyBufferEnabled = \"true\".equals(\n+            System.getProperty(\"swing.jlf.copyBufferEnabled\", \"true\"));\n@@ -117,1 +114,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -124,2 +120,1 @@\n-        copyBufferEnabled = \"true\".equals(AccessController.\n-            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n+        copyBufferEnabled = \"true\".equals(System.getProperty(\"swing.jlf.copyBufferEnabled\", \"true\"));\n@@ -334,1 +329,1 @@\n-    @SuppressWarnings({\"removal\",\"serial\"}) \/\/ anonymous class inside\n+    @SuppressWarnings(\"serial\") \/\/ anonymous class inside\n@@ -395,2 +390,1 @@\n-        if (\"true\".equals(AccessController.\n-            doPrivileged(new GetPropertyAction(\"swing.jlf.contentPaneTransparent\", \"false\"))))\n+        if (\"true\".equals(System.getProperty(\"swing.jlf.contentPaneTransparent\", \"false\")))\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/JLightweightFrame.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -64,2 +64,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -1709,4 +1707,2 @@\n-            @SuppressWarnings(\"removal\")\n-            byte[] buffer = enablePrivileges ? AccessController.doPrivileged(\n-                    (PrivilegedAction<byte[]>) ()\n-                    -> getIconBytes(baseClass, rootClass, imageFile))\n+            byte[] buffer = enablePrivileges ?\n+                    getIconBytes(baseClass, rootClass, imageFile)\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/SwingUtilities2.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}