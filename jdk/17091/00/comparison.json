{"files":[{"patch":"@@ -119,1 +119,0 @@\n-  AdaptivePaddedAverage* avg_major_pause() const { return _avg_major_pause; }\n@@ -163,1 +162,0 @@\n-  \/\/ Time accessors\n@@ -229,4 +227,0 @@\n-  size_t average_old_live_in_bytes() const {\n-    return (size_t) avg_old_live()->average();\n-  }\n-\n@@ -255,34 +249,0 @@\n-  \/\/ Return true if the old generation size was changed\n-  \/\/ to try to reach a pause time goal.\n-  bool old_gen_changed_for_pauses() {\n-    bool result = _change_old_gen_for_maj_pauses != 0 ||\n-                  _change_old_gen_for_min_pauses != 0;\n-    return result;\n-  }\n-\n-  \/\/ Return true if the young generation size was changed\n-  \/\/ to try to reach a pause time goal.\n-  bool young_gen_changed_for_pauses() {\n-    bool result = _change_young_gen_for_min_pauses != 0 ||\n-                  _change_young_gen_for_maj_pauses != 0;\n-    return result;\n-  }\n-  \/\/ end flags for pause goal\n-\n-  \/\/ Return true if the old generation size was changed\n-  \/\/ to try to reach a throughput goal.\n-  bool old_gen_changed_for_throughput() {\n-    bool result = _change_old_gen_for_throughput != 0;\n-    return result;\n-  }\n-\n-  \/\/ Return true if the young generation size was changed\n-  \/\/ to try to reach a throughput goal.\n-  bool young_gen_changed_for_throughput() {\n-    bool result = _change_young_gen_for_throughput != 0;\n-    return result;\n-  }\n-\n-  int decrease_for_footprint() { return _decrease_for_footprint; }\n-\n-\n@@ -296,5 +256,0 @@\n-  LinearLeastSquareFit* major_pause_young_estimator() {\n-    return _major_pause_young_estimator;\n-  }\n-\n-\n@@ -307,1 +262,0 @@\n-  double major_collection_slope() { return _major_collection_estimator->slope();}\n","filename":"src\/hotspot\/share\/gc\/parallel\/psAdaptiveSizePolicy.hpp","additions":0,"deletions":46,"binary":false,"changes":46,"status":"modified"}]}