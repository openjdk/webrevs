{"files":[{"patch":"@@ -525,1 +525,1 @@\n-  assert(elem_bt == T_BYTE, \"\");\n+  assert(elem_bt == T_BYTE, \"Shuffles use byte array based backing storage.\");\n@@ -529,2 +529,2 @@\n-  Node* mod_val = gvn().makecon(TypeInt::make(num_elem-1));\n-  Node* bcast_mod  = gvn().transform(VectorNode::scalar2vector(mod_val, num_elem, type_bt));\n+  Node* mod_mask = gvn().makecon(TypeInt::make(num_elem-1));\n+  Node* bcast_mod_mask  = gvn().transform(VectorNode::scalar2vector(mod_mask, num_elem, type_bt));\n@@ -540,1 +540,1 @@\n-  index_vec = gvn().transform(VectorNode::make(Op_AndV, index_vec, bcast_mod, vt));\n+  index_vec = gvn().transform(VectorNode::make(Op_AndV, index_vec, bcast_mod_mask, vt));\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-* @requires vm.compiler2.enabled\n@@ -33,0 +32,1 @@\n+* @run main\/othervm -XX:+UnlockDiagnosticVMOptions -Xbatch -XX:TieredStopAtLevel=3 compiler.vectorapi.TestTwoVectorPermute\n@@ -44,1 +44,1 @@\n-   public static void validate(float [] res, float [] shuf, float [] src1, float [] src2) {\n+   public static void validate(float[] res, float[] shuf, float[] src1, float[] src2) {\n@@ -65,1 +65,1 @@\n-   public static void micro(float [] res, float [] shuf, float [] src1, float [] src2) {\n+   public static void micro(float[] res, float[] shuf, float[] src1, float[] src2) {\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestTwoVectorPermute.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}