{"files":[{"patch":"@@ -353,1 +353,1 @@\n-  Node* wrap_indexes(Node* index_vec, int num_elem, BasicType type_bt);\n+  Node* partially_wrap_indexes(Node* index_vec, int num_elem, BasicType type_bt);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-Node* LibraryCallKit::wrap_indexes(Node* index_vec, int num_elem, BasicType elem_bt) {\n+Node* LibraryCallKit::partially_wrap_indexes(Node* index_vec, int num_elem, BasicType elem_bt) {\n@@ -622,1 +622,1 @@\n-     res = wrap_indexes(res, num_elem, elem_bt);\n+     res = partially_wrap_indexes(res, num_elem, elem_bt);\n@@ -2409,1 +2409,1 @@\n-     op = wrap_indexes(op, num_elem_to, elem_bt_to);\n+     op = partially_wrap_indexes(op, num_elem_to, elem_bt_to);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+           int shuf_index = (int)shuf[i];\n@@ -48,3 +49,3 @@\n-           if (shuf[i] < 0 || shuf[i] >= FSP.length()) {\n-               int wrapped_index = ((int)shuf[i] & (FSP.length() - 1));\n-               if (Integer.compareUnsigned((int)shuf[i], FSP.length()) > 0) {\n+           if (shuf_index < 0 || shuf_index >= FSP.length()) {\n+               int wrapped_index = (shuf_index & (FSP.length() - 1));\n+               if (Integer.compareUnsigned(shuf_index, FSP.length()) > 0) {\n@@ -56,1 +57,1 @@\n-               expected = src1[(int)shuf[i]];\n+               expected = src1[shuf_index];\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestTwoVectorPermute.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}