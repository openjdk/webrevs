{"files":[{"patch":"@@ -60,1 +60,1 @@\n-  \/\/ constant pool index.  It assumes it is being called with a index that is less than 0\n+  \/\/ constant pool index.\n","filename":"src\/hotspot\/share\/classfile\/resolutionErrors.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -720,2 +720,1 @@\n-        int which = rawIndex;\n-        final HotSpotResolvedJavaMethod method = compilerToVM().lookupMethodInPool(this, which, (byte) opcode, (HotSpotResolvedJavaMethodImpl) caller);\n+        final HotSpotResolvedJavaMethod method = compilerToVM().lookupMethodInPool(this, rawIndex, (byte) opcode, (HotSpotResolvedJavaMethodImpl) caller);\n@@ -726,2 +725,2 @@\n-            String name = compilerToVM().lookupNameInPool(this, which, opcode);\n-            HotSpotSignature signature = new HotSpotSignature(runtime(), compilerToVM().lookupSignatureInPool(this, which, opcode));\n+            String name = compilerToVM().lookupNameInPool(this, rawIndex, opcode);\n+            HotSpotSignature signature = new HotSpotSignature(runtime(), compilerToVM().lookupSignatureInPool(this, rawIndex, opcode));\n@@ -731,1 +730,1 @@\n-                final int klassIndex = getKlassRefIndexAt(which, opcode);\n+                final int klassIndex = getKlassRefIndexAt(rawIndex, opcode);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}