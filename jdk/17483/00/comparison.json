{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import static com.sun.tools.javac.tree.JCTree.Tag.LITERAL;\n@@ -419,1 +420,1 @@\n-                    if (arg.type == syms.botType) {\n+                    if (arg.type == syms.botType && arg.hasTag(LITERAL)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/StringConcat.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @compile StringConcatWithAssignments.java\n+ * @run main StringConcatWithAssignments\n+ * @compile -XDstringConcat=inline StringConcatWithAssignments.java\n+ * @run main StringConcatWithAssignments\n+ * @compile -XDstringConcat=indy StringConcatWithAssignments.java\n+ * @run main StringConcatWithAssignments\n+ * @compile -XDstringConcat=indyWithConstants StringConcatWithAssignments.java\n+ * @run main StringConcatWithAssignments\n+ *\/\n+\n+import java.util.Objects;\n+import java.util.function.Supplier;\n+\n+public class StringConcatWithAssignments {\n+    public static void main(String[] args) {\n+        StringConcatWithAssignments instance = new StringConcatWithAssignments();\n+        assertEquals(\"nulltrue\", instance.assignment());\n+        assertEquals(\"nulltrue\", instance.invocation());\n+    }\n+    private String assignment() {\n+        boolean b;\n+        return ((((b = true) ? null : null) + \"\") + b);\n+    }\n+    private String invocation() {\n+        StringBuilder sideEffect = new StringBuilder();\n+        Supplier<Boolean> provider = () -> {\n+            sideEffect.append(true);\n+            return true;\n+        };\n+        return (((provider.get() ? null : null) + \"\") + sideEffect.toString());\n+    }\n+    private static void assertEquals(Object o1, Object o2) {\n+        if (!Objects.equals(o1, o2)) {\n+            throw new AssertionError(\"Expected that '\" + o1 + \"' and \" +\n+                                     \"'\" + o2 + \"' are equal.\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/StringConcatWithAssignments.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}