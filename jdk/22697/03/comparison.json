{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-            Thread t = new Thread(r);\n+            Thread t = InnocuousThread.newThread(r);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/ThreadPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.nio.file.*;\n@@ -30,0 +29,1 @@\n+import java.nio.file.*;\n@@ -31,0 +31,1 @@\n+import jdk.internal.misc.InnocuousThread;\n@@ -56,5 +57,1 @@\n-        Thread thr = new Thread(null,\n-                                this,\n-                                \"FileSystemWatchService\",\n-                                0,\n-                                false);\n+        Thread thr = InnocuousThread.newThread(\"FileSystemWatchService\", this);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/AbstractPoller.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import jdk.internal.misc.Unsafe;\n@@ -30,0 +29,2 @@\n+import jdk.internal.misc.InnocuousThread;\n+import jdk.internal.misc.Unsafe;\n@@ -34,2 +35,2 @@\n- * task is executed by invoking the {@link runInterruptibly} method defined\n- * here and cancelled by invoking Thread.interrupt.\n+ * task is executed by invoking the {@linkplain #runInterruptibly} method\n+ * defined here and cancelled by invoking Thread.interrupt.\n@@ -120,1 +121,1 @@\n-        Thread t = new Thread(null, task, \"NIO-Task\", 0, false);\n+        Thread t = InnocuousThread.newThread(\"CancellableOp\", task);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/Cancellable.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+import jdk.internal.misc.InnocuousThread;\n@@ -76,1 +77,1 @@\n-                     Thread t = new Thread(null, r, \"FileSystemWatcher\", 0, false);\n+                     Thread t = InnocuousThread.newThread(\"FileSystemWatcher\", r);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/PollingWatchService.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                Thread connThread = new Thread(connector) {\n+                Thread connThread = new Thread(connector, \"LoopbackConnector\") {\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PipeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}