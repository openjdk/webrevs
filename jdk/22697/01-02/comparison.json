{"files":[{"patch":"@@ -41,0 +41,2 @@\n+    private final boolean isUninterruptible;\n+\n@@ -54,0 +56,10 @@\n+    \/**\n+     * Returns a new InnocuousThread with an auto-generated thread name,\n+     * and its context class loader is set to the system class loader, and\n+     * it is uninterruptible.\n+     *\/\n+    public static Thread newUninterruptibleThread(Runnable target) {\n+        return createThread(newName(), target, 0L,\n+                ClassLoader.getSystemClassLoader(), -1, true);\n+    }\n+\n@@ -68,1 +80,1 @@\n-                ClassLoader.getSystemClassLoader(), priority);\n+                ClassLoader.getSystemClassLoader(), priority, false);\n@@ -91,1 +103,1 @@\n-        return createThread(name, target, 0L, null, priority);\n+        return createThread(name, target, 0L, null, priority, false);\n@@ -100,1 +112,1 @@\n-        return createThread(name, target, stackSize, null, priority);\n+        return createThread(name, target, stackSize, null, priority, false);\n@@ -104,1 +116,2 @@\n-                                       ClassLoader loader, int priority) {\n+                                       ClassLoader loader, int priority,\n+                                       boolean isUninterruptible) {\n@@ -106,1 +119,1 @@\n-                target, name, stackSize, loader);\n+                target, name, stackSize, loader, isUninterruptible);\n@@ -114,1 +127,2 @@\n-                            long stackSize, ClassLoader tccl) {\n+                            long stackSize, ClassLoader tccl,\n+                            boolean isUninterruptible) {\n@@ -116,0 +130,1 @@\n+        this.isUninterruptible = isUninterruptible;\n@@ -119,0 +134,6 @@\n+    @Override\n+    public void interrupt() {\n+        if (!isUninterruptible)\n+            super.interrupt();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/InnocuousThread.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import jdk.internal.misc.InnocuousThread;\n@@ -81,4 +82,1 @@\n-                Thread connThread = new Thread(connector) {\n-                    @Override\n-                    public void interrupt() {}\n-                };\n+                Thread connThread = InnocuousThread.newUninterruptibleThread(connector);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PipeImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}