{"files":[{"patch":"@@ -41,2 +41,0 @@\n-    private final boolean isUninterruptible;\n-\n@@ -56,10 +54,0 @@\n-    \/**\n-     * Returns a new InnocuousThread with an auto-generated thread name,\n-     * and its context class loader is set to the system class loader, and\n-     * it is uninterruptible.\n-     *\/\n-    public static Thread newUninterruptibleThread(Runnable target) {\n-        return createThread(newName(), target, 0L,\n-                ClassLoader.getSystemClassLoader(), -1, true);\n-    }\n-\n@@ -80,1 +68,1 @@\n-                ClassLoader.getSystemClassLoader(), priority, false);\n+                ClassLoader.getSystemClassLoader(), priority);\n@@ -103,1 +91,1 @@\n-        return createThread(name, target, 0L, null, priority, false);\n+        return createThread(name, target, 0L, null, priority);\n@@ -112,1 +100,1 @@\n-        return createThread(name, target, stackSize, null, priority, false);\n+        return createThread(name, target, stackSize, null, priority);\n@@ -116,2 +104,1 @@\n-                                       ClassLoader loader, int priority,\n-                                       boolean isUninterruptible) {\n+                                       ClassLoader loader, int priority) {\n@@ -119,1 +106,1 @@\n-                target, name, stackSize, loader, isUninterruptible);\n+                target, name, stackSize, loader);\n@@ -127,2 +114,1 @@\n-                            long stackSize, ClassLoader tccl,\n-                            boolean isUninterruptible) {\n+                            long stackSize, ClassLoader tccl) {\n@@ -130,1 +116,0 @@\n-        this.isUninterruptible = isUninterruptible;\n@@ -134,6 +119,0 @@\n-    @Override\n-    public void interrupt() {\n-        if (!isUninterruptible)\n-            super.interrupt();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/InnocuousThread.java","additions":6,"deletions":27,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import jdk.internal.misc.InnocuousThread;\n@@ -82,1 +81,4 @@\n-                Thread connThread = InnocuousThread.newUninterruptibleThread(connector);\n+                Thread connThread = new Thread(connector, \"LoopbackConnector\") {\n+                    @Override\n+                    public void interrupt() {}\n+                };\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PipeImpl.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}