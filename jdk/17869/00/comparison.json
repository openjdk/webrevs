{"files":[{"patch":"@@ -171,20 +171,0 @@\n-size_t ContiguousSpace::block_size(const HeapWord* p) const {\n-  assert(MemRegion(bottom(), end()).contains(p),\n-         \"p (\" PTR_FORMAT \") not in space [\" PTR_FORMAT \", \" PTR_FORMAT \")\",\n-         p2i(p), p2i(bottom()), p2i(end()));\n-  HeapWord* current_top = top();\n-  assert(p <= current_top,\n-         \"p > current top - p: \" PTR_FORMAT \", current top: \" PTR_FORMAT,\n-         p2i(p), p2i(current_top));\n-  assert(p == current_top || oopDesc::is_oop(cast_to_oop(p)),\n-         \"p (\" PTR_FORMAT \") is not a block start - \"\n-         \"current_top: \" PTR_FORMAT \", is_oop: %s\",\n-         p2i(p), p2i(current_top), BOOL_TO_STR(oopDesc::is_oop(cast_to_oop(p))));\n-  if (p < current_top) {\n-    return cast_to_oop(p)->size();\n-  } else {\n-    assert(p == current_top, \"just checking\");\n-    return pointer_delta(end(), (HeapWord*) p);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -136,5 +136,0 @@\n-  \/\/ Requires \"addr\" to be the start of a chunk, and returns its size.\n-  \/\/ \"addr + size\" is required to be the start of a new chunk, or the end\n-  \/\/ of the active area of the heap.\n-  virtual size_t block_size(const HeapWord* addr) const = 0;\n-\n@@ -261,1 +256,0 @@\n-  size_t block_size(const HeapWord* p) const override;\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}