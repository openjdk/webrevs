{"files":[{"patch":"@@ -192,0 +192,2 @@\n+            JavaThing coder = getField(\"coder\");\n+            boolean compact = ((JavaByte)coder).value == 0;\n@@ -193,1 +195,1 @@\n-                return ((JavaValueArray)value).valueAsString();\n+                return ((JavaValueArray)value).valueAsString(compact);\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaObject.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -352,1 +352,1 @@\n-    public String valueAsString() {\n+    public String valueAsString(boolean compact) {\n@@ -355,3 +355,14 @@\n-            byte[] bytes = new byte[things.length];\n-            for (int i = 0; i < things.length; i++) {\n-                bytes[i] = ((JavaByte)things[i]).value;\n+            if (compact) {\n+                byte[] bytes = new byte[things.length];\n+                for (int i = 0; i < things.length; i++) {\n+                    bytes[i] = ((JavaByte)things[i]).value;\n+                }\n+                return new String(bytes);\n+            } else {\n+                char[] chars = new char[things.length \/ 2];\n+                for (int i = 0; i < things.length; i += 2) {\n+                    byte b1 = ((JavaByte)things[i]).value;\n+                    byte b2 = ((JavaByte)things[i + 1]).value;\n+                    chars[i \/ 2] = (char)(b1 + (b2 << 8));\n+                }\n+                return new String(chars);\n@@ -359,1 +370,0 @@\n-            return new String(bytes);\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaValueArray.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}