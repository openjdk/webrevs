{"files":[{"patch":"@@ -191,0 +191,5 @@\n+            JavaThing coder = getField(\"coder\");\n+            boolean compact = false;\n+            if (coder instanceof JavaByte) {\n+                compact = ((JavaByte)coder).value == 0;\n+            }\n@@ -193,1 +198,1 @@\n-                return ((JavaValueArray)value).valueAsString();\n+                return ((JavaValueArray)value).valueAsString(compact);\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaObject.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.nio.ByteOrder;\n@@ -351,0 +352,12 @@\n+    private static final int STRING_HI_BYTE_SHIFT;\n+    private static final int STRING_LO_BYTE_SHIFT;\n+    static {\n+        if (ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN) {\n+            STRING_HI_BYTE_SHIFT = 8;\n+            STRING_LO_BYTE_SHIFT = 0;\n+        } else {\n+            STRING_HI_BYTE_SHIFT = 0;\n+            STRING_LO_BYTE_SHIFT = 8;\n+        }\n+    }\n+\n@@ -352,1 +365,1 @@\n-    public String valueAsString() {\n+    public String valueAsString(boolean compact) {\n@@ -355,3 +368,14 @@\n-            byte[] bytes = new byte[things.length];\n-            for (int i = 0; i < things.length; i++) {\n-                bytes[i] = ((JavaByte)things[i]).value;\n+            if (compact) {\n+                byte[] bytes = new byte[things.length];\n+                for (int i = 0; i < things.length; i++) {\n+                    bytes[i] = ((JavaByte)things[i]).value;\n+                }\n+                return new String(bytes);\n+            } else {\n+                char[] chars = new char[things.length \/ 2];\n+                for (int i = 0; i < things.length; i += 2) {\n+                    int b1 = ((JavaByte)things[i]).value     << STRING_HI_BYTE_SHIFT;\n+                    int b2 = ((JavaByte)things[i + 1]).value << STRING_LO_BYTE_SHIFT;\n+                    chars[i \/ 2] = (char)(b1 | b2);\n+                }\n+                return new String(chars);\n@@ -359,1 +383,0 @@\n-            return new String(bytes);\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaValueArray.java","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"}]}