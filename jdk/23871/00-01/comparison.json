{"files":[{"patch":"@@ -2000,2 +2000,0 @@\n-  const Node* to_push = nullptr;\n-\n@@ -2004,1 +2002,1 @@\n-  if (new_type != nullptr && new_type->is_con()) {\n+  if (\n@@ -2006,2 +2004,1 @@\n-    to_push = parent;\n-  } else if ((use_op == Op_LShiftI || use_op == Op_LShiftL) && use->in(2) == parent) {\n+    (new_type != nullptr && new_type->is_con()) ||\n@@ -2009,5 +2006,1 @@\n-    to_push = use;\n-  }\n-  if (to_push == nullptr) {\n-    return;\n-  }\n+    ((use_op == Op_LShiftI || use_op == Op_LShiftL) && use->in(2) == parent)) {\n@@ -2015,10 +2008,11 @@\n-  auto is_boundary = [](Node* n) {\n-    return !(n->is_ConstraintCast() || n->Opcode() == Op_ConvI2L);\n-  };\n-  auto push_and_uses_to_worklist = [&](Node* n){\n-    uint opc = n->Opcode();\n-    if (opc == Op_AndI || opc == Op_AndL) {\n-      push_if_not_bottom_type(worklist, n);\n-    }\n-  };\n-  to_push->visit_uses(push_and_uses_to_worklist, is_boundary);\n+    auto push_and_uses_to_worklist = [&](Node* n) {\n+      uint opc = n->Opcode();\n+      if (opc == Op_AndI || opc == Op_AndL) {\n+        push_if_not_bottom_type(worklist, n);\n+      }\n+    };\n+    auto is_boundary = [](Node* n) {\n+      return !(n->is_ConstraintCast() || n->Opcode() == Op_ConvI2L);\n+    };\n+    use->visit_uses(push_and_uses_to_worklist, is_boundary);\n+  }\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2025, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8350563\n+ * @summary Test that And nodes are added to the CCP worklist if they have a constant as input.\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation compiler.c2.TestAndConZeroCCP\n+ *\/\n+package compiler.c2;\n+\n+import java.util.Arrays;\n+\n+public class TestAndConZeroCCP {\n+\n+  public static void main(String[] args) {\n+    for (int i = 0; i < 10000; ++i) {\n+      run();\n+    }\n+  }\n+\n+  private static void run() {\n+    for (int cp = 0; cp <= 1 << 16; cp++) {\n+      Arrays.binarySearch(array, cp);\n+      Character.getType(cp);\n+      Character.isAlphabetic(cp);\n+    }\n+  }\n+\n+  private static final int[] array = new int[3];\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestAndConZeroCCP.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}