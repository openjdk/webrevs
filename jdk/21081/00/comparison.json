{"files":[{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+\n+\/*\n+ * @test\n+ * @bug 4151949\n+ * @summary Verifies that Components are reshaped to their preferred size\n+ *          when their Container is packed.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual CheckChoiceTest\n+ *\/\n+\n+public class CheckChoiceTest {\n+\n+    private static JComponent componentToFocus;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify that the widths of the Choice components are all the same\n+            and that none is the minimum possible size.\n+            (The Choices should be at least as wide as the Frame.)\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .title(\"CheckChoiceTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(CheckChoiceTest::createAndShowUI)\n+                .splitUIBottom(CheckChoiceTest::createComponentToFocus)\n+                .build();\n+\n+        \/\/ focus away from the window with choices\n+        Thread.sleep(300);\n+        SwingUtilities.invokeAndWait(() -> componentToFocus.requestFocus());\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    private static JComponent createComponentToFocus() {\n+        componentToFocus = new JPanel();\n+        return componentToFocus;\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame f = new Frame(\"Check Choice\");\n+        f.setLayout(new BorderLayout());\n+\n+        Choice choice1 = new Choice();\n+        Choice choice2 = new Choice();\n+        Choice choice3 = new Choice();\n+\n+        f.add(choice1, BorderLayout.NORTH);\n+        f.add(choice3, BorderLayout.CENTER);\n+        f.add(choice2, BorderLayout.SOUTH);\n+        f.pack();\n+\n+        choice1.add(\"I am Choice, yes I am : 0\");\n+        choice2.add(\"I am the same, yes I am : 0\");\n+        choice3.add(\"I am the same, yes I am : 0\");\n+\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/CheckChoiceTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.FlowLayout;\n+import java.awt.Window;\n+\n+\/*\n+ * @test\n+ * @bug 4288285\n+ * @summary Verifies choice works with many items\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChoiceBigTest\n+ *\/\n+\n+public class ChoiceBigTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click the Choice button, press Pass if:\n+\n+            - all looks good.\n+            - if you can select the item 1000\n+\n+            Otherwise press Fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ChoiceBigTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(ChoiceBigTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Frame frame = new Frame(\"Check Choice\");\n+        frame.setLayout(new FlowLayout());\n+        Choice choice = new Choice();\n+        frame.setSize(400, 200);\n+        for (int i = 1; i < 1001; ++i) {\n+            choice.add(\"I am Choice, yes I am : \" + i);\n+        }\n+        frame.add(choice);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceBigTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.Window;\n+\n+\/*\n+ * @test\n+ * @bug 4927930\n+ * @summary Verify that the focus is set to the selected item after calling the java.awt.Choice.select() method\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChoiceFocusTest\n+ *\/\n+\n+public class ChoiceFocusTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. Use the mouse to select Item 5 in the Choice list.\n+            2. Click on the Choice. Item5 is now selected and highlighted. This is the correct behavior.\n+            3. Select Item 1 in the Choice list.\n+            4. Click the \"choice.select(5)\" button. This causes a call to Choice.select(5). Item 5 is now selected.\n+            5. Click on the Choice.\n+            6. If the cursor and focus are on item 5, the test passes. Otherwise, it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ChoiceFocusTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(50)\n+                .testUI(ChoiceFocusTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Panel panel = new Panel();\n+        Choice choice = new Choice();\n+        Button button = new Button(\"choice.select(5);\");\n+\n+        for (int i = 0; i < 10; i++) {\n+            choice.add(String.valueOf(i));\n+        }\n+\n+        button.addActionListener(e -> choice.select(5));\n+\n+        panel.add(button);\n+        panel.add(choice);\n+\n+        Frame frame = new Frame(\"ChoiceFocusTest\");\n+        frame.add(panel);\n+        frame.pack();\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceFocusTest.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.Window;\n+import java.awt.event.ItemEvent;\n+\n+\/*\n+ * @test\n+ * @bug 6476183\n+ * @summary Drop down of a Choice changed to enabled state has a disabled like appearance\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DisabledList\n+ *\/\n+\n+public class DisabledList {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) Switch checkbox\n+            2) Open Choice\n+            3) Drag mouse over the scrollbar or drag out it the choice\n+            4) If choice's items become disabled press fail, otherwise pass\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"DisabledList Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(DisabledList::createAndShowUI)\n+                .logArea(4)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Frame frame = new Frame(\"DisabledList\");\n+        frame.setSize(200, 200);\n+        frame.validate();\n+        Checkbox checkbox = new Checkbox(\"checkbox\");\n+        final Choice choice = new Choice();\n+        choice.setEnabled(false);\n+        for (int i = 0; i < 15; i++) {\n+            choice.addItem(\"Item\" + i);\n+        }\n+        checkbox.addItemListener(event -> {\n+            PassFailJFrame.log(\"CheckBox.itemStateChanged occurred\");\n+            choice.setEnabled(event.getStateChange() == ItemEvent.SELECTED);\n+        });\n+        frame.add(BorderLayout.NORTH, checkbox);\n+        frame.add(BorderLayout.CENTER, choice);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/DisabledList.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}