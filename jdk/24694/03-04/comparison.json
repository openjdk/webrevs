{"files":[{"patch":"@@ -1718,0 +1718,12 @@\n+  \/\/ Append a dot to the name passed to LoadLibrary to prevent LoadLibrary from\n+  \/\/ automatically adding a .DLL extension.\n+  size_t name_len = strlen(name);\n+  char *name_with_dot = malloc(name_len + 2);\n+  if (name_with_dot == nullptr) {\n+    strncpy(ebuf, \"malloc failed\", ebuflen - 1);\n+    ebuf[ebuflen - 1] = '\\0';\n+    return nullptr;\n+  }\n+  memcpy(name_with_dot, name, name_len);\n+  name_with_dot[name_len] = '.';\n+  name_with_dot[name_len + 1] = '\\0';\n@@ -1720,1 +1732,2 @@\n-  result = LoadLibrary(name);\n+  result = LoadLibrary(name_with_dot);\n+  free(name_with_dot);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -76,4 +76,0 @@\n-\n-    static String mapToNativeLibraryName(String name) {\n-        return name;\n-    }\n","filename":"src\/java.base\/aix\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,4 +90,0 @@\n-\n-    static String mapToNativeLibraryName(String name) {\n-        return name;\n-    }\n","filename":"src\/java.base\/macosx\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                name = ClassLoaderHelper.mapToNativeLibraryName(file.getCanonicalPath());\n+                name = file.getCanonicalPath();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/NativeLibraries.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,4 +73,0 @@\n-\n-    static String mapToNativeLibraryName(String name) {\n-        return name;\n-    }\n","filename":"src\/java.base\/unix\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,9 +106,0 @@\n-\n-    \/**\n-     * Add a dot to the end of the library file name ultimately passed to\n-     * <code>LoadLibrary<\/code>. This prevents <code>LoadLibrary<\/code> from\n-     * automatically inferring a .DLL extension.\n-     *\/\n-    static String mapToNativeLibraryName(String name) {\n-        return name.regionMatches(true, name.length() - 4, \".dll\", 0, 4) ? name : name + \".\";\n-    }\n","filename":"src\/java.base\/windows\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}