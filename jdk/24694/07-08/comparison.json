{"files":[{"patch":"@@ -1718,12 +1718,0 @@\n-  \/\/ Append a dot to the name passed to LoadLibrary to prevent LoadLibrary from\n-  \/\/ automatically adding a .DLL extension.\n-  size_t name_len = strlen(name);\n-  char *name_with_dot = (char *)malloc(name_len + 2, mtInternal);\n-  if (name_with_dot == nullptr) {\n-    strncpy(ebuf, \"malloc failed\", ebuflen - 1);\n-    ebuf[ebuflen - 1] = '\\0';\n-    return nullptr;\n-  }\n-  memcpy(name_with_dot, name, name_len);\n-  name_with_dot[name_len] = '.';\n-  name_with_dot[name_len + 1] = '\\0';\n@@ -1732,2 +1720,1 @@\n-  result = LoadLibrary(name_with_dot);\n-  free(name_with_dot);\n+  result = LoadLibrary(name);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8348828\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class LoadLibrarySymlinksTest {\n+    public static void main(String... args) throws Exception {\n+      var libBase = System.mapLibraryName(\"SymlinksTest\");\n+      var lib = Path.of(System.getProperty(\"test.nativepath\")).resolve(libBase).toRealPath();\n+      var scratch = Path.of(\".\").toAbsolutePath();\n+\n+      \/\/ Symlink and target have extenion.\n+      Files.copy(lib, scratch.resolve(System.mapLibraryName(\"goodname\")));\n+      var test1 = scratch.resolve(System.mapLibraryName(\"test1\"));\n+      Files.createSymbolicLink(test1, Path.of(System.mapLibraryName(\"goodname\")));\n+      System.load(test1.toString());\n+\n+      \/\/ Symlink has extension but target does not.\n+      Files.copy(lib, scratch.resolve(\"barename\"));\n+      var test2 = scratch.resolve(System.mapLibraryName(\"test2\"));\n+      Files.createSymbolicLink(test2, Path.of(\"barename\"));\n+      System.load(test2.toString());\n+\n+      \/\/ Neither symlink nor target have extension.\n+      Files.copy(lib, scratch.resolve(\"barename2\"));\n+      var test3 = scratch.resolve(\"test3\");\n+      Files.createSymbolicLink(test3, Path.of(\"barename2\"));\n+      System.load(test3.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/loadLibrarySymlinks\/LoadLibrarySymlinksTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+#include \"jni.h\"\n+\n+static jclass test_class;\n+static jmethodID mid;\n+static jint current_jni_version = JNI_VERSION_19;\n+\n+JNIEXPORT jint JNICALL\n+JNI_OnLoad(JavaVM *vm, void *reserved) {\n+    JNIEnv *env;\n+    (*vm)->GetEnv(vm, (void **) &env, current_jni_version);\n+    return current_jni_version;\n+}\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/loadLibrarySymlinks\/libSymlinksTest.c","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"}]}