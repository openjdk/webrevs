{"files":[{"patch":"@@ -299,1 +299,3 @@\n-            nameComponents[0] = String.format(\"%s.%d\", baseName, i);\n+            \/\/ Don't use period (.) as a separator. OSX codesign fails to sign folders\n+            \/\/ with subfolders with names like \"input.0\".\n+            nameComponents[0] = String.format(\"%s-%d\", baseName, i);\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.nio.file.Files;\n@@ -28,1 +27,0 @@\n-import jdk.jpackage.test.PackageType;\n@@ -31,1 +29,0 @@\n-import jdk.jpackage.test.Annotations.Parameter;\n@@ -37,1 +34,0 @@\n-import jdk.internal.util.OSVersion;\n@@ -40,1 +36,1 @@\n- * Tests generation of packages with input folder containing empty folders.\n+ * Tests generation of packages with additional content in app image.\n@@ -85,3 +81,0 @@\n-\n-        \/\/ On macOS signing may or may not work for modified app bundles.\n-        \/\/ It works on macOS 15 and up, but fails on macOS below 15.\n@@ -89,3 +82,1 @@\n-        final boolean isMacOS15 = (OSVersion.current().compareTo(\n-                                      new OSVersion(15, 0, 0)) > 0);\n-        if (testPathArgs.contains(TEST_BAD) || (TKit.isOSX() && !isMacOS15)) {\n+        if (testPathArgs.contains(TEST_BAD)) {\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppContentTest.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}