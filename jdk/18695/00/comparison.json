{"files":[{"patch":"@@ -820,1 +820,2 @@\n-                        case InvokeDynamicInstruction invd -> in.with(leafs(\n+                        case InvokeDynamicInstruction invd -> {\n+                            in.with(leafs(\n@@ -823,4 +824,5 @@\n-                                \"kind\", invd.bootstrapMethod().kind().name(),\n-                                \"owner\", invd.bootstrapMethod().owner().descriptorString(),\n-                                \"method name\", invd.bootstrapMethod().methodName(),\n-                                \"invocation type\", invd.bootstrapMethod().invocationType().descriptorString()));\n+                                \"bootstrap method\", invd.bootstrapMethod().kind().name()\n+                                     + \" \" + Util.toInternalName(invd.bootstrapMethod().owner())\n+                                     + \"::\" + invd.bootstrapMethod().methodName()));\n+                            in.with(list(\"arguments\", \"arg\", invd.bootstrapArgs().stream()));\n+                        }\n@@ -887,1 +889,3 @@\n-                        return map(\"bm\",\n+                        var bmNode = new MapNodeImpl(FLOW, \"bm\");\n+                        bmNode.with(leafs(\n+                                \"index\", bm.bsmIndex(),\n@@ -890,3 +894,4 @@\n-                                \"owner\", mref.owner().name().stringValue(),\n-                                \"name\", mref.nameAndType().name().stringValue(),\n-                                \"type\", mref.nameAndType().type().stringValue());\n+                                \"owner\", mref.owner().asInternalName(),\n+                                \"name\", mref.nameAndType().name().stringValue()));\n+                        bmNode.with(list(\"args\", \"arg\", bm.arguments().stream().map(LoadableConstantEntry::constantValue)));\n+                        return bmNode;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -38,0 +38,3 @@\n+import java.lang.constant.DirectMethodHandleDesc;\n+import java.lang.constant.DynamicCallSiteDesc;\n+import java.lang.constant.MethodHandleDesc;\n@@ -101,0 +104,6 @@\n+                                tryb.invokedynamic(DynamicCallSiteDesc.of(\n+                                        MethodHandleDesc.ofMethod(DirectMethodHandleDesc.Kind.STATIC, ClassDesc.of(\"Phoo\"), \"phee\", MethodTypeDesc.of(ClassDesc.of(\"Boo\"))),\n+                                        \"intfMethod\",\n+                                        MethodTypeDesc.of(ClassDesc.of(\"Boo\")),\n+                                        \"bootstrap argument 1\",\n+                                        \"bootstrap argument 2\"));\n@@ -124,1 +133,1 @@\n-                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses]\n+                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses, BootstrapMethods]\n@@ -136,62 +145,75 @@\n-                        11: {tag: Utf8, value: Phee}\n-                        12: {tag: Class, class name index: 11, class internal name: Phee}\n-                        13: {tag: Utf8, value: Phoo}\n-                        14: {tag: Class, class name index: 13, class internal name: Phoo}\n-                        15: {tag: Utf8, value: RuntimeVisibleAnnotations}\n-                        16: {tag: Utf8, value: flfl}\n-                        17: {tag: Float, value: 0.0}\n-                        18: {tag: Utf8, value: frfl}\n-                        19: {tag: Float, value: 1.0}\n-                        20: {tag: Utf8, value: AnnotationDefault}\n-                        21: {tag: Integer, value: 1}\n-                        22: {tag: Integer, value: 12}\n-                        23: {tag: Integer, value: 99}\n-                        24: {tag: Utf8, value: LPhee;}\n-                        25: {tag: Double, value: 1.3}\n-                        27: {tag: Utf8, value: LBoo;}\n-                        28: {tag: Utf8, value: BOO}\n-                        29: {tag: Float, value: 3.7}\n-                        30: {tag: Integer, value: 33}\n-                        31: {tag: Long, value: 3333}\n-                        33: {tag: Integer, value: 25}\n-                        34: {tag: Utf8, value: param}\n-                        35: {tag: Integer, value: 3}\n-                        36: {tag: Utf8, value: RuntimeVisibleParameterAnnotations}\n-                        37: {tag: Float, value: 22.0}\n-                        38: {tag: Float, value: 11.0}\n-                        39: {tag: Utf8, value: RuntimeInvisibleParameterAnnotations}\n-                        40: {tag: Float, value: '-22.0'}\n-                        41: {tag: Float, value: '-11.0'}\n-                        42: {tag: Utf8, value: Exceptions}\n-                        43: {tag: Utf8, value: Bee}\n-                        44: {tag: Class, class name index: 43, class internal name: Bee}\n-                        45: {tag: Utf8, value: Code}\n-                        46: {tag: Utf8, value: RuntimeInvisibleTypeAnnotations}\n-                        47: {tag: Utf8, value: RuntimeVisibleTypeAnnotations}\n-                        48: {tag: Utf8, value: LFee;}\n-                        49: {tag: Utf8, value: yes}\n-                        50: {tag: Integer, value: 0}\n-                        51: {tag: Utf8, value: LocalVariableTable}\n-                        52: {tag: Utf8, value: LocalVariableTypeTable}\n-                        53: {tag: Utf8, value: LineNumberTable}\n-                        54: {tag: Utf8, value: StackMapTable}\n-                        55: {tag: Utf8, value: SourceFile}\n-                        56: {tag: Utf8, value: Foo.java}\n-                        57: {tag: Utf8, value: InnerClasses}\n-                        58: {tag: Utf8, value: InnerName}\n-                        59: {tag: Utf8, value: EnclosingMethod}\n-                        60: {tag: Utf8, value: enclosingMethod}\n-                        61: {tag: Utf8, value: (Ljava\/util\/Collection;)Ljava\/lang\/Double;}\n-                        62: {tag: NameAndType, name index: 60, type index: 61, name: enclosingMethod, type: (Ljava\/util\/Collection;)Ljava\/lang\/Double;}\n-                        63: {tag: Utf8, value: Synthetic}\n-                        64: {tag: Utf8, value: Signature}\n-                        65: {tag: Utf8, value: LBoo;LPhee;LPhoo;}\n-                        66: {tag: Utf8, value: Deprecated}\n-                        67: {tag: Utf8, value: NestHost}\n-                        68: {tag: Utf8, value: NestMembers}\n-                        69: {tag: Utf8, value: Record}\n-                        70: {tag: Utf8, value: fee}\n-                        71: {tag: Utf8, value: RuntimeInvisibleAnnotations}\n-                        72: {tag: Float, value: 2.0}\n-                        73: {tag: Float, value: 3.0}\n-                        74: {tag: Utf8, value: PermittedSubclasses}\n+                        11: {tag: Utf8, value: Phoo}\n+                        12: {tag: Class, class name index: 11, class internal name: Phoo}\n+                        13: {tag: Utf8, value: phee}\n+                        14: {tag: Utf8, value: ()LBoo;}\n+                        15: {tag: NameAndType, name index: 13, type index: 14, name: phee, type: ()LBoo;}\n+                        16: {tag: Methodref, owner index: 12, name and type index: 15, owner: Phoo, name: phee, type: ()LBoo;}\n+                        17: {tag: MethodHandle, reference kind: STATIC, reference index: 16, owner: Phoo, name: phee, type: ()LBoo;}\n+                        18: {tag: Utf8, value: bootstrap argument 1}\n+                        19: {tag: String, value index: 18, value: bootstrap argument 1}\n+                        20: {tag: Utf8, value: bootstrap argument 2}\n+                        21: {tag: String, value index: 20, value: bootstrap argument 2}\n+                        22: {tag: Utf8, value: intfMethod}\n+                        23: {tag: NameAndType, name index: 22, type index: 14, name: intfMethod, type: ()LBoo;}\n+                        24: {tag: InvokeDynamic, bootstrap method handle index: 17, bootstrap method arguments indexes: [19, 21], name and type index: 23, name: intfMethod, type: ()LBoo;}\n+                        25: {tag: Utf8, value: Phee}\n+                        26: {tag: Class, class name index: 25, class internal name: Phee}\n+                        27: {tag: Utf8, value: RuntimeVisibleAnnotations}\n+                        28: {tag: Utf8, value: flfl}\n+                        29: {tag: Float, value: 0.0}\n+                        30: {tag: Utf8, value: frfl}\n+                        31: {tag: Float, value: 1.0}\n+                        32: {tag: Utf8, value: AnnotationDefault}\n+                        33: {tag: Integer, value: 1}\n+                        34: {tag: Integer, value: 12}\n+                        35: {tag: Integer, value: 99}\n+                        36: {tag: Utf8, value: LPhee;}\n+                        37: {tag: Double, value: 1.3}\n+                        39: {tag: Utf8, value: LBoo;}\n+                        40: {tag: Utf8, value: BOO}\n+                        41: {tag: Float, value: 3.7}\n+                        42: {tag: Integer, value: 33}\n+                        43: {tag: Long, value: 3333}\n+                        45: {tag: Integer, value: 25}\n+                        46: {tag: Utf8, value: param}\n+                        47: {tag: Integer, value: 3}\n+                        48: {tag: Utf8, value: RuntimeVisibleParameterAnnotations}\n+                        49: {tag: Float, value: 22.0}\n+                        50: {tag: Float, value: 11.0}\n+                        51: {tag: Utf8, value: RuntimeInvisibleParameterAnnotations}\n+                        52: {tag: Float, value: '-22.0'}\n+                        53: {tag: Float, value: '-11.0'}\n+                        54: {tag: Utf8, value: Exceptions}\n+                        55: {tag: Utf8, value: Bee}\n+                        56: {tag: Class, class name index: 55, class internal name: Bee}\n+                        57: {tag: Utf8, value: Code}\n+                        58: {tag: Utf8, value: RuntimeInvisibleTypeAnnotations}\n+                        59: {tag: Utf8, value: RuntimeVisibleTypeAnnotations}\n+                        60: {tag: Utf8, value: LFee;}\n+                        61: {tag: Utf8, value: yes}\n+                        62: {tag: Integer, value: 0}\n+                        63: {tag: Utf8, value: LocalVariableTable}\n+                        64: {tag: Utf8, value: LocalVariableTypeTable}\n+                        65: {tag: Utf8, value: LineNumberTable}\n+                        66: {tag: Utf8, value: StackMapTable}\n+                        67: {tag: Utf8, value: SourceFile}\n+                        68: {tag: Utf8, value: Foo.java}\n+                        69: {tag: Utf8, value: InnerClasses}\n+                        70: {tag: Utf8, value: InnerName}\n+                        71: {tag: Utf8, value: EnclosingMethod}\n+                        72: {tag: Utf8, value: enclosingMethod}\n+                        73: {tag: Utf8, value: (Ljava\/util\/Collection;)Ljava\/lang\/Double;}\n+                        74: {tag: NameAndType, name index: 72, type index: 73, name: enclosingMethod, type: (Ljava\/util\/Collection;)Ljava\/lang\/Double;}\n+                        75: {tag: Utf8, value: Synthetic}\n+                        76: {tag: Utf8, value: Signature}\n+                        77: {tag: Utf8, value: LBoo;LPhee;LPhoo;}\n+                        78: {tag: Utf8, value: Deprecated}\n+                        79: {tag: Utf8, value: NestHost}\n+                        80: {tag: Utf8, value: NestMembers}\n+                        81: {tag: Utf8, value: Record}\n+                        82: {tag: Utf8, value: fee}\n+                        83: {tag: Utf8, value: RuntimeInvisibleAnnotations}\n+                        84: {tag: Float, value: 2.0}\n+                        85: {tag: Float, value: 3.0}\n+                        86: {tag: Utf8, value: PermittedSubclasses}\n+                        87: {tag: Utf8, value: BootstrapMethods}\n@@ -216,0 +238,2 @@\n+                    bootstrap methods:\n+                      - {index: 0, kind: STATIC, owner: Phoo, name: phee, args: [bootstrap argument 1, bootstrap argument 2]}\n@@ -239,1 +263,1 @@\n-                              - {start: 0, end: 7, slot: 2, name: variable, type: LPhoo;}\n+                              - {start: 0, end: 12, slot: 2, name: variable, type: LPhoo;}\n@@ -241,1 +265,1 @@\n-                              - {start: 0, end: 7, slot: 2, name: variable, signature: LPhoo;}\n+                              - {start: 0, end: 12, slot: 2, name: variable, signature: LPhoo;}\n@@ -246,1 +270,1 @@\n-                              - {start: 7, line number: 4}\n+                              - {start: 12, line number: 4}\n@@ -249,1 +273,1 @@\n-                                7: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n+                                12: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n@@ -255,1 +279,1 @@\n-                            \/\/try block 1 start: {start: 0, end: 7, handler: 7, catch type: Phee}\n+                            \/\/try block 1 start: {start: 0, end: 12, handler: 12, catch type: Phee}\n@@ -261,5 +285,6 @@\n-                            6: {opcode: RETURN}\n-                            \/\/stack map frame @7: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n-                            \/\/try block 1 end: {start: 0, end: 7, handler: 7, catch type: Phee}\n-                            \/\/exception handler 1 start: {start: 0, end: 7, handler: 7, catch type: Phee}\n-                            7: {opcode: ATHROW}\n+                            6: {opcode: INVOKEDYNAMIC, name: intfMethod, descriptor: ()LBoo;, bootstrap method: STATIC Phoo::phee, arguments: [bootstrap argument 1, bootstrap argument 2]}\n+                            11: {opcode: RETURN}\n+                            \/\/stack map frame @12: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n+                            \/\/try block 1 end: {start: 0, end: 12, handler: 12, catch type: Phee}\n+                            \/\/exception handler 1 start: {start: 0, end: 12, handler: 12, catch type: Phee}\n+                            12: {opcode: ATHROW}\n@@ -267,1 +292,1 @@\n-                                handler 1: {start: 0, end: 7, handler: 7, type: Phee}\n+                                handler 1: {start: 0, end: 12, handler: 12, type: Phee}\n@@ -282,1 +307,1 @@\n-                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses]\n+                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses, BootstrapMethods]\n@@ -286,0 +311,2 @@\n+                    bootstrap methods:\n+                      - {index: 0, kind: STATIC, owner: Phoo, name: phee, args: [bootstrap argument 1, bootstrap argument 2]}\n@@ -302,1 +329,1 @@\n-                                7: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n+                                12: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n@@ -304,1 +331,1 @@\n-                            \/\/try block 1 start: {start: 0, end: 7, handler: 7, catch type: Phee}\n+                            \/\/try block 1 start: {start: 0, end: 12, handler: 12, catch type: Phee}\n@@ -310,5 +337,6 @@\n-                            6: {opcode: RETURN}\n-                            \/\/stack map frame @7: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n-                            \/\/try block 1 end: {start: 0, end: 7, handler: 7, catch type: Phee}\n-                            \/\/exception handler 1 start: {start: 0, end: 7, handler: 7, catch type: Phee}\n-                            7: {opcode: ATHROW}\n+                            6: {opcode: INVOKEDYNAMIC, name: intfMethod, descriptor: ()LBoo;, bootstrap method: STATIC Phoo::phee, arguments: [bootstrap argument 1, bootstrap argument 2]}\n+                            11: {opcode: RETURN}\n+                            \/\/stack map frame @12: {locals: [Foo, int, java\/lang\/Throwable], stack: [Phee]}\n+                            \/\/try block 1 end: {start: 0, end: 12, handler: 12, catch type: Phee}\n+                            \/\/exception handler 1 start: {start: 0, end: 12, handler: 12, catch type: Phee}\n+                            12: {opcode: ATHROW}\n@@ -316,1 +344,1 @@\n-                                handler 1: {start: 0, end: 7, handler: 7, type: Phee}\n+                                handler 1: {start: 0, end: 12, handler: 12, type: Phee}\n@@ -331,1 +359,1 @@\n-                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses]\n+                    attributes: [SourceFile, InnerClasses, EnclosingMethod, Synthetic, Signature, Deprecated, NestHost, NestMembers, Record, RuntimeInvisibleAnnotations, PermittedSubclasses, BootstrapMethods]\n@@ -356,1 +384,1 @@\n-                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\"],\n+                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\", \"BootstrapMethods\"],\n@@ -368,62 +396,75 @@\n-                        \"11\": {\"tag\": \"Utf8\", \"value\": \"Phee\"},\n-                        \"12\": {\"tag\": \"Class\", \"class name index\": 11, \"class internal name\": \"Phee\"},\n-                        \"13\": {\"tag\": \"Utf8\", \"value\": \"Phoo\"},\n-                        \"14\": {\"tag\": \"Class\", \"class name index\": 13, \"class internal name\": \"Phoo\"},\n-                        \"15\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleAnnotations\"},\n-                        \"16\": {\"tag\": \"Utf8\", \"value\": \"flfl\"},\n-                        \"17\": {\"tag\": \"Float\", \"value\": \"0.0\"},\n-                        \"18\": {\"tag\": \"Utf8\", \"value\": \"frfl\"},\n-                        \"19\": {\"tag\": \"Float\", \"value\": \"1.0\"},\n-                        \"20\": {\"tag\": \"Utf8\", \"value\": \"AnnotationDefault\"},\n-                        \"21\": {\"tag\": \"Integer\", \"value\": \"1\"},\n-                        \"22\": {\"tag\": \"Integer\", \"value\": \"12\"},\n-                        \"23\": {\"tag\": \"Integer\", \"value\": \"99\"},\n-                        \"24\": {\"tag\": \"Utf8\", \"value\": \"LPhee;\"},\n-                        \"25\": {\"tag\": \"Double\", \"value\": \"1.3\"},\n-                        \"27\": {\"tag\": \"Utf8\", \"value\": \"LBoo;\"},\n-                        \"28\": {\"tag\": \"Utf8\", \"value\": \"BOO\"},\n-                        \"29\": {\"tag\": \"Float\", \"value\": \"3.7\"},\n-                        \"30\": {\"tag\": \"Integer\", \"value\": \"33\"},\n-                        \"31\": {\"tag\": \"Long\", \"value\": \"3333\"},\n-                        \"33\": {\"tag\": \"Integer\", \"value\": \"25\"},\n-                        \"34\": {\"tag\": \"Utf8\", \"value\": \"param\"},\n-                        \"35\": {\"tag\": \"Integer\", \"value\": \"3\"},\n-                        \"36\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleParameterAnnotations\"},\n-                        \"37\": {\"tag\": \"Float\", \"value\": \"22.0\"},\n-                        \"38\": {\"tag\": \"Float\", \"value\": \"11.0\"},\n-                        \"39\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleParameterAnnotations\"},\n-                        \"40\": {\"tag\": \"Float\", \"value\": \"-22.0\"},\n-                        \"41\": {\"tag\": \"Float\", \"value\": \"-11.0\"},\n-                        \"42\": {\"tag\": \"Utf8\", \"value\": \"Exceptions\"},\n-                        \"43\": {\"tag\": \"Utf8\", \"value\": \"Bee\"},\n-                        \"44\": {\"tag\": \"Class\", \"class name index\": 43, \"class internal name\": \"Bee\"},\n-                        \"45\": {\"tag\": \"Utf8\", \"value\": \"Code\"},\n-                        \"46\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleTypeAnnotations\"},\n-                        \"47\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleTypeAnnotations\"},\n-                        \"48\": {\"tag\": \"Utf8\", \"value\": \"LFee;\"},\n-                        \"49\": {\"tag\": \"Utf8\", \"value\": \"yes\"},\n-                        \"50\": {\"tag\": \"Integer\", \"value\": \"0\"},\n-                        \"51\": {\"tag\": \"Utf8\", \"value\": \"LocalVariableTable\"},\n-                        \"52\": {\"tag\": \"Utf8\", \"value\": \"LocalVariableTypeTable\"},\n-                        \"53\": {\"tag\": \"Utf8\", \"value\": \"LineNumberTable\"},\n-                        \"54\": {\"tag\": \"Utf8\", \"value\": \"StackMapTable\"},\n-                        \"55\": {\"tag\": \"Utf8\", \"value\": \"SourceFile\"},\n-                        \"56\": {\"tag\": \"Utf8\", \"value\": \"Foo.java\"},\n-                        \"57\": {\"tag\": \"Utf8\", \"value\": \"InnerClasses\"},\n-                        \"58\": {\"tag\": \"Utf8\", \"value\": \"InnerName\"},\n-                        \"59\": {\"tag\": \"Utf8\", \"value\": \"EnclosingMethod\"},\n-                        \"60\": {\"tag\": \"Utf8\", \"value\": \"enclosingMethod\"},\n-                        \"61\": {\"tag\": \"Utf8\", \"value\": \"(Ljava\/util\/Collection;)Ljava\/lang\/Double;\"},\n-                        \"62\": {\"tag\": \"NameAndType\", \"name index\": 60, \"type index\": 61, \"name\": \"enclosingMethod\", \"type\": \"(Ljava\/util\/Collection;)Ljava\/lang\/Double;\"},\n-                        \"63\": {\"tag\": \"Utf8\", \"value\": \"Synthetic\"},\n-                        \"64\": {\"tag\": \"Utf8\", \"value\": \"Signature\"},\n-                        \"65\": {\"tag\": \"Utf8\", \"value\": \"LBoo;LPhee;LPhoo;\"},\n-                        \"66\": {\"tag\": \"Utf8\", \"value\": \"Deprecated\"},\n-                        \"67\": {\"tag\": \"Utf8\", \"value\": \"NestHost\"},\n-                        \"68\": {\"tag\": \"Utf8\", \"value\": \"NestMembers\"},\n-                        \"69\": {\"tag\": \"Utf8\", \"value\": \"Record\"},\n-                        \"70\": {\"tag\": \"Utf8\", \"value\": \"fee\"},\n-                        \"71\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleAnnotations\"},\n-                        \"72\": {\"tag\": \"Float\", \"value\": \"2.0\"},\n-                        \"73\": {\"tag\": \"Float\", \"value\": \"3.0\"},\n-                        \"74\": {\"tag\": \"Utf8\", \"value\": \"PermittedSubclasses\"}},\n+                        \"11\": {\"tag\": \"Utf8\", \"value\": \"Phoo\"},\n+                        \"12\": {\"tag\": \"Class\", \"class name index\": 11, \"class internal name\": \"Phoo\"},\n+                        \"13\": {\"tag\": \"Utf8\", \"value\": \"phee\"},\n+                        \"14\": {\"tag\": \"Utf8\", \"value\": \"()LBoo;\"},\n+                        \"15\": {\"tag\": \"NameAndType\", \"name index\": 13, \"type index\": 14, \"name\": \"phee\", \"type\": \"()LBoo;\"},\n+                        \"16\": {\"tag\": \"Methodref\", \"owner index\": 12, \"name and type index\": 15, \"owner\": \"Phoo\", \"name\": \"phee\", \"type\": \"()LBoo;\"},\n+                        \"17\": {\"tag\": \"MethodHandle\", \"reference kind\": \"STATIC\", \"reference index\": 16, \"owner\": \"Phoo\", \"name\": \"phee\", \"type\": \"()LBoo;\"},\n+                        \"18\": {\"tag\": \"Utf8\", \"value\": \"bootstrap argument 1\"},\n+                        \"19\": {\"tag\": \"String\", \"value index\": 18, \"value\": \"bootstrap argument 1\"},\n+                        \"20\": {\"tag\": \"Utf8\", \"value\": \"bootstrap argument 2\"},\n+                        \"21\": {\"tag\": \"String\", \"value index\": 20, \"value\": \"bootstrap argument 2\"},\n+                        \"22\": {\"tag\": \"Utf8\", \"value\": \"intfMethod\"},\n+                        \"23\": {\"tag\": \"NameAndType\", \"name index\": 22, \"type index\": 14, \"name\": \"intfMethod\", \"type\": \"()LBoo;\"},\n+                        \"24\": {\"tag\": \"InvokeDynamic\", \"bootstrap method handle index\": 17, \"bootstrap method arguments indexes\": [19, 21], \"name and type index\": 23, \"name\": \"intfMethod\", \"type\": \"()LBoo;\"},\n+                        \"25\": {\"tag\": \"Utf8\", \"value\": \"Phee\"},\n+                        \"26\": {\"tag\": \"Class\", \"class name index\": 25, \"class internal name\": \"Phee\"},\n+                        \"27\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleAnnotations\"},\n+                        \"28\": {\"tag\": \"Utf8\", \"value\": \"flfl\"},\n+                        \"29\": {\"tag\": \"Float\", \"value\": \"0.0\"},\n+                        \"30\": {\"tag\": \"Utf8\", \"value\": \"frfl\"},\n+                        \"31\": {\"tag\": \"Float\", \"value\": \"1.0\"},\n+                        \"32\": {\"tag\": \"Utf8\", \"value\": \"AnnotationDefault\"},\n+                        \"33\": {\"tag\": \"Integer\", \"value\": \"1\"},\n+                        \"34\": {\"tag\": \"Integer\", \"value\": \"12\"},\n+                        \"35\": {\"tag\": \"Integer\", \"value\": \"99\"},\n+                        \"36\": {\"tag\": \"Utf8\", \"value\": \"LPhee;\"},\n+                        \"37\": {\"tag\": \"Double\", \"value\": \"1.3\"},\n+                        \"39\": {\"tag\": \"Utf8\", \"value\": \"LBoo;\"},\n+                        \"40\": {\"tag\": \"Utf8\", \"value\": \"BOO\"},\n+                        \"41\": {\"tag\": \"Float\", \"value\": \"3.7\"},\n+                        \"42\": {\"tag\": \"Integer\", \"value\": \"33\"},\n+                        \"43\": {\"tag\": \"Long\", \"value\": \"3333\"},\n+                        \"45\": {\"tag\": \"Integer\", \"value\": \"25\"},\n+                        \"46\": {\"tag\": \"Utf8\", \"value\": \"param\"},\n+                        \"47\": {\"tag\": \"Integer\", \"value\": \"3\"},\n+                        \"48\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleParameterAnnotations\"},\n+                        \"49\": {\"tag\": \"Float\", \"value\": \"22.0\"},\n+                        \"50\": {\"tag\": \"Float\", \"value\": \"11.0\"},\n+                        \"51\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleParameterAnnotations\"},\n+                        \"52\": {\"tag\": \"Float\", \"value\": \"-22.0\"},\n+                        \"53\": {\"tag\": \"Float\", \"value\": \"-11.0\"},\n+                        \"54\": {\"tag\": \"Utf8\", \"value\": \"Exceptions\"},\n+                        \"55\": {\"tag\": \"Utf8\", \"value\": \"Bee\"},\n+                        \"56\": {\"tag\": \"Class\", \"class name index\": 55, \"class internal name\": \"Bee\"},\n+                        \"57\": {\"tag\": \"Utf8\", \"value\": \"Code\"},\n+                        \"58\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleTypeAnnotations\"},\n+                        \"59\": {\"tag\": \"Utf8\", \"value\": \"RuntimeVisibleTypeAnnotations\"},\n+                        \"60\": {\"tag\": \"Utf8\", \"value\": \"LFee;\"},\n+                        \"61\": {\"tag\": \"Utf8\", \"value\": \"yes\"},\n+                        \"62\": {\"tag\": \"Integer\", \"value\": \"0\"},\n+                        \"63\": {\"tag\": \"Utf8\", \"value\": \"LocalVariableTable\"},\n+                        \"64\": {\"tag\": \"Utf8\", \"value\": \"LocalVariableTypeTable\"},\n+                        \"65\": {\"tag\": \"Utf8\", \"value\": \"LineNumberTable\"},\n+                        \"66\": {\"tag\": \"Utf8\", \"value\": \"StackMapTable\"},\n+                        \"67\": {\"tag\": \"Utf8\", \"value\": \"SourceFile\"},\n+                        \"68\": {\"tag\": \"Utf8\", \"value\": \"Foo.java\"},\n+                        \"69\": {\"tag\": \"Utf8\", \"value\": \"InnerClasses\"},\n+                        \"70\": {\"tag\": \"Utf8\", \"value\": \"InnerName\"},\n+                        \"71\": {\"tag\": \"Utf8\", \"value\": \"EnclosingMethod\"},\n+                        \"72\": {\"tag\": \"Utf8\", \"value\": \"enclosingMethod\"},\n+                        \"73\": {\"tag\": \"Utf8\", \"value\": \"(Ljava\/util\/Collection;)Ljava\/lang\/Double;\"},\n+                        \"74\": {\"tag\": \"NameAndType\", \"name index\": 72, \"type index\": 73, \"name\": \"enclosingMethod\", \"type\": \"(Ljava\/util\/Collection;)Ljava\/lang\/Double;\"},\n+                        \"75\": {\"tag\": \"Utf8\", \"value\": \"Synthetic\"},\n+                        \"76\": {\"tag\": \"Utf8\", \"value\": \"Signature\"},\n+                        \"77\": {\"tag\": \"Utf8\", \"value\": \"LBoo;LPhee;LPhoo;\"},\n+                        \"78\": {\"tag\": \"Utf8\", \"value\": \"Deprecated\"},\n+                        \"79\": {\"tag\": \"Utf8\", \"value\": \"NestHost\"},\n+                        \"80\": {\"tag\": \"Utf8\", \"value\": \"NestMembers\"},\n+                        \"81\": {\"tag\": \"Utf8\", \"value\": \"Record\"},\n+                        \"82\": {\"tag\": \"Utf8\", \"value\": \"fee\"},\n+                        \"83\": {\"tag\": \"Utf8\", \"value\": \"RuntimeInvisibleAnnotations\"},\n+                        \"84\": {\"tag\": \"Float\", \"value\": \"2.0\"},\n+                        \"85\": {\"tag\": \"Float\", \"value\": \"3.0\"},\n+                        \"86\": {\"tag\": \"Utf8\", \"value\": \"PermittedSubclasses\"},\n+                        \"87\": {\"tag\": \"Utf8\", \"value\": \"BootstrapMethods\"}},\n@@ -448,0 +489,2 @@\n+                    \"bootstrap methods\": [\n+                        {\"index\": 0, \"kind\": \"STATIC\", \"owner\": \"Phoo\", \"name\": \"phee\", \"args\": [\"bootstrap argument 1\", \"bootstrap argument 2\"]}],\n@@ -471,1 +514,1 @@\n-                                    {\"start\": 0, \"end\": 7, \"slot\": 2, \"name\": \"variable\", \"type\": \"LPhoo;\"}],\n+                                    {\"start\": 0, \"end\": 12, \"slot\": 2, \"name\": \"variable\", \"type\": \"LPhoo;\"}],\n@@ -473,1 +516,1 @@\n-                                    {\"start\": 0, \"end\": 7, \"slot\": 2, \"name\": \"variable\", \"signature\": \"LPhoo;\"}],\n+                                    {\"start\": 0, \"end\": 12, \"slot\": 2, \"name\": \"variable\", \"signature\": \"LPhoo;\"}],\n@@ -478,1 +521,1 @@\n-                                    {\"start\": 7, \"line number\": 4}],\n+                                    {\"start\": 12, \"line number\": 4}],\n@@ -481,1 +524,1 @@\n-                                    \"7\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]}},\n+                                    \"12\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]}},\n@@ -487,1 +530,1 @@\n-                                \"\/\/try block 1 start\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n+                                \"\/\/try block 1 start\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n@@ -493,5 +536,6 @@\n-                                \"6\": {\"opcode\": \"RETURN\"},\n-                                \"\/\/stack map frame @7\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]},\n-                                \"\/\/try block 1 end\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n-                                \"\/\/exception handler 1 start\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n-                                \"7\": {\"opcode\": \"ATHROW\"},\n+                                \"6\": {\"opcode\": \"INVOKEDYNAMIC\", \"name\": \"intfMethod\", \"descriptor\": \"()LBoo;\", \"bootstrap method\": \"STATIC Phoo::phee\", \"arguments\": [\"bootstrap argument 1\", \"bootstrap argument 2\"]},\n+                                \"11\": {\"opcode\": \"RETURN\"},\n+                                \"\/\/stack map frame @12\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]},\n+                                \"\/\/try block 1 end\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n+                                \"\/\/exception handler 1 start\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n+                                \"12\": {\"opcode\": \"ATHROW\"},\n@@ -499,1 +543,1 @@\n-                                    \"handler 1\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"type\": \"Phee\"}}}}]}\n+                                    \"handler 1\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"type\": \"Phee\"}}}}]}\n@@ -514,1 +558,1 @@\n-                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\"],\n+                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\", \"BootstrapMethods\"],\n@@ -518,0 +562,2 @@\n+                    \"bootstrap methods\": [\n+                        {\"index\": 0, \"kind\": \"STATIC\", \"owner\": \"Phoo\", \"name\": \"phee\", \"args\": [\"bootstrap argument 1\", \"bootstrap argument 2\"]}],\n@@ -534,1 +580,1 @@\n-                                    \"7\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]}},\n+                                    \"12\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]}},\n@@ -536,1 +582,1 @@\n-                                \"\/\/try block 1 start\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n+                                \"\/\/try block 1 start\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n@@ -542,5 +588,6 @@\n-                                \"6\": {\"opcode\": \"RETURN\"},\n-                                \"\/\/stack map frame @7\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]},\n-                                \"\/\/try block 1 end\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n-                                \"\/\/exception handler 1 start\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"catch type\": \"Phee\"},\n-                                \"7\": {\"opcode\": \"ATHROW\"},\n+                                \"6\": {\"opcode\": \"INVOKEDYNAMIC\", \"name\": \"intfMethod\", \"descriptor\": \"()LBoo;\", \"bootstrap method\": \"STATIC Phoo::phee\", \"arguments\": [\"bootstrap argument 1\", \"bootstrap argument 2\"]},\n+                                \"11\": {\"opcode\": \"RETURN\"},\n+                                \"\/\/stack map frame @12\": {\"locals\": [\"Foo\", \"int\", \"java\/lang\/Throwable\"], \"stack\": [\"Phee\"]},\n+                                \"\/\/try block 1 end\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n+                                \"\/\/exception handler 1 start\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"catch type\": \"Phee\"},\n+                                \"12\": {\"opcode\": \"ATHROW\"},\n@@ -548,1 +595,1 @@\n-                                    \"handler 1\": {\"start\": 0, \"end\": 7, \"handler\": 7, \"type\": \"Phee\"}}}}]}\n+                                    \"handler 1\": {\"start\": 0, \"end\": 12, \"handler\": 12, \"type\": \"Phee\"}}}}]}\n@@ -563,1 +610,1 @@\n-                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\"],\n+                    \"attributes\": [\"SourceFile\", \"InnerClasses\", \"EnclosingMethod\", \"Synthetic\", \"Signature\", \"Deprecated\", \"NestHost\", \"NestMembers\", \"Record\", \"RuntimeInvisibleAnnotations\", \"PermittedSubclasses\", \"BootstrapMethods\"],\n@@ -590,1 +637,1 @@\n-                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><\/attributes>\n+                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><attribute>BootstrapMethods<\/attribute><\/attributes>\n@@ -602,62 +649,75 @@\n-                        <_11><tag>Utf8<\/tag><value>Phee<\/value><\/_11>\n-                        <_12><tag>Class<\/tag><class_name_index>11<\/class_name_index><class_internal_name>Phee<\/class_internal_name><\/_12>\n-                        <_13><tag>Utf8<\/tag><value>Phoo<\/value><\/_13>\n-                        <_14><tag>Class<\/tag><class_name_index>13<\/class_name_index><class_internal_name>Phoo<\/class_internal_name><\/_14>\n-                        <_15><tag>Utf8<\/tag><value>RuntimeVisibleAnnotations<\/value><\/_15>\n-                        <_16><tag>Utf8<\/tag><value>flfl<\/value><\/_16>\n-                        <_17><tag>Float<\/tag><value>0.0<\/value><\/_17>\n-                        <_18><tag>Utf8<\/tag><value>frfl<\/value><\/_18>\n-                        <_19><tag>Float<\/tag><value>1.0<\/value><\/_19>\n-                        <_20><tag>Utf8<\/tag><value>AnnotationDefault<\/value><\/_20>\n-                        <_21><tag>Integer<\/tag><value>1<\/value><\/_21>\n-                        <_22><tag>Integer<\/tag><value>12<\/value><\/_22>\n-                        <_23><tag>Integer<\/tag><value>99<\/value><\/_23>\n-                        <_24><tag>Utf8<\/tag><value>LPhee;<\/value><\/_24>\n-                        <_25><tag>Double<\/tag><value>1.3<\/value><\/_25>\n-                        <_27><tag>Utf8<\/tag><value>LBoo;<\/value><\/_27>\n-                        <_28><tag>Utf8<\/tag><value>BOO<\/value><\/_28>\n-                        <_29><tag>Float<\/tag><value>3.7<\/value><\/_29>\n-                        <_30><tag>Integer<\/tag><value>33<\/value><\/_30>\n-                        <_31><tag>Long<\/tag><value>3333<\/value><\/_31>\n-                        <_33><tag>Integer<\/tag><value>25<\/value><\/_33>\n-                        <_34><tag>Utf8<\/tag><value>param<\/value><\/_34>\n-                        <_35><tag>Integer<\/tag><value>3<\/value><\/_35>\n-                        <_36><tag>Utf8<\/tag><value>RuntimeVisibleParameterAnnotations<\/value><\/_36>\n-                        <_37><tag>Float<\/tag><value>22.0<\/value><\/_37>\n-                        <_38><tag>Float<\/tag><value>11.0<\/value><\/_38>\n-                        <_39><tag>Utf8<\/tag><value>RuntimeInvisibleParameterAnnotations<\/value><\/_39>\n-                        <_40><tag>Float<\/tag><value>-22.0<\/value><\/_40>\n-                        <_41><tag>Float<\/tag><value>-11.0<\/value><\/_41>\n-                        <_42><tag>Utf8<\/tag><value>Exceptions<\/value><\/_42>\n-                        <_43><tag>Utf8<\/tag><value>Bee<\/value><\/_43>\n-                        <_44><tag>Class<\/tag><class_name_index>43<\/class_name_index><class_internal_name>Bee<\/class_internal_name><\/_44>\n-                        <_45><tag>Utf8<\/tag><value>Code<\/value><\/_45>\n-                        <_46><tag>Utf8<\/tag><value>RuntimeInvisibleTypeAnnotations<\/value><\/_46>\n-                        <_47><tag>Utf8<\/tag><value>RuntimeVisibleTypeAnnotations<\/value><\/_47>\n-                        <_48><tag>Utf8<\/tag><value>LFee;<\/value><\/_48>\n-                        <_49><tag>Utf8<\/tag><value>yes<\/value><\/_49>\n-                        <_50><tag>Integer<\/tag><value>0<\/value><\/_50>\n-                        <_51><tag>Utf8<\/tag><value>LocalVariableTable<\/value><\/_51>\n-                        <_52><tag>Utf8<\/tag><value>LocalVariableTypeTable<\/value><\/_52>\n-                        <_53><tag>Utf8<\/tag><value>LineNumberTable<\/value><\/_53>\n-                        <_54><tag>Utf8<\/tag><value>StackMapTable<\/value><\/_54>\n-                        <_55><tag>Utf8<\/tag><value>SourceFile<\/value><\/_55>\n-                        <_56><tag>Utf8<\/tag><value>Foo.java<\/value><\/_56>\n-                        <_57><tag>Utf8<\/tag><value>InnerClasses<\/value><\/_57>\n-                        <_58><tag>Utf8<\/tag><value>InnerName<\/value><\/_58>\n-                        <_59><tag>Utf8<\/tag><value>EnclosingMethod<\/value><\/_59>\n-                        <_60><tag>Utf8<\/tag><value>enclosingMethod<\/value><\/_60>\n-                        <_61><tag>Utf8<\/tag><value>(Ljava\/util\/Collection;)Ljava\/lang\/Double;<\/value><\/_61>\n-                        <_62><tag>NameAndType<\/tag><name_index>60<\/name_index><type_index>61<\/type_index><name>enclosingMethod<\/name><type>(Ljava\/util\/Collection;)Ljava\/lang\/Double;<\/type><\/_62>\n-                        <_63><tag>Utf8<\/tag><value>Synthetic<\/value><\/_63>\n-                        <_64><tag>Utf8<\/tag><value>Signature<\/value><\/_64>\n-                        <_65><tag>Utf8<\/tag><value>LBoo;LPhee;LPhoo;<\/value><\/_65>\n-                        <_66><tag>Utf8<\/tag><value>Deprecated<\/value><\/_66>\n-                        <_67><tag>Utf8<\/tag><value>NestHost<\/value><\/_67>\n-                        <_68><tag>Utf8<\/tag><value>NestMembers<\/value><\/_68>\n-                        <_69><tag>Utf8<\/tag><value>Record<\/value><\/_69>\n-                        <_70><tag>Utf8<\/tag><value>fee<\/value><\/_70>\n-                        <_71><tag>Utf8<\/tag><value>RuntimeInvisibleAnnotations<\/value><\/_71>\n-                        <_72><tag>Float<\/tag><value>2.0<\/value><\/_72>\n-                        <_73><tag>Float<\/tag><value>3.0<\/value><\/_73>\n-                        <_74><tag>Utf8<\/tag><value>PermittedSubclasses<\/value><\/_74><\/constant_pool>\n+                        <_11><tag>Utf8<\/tag><value>Phoo<\/value><\/_11>\n+                        <_12><tag>Class<\/tag><class_name_index>11<\/class_name_index><class_internal_name>Phoo<\/class_internal_name><\/_12>\n+                        <_13><tag>Utf8<\/tag><value>phee<\/value><\/_13>\n+                        <_14><tag>Utf8<\/tag><value>()LBoo;<\/value><\/_14>\n+                        <_15><tag>NameAndType<\/tag><name_index>13<\/name_index><type_index>14<\/type_index><name>phee<\/name><type>()LBoo;<\/type><\/_15>\n+                        <_16><tag>Methodref<\/tag><owner_index>12<\/owner_index><name_and_type_index>15<\/name_and_type_index><owner>Phoo<\/owner><name>phee<\/name><type>()LBoo;<\/type><\/_16>\n+                        <_17><tag>MethodHandle<\/tag><reference_kind>STATIC<\/reference_kind><reference_index>16<\/reference_index><owner>Phoo<\/owner><name>phee<\/name><type>()LBoo;<\/type><\/_17>\n+                        <_18><tag>Utf8<\/tag><value>bootstrap argument 1<\/value><\/_18>\n+                        <_19><tag>String<\/tag><value_index>18<\/value_index><value>bootstrap argument 1<\/value><\/_19>\n+                        <_20><tag>Utf8<\/tag><value>bootstrap argument 2<\/value><\/_20>\n+                        <_21><tag>String<\/tag><value_index>20<\/value_index><value>bootstrap argument 2<\/value><\/_21>\n+                        <_22><tag>Utf8<\/tag><value>intfMethod<\/value><\/_22>\n+                        <_23><tag>NameAndType<\/tag><name_index>22<\/name_index><type_index>14<\/type_index><name>intfMethod<\/name><type>()LBoo;<\/type><\/_23>\n+                        <_24><tag>InvokeDynamic<\/tag><bootstrap_method_handle_index>17<\/bootstrap_method_handle_index><bootstrap_method_arguments_indexes><index>19<\/index><index>21<\/index><\/bootstrap_method_arguments_indexes><name_and_type_index>23<\/name_and_type_index><name>intfMethod<\/name><type>()LBoo;<\/type><\/_24>\n+                        <_25><tag>Utf8<\/tag><value>Phee<\/value><\/_25>\n+                        <_26><tag>Class<\/tag><class_name_index>25<\/class_name_index><class_internal_name>Phee<\/class_internal_name><\/_26>\n+                        <_27><tag>Utf8<\/tag><value>RuntimeVisibleAnnotations<\/value><\/_27>\n+                        <_28><tag>Utf8<\/tag><value>flfl<\/value><\/_28>\n+                        <_29><tag>Float<\/tag><value>0.0<\/value><\/_29>\n+                        <_30><tag>Utf8<\/tag><value>frfl<\/value><\/_30>\n+                        <_31><tag>Float<\/tag><value>1.0<\/value><\/_31>\n+                        <_32><tag>Utf8<\/tag><value>AnnotationDefault<\/value><\/_32>\n+                        <_33><tag>Integer<\/tag><value>1<\/value><\/_33>\n+                        <_34><tag>Integer<\/tag><value>12<\/value><\/_34>\n+                        <_35><tag>Integer<\/tag><value>99<\/value><\/_35>\n+                        <_36><tag>Utf8<\/tag><value>LPhee;<\/value><\/_36>\n+                        <_37><tag>Double<\/tag><value>1.3<\/value><\/_37>\n+                        <_39><tag>Utf8<\/tag><value>LBoo;<\/value><\/_39>\n+                        <_40><tag>Utf8<\/tag><value>BOO<\/value><\/_40>\n+                        <_41><tag>Float<\/tag><value>3.7<\/value><\/_41>\n+                        <_42><tag>Integer<\/tag><value>33<\/value><\/_42>\n+                        <_43><tag>Long<\/tag><value>3333<\/value><\/_43>\n+                        <_45><tag>Integer<\/tag><value>25<\/value><\/_45>\n+                        <_46><tag>Utf8<\/tag><value>param<\/value><\/_46>\n+                        <_47><tag>Integer<\/tag><value>3<\/value><\/_47>\n+                        <_48><tag>Utf8<\/tag><value>RuntimeVisibleParameterAnnotations<\/value><\/_48>\n+                        <_49><tag>Float<\/tag><value>22.0<\/value><\/_49>\n+                        <_50><tag>Float<\/tag><value>11.0<\/value><\/_50>\n+                        <_51><tag>Utf8<\/tag><value>RuntimeInvisibleParameterAnnotations<\/value><\/_51>\n+                        <_52><tag>Float<\/tag><value>-22.0<\/value><\/_52>\n+                        <_53><tag>Float<\/tag><value>-11.0<\/value><\/_53>\n+                        <_54><tag>Utf8<\/tag><value>Exceptions<\/value><\/_54>\n+                        <_55><tag>Utf8<\/tag><value>Bee<\/value><\/_55>\n+                        <_56><tag>Class<\/tag><class_name_index>55<\/class_name_index><class_internal_name>Bee<\/class_internal_name><\/_56>\n+                        <_57><tag>Utf8<\/tag><value>Code<\/value><\/_57>\n+                        <_58><tag>Utf8<\/tag><value>RuntimeInvisibleTypeAnnotations<\/value><\/_58>\n+                        <_59><tag>Utf8<\/tag><value>RuntimeVisibleTypeAnnotations<\/value><\/_59>\n+                        <_60><tag>Utf8<\/tag><value>LFee;<\/value><\/_60>\n+                        <_61><tag>Utf8<\/tag><value>yes<\/value><\/_61>\n+                        <_62><tag>Integer<\/tag><value>0<\/value><\/_62>\n+                        <_63><tag>Utf8<\/tag><value>LocalVariableTable<\/value><\/_63>\n+                        <_64><tag>Utf8<\/tag><value>LocalVariableTypeTable<\/value><\/_64>\n+                        <_65><tag>Utf8<\/tag><value>LineNumberTable<\/value><\/_65>\n+                        <_66><tag>Utf8<\/tag><value>StackMapTable<\/value><\/_66>\n+                        <_67><tag>Utf8<\/tag><value>SourceFile<\/value><\/_67>\n+                        <_68><tag>Utf8<\/tag><value>Foo.java<\/value><\/_68>\n+                        <_69><tag>Utf8<\/tag><value>InnerClasses<\/value><\/_69>\n+                        <_70><tag>Utf8<\/tag><value>InnerName<\/value><\/_70>\n+                        <_71><tag>Utf8<\/tag><value>EnclosingMethod<\/value><\/_71>\n+                        <_72><tag>Utf8<\/tag><value>enclosingMethod<\/value><\/_72>\n+                        <_73><tag>Utf8<\/tag><value>(Ljava\/util\/Collection;)Ljava\/lang\/Double;<\/value><\/_73>\n+                        <_74><tag>NameAndType<\/tag><name_index>72<\/name_index><type_index>73<\/type_index><name>enclosingMethod<\/name><type>(Ljava\/util\/Collection;)Ljava\/lang\/Double;<\/type><\/_74>\n+                        <_75><tag>Utf8<\/tag><value>Synthetic<\/value><\/_75>\n+                        <_76><tag>Utf8<\/tag><value>Signature<\/value><\/_76>\n+                        <_77><tag>Utf8<\/tag><value>LBoo;LPhee;LPhoo;<\/value><\/_77>\n+                        <_78><tag>Utf8<\/tag><value>Deprecated<\/value><\/_78>\n+                        <_79><tag>Utf8<\/tag><value>NestHost<\/value><\/_79>\n+                        <_80><tag>Utf8<\/tag><value>NestMembers<\/value><\/_80>\n+                        <_81><tag>Utf8<\/tag><value>Record<\/value><\/_81>\n+                        <_82><tag>Utf8<\/tag><value>fee<\/value><\/_82>\n+                        <_83><tag>Utf8<\/tag><value>RuntimeInvisibleAnnotations<\/value><\/_83>\n+                        <_84><tag>Float<\/tag><value>2.0<\/value><\/_84>\n+                        <_85><tag>Float<\/tag><value>3.0<\/value><\/_85>\n+                        <_86><tag>Utf8<\/tag><value>PermittedSubclasses<\/value><\/_86>\n+                        <_87><tag>Utf8<\/tag><value>BootstrapMethods<\/value><\/_87><\/constant_pool>\n@@ -683,0 +743,2 @@\n+                    <bootstrap_methods>\n+                        <bm><index>0<\/index><kind>STATIC<\/kind><owner>Phoo<\/owner><name>phee<\/name><args><arg>bootstrap argument 1<\/arg><arg>bootstrap argument 2<\/arg><\/args><\/bm><\/bootstrap_methods>\n@@ -708,1 +770,1 @@\n-                                    <_1><start>0<\/start><end>7<\/end><slot>2<\/slot><name>variable<\/name><type>LPhoo;<\/type><\/_1><\/local_variables>\n+                                    <_1><start>0<\/start><end>12<\/end><slot>2<\/slot><name>variable<\/name><type>LPhoo;<\/type><\/_1><\/local_variables>\n@@ -710,1 +772,1 @@\n-                                    <_1><start>0<\/start><end>7<\/end><slot>2<\/slot><name>variable<\/name><signature>LPhoo;<\/signature><\/_1><\/local_variable_types>\n+                                    <_1><start>0<\/start><end>12<\/end><slot>2<\/slot><name>variable<\/name><signature>LPhoo;<\/signature><\/_1><\/local_variable_types>\n@@ -715,1 +777,1 @@\n-                                    <_4><start>7<\/start><line_number>4<\/line_number><\/_4><\/line_numbers>\n+                                    <_4><start>12<\/start><line_number>4<\/line_number><\/_4><\/line_numbers>\n@@ -718,1 +780,1 @@\n-                                    <_7><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/_7><\/stack_map_frames>\n+                                    <_12><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/_12><\/stack_map_frames>\n@@ -724,1 +786,1 @@\n-                                <__try_block_1_start><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_start>\n+                                <__try_block_1_start><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_start>\n@@ -730,5 +792,6 @@\n-                                <_6><opcode>RETURN<\/opcode><\/_6>\n-                                <__stack_map_frame__7><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/__stack_map_frame__7>\n-                                <__try_block_1_end><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_end>\n-                                <__exception_handler_1_start><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__exception_handler_1_start>\n-                                <_7><opcode>ATHROW<\/opcode><\/_7>\n+                                <_6><opcode>INVOKEDYNAMIC<\/opcode><name>intfMethod<\/name><descriptor>()LBoo;<\/descriptor><bootstrap_method>STATIC Phoo::phee<\/bootstrap_method><arguments><arg>bootstrap argument 1<\/arg><arg>bootstrap argument 2<\/arg><\/arguments><\/_6>\n+                                <_11><opcode>RETURN<\/opcode><\/_11>\n+                                <__stack_map_frame__12><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/__stack_map_frame__12>\n+                                <__try_block_1_end><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_end>\n+                                <__exception_handler_1_start><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__exception_handler_1_start>\n+                                <_12><opcode>ATHROW<\/opcode><\/_12>\n@@ -736,1 +799,1 @@\n-                                    <handler_1><start>0<\/start><end>7<\/end><handler>7<\/handler><type>Phee<\/type><\/handler_1><\/exception_handlers><\/code><\/method><\/methods><\/class>\n+                                    <handler_1><start>0<\/start><end>12<\/end><handler>12<\/handler><type>Phee<\/type><\/handler_1><\/exception_handlers><\/code><\/method><\/methods><\/class>\n@@ -753,1 +816,1 @@\n-                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><\/attributes>\n+                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><attribute>BootstrapMethods<\/attribute><\/attributes>\n@@ -757,0 +820,2 @@\n+                    <bootstrap_methods>\n+                        <bm><index>0<\/index><kind>STATIC<\/kind><owner>Phoo<\/owner><name>phee<\/name><args><arg>bootstrap argument 1<\/arg><arg>bootstrap argument 2<\/arg><\/args><\/bm><\/bootstrap_methods>\n@@ -775,1 +840,1 @@\n-                                    <_7><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/_7><\/stack_map_frames>\n+                                    <_12><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/_12><\/stack_map_frames>\n@@ -777,1 +842,1 @@\n-                                <__try_block_1_start><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_start>\n+                                <__try_block_1_start><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_start>\n@@ -783,5 +848,6 @@\n-                                <_6><opcode>RETURN<\/opcode><\/_6>\n-                                <__stack_map_frame__7><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/__stack_map_frame__7>\n-                                <__try_block_1_end><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_end>\n-                                <__exception_handler_1_start><start>0<\/start><end>7<\/end><handler>7<\/handler><catch_type>Phee<\/catch_type><\/__exception_handler_1_start>\n-                                <_7><opcode>ATHROW<\/opcode><\/_7>\n+                                <_6><opcode>INVOKEDYNAMIC<\/opcode><name>intfMethod<\/name><descriptor>()LBoo;<\/descriptor><bootstrap_method>STATIC Phoo::phee<\/bootstrap_method><arguments><arg>bootstrap argument 1<\/arg><arg>bootstrap argument 2<\/arg><\/arguments><\/_6>\n+                                <_11><opcode>RETURN<\/opcode><\/_11>\n+                                <__stack_map_frame__12><locals><item>Foo<\/item><item>int<\/item><item>java\/lang\/Throwable<\/item><\/locals><stack><item>Phee<\/item><\/stack><\/__stack_map_frame__12>\n+                                <__try_block_1_end><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__try_block_1_end>\n+                                <__exception_handler_1_start><start>0<\/start><end>12<\/end><handler>12<\/handler><catch_type>Phee<\/catch_type><\/__exception_handler_1_start>\n+                                <_12><opcode>ATHROW<\/opcode><\/_12>\n@@ -789,1 +855,1 @@\n-                                    <handler_1><start>0<\/start><end>7<\/end><handler>7<\/handler><type>Phee<\/type><\/handler_1><\/exception_handlers><\/code><\/method><\/methods><\/class>\n+                                    <handler_1><start>0<\/start><end>12<\/end><handler>12<\/handler><type>Phee<\/type><\/handler_1><\/exception_handlers><\/code><\/method><\/methods><\/class>\n@@ -806,1 +872,1 @@\n-                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><\/attributes>\n+                    <attributes><attribute>SourceFile<\/attribute><attribute>InnerClasses<\/attribute><attribute>EnclosingMethod<\/attribute><attribute>Synthetic<\/attribute><attribute>Signature<\/attribute><attribute>Deprecated<\/attribute><attribute>NestHost<\/attribute><attribute>NestMembers<\/attribute><attribute>Record<\/attribute><attribute>RuntimeInvisibleAnnotations<\/attribute><attribute>PermittedSubclasses<\/attribute><attribute>BootstrapMethods<\/attribute><\/attributes>\n@@ -825,1 +891,1 @@\n-        assertEquals(node.walk().count(), 509);\n+        assertEquals(node.walk().count(), 588);\n@@ -831,1 +897,1 @@\n-        assertEquals(node.walk().count(), 128);\n+        assertEquals(node.walk().count(), 146);\n@@ -837,1 +903,1 @@\n-        assertEquals(node.walk().count(), 41);\n+        assertEquals(node.walk().count(), 42);\n","filename":"test\/jdk\/jdk\/classfile\/ClassPrinterTest.java","additions":321,"deletions":255,"binary":false,"changes":576,"status":"modified"}]}