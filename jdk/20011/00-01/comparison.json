{"files":[{"patch":"@@ -158,1 +158,1 @@\n- * Note the term <i>class file<\/i> is used as defined in section 3.1 of\n+ * Note the term <i>class file<\/i> is used as defined in section {@jvms 4} of\n@@ -164,2 +164,2 @@\n- * If the invocation of {@link #transform transform()} for a class <code>C<\/code>\n- * directly or transitively requires loading or resolving the same class <code>C<\/code>,\n+ * If the invocation of {@link #transform transform()} for a class {@code C}\n+ * directly or transitively requires loading or resolving the same class {@code C},\n@@ -167,5 +167,5 @@\n- * Transforming core JDK classes or using libraries which depend on core JDK classes\n- * during transformation increases the risk for such errors. If the {@link LinkageError}\n- * occurs during reference resolution (see section 5.4.3 Resolution of <cite>The\n- * Java Virtual Machine Specification<\/cite>) for a class <code>D<\/code>, the\n- * corresponding reference resolution in class <code>D<\/code> will always fail\n+ * Transforming core JDK classes or using libraries that depend on core JDK classes\n+ * during transformation increases the risk of such errors. If the {@link LinkageError}\n+ * occurs during reference resolution (see section {@jvms 5.4.3} Resolution of <cite>The\n+ * Java Virtual Machine Specification<\/cite>) for a class {@code D}, the\n+ * corresponding reference resolution in class {@code D} will always fail\n@@ -173,3 +173,3 @@\n- * transformation of <code>C<\/code> in a class <code>D<\/code> not directly related to\n- * <code>C<\/code> can repeatedly occur later in arbitrary user code which uses class\n- * <code>D<\/code>.\n+ * transformation of {@code C} in a class {@code D} not directly related to\n+ * {@code C} can repeatedly occur later in arbitrary user code which uses class\n+ * {@code D}.\n","filename":"src\/java.instrument\/share\/classes\/java\/lang\/instrument\/ClassFileTransformer.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}