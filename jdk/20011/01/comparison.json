{"files":[{"patch":"@@ -158,1 +158,1 @@\n- * Note the term <i>class file<\/i> is used as defined in section 3.1 of\n+ * Note the term <i>class file<\/i> is used as defined in section {@jvms 4} of\n@@ -163,0 +163,14 @@\n+ * @apiNote\n+ * If the invocation of {@link #transform transform()} for a class {@code C}\n+ * directly or transitively requires loading or resolving the same class {@code C},\n+ * an error is thrown that is an instance of {@link LinkageError} (or a subclass).\n+ * Transforming core JDK classes or using libraries that depend on core JDK classes\n+ * during transformation increases the risk of such errors. If the {@link LinkageError}\n+ * occurs during reference resolution (see section {@jvms 5.4.3} Resolution of <cite>The\n+ * Java Virtual Machine Specification<\/cite>) for a class {@code D}, the\n+ * corresponding reference resolution in class {@code D} will always fail\n+ * with the same error. This means that a {@link LinkageError} triggered during\n+ * transformation of {@code C} in a class {@code D} not directly related to\n+ * {@code C} can repeatedly occur later in arbitrary user code which uses class\n+ * {@code D}.\n+ *\n","filename":"src\/java.instrument\/share\/classes\/java\/lang\/instrument\/ClassFileTransformer.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}