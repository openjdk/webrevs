{"files":[{"patch":"@@ -163,0 +163,14 @@\n+ * @apiNote\n+ * If the invocation of {@link #transform transform()} for a class <code>C<\/code>\n+ * directly or transitively requires loading or resolving the same class <code>C<\/code>,\n+ * an error is thrown that is an instance of {@link LinkageError} (or a subclass).\n+ * Transforming core JDK classes or using libraries which depend on core JDK classes\n+ * during transformation increases the risk for such errors. If the {@link LinkageError}\n+ * occurs during reference resolution (see section 5.4.3 Resolution of <cite>The\n+ * Java Virtual Machine Specification<\/cite>) for a class <code>D<\/code>, the\n+ * corresponding reference resolution in class <code>D<\/code> will always fail\n+ * with the same error. This means that a {@link LinkageError} triggered during\n+ * transformation of <code>C<\/code> in a class <code>D<\/code> not directly related to\n+ * <code>C<\/code> can repeatedly occur later in arbitrary user code which uses class\n+ * <code>D<\/code>.\n+ *\n","filename":"src\/java.instrument\/share\/classes\/java\/lang\/instrument\/ClassFileTransformer.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}