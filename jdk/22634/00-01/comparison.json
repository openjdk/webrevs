{"files":[{"patch":"@@ -224,4 +224,0 @@\n-    private interface LabelResolver {\n-        int labelToBci(Label l);\n-    }\n-\n@@ -549,1 +545,1 @@\n-    private static Stream<ConstantDesc> convertVTIs(LabelResolver lr, List<VerificationTypeInfo> vtis) {\n+    private static Stream<ConstantDesc> convertVTIs(CodeAttribute lr, List<VerificationTypeInfo> vtis) {\n@@ -587,1 +583,1 @@\n-            case CodeModel com -> codeToTree(com, verbosity);\n+            case CodeModel com -> codeToTree((CodeAttribute)com, verbosity);\n@@ -683,1 +679,1 @@\n-    private static Node frameToTree(ConstantDesc name, LabelResolver lr, StackMapFrameInfo f) {\n+    private static Node frameToTree(ConstantDesc name, CodeAttribute lr, StackMapFrameInfo f) {\n@@ -712,1 +708,1 @@\n-    private static MapNode codeToTree(CodeModel com, Verbosity verbosity) {\n+    private static MapNode codeToTree(CodeAttribute com, Verbosity verbosity) {\n@@ -715,17 +711,2 @@\n-            LabelResolver lr;\n-            if (com instanceof CodeAttribute ca) {\n-                codeNode.with(leaf(\"max stack\", ca.maxStack()));\n-                codeNode.with(leaf(\"max locals\", ca.maxLocals()));\n-                lr = ca::labelToBci;\n-            } else {\n-                var bciMap = new HashMap<Label, Integer>();\n-                int bci = 0;\n-                for (var e : com) {\n-                    switch (e) {\n-                        case Label l -> bciMap.put(l, bci);\n-                        case Instruction i -> bci += i.sizeInBytes();\n-                        default -> {}\n-                    }\n-                }\n-                lr = l -> bciMap.getOrDefault(l, -1);\n-            }\n+            codeNode.with(leaf(\"max stack\", com.maxStack()));\n+            codeNode.with(leaf(\"max locals\", com.maxLocals()));\n@@ -742,1 +723,1 @@\n-                        stackMap.with(frameToTree(lr.labelToBci(smf.target()), lr, smf));\n+                        stackMap.with(frameToTree(com.labelToBci(smf.target()), com, smf));\n@@ -792,1 +773,1 @@\n-                        rvtaa.annotations().forEach(a -> forEachOffset(a, lr, (off, an) ->\n+                        rvtaa.annotations().forEach(a -> forEachOffset(a, com, (off, an) ->\n@@ -795,1 +776,1 @@\n-                        ritaa.annotations().forEach(a -> forEachOffset(a, lr, (off, an) ->\n+                        ritaa.annotations().forEach(a -> forEachOffset(a, com, (off, an) ->\n@@ -803,1 +784,1 @@\n-                    list(\"locals\", \"item\", convertVTIs(lr, StackMapDecoder.initFrameLocals(com.parent().get()))),\n+                    list(\"locals\", \"item\", convertVTIs(com, StackMapDecoder.initFrameLocals(com.parent().get()))),\n@@ -807,3 +788,3 @@\n-                    lr.labelToBci(exc.tryStart()),\n-                    lr.labelToBci(exc.tryEnd()),\n-                    lr.labelToBci(exc.handler()),\n+                    com.labelToBci(exc.tryStart()),\n+                    com.labelToBci(exc.tryEnd()),\n+                    com.labelToBci(exc.handler()),\n@@ -897,1 +878,1 @@\n-                                \"target\", lr.labelToBci(br.target())));\n+                                \"target\", com.labelToBci(br.target())));\n@@ -900,2 +881,2 @@\n-                                        .map(lr::labelToBci), si.cases().stream()\n-                                                .map(sc -> lr.labelToBci(sc.target())))));\n+                                        .map(com::labelToBci), si.cases().stream()\n+                                                .map(sc -> com.labelToBci(sc.target())))));\n@@ -904,2 +885,2 @@\n-                                        .map(lr::labelToBci), si.cases().stream()\n-                                                .map(sc -> lr.labelToBci(sc.target())))));\n+                                        .map(com::labelToBci), si.cases().stream()\n+                                                .map(sc -> com.labelToBci(sc.target())))));\n@@ -907,1 +888,1 @@\n-                                \"target\", lr.labelToBci(jsr.target())));\n+                                \"target\", com.labelToBci(jsr.target())));\n@@ -1104,1 +1085,1 @@\n-    private static void forEachOffset(TypeAnnotation ta, LabelResolver lr, BiConsumer<Integer, TypeAnnotation> consumer) {\n+    private static void forEachOffset(TypeAnnotation ta, CodeAttribute lr, BiConsumer<Integer, TypeAnnotation> consumer) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":20,"deletions":39,"binary":false,"changes":59,"status":"modified"}]}