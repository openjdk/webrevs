{"files":[{"patch":"@@ -1466,5 +1466,1 @@\n-  JavaThread* calling_thread = JavaThread::current();\n-  HandleMark hm(calling_thread);\n-\n-  JvmtiVTMSTransitionDisabler disabler(thread);\n-  ThreadsListHandle tlh(calling_thread);\n+  JavaThread* current = JavaThread::current();\n@@ -1472,6 +1468,1 @@\n-  JavaThread* java_thread = nullptr;\n-  oop thread_oop = nullptr;\n-  jvmtiError err = get_threadOop_and_JavaThread(tlh.list(), thread, &java_thread, &thread_oop);\n-  if (err != JVMTI_ERROR_NONE) {\n-    return err;\n-  }\n+  *monitor_ptr = nullptr;\n@@ -1479,25 +1470,4 @@\n-  if (java_lang_VirtualThread::is_instance(thread_oop)) {\n-    \/\/ There is no monitor info to collect if target virtual thread is unmounted.\n-    if (java_thread != nullptr) {\n-      GetCurrentContendedMonitorClosure op(calling_thread, this, monitor_ptr, \/* is_virtual *\/ true);\n-      Handshake::execute(&op, java_thread);\n-      err = op.result();\n-    } else {\n-      *monitor_ptr = nullptr;\n-      if (!JvmtiEnvBase::is_vthread_alive(thread_oop)) {\n-        err = JVMTI_ERROR_THREAD_NOT_ALIVE;\n-      }\n-    }\n-    return err;\n-  }\n-  if (java_thread == calling_thread) {\n-    \/\/ It is only safe to make a direct call on the current thread.\n-    \/\/ All other usage needs to use a direct handshake for safety.\n-    err = get_current_contended_monitor(calling_thread, java_thread, monitor_ptr, \/* is_virtual *\/ false);\n-  } else {\n-    \/\/ get contended monitor information with handshake\n-    GetCurrentContendedMonitorClosure op(calling_thread, this, monitor_ptr, \/* is_virtual *\/ false);\n-    Handshake::execute(&op, java_thread);\n-    err = op.result();\n-  }\n-  return err;\n+  \/\/ get contended monitor information with handshake\n+  GetCurrentContendedMonitorClosure op(this, current, monitor_ptr);\n+  JvmtiHandshake::execute(&op, thread);\n+  return op.result();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":6,"deletions":36,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2500,0 +2500,10 @@\n+void\n+GetCurrentContendedMonitorClosure::do_vthread(Handle target_h) {\n+  if (_target_jt == nullptr) {\n+    _result = JVMTI_ERROR_NONE; \/\/ target virtual thread is unmounted\n+    return;\n+  }\n+  \/\/ mounted virtual thread case\n+  do_thread(_target_jt);\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-class GetCurrentContendedMonitorClosure : public JvmtiHandshakeClosure {\n+class GetCurrentContendedMonitorClosure : public JvmtiUnitedHandshakeClosure {\n@@ -598,1 +598,0 @@\n-  JavaThread *_calling_thread;\n@@ -600,0 +599,1 @@\n+  JavaThread *_calling_thread;\n@@ -601,1 +601,0 @@\n-  bool _is_virtual;\n@@ -604,3 +603,4 @@\n-  GetCurrentContendedMonitorClosure(JavaThread* calling_thread, JvmtiEnv *env, jobject *mon_ptr, bool is_virtual)\n-    : JvmtiHandshakeClosure(\"GetCurrentContendedMonitor\"),\n-      _calling_thread(calling_thread),\n+  GetCurrentContendedMonitorClosure(JvmtiEnv *env,\n+                                    JavaThread* calling_thread,\n+                                    jobject *owned_monitor_ptr)\n+    : JvmtiUnitedHandshakeClosure(\"GetCurrentContendedMonitor\"),\n@@ -608,2 +608,2 @@\n-      _owned_monitor_ptr(mon_ptr),\n-      _is_virtual(is_virtual) {}\n+      _calling_thread(calling_thread),\n+      _owned_monitor_ptr(owned_monitor_ptr) {}\n@@ -611,0 +611,1 @@\n+  void do_vthread(Handle target_h);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}