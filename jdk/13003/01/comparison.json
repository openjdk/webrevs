{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -575,1 +575,1 @@\n-    int offset = field->offset();\n+    int offset = field->offset_in_bytes();\n@@ -585,1 +585,1 @@\n-    int offset = field->offset();\n+    int offset = field->offset_in_bytes();\n@@ -626,1 +626,1 @@\n-      int offset = field->offset();\n+      int offset = field->offset_in_bytes();\n@@ -694,1 +694,1 @@\n-      int offset = field->offset();\n+      int offset = field->offset_in_bytes();\n@@ -1755,1 +1755,1 @@\n-  const int offset = !needs_patching ? field->offset() : -1;\n+  const int offset = !needs_patching ? field->offset_in_bytes() : -1;\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,1 +193,1 @@\n-                   && (all_offsets || lf->field()->offset() == field->offset());\n+                   && (all_offsets || lf->field()->offset_in_bytes() == field->offset_in_bytes());\n","filename":"src\/hotspot\/share\/c1\/c1_ValueMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -884,1 +884,1 @@\n-            set_modified(p, will_link ? field->offset() : OFFSET_ANY, type2size[field_type]*HeapWordSize);\n+            set_modified(p, will_link ? field->offset_in_bytes() : OFFSET_ANY, type2size[field_type]*HeapWordSize);\n","filename":"src\/hotspot\/share\/ci\/bcEscapeAnalyzer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-    _constant_value = mirror->field_value_impl(type()->basic_type(), offset());\n+    _constant_value = mirror->field_value_impl(type()->basic_type(), offset_in_bytes());\n","filename":"src\/hotspot\/share\/ci\/ciField.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,2 +110,2 @@\n-  \/\/ What is the offset of this field?\n-  int offset() const {\n+  \/\/ What is the offset of this field? (Fields are aligned to the byte level.)\n+  int offset_in_bytes() const {\n@@ -116,5 +116,0 @@\n-  \/\/ Same question, explicit units.  (Fields are aligned to the byte level.)\n-  int offset_in_bytes() const {\n-    return offset();\n-  }\n-\n","filename":"src\/hotspot\/share\/ci\/ciField.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-  return field_value_impl(field->type()->basic_type(), field->offset());\n+  return field_value_impl(field->type()->basic_type(), field->offset_in_bytes());\n","filename":"src\/hotspot\/share\/ci\/ciInstance.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-    Node* off = phase->MakeConX(field->offset());\n+    Node* off = phase->MakeConX(field->offset_in_bytes());\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1706,1 +1706,1 @@\n-              field->offset() == original_field->offset() &&\n+              field->offset_in_bytes() == original_field->offset_in_bytes() &&\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3610,1 +3610,1 @@\n-        if (field->offset() >= TrackedInitializationLimit * HeapWordSize)\n+        if (field->offset_in_bytes() >= TrackedInitializationLimit * HeapWordSize)\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -738,1 +738,1 @@\n-        offset = field->offset();\n+        offset = field->offset_in_bytes();\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}