{"files":[{"patch":"@@ -88,0 +88,5 @@\n+    @Override\n+    public void visitModuleImport(JCModuleImport tree) {\n+        scan(tree.module);\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeScanner.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import toolbox.*;\n+\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.TypeElement;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+\n+\/**\n+ * @test\n+ * @bug 8332497\n+ * @summary error: javac prints an AssertionError when annotation processing runs on program with module imports\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ * @build toolbox.JavacTask toolbox.ToolBox toolbox.Task\n+ * @run main ModuleImportProcessingTest\n+ *\/\n+public class ModuleImportProcessingTest {\n+    final toolbox.ToolBox tb = new ToolBox();\n+    final Path base = Paths.get(\".\");\n+    final String processedSource = \"\"\"\n+        import module java.base;\n+        import java.lang.annotation.*;\n+        public class Main {\n+          public static void main(String[] args) {\n+            List.of();\n+          }\n+          @Ann\n+          private void test() {}\n+          @Retention(RetentionPolicy.RUNTIME)\n+          @Target(ElementType.METHOD)\n+          public @interface Ann {}\n+        }\n+        \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        new ModuleImportProcessingTest().test();\n+    }\n+\n+    public void test() throws Exception {\n+        tb.writeJavaFiles(base, processedSource);\n+        new toolbox.JavacTask(tb)\n+                .options(\n+                        \"-processor\", AP.class.getName(),\n+                        \"--enable-preview\",\n+                        \"-source\", Integer.toString(Runtime.version().feature()),\n+                        \"-proc:only\"\n+                )\n+                .outdir(base.toString())\n+                .files(base.resolve(\"Main.java\"))\n+                .run(Task.Expect.SUCCESS)\n+                .writeAll();\n+    }\n+\n+    @SupportedAnnotationTypes(\"*\")\n+    public static final class AP extends AbstractProcessor {\n+\n+        @Override\n+        public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+            return false;\n+        }\n+\n+        @Override\n+        public SourceVersion getSupportedSourceVersion() {\n+            return SourceVersion.latest();\n+        }\n+\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/processing\/ModuleImportProcessingTest.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"}]}