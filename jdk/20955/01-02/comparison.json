{"files":[{"patch":"@@ -1140,6 +1140,6 @@\n-InstanceKlass* SystemDictionary::load_shared_class_impl(InstanceKlass* ik,\n-                                                        Handle class_loader,\n-                                                        Handle protection_domain,\n-                                                        const ClassFileStream *cfs,\n-                                                        PackageEntry* pkg_entry,\n-                                                        TRAPS) {\n+InstanceKlass* SystemDictionary::load_shared_class(InstanceKlass* ik,\n+                                                   Handle class_loader,\n+                                                   Handle protection_domain,\n+                                                   const ClassFileStream *cfs,\n+                                                   PackageEntry* pkg_entry,\n+                                                   TRAPS) {\n@@ -1152,0 +1152,1 @@\n+    ik->set_shared_loading_failed();\n@@ -1156,0 +1157,1 @@\n+    ik->set_shared_loading_failed();\n@@ -1197,15 +1199,0 @@\n-InstanceKlass* SystemDictionary::load_shared_class(InstanceKlass* ik,\n-                                                   Handle class_loader,\n-                                                   Handle protection_domain,\n-                                                   const ClassFileStream *cfs,\n-                                                   PackageEntry* pkg_entry,\n-                                                   TRAPS) {\n-  InstanceKlass* loaded_ik = load_shared_class_impl(ik, class_loader, protection_domain, cfs, pkg_entry, THREAD);\n-  \/\/ We may have a pending exception here\n-  if (loaded_ik != ik) {\n-    assert(loaded_ik == nullptr, \"cannot load alternative class\");\n-    ik->set_shared_loading_failed(); \/\/ ik may be partially updated, never load it again.\n-  }\n-  return loaded_ik;\n-}\n-\n@@ -1301,0 +1288,1 @@\n+        SharedClassLoadingMark slm(THREAD, ik);\n@@ -1314,0 +1302,1 @@\n+      CDS_ONLY(SharedClassLoadingMark slm(THREAD, k);)\n@@ -1555,1 +1544,0 @@\n-    k->set_shared_loading_failed();\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":10,"deletions":22,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -353,6 +353,0 @@\n-  static InstanceKlass* load_shared_class_impl(InstanceKlass* ik,\n-                                               Handle class_loader,\n-                                               Handle protection_domain,\n-                                               const ClassFileStream *cfs,\n-                                               PackageEntry* pkg_entry,\n-                                               TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+      SharedClassLoadingMark slm(THREAD, ik);\n@@ -425,0 +426,1 @@\n+        SharedClassLoadingMark slm(THREAD, k);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,0 +122,16 @@\n+class SharedClassLoadingMark {\n+ private:\n+  Thread* THREAD;\n+  InstanceKlass* _klass;\n+ public:\n+  SharedClassLoadingMark(Thread* current, InstanceKlass* ik) : THREAD(current), _klass(ik) {}\n+  ~SharedClassLoadingMark() {\n+    assert(THREAD != nullptr, \"Current thread is nullptr\");\n+    assert(_klass != nullptr, \"InstanceKlass is nullptr\");\n+    if (HAS_PENDING_EXCEPTION) {\n+      if (_klass->is_shared()) {\n+        _klass->set_shared_loading_failed();\n+      }\n+    }\n+  }\n+};\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}