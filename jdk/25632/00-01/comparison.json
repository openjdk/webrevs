{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import java.io.NotSerializableException;\n@@ -209,1 +208,1 @@\n-                throw new NotSerializableException(\"key is destroyed\");\n+                throw new IllegalStateException(\"key is destroyed\");\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,4 +268,0 @@\n-            if (key.isDestroyed()) {\n-                throw new InvalidKeySpecException(\"Key is destroyed\");\n-            }\n-\n@@ -314,4 +310,0 @@\n-                if (key.isDestroyed()) {\n-                    throw new InvalidKeyException(\"Key is destroyed\");\n-                }\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKeyFactory.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -375,0 +375,1 @@\n+     * @exception IllegalStateException if the given key is already destroyed.\n@@ -378,0 +379,6 @@\n+        if (key == null) {\n+            throw new InvalidKeySpecException(\"Key is null\");\n+        }\n+        if (key.isDestroyed()) {\n+            throw new IllegalStateException(\"Key is destroyed\");\n+        }\n@@ -410,0 +417,1 @@\n+     * @exception IllegalStateException if the given key is already destroyed.\n@@ -413,0 +421,6 @@\n+        if (key == null) {\n+            throw new InvalidKeyException(\"Key is null\");\n+        }\n+        if (key.isDestroyed()) {\n+            throw new IllegalStateException(\"Key is destroyed\");\n+        }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/SecretKeyFactory.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+    private static final Class<IllegalStateException> ISE =\n+            IllegalStateException.class;\n+\n@@ -81,8 +84,2 @@\n-        try {\n-            byte[] val = key1.getEncoded();\n-            throw new Exception(\"getEncoded() should error out, encoding = \" +\n-                    Arrays.toString(val));\n-        } catch (IllegalStateException ise) {\n-            \/\/ expected exception\n-            System.out.println(\"Expected ISE is thrown for getEncoded()\");\n-        }\n+\n+        Assert.assertThrows(ISE, () -> key1.getEncoded());\n@@ -93,21 +90,3 @@\n-        try {\n-            oos.writeObject(key1);\n-            throw new Exception(\"Serialization should error out\");\n-        } catch (NotSerializableException e) {\n-            \/\/ expected exception\n-            System.out.println(\"Expected NSE is thrown for serialization\");\n-        }\n-        try {\n-            skf.translateKey(key1);\n-            throw new Exception(\"translateKey() should error out\");\n-        } catch (InvalidKeyException ike) {\n-            \/\/ expected exception\n-            System.out.println(\"Expected IKE is thrown for translateKey()\");\n-        }\n-        try {\n-            skf.getKeySpec(key1, PBEKeySpec.class);\n-            throw new Exception(\"getKeySpec() should error out\");\n-        } catch (InvalidKeySpecException ikse) {\n-            \/\/ expected exception\n-            System.out.println(\"Expected IKSE is thrown for getKeySpec()\");\n-        }\n+        Assert.assertThrows(ISE, () -> oos.writeObject(key1));\n+        Assert.assertThrows(ISE, () -> skf.translateKey(key1));\n+        Assert.assertThrows(ISE, () -> skf.getKeySpec(key1, PBEKeySpec.class));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyFactory\/PBEKeyDestroyTest.java","additions":8,"deletions":29,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6370923\n+ * @bug 6370923 8358451\n@@ -33,0 +33,1 @@\n+import javax.crypto.spec.SecretKeySpec;\n@@ -44,1 +45,1 @@\n-        skf.translateKey((SecretKey)null);\n+        skf.translateKey(new SecretKeySpec(\"any\".getBytes(), \"DUMMY\"));\n","filename":"test\/jdk\/javax\/crypto\/SecretKeyFactory\/FailOverTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}