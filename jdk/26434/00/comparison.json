{"files":[{"patch":"@@ -33,1 +33,1 @@\n-  do_arch_blob(preuniverse, 0)                                          \\\n+  do_arch_blob(preuniverse, 32)                                         \\\n","filename":"src\/hotspot\/cpu\/aarch64\/stubDeclarations_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11657,1 +11657,6 @@\n-    \/\/ preuniverse stubs are not needed for aarch64\n+    \/\/ Initialize runtime addresses needed by AOTCodeAddressTable.\n+    \/\/ Note, they are not stubs and not located in CodeCache.\n+    if (UseCRC32Intrinsics || UseCRC32CIntrinsics) {\n+      \/\/ set table address before stub generation which use it\n+      StubRoutines::_crc_table_addr = (address)StubRoutines::aarch64::_crc_table;\n+    }\n@@ -11683,2 +11688,0 @@\n-      \/\/ set table address before stub generation which use it\n-      StubRoutines::_crc_table_adr = (address)StubRoutines::aarch64::_crc_table;\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  do_arch_blob(preuniverse, 0)                                          \\\n+  do_arch_blob(preuniverse, 32)                                         \\\n","filename":"src\/hotspot\/cpu\/ppc\/stubDeclarations_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4963,1 +4963,8 @@\n-    \/\/ preuniverse stubs are not needed for ppc\n+    \/\/ Initialize runtime addresses needed by AOTCodeAddressTable.\n+    \/\/ Note, they are not stubs and not located in CodeCache.\n+    if (UseCRC32Intrinsics) {\n+      StubRoutines::_crc_table_addr = StubRoutines::ppc::generate_crc_constants(REVERSE_CRC32_POLY);\n+    }\n+    if (UseCRC32CIntrinsics) {\n+      StubRoutines::_crc32c_table_addr = StubRoutines::ppc::generate_crc_constants(REVERSE_CRC32C_POLY);\n+    }\n@@ -4985,1 +4992,0 @@\n-      StubRoutines::_crc_table_adr = StubRoutines::ppc::generate_crc_constants(REVERSE_CRC32_POLY);\n@@ -4991,1 +4997,0 @@\n-      StubRoutines::_crc32c_table_addr = StubRoutines::ppc::generate_crc_constants(REVERSE_CRC32C_POLY);\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  do_arch_blob(preuniverse, 0)                                          \\\n+  do_arch_blob(preuniverse, 32)                                         \\\n","filename":"src\/hotspot\/cpu\/riscv\/stubDeclarations_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6664,1 +6664,6 @@\n-    \/\/ preuniverse stubs are not needed for riscv\n+    \/\/ Initialize runtime addresses needed by AOTCodeAddressTable.\n+    \/\/ Note, they are not stubs and not located in CodeCache.\n+    if (UseCRC32Intrinsics) {\n+      \/\/ set table address before stub generation which use it\n+      StubRoutines::_crc_table_addr = (address)StubRoutines::riscv::_crc_table;\n+    }\n@@ -6689,2 +6694,0 @@\n-      \/\/ set table address before stub generation which use it\n-      StubRoutines::_crc_table_adr = (address)StubRoutines::riscv::_crc_table;\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  do_arch_blob(preuniverse, 0)                                          \\\n+  do_arch_blob(preuniverse, 32)                                         \\\n","filename":"src\/hotspot\/cpu\/s390\/stubDeclarations_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3287,1 +3287,8 @@\n-    \/\/ preuniverse stubs are not needed for s390\n+    \/\/ Initialize runtime addresses needed by AOTCodeAddressTable.\n+    \/\/ Note, they are not stubs and not located in CodeCache.\n+    if (UseCRC32Intrinsics) {\n+      StubRoutines::_crc_table_addr    = (address)StubRoutines::zarch::_crc_table;\n+    }\n+    if (UseCRC32CIntrinsics) {\n+      StubRoutines::_crc32c_table_addr = (address)StubRoutines::zarch::_crc32c_table;\n+    }\n@@ -3311,1 +3318,0 @@\n-      StubRoutines::_crc_table_adr     = (address)StubRoutines::zarch::_crc_table;\n@@ -3316,1 +3322,0 @@\n-      StubRoutines::_crc32c_table_addr = (address)StubRoutines::zarch::_crc32c_table;\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-  generate_load_absolute_address(masm, table, StubRoutines::_crc_table_adr, table_contents);\n+  generate_load_absolute_address(masm, table, StubRoutines::_crc_table_addr, table_contents);\n","filename":"src\/hotspot\/cpu\/s390\/stubRoutines_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4054,1 +4054,13 @@\n-  StubRoutines::_fence_entry                = generate_orderaccess_fence();\n+  StubRoutines::_fence_entry = generate_orderaccess_fence();\n+\n+  \/\/ Initialize runtime addresses needed by AOTCodeAddressTable.\n+  \/\/ Note, they are not stubs and not located in CodeCache.\n+  if (UseCRC32Intrinsics) {\n+    \/\/ set table address before stub generation which use it\n+    StubRoutines::_crc_table_addr = (address)StubRoutines::x86::_crc_table;\n+  }\n+  if (UseCRC32CIntrinsics) {\n+    bool supports_clmul = VM_Version::supports_clmul();\n+    StubRoutines::x86::generate_CRC32C_table(supports_clmul);\n+    StubRoutines::_crc32c_table_addr = (address)StubRoutines::x86::_crc32c_table;\n+  }\n@@ -4098,2 +4110,0 @@\n-    \/\/ set table address before stub generation which use it\n-    StubRoutines::_crc_table_adr = (address)StubRoutines::x86::_crc_table;\n@@ -4105,2 +4115,0 @@\n-    StubRoutines::x86::generate_CRC32C_table(supports_clmul);\n-    StubRoutines::_crc32c_table_addr = (address)StubRoutines::x86::_crc32c_table;\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-  static_field(StubRoutines,                _crc_table_adr,                                   address)                               \\\n+  static_field(StubRoutines,                _crc_table_addr,                                  address)                               \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-#define STUBGEN_INITIAL_BLOBS_DO(do_blob, end_blob,                      \\\n+#define STUBGEN_INITIAL_BLOBS_DO(do_blob, end_blob,                     \\\n@@ -654,1 +654,1 @@\n-  do_entry(initial, updateBytesCRC32, crc_table_adr, crc_table_addr)    \\\n+  do_entry(initial, updateBytesCRC32, crc_table_addr, crc_table_addr)   \\\n","filename":"src\/hotspot\/share\/runtime\/stubDeclarations.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -147,1 +147,0 @@\n-      return nullptr;\n@@ -149,0 +148,1 @@\n+    return nullptr;\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}