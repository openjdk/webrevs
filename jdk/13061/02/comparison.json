{"files":[{"patch":"@@ -540,2 +540,0 @@\n-java\/net\/SocketOption\/OptionsTest.java                          8304286 windows-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @build jdk.test.lib.Platform jdk.test.lib.NetworkConfiguration\n@@ -38,0 +39,2 @@\n+\n+import jdk.test.lib.NetworkConfiguration;\n@@ -106,7 +109,2 @@\n-            Enumeration<NetworkInterface> nifs = NetworkInterface.getNetworkInterfaces();\n-            while (nifs.hasMoreElements()) {\n-                NetworkInterface ni = nifs.nextElement();\n-                if (ni.supportsMulticast()) {\n-                    return ni;\n-                }\n-            }\n+            NetworkConfiguration nc = NetworkConfiguration.probe();\n+            return nc.multicastInterfaces(true).findAny().orElse(null);\n","filename":"test\/jdk\/java\/net\/SocketOption\/OptionsTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,0 +29,8 @@\n+\/\/ for JTwork\/classes\/test\/lib\/jdk\/test\/lib\/Platform.class\n+grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/test\/lib\/-\" {\n+    permission java.util.PropertyPermission \"*\", \"read\";\n+};\n+\/\/ for JTwork\/classes\/test\/lib\/jdk\/test\/lib\/NetworkConfiguration.class\n+grant codeBase \"file:${test.classes}\/..\/..\/..\/..\/test\/lib\/-\" {\n+    permission java.net.SocketPermission \"*:*\", \"connect\";\n+};\n","filename":"test\/jdk\/java\/net\/SocketOption\/options.policy","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -396,1 +396,4 @@\n-            for (InetAddress addr : list(nif.getInetAddresses())) {\n+            @SuppressWarnings(\"removal\")\n+            List<InetAddress> addrList = AccessController.doPrivileged(\n+                    (PrivilegedAction<List<InetAddress>>) () -> list(nif.getInetAddresses()));\n+            for (InetAddress addr : addrList) {\n","filename":"test\/lib\/jdk\/test\/lib\/NetworkConfiguration.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}