{"files":[{"patch":"@@ -56,1 +56,1 @@\n-  _head.relaxed_store(nullptr);\n+  _head.store_relaxed(nullptr);\n@@ -58,1 +58,1 @@\n-  _count.relaxed_store(0u);\n+  _count.store_relaxed(0u);\n@@ -99,1 +99,1 @@\n-  _free_count.relaxed_store(0u);\n+  _free_count.store_relaxed(0u);\n","filename":"src\/hotspot\/share\/gc\/shared\/freeListAllocator.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    void set_next(FreeNode* next) { _next.relaxed_store(next); }\n+    void set_next(FreeNode* next) { _next.store_relaxed(next); }\n","filename":"src\/hotspot\/share\/gc\/shared\/freeListAllocator.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-    _dead_count.relaxed_store(num_dead);\n+    _dead_count.store_relaxed(num_dead);\n@@ -254,1 +254,1 @@\n-    _dead_count.relaxed_store(num_dead);\n+    _dead_count.store_relaxed(num_dead);\n@@ -675,2 +675,2 @@\n-  _dead_count.relaxed_store(0);\n-  _dead_state.relaxed_store(DeadState::cleaning);\n+  _dead_count.store_relaxed(0);\n+  _dead_state.store_relaxed(DeadState::cleaning);\n@@ -710,1 +710,1 @@\n-  _dead_state.relaxed_store(DeadState::wait2);\n+  _dead_state.store_relaxed(DeadState::wait2);\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupTable.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-\/\/     v.relaxed_store(x) -> void\n+\/\/     v.store_relaxed(x) -> void\n@@ -159,3 +159,3 @@\n-\/\/ * Rather than load\/store operations with a memory order parameter,\n-\/\/ Atomic<T> provides load_{relaxed,acquire}() and {relaxed,release}_store()\n-\/\/ operations, as well as release_store_fence().\n+\/\/ * Rather than load and store operations with a memory order parameter,\n+\/\/ Atomic<T> provides load_relaxed(), load_acquire(), release_store(),\n+\/\/ store_relaxed(), and release_store_fence() operations.\n@@ -269,1 +269,1 @@\n-  void relaxed_store(T value) {\n+  void store_relaxed(T value) {\n@@ -549,2 +549,2 @@\n-  void relaxed_store(T value) {\n-    _value.relaxed_store(decay(value));\n+  void store_relaxed(T value) {\n+    _value.store_relaxed(decay(value));\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    next_access(value)->relaxed_store(new_next);\n+    next_access(value)->store_relaxed(new_next);\n","filename":"src\/hotspot\/share\/utilities\/atomicNextAccess.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-  _head.relaxed_store(&first);\n+  _head.store_relaxed(&first);\n@@ -246,2 +246,2 @@\n-  _head.relaxed_store(nullptr);\n-  _tail.relaxed_store(nullptr);\n+  _head.store_relaxed(nullptr);\n+  _tail.store_relaxed(nullptr);\n","filename":"src\/hotspot\/share\/utilities\/nonblockingQueue.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    new_exit.relaxed_store(++value);\n+    new_exit.store_relaxed(++value);\n@@ -77,1 +77,1 @@\n-  _waiting_for.relaxed_store(old);\n+  _waiting_for.store_relaxed(old);\n","filename":"src\/hotspot\/share\/utilities\/singleWriterSynchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -53,1 +53,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -61,1 +61,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -69,1 +69,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -77,1 +77,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -84,1 +84,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -129,1 +129,1 @@\n-    _test_value.relaxed_store(zero);\n+    _test_value.store_relaxed(zero);\n@@ -156,1 +156,1 @@\n-    _test_value.relaxed_store(zero);\n+    _test_value.store_relaxed(zero);\n@@ -213,1 +213,1 @@\n-      _array[i].relaxed_store(_default_val);\n+      _array[i].store_relaxed(_default_val);\n@@ -234,1 +234,1 @@\n-    _test_value.relaxed_store(value);\n+    _test_value.store_relaxed(value);\n@@ -240,1 +240,1 @@\n-    _test_value.relaxed_store(value1);\n+    _test_value.store_relaxed(value1);\n@@ -249,1 +249,1 @@\n-    _test_value.relaxed_store(value1);\n+    _test_value.store_relaxed(value1);\n@@ -291,1 +291,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -300,1 +300,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -309,1 +309,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -318,1 +318,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -327,1 +327,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -336,1 +336,1 @@\n-    _test_value.relaxed_store(_old_value);\n+    _test_value.store_relaxed(_old_value);\n@@ -384,1 +384,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -392,1 +392,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -400,1 +400,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -408,1 +408,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -416,1 +416,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -423,1 +423,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -430,1 +430,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -438,1 +438,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -452,1 +452,1 @@\n-    _test_value.relaxed_store(nullptr);\n+    _test_value.store_relaxed(nullptr);\n@@ -462,1 +462,1 @@\n-    _test_value.relaxed_store(_initial_ptr);\n+    _test_value.store_relaxed(_initial_ptr);\n@@ -614,1 +614,1 @@\n-  _test_value.relaxed_store(Translated::recover(5));\n+  _test_value.store_relaxed(Translated::recover(5));\n@@ -650,1 +650,1 @@\n-  _test_value.relaxed_store(construct(5));\n+  _test_value.store_relaxed(construct(5));\n","filename":"test\/hotspot\/gtest\/runtime\/test_atomic.cpp","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"}]}