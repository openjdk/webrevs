{"files":[{"patch":"@@ -27,0 +27,1 @@\n+ * @run junit GZIPInputStreamAvailable\n@@ -29,0 +30,3 @@\n+import org.junit.Test;\n+import org.junit.Assert;\n+\n@@ -35,1 +39,2 @@\n-    public static void main(String [] args) throws IOException {\n+    @Test\n+    public void testZeroAvailable() throws IOException {\n@@ -37,3 +42,3 @@\n-        \/\/ Create gz data\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        try (GZIPOutputStream out = new GZIPOutputStream(baos)) {\n+        \/\/ Create some compressed data\n+        ByteArrayOutputStream buf = new ByteArrayOutputStream();\n+        try (GZIPOutputStream out = new GZIPOutputStream(buf)) {\n@@ -42,1 +47,1 @@\n-        final byte[] gz = baos.toByteArray();\n+        byte[] gz = buf.toByteArray();\n@@ -44,5 +49,5 @@\n-        \/\/ Repeat 32 times\n-        baos.reset();\n-        for(int i = 0; i < 32; i++)\n-            baos.write(gz);\n-        final byte[] gz32 = baos.toByteArray();\n+        \/\/ Repeat to build a sequence of concatenated compressed streams\n+        buf.reset();\n+        for(int i = 0; i < 100; i++)\n+            buf.write(gz);\n+        final byte[] gz32 = buf.toByteArray();\n@@ -50,5 +55,2 @@\n-        \/\/ (a) Read it from a stream where available() is accurate\n-        final long count1;\n-        try (GZIPInputStream in = new GZIPInputStream(new ByteArrayInputStream(gz32))) {\n-            count1 = countBytes(in);\n-        }\n+        \/\/ (a) Read it back from a stream where available() is accurate\n+        long count1 = countBytes(new GZIPInputStream(new ByteArrayInputStream(gz32)));\n@@ -56,5 +58,2 @@\n-        \/\/ (a) Read it from a stream where available() always returns zero\n-        final long count2;\n-        try (GZIPInputStream in = new GZIPInputStream(new ZeroAvailableInputStream(new ByteArrayInputStream(gz32)))) {\n-            count2 = countBytes(in);\n-        }\n+        \/\/ (b) Read it back from a stream where available() always returns zero\n+        long count2 = countBytes(new GZIPInputStream(new ZeroAvailableInputStream(new ByteArrayInputStream(gz32))));\n@@ -63,2 +62,1 @@\n-        if (count2 != count1)\n-            throw new AssertionError(count2 + \" != \" + count1);\n+        Assert.assertEquals(count2, count1);\n@@ -67,1 +65,1 @@\n-    public static long countBytes(InputStream in) throws IOException {\n+    public long countBytes(InputStream in) throws IOException {\n@@ -71,0 +69,1 @@\n+        in.close();\n","filename":"test\/jdk\/java\/util\/zip\/GZIP\/GZIPInputStreamAvailable.java","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"}]}