{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import javax.lang.model.element.TypeParameterElement;\n@@ -158,1 +159,1 @@\n-        Content c = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n+        var c = new ContentBuilder();\n@@ -167,5 +168,7 @@\n-        buildClassSignature(c);\n-        buildDeprecationInfo(c);\n-        buildClassDescription(c);\n-        buildClassTagInfo(c);\n-\n+        c.add(new HtmlTree(HtmlTag.HR));\n+        var div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n+        buildClassSignature(div);\n+        buildDeprecationInfo(div);\n+        buildClassDescription(div);\n+        buildClassTagInfo(div);\n+        c.add(div);\n@@ -435,3 +438,0 @@\n-        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n-                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n-                .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n@@ -440,1 +440,1 @@\n-        heading.add(getTypeParameterLinks(linkInfo));\n+        heading.add(getTypeParameters());\n@@ -448,0 +448,29 @@\n+    \/\/ Renders type parameters for the class heading, creating id attributes\n+    \/\/ if @param block tags are missing in doc comment.\n+    private Content getTypeParameters() {\n+        var content = new ContentBuilder();\n+        var typeParams = typeElement.getTypeParameters();\n+        if (!typeParams.isEmpty()) {\n+            \/\/ Generate id attributes if @param tags are missing for type parameters.\n+            \/\/ Note that this does not handle the case where some but not all @param tags are missing.\n+            var needsId = !utils.hasBlockTag(typeElement, DocTree.Kind.PARAM);\n+            var linkInfo = new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n+                    .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n+            content.add(\"<\");\n+            var first = true;\n+            for (TypeParameterElement t : typeParams) {\n+                if (!first) {\n+                    content.add(\",\").add(new HtmlTree(HtmlTag.WBR));\n+                }\n+                var typeParamLink = getLink(linkInfo.forType(t.asType()));\n+                content.add(needsId\n+                        ? HtmlTree.SPAN_ID(htmlIds.forTypeParam(t.getSimpleName().toString(), typeElement), typeParamLink)\n+                        : typeParamLink);\n+                first = false;\n+            }\n+            content.add(\">\");\n+        }\n+        return content;\n+    }\n+\n@@ -476,1 +505,0 @@\n-        classInfo.add(new HtmlTree(HtmlTag.HR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":39,"deletions":11,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -465,0 +465,16 @@\n+    \/**\n+     * Returns an id for text documenting a type parameter of a class or method.\n+     *\n+     * @param paramName the name of the type parameter\n+     * @param owner the enclosing element\n+     *\n+     * @return the id\n+     *\/\n+    public HtmlId forTypeParam(String paramName, Element owner) {\n+        if (utils.isExecutableElement(owner)) {\n+            return HtmlId.of(forMember((ExecutableElement) owner).getFirst().name()\n+                    + \"-type-param-\" + paramName);\n+        }\n+        return HtmlId.of(\"type-param-\" + paramName);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -165,3 +165,5 @@\n-                        Content label = newContent();\n-                        label.add(utils.getTypeName(type, false));\n-                        linkInfo.label(label).skipPreview(true);\n+                        if (linkInfo.getLabel() == null || linkInfo.getLabel().isEmpty()) {\n+                            Content label = newContent();\n+                            label.add(utils.getTypeName(type, false));\n+                            linkInfo.label(label).skipPreview(true);\n+                        }\n@@ -245,0 +247,5 @@\n+            if (isTypeLink) {\n+                linkInfo.fragment(m_writer.configuration.htmlIds.forTypeParam(\n+                        utils.getTypeName(utils.getComponentType(linkInfo.getType()), false),\n+                        typeElement).name());\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -235,0 +235,14 @@\n+    \/\/ Reset animation for type parameter target highlight\n+    document.querySelectorAll(\"a\").forEach((link) => {\n+        link.addEventListener(\"click\", (e) => {\n+            const href = e.currentTarget.getAttribute(\"href\");\n+            if (href && href.startsWith(\"#\") && href.indexOf(\"type-param-\") > -1) {\n+                const target = document.getElementById(decodeURI(href.substring(1)));\n+                if (target) {\n+                    target.style.animation = \"none\";\n+                    void target.offsetHeight;\n+                    target.style.removeProperty(\"animation\");\n+                }\n+            }\n+        })\n+    });\n@@ -289,1 +303,1 @@\n-    function collapse() {\n+    function collapse(e) {\n@@ -339,1 +353,1 @@\n-            var id = hdr.getAttribute(\"id\") || hdr.parentElement.getAttribute(\"id\")\n+            var id = hdr.parentElement.getAttribute(\"id\") || hdr.getAttribute(\"id\")\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    --search-tag-highlight-color: #ffff00;\n+    --search-tag-highlight-color: #ffff66;\n@@ -310,1 +310,1 @@\n-    margin:10px 0;\n+    margin:10px 0 12px 0;\n@@ -991,0 +991,16 @@\n+dd > span:target,\n+h1 > span:target {\n+    animation: 2.4s ease-out highlight;\n+}\n+section.class-description dd > span:target,\n+section.class-description h1 > span:target {\n+    scroll-margin-top: 20em;\n+}\n+@keyframes highlight {\n+    from {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+    60% {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+}\n@@ -1043,1 +1059,1 @@\n-    margin: 10px 0 10px 0;\n+    margin: 10px 0;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,1 +179,1 @@\n-                String refModuleName =  ch.getReferencedModuleName(refSignature);\n+                String refModuleName = ch.getReferencedModuleName(refSignature);\n@@ -193,1 +193,1 @@\n-                                new Object[] { refSignature});\n+                                new Object[] {refSignature});\n@@ -196,1 +196,1 @@\n-                            Optional.of(labelContent.isEmpty() ? text: labelContent));\n+                            Optional.of(labelContent.isEmpty() ? text : labelContent));\n@@ -199,0 +199,16 @@\n+        } else if (utils.isTypeParameterElement(ref)) {\n+            \/\/ This is a type parameter of a generic class, method or constructor\n+            if (labelContent.isEmpty()) {\n+                labelContent = plainOrCode(isPlain, Text.of(utils.getSimpleName(ref)));\n+            }\n+            if (refMem == null) {\n+                return htmlWriter.getLink(\n+                        new HtmlLinkInfo(config, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS, ref.asType())\n+                                .label(labelContent));\n+            } else {\n+                \/\/ HtmlLinkFactory does not render type parameters of generic methods as links, so instead of\n+                \/\/ teaching it how to do it (making the code even more complex) just create the link directly.\n+                return htmlWriter.getLink(new HtmlLinkInfo(config, HtmlLinkInfo.Kind.PLAIN, refClass)\n+                        .fragment(config.htmlIds.forTypeParam(ref.getSimpleName().toString(), refMem).name())\n+                        .label((labelContent)));\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LinkTaglet.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,3 @@\n-        return HtmlTree.DD(body);\n+        return HtmlTree.DD(paramTag.isTypeParameter()\n+                ? HtmlTree.SPAN_ID(config.htmlIds.forTypeParam(paramName, element), body)\n+                : body);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ParamTaglet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -191,0 +191,6 @@\n+        } else if (utils.isTypeParameterElement(e)) {\n+            \/\/ Return the enclosing member for type parameters of generic methods or constructors.\n+            Element encl = e.getEnclosingElement();\n+            if (utils.isExecutableElement(encl)) {\n+                return encl;\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,0 @@\n-                    <hr>\n@@ -138,1 +137,0 @@\n-                    <hr>\n@@ -215,1 +213,0 @@\n-                    <hr>\n@@ -236,1 +233,0 @@\n-                    <hr>\n@@ -247,1 +243,0 @@\n-                    <hr>\n@@ -258,1 +253,0 @@\n-                    <hr>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDeprecatedDocs\/TestDeprecatedDocs.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,2 +157,2 @@\n-                <dd><code>E<\/code> - I2: first type parameter<\/dd>\n-                <dd><code>F<\/code> - I2: second type parameter<\/dd>\n+                <dd><span id=\"m(E)-type-param-E\"><code>E<\/code> - I2: first type parameter<\/span><\/dd>\n+                <dd><span id=\"m(E)-type-param-F\"><code>F<\/code> - I2: second type parameter<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDirectedInheritance\/TestDirectedInheritance.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -230,1 +230,1 @@\n-                method-summary-table-tab3\"><code>abstract <a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n+                method-summary-table-tab3\"><code>abstract <a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n@@ -233,1 +233,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -388,1 +388,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testErasure\/TestErasure.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8188248\n+ * @bug      8188248 8313931\n@@ -70,1 +70,1 @@\n-                    <a href=\"A.html\" title=\"class in pkg\"><code>A<\/code><\/a>\"\"\");\n+                    param <a href=\"#m1(T)-type-param-T\"><code>T<\/code><\/a>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testGenericMethodLinkTaglet\/TestGenericMethodLinkTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-                \"Class C4&lt;E extends C4&lt;E&gt;&gt;<\/h1>\",\n+                \"\"\"\n+                    Class C4&lt;<span id=\"type-param-E\">E extends C4&lt;E&gt;<\/span>&gt;<\/h1>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHref\/TestHref.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-                     href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n+                     href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n@@ -107,1 +107,1 @@\n-                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"Child.html\\\n+                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"#type-param-CE\\\n@@ -193,1 +193,1 @@\n-                a href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n+                a href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n@@ -212,1 +212,1 @@\n-                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html\" title=\"type parameter in Spli\\\n+                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spli\\\n@@ -215,3 +215,3 @@\n-                .html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n-                iterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n-                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spl\\\n+                .html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n+                iterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n+                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spl\\\n@@ -220,3 +220,3 @@\n-                OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n-                a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPri\\\n-                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n+                a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPri\\\n+                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type param\\\n@@ -239,1 +239,1 @@\n-                Spliterator.OfInt.html\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n+                Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n@@ -245,2 +245,2 @@\n-                &lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.\\\n-                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                &lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.\\\n+                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type param\\\n@@ -248,1 +248,1 @@\n-                e.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n+                e.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n@@ -250,2 +250,2 @@\n-                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in S\\\n-                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\\\n+                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in S\\\n+                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\\\n@@ -253,1 +253,1 @@\n-                .OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n+                .OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInterface\/TestInterface.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8313931\n+ * @summary  Javadoc: links to type parameters actually generate links to classes\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestLinkTagletTypeParam\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+public class TestLinkTagletTypeParam extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestLinkTagletTypeParam();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @JavadocTester.Test\n+    public void testClassTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    \/**\n+                     * Link to {@link F}.\n+                     *\n+                     * @param <F> the first type param\n+                     * @param <APND> an Appendable\n+                     *\n+                     * @see APND the second type parameter\n+                     *\/\n+                    public class Test<F, APND extends Appendable> {\n+                        private Test() {}\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:none\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+        checkExit(JavadocTester.Exit.OK);\n+\n+        checkOrder(\"Test.html\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"type-param-F\"><code>F<\/code> - the first type param<\/span><\/dd>\n+                    <dd><span id=\"type-param-APND\"><code>APND<\/code> - an Appendable<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    Link to <a href=\"#type-param-F\" title=\"type parameter in Test\"><code>F<\/code><\/a>.\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#type-param-APND\" title=\"type parameter in Test\">the second type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n+    }\n+\n+    @JavadocTester.Test\n+    public void testMethodTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+               \"\"\"\n+                    \/**\n+                     * Class comment.\n+                     *\/\n+                    public class Test {\n+                        \/**\n+                         * Link to {@link T} and {@linkplain T link with label}.\n+                         *\n+                         * @param <T> the T\n+                         * @param appendable the appendable\n+                         *\/\n+                        public <T extends Appendable> T append(final T appendable) {\n+                            return appendable;\n+                        }\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+\n+        checkOutput(JavadocTester.Output.OUT, true,\n+                \"\");\n+\n+        checkOutput(\"Test.html\", true,\n+                \"\"\"\n+                    Link to <a href=\"#append(T)-type-param-T\"><code>T<\/code><\/a> and <a href=\"#appe\\\n+                    nd(T)-type-param-T\">link with label<\/a>.\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkTagletTypeParam.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -125,0 +124,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/TestMemberInheritance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1363,1 +1363,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -1365,0 +1364,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-                    <dd><code>E<\/code> - the type parameter for this class.\"\"\",\n+                    <dd><span id=\"type-param-E\"><code>E<\/code> - the type parameter for this class.<\/span><\/dd>\"\"\",\n@@ -133,1 +133,1 @@\n-                    (<a href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n+                    (<a href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n@@ -137,2 +137,4 @@\n-                    <dd><code>T<\/code> - This is the first type parameter.<\/dd>\n-                    <dd><code>V<\/code> - This is the second type parameter.\"\"\",\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-T\"><code>T<\/code> - Th\\\n+                    is is the first type parameter.<\/span><\/dd>\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-V\"><code>V<\/code> - Th\\\n+                    is is the second type parameter.<\/span><\/dd>\"\"\",\n@@ -150,1 +152,1 @@\n-                    ab2 method-summary-table-tab4\"><code><a href=\"TypeParameters.html\" title=\"type p\\\n+                    ab2 method-summary-table-tab4\"><code><a href=\"#type-param-E\" title=\"type p\\\n@@ -155,1 +157,1 @@\n-                    ref=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n+                    ref=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n@@ -159,1 +161,1 @@\n-                    lass=\"return-type\"><a href=\"TypeParameters.html\" title=\"type parameter in TypePa\\\n+                    lass=\"return-type\"><a href=\"#type-param-E\" title=\"type parameter in TypePa\\\n@@ -161,1 +163,1 @@\n-                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"TypeParameters.html\" titl\\\n+                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"#type-param-E\" titl\\\n@@ -179,1 +181,1 @@\n-                    href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n+                    href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewLanguageFeatures\/TestNewLanguageFeatures.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-                    <dd><code>T2<\/code> - type 2<\/dd>\n+                    <dd><span id=\"genericMethod(T1,T2,T3)-type-param-T2\"><code>T2<\/code> - type 2<\/span><\/dd>\n@@ -95,1 +95,1 @@\n-                    <dd><code>T1<\/code> - type 1<\/dd>\n+                    <dd><span id=\"type-param-T1\"><code>T1<\/code> - type 1<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/TestParamTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"MyClassT.html\" title=\"type paramete\\\n+                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"#type-param-T\" title=\"type paramete\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testProperty\/TestProperty.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-                    <dd><code>T<\/code> - This is a type parameter.<\/dd>\n+                    <dd><span id=\"type-param-T\"><code>T<\/code> - This is a type parameter.<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,2 @@\n-                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html\" title=\"type parameter in Fields\">E<\/a>&gt; someClass\"\"\");\n+                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html#type-param-E\" title=\"type paramete\\\n+                    r in Fields\">E<\/a>&gt; someClass\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSerializedForm\/TestSerializedForm.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-                     <dd><code>T<\/code> - the throwable<\/dd>\n+                     <dd><span id=\"m()-type-param-T\"><code>T<\/code> - the throwable<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrows\/TestThrows.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976\n+ * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976 8313931\n@@ -113,1 +113,2 @@\n-                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\",\n+                    <div class=\"col-last even-row-color\">\n+                    <div class=\"block\">Generic constructor.<\/div>\"\"\",\n@@ -117,1 +118,12 @@\n-                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\");\n+                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\",\n+                \"\"\"\n+                    <a href=\"#%3Cinit%3E()-type-param-T\"><code>T<\/code><\/a>\"\"\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"&lt;init&gt;()-type-param-T\"><code>T<\/code> - the type parameter<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#%3Cinit%3E()-type-param-T\">link to type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/TestTypeParameters.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,0 +27,6 @@\n+    \/**\n+     * Generic constructor. {@link T}\n+     *\n+     * @param <T> the type parameter\n+     * @see T link to type parameter\n+     *\/\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/pkg\/CtorTypeParam.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                    <dd><code>##<\/code> - the ##<\/dd>\n+                    <dd><span id=\"type-param-##\"><code>##<\/code> - the ##<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testUnicode\/TestUnicode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}