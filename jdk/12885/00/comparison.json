{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -332,1 +332,1 @@\n-        Objects.requireNonNull(annotationType);\n+        Objects.requireNonNull(annotationType, \"annotationType\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/AnnotationElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -696,2 +696,2 @@\n-        Objects.requireNonNull(id);\n-        Objects.requireNonNull(value);\n+        Objects.requireNonNull(id, \"id\");\n+        Objects.requireNonNull(value, \"value\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -196,1 +196,1 @@\n-        Objects.requireNonNull(name);\n+        Objects.requireNonNull(name, \"name\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,0 +270,1 @@\n+        Objects.requireNonNull(path, \"path\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingFile.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -444,1 +444,1 @@\n-        Objects.requireNonNull(destination);\n+        Objects.requireNonNull(destination, \"destination\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,2 +112,2 @@\n-            Objects.requireNonNull(name);\n-            Objects.requireNonNull(value);\n+            Objects.requireNonNull(name, \"name\");\n+            Objects.requireNonNull(value, \"value\");\n@@ -213,3 +213,3 @@\n-    private RemoteRecordingStream(MBeanServerConnection connection, Path dir, boolean delete) throws IOException {\n-        Objects.requireNonNull(connection);\n-        Objects.requireNonNull(dir);\n+    private RemoteRecordingStream(MBeanServerConnection connection, Path directory, boolean delete) throws IOException {\n+        Objects.requireNonNull(connection, \"connection\");\n+        Objects.requireNonNull(directory, \"directory\");\n@@ -218,1 +218,1 @@\n-        path = Paths.get(dir.toString());\n+        path = Paths.get(directory.toString());\n@@ -337,1 +337,1 @@\n-        Objects.requireNonNull(settings);\n+        Objects.requireNonNull(settings, \"settings\");\n@@ -358,1 +358,1 @@\n-        Objects.requireNonNull(name);\n+        Objects.requireNonNull(name, \"name\");\n@@ -382,1 +382,1 @@\n-        Objects.requireNonNull(name);\n+        Objects.requireNonNull(name, \"name\");\n@@ -660,1 +660,1 @@\n-        Objects.requireNonNull(destination);\n+        Objects.requireNonNull(destination, \"destination\");\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/RemoteRecordingStream.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}