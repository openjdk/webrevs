{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @author mikhail.cherkasov@oracle.com\n@@ -33,3 +32,10 @@\n-\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Point;\n+import java.awt.ScrollPane;\n+import java.awt.event.KeyEvent;\n@@ -38,6 +44,11 @@\n-  ScrollPane pane;\n-  MyCanvas myCanvas;\n-\n-  class MyCanvas extends Canvas {\n-    public Dimension getPreferredSize() {\n-      return new Dimension(400, 800);\n+    ScrollPane pane;\n+    MyCanvas myCanvas;\n+\n+    public bug8077409Test() {\n+        super();\n+        setLayout(new BorderLayout());\n+        pane = new ScrollPane();\n+        myCanvas = new MyCanvas();\n+        pane.add(myCanvas);\n+        add(pane, BorderLayout.CENTER);\n+        setSize(320, 480);\n@@ -46,9 +57,16 @@\n-    public void paint(Graphics g) {\n-      g.setColor(Color.BLACK);\n-      g.drawLine(0, 0, 399, 0);\n-      g.setColor(Color.RED);\n-      g.drawLine(0, 1, 399, 1);\n-      g.setColor(Color.BLUE);\n-      g.drawLine(0, 2, 399, 2);\n-      g.setColor(Color.GREEN);\n-      g.drawLine(0, 3, 399, 3);\n+    public static void main(String[] args) throws AWTException, InterruptedException {\n+        final bug8077409Test obj = new bug8077409Test();\n+        try {\n+            obj.setLocationRelativeTo(null);\n+            obj.setVisible(true);\n+            Point scrollPosition = obj.pane.getScrollPosition();\n+            scrollPosition.translate(0, 1);\n+            obj.pane.setScrollPosition(scrollPosition);\n+            int y = obj.pane.getComponent(0).getLocation().y;\n+            obj.pane.validate();\n+            if (y != obj.pane.getComponent(0).getLocation().y) {\n+                throw new RuntimeException(\"Wrong position of component in ScrollPane\");\n+            }\n+        } finally {\n+            obj.dispose();\n+        }\n@@ -57,18 +75,4 @@\n-  }\n-\n-  public bug8077409Test() {\n-    super();\n-    setLayout(new BorderLayout());\n-    pane = new ScrollPane();\n-\n-    myCanvas = new MyCanvas();\n-    pane.add(myCanvas);\n-\n-    add(pane, BorderLayout.CENTER);\n-    setSize(320, 480);\n-\n-  }\n-\n-  @Override\n-  protected void processKeyEvent(KeyEvent e) {\n-    super.processKeyEvent(e);\n+    @Override\n+    protected void processKeyEvent(KeyEvent e) {\n+        super.processKeyEvent(e);\n+    }\n@@ -76,1 +80,5 @@\n-  }\n+    class MyCanvas extends Canvas {\n+        @Override\n+        public Dimension getPreferredSize() {\n+            return new Dimension(400, 800);\n+        }\n@@ -78,26 +86,10 @@\n-  public static void main(String[] args) throws AWTException, InterruptedException {\n-    final bug8077409Test obj = new bug8077409Test();\n-    obj.setVisible(true);\n-    Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {\n-      @Override\n-      public void eventDispatched(AWTEvent e) {\n-        KeyEvent keyEvent = (KeyEvent) e;\n-        if(keyEvent.getID() == KeyEvent.KEY_RELEASED) {\n-            if (keyEvent.getKeyCode() == KeyEvent.VK_1) {\n-              System.out.println(obj.pane.toString());\n-              System.out.println(\"obj.myCanvas.pos: \" + obj.myCanvas.getBounds());\n-              System.out.println(obj.myCanvas.toString());\n-            }  else if (keyEvent.getKeyCode() == KeyEvent.VK_2) {\n-              obj.repaint();\n-           } else if (keyEvent.getKeyCode() == KeyEvent.VK_DOWN) {\n-              Point scrollPosition = obj.pane.getScrollPosition();\n-              scrollPosition.translate(0, 1);\n-              obj.pane.setScrollPosition(scrollPosition);\n-            } else if (keyEvent.getKeyCode() == KeyEvent.VK_UP) {\n-              Point scrollPosition = obj.pane.getScrollPosition();\n-              scrollPosition.translate(0, -1);\n-              obj.pane.setScrollPosition(scrollPosition);\n-            } else if (keyEvent.getKeyCode() == KeyEvent.VK_SPACE) {\n-              obj.pane.validate();\n-            }\n-          }\n+        @Override\n+        public void paint(Graphics g) {\n+            g.setColor(Color.BLACK);\n+            g.drawLine(0, 0, 399, 0);\n+            g.setColor(Color.RED);\n+            g.drawLine(0, 1, 399, 1);\n+            g.setColor(Color.BLUE);\n+            g.drawLine(0, 2, 399, 2);\n+            g.setColor(Color.GREEN);\n+            g.drawLine(0, 3, 399, 3);\n@@ -105,4 +97,0 @@\n-    }, AWTEvent.KEY_EVENT_MASK);\n-      Point scrollPosition = obj.pane.getScrollPosition();\n-      scrollPosition.translate(0, 1);\n-      obj.pane.setScrollPosition(scrollPosition);\n@@ -110,6 +98,1 @@\n-      int y = obj.pane.getComponent(0).getLocation().y;\n-      obj.pane.validate();\n-      if(y != obj.pane.getComponent(0).getLocation().y){\n-          throw new RuntimeException(\"Wrong position of component in ScrollPane\");\n-      }\n-  }\n+    }\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/bug8077409Test.java","additions":58,"deletions":75,"binary":false,"changes":133,"status":"modified"}]}