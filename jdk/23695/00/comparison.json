{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -34,1 +35,0 @@\n-DEBUG_ONLY(bool AsyncLogWriter::ignore_recursive_logging = false;)\n@@ -119,1 +119,1 @@\n-    if (!AsyncLogWriter::ignore_recursive_logging) {\n+    if (!TestingAsyncLoggingDeathTestNoCrash) {\n@@ -123,0 +123,1 @@\n+\n@@ -145,2 +146,7 @@\n-  DEBUG_ONLY(log_debug(deathtest)(\"Induce a recursive log for testing (for crashing)\");)\n-  DEBUG_ONLY(log_debug(deathtest2)(\"Induce a recursive log for testing\");)\n+\n+#ifdef ASSERT\n+  if (TestingAsyncLoggingDeathTest || TestingAsyncLoggingDeathTestNoCrash) {\n+    log_debug(deathtest)(\"Induce a recursive log for testing\");\n+  }\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -201,1 +201,0 @@\n-  DEBUG_ONLY(static bool ignore_recursive_logging;)\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-  DEBUG_ONLY(LOG_TAG(deathtest2)) \/* Log Internal death test tag *\/ \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -81,7 +81,1 @@\n-#ifdef ASSERT\n-  \/\/ If we log for tag deathtest2 then we're testing that recursive logging works.\n-  \/\/ In this case, do not crash when detecting recursive logging.\n-  if (this->contains(LogTagType::_deathtest2)) {\n-    AsyncLogWriter::ignore_recursive_logging = true;\n-  }\n-#endif\n+\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -484,0 +484,4 @@\n+  develop(bool, TestingAsyncLoggingDeathTest, falseInDebug,                 \\\n+          \"Recursive logging death test\")                                   \\\n+  develop(bool, TestingAsyncLoggingDeathTestNoCrash, falseInDebug,          \\\n+          \"Recursive logging death test (no crash)\")                        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        \/\/ For deathtest we expect the VM to reach ShouldNotReachHere() and die\n+        \/\/ TestingAsyncLoggingDeathTest is set: We expect the VM to reach ShouldNotReachHere() and die.\n@@ -43,1 +43,1 @@\n-            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:os,deathtest=debug\", \"-XX:-CreateCoredumpOnCrash\", \"--version\");\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:os,deathtest=debug\", \"-XX:-CreateCoredumpOnCrash\", \"-XX:+TestingAsyncLoggingDeathTest\", \"--version\");\n@@ -47,1 +47,1 @@\n-        \/\/ For deathtest2 we expect the VM to ignore that recursive logging has been detected and is handled by printing synchronously.\n+        \/\/ TestingAsyncLoggingDeathTestNoCrash is set: We expect the VM to ignore that recursive logging has been detected and the logging should be handled by printing synchronously.\n@@ -49,1 +49,1 @@\n-            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:os,deathtest2=debug\", \"--version\");\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:os,deathtest=debug\", \"-XX:+TestingAsyncLoggingDeathTestNoCrash\" , \"--version\");\n@@ -53,0 +53,7 @@\n+\n+        \/\/ For -Xlog:all=debug but without any global set, the test should succeed and not contain the recursive message.\n+        ProcessBuilder pb3 =\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:all=debug\", \"--version\");\n+        OutputAnalyzer output3 = new OutputAnalyzer(pb3.start());\n+        output3.shouldHaveExitValue(0);\n+        output3.shouldNotContain(\"Induce a recursive log for testing\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/AsyncDeathTest.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"}]}