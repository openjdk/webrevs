{"files":[{"patch":"@@ -338,3 +338,3 @@\n-  assert(Space::is_aligned(eden_start), \"checking alignment\");\n-  assert(Space::is_aligned(from_start), \"checking alignment\");\n-  assert(Space::is_aligned(to_start),   \"checking alignment\");\n+  assert(is_aligned(eden_start, SpaceAlignment), \"checking alignment\");\n+  assert(is_aligned(from_start, SpaceAlignment), \"checking alignment\");\n+  assert(is_aligned(to_start, SpaceAlignment),   \"checking alignment\");\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-    assert(is_aligned(obj) && is_aligned(new_top), \"checking alignment\");\n+    assert(is_object_aligned(obj) && is_object_aligned(new_top), \"checking alignment\");\n@@ -218,1 +218,1 @@\n-        assert(is_aligned(obj) && is_aligned(new_top), \"checking alignment\");\n+        assert(is_object_aligned(obj) && is_object_aligned(new_top), \"checking alignment\");\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,5 +125,0 @@\n-  \/\/ Test whether p is double-aligned\n-  static bool is_aligned(void* p) {\n-    return ::is_aligned(p, sizeof(double));\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}