{"files":[{"patch":"@@ -2445,1 +2445,1 @@\n-    \/*\n+    \/**\n@@ -2447,0 +2447,4 @@\n+     * @param loader the class loader used to look up the native library symbol\n+     * @param clazz the class in which the native method is declared\n+     * @param entryName the native method's mangled name (this is the name used for the native lookup)\n+     * @param javaName the native method's declared name\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-                    System.err.printf(\"\"\"\n+                    VM.initialErr().printf(\"\"\"\n@@ -339,1 +339,1 @@\n-                    System.err.printf(\"\"\"\n+                    VM.initialErr().printf(\"\"\"\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -832,1 +832,1 @@\n-     * @throws     IllegalCallerException If the caller is in a module that\n+     * @throws     IllegalCallerException if the caller is in a module that\n@@ -903,1 +903,1 @@\n-     * @throws     IllegalCallerException If the caller is in a module that\n+     * @throws     IllegalCallerException if the caller is in a module that\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2022,1 +2022,1 @@\n-     * @throws     IllegalCallerException If the caller is in a module that\n+     * @throws     IllegalCallerException if the caller is in a module that\n@@ -2065,1 +2065,1 @@\n-     * @throws     IllegalCallerException If the caller is in a module that\n+     * @throws     IllegalCallerException if the caller is in a module that\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n@@ -687,1 +687,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n@@ -736,1 +736,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n@@ -322,1 +322,1 @@\n-     * @throws IllegalCallerException If the caller is in a module that does not have\n+     * @throws IllegalCallerException if the caller is in a module that does not have\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n- * control how illegal access to restricted method is handled, using the command line\n+ * control how access to restricted methods is handled, using the command line\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,2 +285,6 @@\n-     * Ensure that the given module has native access. If not, warn or\n-     * throw exception depending on the configuration.\n+     * Ensure that the given module has native access. If not, warn or throw exception depending on the configuration.\n+     * @param m the module in which native access occurred\n+     * @param owner the owner of the restricted method being called (or the JNI method being bound)\n+     * @param methodName the name of the restricted method being called (or the JNI method being bound)\n+     * @param currentClass the class calling the restricted method (for JNI, this is the same as {@code owner})\n+     * @param jni {@code true}, if this event is related to a JNI method being bound\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -585,3 +585,1 @@\n-\\f[V]deny\\f[R]: This mode disables all illegal native access except for\n-those modules enabled by the \\f[V]--enable-native-access\\f[R]\n-command-line option.\n+\\f[V]deny\\f[R]: This mode disables illegal native access.\n","filename":"src\/java.base\/share\/man\/java.1","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}