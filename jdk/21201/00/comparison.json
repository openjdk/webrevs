{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -873,4 +873,6 @@\n-            for (ModuleSymbol msym : modules.allModules()) {\n-                PackageSymbol p = syms.getPackage(msym, pack);\n-                if (p != null && !p.members().isEmpty()) {\n-                    return msym;\n+            if (modules.modulesInitialized()) {\n+                for (ModuleSymbol msym : modules.allModules()) {\n+                    PackageSymbol p = syms.getPackage(msym, pack);\n+                    if (p != null && !p.members().isEmpty()) {\n+                        return msym;\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325090\n+ * @summary javadoc fails when -subpackages option is used with non-modular -source\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.api\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @library \/tools\/lib\n+ * @build toolbox.TestRunner toolbox.ToolBox\n+ * @run main SubpackageNoModules\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import toolbox.*;\n+import toolbox.Task.Expect;\n+\n+public class SubpackageNoModules extends TestRunner {\n+\n+    final ToolBox tb = new ToolBox();\n+\n+    public SubpackageNoModules() {\n+        super(System.err);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SubpackageNoModules t = new SubpackageNoModules();\n+        t.runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testSubpackageNoModules(Path base) throws Exception {\n+        Files.createDirectories(base);\n+        tb.writeFile(base.resolve(\"pkg\/A.java\"), \"package pkg;\\npublic class A {}\\n\");\n+\n+        Path outDir = base.resolve(\"out\");\n+        Files.createDirectory(outDir);\n+        \/\/ Combine -subpackages option with -source release that doesn't support modules\n+        new JavadocTask(tb)\n+                .outdir(outDir)\n+                .sourcepath(base)\n+                .options(\"-source\", \"8\",\n+                        \"-subpackages\", \"pkg\")\n+                .run(Expect.SUCCESS);\n+        \/\/ Check for presence of generated docs\n+        if (!Files.isRegularFile(outDir.resolve(\"pkg\/A.html\"))) {\n+            error(\"File not found: \" + outDir.resolve(\"pkg\/A.html\"));\n+        }\n+\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/subpackageNoModules\/SubpackageNoModules.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}