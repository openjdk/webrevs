{"files":[{"patch":"@@ -500,1 +500,1 @@\n-  if (is_trace_superword_all()) {\n+  if (is_trace_superword_verbose()) {\n@@ -1186,2 +1186,2 @@\n-  if (TraceSuperWord || is_trace_align_vector()) {\n-    tty->print_cr(\"\\nfilter_packs_for_alignment:\");\n+  if (is_trace_superword_info() || is_trace_align_vector()) {\n+    tty->print_cr(\"\\nSuperWord::filter_packs_for_alignment:\");\n@@ -1217,0 +1217,6 @@\n+#ifndef PRODUCT\n+          if (is_trace_superword_rejections() || is_trace_align_vector()) {\n+            tty->print_cr(\"Rejected by AlignVector:\");\n+            p->at(0)->dump();\n+          }\n+#endif\n@@ -1228,1 +1234,1 @@\n-  if (TraceSuperWord || is_trace_align_vector()) {\n+  if (is_trace_superword_info() || is_trace_align_vector()) {\n@@ -1251,1 +1257,1 @@\n-  if (TraceSuperWord || is_trace_align_vector()) {\n+  if (is_trace_superword_packset() || is_trace_align_vector()) {\n@@ -1308,1 +1314,1 @@\n-        tty->print_cr(\"Unimplemented\");\n+        tty->print_cr(\"Unimplemented:\");\n@@ -1332,1 +1338,1 @@\n-          tty->print_cr(\"Unprofitable\");\n+          tty->print_cr(\"Unprofitable:\");\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -282,1 +282,2 @@\n-    return vla().is_trace_superword_adjacent_memops();\n+    return TraceSuperWord ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_ADJACENT_MEMOPS);\n@@ -285,1 +286,2 @@\n-    return vla().is_trace_superword_alignment();\n+    \/\/ Too verbose for TraceSuperWord\n+    return vla().is_trace(TraceAutovectorizationTag::SW_ALIGNMENT);\n@@ -288,1 +290,2 @@\n-    return vla().is_trace_superword_rejections();\n+    return TraceSuperWord ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_REJECTIONS);\n@@ -291,1 +294,2 @@\n-    return vla().is_trace_superword_packset();\n+    return TraceSuperWord ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_PACKSET);\n@@ -293,2 +297,3 @@\n-  bool is_trace_superword_all() const {\n-    return vla().is_trace_superword_all();\n+  bool is_trace_superword_verbose() const {\n+    \/\/ Too verbose for TraceSuperWord\n+    return vla().is_trace(TraceAutovectorizationTag::SW_VERBOSE);\n@@ -297,1 +302,2 @@\n-    return vla().is_trace_superword_info();\n+    return TraceSuperWord ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_INFO);\n@@ -300,1 +306,8 @@\n-    return vla().is_trace_superword_any();\n+    return TraceSuperWord ||\n+           is_trace_align_vector() ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_ADJACENT_MEMOPS) ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_ALIGNMENT) ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_REJECTIONS) ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_PACKSET) ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_INFO) ||\n+           vla().is_trace(TraceAutovectorizationTag::SW_VERBOSE);\n@@ -303,1 +316,2 @@\n-    return vla().is_trace_align_vector();\n+    return vla().is_trace_align_vector() ||\n+           is_trace_superword_verbose();\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  flags(SW_ALL,               \"Trace SuperWord all (verbose)\") \\\n+  flags(SW_VERBOSE,           \"Trace SuperWord verbose (all)\") \\\n@@ -47,1 +47,1 @@\n-#define table_entry(name, description) TAG_##name,\n+#define table_entry(name, description) name,\n@@ -154,1 +154,1 @@\n-      } else if (TAG_ALL == tat) {\n+      } else if (ALL == tat) {\n@@ -156,12 +156,12 @@\n-      } else if (TAG_SW_ALL == tat) {\n-        _tags.at_put(TAG_SW_ADJACENT_MEMOPS, set_bit);\n-        _tags.at_put(TAG_SW_ALIGNMENT, set_bit);\n-        _tags.at_put(TAG_SW_REJECTIONS, set_bit);\n-        _tags.at_put(TAG_SW_PACKSET, set_bit);\n-        _tags.at_put(TAG_SW_INFO, set_bit);\n-        _tags.at_put(TAG_SW_ALL, set_bit);\n-      } else if (TAG_SW_INFO == tat) {\n-        _tags.at_put(TAG_SW_ADJACENT_MEMOPS, set_bit);\n-        _tags.at_put(TAG_SW_REJECTIONS, set_bit);\n-        _tags.at_put(TAG_SW_PACKSET, set_bit);\n-        _tags.at_put(TAG_SW_INFO, set_bit);\n+      } else if (SW_VERBOSE == tat) {\n+        _tags.at_put(SW_ADJACENT_MEMOPS, set_bit);\n+        _tags.at_put(SW_ALIGNMENT, set_bit);\n+        _tags.at_put(SW_REJECTIONS, set_bit);\n+        _tags.at_put(SW_PACKSET, set_bit);\n+        _tags.at_put(SW_INFO, set_bit);\n+        _tags.at_put(SW_VERBOSE, set_bit);\n+      } else if (SW_INFO == tat) {\n+        _tags.at_put(SW_ADJACENT_MEMOPS, set_bit);\n+        _tags.at_put(SW_REJECTIONS, set_bit);\n+        _tags.at_put(SW_PACKSET, set_bit);\n+        _tags.at_put(SW_INFO, set_bit);\n","filename":"src\/hotspot\/share\/opto\/traceautovectorizationtags.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -110,0 +110,3 @@\n+  bool is_trace(TraceAutovectorizationTag tag) const {\n+    return _trace_tags.at(tag);\n+  }\n@@ -111,1 +114,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_PRECONDITION);\n+    return is_trace(TraceAutovectorizationTag::PRECONDITION);\n@@ -114,1 +117,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_LOOP_ANALYZER);\n+    return is_trace(TraceAutovectorizationTag::LOOP_ANALYZER);\n@@ -117,1 +120,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_MEMORY_SLICES);\n+    return is_trace(TraceAutovectorizationTag::MEMORY_SLICES);\n@@ -120,1 +123,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_BODY);\n+    return is_trace(TraceAutovectorizationTag::BODY);\n@@ -123,1 +126,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_DEPENDENCE_GRAPH);\n+    return is_trace(TraceAutovectorizationTag::DEPENDENCE_GRAPH);\n@@ -126,1 +129,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_TYPES);\n+    return is_trace(TraceAutovectorizationTag::TYPES);\n@@ -129,33 +132,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_POINTER_ANALYSIS);\n-  }\n-  bool is_trace_superword_adjacent_memops() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ADJACENT_MEMOPS);\n-  }\n-  bool is_trace_superword_alignment() const {\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ALIGNMENT);\n-  }\n-  bool is_trace_superword_rejections() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_REJECTIONS);\n-  }\n-  bool is_trace_superword_packset() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_PACKSET);\n-  }\n-  bool is_trace_superword_all() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ALL);\n-  }\n-  bool is_trace_superword_info() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_INFO);\n-  }\n-  bool is_trace_superword_any() const {\n-    return TraceSuperWord ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_INFO) ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ALL) ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ADJACENT_MEMOPS) ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_ALIGNMENT) ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_REJECTIONS) ||\n-           _trace_tags.at(TraceAutovectorizationTag::TAG_SW_PACKSET);\n+    return is_trace(TraceAutovectorizationTag::POINTER_ANALYSIS);\n@@ -164,1 +135,1 @@\n-    return _trace_tags.at(TraceAutovectorizationTag::TAG_ALIGN_VECTOR);\n+    return is_trace(TraceAutovectorizationTag::ALIGN_VECTOR);\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":11,"deletions":40,"binary":false,"changes":51,"status":"modified"}]}