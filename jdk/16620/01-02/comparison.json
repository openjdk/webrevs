{"files":[{"patch":"@@ -296,2 +296,2 @@\n-  \/\/ TODO: error state?\n-  filter_packs_for_alignment();\n+  state = filter_packs_for_alignment();\n+  if (state != SuperWord::SUCCESS) { return state; }\n@@ -1032,1 +1032,0 @@\n-#ifdef ASSERT\n@@ -1034,0 +1033,1 @@\n+#ifdef ASSERT\n@@ -1177,1 +1177,3 @@\n-void SuperWord::filter_packs_for_alignment() {\n+const char* SuperWord::filter_packs_for_alignment() {\n+  assert(!_packset.is_empty(), \"packset must not be empty\");\n+\n@@ -1180,1 +1182,1 @@\n-    return;\n+    return SuperWord::SUCCESS;\n@@ -1243,0 +1245,13 @@\n+\n+  if (_packset.is_empty()) {\n+    return SuperWord::FAILURE_ALIGN_VECTOR;\n+  }\n+\n+#ifndef PRODUCT\n+  if (TraceSuperWord || is_trace_align_vector()) {\n+    tty->print_cr(\"\\nAfter filter_packs_for_alignment\");\n+    print_packset();\n+  }\n+#endif\n+\n+  return SuperWord::SUCCESS;\n@@ -1516,0 +1531,2 @@\n+  assert(!_packset.is_empty(), \"packset must not be empty\");\n+\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -210,0 +210,1 @@\n+  static constexpr char const* FAILURE_ALIGN_VECTOR    = \"empty packset after filter_packs_for_alignment\";\n@@ -381,1 +382,1 @@\n-  void filter_packs_for_alignment();\n+  const char* filter_packs_for_alignment();\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}