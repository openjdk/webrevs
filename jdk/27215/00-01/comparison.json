{"files":[{"patch":"@@ -122,1 +122,1 @@\n-    uintptr_t bits = _RM_WORD[i];\n+    uintptr_t bits = _rm_word[i];\n@@ -125,1 +125,1 @@\n-    _RM_WORD[i] = bits;\n+    _rm_word[i] = bits;\n@@ -138,1 +138,1 @@\n-    uintptr_t bits = _RM_WORD[i];\n+    uintptr_t bits = _rm_word[i];\n@@ -157,1 +157,1 @@\n-    uintptr_t v = _RM_WORD[i];\n+    uintptr_t v = _rm_word[i];\n@@ -166,1 +166,1 @@\n-        if (_RM_WORD[i] != 0) {\n+        if (_rm_word[i] != 0) {\n@@ -184,2 +184,2 @@\n-    if (_RM_WORD[i] != 0) {               \/\/ Found some bits\n-      unsigned int bit_index = find_lowest_bit(_RM_WORD[i]);\n+    if (_rm_word[i] != 0) {               \/\/ Found some bits\n+      unsigned int bit_index = find_lowest_bit(_rm_word[i]);\n@@ -188,1 +188,1 @@\n-        if ((bit | (bit << 1U)) != _RM_WORD[i]) {\n+        if ((bit | (bit << 1U)) != _rm_word[i]) {\n@@ -192,1 +192,1 @@\n-        assert(is_power_of_2(_RM_WORD[i]), \"invariant\");\n+        assert(is_power_of_2(_rm_word[i]), \"invariant\");\n@@ -194,1 +194,1 @@\n-        if (i > _hwm || _RM_WORD[i] != 1) {\n+        if (i > _hwm || _rm_word[i] != 1) {\n@@ -201,1 +201,1 @@\n-        if (_RM_WORD[i] != 0) {\n+        if (_rm_word[i] != 0) {\n@@ -247,1 +247,1 @@\n-    if (_RM_WORD[i]) {                \/\/ Found some bits\n+    if (_rm_word[i]) {                \/\/ Found some bits\n@@ -249,1 +249,1 @@\n-      return OptoReg::Name((i<<_LogWordBits) + find_lowest_bit(_RM_WORD[i]) + (size - 1));\n+      return OptoReg::Name((i<<_LogWordBits) + find_lowest_bit(_rm_word[i]) + (size - 1));\n@@ -263,1 +263,1 @@\n-    uintptr_t bits = _RM_WORD[i];\n+    uintptr_t bits = _rm_word[i];\n@@ -278,1 +278,1 @@\n-    _RM_WORD[i] = sets;\n+    _rm_word[i] = sets;\n@@ -291,1 +291,1 @@\n-    uintptr_t bits = _RM_WORD[i];\n+    uintptr_t bits = _rm_word[i];\n@@ -307,1 +307,1 @@\n-    _RM_WORD[i] = sets;\n+    _rm_word[i] = sets;\n@@ -320,1 +320,1 @@\n-    uintptr_t bits = _RM_WORD[i];\n+    uintptr_t bits = _rm_word[i];\n@@ -347,2 +347,2 @@\n-    if (_RM_WORD[i] != 0) {       \/\/ Found some bits\n-      unsigned bit_index = find_lowest_bit(_RM_WORD[i]);\n+    if (_rm_word[i] != 0) {       \/\/ Found some bits\n+      unsigned bit_index = find_lowest_bit(_rm_word[i]);\n@@ -353,1 +353,1 @@\n-        if (set != _RM_WORD[i]) {\n+        if (set != _rm_word[i]) {\n@@ -358,1 +358,1 @@\n-        if ((all & ~(bit-1)) != _RM_WORD[i]) {\n+        if ((all & ~(bit-1)) != _rm_word[i]) {\n@@ -364,1 +364,1 @@\n-        if (i > _hwm || _RM_WORD[i] != set) {\n+        if (i > _hwm || _rm_word[i] != set) {\n@@ -371,1 +371,1 @@\n-        if (_RM_WORD[i] != 0) {\n+        if (_rm_word[i] != 0) {\n@@ -400,1 +400,1 @@\n-    sum += population_count(_RM_WORD[i]);\n+    sum += population_count(_rm_word[i]);\n","filename":"src\/hotspot\/share\/opto\/regmask.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-    int       _RM_INT[RM_SIZE_IN_INTS];\n-    uintptr_t _RM_WORD[_RM_SIZE_IN_WORDS];\n+    int       _rm_int[RM_SIZE_IN_INTS];\n+    uintptr_t _rm_word[_RM_SIZE_IN_WORDS];\n@@ -121,1 +121,1 @@\n-#   define BODY(I) _RM_INT[I] = a##I;\n+#   define BODY(I) _rm_int[I] = a##I;\n@@ -124,1 +124,1 @@\n-#   define BODY(I) _RM_INT[I ^ 1] = a##I;\n+#   define BODY(I) _rm_int[I ^ 1] = a##I;\n@@ -130,2 +130,2 @@\n-    while (_hwm > 0      && _RM_WORD[_hwm] == 0) _hwm--;\n-    while ((_lwm < _hwm) && _RM_WORD[_lwm] == 0) _lwm++;\n+    while (_hwm > 0      && _rm_word[_hwm] == 0) _hwm--;\n+    while ((_lwm < _hwm) && _rm_word[_lwm] == 0) _lwm++;\n@@ -140,1 +140,1 @@\n-      _RM_WORD[i] = rm->_RM_WORD[i];\n+      _rm_word[i] = rm->_rm_word[i];\n@@ -146,1 +146,1 @@\n-  RegMask() : _RM_WORD(), _lwm(_RM_WORD_MAX_INDEX), _hwm(0) {\n+  RegMask() : _rm_word(), _lwm(_RM_WORD_MAX_INDEX), _hwm(0) {\n@@ -160,1 +160,1 @@\n-    return _RM_WORD[r >> _LogWordBits] & (uintptr_t(1) << (r & _WordBitMask));\n+    return _rm_word[r >> _LogWordBits] & (uintptr_t(1) << (r & _WordBitMask));\n@@ -167,1 +167,1 @@\n-    return (_RM_WORD[_RM_WORD_MAX_INDEX] & (uintptr_t(1) << _WordBitMask)) != 0;\n+    return (_rm_word[_RM_WORD_MAX_INDEX] & (uintptr_t(1) << _WordBitMask)) != 0;\n@@ -171,1 +171,1 @@\n-    _RM_WORD[_RM_WORD_MAX_INDEX] |= (uintptr_t(1) << _WordBitMask);\n+    _rm_word[_RM_WORD_MAX_INDEX] |= (uintptr_t(1) << _WordBitMask);\n@@ -179,1 +179,1 @@\n-      tmp |= _RM_WORD[i];\n+      tmp |= _rm_word[i];\n@@ -188,1 +188,1 @@\n-      uintptr_t bits = _RM_WORD[i];\n+      uintptr_t bits = _rm_word[i];\n@@ -202,1 +202,1 @@\n-      uintptr_t bits = _RM_WORD[--i];\n+      uintptr_t bits = _rm_word[--i];\n@@ -220,1 +220,1 @@\n-      assert(_RM_WORD[i] == 0, \"_lwm too high: %d regs at: %d\", _lwm, i);\n+      assert(_rm_word[i] == 0, \"_lwm too high: %d regs at: %d\", _lwm, i);\n@@ -223,1 +223,1 @@\n-      assert(_RM_WORD[i] == 0, \"_hwm too low: %d regs at: %d\", _hwm, i);\n+      assert(_rm_word[i] == 0, \"_hwm too low: %d regs at: %d\", _hwm, i);\n@@ -271,1 +271,1 @@\n-      result |= _RM_WORD[i] & rm._RM_WORD[i];\n+      result |= _rm_word[i] & rm._rm_word[i];\n@@ -284,1 +284,1 @@\n-    memset(_RM_WORD, 0, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n+    memset(_rm_word, 0, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n@@ -292,1 +292,1 @@\n-    memset(_RM_WORD, 0xFF, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n+    memset(_rm_word, 0xFF, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n@@ -306,1 +306,1 @@\n-    _RM_WORD[index] |= (uintptr_t(1) << (r & _WordBitMask));\n+    _rm_word[index] |= (uintptr_t(1) << (r & _WordBitMask));\n@@ -314,1 +314,1 @@\n-    _RM_WORD[r >> _LogWordBits] &= ~(uintptr_t(1) << (r & _WordBitMask));\n+    _rm_word[r >> _LogWordBits] &= ~(uintptr_t(1) << (r & _WordBitMask));\n@@ -324,1 +324,1 @@\n-      _RM_WORD[i] |= rm._RM_WORD[i];\n+      _rm_word[i] |= rm._rm_word[i];\n@@ -335,1 +335,1 @@\n-      _RM_WORD[i] &= rm._RM_WORD[i];\n+      _rm_word[i] &= rm._rm_word[i];\n@@ -349,1 +349,1 @@\n-      _RM_WORD[i] &= ~rm._RM_WORD[i];\n+      _rm_word[i] &= ~rm._rm_word[i];\n@@ -419,1 +419,1 @@\n-      _current_bits = _rm._RM_WORD[_next_index++];\n+      _current_bits = _rm._rm_word[_next_index++];\n","filename":"src\/hotspot\/share\/opto\/regmask.hpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"}]}