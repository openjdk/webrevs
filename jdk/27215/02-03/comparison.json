{"files":[{"patch":"@@ -751,1 +751,1 @@\n-        interfering_lrg.set_mask_size(interfering_lrg.mask().is_infinite() ? LRG::AllStack_size : old_size - 1);\n+        interfering_lrg.set_mask_size(interfering_lrg.mask().is_infinite() ? LRG::InfiniteStack_size : old_size - 1);\n","filename":"src\/hotspot\/share\/opto\/ifg.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-      return OptoReg::Name((i<<_LogWordBits) + find_lowest_bit(_rm_word[i]) + (size - 1));\n+      return OptoReg::Name((i<<LogBitsPerWord) + find_lowest_bit(_rm_word[i]) + (size - 1));\n","filename":"src\/hotspot\/share\/opto\/regmask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-  static const unsigned int _LogWordBits = LogBitsPerWord;\n@@ -160,1 +159,1 @@\n-    return _rm_word[r >> _LogWordBits] & (uintptr_t(1) << (r & _WordBitMask));\n+    return _rm_word[r >> LogBitsPerWord] & (uintptr_t(1) << (r & _WordBitMask));\n@@ -190,1 +189,1 @@\n-        return OptoReg::Name((i << _LogWordBits) + find_lowest_bit(bits));\n+        return OptoReg::Name((i << LogBitsPerWord) + find_lowest_bit(bits));\n@@ -204,1 +203,1 @@\n-        return OptoReg::Name((i << _LogWordBits) + find_highest_bit(bits));\n+        return OptoReg::Name((i << LogBitsPerWord) + find_highest_bit(bits));\n@@ -303,1 +302,1 @@\n-    unsigned index = r >> _LogWordBits;\n+    unsigned index = r >> LogBitsPerWord;\n@@ -314,1 +313,1 @@\n-    _rm_word[r >> _LogWordBits] &= ~(uintptr_t(1) << (r & _WordBitMask));\n+    _rm_word[r >> LogBitsPerWord] &= ~(uintptr_t(1) << (r & _WordBitMask));\n@@ -427,1 +426,1 @@\n-        _reg = OptoReg::Name(((_next_index - 1) << RegMask::_LogWordBits) + next_bit);\n+        _reg = OptoReg::Name(((_next_index - 1) << LogBitsPerWord) + next_bit);\n","filename":"src\/hotspot\/share\/opto\/regmask.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}