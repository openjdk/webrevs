{"files":[{"patch":"@@ -186,1 +186,1 @@\n-      if (bit_index != _WordBitMask) {   \/\/ Bit pair stays in same word?\n+      if (bit_index != WORD_BIT_MASK) {   \/\/ Bit pair stays in same word?\n","filename":"src\/hotspot\/share\/opto\/regmask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,2 +65,2 @@\n-  static const unsigned int _WordBitMask = BitsPerWord - 1U;\n-  static const unsigned int _RM_SIZE_IN_WORDS =\n+  static const unsigned int WORD_BIT_MASK = BitsPerWord - 1U;\n+  static const unsigned int RM_SIZE_IN_WORDS =\n@@ -68,1 +68,1 @@\n-  static const unsigned int _RM_WORD_MAX_INDEX = _RM_SIZE_IN_WORDS - 1U;\n+  static const unsigned int RM_WORD_MAX_INDEX = RM_SIZE_IN_WORDS - 1U;\n@@ -77,1 +77,1 @@\n-    uintptr_t _rm_word[_RM_SIZE_IN_WORDS];\n+    uintptr_t _rm_word[RM_SIZE_IN_WORDS];\n@@ -88,1 +88,1 @@\n-  enum { CHUNK_SIZE = _RM_SIZE_IN_WORDS * BitsPerWord };\n+  enum { CHUNK_SIZE = RM_SIZE_IN_WORDS * BitsPerWord };\n@@ -128,1 +128,1 @@\n-    _hwm = _RM_WORD_MAX_INDEX;\n+    _hwm = RM_WORD_MAX_INDEX;\n@@ -138,1 +138,1 @@\n-    for (unsigned i = 0; i < _RM_SIZE_IN_WORDS; i++) {\n+    for (unsigned i = 0; i < RM_SIZE_IN_WORDS; i++) {\n@@ -145,1 +145,1 @@\n-  RegMask() : _rm_word(), _lwm(_RM_WORD_MAX_INDEX), _hwm(0) {\n+  RegMask() : _rm_word(), _lwm(RM_WORD_MAX_INDEX), _hwm(0) {\n@@ -159,1 +159,1 @@\n-    return _rm_word[r >> LogBitsPerWord] & (uintptr_t(1) << (r & _WordBitMask));\n+    return _rm_word[r >> LogBitsPerWord] & (uintptr_t(1) << (r & WORD_BIT_MASK));\n@@ -166,1 +166,1 @@\n-    return (_rm_word[_RM_WORD_MAX_INDEX] & (uintptr_t(1) << _WordBitMask)) != 0;\n+    return (_rm_word[RM_WORD_MAX_INDEX] & (uintptr_t(1) << WORD_BIT_MASK)) != 0;\n@@ -170,1 +170,1 @@\n-    _rm_word[_RM_WORD_MAX_INDEX] |= (uintptr_t(1) << _WordBitMask);\n+    _rm_word[RM_WORD_MAX_INDEX] |= (uintptr_t(1) << WORD_BIT_MASK);\n@@ -216,2 +216,2 @@\n-    assert(_hwm < _RM_SIZE_IN_WORDS, \"_hwm out of range: %d\", _hwm);\n-    assert(_lwm < _RM_SIZE_IN_WORDS, \"_lwm out of range: %d\", _lwm);\n+    assert(_hwm < RM_SIZE_IN_WORDS, \"_hwm out of range: %d\", _hwm);\n+    assert(_lwm < RM_SIZE_IN_WORDS, \"_lwm out of range: %d\", _lwm);\n@@ -221,1 +221,1 @@\n-    for (unsigned i = _hwm + 1; i < _RM_SIZE_IN_WORDS; i++) {\n+    for (unsigned i = _hwm + 1; i < RM_SIZE_IN_WORDS; i++) {\n@@ -281,1 +281,1 @@\n-    _lwm = _RM_WORD_MAX_INDEX;\n+    _lwm = RM_WORD_MAX_INDEX;\n@@ -283,1 +283,1 @@\n-    memset(_rm_word, 0, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n+    memset(_rm_word, 0, sizeof(uintptr_t) * RM_SIZE_IN_WORDS);\n@@ -290,2 +290,2 @@\n-    _hwm = _RM_WORD_MAX_INDEX;\n-    memset(_rm_word, 0xFF, sizeof(uintptr_t) * _RM_SIZE_IN_WORDS);\n+    _hwm = RM_WORD_MAX_INDEX;\n+    memset(_rm_word, 0xFF, sizeof(uintptr_t) * RM_SIZE_IN_WORDS);\n@@ -305,1 +305,1 @@\n-    _rm_word[index] |= (uintptr_t(1) << (r & _WordBitMask));\n+    _rm_word[index] |= (uintptr_t(1) << (r & WORD_BIT_MASK));\n@@ -313,1 +313,1 @@\n-    _rm_word[r >> LogBitsPerWord] &= ~(uintptr_t(1) << (r & _WordBitMask));\n+    _rm_word[r >> LogBitsPerWord] &= ~(uintptr_t(1) << (r & WORD_BIT_MASK));\n","filename":"src\/hotspot\/share\/opto\/regmask.hpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}