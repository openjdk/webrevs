{"files":[{"patch":"@@ -860,7 +860,7 @@\n-    \/\/ This transformation requires peeling one iteration. Also, if it has range checks and they are eliminated by\n-    \/\/ Loop Predication, then 2 Hoisted Check Predicates are added for one range check. Finally, transforming a long range check requires\n-    \/\/ extra logic to be executed before the loop is entered and for the outer loop. As a result, the transformations\n-    \/\/ can't pay off for a small number of iterations: roughly, if the loop runs for 3 iterations, it's going to execute\n-    \/\/ as many range checks once transformed with range checks eliminated (1 peeled iteration with range checks\n-    \/\/ + 2 predicates per range checks) as it would have not transformed. It also has to pay for the extra logic on loop\n-    \/\/ entry and for the outer loop.\n+    \/\/ This transformation requires peeling one iteration. Also, if it has range checks and they are eliminated by Loop\n+    \/\/ Predication, then 2 Hoisted Check Predicates are added for one range check. Finally, transforming a long range\n+    \/\/ check requires extra logic to be executed before the loop is entered and for the outer loop. As a result, the\n+    \/\/ transformations can't pay off for a small number of iterations: roughly, if the loop runs for 3 iterations, it's\n+    \/\/ going to execute as many range checks once transformed with range checks eliminated (1 peeled iteration with\n+    \/\/ range checks + 2 predicates per range checks) as it would have not transformed. It also has to pay for the extra\n+    \/\/ logic on loop entry and for the outer loop.\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}