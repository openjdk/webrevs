{"files":[{"patch":"@@ -2184,1 +2184,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -2569,3 +2569,3 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -2586,2 +2586,2 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n-  RegisterSaver reg_save(id == sharedStubId::polling_page_vectors_safepoint_handler_id \/* save_vectors *\/);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n+  RegisterSaver reg_save(id == SharedStubId::polling_page_vectors_safepoint_handler_id \/* save_vectors *\/);\n@@ -2699,1 +2699,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -2701,2 +2701,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -2800,3 +2800,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -2915,1 +2915,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -2954,1 +2954,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1363,1 +1363,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -1605,1 +1605,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -1607,2 +1607,2 @@\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -1617,1 +1617,1 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n@@ -1679,1 +1679,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -1681,2 +1681,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -1745,3 +1745,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -1811,1 +1811,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -1855,1 +1855,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2864,1 +2864,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -3215,1 +3215,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -3218,2 +3218,2 @@\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -3235,1 +3235,1 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n@@ -3245,1 +3245,1 @@\n-  bool save_vectors = (id == sharedStubId::polling_page_vectors_safepoint_handler_id);\n+  bool save_vectors = (id == SharedStubId::polling_page_vectors_safepoint_handler_id);\n@@ -3332,3 +3332,3 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -3438,3 +3438,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -3767,1 +3767,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -3804,1 +3804,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2060,1 +2060,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -2439,3 +2439,3 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -2450,1 +2450,2 @@\n-  CodeBuffer buffer(\"handler_blob\", 2048, 1024);\n+  const char *name = SharedRuntime::stub_name(id);\n+  CodeBuffer buffer(name, 2048, 1024);\n@@ -2457,2 +2458,2 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n-  RegisterSaver reg_save(id == sharedStubId::polling_page_vectors_safepoint_handler_id \/* save_vectors *\/);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n+  RegisterSaver reg_saver(id == SharedStubId::polling_page_vectors_safepoint_handler_id \/* save_vectors *\/);\n@@ -2564,1 +2565,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -2566,2 +2567,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -2664,3 +2665,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -2777,1 +2778,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -2816,1 +2817,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2491,1 +2491,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -2838,1 +2838,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -2841,2 +2841,2 @@\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -2858,1 +2858,1 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n@@ -2943,1 +2943,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -2945,2 +2945,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -3044,3 +3044,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2065,1 +2065,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -2407,1 +2407,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -2414,2 +2414,2 @@\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -2431,2 +2431,2 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n-  bool save_vectors = (id == sharedStubId::polling_page_vectors_safepoint_handler_id);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n+  bool save_vectors = (id == SharedStubId::polling_page_vectors_safepoint_handler_id);\n@@ -2564,1 +2564,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -2566,2 +2566,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -2674,3 +2674,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -2793,1 +2793,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -2835,1 +2835,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2626,1 +2626,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::deopt_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::deopt_id);\n@@ -2985,1 +2985,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -2988,2 +2988,2 @@\n-  assert((id >= sharedStubId::polling_page_vectors_safepoint_handler_id ||\n-          id <= sharedStubId::polling_page_return_handler_id),\n+  assert((id >= SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+          id <= SharedStubId::polling_page_return_handler_id),\n@@ -3004,2 +3004,2 @@\n-  bool cause_return = (id == sharedStubId::polling_page_return_handler_id);\n-  bool save_wide_vectors = (id == sharedStubId::polling_page_vectors_safepoint_handler_id);\n+  bool cause_return = (id == SharedStubId::polling_page_return_handler_id);\n+  bool save_wide_vectors = (id == SharedStubId::polling_page_vectors_safepoint_handler_id);\n@@ -3148,1 +3148,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -3150,2 +3150,2 @@\n-  assert((id >= sharedStubId::wrong_method_id &&\n-          id <= sharedStubId::resolve_static_call_id),\n+  assert((id >= SharedStubId::wrong_method_id &&\n+          id <= SharedStubId::resolve_static_call_id),\n@@ -3244,3 +3244,3 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n-  assert((id >= sharedStubId::throw_AbstractMethodError_id &&\n-          id <= sharedStubId::throw_delayed_StackOverflowError_id),\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n+  assert((id >= SharedStubId::throw_AbstractMethodError_id &&\n+          id <= SharedStubId::throw_delayed_StackOverflowError_id),\n@@ -3609,1 +3609,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_write_checkpoint_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_write_checkpoint_id);\n@@ -3654,1 +3654,1 @@\n-  const char *name = SharedRuntime::stub_name(sharedStubId::jfr_return_lease_id);\n+  const char *name = SharedRuntime::stub_name(SharedStubId::jfr_return_lease_id);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-SafepointBlob* SharedRuntime::generate_handler_blob(sharedStubId id, address call_ptr) {\n+SafepointBlob* SharedRuntime::generate_handler_blob(SharedStubId id, address call_ptr) {\n@@ -112,1 +112,1 @@\n-RuntimeStub* SharedRuntime::generate_resolve_blob(sharedStubId id, address destination) {\n+RuntimeStub* SharedRuntime::generate_resolve_blob(SharedStubId id, address destination) {\n@@ -116,1 +116,1 @@\n-RuntimeStub* SharedRuntime::generate_throw_exception(sharedStubId id, address runtime_entry) {\n+RuntimeStub* SharedRuntime::generate_throw_exception(SharedStubId id, address runtime_entry) {\n","filename":"src\/hotspot\/cpu\/zero\/sharedRuntime_zero.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-    generate_throw_exception(sharedStubId::throw_StackOverflowError_id,\n+    generate_throw_exception(SharedStubId::throw_StackOverflowError_id,\n@@ -118,1 +118,1 @@\n-    generate_resolve_blob(sharedStubId::wrong_method_id,\n+    generate_resolve_blob(SharedStubId::wrong_method_id,\n@@ -121,1 +121,1 @@\n-    generate_resolve_blob(sharedStubId::wrong_method_abstract_id,\n+    generate_resolve_blob(SharedStubId::wrong_method_abstract_id,\n@@ -124,1 +124,1 @@\n-    generate_resolve_blob(sharedStubId::ic_miss_id,\n+    generate_resolve_blob(SharedStubId::ic_miss_id,\n@@ -127,1 +127,1 @@\n-    generate_resolve_blob(sharedStubId::resolve_opt_virtual_call_id,\n+    generate_resolve_blob(SharedStubId::resolve_opt_virtual_call_id,\n@@ -130,1 +130,1 @@\n-    generate_resolve_blob(sharedStubId::resolve_virtual_call_id,\n+    generate_resolve_blob(SharedStubId::resolve_virtual_call_id,\n@@ -133,1 +133,1 @@\n-    generate_resolve_blob(sharedStubId::resolve_static_call_id,\n+    generate_resolve_blob(SharedStubId::resolve_static_call_id,\n@@ -137,1 +137,1 @@\n-    generate_throw_exception(sharedStubId::throw_delayed_StackOverflowError_id,\n+    generate_throw_exception(SharedStubId::throw_delayed_StackOverflowError_id,\n@@ -141,1 +141,1 @@\n-    generate_throw_exception(sharedStubId::throw_AbstractMethodError_id,\n+    generate_throw_exception(SharedStubId::throw_AbstractMethodError_id,\n@@ -145,1 +145,1 @@\n-    generate_throw_exception(sharedStubId::throw_IncompatibleClassChangeError_id,\n+    generate_throw_exception(SharedStubId::throw_IncompatibleClassChangeError_id,\n@@ -149,1 +149,1 @@\n-    generate_throw_exception(sharedStubId::throw_NullPointerException_at_call_id,\n+    generate_throw_exception(SharedStubId::throw_NullPointerException_at_call_id,\n@@ -159,1 +159,1 @@\n-      generate_handler_blob(sharedStubId::polling_page_vectors_safepoint_handler_id,\n+      generate_handler_blob(SharedStubId::polling_page_vectors_safepoint_handler_id,\n@@ -164,1 +164,1 @@\n-    generate_handler_blob(sharedStubId::polling_page_safepoint_handler_id,\n+    generate_handler_blob(SharedStubId::polling_page_safepoint_handler_id,\n@@ -167,1 +167,1 @@\n-    generate_handler_blob(sharedStubId::polling_page_return_handler_id,\n+    generate_handler_blob(SharedStubId::polling_page_return_handler_id,\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-\/\/ define sharedStubId enum tags: wrong_method_id, etc\n+\/\/ define SharedStubId enum tags: wrong_method_id, etc\n@@ -49,1 +49,1 @@\n-enum class sharedStubId :int {\n+enum class SharedStubId :int {\n@@ -66,0 +66,23 @@\n+#ifndef PRODUCT\n+  static bool is_resolve_id(SharedStubId id) {\n+    return (id == SharedStubId::wrong_method_id ||\n+            id == SharedStubId::wrong_method_abstract_id ||\n+            id == SharedStubId::ic_miss_id ||\n+            id == SharedStubId::resolve_opt_virtual_call_id ||\n+            id == SharedStubId::resolve_virtual_call_id ||\n+            id == SharedStubId::resolve_static_call_id);\n+  }\n+  static bool is_polling_page_id(SharedStubId id) {\n+    return (id == SharedStubId::polling_page_vectors_safepoint_handler_id ||\n+            id == SharedStubId::polling_page_safepoint_handler_id ||\n+            id == SharedStubId::polling_page_return_handler_id);\n+  }\n+  static bool is_throw_id(SharedStubId id) {\n+    return (id == SharedStubId::throw_AbstractMethodError_id ||\n+            id == SharedStubId::throw_IncompatibleClassChangeError_id ||\n+            id == SharedStubId::throw_NullPointerException_at_call_id ||\n+            id == SharedStubId::throw_StackOverflowError_id ||\n+            id == SharedStubId::throw_delayed_StackOverflowError_id);\n+  }\n+#endif\n+\n@@ -72,1 +95,1 @@\n-  \/\/ Stub names indexed by sharedStubId\n+  \/\/ Stub names indexed by SharedStubId\n@@ -74,0 +97,1 @@\n+\n@@ -80,3 +104,3 @@\n-  static SafepointBlob* generate_handler_blob(sharedStubId id, address call_ptr);\n-  static RuntimeStub*   generate_resolve_blob(sharedStubId id, address destination);\n-  static RuntimeStub*   generate_throw_exception(sharedStubId id, address runtime_entry);\n+  static SafepointBlob* generate_handler_blob(SharedStubId id, address call_ptr);\n+  static RuntimeStub*   generate_resolve_blob(SharedStubId id, address destination);\n+  static RuntimeStub*   generate_throw_exception(SharedStubId id, address runtime_entry);\n@@ -96,2 +120,2 @@\n-  static const char *stub_name(sharedStubId id) {\n-    assert(id > sharedStubId::NO_STUBID && id < sharedStubId::NUM_STUBIDS, \"stub id out of range\");\n+  static const char *stub_name(SharedStubId id) {\n+    assert(id > SharedStubId::NO_STUBID && id < SharedStubId::NUM_STUBIDS, \"stub id out of range\");\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":32,"deletions":8,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n-#ifndef SHARE_RUNTIME_SHAREDRUNTIME_ID_HPP\n-#define SHARE_RUNTIME_SHAREDRUNTIME_ID_HPP\n+#ifndef SHARE_RUNTIME_STUBDECLARATIONS_HPP\n+#define SHARE_RUNTIME_STUBDECLARATIONS_HPP\n@@ -41,4 +41,4 @@\n-\/\/ template(name, type)\n-#define SHARED_JFR_STUBS_DO(template)                                  \\\n-  template(jfr_write_checkpoint, RuntimeStub*)                         \\\n-  template(jfr_return_lease, RuntimeStub*)                             \\\n+\/\/ do_blob(name, type)\n+#define SHARED_JFR_STUBS_DO(do_blob)                                   \\\n+  do_blob(jfr_write_checkpoint, RuntimeStub*)                          \\\n+  do_blob(jfr_return_lease, RuntimeStub*)                              \\\n@@ -47,1 +47,1 @@\n-#define SHARED_JFR_STUBS_DO(TEMPLATE)\n+#define SHARED_JFR_STUBS_DO(do_blob)\n@@ -50,3 +50,3 @@\n-\/\/ template(name, type)\n-#define SHARED_STUBS_DO(template)                                      \\\n-  template(deopt, DeoptimizationBlob*)                                 \\\n+\/\/ do_blob(name, type)\n+#define SHARED_STUBS_DO(do_blob)                                       \\\n+  do_blob(deopt, DeoptimizationBlob*)                                  \\\n@@ -54,6 +54,6 @@\n-  template(wrong_method, RuntimeStub*)                                 \\\n-  template(wrong_method_abstract, RuntimeStub*)                        \\\n-  template(ic_miss, RuntimeStub*)                                      \\\n-  template(resolve_opt_virtual_call, RuntimeStub*)                     \\\n-  template(resolve_virtual_call, RuntimeStub*)                         \\\n-  template(resolve_static_call, RuntimeStub*)                          \\\n+  do_blob(wrong_method, RuntimeStub*)                                  \\\n+  do_blob(wrong_method_abstract, RuntimeStub*)                         \\\n+  do_blob(ic_miss, RuntimeStub*)                                       \\\n+  do_blob(resolve_opt_virtual_call, RuntimeStub*)                      \\\n+  do_blob(resolve_virtual_call, RuntimeStub*)                          \\\n+  do_blob(resolve_static_call, RuntimeStub*)                           \\\n@@ -61,3 +61,3 @@\n-  template(polling_page_vectors_safepoint_handler, SafepointBlob*)     \\\n-  template(polling_page_safepoint_handler, SafepointBlob*)             \\\n-  template(polling_page_return_handler, SafepointBlob*)                \\\n+  do_blob(polling_page_vectors_safepoint_handler, SafepointBlob*)      \\\n+  do_blob(polling_page_safepoint_handler, SafepointBlob*)              \\\n+  do_blob(polling_page_return_handler, SafepointBlob*)                 \\\n@@ -65,5 +65,5 @@\n-  template(throw_AbstractMethodError, RuntimeStub*)                    \\\n-  template(throw_IncompatibleClassChangeError, RuntimeStub*)           \\\n-  template(throw_NullPointerException_at_call, RuntimeStub*)           \\\n-  template(throw_StackOverflowError, RuntimeStub*)                     \\\n-  template(throw_delayed_StackOverflowError, RuntimeStub*)             \\\n+  do_blob(throw_AbstractMethodError, RuntimeStub*)                     \\\n+  do_blob(throw_IncompatibleClassChangeError, RuntimeStub*)            \\\n+  do_blob(throw_NullPointerException_at_call, RuntimeStub*)            \\\n+  do_blob(throw_StackOverflowError, RuntimeStub*)                      \\\n+  do_blob(throw_delayed_StackOverflowError, RuntimeStub*)              \\\n@@ -71,85 +71,1 @@\n-  SHARED_JFR_STUBS_DO(template)                                        \\\n-\n-\/\/ C1 stubs are always generated in a generic CodeBlob\n-\n-#ifdef COMPILER1\n-\/\/ template(name)\n-#define C1_STUBS_DO(template)                                          \\\n-  template(dtrace_object_alloc)                                        \\\n-  template(unwind_exception)                                           \\\n-  template(forward_exception)                                          \\\n-  template(throw_range_check_failed)       \/* throws ArrayIndexOutOfBoundsException *\/ \\\n-  template(throw_index_exception)          \/* throws IndexOutOfBoundsException *\/ \\\n-  template(throw_div0_exception)                                       \\\n-  template(throw_null_pointer_exception)                               \\\n-  template(register_finalizer)                                         \\\n-  template(new_instance)                                               \\\n-  template(fast_new_instance)                                          \\\n-  template(fast_new_instance_init_check)                               \\\n-  template(new_type_array)                                             \\\n-  template(new_object_array)                                           \\\n-  template(new_multi_array)                                            \\\n-  template(handle_exception_nofpu)         \/* optimized version that does not preserve fpu registers *\/ \\\n-  template(handle_exception)                                           \\\n-  template(handle_exception_from_callee)                               \\\n-  template(throw_array_store_exception)                                \\\n-  template(throw_class_cast_exception)                                 \\\n-  template(throw_incompatible_class_change_error)                      \\\n-  template(slow_subtype_check)                                         \\\n-  template(monitorenter)                                               \\\n-  template(monitorenter_nofpu)             \/* optimized version that does not preserve fpu registers *\/ \\\n-  template(monitorexit)                                                \\\n-  template(monitorexit_nofpu)              \/* optimized version that does not preserve fpu registers *\/ \\\n-  template(deoptimize)                                                 \\\n-  template(access_field_patching)                                      \\\n-  template(load_klass_patching)                                        \\\n-  template(load_mirror_patching)                                       \\\n-  template(load_appendix_patching)                                     \\\n-  template(fpu2long_stub)                                              \\\n-  template(counter_overflow)                                           \\\n-  template(predicate_failed_trap)                                      \\\n-\n-#else\n-#define C1_STUBS_DO(template)\n-#endif\n-\n-\/\/ Opto stubs can have different blob types and may include some JVMTI\n-\/\/ stubs\n-\n-#ifdef COMPILER2\n-\/\/ template(name, type)\n-#if INCLUDE_JVMTI\n-#define OPTO_JVMTI_STUBS_DO(template)                                  \\\n-  template(notify_jvmti_vthread_start, address)                        \\\n-  template(notify_jvmti_vthread_end, address)                          \\\n-  template(notify_jvmti_vthread_mount, address)                        \\\n-  template(notify_jvmti_vthread_unmount, address)                      \\\n-\n-#else\n-#define OPTO_JVMTI_STUBS_DO(template)\n-#endif \/\/ INCLUDE_JVMTI\n-\n-#define OPTO_STUBS_DO(template)                                        \\\n-  template(uncommon_trap, UncommonTrapBlob*)                           \\\n-  template(exception, ExceptionBlob*)                                  \\\n-  template(new_instance_Java, address)                                 \\\n-  template(new_array_Java, address)                                    \\\n-  template(new_array_nozero_Java, address)                             \\\n-  template(multianewarray2_Java, address)                              \\\n-  template(multianewarray3_Java, address)                              \\\n-  template(multianewarray4_Java, address)                              \\\n-  template(multianewarray5_Java, address)                              \\\n-  template(multianewarrayN_Java, address)                              \\\n-  template(complete_monitor_locking_Java, address)                     \\\n-  template(complete_monitor_locking_C , address)                       \\\n-  template(monitor_notify_Java, address)                               \\\n-  template(monitor_notifyAll_Java, address)                            \\\n-  template(rethrow_Java, address)                                      \\\n-  template(slow_arraycopy_Java, address)                               \\\n-  template(register_finalizer_Java, address)                           \\\n-  template(class_init_barrier_Java, address)                           \\\n-  OPTO_JVMTI_STUBS_DO(template)                                        \\\n-\n-#else\n-#define OPTO_STUBS_DO(template)\n-#endif\n+  SHARED_JFR_STUBS_DO(do_blob)                                         \\\n@@ -169,1 +85,1 @@\n-#endif \/\/ SHARE_RUNTIME_SHAREDRUNTIME_ID_HPP\n+#endif \/\/ SHARE_RUNTIME_STUBDECLARATIONS_HPP\n","filename":"src\/hotspot\/share\/runtime\/stubDeclarations.hpp","additions":27,"deletions":111,"binary":false,"changes":138,"status":"modified"}]}