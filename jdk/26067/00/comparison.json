{"files":[{"patch":"@@ -191,1 +191,0 @@\n-    DISABLED_WARNINGS_gcc_handshake.cpp := stringop-overflow, \\\n@@ -197,1 +196,0 @@\n-    DISABLED_WARNINGS_gcc_jvmciCodeInstaller.cpp := stringop-overflow, \\\n@@ -199,1 +197,0 @@\n-    DISABLED_WARNINGS_gcc_jvmtiTagMap.cpp := stringop-overflow, \\\n@@ -204,1 +201,0 @@\n-    DISABLED_WARNINGS_gcc_synchronizer.cpp := stringop-overflow, \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -926,0 +926,11 @@\n+#if defined(__GNUC__) && !defined(__clang__) && !defined(PRODUCT)\n+  if (thread == nullptr) {\n+    \/\/ This is to prevent --stringop-overflow warning from GCC on linux\/fastdebug.\n+    \/\/ GCC does believe that JavaThread::current() can return nullptr,\n+    \/\/ though it cannot.\n+    \/\/ GCC seems to not remember that this hint has been given to it when initializing\n+    \/\/ HotSpotCompiledCodeStream object with a thread returned by JavaThread::current(),\n+    \/\/ therefore 2nd hint is needed.\n+    __builtin_unreachable();\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1070,1 +1070,10 @@\n-    return JavaThread::cast(Thread::current());\n+    auto result = JavaThread::cast(Thread::current());\n+#if defined(__GNUC__) && !defined(__clang__) && !defined(PRODUCT)\n+  if (result == nullptr) {\n+    \/\/ This is to prevent --stringop-overflow warning from GCC on linux\/fastdebug.\n+    \/\/ GCC does believe that JavaThread::current() can return nullptr,\n+    \/\/ though it cannot.\n+    __builtin_unreachable();\n+  }\n+#endif\n+    return result;\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}