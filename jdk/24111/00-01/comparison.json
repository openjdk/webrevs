{"files":[{"patch":"@@ -240,16 +240,1 @@\n-        \/\/ Some parts of the code do account for negative strides, but some do not.\n-        \/\/ We consider them unsupported for the time being.\n-\n-        if (scanlineStride < 0 || scanlineStride > (Integer.MAX_VALUE \/ height)) {\n-            throw new IllegalArgumentException(\"Invalid scanline stride\");\n-        }\n-\n-        if (pixelStride < 0 || pixelStride > (scanlineStride \/ width)) {\n-            throw new IllegalArgumentException(\"Invalid pixel stride\");\n-        }\n-\n-        for (int i = 0; i < bandOffsets.length; i++) {\n-            if (bandOffsets[i] < 0 || bandOffsets[i] >= pixelStride) {\n-                throw new IllegalArgumentException(\"Invalid band offset: \" + i);\n-            }\n-        }\n+        int requiredSize = getBufferSize();\n@@ -263,1 +248,39 @@\n-         return scanlineStride * height;\n+         int maxBandOff=bandOffsets[0];\n+         for (int i=1; i<bandOffsets.length; i++) {\n+             maxBandOff = Math.max(maxBandOff,bandOffsets[i]);\n+         }\n+\n+         if (maxBandOff < 0 || maxBandOff > (Integer.MAX_VALUE - 1)) {\n+             throw new IllegalArgumentException(\"Invalid band offset\");\n+         }\n+\n+         if (pixelStride < 0 || pixelStride > (Integer.MAX_VALUE \/ width)) {\n+             throw new IllegalArgumentException(\"Invalid pixel stride\");\n+         }\n+\n+         if (scanlineStride < 0 || scanlineStride > (Integer.MAX_VALUE \/ height)) {\n+             throw new IllegalArgumentException(\"Invalid scanline stride\");\n+         }\n+\n+         int size = maxBandOff + 1;\n+\n+         int val = pixelStride * (width - 1);\n+\n+         if (val > (Integer.MAX_VALUE - size)) {\n+             throw new IllegalArgumentException(\"Invalid pixel stride\");\n+         }\n+\n+         size += val;\n+\n+         val = scanlineStride * (height - 1);\n+\n+         if (val > (Integer.MAX_VALUE - size)) {\n+             throw new IllegalArgumentException(\"Invalid scan stride\");\n+         }\n+\n+         size += val;\n+\n+         \/\/ Align to the pixel stride.\n+         size = (size + pixelStride - 1) \/ pixelStride * pixelStride;\n+\n+         return size;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ComponentSampleModel.java","additions":40,"deletions":17,"binary":false,"changes":57,"status":"modified"}]}