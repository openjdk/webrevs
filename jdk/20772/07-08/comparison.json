{"files":[{"patch":"@@ -39,1 +39,1 @@\n-    private static final long POSITIVE_MASK = 0b1000000_1000000_1000000_1000000_1000000_1000000_1000000_1000000L;\n+    private static final long POSITIVE_MASK = 0b10000000_10000000_10000000_10000000_10000000_10000000_10000000_10000000L;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.internal.access.JavaLangAccess;\n+import jdk.internal.access.SharedSecrets;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n+\n+\/*\n+ * @test\n+ * @modules java.base\/jdk.internal.access\n+ * @summary test latin1 String countGreaterThanZero\n+ * @run testng\/othervm -XX:+CompactStrings CountGreaterZero\n+ * @run testng\/othervm -XX:-CompactStrings CountGreaterZero\n+ *\/\n+public class CountGreaterZero {\n+    private static final JavaLangAccess JLA = SharedSecrets.getJavaLangAccess();\n+\n+    public static void main(String [] args) {\n+        byte[] bytes = new byte[1000];\n+\n+        Arrays.fill(bytes, (byte) 'A');\n+        String s = new String(bytes, StandardCharsets.ISO_8859_1);\n+        if (JLA.stringCoder(s) == 0) {\n+            assertEquals(bytes.length, JLA.countGreaterThanZero(s));\n+        } else {\n+            assertEquals(0, JLA.countGreaterThanZero(s));\n+        }\n+\n+        for (int i = 0; i < bytes.length; i++) {\n+            Arrays.fill(bytes, (byte) 'A');\n+            for (int j = Byte.MIN_VALUE; j <= 0; j++) {\n+                bytes[i] = (byte) j;\n+                s = new String(bytes, StandardCharsets.ISO_8859_1);\n+\n+                if (JLA.stringCoder(s) == 0) {\n+                    assertEquals(i, JLA.countGreaterThanZero(s));\n+                } else {\n+                    assertEquals(0, JLA.countGreaterThanZero(s));\n+                }\n+            }\n+        }\n+    }\n+\n+    static void assertEquals(int expected, int actual) {\n+        if (expected != actual) {\n+            throw new AssertionError(\"Expected \" + expected + \" but got \" + actual);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/String\/CountGreaterZero.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}