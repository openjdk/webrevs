{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.lang.classfile.constantpool.ClassEntry;\n@@ -55,1 +56,1 @@\n-@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n@@ -68,1 +69,2 @@\n-    public String[] constants;\n+    ConstantPoolBuilder poolBuilder;\n+    ClassEntry thisClass;\n@@ -82,1 +84,1 @@\n-        constants = new String[128];\n+        String[] constants = new String[128];\n@@ -86,0 +88,6 @@\n+\n+        poolBuilder = ConstantPoolBuilder.of();\n+        thisClass = poolBuilder.classEntry(CLASS_DESC);\n+        for (var c : constants) {\n+            poolBuilder.utf8Entry(c);\n+        }\n@@ -90,31 +98,2 @@\n-        bh.consume(generate(constants));\n-    }\n-\n-    private static byte[] generate(String[] constants) {\n-        return ClassFile.of().build(\n-                CLASS_DESC,\n-                new Consumer<ClassBuilder>() {\n-                    @Override\n-                    public void accept(ClassBuilder clb) {\n-                        clb.withFlags(ACC_FINAL | ACC_SUPER | ACC_SYNTHETIC)\n-                           .withMethodBody(\n-                                   \"concat\",\n-                                   MTD_String, ACC_FINAL | ACC_PRIVATE | ACC_STATIC,\n-                                   new Consumer<CodeBuilder>() {\n-                                       @Override\n-                                       public void accept(CodeBuilder cb) {\n-                                           cb.new_(STRING_BUILDER)\n-                                             .dup()\n-                                             .invokespecial(STRING_BUILDER, \"<init>\", MTD_void);\n-                                           for (String constant : constants) {\n-                                               cb.ldc(constant)\n-                                                 .invokevirtual(STRING_BUILDER, \"append\", MTD_append);\n-                                           }\n-                                           cb.invokevirtual(STRING_BUILDER, \"toString\", MTD_String)\n-                                             .areturn();\n-                                       }\n-                                   }\n-                           );\n-                    }\n-                }\n-        );\n+        ClassFile.of()\n+                 .build(thisClass, poolBuilder, (ClassBuilder clb) -> {});\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/classfile\/Utf8EntryWriteTo.java","additions":13,"deletions":34,"binary":false,"changes":47,"status":"modified"}]}