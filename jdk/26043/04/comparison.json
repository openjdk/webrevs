{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2026, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-  @author Andrei Dmitriev : area=awt.mouse\n@@ -33,13 +32,28 @@\n-\/\/events from standard should also come\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-public class ExtraButtonDrag extends Frame {\n-    static String tk = Toolkit.getDefaultToolkit().getClass().getName();\n-    static Robot robot;\n-    static int [] buttonsPressed;\n-    static int [] buttonsReleased;\n-    static int [] buttonsClicked;\n-    volatile static boolean dragged = false;\n-    volatile static boolean moved = false;\n+import java.awt.AWTException;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.MouseInfo;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class ExtraButtonDrag {\n+\n+    private static Frame frame;\n+    private static Robot robot;\n+    private volatile static boolean dragged = false;\n+    private volatile static boolean moved = false;\n+    private static volatile Point centerFrame;\n+    private static volatile Point outboundsFrame;\n+    private static String tk = Toolkit.getDefaultToolkit().getClass().getName();\n+    private static MouseAdapter mAdapter = new MouseAdapter() {\n+        @Override\n+        public void mouseDragged(MouseEvent e) {\n+            System.out.println(\"Dragged \" + e);\n+            dragged = true;\n+        }\n@@ -47,3 +61,5 @@\n-    public ExtraButtonDrag(){\n-        super(\"ExtraButtonDrag\");\n-    }\n+        @Override\n+        public void mouseMoved(MouseEvent e) {\n+            System.out.println(\"Moved \" + e);\n+            moved = true;\n+        }\n@@ -51,2 +67,4 @@\n-    public static void main(String []s){\n-        Frame frame = new ExtraButtonDrag();\n+        @Override\n+        public void mousePressed(MouseEvent e) {\n+            System.out.println(\"Pressed \" + e);\n+        }\n@@ -54,15 +72,4 @@\n-        MouseAdapter ma = new MouseAdapter() {\n-                public void mouseDragged(MouseEvent e) {\n-                    System.out.println(\"Dragged \"+e);\/\/ +\" : \"+ e.getButton() + \" : \" +e.getButtonState(e.getButton()));\n-                    dragged = true;\n-                }\n-                public void mouseMoved(MouseEvent e) {\n-                    System.out.println(\"Moved \"+e);\n-                    moved = true;\n-                }\n-                public void mousePressed(MouseEvent e) {\n-                    System.out.println(\">>> \"+e);\n-                }\n-                public void mouseReleased(MouseEvent e) {\n-                    System.out.println(\">>> \"+e);\n-                }\n+        @Override\n+        public void mouseReleased(MouseEvent e) {\n+            System.out.println(\"Released \" + e);\n+        }\n@@ -70,1 +77,1 @@\n-            };\n+    };\n@@ -72,2 +79,4 @@\n-        frame.addMouseMotionListener(ma);\n-        frame.addMouseListener(ma);\n+    public static void initializeGUI() {\n+        frame = new Frame(\"ExtraButtonDrag\");\n+        frame.addMouseMotionListener(mAdapter);\n+        frame.addMouseListener(mAdapter);\n@@ -76,0 +85,1 @@\n+        frame.setLocationRelativeTo(null);\n@@ -77,0 +87,1 @@\n+    }\n@@ -78,12 +89,2 @@\n-        int [] buttonMask = new int [MouseInfo.getNumberOfButtons()]; \/\/InputEvent.getButtonMasks();\n-\n-        for (int i = 0; i < MouseInfo.getNumberOfButtons(); i++){\n-            buttonMask[i] = InputEvent.getMaskForButton(i+1);\n-            \/\/            System.out.println(\"TEST: \"+tmp[i]);\n-        }\n-\n-        try {\n-            robot = new Robot();\n-            robot.delay(1000);\n-            Point centerFrame = new Point(frame.getLocationOnScreen().x + frame.getWidth()\/2, frame.getLocationOnScreen().y + frame.getHeight()\/2);\n-            Point outboundsFrame = new Point(frame.getLocationOnScreen().x + frame.getWidth()*3\/2, frame.getLocationOnScreen().y + frame.getHeight()\/2);\n+    public static void doTest()\n+        throws InvocationTargetException, InterruptedException {\n@@ -91,1 +92,1 @@\n-            System.out.println(\"areExtraMouseButtonsEnabled() == \" + Toolkit.getDefaultToolkit().areExtraMouseButtonsEnabled() );\n+        int[] buttonMask = new int[MouseInfo.getNumberOfButtons()];\n@@ -93,2 +94,3 @@\n-            for (int i = 0; i < MouseInfo.getNumberOfButtons(); i++){\n-                System.out.println(\"button to drag = \" +(i+1) + \" : value passed to robot = \" +buttonMask[i]);\n+        for (int i = 0; i < MouseInfo.getNumberOfButtons(); i++) {\n+            buttonMask[i] = InputEvent.getMaskForButton(i + 1);\n+        }\n@@ -96,5 +98,23 @@\n-                try {\n-                    dragMouse(buttonMask[i], centerFrame.x, centerFrame.y, outboundsFrame.x, outboundsFrame.y);\n-                } catch (IllegalArgumentException e){\n-                    throw new RuntimeException(\"Test failed. Exception occured.\", e);\n-                }\n+        EventQueue.invokeAndWait(() -> {\n+            Point location = frame.getLocationOnScreen();\n+            Dimension size = frame.getSize();\n+            centerFrame = new Point(location.x + size.width \/ 2,\n+                location.y + size.height \/ 2);\n+            outboundsFrame = new Point(location.x + size.width * 3 \/ 2,\n+                location.y + size.height \/ 2);\n+        });\n+\n+        System.out.println(\"areExtraMouseButtonsEnabled() == \"\n+            + Toolkit.getDefaultToolkit().areExtraMouseButtonsEnabled());\n+\n+        for (int i = 0; i < MouseInfo.getNumberOfButtons(); i++) {\n+            System.out.println(\"button to drag = \" + (i + 1)\n+                + \" : value passed to robot = \" + buttonMask[i]);\n+\n+            try {\n+                dragMouse(buttonMask[i], centerFrame.x, centerFrame.y,\n+                    outboundsFrame.x, outboundsFrame.y);\n+            } catch (IllegalArgumentException e) {\n+                throw new RuntimeException(\"Test failed. Exception occured.\",\n+                    e);\n+            }\n@@ -102,14 +122,12 @@\n-                robot.delay(500);\n-                \/\/this is a choice-case for X protocol issue: native events from extra buttons doesn't contain\n-                \/\/ the correct state so it's unable to decide if there is a drag or move. By default we send MOVED event.\n-                \/\/XToolkit: extra buttons should report MOVED events only\n-                \/\/WToolkit: extra buttons should report DRAGGED events only\n-                if (i > 2){ \/\/extra buttons only\n-                    if (tk.equals(\"sun.awt.X11.XToolkit\")) {\n-                        if (!moved || dragged) {\n-                            throw new RuntimeException(\"Test failed.\"+ tk +\" Button = \" +(i+1) + \" moved = \"+moved +\" : dragged = \" +dragged);\n-                        }\n-                    } else { \/\/WToolkit\n-                        if (moved || !dragged) {\n-                            throw new RuntimeException(\"Test failed.\"+ tk +\" Button = \" +(i+1) + \" moved = \"+moved +\" : dragged = \" +dragged);\n-                        }\n+            \/\/ this is a choice-case for X protocol issue: native events from\n+            \/\/ extra buttons doesn't contain\n+            \/\/ the correct state so it's unable to decide if there is a drag or\n+            \/\/ move. By default we send MOVED event.\n+            \/\/ XToolkit: extra buttons should report MOVED events only\n+            \/\/ WToolkit: extra buttons should report DRAGGED events only\n+            if (i > 2) { \/\/ extra buttons only\n+                if (tk.equals(\"sun.awt.X11.XToolkit\")) {\n+                    if (!moved || dragged) {\n+                        throw new RuntimeException(\"Test failed.\" + tk\n+                            + \" Button = \" + (i + 1) + \" moved = \" + moved\n+                            + \" : dragged = \" + dragged);\n@@ -117,3 +135,5 @@\n-                } else {\n-                    if (moved || !dragged){\n-                        throw new RuntimeException(\"Test failed. Button = \" +(i+1) + \" not dragged.\");\n+                } else { \/\/ WToolkit\n+                    if (moved || !dragged) {\n+                        throw new RuntimeException(\"Test failed.\" + tk\n+                            + \" Button = \" + (i + 1) + \" moved = \" + moved\n+                            + \" : dragged = \" + dragged);\n@@ -122,0 +142,5 @@\n+            } else {\n+                if (moved || !dragged) {\n+                    throw new RuntimeException(\n+                        \"Test failed. Button = \" + (i + 1) + \" not dragged.\");\n+                }\n@@ -123,2 +148,0 @@\n-        } catch (Exception e){\n-            throw new RuntimeException(\"\", e);\n@@ -128,1 +151,1 @@\n-    public static void dragMouse(int button, int x0, int y0, int x1, int y1){\n+    public static void dragMouse(int button, int x0, int y0, int x1, int y1) {\n@@ -141,1 +164,1 @@\n-        while (curX != x1){\n+        while (curX != x1) {\n@@ -146,1 +169,1 @@\n-        while (curY != y1 ){\n+        while (curY != y1) {\n@@ -154,0 +177,26 @@\n+    public static void main(String[] s)\n+        throws InvocationTargetException, InterruptedException, AWTException {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(10);\n+            robot.setAutoWaitForIdle(true);\n+\n+            EventQueue.invokeAndWait(ExtraButtonDrag::initializeGUI);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            doTest();\n+\n+            System.out.println(\"Test PASSED\");\n+        } finally {\n+            EventQueue.invokeAndWait(ExtraButtonDrag::disposeFrame);\n+        }\n+    }\n+\n+    public static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/awt\/Mouse\/MouseModifiersUnitTest\/ExtraButtonDrag.java","additions":129,"deletions":80,"binary":false,"changes":209,"status":"modified"}]}