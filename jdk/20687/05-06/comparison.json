{"files":[{"patch":"@@ -28,3 +28,3 @@\n- * @library  ..\/.. \/test\/lib\n- * @build jdk.test.lib.Platform\n- * @run main CreationTime\n+ * @library  ..\/.. \/test\/lib \/java\/foreign\n+ * @build jdk.test.lib.Platform NativeTestHelper\n+ * @run main\/othervm --enable-native-access=ALL-UNNAMED CreationTime\n@@ -37,3 +37,3 @@\n- * @library  ..\/.. \/test\/lib\n- * @build jdk.test.lib.Platform\n- * @run main CreationTime .\n+ * @library  ..\/.. \/test\/lib \/java\/foreign\n+ * @build jdk.test.lib.Platform NativeTestHelper\n+ * @run main\/othervm --enable-native-access=ALL-UNNAMED CreationTime .\n@@ -47,1 +47,0 @@\n-import java.io.BufferedReader;\n@@ -49,1 +48,0 @@\n-import java.io.InputStreamReader;\n@@ -112,1 +110,6 @@\n-            supportsCreationTimeRead = CreationTimeHelper.linuxIsCreationTimeSupported();\n+            try {\n+                supportsCreationTimeRead = CreationTimeHelper.\n+                        linuxIsCreationTimeSupported(file.toAbsolutePath().toString());\n+            } catch (Throwable e) {\n+                supportsCreationTimeRead = false;\n+            }\n@@ -127,1 +130,3 @@\n-            if (!current.equals(creationTime))\n+            if (!current.equals(creationTime)) {\n+                System.out.println(\"current = \" + current);\n+                System.out.println(\"creationTime = \" + creationTime);\n@@ -129,0 +134,1 @@\n+            }\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTime.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc.\n+ * Copyright (c) 2024 Alibaba Group Holding Limited. All Rights Reserved.\n@@ -23,1 +23,10 @@\n-public class CreationTimeHelper {\n+\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.Linker;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.SymbolLookup;\n+import java.lang.foreign.ValueLayout;\n+import java.lang.invoke.MethodHandle;\n+\n+public class CreationTimeHelper extends NativeTestHelper {\n@@ -29,0 +38,6 @@\n+    final static Linker abi = Linker.nativeLinker();\n+    static final SymbolLookup lookup = SymbolLookup.loaderLookup();\n+    final static MethodHandle methodHandle = abi.\n+            downcallHandle(lookup.findOrThrow(\"linuxIsCreationTimeSupported\"),\n+            FunctionDescriptor.of(C_BOOL, C_POINTER));\n+\n@@ -30,1 +45,7 @@\n-    static native boolean linuxIsCreationTimeSupported();\n+    \/\/ static boolean linuxIsCreationTimeSupported(String file);\n+    static boolean linuxIsCreationTimeSupported(String file) throws Throwable {\n+        try (var arena = Arena.ofConfined()) {\n+            MemorySegment s = arena.allocateFrom(file);\n+            return (boolean)methodHandle.invokeExact(s);\n+        }\n+    }\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTimeHelper.java","additions":24,"deletions":3,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc.\n+ * Copyright (c) 2024 Alibaba Group Holding Limited. All Rights Reserved.\n@@ -23,1 +23,1 @@\n-#include \"jni.h\"\n+#include \"export.h\"\n@@ -25,0 +25,12 @@\n+#if (__STDC_VERSION__ >= 199901L)\n+  #include <stdbool.h>\n+#else\n+  #define bool int\n+  #define true 1\n+  #define false 0\n+#endif\n+#include <linux\/fcntl.h>\n+#include <stdio.h>\n+#include <string.h>\n+#include <sys\/stat.h>\n+#include <bits\/types.h>\n@@ -26,0 +38,11 @@\n+#ifndef STATX_BASIC_STATS\n+#define STATX_BASIC_STATS 0x000007ffU\n+#endif\n+#ifndef STATX_BTIME\n+#define STATX_BTIME 0x00000800U\n+#endif\n+#ifndef _GNU_SOURCE\n+#define _GNU_SOURCE\n+#endif\n+#ifndef RTLD_DEFAULT\n+#define RTLD_DEFAULT RTLD_LOCAL\n@@ -28,3 +51,14 @@\n-\/\/ static native boolean linuxIsCreationTimeSupported()\n-JNIEXPORT jboolean JNICALL\n-Java_CreationTimeHelper_linuxIsCreationTimeSupported(JNIEnv *env, jclass cls)\n+\/*\n+ * Timestamp structure for the timestamps in struct statx.\n+ *\/\n+struct my_statx_timestamp {\n+        __int64_t   tv_sec;\n+        __uint32_t  tv_nsec;\n+        __int32_t   __reserved;\n+};\n+\n+\/*\n+ * struct statx used by statx system call on >= glibc 2.28\n+ * systems\n+ *\/\n+struct my_statx\n@@ -32,0 +66,31 @@\n+  __uint32_t stx_mask;\n+  __uint32_t stx_blksize;\n+  __uint64_t stx_attributes;\n+  __uint32_t stx_nlink;\n+  __uint32_t stx_uid;\n+  __uint32_t stx_gid;\n+  __uint16_t stx_mode;\n+  __uint16_t __statx_pad1[1];\n+  __uint64_t stx_ino;\n+  __uint64_t stx_size;\n+  __uint64_t stx_blocks;\n+  __uint64_t stx_attributes_mask;\n+  struct my_statx_timestamp stx_atime;\n+  struct my_statx_timestamp stx_btime;\n+  struct my_statx_timestamp stx_ctime;\n+  struct my_statx_timestamp stx_mtime;\n+  __uint32_t stx_rdev_major;\n+  __uint32_t stx_rdev_minor;\n+  __uint32_t stx_dev_major;\n+  __uint32_t stx_dev_minor;\n+  __uint64_t __statx_pad2[14];\n+};\n+\n+typedef int statx_func(int dirfd, const char *restrict pathname, int flags,\n+                       unsigned int mask, struct my_statx *restrict statxbuf);\n+\n+static statx_func* my_statx_func = NULL;\n+#endif  \/\/#defined(__linux__)\n+\n+\/\/ static boolean linuxIsCreationTimeSupported(char* file)\n+EXPORT bool linuxIsCreationTimeSupported(char* file) {\n@@ -33,2 +98,26 @@\n-    void* statx_func = dlsym(RTLD_DEFAULT, \"statx\");\n-    return statx_func != NULL ? JNI_TRUE : JNI_FALSE;\n+    struct my_statx stx;\n+    int ret, atflag = AT_SYMLINK_NOFOLLOW;\n+    memset(&stx, 0xbf, sizeof(stx));\n+    unsigned int mask = STATX_BASIC_STATS | STATX_BTIME;\n+\n+    my_statx_func = (statx_func*) dlsym(RTLD_DEFAULT, \"statx\");\n+    if (my_statx_func == NULL) {\n+        return false;\n+    }\n+\n+    if (file == NULL) {\n+        printf(\"input file error!\\n\");\n+        return false;\n+    }\n+\n+    ret = my_statx_func(AT_FDCWD, file, atflag, mask, &stx);\n+\n+    #ifdef DEBUG\n+    printf(\"birth time = %ld\\n\", stx.stx_btime.tv_sec);\n+    #endif\n+    if (ret != 0) {\n+        return false;\n+    }\n+    if (stx.stx_mask & STATX_BTIME)\n+        return true;\n+    return false;\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/libCreationTimeHelper.c","additions":96,"deletions":7,"binary":false,"changes":103,"status":"modified"}]}