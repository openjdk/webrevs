{"files":[{"patch":"@@ -47,0 +47,1 @@\n+import java.io.BufferedReader;\n@@ -48,0 +49,1 @@\n+import java.io.InputStreamReader;\n@@ -109,2 +111,7 @@\n-            \/\/ Creation time read depends on statx system call support\n-            supportsCreationTimeRead = Linker.nativeLinker().defaultLookup().find(\"statx\").isPresent();\n+            \/\/ Creation time read depends on statx system call support and on the file\n+            \/\/ system storing the birth time. The tmpfs\/ext3\/nfs etc. file system type does not store\n+            \/\/ the birth time.\n+            boolean statxIsPresent = Linker.nativeLinker().defaultLookup().find(\"statx\").isPresent();\n+            if (statxIsPresent && supportBirthTimeOnLinux(file)) {\n+                supportsCreationTimeRead = true;\n+            }\n@@ -144,0 +151,19 @@\n+\n+    \/**\n+     * read the output of linux command `stat -c \"%w\" file`, if the output is \"-\",\n+     * then the file system doesn't support birth time\n+     *\/\n+    public static boolean supportBirthTimeOnLinux(Path file) {\n+        try {\n+            String filePath = file.toAbsolutePath().toString();\n+            ProcessBuilder pb = new ProcessBuilder(\"stat\", \"-c\", \"%w\", filePath);\n+            pb.redirectErrorStream(true);\n+            Process p = pb.start();\n+            BufferedReader b = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+            String l = b.readLine();\n+            if (l != null && l.equals(\"-\")) { return false; }\n+        } catch(Exception e) {\n+        }\n+        return true;\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTime.java","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}