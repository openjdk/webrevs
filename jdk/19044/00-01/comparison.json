{"files":[{"patch":"@@ -1203,2 +1203,1 @@\n-    \/\/ if the monitor field is set, then the monitor if fully initialized. More specifically,\n-    \/\/ that the rank field has been set.\n+    \/\/ if the monitor field is not NULL, then the monitor if fully initialized.\n@@ -1239,0 +1238,1 @@\n+    JNIEnv *env = getEnv();\n@@ -1241,2 +1241,4 @@\n-    error = JVMTI_FUNC_PTR(gdata->jvmti,GetThreadInfo)\n-            (gdata->jvmti, thread, &info);\n+    WITH_LOCAL_REFS(env, 2) {\n+        error = JVMTI_FUNC_PTR(gdata->jvmti,GetThreadInfo)\n+                (gdata->jvmti, thread, &info);\n+    } END_WITH_LOCAL_REFS(env);\n@@ -1262,1 +1264,1 @@\n-        if (dbg_monitor == NULL) {\n+        if (dbg_monitor->monitor == NULL) {\n@@ -1274,1 +1276,1 @@\n-assertIsCurrentThread(JNIEnv *env, jthread thread)\n+assertIsCurrentThread(JNIEnv *env, jthread thread, jthread current_thread)\n@@ -1276,0 +1278,3 @@\n+    if (!gdata->assertOn) {\n+        return;\n+    }\n@@ -1279,1 +1284,0 @@\n-    jthread current_thread = threadControl_currentThread();\n@@ -1281,1 +1285,2 @@\n-        tty_message(\"ERROR: Threads not the same: %p %p\\n\", thread, current_thread);\n+        tty_message(\"ERROR: Threads are not the same: \\\"%s\\\" \\\"%s\\\"\",\n+                    getThreadName(thread), getThreadName(current_thread));\n@@ -1285,1 +1290,0 @@\n-    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1294,1 +1298,3 @@\n-    for (i = 0; i < NUM_DEBUG_RAW_MONITORS; i++) {\n+    DebugRawMonitorRank firstRank =\n+        (rank < FIRST_LEAF_DEBUG_RAW_MONITOR ? rank : FIRST_LEAF_DEBUG_RAW_MONITOR);\n+    for (i = firstRank; i < NUM_DEBUG_RAW_MONITORS; i++) {\n@@ -1388,1 +1394,0 @@\n-    JNIEnv *env = getEnv();\n@@ -1394,1 +1399,0 @@\n-    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1397,0 +1401,1 @@\n+\n@@ -1398,1 +1403,3 @@\n-    assertIsCurrentThread(env, dbg_monitor->ownerThread);\n+    JNIEnv *env = getEnv();\n+    assertIsCurrentThread(env, dbg_monitor->ownerThread, current_thread);\n+    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1421,2 +1428,2 @@\n-    jthread thread = dbg_monitor->ownerThread;\n-    int entryCount = dbg_monitor->entryCount;\n+    jthread savedOwnerThread = dbg_monitor->ownerThread;\n+    int savedEntryCount = dbg_monitor->entryCount;\n@@ -1428,2 +1435,0 @@\n-    JNIEnv *env = getEnv();\n-    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1431,1 +1436,2 @@\n-    JDI_ASSERT(thread != NULL);\n+    JDI_ASSERT(savedOwnerThread != NULL);\n+\n@@ -1433,1 +1439,3 @@\n-    assertIsCurrentThread(env, dbg_monitor->ownerThread);\n+    JNIEnv *env = getEnv();\n+    assertIsCurrentThread(env, savedOwnerThread, current_thread);\n+    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1446,2 +1454,2 @@\n-    dbg_monitor->ownerThread = thread;\n-    dbg_monitor->entryCount = entryCount;\n+    dbg_monitor->ownerThread = savedOwnerThread;\n+    dbg_monitor->entryCount = savedEntryCount;\n@@ -1466,2 +1474,0 @@\n-    JNIEnv *env = getEnv();\n-    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1470,1 +1476,3 @@\n-    assertIsCurrentThread(getEnv(), dbg_monitor->ownerThread);\n+    JNIEnv *env = getEnv();\n+    assertIsCurrentThread(env, dbg_monitor->ownerThread, current_thread);\n+    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1490,2 +1498,0 @@\n-    JNIEnv *env = getEnv();\n-    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n@@ -1494,1 +1500,3 @@\n-    assertIsCurrentThread(env, dbg_monitor->ownerThread);\n+    JNIEnv *env = getEnv();\n+    assertIsCurrentThread(env, dbg_monitor->ownerThread, current_thread);\n+    JNI_FUNC_PTR(env,DeleteLocalRef)(env, current_thread);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":35,"deletions":27,"binary":false,"changes":62,"status":"modified"}]}