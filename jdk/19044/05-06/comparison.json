{"files":[{"patch":"@@ -1298,6 +1298,3 @@\n-    \/\/ has a higher rank than the monitor we are about to enter. Also, if we are\n-    \/\/ entering a leaf monitor, make sure we don't already hold a leaf monitor.\n-    \/\/ The loop normally starts with the first monitor (0) and stops at rank-1 \n-    \/\/ However, if the monitor we are entering is a leaf monitor,\n-    \/\/ then we must iterate over all the leaf monitors no matter what the rank is.\n-    \/\/ Thus the special \"highestRankCheck\" logic.\n+    \/\/ has a higher rank than the monitor we are about to enter. The loop starts\n+    \/\/ with the lowest ranked monitor (0) and stops at rank-1. None of the\n+    \/\/ monitors in this set should be held by the current thread.\n@@ -1305,3 +1302,1 @@\n-    DebugRawMonitorRank highestRankCheck =\n-        (rank > LAST_LEAF_DEBUG_RAW_MONITOR ? rank - 1 : LAST_LEAF_DEBUG_RAW_MONITOR);\n-    for (i = 0; i <= highestRankCheck; i++) {\n+    for (i = 0; i < rank; i++) {\n@@ -1320,8 +1315,3 @@\n-         * At this point we already know we have some sort of rank violation because\n-         * we know that we own the monitor we are iterating over, and one or both\n-         * of the following are true:\n-         *  - The monitor has a lower rank than the monitor we are entering.\n-         *  - The monitor is a leaf monitor, and we can't enter any monitor\n-         *    while holding a leaf monitor.\n-         * We just need to figure out which rank violation it is. It's also possible\n-         * for both to be true, so we print two error messages in that case.\n+         * At this point we know we have some sort of rank violation because we know that\n+         * the current thread owns the monitor we are iterating over, and it has a lower rank\n+         * than the monitor we are entering.\n@@ -1336,0 +1326,1 @@\n+        JDI_ASSERT(dbg_monitor->rank < rank);\n@@ -1337,12 +1328,3 @@\n-        jboolean rank_error = JNI_FALSE;\n-        if (dbg_monitor->rank > rank) {\n-            tty_message(\"DebugRawMonitor rank failure: (%s: %d > %d) for thread (%s)\",\n-                        dbg_monitor->name, dbg_monitor->rank, rank, threadName);\n-            rank_error = JNI_TRUE;\n-        } \n-        if (dbg_monitor->rank < LAST_LEAF_DEBUG_RAW_MONITOR ) {\n-            tty_message(\"DebugRawMonitor rank failure: (%s is a held leaf monitor) for thread (%s)\",\n-                        dbg_monitor->name, threadName);\n-            rank_error = JNI_TRUE;\n-        }\n-        JDI_ASSERT(rank_error); \/\/ We better have found something wrong with the rank\n+        tty_message(\"DebugRawMonitor rank failure: (%d:\\\"%s\\\" > %d:\\\"%s\\\") for thread (%s)\",\n+                    dbg_monitor->rank, dbg_monitor->name,\n+                    rank, dbg_monitors[rank].name, threadName);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":11,"deletions":29,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -361,0 +361,2 @@\n+    \/\/ These first few are leaf monitors so their order doesn't matter. They just\n+    \/\/ need to be ranked lower than the non-leaf monitors.\n@@ -365,4 +367,0 @@\n-    LAST_LEAF_DEBUG_RAW_MONITOR = initMonitor_Rank,\n-\n-    \/\/ Only non-leaf locks below this point. No other locks should be entered\n-    \/\/ while any of the above leaf locks are held.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}