{"files":[{"patch":"@@ -1261,0 +1261,1 @@\n+    tty_message(\"Raw Monitor Dump:\");\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -380,0 +380,5 @@\n+    callbackLock_Rank, \/\/ event handler lock\n+\n+    \/\/ cbVMDeath() enters callbackBlock before callbackLock, so its rank must\n+    \/\/ be higher than callbacklock.\n+    callbackBlock_Rank, \/\/ event handler lock\n@@ -388,2 +393,2 @@\n-    \/\/ threadControl getLocks() grabbing the group of 7 locks\n-    \/\/ above, so it must be ranked higher than handlerLock.\n+    \/\/ threadControl getLocks() grabbing the group of 8 locks\n+    \/\/ above, so it must be ranked higher than callbackLock.\n@@ -392,6 +397,0 @@\n-    \/\/ cbVMDeath() enters callbackBlock before callbackLock. All other event handlers\n-    \/\/ are executed while holding callbackLock, so it needs to rank higher than all\n-    \/\/ the other locks since they are all used during event handling.\n-    callbackLock_Rank, \/\/ event handler lock\n-    callbackBlock_Rank, \/\/ event handler lock\n-\n@@ -413,0 +412,2 @@\n+void dumpRawMonitors();\n+\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}