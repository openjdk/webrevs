{"files":[{"patch":"@@ -254,1 +254,1 @@\n-      if (jt->is_interrupted(true)) {\n+      if (jt->is_interrupted()) {\n@@ -265,1 +265,1 @@\n-      if (jt->is_interrupted(true)) {\n+      if (jt->is_interrupted()) {\n@@ -404,1 +404,1 @@\n-    if (jt->is_interrupted(true)) {\n+    if (jt->is_interrupted()) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -557,1 +557,0 @@\n-\n@@ -570,8 +569,1 @@\n-  oop thread_oop = vthread_or_thread();\n-  bool is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n-  bool interrupted = java_lang_Thread::interrupted(thread_oop);\n-\n-  if (!(interrupted && clear_interrupted)) {\n-    return interrupted;\n-  }\n-  assert(this == Thread::current(), \"only the current thread can clear\");\n+  bool interrupted = java_lang_Thread::interrupted(threadObj());\n@@ -594,1 +586,2 @@\n-  if (!is_virtual) { \/\/ platform thread\n+  if (interrupted && clear_interrupted) {\n+    assert(this == Thread::current(), \"only the current thread can clear\");\n@@ -597,1 +590,0 @@\n-    return interrupted;\n@@ -599,0 +591,2 @@\n+  return interrupted;\n+}\n@@ -600,0 +594,12 @@\n+\/\/ Checks and clears the interrupt status for platform or virtual thread.\n+\/\/ Used by the JVMTI RawMonitorWait only.\n+bool JavaThread::is_interrupted() {\n+  if (!is_interrupted(false)) {\n+    return false;\n+  }\n+  oop thread_oop = vthread_or_thread();\n+  bool is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n+\n+  if (!is_virtual) {\n+    return is_interrupted(true);\n+  }\n@@ -608,1 +614,1 @@\n-  interrupted = java_lang_Thread::interrupted(thread_h());\n+  bool interrupted = java_lang_Thread::interrupted(thread_h());\n@@ -611,0 +617,1 @@\n+    assert(this == Thread::current(), \"only the current thread can clear\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1154,0 +1154,4 @@\n+  \/\/ Checks and clears the interrupt status for platform or virtual thread.\n+  \/\/ Used by the JVMTI RawMonitorWait only.\n+  bool is_interrupted();\n+\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}