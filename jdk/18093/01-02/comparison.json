{"files":[{"patch":"@@ -41,0 +41,1 @@\n+    static native void waitForCondition(Thread t);\n@@ -51,1 +52,1 @@\n-        Thread.sleep(2000);\n+        waitForCondition(thread);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/InterruptRawMonitor\/InterruptRawMonitor.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,3 @@\n-\n+static jrawMonitorID monitor = nullptr;\n+static bool is_waiting = false;\n+ \n@@ -35,1 +37,3 @@\n-  LOG(\"check #%d: Thread State: (0x%x) %s\\n\", check_idx, state, TranslateState(state));\n+  LOG(\"\\ntest: check #%d: Thread State: (0x%x) %s\\n\",\n+      check_idx, state, TranslateState(state));\n+\n@@ -42,5 +46,14 @@\n-Java_InterruptRawMonitor_test(JNIEnv *jni, jclass clazz) {\n-  jvmtiError err;\n-  jrawMonitorID monitor = create_raw_monitor(jvmti, \"Test Monitor\");\n-\n-  LOG(\"JVMTI_THREAD_STATE_INTERRUPTED bit: 0x%x\\n\", JVMTI_THREAD_STATE_INTERRUPTED);\n+Java_InterruptRawMonitor_waitForCondition(JNIEnv *jni, jclass clazz, jthread thread) {\n+  jint state = 0;\n+  RawMonitorLocker rml(jvmti, jni, monitor);\n+\n+  while (!is_waiting) {\n+    state = get_thread_state(jvmti, jni, thread);\n+    LOG(\"main: waitForCondition: target Thread State: (0x%x) %s\\n\",\n+        state, TranslateState(state));\n+    rml.wait(10); \n+  }\n+  state = get_thread_state(jvmti, jni, thread);\n+  LOG(\"main: waitForCondition: target Thread State: (0x%x) %s\\n\\n\",\n+      state, TranslateState(state));\n+}\n@@ -48,2 +61,3 @@\n-  err = jvmti->RawMonitorEnter(monitor);\n-  check_jvmti_status(jni, err, \"Failed in RawMonitorEnter\");\n+JNIEXPORT void JNICALL\n+Java_InterruptRawMonitor_test(JNIEnv *jni, jclass clazz) {\n+  RawMonitorLocker rml(jvmti, jni, monitor);\n@@ -52,0 +66,1 @@\n+  is_waiting = true;\n@@ -54,2 +69,3 @@\n-  err = jvmti->RawMonitorWait(monitor, 0);\n-  LOG(\"JVMTI RawMonitorWait error code: (%d) %s\\n\", err, TranslateError(err));\n+  jvmtiError err = jvmti->RawMonitorWait(monitor, 0);\n+  LOG(\"test: JVMTI RawMonitorWait returned expected error code: (%d) %s\\n\",\n+      err, TranslateError(err));\n@@ -62,3 +78,1 @@\n-  \/\/ expected to be non-interrupted\n-  err = jvmti->RawMonitorWait(monitor, 1000);\n-  check_jvmti_status(jni, err, \"Failed in RawMonitorWait\");\n+  rml.wait(10); \/\/ expected to be non-interrupted\n@@ -67,5 +81,0 @@\n-\n-  err = jvmti->RawMonitorExit(monitor);\n-  check_jvmti_status(jni, err, \"Failed in RawMonitorExit\");\n-\n-  destroy_raw_monitor(jvmti, jni, monitor);\n@@ -80,0 +89,3 @@\n+  monitor = create_raw_monitor(jvmti, \"Test Monitor\");\n+  LOG(\"test: JVMTI_THREAD_STATE_INTERRUPTED bit: 0x%x\\n\", JVMTI_THREAD_STATE_INTERRUPTED);\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/InterruptRawMonitor\/libInterruptRawMonitor.cpp","additions":31,"deletions":19,"binary":false,"changes":50,"status":"modified"}]}