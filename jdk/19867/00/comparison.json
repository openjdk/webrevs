{"files":[{"patch":"@@ -62,0 +62,16 @@\n+\/\/ A template class to handle automatic clean-up\n+\/\/ to avoid repeating clean-up code in all return paths.\n+\/\/ The destructor of the object invokes the passed-in lambda to clean up.\n+template<typename F>\n+class Cleaner {\n+public:\n+    Cleaner(const F &clean) : cleanup(clean) {}\n+\n+    ~Cleaner() {\n+        cleanup();\n+    }\n+\n+private:\n+    const F cleanup;\n+};\n+\n@@ -485,12 +501,0 @@\n-#define CLEANUP_SHOW {                      \\\n-    env->DeleteGlobalRef(peerGlobalRef);    \\\n-    if (target != NULL) {                   \\\n-        env->DeleteLocalRef(target);        \\\n-    }                                       \\\n-    if (parent != NULL) {                   \\\n-        env->DeleteLocalRef(parent);        \\\n-    }                                       \\\n-    env->DeleteLocalRef(page);              \\\n-    env->DeleteLocalRef(self);              \\\n-}\n-\n@@ -522,0 +526,14 @@\n+    \/\/ Delete references to Java objects\n+    auto refCleanup = [&] {\n+        env->DeleteGlobalRef(peerGlobalRef);\n+        if (target != NULL) {\n+          env->DeleteLocalRef(target);\n+        }\n+        if (parent != NULL) {\n+          env->DeleteLocalRef(parent);\n+        }\n+        env->DeleteLocalRef(page);\n+        env->DeleteLocalRef(self);\n+    };\n+    Cleaner<decltype(refCleanup)> refCleaner(refCleanup);\n+\n@@ -525,1 +543,0 @@\n-    jboolean doIt = JNI_FALSE;\n@@ -580,2 +597,1 @@\n-            CLEANUP_SHOW;\n-            return doIt;\n+            return JNI_FALSE;\n@@ -608,2 +624,1 @@\n-        CLEANUP_SHOW;\n-        return doIt;\n+        return JNI_FALSE;\n@@ -617,0 +632,18 @@\n+    \/\/ Undo modal hooks and save printer parameters\n+    auto postCleanup = [&] {\n+        AwtDialog::CheckUninstallModalHook();\n+\n+        AwtDialog::ModalActivateNextWindow(NULL, target, peer);\n+\n+        HGLOBAL oldG = AwtPrintControl::getPrintHDMode(env, self);\n+        if (setup.hDevMode != oldG) {\n+           AwtPrintControl::setPrintHDMode(env, self, setup.hDevMode);\n+        }\n+\n+        oldG = AwtPrintControl::getPrintHDName(env, self);\n+        if (setup.hDevNames != oldG) {\n+           AwtPrintControl::setPrintHDName(env, self, setup.hDevNames);\n+        }\n+    };\n+    Cleaner<decltype(postCleanup)> postCleaner(postCleanup);\n+\n@@ -622,2 +655,1 @@\n-            CLEANUP_SHOW;\n-            return doIt;\n+            return JNI_FALSE;\n@@ -664,2 +696,1 @@\n-            CLEANUP_SHOW;\n-            return doIt;\n+            return JNI_FALSE;\n@@ -673,2 +704,1 @@\n-            CLEANUP_SHOW;\n-            return doIt;\n+            return JNI_FALSE;\n@@ -678,1 +708,0 @@\n-            CLEANUP_SHOW;\n@@ -687,2 +716,1 @@\n-                        CLEANUP_SHOW;\n-                        return doIt;\n+                        return JNI_FALSE;\n@@ -694,10 +722,1 @@\n-        doIt = JNI_TRUE;\n-    }\n-\n-    AwtDialog::CheckUninstallModalHook();\n-\n-    AwtDialog::ModalActivateNextWindow(NULL, target, peer);\n-\n-    HGLOBAL oldG = AwtPrintControl::getPrintHDMode(env, self);\n-    if (setup.hDevMode != oldG) {\n-        AwtPrintControl::setPrintHDMode(env, self, setup.hDevMode);\n+        return JNI_TRUE;\n@@ -706,8 +725,1 @@\n-    oldG = AwtPrintControl::getPrintHDName(env, self);\n-    if (setup.hDevNames != oldG) {\n-        AwtPrintControl::setPrintHDName(env, self, setup.hDevNames);\n-    }\n-\n-    CLEANUP_SHOW;\n-\n-    return doIt;\n+    return JNI_FALSE;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":56,"deletions":44,"binary":false,"changes":100,"status":"modified"}]}