{"files":[{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dialog;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+\n+\/*\n+ * @test\n+ * @bug 4193022\n+ * @summary Test for bug(s): 4193022, disposing dialog leaks memory\n+ * @key headful\n+ * @run main\/othervm -Xmx128m DialogDisposeLeak\n+ *\/\n+\n+public class DialogDisposeLeak {\n+    static Frame frame;\n+\n+    public static void main(String args[]) throws Exception {\n+        EventQueue.invokeLater(() -> {\n+            try {\n+                frame = new DisposeFrame();\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Test failed.\");\n+            } finally {\n+                if (!DisposeFrame.passed) {\n+                    throw new RuntimeException(\"Test failed.\");\n+                }\n+            }\n+        });\n+    }\n+}\n+\n+class DisposeFrame extends Frame {\n+    Label label = new Label(\"Test not passed yet\");\n+    static boolean passed;\n+\n+    DisposeFrame() {\n+        super(\"DisposeLeak test\");\n+        passed = false;\n+        setLayout(new FlowLayout());\n+        add(label);\n+        pack();\n+\n+        for (int i = 0; !passed && i < 10; i++) {\n+            Dialog dlg = new DisposeDialog(this);\n+            dlg.setVisible(true);\n+        }\n+    }\n+\n+    public void testOK() {\n+        passed = true;\n+        label.setText(\"Test has passed. Dialog finalized.\");\n+    }\n+}\n+\n+class DisposeDialog extends Dialog {\n+    DisposeDialog(Frame frame) {\n+        super(frame, \"DisposeDialog\", false);\n+\n+        setLayout(new FlowLayout());\n+        setVisible(false);\n+        dispose();\n+        \/\/ try to force GC and finalization\n+        for (int n = 0; n < 100; n++) {\n+            byte bytes[] = new byte[1024 * 1024 * 8];\n+            System.gc();\n+            pack();\n+        }\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    public void finalize() {\n+        ((DisposeFrame) getParent()).testOK();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/DialogDisposeLeak.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,189 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Container;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Label;\n+import java.awt.Panel;\n+import java.awt.TextField;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4105025 4153487 4177107 4146229 4119383 4181310 4152317\n+ * @summary Test: FileDialogTest\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FileDialogTest\n+ *\/\n+\n+public class FileDialogTest extends Panel implements ActionListener {\n+    Button buttonShow, buttonNullShow, buttonShowHide, buttonShowDispose;\n+    TextField fieldFile;\n+    TextField fieldDir;\n+    TextField fieldTitle;\n+    private static final String INSTRUCTIONS = \"\"\"\n+             1. Set file, directory, and title fields to some real values\n+                Title will not show on macos dialog\n+             2. Click the \"Get File...\" button.\n+             3. Verify that dialog is set to proper file and directory, and that\n+                title is also set.\n+             4. Select a file and OK the dialog\n+                (or whatever the selection button is).\n+             5. Verify that the file and directory fields reflect the file chosen.\n+             6. Now, click the \"Get null File with null Directory...\" button.\n+             7. Verify that the file list matches the listed directory.\n+             8. Cancel or OK the dialog.\n+             9. Verify that no NullPointerException is thrown.\n+            10. Now, click the \"Show FileDialog, then hide() in 5 s...\" button.\n+            11. Wait for 5 seconds. The FileDialog should then\n+                disappear automatically.\n+            12. 12-14 are Windows specific. Set file to some invalid value,\n+                like \"\/<>++\".\n+            13. Click the \"Get File...\" button.\n+            14. Verify that FileDialog is shown with empty \"file\" field.\n+            15. Run the test on different locales. Verify that filter string\n+                \"All Files\" is localized.\n+            \"\"\";\n+\n+    public static void main(String args[]) throws Exception {\n+        Frame frame = new Frame(\"FileDialogTest\");\n+        frame.setLayout(new GridLayout());\n+        frame.add(new FileDialogTest());\n+        frame.pack();\n+\n+        PassFailJFrame.builder()\n+                .title(\"FileDialogTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(frame)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public FileDialogTest() {\n+        setLayout(new GridLayout(6, 2));\n+\n+        buttonShow = new Button(\"Get File...\");\n+        add(buttonShow);\n+        buttonNullShow = new Button(\"Get null File with null Directory...\");\n+        add(buttonNullShow);\n+        buttonShowHide = new Button(\"Show FileDialog, then hide() in 5 s...\");\n+        add(buttonShowHide);\n+        buttonShowDispose =\n+                new Button(\"Show FileDialog, then dispose() in 5 s...\");\n+        add(buttonShowDispose);\n+\n+        add(new Label(\"\"));\n+        add(new Label(\"\"));\n+\n+        add(new Label(\"File:\"));\n+        fieldFile = new TextField(20);\n+        add(fieldFile);\n+\n+        add(new Label(\"Directory:\"));\n+        fieldDir = new TextField(20);\n+        add(fieldDir);\n+\n+        add(new Label(\"Title:\"));\n+        fieldTitle = new TextField(20);\n+        fieldTitle.setText(\"TestTitle\");\n+        add(fieldTitle);\n+\n+        buttonShow.addActionListener(this);\n+        buttonNullShow.addActionListener(this);\n+        buttonShowHide.addActionListener(this);\n+        buttonShowDispose.addActionListener(this);\n+    }\n+\n+    public void actionPerformed(ActionEvent evt) {\n+        if (evt.getSource() == buttonShow) {\n+            FileDialog fd = new FileDialog(getFrame(), fieldTitle.getText());\n+            fd.setFile(fieldFile.getText());\n+            fd.setDirectory(fieldDir.getText());\n+            fd.show();\n+            System.out.println(\"back from show\");\n+            fieldFile.setText(fd.getFile());\n+            fieldDir.setText(fd.getDirectory());\n+            fd.dispose();\n+        } else if (evt.getSource() == buttonNullShow) {\n+            FileDialog fd = new FileDialog(getFrame(), fieldTitle.getText());\n+            fd.setFile(null);\n+            fd.setDirectory(null);\n+            fd.show();\n+            System.out.println(\"back from show\");\n+            fieldFile.setText(fd.getFile());\n+            fieldDir.setText(fd.getDirectory());\n+            fd.setFile(null);\n+            fd.setDirectory(null);\n+            fd.dispose();\n+        } else if (evt.getSource() == buttonShowHide) {\n+            final FileDialog fd = new FileDialog(getFrame(),\n+                    fieldTitle.getText());\n+            fd.setFile(fieldFile.getText());\n+            fd.setDirectory(fieldDir.getText());\n+            new Thread(new Runnable() {\n+                public void run() {\n+                    try {\n+                        Thread.currentThread().sleep(5000);\n+                    } catch (InterruptedException ex) {\n+                    }\n+                    fd.hide();\n+                }\n+            }).start();\n+            fd.show();\n+            System.out.println(\"back from show\");\n+            fd.dispose();\n+        } else if (evt.getSource() == buttonShowDispose) {\n+            final FileDialog fd = new FileDialog(getFrame(),\n+                    fieldTitle.getText());\n+            fd.setFile(fieldFile.getText());\n+            fd.setDirectory(fieldDir.getText());\n+            new Thread(() -> {\n+                try {\n+                    Thread.currentThread().sleep(5000);\n+                } catch (InterruptedException ex) {\n+                }\n+                fd.dispose();\n+            }).start();\n+            fd.show();\n+            System.out.println(\"back from show\");\n+            fd.dispose();\n+        }\n+    }\n+\n+    private Frame getFrame() {\n+        Container cont = getParent();\n+        while (cont != null) {\n+            if (cont instanceof Frame) {\n+                return (Frame) cont;\n+            }\n+            cont = cont.getParent();\n+        }\n+        return null;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogTest.java","additions":189,"deletions":0,"binary":false,"changes":189,"status":"added"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowListener;\n+import java.awt.print.PageFormat;\n+import java.awt.print.PrinterJob;\n+\n+\/*\n+ * @test\n+ * @bug 6488834\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests that native dialogs (file, page, print) appear or\n+    don't appear on the windows taskbar depending of their parent\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TaskbarIconTest\n+*\/\n+\n+public class TaskbarIconTest {\n+    private static WindowListener wl = new WindowAdapter() {\n+        public void windowClosing(WindowEvent we) {\n+            Window w = we.getWindow();\n+            w.dispose();\n+            Window owner = w.getOwner();\n+            if (owner != null) {\n+                owner.dispose();\n+            }\n+        }\n+    };\n+\n+    private static ActionListener al = new ActionListener() {\n+        public void actionPerformed(ActionEvent ae) {\n+            Button b = (Button) ae.getSource();\n+\n+            String bLabel = b.getLabel();\n+            boolean hasParent = (bLabel.indexOf(\"parentless\") < 0);\n+            Frame parent = hasParent ? new Frame(\"Parent\") : null;\n+\n+            if (bLabel.startsWith(\"Java\")) {\n+                Dialog d = new Dialog(parent, \"Java dialog\", true);\n+                d.setBounds(0, 0, 160, 120);\n+                d.addWindowListener(wl);\n+                d.setVisible(true);\n+            } else if (bLabel.startsWith(\"File\")) {\n+                FileDialog d = new FileDialog(parent, \"File dialog\");\n+                d.setVisible(true);\n+            } else if (bLabel.startsWith(\"Print\")) {\n+                PrinterJob pj = PrinterJob.getPrinterJob();\n+                pj.printDialog();\n+            } else if (bLabel.startsWith(\"Page\")) {\n+                PrinterJob pj = PrinterJob.getPrinterJob();\n+                pj.pageDialog(new PageFormat());\n+            }\n+        }\n+    };\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When the test starts a frame 'Main' is shown. It contains\n+            several buttons, pressing each of them shows a dialog.\n+            Some of the dialogs have a parent window, others are\n+            parentless, according to the corresponding button's test.\n+\n+            Press each button one after another. Make sure that all\n+            parentless dialogs have an icon in the windows taskbar\n+            and all the dialogs with parents don't. Press PASS or\n+            FAIL button depending on the result.\n+\n+            Note: as all the dialogs shown are modal, you have to close\n+            them before showing the next dialog or PASS or FAIL buttons.\"\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"WindowInputBlock\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(TaskbarIconTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Button b;\n+\n+        Frame mainFrame = new Frame(\"Main\");\n+        mainFrame.setBounds(120, 240, 160, 240);\n+        mainFrame.setLayout(new GridLayout(6, 1));\n+\n+        b = new Button(\"Java dialog, with parent\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        b = new Button(\"Java dialog, parentless\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        b = new Button(\"File dialog, with parent\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        b = new Button(\"File dialog, parentless\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        b = new Button(\"Print dialog, parentless\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        b = new Button(\"Page dialog, parentless\");\n+        b.addActionListener(al);\n+        mainFrame.add(b);\n+\n+        return mainFrame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/TaskbarIconTest.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+\n+\/*\n+ * @test\n+ * @bug 4124096\n+ * @summary Modal JDialog is not modal on Solaris\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual WindowInputBlock\n+ *\/\n+\n+public class WindowInputBlock {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When the Window is up, you see a \"Show Modal Dialog\" button, a\n+            \"Test\" button and a TextField.\n+            Verify that the \"Test\" button is clickable, and the TextField can\n+            receive focus.\n+\n+            Now, click on \"Show Modal Dialog\" button to bring up a modal dialog\n+            and verify that both \"Test\" button and TextField are not accessible.\n+            Close the new dialog window. If the test behaved as described, pass\n+            this test. Otherwise, fail this test.\n+\n+            \"\"\";\n+\n+    public static void main(String[] argv) throws Exception {\n+        JFrame frame = new ModalDialogTest();\n+        PassFailJFrame.builder()\n+                .title(\"WindowInputBlock\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(frame)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n+class ModalDialogTest extends JFrame implements ActionListener {\n+    JDialog dialog = new JDialog(new JFrame(), \"Modal Dialog\", true);\n+\n+    public ModalDialogTest() {\n+        setTitle(\"Modal Dialog Test\");\n+        JPanel controlPanel = new JPanel();\n+        JPanel infoPanel = new JPanel();\n+        JButton showButton = new JButton(\"Show Modal Dialog\");\n+        JButton testButton = new JButton(\"Test\");\n+        JTextField textField = new JTextField(\"Test\");\n+\n+        getContentPane().setLayout(new BorderLayout());\n+        infoPanel.setLayout(new GridLayout(0, 1));\n+\n+        showButton.setOpaque(true);\n+        showButton.setBackground(Color.yellow);\n+\n+        testButton.setOpaque(true);\n+        testButton.setBackground(Color.pink);\n+\n+        controlPanel.add(showButton);\n+        controlPanel.add(testButton);\n+        controlPanel.add(textField);\n+\n+        infoPanel.add(new JLabel(\"Click the \\\"Show Modal Dialog\\\" button \" +\n+                \"to display a modal JDialog.\"));\n+        infoPanel.add(new JLabel(\"Click the \\\"Test\\\" button to verify \" +\n+                \"dialog modality.\"));\n+\n+        getContentPane().add(BorderLayout.NORTH, controlPanel);\n+        getContentPane().add(BorderLayout.SOUTH, infoPanel);\n+        dialog.setSize(200, 200);\n+\n+        showButton.addActionListener(this);\n+        testButton.addActionListener(this);\n+\n+        addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                System.exit(0);\n+            }\n+\n+            public void windowClosed(WindowEvent e) {\n+                System.exit(0);\n+            }\n+        });\n+\n+        pack();\n+        setSize(450, 120);\n+    }\n+\n+    public void actionPerformed(ActionEvent evt) {\n+        String command = evt.getActionCommand();\n+\n+        if (command == \"Show Modal Dialog\") {\n+            System.out.println(\"*** Invoking JDialog.show() ***\");\n+            dialog.setLocation(200, 200);\n+            dialog.setVisible(true);\n+        } else if (command == \"Test\") {\n+            System.out.println(\"*** Test ***\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/WindowInputBlock.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4648702\n+ * @summary TextArea horizontal scrollbar behavior is incorrect\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaHScrollbarTest\n+ *\/\n+\n+public class TextAreaHScrollbarTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+                Please look at the frame.\n+                If the vertical and horizontal scrollbars are visible\n+                the test passed else failed.\n+                \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaHScrollbarTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TextAreaHScrollbarTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame test = new Frame();\n+        test.add(new TextArea(\"TextAreaHScrollbarTest\", 5, 60,\n+                TextArea.SCROLLBARS_BOTH));\n+        test.setSize(200, 100);\n+        return test;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaHScrollbarTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4776535\n+ * @summary Regression: line should not wrap around into multi lines in TextArea.\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaLineScrollWrapTest\n+ *\/\n+\n+public class TextAreaLineScrollWrapTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            You should see a frame \"TextAreaLineScrollWrapTest\" with\n+            a TextArea that contains a very long line.\n+            If the line is wrapped the test is failed.\n+\n+            Insert a lot of text lines and move a caret to the last one.\n+            If a caret hides and a content of the TextArea\n+            does not scroll the test is failed\n+            else the test is passed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaLineScrollWrapTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TextAreaLineScrollWrapTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame f = new Frame(\"TextAreaLineScrollWrapTest\");\n+        f.add(new TextArea(\"long long long long long long long line...........\",\n+                3, 4));\n+        f.setSize(100, 100);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaLineScrollWrapTest.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Label;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4158997\n+ * @key headful\n+ * @summary Make sure that the TextArea has both horizontal and\n+ * vertical scrollbars when bad scrollbar arguments are passed\n+ * into the constructor.\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaScrollbarTest\n+ *\/\n+\n+public class TextAreaScrollbarTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Check to see that each TextArea has the specified\n+            number and placement of scrollbars, i.e., both scrollbars,\n+            horizontal only, vertical only, or no scrollbars at all.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaScrollbarTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(TestFrame::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n+class TestFrame extends Frame {\n+    private String both = \"Both Scrollbars  Both Scrollbars  Both Scrollbars\\n\";\n+    private String horiz = \"Horizontal Scrollbar Only  Horizontal Scrollbar Only\\n\";\n+    private String vert = \"Vertical Scrollbar Only  Vertical Scrollbar Only\\n\";\n+    private String none = \"No Scrollbars  No Scrollbars  No Scrollbars  No Scrollbars\\n\";\n+\n+    public TestFrame() {\n+        super(\"Test frame\");\n+\n+        \/\/ sets a GridLayout w\/ 2 columns and an unspecified # of rows\n+        setLayout(new GridLayout(0, 2, 15, 5));\n+\n+        TextArea t1 = new TextArea(both + both + both + both + both + both, 3, 8, 0);\n+        add(new Label(\"TA should have both scrollbars: arg = 0\"));\n+        add(t1);\n+\n+        TextArea t2 = new TextArea(both + both + both + both + both + both, 3, 8, -1);\n+        add(new Label(\"TA should have both scrollbars: arg = -1\"));\n+        add(t2);\n+\n+        TextArea t3 = new TextArea(both + both + both + both + both + both, 3, 8, 4);\n+        add(new Label(\"TA should have both scrollbars: arg = 4\"));\n+        add(t3);\n+\n+        TextArea t4 = new TextArea(horiz + horiz + horiz + horiz + horiz + horiz, 3, 8, 2);\n+        add(new Label(\"TA should have horizontal scrollbar: arg = 2\"));\n+        add(t4);\n+\n+        TextArea t5 = new TextArea(vert + vert + vert + vert + vert + vert, 3, 8, 1);\n+        add(new Label(\"TA should have vertical scrollbar: arg = 1\"));\n+        add(t5);\n+\n+        TextArea t6 = new TextArea(none + none + none + none + none + none, 3, 8, 3);\n+        add(new Label(\"TA should have no scrollbars: arg = 3\"));\n+        add(t6);\n+\n+        TextArea t7 = new TextArea();\n+        t7.setText(both + both + both + both + both + both);\n+        add(new Label(\"Both scrollbars: TextArea()\"));\n+        add(t7);\n+\n+        TextArea t8 = new TextArea(both + both + both + both + both + both);\n+        add(new Label(\"Both scrollbars: TextArea(String text)\"));\n+        add(t8);\n+\n+        TextArea t9 = new TextArea(3, 8);\n+        t9.setText(both + both + both + both + both + both);\n+        add(new Label(\"Both scrollbars: TextArea(int rows, int columns)\"));\n+        add(t9);\n+\n+        TextArea t10 = new TextArea(both + both + both + both + both + both, 3, 8);\n+        add(new Label(\"Both scrollbars: TextArea(text, rows, columns)\"));\n+        add(t10);\n+\n+        setSize(600,600);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaScrollbarTest.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4127272\n+ * @summary TextArea displays head of text when scrolling horizontal bar.\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextScrollTest\n+ *\/\n+\n+public class TextScrollTest extends Frame {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. A TextArea whose content starts with the text \",\n+               'Scroll till the' will appear on the applet \",\n+            2. Use the Horizontal thumb button of the TextArea to view the entire\",\n+               content of the TextArea\",\n+            3. While scrolling, if the text 'Scroll till the' appears repeatedly, Click Fail  \",\n+               else Click Pass\"\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextScrollTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TextScrollTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public TextScrollTest() {\n+        this.setLayout(new BorderLayout());\n+\n+        Panel p = new Panel();\n+        TextArea ta = new TextArea(\"Scroll till the right end of the \" +\n+                \"TextArea is reached. Action Done?\\n\", 10, 20);\n+\n+        p.add(ta);\n+        add(\"Center\", p);\n+        setSize(200, 200);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextScrollTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}