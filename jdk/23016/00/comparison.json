{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.io.IOException;\n@@ -30,0 +31,1 @@\n+import java.util.stream.Stream;\n@@ -35,0 +37,1 @@\n+import jdk.test.lib.Platform;\n@@ -40,0 +43,6 @@\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -45,1 +54,1 @@\n- *      8296248 8306116 8174269\n+ *      8296248 8306116 8174269 8347146\n@@ -49,1 +58,1 @@\n- * @library ..\/..\/lib\n+ * @library ..\/..\/lib \/test\/lib\n@@ -58,0 +67,1 @@\n+ * @build jdk.test.lib.Platform\n@@ -59,1 +69,1 @@\n- * @run main\/othervm\/timeout=180 -Xmx1g IncludeLocalesPluginTest\n+ * @run junit\/othervm\/timeout=180 -Xmx1g IncludeLocalesPluginTest\n@@ -61,0 +71,1 @@\n+\n@@ -63,1 +74,1 @@\n-    private static final String moduleName = \"IncludeLocalesTest\";\n+    private static final String MODULE_NAME = \"IncludeLocalesTest\";\n@@ -65,352 +76,331 @@\n-    private static final int INCLUDE_LOCALES_OPTION = 0;\n-    private static final int ADDMODS_OPTION         = 1;\n-    private static final int EXPECTED_LOCATIONS     = 2;\n-    private static final int UNEXPECTED_PATHS       = 3;\n-    private static final int AVAILABLE_LOCALES      = 4;\n-    private static final int ERROR_MESSAGE          = 5;\n-\n-    private static int errors;\n-\n-    private final static Object[][] testData = {\n-        \/\/ Test data should include:\n-        \/\/  - --include-locales command line option\n-        \/\/  - --add-modules command line option values\n-        \/\/  - List of required resources in the result image\n-        \/\/  - List of resources that should not exist in the result image\n-        \/\/  - List of available locales in the result image\n-        \/\/  - Error message\n-\n-        \/\/ without --include-locales option: should include all locales\n-        {\n-            \"\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(),\n-            Arrays.stream(Locale.getAvailableLocales())\n-                  \/\/ \"(root)\" for Locale.ROOT rather than \"\"\n-                  .map(loc -> loc.equals(Locale.ROOT) ? \"(root)\" : loc.toString())\n-                  .collect(Collectors.toList()),\n-            \"\",\n-        },\n-\n-        \/\/ Asterisk works exactly the same as above\n-        {\n-            \"--include-locales=*\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(),\n-            Arrays.stream(Locale.getAvailableLocales())\n-                  \/\/ \"(root)\" for Locale.ROOT rather than \"\"\n-                  .map(loc -> loc.equals(Locale.ROOT) ? \"(root)\" : loc.toString())\n-                  .collect(Collectors.toList()),\n-            \"\",\n-        },\n-\n-        \/\/ World English\/Spanish in Latin America\n-        {\n-            \"--include-locales=en-001,es-419\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_150.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_AT.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es_419.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es_AR.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AG\", \"en_AI\",\n-                \"en_AT\", \"en_AU\", \"en_BB\", \"en_BE\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n-                \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n-                \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n-                \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GY\", \"en_HK\", \"en_ID\",\n-                \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\", \"en_KE\",\n-                \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\", \"en_MO\",\n-                \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\", \"en_NA\", \"en_NF\", \"en_NG\",\n-                \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\", \"en_PK\", \"en_PN\",\n-                \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\", \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\",\n-                \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\", \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\",\n-                \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VU\", \"en_WS\",\n-                \"en_ZA\", \"en_ZM\", \"en_ZW\", \"es\", \"es_419\", \"es_AR\", \"es_BO\", \"es_BR\", \"es_BZ\",\n-                \"es_CL\", \"es_CO\", \"es_CR\", \"es_CU\", \"es_DO\", \"es_EC\", \"es_GT\", \"es_HN\",\n-                \"es_MX\", \"es_NI\", \"es_PA\", \"es_PE\", \"es_PR\", \"es_PY\", \"es_SV\", \"es_US\",\n-                \"es_UY\", \"es_VE\",\n-                \/\/ CLDR's \"hi-Latn\" falls back to \"en-001\", \"hi-Latn\"\/\"hi-Latn-IN\" are added\n-                \/\/ here. Since Locale.Matcher cannot handle such exceptional inheritance,\n-                \/\/ allowing to include \"hi\"\/\"hi-IN\" resource files.\n-                \"hi\", \"hi__#Latn\", \"hi_IN\", \"hi_IN_#Latn\"),\n-            \"\",\n-        },\n-\n-        \/\/ All English and Japanese locales\n-        {\n-            \"--include-locales=en,ja\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AE\", \"en_AG\", \"en_AI\", \"en_AS\", \"en_AT\",\n-                \"en_AU\", \"en_BB\", \"en_BE\", \"en_BI\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n-                \"en_CA\", \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n-                \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n-                \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GU\", \"en_GY\",\n-                \"en_HK\", \"en_ID\", \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\",\n-                \"en_KE\", \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\",\n-                \"en_MH\", \"en_MO\", \"en_MP\", \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\",\n-                \"en_NA\", \"en_NF\", \"en_NG\", \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\",\n-                \"en_PH\", \"en_PK\", \"en_PN\", \"en_PR\", \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\",\n-                \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\", \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\",\n-                \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\", \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\",\n-                \"en_UM\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VI\", \"en_VU\",\n-                \"en_WS\", \"en_ZA\", \"en_ZM\", \"en_ZW\", \"ja\", \"ja_JP\", \"ja_JP_#Jpan\",\n-                \"ja_JP_JP_#u-ca-japanese\"),\n-            \"\",\n-        },\n-\n-        \/\/ All locales in Austria\n-        {\n-            \"--include-locales=*-AT\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_de.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_de_AT.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_150.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_AT.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AT\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\",\n-                \"de\", \"de_AT\"),\n-            \"\",\n-        },\n-\n-        \/\/ All locales in India\n-        {\n-            \"--include-locales=*-IN\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_IN.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorResources_th.class\",\n-                \"\/jdk.localedata\/sun\/util\/resources\/cldr\/ext\/CalendarData_as_IN.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(\n-                \"(root)\", \"as\", \"as_IN\", \"as_IN_#Beng\", \"bgc\", \"bgc_IN\", \"bgc_IN_#Deva\", \"bho\", \"bho_IN\", \"bho_IN_#Deva\",\n-                \"bn\", \"bn_IN\", \"bo\", \"bo_IN\", \"brx\", \"brx_IN\", \"brx_IN_#Deva\", \"ccp\", \"ccp_IN\", \"doi\", \"doi_IN\",\n-                \"doi_IN_#Deva\", \"en\", \"en_001\", \"en_IN\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"gu\", \"gu_IN\",\n-                \"gu_IN_#Gujr\", \"hi\", \"hi__#Latn\", \"hi_IN\", \"hi_IN_#Deva\", \"hi_IN_#Latn\", \"kn\", \"kn_IN\", \"kn_IN_#Knda\",\n-                \"kok\", \"kok__#Deva\", \"kok__#Latn\", \"kok_IN\", \"kok_IN_#Deva\", \"kok_IN_#Latn\", \"ks\", \"ks__#Arab\",\n-                \"ks__#Deva\", \"ks_IN\", \"ks_IN_#Arab\", \"ks_IN_#Deva\", \"kxv\", \"kxv_IN\", \"kxv_IN_#Deva\", \"kxv_IN_#Latn\",\n-                \"kxv_IN_#Orya\", \"kxv_IN_#Telu\", \"kxv__#Deva\", \"kxv__#Latn\", \"kxv__#Orya\", \"kxv__#Telu\",\n-                \"mai\", \"mai_IN\", \"mai_IN_#Deva\", \"mni\", \"mni__#Beng\", \"mni_IN\", \"mni_IN_#Beng\", \"ml\", \"ml_IN\",\n-                \"ml_IN_#Mlym\", \"mr\", \"mr_IN\", \"mr_IN_#Deva\", \"ne\", \"ne_IN\", \"or\", \"or_IN\", \"or_IN_#Orya\", \"pa\",\n-                \"pa__#Guru\", \"pa_IN\", \"pa_IN_#Guru\", \"raj\", \"raj_IN\", \"raj_IN_#Deva\", \"sa\", \"sa_IN\", \"sa_IN_#Deva\",\n-                \"sat\", \"sat__#Olck\", \"sat_IN\", \"sat_IN_#Olck\", \"sd\", \"sd__#Deva\", \"sd_IN\", \"sd_IN_#Deva\", \"ta\", \"ta_IN\",\n-                \"ta_IN_#Taml\", \"te\", \"te_IN\", \"te_IN_#Telu\", \"ur_IN\", \"ur\", \"xnr\", \"xnr_IN\", \"xnr_IN_#Deva\"),\n-            \"\",\n-        },\n-\n-        \/\/ Thai\n-        {\n-            \"--include-locales=th\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorResources_th.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"th\", \"th_TH\",\n-                \"th_TH_#Thai\", \"th_TH_TH_#u-nu-thai\"),\n-            \"\",\n-        },\n-\n-        \/\/ Hong Kong\n-        {\n-            \"--include-locales=zh-HK\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"zh\", \"zh__#Hans\", \"zh__#Hant\",\n-                \"zh_HK\", \"zh_HK_#Hans\", \"zh_HK_#Hant\"),\n-            \"\",\n-        },\n-\n-        \/\/ Simplified Chinese\n-        {\n-            \"--include-locales=zh-Hans\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"zh\", \"zh__#Latn\", \"zh__#Hans\", \"zh_CN\",\n-                \"zh_CN_#Latn\", \"zh_CN_#Hans\", \"zh_HK\", \"zh_HK_#Hans\", \"zh_MO\", \"zh_MO_#Hans\", \"zh_MY_#Hans\", \"zh_SG\",\n-                \"zh_SG_#Hans\"),\n-            \"\",\n-        },\n-\n-        \/\/ Norwegian\n-        {\n-            \"--include-locales=nb,nn,no\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_nb.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_nn.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_no.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"nb\", \"nb_NO\",\n-                \"nb_NO_#Latn\", \"nb_SJ\", \"nn\", \"nn_NO\", \"nn_NO_#Latn\", \"no\", \"no_NO\", \"no_NO_NY\",\n-                \"no_NO_#Latn\"),\n-            \"\",\n-        },\n-\n-        \/\/ Hebrew\/Indonesian\/Yiddish\n-        {\n-            \"--include-locales=he,id,yi\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_he.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_id.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_yi.class\"),\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n-            List.of(\n-                \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"id\", \"id_ID\",\n-                \"id_ID_#Latn\", \"he\", \"he_IL\", \"he_IL_#Hebr\", \"yi\", \"yi_UA\", \"yi_UA_#Hebr\"),\n-            \"\",\n-        },\n-\n-        \/\/ Langtag including extensions. Should be ignored.\n-        {\n-            \"--include-locales=en,ja-u-nu-thai\",\n-            \"jdk.localedata\",\n-            List.of(\n-                \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\"),\n-            List.of(),\n-            List.of(\n-                \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AE\", \"en_AG\", \"en_AI\", \"en_AS\", \"en_AT\",\n-                \"en_AU\", \"en_BB\", \"en_BE\", \"en_BI\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n-                \"en_CA\", \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n-                \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n-                \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GU\", \"en_GY\",\n-                \"en_HK\", \"en_ID\", \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\",\n-                \"en_KE\", \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\",\n-                \"en_MH\", \"en_MO\", \"en_MP\", \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\",\n-                \"en_NA\", \"en_NF\", \"en_NG\", \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\",\n-                \"en_PH\", \"en_PK\", \"en_PN\", \"en_PR\", \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\",\n-                \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\", \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\",\n-                \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\", \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\",\n-                \"en_UM\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VI\", \"en_VU\",\n-                \"en_WS\", \"en_ZA\", \"en_ZM\", \"en_ZW\"),\n-            \"\",\n-        },\n-\n-        \/\/ Error case: No matching locales\n-        {\n-            \"--include-locales=xyz\",\n-            \"jdk.localedata\",\n-            null,\n-            null,\n-            null,\n-            new PluginException(String.format(\n-                PluginsResourceBundle.getMessage(\"include-locales.nomatchinglocales\"), \"xyz\"))\n-                .getMessage(),\n-        },\n-\n-        \/\/ Error case: Invalid argument\n-        {\n-            \"--include-locales=en,zh_HK\",\n-            \"jdk.localedata\",\n-            null,\n-            null,\n-            null,\n-            new PluginException(String.format(\n-                PluginsResourceBundle.getMessage(\"include-locales.invalidtag\"), \"zh_hk\"))\n-                .getMessage(),\n-        },\n-\n-        \/\/ Error case: jdk.localedata is not added\n-        {\n-            \"--include-locales=en-US\",\n-            \"java.base\",\n-            null,\n-            null,\n-            null,\n-            new PluginException(\n-                PluginsResourceBundle.getMessage(\"include-locales.localedatanotfound\"))\n-                .getMessage(),\n-        },\n-    };\n-\n-    public static void main(String[] args) throws Exception {\n+\n+    \/\/ Test data should include:\n+    \/\/  - --include-locales command line option\n+    \/\/  - --add-modules command line option values\n+    \/\/  - List of required resources in the result image\n+    \/\/  - List of resources that should not exist in the result image\n+    \/\/  - List of available locales in the result image\n+    \/\/  - Error message\n+    private static Stream<Arguments> testData() {\n+        return Stream.of(\n+            \/\/ without --include-locales option: should include all locales\n+            Arguments.of(\n+                \"\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(),\n+                Arrays.stream(Locale.getAvailableLocales())\n+                        \/\/ \"(root)\" for Locale.ROOT rather than \"\"\n+                        .map(loc -> loc.equals(Locale.ROOT) ? \"(root)\" : loc.toString())\n+                        .collect(Collectors.toList()),\n+                \"\"),\n+\n+            \/\/ Asterisk works exactly the same as above\n+            Arguments.of(\n+                \"--include-locales=*\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(),\n+                Arrays.stream(Locale.getAvailableLocales())\n+                        \/\/ \"(root)\" for Locale.ROOT rather than \"\"\n+                        .map(loc -> loc.equals(Locale.ROOT) ? \"(root)\" : loc.toString())\n+                        .collect(Collectors.toList()),\n+                \"\"),\n+\n+            \/\/ World English\/Spanish in Latin America\n+            Arguments.of(\n+                \"--include-locales=en-001,es-419\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_150.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_AT.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es_419.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_es_AR.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AG\", \"en_AI\",\n+                        \"en_AT\", \"en_AU\", \"en_BB\", \"en_BE\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n+                        \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n+                        \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n+                        \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GY\", \"en_HK\", \"en_ID\",\n+                        \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\", \"en_KE\",\n+                        \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\", \"en_MO\",\n+                        \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\", \"en_NA\", \"en_NF\", \"en_NG\",\n+                        \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\", \"en_PK\", \"en_PN\",\n+                        \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\", \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\",\n+                        \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\", \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\",\n+                        \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VU\", \"en_WS\",\n+                        \"en_ZA\", \"en_ZM\", \"en_ZW\", \"es\", \"es_419\", \"es_AR\", \"es_BO\", \"es_BR\", \"es_BZ\",\n+                        \"es_CL\", \"es_CO\", \"es_CR\", \"es_CU\", \"es_DO\", \"es_EC\", \"es_GT\", \"es_HN\",\n+                        \"es_MX\", \"es_NI\", \"es_PA\", \"es_PE\", \"es_PR\", \"es_PY\", \"es_SV\", \"es_US\",\n+                        \"es_UY\", \"es_VE\",\n+                        \/\/ CLDR's \"hi-Latn\" falls back to \"en-001\", \"hi-Latn\"\/\"hi-Latn-IN\" are added\n+                        \/\/ here. Since Locale.Matcher cannot handle such exceptional inheritance,\n+                        \/\/ allowing to include \"hi\"\/\"hi-IN\" resource files.\n+                        \"hi\", \"hi__#Latn\", \"hi_IN\", \"hi_IN_#Latn\"),\n+                \"\"),\n+\n+            \/\/ All English and Japanese locales\n+            Arguments.of(\n+                \"--include-locales=en,ja\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AE\", \"en_AG\", \"en_AI\", \"en_AS\", \"en_AT\",\n+                        \"en_AU\", \"en_BB\", \"en_BE\", \"en_BI\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n+                        \"en_CA\", \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n+                        \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n+                        \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GU\", \"en_GY\",\n+                        \"en_HK\", \"en_ID\", \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\",\n+                        \"en_KE\", \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\",\n+                        \"en_MH\", \"en_MO\", \"en_MP\", \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\",\n+                        \"en_NA\", \"en_NF\", \"en_NG\", \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\",\n+                        \"en_PH\", \"en_PK\", \"en_PN\", \"en_PR\", \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\",\n+                        \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\", \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\",\n+                        \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\", \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\",\n+                        \"en_UM\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VI\", \"en_VU\",\n+                        \"en_WS\", \"en_ZA\", \"en_ZM\", \"en_ZW\", \"ja\", \"ja_JP\", \"ja_JP_#Jpan\",\n+                        \"ja_JP_JP_#u-ca-japanese\"),\n+                \"\"),\n+\n+            \/\/ All locales in Austria\n+            Arguments.of(\n+                \"--include-locales=*-AT\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_de.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_de_AT.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_150.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_AT.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AT\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\",\n+                        \"de\", \"de_AT\"),\n+                \"\"),\n+\n+            \/\/ All locales in India\n+            Arguments.of(\n+                \"--include-locales=*-IN\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_IN.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorResources_th.class\",\n+                        \"\/jdk.localedata\/sun\/util\/resources\/cldr\/ext\/CalendarData_as_IN.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(\n+                        \"(root)\", \"as\", \"as_IN\", \"as_IN_#Beng\", \"bgc\", \"bgc_IN\", \"bgc_IN_#Deva\", \"bho\", \"bho_IN\", \"bho_IN_#Deva\",\n+                        \"bn\", \"bn_IN\", \"bo\", \"bo_IN\", \"brx\", \"brx_IN\", \"brx_IN_#Deva\", \"ccp\", \"ccp_IN\", \"doi\", \"doi_IN\",\n+                        \"doi_IN_#Deva\", \"en\", \"en_001\", \"en_IN\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"gu\", \"gu_IN\",\n+                        \"gu_IN_#Gujr\", \"hi\", \"hi__#Latn\", \"hi_IN\", \"hi_IN_#Deva\", \"hi_IN_#Latn\", \"kn\", \"kn_IN\", \"kn_IN_#Knda\",\n+                        \"kok\", \"kok__#Deva\", \"kok__#Latn\", \"kok_IN\", \"kok_IN_#Deva\", \"kok_IN_#Latn\", \"ks\", \"ks__#Arab\",\n+                        \"ks__#Deva\", \"ks_IN\", \"ks_IN_#Arab\", \"ks_IN_#Deva\", \"kxv\", \"kxv_IN\", \"kxv_IN_#Deva\", \"kxv_IN_#Latn\",\n+                        \"kxv_IN_#Orya\", \"kxv_IN_#Telu\", \"kxv__#Deva\", \"kxv__#Latn\", \"kxv__#Orya\", \"kxv__#Telu\",\n+                        \"mai\", \"mai_IN\", \"mai_IN_#Deva\", \"mni\", \"mni__#Beng\", \"mni_IN\", \"mni_IN_#Beng\", \"ml\", \"ml_IN\",\n+                        \"ml_IN_#Mlym\", \"mr\", \"mr_IN\", \"mr_IN_#Deva\", \"ne\", \"ne_IN\", \"or\", \"or_IN\", \"or_IN_#Orya\", \"pa\",\n+                        \"pa__#Guru\", \"pa_IN\", \"pa_IN_#Guru\", \"raj\", \"raj_IN\", \"raj_IN_#Deva\", \"sa\", \"sa_IN\", \"sa_IN_#Deva\",\n+                        \"sat\", \"sat__#Olck\", \"sat_IN\", \"sat_IN_#Olck\", \"sd\", \"sd__#Deva\", \"sd_IN\", \"sd_IN_#Deva\", \"ta\", \"ta_IN\",\n+                        \"ta_IN_#Taml\", \"te\", \"te_IN\", \"te_IN_#Telu\", \"ur_IN\", \"ur\", \"xnr\", \"xnr_IN\", \"xnr_IN_#Deva\"),\n+                \"\"),\n+\n+            \/\/ Thai\n+            Arguments.of(\n+                \"--include-locales=th\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorResources_th.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"th\", \"th_TH\",\n+                        \"th_TH_#Thai\", \"th_TH_TH_#u-nu-thai\"),\n+                \"\"),\n+\n+            \/\/ Hong Kong\n+            Arguments.of(\n+                \"--include-locales=zh-HK\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"zh\", \"zh__#Hans\", \"zh__#Hant\",\n+                        \"zh_HK\", \"zh_HK_#Hans\", \"zh_HK_#Hant\"),\n+                \"\"),\n+\n+            \/\/ Simplified Chinese\n+            Arguments.of(\n+                \"--include-locales=zh-Hans\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_zh.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"zh\", \"zh__#Latn\", \"zh__#Hans\", \"zh_CN\",\n+                        \"zh_CN_#Latn\", \"zh_CN_#Hans\", \"zh_HK\", \"zh_HK_#Hans\", \"zh_MO\", \"zh_MO_#Hans\", \"zh_MY_#Hans\", \"zh_SG\",\n+                        \"zh_SG_#Hans\"),\n+                \"\"),\n+\n+            \/\/ Norwegian\n+            Arguments.of(\n+                \"--include-locales=nb,nn,no\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_nb.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_nn.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_no.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"nb\", \"nb_NO\",\n+                        \"nb_NO_#Latn\", \"nb_SJ\", \"nn\", \"nn_NO\", \"nn_NO_#Latn\", \"no\", \"no_NO\", \"no_NO_NY\",\n+                        \"no_NO_#Latn\"),\n+                \"\"),\n+\n+            \/\/ Hebrew\/Indonesian\/Yiddish\n+            Arguments.of(\n+                \"--include-locales=he,id,yi\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_he.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_id.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_yi.class\"),\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/LineBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/thai_dict\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/WordBreakIteratorData_th\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/ext\/BreakIteratorInfo_th.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_ja.class\",\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_th.class\"),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"id\", \"id_ID\",\n+                        \"id_ID_#Latn\", \"he\", \"he_IL\", \"he_IL_#Hebr\", \"yi\", \"yi_UA\", \"yi_UA_#Hebr\"),\n+                \"\"),\n+\n+            \/\/ Langtag including extensions. Should be ignored.\n+            Arguments.of(\n+                \"--include-locales=en,ja-u-nu-thai\",\n+                \"jdk.localedata\",\n+                List.of(\n+                        \"\/jdk.localedata\/sun\/text\/resources\/cldr\/ext\/FormatData_en_001.class\"),\n+                List.of(),\n+                List.of(\n+                        \"(root)\", \"en\", \"en_001\", \"en_150\", \"en_AE\", \"en_AG\", \"en_AI\", \"en_AS\", \"en_AT\",\n+                        \"en_AU\", \"en_BB\", \"en_BE\", \"en_BI\", \"en_BM\", \"en_BS\", \"en_BW\", \"en_BZ\",\n+                        \"en_CA\", \"en_CC\", \"en_CH\", \"en_CK\", \"en_CM\", \"en_CX\", \"en_CY\", \"en_DE\",\n+                        \"en_DG\", \"en_DK\", \"en_DM\", \"en_ER\", \"en_FI\", \"en_FJ\", \"en_FK\", \"en_FM\",\n+                        \"en_GB\", \"en_GD\", \"en_GG\", \"en_GH\", \"en_GI\", \"en_GM\", \"en_GU\", \"en_GY\",\n+                        \"en_HK\", \"en_ID\", \"en_IE\", \"en_IL\", \"en_IM\", \"en_IN\", \"en_IO\", \"en_JE\", \"en_JM\",\n+                        \"en_KE\", \"en_KI\", \"en_KN\", \"en_KY\", \"en_LC\", \"en_LR\", \"en_LS\", \"en_MG\",\n+                        \"en_MH\", \"en_MO\", \"en_MP\", \"en_MS\", \"en_MT\", \"en_MU\", \"en_MV\", \"en_MW\", \"en_MY\",\n+                        \"en_NA\", \"en_NF\", \"en_NG\", \"en_NL\", \"en_NR\", \"en_NU\", \"en_NZ\", \"en_PG\",\n+                        \"en_PH\", \"en_PK\", \"en_PN\", \"en_PR\", \"en_PW\", \"en_RW\", \"en_SB\", \"en_SC\",\n+                        \"en_SD\", \"en_SE\", \"en_SG\", \"en_SH\", \"en_SI\", \"en_SL\", \"en_SS\", \"en_SX\",\n+                        \"en_SZ\", \"en_TC\", \"en_TK\", \"en_TO\", \"en_TT\", \"en_TV\", \"en_TZ\", \"en_UG\",\n+                        \"en_UM\", \"en_US\", \"en_US_#Latn\", \"en_US_POSIX\", \"en_VC\", \"en_VG\", \"en_VI\", \"en_VU\",\n+                        \"en_WS\", \"en_ZA\", \"en_ZM\", \"en_ZW\"),\n+                \"\"),\n+\n+            \/\/ Error case: No matching locales\n+            Arguments.of(\n+                \"--include-locales=xyz\",\n+                \"jdk.localedata\",\n+                null,\n+                null,\n+                null,\n+                new PluginException(String.format(\n+                        PluginsResourceBundle.getMessage(\"include-locales.nomatchinglocales\"), \"xyz\"))\n+                        .getMessage()),\n+\n+            \/\/ Error case: Invalid argument\n+            Arguments.of(\n+                \"--include-locales=en,zh_HK\",\n+                \"jdk.localedata\",\n+                null,\n+                null,\n+                null,\n+                new PluginException(String.format(\n+                        PluginsResourceBundle.getMessage(\"include-locales.invalidtag\"), \"zh_hk\"))\n+                        .getMessage()),\n+\n+            \/\/ Error case: jdk.localedata is not added\n+            Arguments.of(\n+                \"--include-locales=en-US\",\n+                \"java.base\",\n+                null,\n+                null,\n+                null,\n+                new PluginException(\n+                        PluginsResourceBundle.getMessage(\"include-locales.localedatanotfound\"))\n+                        .getMessage())\n+        );\n+    }\n+\n+    @BeforeAll\n+    public static void setup() throws IOException {\n@@ -427,1 +417,1 @@\n-            throw new RuntimeException(\"Helper could not be initialized\");\n+            fail(\"Helper could not be initialized\");\n@@ -429,0 +419,1 @@\n+    }\n@@ -430,34 +421,19 @@\n-        for (Object[] data : testData) {\n-            \/\/ create image for each test data\n-            Result result;\n-            if (data[INCLUDE_LOCALES_OPTION].toString().isEmpty()) {\n-                System.out.println(\"Invoking jlink with no --include-locales option\");\n-                result = JImageGenerator.getJLinkTask()\n-                    .output(helper.createNewImageDir(moduleName))\n-                    .addMods((String) data[ADDMODS_OPTION])\n-                    .call();\n-            } else {\n-                System.out.println(\"Invoking jlink with \\\"\" + data[INCLUDE_LOCALES_OPTION] + \"\\\"\");\n-                result = JImageGenerator.getJLinkTask()\n-                    .output(helper.createNewImageDir(moduleName))\n-                    .addMods((String) data[ADDMODS_OPTION])\n-                    .option((String) data[INCLUDE_LOCALES_OPTION])\n-                    .call();\n-            }\n-\n-            String errorMsg = (String) data[ERROR_MESSAGE];\n-            if (errorMsg.isEmpty()) {\n-                Path image = result.assertSuccess();\n-\n-                \/\/ test locale data entries\n-                testLocaleDataEntries(image,\n-                    (List<String>) data[EXPECTED_LOCATIONS],\n-                    (List<String>) data[UNEXPECTED_PATHS]);\n-\n-                \/\/ test available locales\n-                testAvailableLocales(image, (List<String>) data[AVAILABLE_LOCALES]);\n-            } else {\n-                result.assertFailure(new TaskHelper(TaskHelper.JLINK_BUNDLE)\n-                    .getMessage(\"error.prefix\") + \" \" +errorMsg);\n-                System.out.println(\"\\tExpected failure: \" + result.getMessage());\n-            }\n+    @ParameterizedTest\n+    @MethodSource(\"testData\")\n+    public void launch(String optIncludeLocales, String optAddModules, List<String> requiredRes,\n+                       List<String> shouldNotExistRes, List<String> availableLocs, String errorMsg) throws Exception {\n+        \/\/ create image for each test data\n+        Result result;\n+        if (optIncludeLocales.isEmpty()) {\n+            System.out.println(\"Invoking jlink with no --include-locales option\");\n+            result = JImageGenerator.getJLinkTask()\n+                .output(helper.createNewImageDir(MODULE_NAME))\n+                .addMods(optAddModules)\n+                .call();\n+        } else {\n+            System.out.println(\"Invoking jlink with \\\"\" + optIncludeLocales + \"\\\"\");\n+            result = JImageGenerator.getJLinkTask()\n+                .output(helper.createNewImageDir(MODULE_NAME))\n+                .addMods(optAddModules)\n+                .option(optIncludeLocales)\n+                .call();\n@@ -466,2 +442,12 @@\n-        if (errors > 0) {\n-            throw new RuntimeException(\"Test failed\");\n+        if (errorMsg.isEmpty()) {\n+            Path image = result.assertSuccess();\n+\n+            \/\/ test locale data entries\n+            testLocaleDataEntries(image, requiredRes, shouldNotExistRes);\n+\n+            \/\/ test available locales\n+            testAvailableLocales(image, availableLocs);\n+        } else {\n+            result.assertFailure(new TaskHelper(TaskHelper.JLINK_BUNDLE)\n+                .getMessage(\"error.prefix\") + \" \" +errorMsg);\n+            System.out.println(\"\\tExpected failure: \" + result.getMessage());\n@@ -479,3 +465,1 @@\n-            System.out.println(\"\\tFailed with: \" + e);\n-            e.printStackTrace();\n-            errors++;\n+            fail(\"\\tFailed with: \" + e);\n@@ -487,2 +471,1 @@\n-        Path launcher = image.resolve(\"bin\/java\" +\n-            (System.getProperty(\"os.name\").startsWith(\"Windows\") ? \".exe\" : \"\"));\n+        Path launcher = image.resolve(\"bin\/java\" + (Platform.isWindows() ? \".exe\" : \"\"));\n@@ -503,2 +486,1 @@\n-            System.out.println(\"\\tExit \" + status + \"\\t\" + command);\n-            errors++;\n+            fail(\"\\tExit \" + status + \"\\t\" + command);\n","filename":"test\/jdk\/tools\/jlink\/plugins\/IncludeLocalesPluginTest.java","additions":383,"deletions":401,"binary":false,"changes":784,"status":"modified"}]}