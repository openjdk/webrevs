{"files":[{"patch":"@@ -3127,10 +3127,0 @@\n-\n-void C2_MacroAssembler::load_narrow_klass_compact_c2(Register dst, Address src) {\n-  \/\/ The incoming address is pointing into obj-start + klass_offset_in_bytes. We need to extract\n-  \/\/ obj-start, so that we can load from the object's mark-word instead. Usually the address\n-  \/\/ comes as obj-start in obj and klass_offset_in_bytes in disp.\n-  assert(UseCompactObjectHeaders, \"must\");\n-  int offset = oopDesc::mark_offset_in_bytes() - oopDesc::klass_offset_in_bytes();\n-  ld(dst, Address(src.base(), src.offset() + offset));\n-  srli(dst, dst, markWord::klass_shift);\n-}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -284,2 +284,0 @@\n-  void load_narrow_klass_compact_c2(Register dst, Address src);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4817,1 +4817,4 @@\n-  format %{ \"load_narrow_klass_compact $dst, $mem\\t# compressed class ptr, #@loadNKlassCompactHeaders\" %}\n+  format %{\n+    \"lwu  $dst, $mem\\t# compressed klass ptr, shifted\\n\\t\"\n+    \"srli $dst, $dst, markWord::klass_shift_at_offset\"\n+  %}\n@@ -4820,1 +4823,2 @@\n-    __ load_narrow_klass_compact_c2(as_Register($dst$$reg), Address(as_Register($mem$$base), $mem$$disp));\n+    __ lwu(as_Register($dst$$reg), Address(as_Register($mem$$base), $mem$$disp));\n+    __ srli(as_Register($dst$$reg), as_Register($dst$$reg), (unsigned) markWord::klass_shift_at_offset);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}