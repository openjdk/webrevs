{"files":[{"patch":"@@ -134,3 +134,1 @@\n-        OutputStream out = new FileOutputStream(jar);\n-        try {\n-            JarOutputStream jos = new JarOutputStream(out);\n+        try (JarOutputStream jos = new JarOutputStream(new FileOutputStream(jar))) {\n@@ -141,3 +139,0 @@\n-            jos.close();\n-        } finally {\n-            out.close();\n","filename":"test\/langtools\/tools\/javac\/4241573\/T4241573.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,4 +94,3 @@\n-        OutputStream out = new BufferedOutputStream(new FileOutputStream(jar));\n-        JarOutputStream j = new JarOutputStream(out, m);\n-        add(j, base, files);\n-        j.close();\n+        try (JarOutputStream j = new JarOutputStream(new BufferedOutputStream(new FileOutputStream(jar)), m)) {\n+            add(j, base, files);\n+        }\n@@ -127,7 +126,9 @@\n-        BufferedInputStream in = new BufferedInputStream(new FileInputStream(f));\n-        int offset = 0;\n-        while (offset < buf.length) {\n-            int n = in.read(buf, offset, buf.length - offset);\n-            if (n < 0)\n-                throw new EOFException();\n-            offset += n;\n+        try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(f))) {\n+            int offset = 0;\n+            while (offset < buf.length) {\n+                int n = in.read(buf, offset, buf.length - offset);\n+                if (n < 0)\n+                    throw new EOFException();\n+                offset += n;\n+            }\n+            return buf;\n@@ -135,1 +136,0 @@\n-        return buf;\n","filename":"test\/langtools\/tools\/javac\/6400872\/T6400872.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -67,4 +67,1 @@\n-        FileOutputStream fos = null;\n-        try {\n-            fos = new FileOutputStream(TEST_JAVA);\n-            PrintStream ps = new PrintStream(fos);\n+        try (PrintStream ps = new PrintStream(new FileOutputStream(TEST_JAVA))) {\n@@ -72,2 +69,0 @@\n-        } finally {\n-            fos.close();\n@@ -88,13 +83,3 @@\n-        RandomAccessFile raf = null;\n-        FileChannel wfc = null;\n-\n-        FileInputStream fis = null;\n-        FileChannel rfc = null;\n-\n-        try {\n-            raf =  new RandomAccessFile(f, \"rw\");\n-            wfc = raf.getChannel();\n-\n-            fis = new FileInputStream(tfile);\n-            rfc = fis.getChannel();\n-\n+        try (\n+          FileChannel wfc = new RandomAccessFile(f, \"rw\").getChannel();\n+          FileChannel rfc = new FileInputStream(tfile).getChannel()) {\n@@ -106,5 +91,0 @@\n-        } finally {\n-            wfc.close();\n-            raf.close();\n-            rfc.close();\n-            fis.close();\n@@ -116,4 +96,1 @@\n-        FileOutputStream fos = null;\n-        try {\n-            fos = new FileOutputStream(TEST2_JAVA);\n-            PrintStream ps = new PrintStream(fos);\n+        try (PrintStream ps = new PrintStream(new FileOutputStream(TEST2_JAVA))) {\n@@ -123,2 +100,0 @@\n-        } finally {\n-            fos.close();\n","filename":"test\/langtools\/tools\/javac\/6567415\/T6567415.java","additions":5,"deletions":30,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.io.InputStream;\n@@ -113,1 +114,4 @@\n-                byte[] data = file.openInputStream().readAllBytes();\n+                byte[] data;\n+                try (InputStream input = file.openInputStream()) {\n+                    data = input.readAllBytes();\n+                }\n","filename":"test\/langtools\/tools\/javac\/ConditionalExpressionResolvePending.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -105,2 +105,1 @@\n-        InputStream in = fo.openInputStream();\n-        try {\n+        try (InputStream in = fo.openInputStream()) {\n@@ -122,2 +121,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/NoStringToLower.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,4 +109,3 @@\n-        OutputStream out = new BufferedOutputStream(new FileOutputStream(jar));\n-        JarOutputStream j = new JarOutputStream(out, m);\n-        add(j, base, files);\n-        j.close();\n+        try (JarOutputStream j = new JarOutputStream(new BufferedOutputStream(new FileOutputStream(jar)), m)) {\n+            add(j, base, files);\n+        }\n@@ -147,7 +146,9 @@\n-        BufferedInputStream in = new BufferedInputStream(new FileInputStream(f));\n-        int offset = 0;\n-        while (offset < buf.length) {\n-            int n = in.read(buf, offset, buf.length - offset);\n-            if (n < 0)\n-                throw new EOFException();\n-            offset += n;\n+        try (BufferedInputStream in = new BufferedInputStream(new FileInputStream(f))) {\n+            int offset = 0;\n+            while (offset < buf.length) {\n+                int n = in.read(buf, offset, buf.length - offset);\n+                if (n < 0)\n+                    throw new EOFException();\n+                offset += n;\n+            }\n+            return buf;\n@@ -155,1 +156,0 @@\n-        return buf;\n","filename":"test\/langtools\/tools\/javac\/Paths\/6638501\/JarFromManifestFailure.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -66,3 +66,3 @@\n-        PrintStream s = new PrintStream(new FileOutputStream(f));\n-        s.println(contents);\n-        s.close();\n+        try (PrintStream s = new PrintStream(new FileOutputStream(f))) {\n+            s.println(contents);\n+        }\n","filename":"test\/langtools\/tools\/javac\/Paths\/TestCompileJARInClassPath.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,2 +87,1 @@\n-                    try {\n-                        Writer out = filer.createSourceFile(te.getSimpleName() + \"Wrapper\").openWriter();\n+                    try (Writer out = filer.createSourceFile(te.getSimpleName() + \"Wrapper\").openWriter()) {\n@@ -90,1 +89,0 @@\n-                        out.close();\n","filename":"test\/langtools\/tools\/javac\/T6403466.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,7 +81,2 @@\n-            try {\n-                Writer w = processingEnv.getFiler().createSourceFile(\"p.Generated\").openWriter();\n-                try {\n-                    w.write(\"package p; public class Generated { public static void m() { } }\");\n-                } finally {\n-                    w.close();\n-                }\n+            try (Writer w = processingEnv.getFiler().createSourceFile(\"p.Generated\").openWriter()) {\n+                w.write(\"package p; public class Generated { public static void m() { } }\");\n","filename":"test\/langtools\/tools\/javac\/T7159016.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.io.InputStream;\n@@ -181,1 +182,5 @@\n-                analyzeClassFile(ClassFile.read(file.openInputStream()));\n+                ClassFile classFile;\n+                try (InputStream input = file.openInputStream()) {\n+                    classFile = ClassFile.read(input);\n+                }\n+                analyzeClassFile(classFile);\n","filename":"test\/langtools\/tools\/javac\/T8003967\/DetectMutableStaticFields.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -86,3 +86,3 @@\n-        FileOutputStream output  = new FileOutputStream(f);\n-        output.write(hexToByte(hexString));\n-        output.close();\n+        try (FileOutputStream output = new FileOutputStream(f)) {\n+            output.write(hexToByte(hexString));\n+        }\n","filename":"test\/langtools\/tools\/javac\/T8071847\/T8071847.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,2 +63,3 @@\n-        OutputStream outputStream = new FileOutputStream(file);\n-        outputStream.write(\"enum Foo {AA(10), BB, CC { void m() {} }; void m() {};}\".getBytes());\n+        try (OutputStream outputStream = new FileOutputStream(file)) {\n+            outputStream.write(\"enum Foo {AA(10), BB, CC { void m() {} }; void m() {};}\".getBytes());\n+        }\n@@ -70,2 +71,3 @@\n-        outputStream = new FileOutputStream(file);\n-        outputStream.write((obj.PrettyPrint((JCTree)thisTree)).getBytes());\n+        try (OutputStream outputStream = new FileOutputStream(file)) {\n+            outputStream.write((obj.PrettyPrint((JCTree)thisTree)).getBytes());\n+        }\n","filename":"test\/langtools\/tools\/javac\/T8152616.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,3 +61,1 @@\n-        OutputStream out = new FileOutputStream(f);\n-        try {\n-            JarOutputStream jar = new JarOutputStream(out);\n+        try (JarOutputStream jar = new JarOutputStream(new FileOutputStream(f))) {\n@@ -66,3 +64,0 @@\n-            jar.close();\n-        } finally {\n-            out.close();\n","filename":"test\/langtools\/tools\/javac\/api\/T6483788.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -117,2 +117,8 @@\n-            byte[] uriData = read(urlconn.getInputStream());\n-            byte[] foData = read(fo.openInputStream());\n+            byte[] uriData;\n+            byte[] foData;\n+            try (InputStream input = urlconn.getInputStream()) {\n+                uriData = read(input);\n+            }\n+            try (InputStream input = fo.openInputStream()) {\n+                foData = read(input);\n+            }\n@@ -177,3 +183,1 @@\n-        OutputStream out = new FileOutputStream(jar);\n-        try {\n-            JarOutputStream jos = new JarOutputStream(out);\n+        try (JarOutputStream jos = new JarOutputStream(new FileOutputStream(jar))) {\n@@ -184,3 +188,0 @@\n-            jos.close();\n-        } finally {\n-            out.close();\n","filename":"test\/langtools\/tools\/javac\/api\/T6877206.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.io.Reader;\n@@ -48,4 +49,4 @@\n-                try {\n-                    \/\/ 6427274: FileObject.openReader throws exception\n-                    \/\/ 6347778: getSource() returns null for notes\n-                    diagnostic.getSource().openReader(true).getClass();\n+                \/\/ 6427274: FileObject.openReader throws exception\n+                \/\/ 6347778: getSource() returns null for notes\n+                try (Reader reader = diagnostic.getSource().openReader(true)) {\n+                    reader.getClass();\n@@ -69,1 +70,1 @@\n-        fm.getFileForInput(StandardLocation.PLATFORM_CLASS_PATH,\n+        try (Reader reader = fm.getFileForInput(StandardLocation.PLATFORM_CLASS_PATH,\n@@ -71,1 +72,3 @@\n-                           \"Object.class\").openReader(true).getClass();\n+                           \"Object.class\").openReader(true)) {\n+            reader.getClass();\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/guide\/Test.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.InputStream;\n@@ -69,1 +70,4 @@\n-                    ClassFile classFile = ClassFile.read(file.openInputStream());\n+                    ClassFile classFile;\n+                    try (InputStream input = file.openInputStream()) {\n+                        classFile = ClassFile.read(input);\n+                    }\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/LineNumberTestBase.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.InputStream;\n@@ -87,1 +88,5 @@\n-            assertAttributePresent(ClassFile.read(classes.get(className).openInputStream()), fileName);\n+            ClassFile classFile;\n+            try (InputStream input = classes.get(className).openInputStream()) {\n+                classFile = ClassFile.read(input);\n+            }\n+            assertAttributePresent(classFile, fileName);\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/SourceFileTestBase.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -202,2 +202,1 @@\n-        DataInputStream in = new DataInputStream(new FileInputStream(f));\n-        try {\n+        try (DataInputStream in = new DataInputStream(new FileInputStream(f))) {\n@@ -205,2 +204,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/diags\/CheckExamples.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -492,2 +492,1 @@\n-        InputStream in = fo.openInputStream();\n-        try {\n+        try (InputStream in = fo.openInputStream()) {\n@@ -503,2 +502,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/diags\/CheckResourceKeys.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -432,2 +432,1 @@\n-        DataInputStream in = new DataInputStream(new FileInputStream(f));\n-        try {\n+        try (DataInputStream in = new DataInputStream(new FileInputStream(f))) {\n@@ -435,2 +434,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/diags\/Example.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -383,2 +383,1 @@\n-        DataInputStream in = new DataInputStream(new FileInputStream(f));\n-        try {\n+        try (DataInputStream in = new DataInputStream(new FileInputStream(f))) {\n@@ -386,2 +385,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/diags\/MessageInfo.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -264,2 +264,1 @@\n-            DataInputStream in = new DataInputStream(new FileInputStream(f));\n-            try {\n+            try (DataInputStream in = new DataInputStream(new FileInputStream(f))) {\n@@ -267,2 +266,0 @@\n-            } finally {\n-                in.close();\n","filename":"test\/langtools\/tools\/javac\/diags\/RunExamples.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"class Gen { }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"class Gen { }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcFileCreateLastRound\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n-                Writer out = fo1.openWriter();\n-                out.write(\"Hello World!\");\n-                out.close();\n+                try (Writer out = fo1.openWriter()) {\n+                    out.write(\"Hello World!\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcFileReopening\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n-                Writer out = fo1.openWriter();\n-                out.write(\"Hello World!\");\n-                out.close();\n+                try (Writer out = fo1.openWriter()) {\n+                    out.write(\"Hello World!\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcIllegalFileName\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"class Gen { }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"class Gen { }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcTypeRecreate\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"class Gen { }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"class Gen { }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcUseImplicit\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"class Gen { }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"class Gen { }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProcUseProcOrImplicit\/processors\/AnnoProc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-            String expected = getExpected(htmlFo.openReader(true));\n+            String expected = getExpectedAndClose(htmlFo.openReader(true));\n@@ -242,1 +242,1 @@\n-                        expected = getExpected(jfo.openReader(true));\n+                        expected = getExpectedAndClose(jfo.openReader(true));\n@@ -300,1 +300,1 @@\n-            String expected = getExpected(otherFo.openReader(true));\n+            String expected = getExpectedAndClose(otherFo.openReader(true));\n@@ -326,2 +326,1 @@\n-    String getExpected(Reader inrdr) throws IOException {\n-        BufferedReader rdr = new BufferedReader(inrdr);\n+    String getExpectedAndClose(Reader inrdr) throws IOException {\n@@ -329,4 +328,6 @@\n-        String line = rdr.readLine();\n-        while (line != null) {\n-            lines.add(line);\n-            line = rdr.readLine();\n+        try (BufferedReader rdr = new BufferedReader(inrdr)) {\n+            String line = rdr.readLine();\n+            while (line != null) {\n+                lines.add(line);\n+                line = rdr.readLine();\n+            }\n","filename":"test\/langtools\/tools\/javac\/doctree\/dcapi\/DocCommentTreeApiTester.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -121,2 +121,1 @@\n-            try {\n-                Writer w = filer.createSourceFile(\"p.C\").openWriter();\n+            try (Writer w = filer.createSourceFile(\"p.C\").openWriter()) {\n@@ -124,1 +123,0 @@\n-                w.close();\n","filename":"test\/langtools\/tools\/javac\/file\/T7068437.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -154,3 +154,2 @@\n-            try {\n-                String body = \"package p; public class C { public static void \" + m + \"() {} }\";\n-                Writer w = filer.createSourceFile(\"p.C\").openWriter();\n+            String body = \"package p; public class C { public static void \" + m + \"() {} }\";\n+            try (Writer w = filer.createSourceFile(\"p.C\").openWriter()) {\n@@ -158,1 +157,0 @@\n-                w.close();\n","filename":"test\/langtools\/tools\/javac\/file\/T7068451.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -82,5 +82,1 @@\n-        FileInputStream fis = null;\n-        BufferedInputStream bis = null;\n-        try {\n-            fis = new FileInputStream(inFile);\n-            bis = new BufferedInputStream(fis);\n+        try (BufferedInputStream bis = new BufferedInputStream(new FileInputStream(inFile))) {\n@@ -92,3 +88,0 @@\n-        } finally {\n-            Utils.close(bis);\n-            Utils.close(fis);\n@@ -112,5 +105,3 @@\n-        ZipOutputStream zos = null;\n-        BufferedOutputStream bos = null;\n-        FileInputStream fis = null;\n-        try {\n-            zos = new ZipOutputStream(new FileOutputStream(jarFile));\n+        try (\n+          ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(jarFile));\n+          BufferedOutputStream bos = new BufferedOutputStream(zos)) {\n@@ -119,1 +110,0 @@\n-            bos = new BufferedOutputStream(zos);\n@@ -135,2 +125,3 @@\n-            fis = new FileInputStream(classFile);\n-            Utils.copyStream(fis, bos);\n+            try (FileInputStream fis = new FileInputStream(classFile)) {\n+                Utils.copyStream(fis, bos);\n+            }\n@@ -139,4 +130,0 @@\n-        } finally {\n-            Utils.close(bos);\n-            Utils.close(zos);\n-            Utils.close(fis);\n@@ -151,2 +138,0 @@\n-        ZipOutputStream zos = null;\n-        FileInputStream fis = null;\n@@ -155,2 +140,1 @@\n-        try {\n-            zos = new ZipOutputStream(new FileOutputStream(jarFile));\n+        try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(jarFile))) {\n@@ -173,2 +157,3 @@\n-            fis = new FileInputStream(classFile);\n-            Utils.copyStream(fis, zos);\n+            try (FileInputStream fis = new FileInputStream(classFile)) {\n+                Utils.copyStream(fis, zos);\n+            }\n@@ -176,5 +161,3 @@\n-            Utils.close(zos);\n-            Utils.close(fis);\n-        \/\/ deleted to prevent accidental linkage\n-        new File(Utils.getClassFileName(javaFile)).delete();\n-    }\n+            \/\/ deleted to prevent accidental linkage\n+            new File(Utils.getClassFileName(javaFile)).delete();\n+        }\n","filename":"test\/langtools\/tools\/javac\/file\/zip\/T6836682.java","additions":14,"deletions":31,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-        PrintStream ps = null;\n@@ -75,3 +74,1 @@\n-        try {\n-            FileOutputStream fos = new FileOutputStream(outFile);\n-            ps = new PrintStream(fos);\n+        try (PrintStream ps = new PrintStream(new FileOutputStream(outFile))) {\n@@ -79,2 +76,0 @@\n-        } finally {\n-            close(ps);\n@@ -119,11 +114,5 @@\n-        BufferedInputStream bis = null;\n-        BufferedOutputStream bos = null;\n-        FileOutputStream fos = null;\n-        try {\n-            fos = new FileOutputStream(output);\n-            bos = new BufferedOutputStream(fos);\n-            for (File x : files) {\n-                FileInputStream fis = new FileInputStream(x);\n-                bis = new BufferedInputStream(fis);\n-                copyStream(bis, bos);\n-                Utils.close(bis);\n+        try (BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(output))) {\n+            for (File file : files) {\n+                try (BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file))) {\n+                    copyStream(bis, bos);\n+                }\n@@ -131,4 +120,0 @@\n-        } finally {\n-            Utils.close(bis);\n-            Utils.close(bos);\n-            Utils.close(fos);\n","filename":"test\/langtools\/tools\/javac\/file\/zip\/Utils.java","additions":6,"deletions":21,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import java.io.InputStream;\n@@ -138,1 +139,4 @@\n-            ClassFile cf = ClassFile.read(output.openInputStream());\n+            ClassFile cf;\n+            try (InputStream input = output.openInputStream()) {\n+                cf = ClassFile.read(input);\n+            }\n","filename":"test\/langtools\/tools\/javac\/lambda\/deduplication\/DeduplicationTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,17 +78,5 @@\n-        FileInputStream fis = null;\n-        try {\n-            try {\n-                fis = new FileInputStream(file);\n-                byte[] bytes = new byte[fis.available()];\n-                int read = fis.read(bytes);\n-                if (read != bytes.length) {\n-                    return null;\n-                }\n-                if (preprocessors != null) {\n-                    for (ClassFilePreprocessor cfp : preprocessors) {\n-                        bytes = cfp.preprocess(name, bytes);\n-                    }\n-                 }\n-                return defineClass(name, bytes, 0, bytes.length);\n-            } finally {\n-                fis.close();\n+        try (FileInputStream fis = new FileInputStream(file)) {\n+            byte[] bytes = new byte[fis.available()];\n+            int read = fis.read(bytes);\n+            if (read != bytes.length) {\n+                return null;\n@@ -96,0 +84,6 @@\n+            if (preprocessors != null) {\n+                for (ClassFilePreprocessor cfp : preprocessors) {\n+                    bytes = cfp.preprocess(name, bytes);\n+                }\n+             }\n+            return defineClass(name, bytes, 0, bytes.length);\n","filename":"test\/langtools\/tools\/javac\/lambdaShapes\/org\/openjdk\/tests\/separate\/DirectedClassLoader.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -97,2 +97,1 @@\n-            Writer out = fo.openWriter();\n-            try {\n+            try (Writer out = fo.openWriter()) {\n@@ -100,2 +99,0 @@\n-            } finally {\n-                out.close();\n","filename":"test\/langtools\/tools\/javac\/options\/T7022337.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-        DataInputStream in = new DataInputStream(new FileInputStream(f));\n-        try {\n+        try (DataInputStream in = new DataInputStream(new FileInputStream(f))) {\n@@ -97,2 +96,0 @@\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/parser\/ExtraSemiTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.io.InputStream;\n@@ -407,1 +408,3 @@\n-                        cf = ClassFile.read(testClass.openInputStream());\n+                        try (InputStream input = testClass.openInputStream()) {\n+                            cf = ClassFile.read(input);\n+                        }\n","filename":"test\/langtools\/tools\/javac\/preview\/PreviewErrors.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,2 +49,1 @@\n-            try {\n-                Writer pw = filer.createSourceFile(\"HelloWorld\").openWriter();\n+            try (Writer pw = filer.createSourceFile(\"HelloWorld\").openWriter()) {\n@@ -59,1 +58,0 @@\n-                OutputStream os = filer.createClassFile(\"HelloWorldAP\").openOutputStream();\n@@ -61,5 +59,4 @@\n-                InputStream is = getClass().getResourceAsStream(\"HelloWorldAP.class\");\n-                copy(is, os);\n-                is.close();\n-                os.flush();\n-                os.close();\n+                try (OutputStream os = filer.createClassFile(\"HelloWorldAP\").openOutputStream();\n+                     InputStream is = getClass().getResourceAsStream(\"HelloWorldAP.class\")) {\n+                    copy(is, os);\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/6350124\/HelloWorldAP.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,5 +56,5 @@\n-                Writer sub = filer.createSourceFile(sup.getSimpleName() + \"_GENERATED\").openWriter();\n-                sub.write(String.format(\"class %s_GENERATED extends %s {}\",\n-                                        sup.getSimpleName(),\n-                                        ((TypeElement)sup).getQualifiedName()));\n-                sub.close();\n+                try (Writer sub = filer.createSourceFile(sup.getSimpleName() + \"_GENERATED\").openWriter()) {\n+                    sub.write(String.format(\"class %s_GENERATED extends %s {}\",\n+                                            sup.getSimpleName(),\n+                                            ((TypeElement)sup).getQualifiedName()));\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/6413690\/T6413690.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -81,3 +81,1 @@\n-        DataInputStream in = null;\n-        try {\n-            in = new DataInputStream(new FileInputStream(pkgInfo));\n+        try (DataInputStream in = new DataInputStream(new FileInputStream(pkgInfo))) {\n@@ -87,8 +85,0 @@\n-        } finally {\n-            if(in != null) {\n-                try {\n-                    in.close();\n-                } catch (IOException e) {\n-                    error(\"InputStream closing failed: \" + e);\n-                }\n-            }\n@@ -97,6 +87,3 @@\n-        OutputStream out = null;\n-        try {\n-            if (kind.equals(\"java\"))\n-                out = filer.createSourceFile(\"foo.package-info\").openOutputStream();\n-            else\n-                out = filer.createClassFile(\"foo.package-info\").openOutputStream();\n+        try (OutputStream out = kind.equals(\"java\") ?\n+              filer.createSourceFile(\"foo.package-info\").openOutputStream() :\n+              filer.createClassFile(\"foo.package-info\").openOutputStream()) {\n@@ -106,8 +93,0 @@\n-        } finally {\n-            if(out != null) {\n-                try {\n-                    out.close();\n-                } catch (IOException e) {\n-                    error(\"OutputStream closing failed: \" + e);\n-                }\n-            }\n","filename":"test\/langtools\/tools\/javac\/processing\/6499119\/ClassProcessor.java","additions":4,"deletions":25,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -58,2 +58,1 @@\n-                PrintWriter pw = new PrintWriter(filer.createSourceFile(\"foo.WrittenAfterProcessing\").openWriter());\n-                try {\n+                try (PrintWriter pw = new PrintWriter(filer.createSourceFile(\"foo.WrittenAfterProcessing\").openWriter())) {\n@@ -64,2 +63,0 @@\n-                 } finally {\n-                     pw.close();\n@@ -68,2 +65,1 @@\n-                pw = new PrintWriter(filer.createSourceFile(\"foo.package-info\").openWriter());\n-                try {\n+                try (PrintWriter pw = new PrintWriter(filer.createSourceFile(\"foo.package-info\").openWriter())) {\n@@ -72,2 +68,0 @@\n-                 } finally {\n-                     pw.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/6634138\/T6634138.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -87,2 +87,1 @@\n-        try {\n-            Writer out = filer.createSourceFile(\"Foo\").openWriter();\n+        try (Writer out = filer.createSourceFile(\"Foo\").openWriter()) {\n@@ -90,1 +89,0 @@\n-            out.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/T6439826.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -409,3 +409,1 @@\n-            DataInputStream in = null;\n-            try {\n-                in = new DataInputStream(new FileInputStream(file));\n+            try (DataInputStream in = new DataInputStream(new FileInputStream(file))) {\n@@ -415,8 +413,0 @@\n-            } finally {\n-                if (in != null) {\n-                    try {\n-                        in.close();\n-                    } catch (IOException e) {\n-                        error(\"Error closing file: \" + e);\n-                    }\n-                }\n@@ -429,3 +419,1 @@\n-            OutputStream out = null;\n-            try {\n-                out = file.openOutputStream();\n+            try (OutputStream out = file.openOutputStream()) {\n@@ -435,8 +423,0 @@\n-            } finally {\n-                if (out != null) {\n-                    try {\n-                        out.close();\n-                    } catch (IOException e) {\n-                        error(\"Error closing file: \" + e);\n-                    }\n-                }\n","filename":"test\/langtools\/tools\/javac\/processing\/T6920317.java","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -325,2 +325,1 @@\n-            Writer out = fo.openWriter();\n-            try {\n+            try (Writer out = fo.openWriter()) {\n@@ -331,2 +330,0 @@\n-            } finally {\n-                out.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/TestWarnErrorCount.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -235,3 +235,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(text);\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(text);\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestSuppression.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,4 +68,4 @@\n-                    PrintWriter pw =\n-                        new PrintWriter(filer.createResource(CLASS_OUTPUT, PKG, RESOURCE_NAME).openWriter());\n-                    pw.print(CONTENTS);\n-                    pw.close();\n+                    try (PrintWriter pw =\n+                        new PrintWriter(filer.createResource(CLASS_OUTPUT, PKG, RESOURCE_NAME).openWriter())) {\n+                        pw.print(CONTENTS);\n+                    }\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestGetResource.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"class LastRound { }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"class LastRound { }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestLastRound.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-            Writer out = fo.openWriter();\n-            try {\n+            try (Writer out = fo.openWriter()) {\n@@ -86,2 +85,0 @@\n-            } finally {\n-                out.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/Generator.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -79,3 +79,2 @@\n-            try {\n-                \/\/ Force another round with a new context\n-                PrintWriter pw = new PrintWriter(filer.createSourceFile(\"Foo\").openWriter());\n+            \/\/ Force another round with a new context\n+            try (PrintWriter pw = new PrintWriter(filer.createSourceFile(\"Foo\").openWriter())) {\n@@ -83,1 +82,0 @@\n-                pw.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestNames.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,11 +68,9 @@\n-            try {\n-                PrintWriter pw = new PrintWriter(filer.createSourceFile(\"ConstantTest\").openWriter());\n-                try {\n-                    Boolean[]   booleans = {true, false};\n-                    Byte[]      bytes    = {Byte.MIN_VALUE,    -1,  0, 1,  Byte.MAX_VALUE};\n-                    Short[]     shorts   = {Short.MIN_VALUE,   -1,  0, 1,  Short.MAX_VALUE};\n-                    Integer[]   ints     = {Integer.MIN_VALUE, -1,  0, 1,  Integer.MAX_VALUE};\n-                    Long[]      longs    = {Long.MIN_VALUE,    -1L, 0L,1L, Long.MAX_VALUE};\n-                    Character[] chars    = {Character.MIN_VALUE, ' ', '\\t', 'a', 'b', 'c', '~', Character.MAX_VALUE};\n-                    Float[]     floats   = {Float.NaN,  Float.NEGATIVE_INFINITY,  -1.0f, -0.0f, 0.0f, 1.0f, Float.POSITIVE_INFINITY};\n-                    Double[]    doubles  = {Double.NaN, Double.NEGATIVE_INFINITY, -1.0,  -0.0,  0.0,  1.0,  Double.POSITIVE_INFINITY};\n+            try (PrintWriter pw = new PrintWriter(filer.createSourceFile(\"ConstantTest\").openWriter())) {\n+                Boolean[]   booleans = {true, false};\n+                Byte[]      bytes    = {Byte.MIN_VALUE,    -1,  0, 1,  Byte.MAX_VALUE};\n+                Short[]     shorts   = {Short.MIN_VALUE,   -1,  0, 1,  Short.MAX_VALUE};\n+                Integer[]   ints     = {Integer.MIN_VALUE, -1,  0, 1,  Integer.MAX_VALUE};\n+                Long[]      longs    = {Long.MIN_VALUE,    -1L, 0L,1L, Long.MAX_VALUE};\n+                Character[] chars    = {Character.MIN_VALUE, ' ', '\\t', 'a', 'b', 'c', '~', Character.MAX_VALUE};\n+                Float[]     floats   = {Float.NaN,  Float.NEGATIVE_INFINITY,  -1.0f, -0.0f, 0.0f, 1.0f, Float.POSITIVE_INFINITY};\n+                Double[]    doubles  = {Double.NaN, Double.NEGATIVE_INFINITY, -1.0,  -0.0,  0.0,  1.0,  Double.POSITIVE_INFINITY};\n@@ -80,21 +78,18 @@\n-                    pw.println(\"class ConstantTest {\");\n-                    pw.println(String.format(\"  private static boolean[] booleans = {%s};\",\n-                                             printConstants(booleans)));\n-                    pw.println(String.format(\"  private static byte[] bytes = {%s};\",\n-                                             printConstants(bytes)));\n-                    pw.println(String.format(\"  private static short[] shorts = {%s};\",\n-                                             printConstants(shorts)));\n-                    pw.println(String.format(\"  private static int[] ints = {%s};\",\n-                                             printConstants(ints)));\n-                    pw.println(String.format(\"  private static long[] longs = {%s};\",\n-                                             printConstants(longs)));\n-                    pw.println(String.format(\"  private static char[] chars = {%s};\",\n-                                             printConstants(chars)));\n-                    pw.println(String.format(\"  private static float[] floats = {%s};\",\n-                                             printConstants(floats)));\n-                    pw.println(String.format(\"  private static double[] doubles = {%s};\",\n-                                             printConstants(doubles)));\n-                    pw.println(\"}\");\n-                } finally {\n-                    pw.close();\n-                }\n+                pw.println(\"class ConstantTest {\");\n+                pw.println(String.format(\"  private static boolean[] booleans = {%s};\",\n+                                         printConstants(booleans)));\n+                pw.println(String.format(\"  private static byte[] bytes = {%s};\",\n+                                         printConstants(bytes)));\n+                pw.println(String.format(\"  private static short[] shorts = {%s};\",\n+                                         printConstants(shorts)));\n+                pw.println(String.format(\"  private static int[] ints = {%s};\",\n+                                         printConstants(ints)));\n+                pw.println(String.format(\"  private static long[] longs = {%s};\",\n+                                         printConstants(longs)));\n+                pw.println(String.format(\"  private static char[] chars = {%s};\",\n+                                         printConstants(chars)));\n+                pw.println(String.format(\"  private static float[] floats = {%s};\",\n+                                         printConstants(floats)));\n+                pw.println(String.format(\"  private static double[] doubles = {%s};\",\n+                                         printConstants(doubles)));\n+                pw.println(\"}\");\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetConstantExpression.java","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -192,2 +192,1 @@\n-                Writer out = fo.openWriter();\n-                try {\n+                try (Writer out = fo.openWriter()) {\n@@ -195,2 +194,0 @@\n-                } finally {\n-                    out.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/doccomments\/TestDocComments.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -60,9 +60,2 @@\n-\n-        \/\/ avoid try-with-resources so test can be run on older builds\n-        try {\n-            Writer out = filer.createSourceFile(name).openWriter();\n-            try {\n-                out.write(text);\n-            } finally {\n-                out.close();\n-            }\n+        try (Writer out = filer.createSourceFile(name).openWriter()) {\n+            out.write(text);\n","filename":"test\/langtools\/tools\/javac\/processing\/options\/testPrintProcessorInfo\/Test.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -94,1 +94,0 @@\n-            out.close();\n","filename":"test\/langtools\/tools\/javac\/processing\/rounds\/BaseClassesNotReRead.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,3 +50,3 @@\n-                Writer out = fo.openWriter();\n-                out.write(\"import java.util.*; class Gen { List l; }\");\n-                out.close();\n+                try (Writer out = fo.openWriter()) {\n+                    out.write(\"import java.util.*; class Gen { List l; }\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/werror\/WErrorGen.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n-        PrintStream s = new PrintStream(new FileOutputStream(f));\n-        s.println(contents);\n-        s.close();\n+        try (PrintStream s = new PrintStream(new FileOutputStream(f))) {\n+            s.println(contents);\n+        }\n","filename":"test\/langtools\/tools\/javac\/sealed\/ValidateJarWithSealedAndRecord.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.io.InputStream;\n@@ -114,1 +115,4 @@\n-                byte[] data = file.openInputStream().readAllBytes();\n+                byte[] data;\n+                try (InputStream input = file.openInputStream()) {\n+                    data = input.readAllBytes();\n+                }\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/SwitchExpressionNoValue.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -123,2 +123,1 @@\n-            Writer out = fo.openWriter();\n-            try {\n+            try (Writer out = fo.openWriter()) {\n@@ -126,2 +125,0 @@\n-            } finally {\n-                out.close();\n","filename":"test\/langtools\/tools\/javac\/tree\/TreePosRoundsTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}