{"files":[{"patch":"@@ -44,4 +44,1 @@\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.nio.file.StandardOpenOption;\n+import java.nio.file.*;\n@@ -51,0 +48,3 @@\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+import java.util.zip.ZipInputStream;\n@@ -54,0 +54,1 @@\n+import javax.swing.filechooser.FileNameExtensionFilter;\n@@ -69,0 +70,3 @@\n+import java.nio.channels.Channels;\n+import java.nio.channels.ReadableByteChannel;\n+\n@@ -79,11 +83,1 @@\n-    private static final FileFilter xmlFileFilter = new FileFilter() {\n-        @Override\n-        public boolean accept(File f) {\n-            return f.getName().toLowerCase().endsWith(\".xml\") || f.isDirectory();\n-        }\n-\n-        @Override\n-        public String getDescription() {\n-            return \"Graph files (*.xml)\";\n-        }\n-    };\n+    private static final FileFilter graphFileFilter = new FileNameExtensionFilter(\"Graph files (*.xml, *.igv)\", \"xml\", \"igv\");\n@@ -164,2 +158,20 @@\n-        try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n-            Printer.exportGraphDocument(writer, doc, saveContexts);\n+        if (path.endsWith(\".igv\")) {\n+            File zipFile = new File(path);\n+            String fileName = zipFile.getName();\n+            try (FileOutputStream fos = new FileOutputStream(zipFile);\n+                 ZipOutputStream zos = new ZipOutputStream(fos);\n+                 Writer writer = new OutputStreamWriter(zos)) {\n+\n+                \/\/ Replace the '.igv' extension with '.xml's\n+                String zipEntryName = fileName.substring(0, fileName.length() - 4) + \".xml\";\n+                ZipEntry zipEntry = new ZipEntry(zipEntryName);\n+                zos.putNextEntry(zipEntry);\n+\n+                Printer.exportGraphDocument(writer, doc, saveContexts);\n+\n+                zos.closeEntry();\n+            }\n+        } else {\n+            try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n+                Printer.exportGraphDocument(writer, doc, saveContexts);\n+            }\n@@ -361,1 +373,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -406,1 +418,14 @@\n-        JFileChooser fc = new JFileChooser();\n+        JFileChooser fc = new JFileChooser() {\n+            @Override\n+            public void approveSelection() {\n+                File selectedFile = getSelectedFile();\n+                if (selectedFile != null) {\n+                    String fileName = selectedFile.getName().toLowerCase();\n+                    if (!fileName.endsWith(\".xml\") && !fileName.endsWith(\".igv\")) {\n+                        JOptionPane.showMessageDialog(this, \"Please select a graph file with .xml or .igv extension.\", \"Invalid File\", JOptionPane.ERROR_MESSAGE);\n+                        return;\n+                    }\n+                }\n+                super.approveSelection();\n+            }\n+        };\n@@ -408,1 +433,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -435,1 +460,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -485,2 +510,2 @@\n-     * Loads a graph document from the given file path, updating progress via a ProgressHandle.\n-     * Parse the XML file, add the parsed document to the workspace, and load associated contexts if specified.\n+     * Loads a graph document from the specified path, either as an XML file or from a ZIP archive.\n+     * If loading the context is requested, it loads the context along with the document.\n@@ -493,8 +518,11 @@\n-        final FileChannel channel;\n-        final long start;\n-        try {\n-            channel = FileChannel.open(file.toPath(), StandardOpenOption.READ);\n-            start = channel.size();\n-        } catch (Exception ex) {\n-            Exceptions.printStackTrace(ex);\n-            return;\n+        if (file.getName().endsWith(\".xml\")) {\n+            try (FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.READ)) {\n+                loadFile(channel, file, loadContext);\n+            }\n+        } else if (file.getName().endsWith(\".igv\")) {\n+            try (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n+                ZipEntry entry = zis.getNextEntry();\n+                if (entry != null && entry.getName().endsWith(\".xml\")) {\n+                    loadFile(Channels.newChannel(zis), file, loadContext);\n+                }\n+            }\n@@ -502,0 +530,1 @@\n+    }\n@@ -503,0 +532,4 @@\n+    \/**\n+     * Loads an XML or ZIP document from the provided channel, while monitoring the progress of the operation.\n+     *\/\n+    private void loadFile(ReadableByteChannel channel,  File file, boolean loadContext) throws IOException {\n@@ -506,7 +539,10 @@\n-        ParseMonitor monitor = new ParseMonitor() {\n-            @Override\n-            public void updateProgress() {\n-                try {\n-                    int prog = (int) (WORK_UNITS * (double) channel.position() \/ (double) start);\n-                    handle.progress(prog);\n-                } catch (IOException ignored) {\n+        ParseMonitor monitor;\n+        if (channel instanceof FileChannel fileChannel) {\n+            final long start = fileChannel.size();\n+            monitor = new ParseMonitor() {\n+                @Override\n+                public void updateProgress() {\n+                    try {\n+                        int prog = (int) (WORK_UNITS * (double) fileChannel.position() \/ (double) start);\n+                        handle.progress(prog);\n+                    } catch (IOException ignored) {}\n@@ -514,1 +550,0 @@\n-            }\n@@ -516,6 +551,21 @@\n-            @Override\n-            public void setState(String state) {\n-                updateProgress();\n-                handle.progress(state);\n-            }\n-        };\n+                @Override\n+                public void setState(String state) {\n+                    updateProgress();\n+                    handle.progress(state);\n+                }\n+            };\n+        } else {\n+            monitor = new ParseMonitor() {\n+                @Override\n+                public void updateProgress() {\n+                    handle.progress(\"Processing...\");\n+                }\n+\n+                @Override\n+                public void setState(String state) {\n+                    updateProgress();\n+                    handle.progress(state);\n+                }\n+            };\n+        }\n+\n@@ -523,12 +573,10 @@\n-            if (file.getName().endsWith(\".xml\")) {\n-                ArrayList<GraphContext> contexts = new ArrayList<>();\n-                final Parser parser = new Parser(channel, monitor, document, loadContext ? contexts::add : null);\n-                parser.parse();\n-                SwingUtilities.invokeLater(() -> {\n-                    for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n-                        \/\/ Nodes are lazily created. By expanding and collapsing they are all initialized\n-                        ((BeanTreeView) this.treeView).expandNode(child);\n-                        ((BeanTreeView) this.treeView).collapseNode(child);\n-                    }\n-                    requestActive();\n-                });\n+            ArrayList<GraphContext> contexts = new ArrayList<>();\n+            final Parser parser = new Parser(channel, monitor, document, loadContext ? contexts::add : null);\n+            parser.parse();\n+            SwingUtilities.invokeLater(() -> {\n+                for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n+                    \/\/ Nodes are lazily created. By expanding and collapsing they are all initialized\n+                    ((BeanTreeView) this.treeView).expandNode(child);\n+                    ((BeanTreeView) this.treeView).collapseNode(child);\n+                }\n+                requestActive();\n@@ -538,1 +586,1 @@\n-            }\n+            });\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":106,"deletions":58,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.util.Objects;\n+\n@@ -52,2 +54,5 @@\n-    public boolean equals(Object o) {\n-        if (!(o instanceof InputNode)) {\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n@@ -56,2 +61,3 @@\n-        InputNode n = (InputNode) o;\n-        return n.id == id;\n+        InputNode other = (InputNode) obj;\n+        return id == other.id &&\n+                Objects.equals(getProperties(), other.getProperties());\n@@ -62,1 +68,1 @@\n-        return id * 13;\n+        return Objects.hash(id, getProperties());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputNode.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -106,4 +106,9 @@\n-        }\n-\n-        for (InputNode n : graph.getNodes()) {\n-            if (!difference || !equal.contains(n)) {\n+            for (InputNode n : graph.getNodes()) {\n+                if (!equal.contains(n)) {\n+                    writer.startTag(Parser.NODE_ELEMENT, new Properties(Parser.NODE_ID_PROPERTY, Integer.toString(n.getId())));\n+                    writer.writeProperties(n.getProperties());\n+                    writer.endTag(); \/\/ Parser.NODE_ELEMENT\n+                }\n+            }\n+        } else {\n+            for (InputNode n : graph.getNodes()) {\n@@ -230,0 +235,4 @@\n+            b.append(\" \");\n+            b.append(code.getOperands());\n+            b.append(\" \");\n+            b.append(code.getComment());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}