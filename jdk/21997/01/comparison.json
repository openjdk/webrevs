{"files":[{"patch":"@@ -2432,0 +2432,15 @@\n+\n+        \/\/ if the property java.nio.file.spi.DefaultFileSystemProvider is\n+        \/\/ set then load the default provider (or a list)\n+        String prop = \"java.nio.file.spi.DefaultFileSystemProvider\";\n+        String propValue = System.getProperty(prop);\n+        if (propValue != null) {\n+            for (String cn: propValue.split(\",\")) {\n+                try {\n+                    Class.forName(cn, true, ClassLoader.getSystemClassLoader());\n+                } catch (Exception x) {\n+                    throw new Error(x);\n+                }\n+            }\n+        }\n+        VM.setCustomDefaultFileSystemProviderLoaded();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-        if (VM.isModuleSystemInited()) {\n+        if (VM.isModuleSystemInited() && VM.isCustomDefaultFileSystemProviderLoaded()) {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystems.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+    private static volatile boolean isCustomDefaultFileSystemProviderLoaded = false;\n@@ -70,0 +71,16 @@\n+    \/**\n+     * control the CustomDefaultFileSystemProvider loading status\n+     *\n+     * @see java.lang.System#initPhase3\n+     *\/\n+    public static void setCustomDefaultFileSystemProviderLoaded() {\n+        isCustomDefaultFileSystemProviderLoaded = true;\n+    }\n+\n+    \/**\n+     * Returns the current customDefaultFileSystemProvider loading status\n+     *\/\n+    public static boolean isCustomDefaultFileSystemProviderLoaded() {\n+        return isCustomDefaultFileSystemProviderLoaded;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}