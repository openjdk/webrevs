{"files":[{"patch":"@@ -2839,2 +2839,2 @@\n-\treturn n == 1 ? new BigInteger[] { this, ZERO }\n-\t\t      : (n == 2 ? sqrtAndRemainder() : nthRootAndRemainder(n, true));\n+        return n == 1 ? new BigInteger[] { this, ZERO }\n+                      : (n == 2 ? sqrtAndRemainder() : nthRootAndRemainder(n, true));\n@@ -2855,2 +2855,2 @@\n-        \trootRem[0].toBigInteger(signum),\n-        \tneedRemainder ? rootRem[1].toBigInteger(signum) : null\n+                rootRem[0].toBigInteger(signum),\n+                needRemainder ? rootRem[1].toBigInteger(signum) : null\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1959,1 +1959,1 @@\n-                        \tnew MutableBigInteger(rLong), new MutableBigInteger(x - rToN)\n+                                new MutableBigInteger(rLong), new MutableBigInteger(x - rToN)\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}