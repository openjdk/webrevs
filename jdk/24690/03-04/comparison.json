{"files":[{"patch":"@@ -1946,2 +1946,2 @@\n-            int shift = Math.max(0, bitLength - Double.MAX_EXPONENT);\n-            int shiftExcess = shift % n;\n+            long shift = Math.max(0, bitLength - Double.MAX_EXPONENT); \/\/ use long to avoid overflow later\n+            int shiftExcess = (int) (shift % n);\n@@ -1951,1 +1951,1 @@\n-            r.rightShift(shift);\n+            r.rightShift((int) shift);\n@@ -1957,1 +1957,1 @@\n-                shift += shiftLack;\n+                shift += shiftLack; \/\/ shift is long, no overflow\n@@ -1968,1 +1968,1 @@\n-            r.leftShift(shift \/ n);\n+            r.leftShift((int) (shift \/ n));\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}