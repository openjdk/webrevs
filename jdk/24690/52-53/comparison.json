{"files":[{"patch":"@@ -2656,1 +2656,1 @@\n-            \/\/ base^exponent == answer^(2^expLen) * base^(exponent & (2^expLen - 1))\n+            \/\/ base^exponent == answer^(2^expLen) * base^(workingExp >>> (32-expLen))\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,4 +59,3 @@\n-    private BigInteger[] xsArray = new BigInteger[TESTSIZE]; \/*\n-     * Each array entry is atmost 64 bits\n-     * in size\n-     *\/\n+    \/* Each array entry is atmost 64 bits in size *\/\n+    private BigInteger[] xsArray = new BigInteger[TESTSIZE];\n+\n@@ -64,4 +63,3 @@\n-    private BigInteger[] sArray = new BigInteger[TESTSIZE]; \/*\n-     * Each array entry is atmost 256 bits\n-     * in size\n-     *\/\n+    \/* Each array entry is atmost 256 bits in size *\/\n+    private BigInteger[] sArray = new BigInteger[TESTSIZE];\n+\n@@ -69,4 +67,3 @@\n-    private BigInteger[] mArray = new BigInteger[TESTSIZE]; \/*\n-     * Each array entry is atmost 1024 bits\n-     * in size\n-     *\/\n+    \/* Each array entry is atmost 1024 bits in size *\/\n+    private BigInteger[] mArray = new BigInteger[TESTSIZE];\n+\n@@ -74,4 +71,3 @@\n-    private BigInteger[] lArray = new BigInteger[TESTSIZE]; \/*\n-     * Each array entry is atmost 4096 bits\n-     * in size\n-     *\/\n+    \/* Each array entry is atmost 4096 bits in size *\/\n+    private BigInteger[] lArray = new BigInteger[TESTSIZE];\n+\n@@ -79,4 +75,3 @@\n-    private BigInteger[] xlArray = new BigInteger[TESTSIZE]; \/*\n-     * Each array entry is atmost 16384 bits\n-     * in size\n-     *\/\n+    \/* Each array entry is atmost 16384 bits in size *\/\n+    private BigInteger[] xlArray = new BigInteger[TESTSIZE];\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerPow.java","additions":15,"deletions":20,"binary":false,"changes":35,"status":"modified"}]}