{"files":[{"patch":"@@ -111,3 +111,0 @@\n-                if (keyStore == null) {\n-                    continue;\n-                }\n@@ -155,3 +152,0 @@\n-                if (keyStore == null) {\n-                    continue;\n-                }\n@@ -166,9 +160,1 @@\n-                    boolean mapEntryUpdated = processCredentials(builder,\n-                            i, alias);\n-                    if (!mapEntryUpdated){\n-                        if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n-                            SSLLogger.fine(\"KeyMgr: error occurred during \" +\n-                                    \"initializing cached map for PKCS12 \" +\n-                                    \"keystore\");\n-                        }\n-                    }\n+                    processCredentials(builder, i, alias);\n@@ -179,1 +165,2 @@\n-                            \"getKeyStore() operation for Keystore builder\");\n+                            \"getKeyStore() operation for Keystore builder \" +\n+                            \"index = \" + i);\n@@ -192,15 +179,6 @@\n-            String builderAlias = removeAliasIndex(alias);\n-            if (builderAlias == null) {\n-                return null;\n-            }\n-\n-            X509Credentials cred = credentialsMap.get(builderAlias);\n-            if (cred == null || !areCertChainsEqual(builderAlias,\n-                    cred.certificates)) {\n-                if (updateCredentialsMap(builderAlias)) {\n-                    cred = credentialsMap.get(builderAlias);\n-                    return cred.certificates.clone();\n-                }\n-                return null;\n-            }\n-            return cred.certificates.clone();\n+            X509Credentials cred = getCredentials(alias);\n+            return (cred != null) ? cred.certificates.clone() : null;\n+        } else {\n+            PrivateKeyEntry entry = getEntry(alias);\n+            return entry == null ? null :\n+                    (X509Certificate[]) entry.getCertificateChain();\n@@ -208,4 +186,0 @@\n-\n-        PrivateKeyEntry entry = getEntry(alias);\n-        return entry == null ? null :\n-                (X509Certificate[])entry.getCertificateChain();\n@@ -217,15 +191,5 @@\n-            String builderAlias = removeAliasIndex(alias);\n-            if (builderAlias == null) {\n-                return null;\n-            }\n-\n-            X509Credentials cred = credentialsMap.get(builderAlias);\n-            if (cred == null || !areCertChainsEqual(builderAlias,\n-                    cred.certificates)) {\n-                if (updateCredentialsMap(builderAlias)) {\n-                    cred = credentialsMap.get(builderAlias);\n-                    return cred.privateKey;\n-                }\n-                return null;\n-            }\n-            return cred.privateKey;\n+            X509Credentials cred = getCredentials(alias);\n+            return (cred != null) ? cred.privateKey : null;\n+        } else {\n+            PrivateKeyEntry entry = getEntry(alias);\n+            return entry == null ? null : entry.getPrivateKey();\n@@ -233,3 +197,0 @@\n-\n-        PrivateKeyEntry entry = getEntry(alias);\n-        return entry == null ? null : entry.getPrivateKey();\n@@ -302,1 +263,1 @@\n-    private String removeAliasIndex (String alias){\n+    private String removeAliasIndex(String alias) {\n@@ -316,0 +277,18 @@\n+    private X509Credentials getCredentials(String alias) {\n+        String builderAlias = removeAliasIndex(alias);\n+        if (builderAlias == null) {\n+            return null;\n+        }\n+\n+        X509Credentials cred = credentialsMap.get(builderAlias);\n+        if (cred == null || !areCertChainsEqual(builderAlias,\n+                cred.certificates)) {\n+            if (updateCredentialsMap(builderAlias)) {\n+                cred = credentialsMap.get(builderAlias);\n+            } else {\n+                cred = null;\n+            }\n+        }\n+        return cred;\n+    }\n+\n@@ -324,4 +303,3 @@\n-            if (keyStore == null) {\n-                return false;\n-            }\n-            Certificate[] keyStoreCerts = keyStore.getCertificateChain(entryAlias);\n+\n+            Certificate[] keyStoreCerts = keyStore.\n+                    getCertificateChain(entryAlias);\n@@ -334,2 +312,4 @@\n-                SSLLogger.fine(\"KeyMgr: exception occurred during getKeyStore() \" +\n-                        \"operation\");\n+                SSLLogger.fine(\"KeyMgr: exception occurred during \" +\n+                        \"areCertChainsEqual() operation for: \" +\n+                        \" keystore builder index = \" + builderIndex +\n+                        \", alias = \" + entryAlias);\n@@ -342,5 +322,3 @@\n-            String alias) throws Exception {\n-        KeyStore keyStore = builder.getKeyStore();\n-        if (keyStore == null) {\n-            return false;\n-        }\n+            String alias) {\n+        try {\n+            KeyStore keyStore = builder.getKeyStore();\n@@ -348,5 +326,10 @@\n-        Entry newEntry = keyStore.getEntry(alias,\n-                builder.getProtectionParameter(alias));\n-        if (!(newEntry instanceof PrivateKeyEntry privateKeyEntry)) {\n-            return false;\n-        }\n+            Entry newEntry = keyStore.getEntry(alias,\n+                    builder.getProtectionParameter(alias));\n+            if (!(newEntry instanceof PrivateKeyEntry privateKeyEntry)) {\n+                if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+                    SSLLogger.fine(\"KeyMgr: Failed to retrieve private key \" +\n+                            \"entry for: keystore builder index = \" +\n+                            builderIndex + \", alias = \" + alias);\n+                }\n+                return false;\n+            }\n@@ -354,2 +337,3 @@\n-        PrivateKey privateKey = privateKeyEntry.getPrivateKey();\n-        X509Certificate[] certs = (X509Certificate[]) privateKeyEntry.getCertificateChain();\n+            PrivateKey privateKey = privateKeyEntry.getPrivateKey();\n+            X509Certificate[] certs = (X509Certificate[]) privateKeyEntry.\n+                    getCertificateChain();\n@@ -357,5 +341,10 @@\n-        X509Certificate cert = certs[0];\n-        PublicKey publicKey = cert.getPublicKey();\n-        if (!privateKey.getAlgorithm().equals(publicKey.getAlgorithm())) {\n-            return false;\n-        }\n+            X509Certificate cert = certs[0];\n+            PublicKey publicKey = cert.getPublicKey();\n+            if (!privateKey.getAlgorithm().equals(publicKey.getAlgorithm())) {\n+                if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+                    SSLLogger.fine(\"KeyMgr: Private key algorithm does not \" +\n+                            \"match public key for: keystore builder index = \" +\n+                            builderIndex + \", alias = \" + alias);\n+                }\n+                return false;\n+            }\n@@ -363,4 +352,4 @@\n-        \/\/ Add to credentials map\n-        String builderAlias = builderIndex + \".\" + alias;\n-        X509Credentials cred = new X509Credentials(privateKey, certs);\n-        credentialsMap.put(builderAlias, cred);\n+            \/\/ Add to credentials map\n+            String builderAlias = builderIndex + \".\" + alias;\n+            X509Credentials cred = new X509Credentials(privateKey, certs);\n+            credentialsMap.put(builderAlias, cred);\n@@ -368,5 +357,5 @@\n-        if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n-            SSLLogger.fine(\"found key for : \" +\n-                    \"keystore builder index = \" + builderIndex +\n-                    \" alias = \" + alias, (Object[]) certs);\n-        }\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+                SSLLogger.fine(\"found key for: \" +\n+                        \"keystore builder index = \" + builderIndex +\n+                        \", alias = \" + alias, (Object[]) certs);\n+            }\n@@ -374,1 +363,9 @@\n-        return true;\n+            return true;\n+        } catch (Exception e) {\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+                SSLLogger.fine(\"KeyMgr: Exception occurred during processing \" +\n+                        \"credentials in cached map for: keystore builder \" +\n+                        \"index = \" + builderIndex + \", alias = \" + alias);\n+            }\n+            return false;\n+        }\n@@ -384,17 +381,1 @@\n-        try {\n-            boolean mapEntryUpdated = processCredentials(builder,\n-                    builderIndex, entryAlias);\n-            if (!mapEntryUpdated) {\n-                if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n-                    SSLLogger.fine(\"KeyMgr: error occurred during updating \" +\n-                            \"cached map for PKCS12 keystore\");\n-                }\n-            }\n-            return mapEntryUpdated;\n-        } catch (Exception e) {\n-            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n-                SSLLogger.fine(\"KeyMgr: exception occurred during processing \" +\n-                        \"credentials for a key in cached map\");\n-            }\n-            return false;\n-        }\n+        return processCredentials(builder, builderIndex, entryAlias);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":85,"deletions":104,"binary":false,"changes":189,"status":"modified"}]}