{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+\/**\n+ * This is launched from TestLambdaInvokers.\n+ *\/\n@@ -47,0 +50,4 @@\n+\n+        mh = MethodHandles.dropArguments(MethodHandles.zero(Object.class), 0, Object.class, int.class);\n+        MethodHandle inv = MethodHandles.invoker(mh.type());\n+        invoke(inv, mh, args, 3);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/CDSLambdaInvoker.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @bug 8280767\n+ * @bug 8280767 8327499\n@@ -62,0 +62,1 @@\n+             \"-Djava.lang.invoke.MethodHandle.TRACE_RESOLVE=true\",\n@@ -72,0 +73,4 @@\n+\n+                 \/\/ java.lang.invoke.Invokers$Holder has invoker(Object,Object,Object,int)Object available\n+                 \/\/ from the archives\n+                 output.shouldContain(\"[LF_RESOLVE] java.lang.invoke.Invokers$Holder invoker L3I_L (success)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestLambdaInvokers.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}