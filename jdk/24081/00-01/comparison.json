{"files":[{"patch":"@@ -1490,1 +1490,1 @@\n-    assert_cond(UseZfa);\n+    assert_cond(UseZfa && UseZfh);\n@@ -1504,0 +1504,10 @@\n+  void fminm_h(FloatRegister Rd, FloatRegister Rs1, FloatRegister Rs2) {\n+    assert_cond(UseZfa && UseZfh);\n+    fp_base<H_16_hp, 0b00101>(Rd, Rs1, Rs2, 0b010);\n+  }\n+\n+  void fmaxm_h(FloatRegister Rd, FloatRegister Rs1, FloatRegister Rs2) {\n+    assert_cond(UseZfa && UseZfh);\n+    fp_base<H_16_hp, 0b00101>(Rd, Rs1, Rs2, 0b011);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -8392,0 +8392,1 @@\n+  predicate(!UseZfa);\n@@ -8410,0 +8411,28 @@\n+instruct minHF_reg_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n+  predicate(UseZfa);\n+  match(Set dst (MinHF src1 src2));\n+\n+  format %{ \"minHF $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ fminm_h(as_FloatRegister($dst$$reg),\n+               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct maxHF_reg_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n+  predicate(UseZfa);\n+  match(Set dst (MaxHF src1 src2));\n+\n+  format %{ \"maxHF $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ fmaxm_h(as_FloatRegister($dst$$reg),\n+               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"}]}