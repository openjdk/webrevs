{"files":[{"patch":"@@ -374,1 +374,0 @@\n-\n@@ -414,0 +413,39 @@\n+  static int zfa_zli_lookup_half_float(uint16_t value) {\n+    switch(value) {\n+      case 0xbc00 : return  0;\n+      case 0x0400 : return  1;\n+      case 0x0100 : return  2;\n+      case 0x0200 : return  3;\n+      case 0x1c00 : return  4;\n+      case 0x2000 : return  5;\n+      case 0x2c00 : return  6;\n+      case 0x3000 : return  7;\n+      case 0x3400 : return  8;\n+      case 0x3500 : return  9;\n+      case 0x3600 : return 10;\n+      case 0x3700 : return 11;\n+      case 0x3800 : return 12;\n+      case 0x3900 : return 13;\n+      case 0x3a00 : return 14;\n+      case 0x3b00 : return 15;\n+      case 0x3c00 : return 16;\n+      case 0x3d00 : return 17;\n+      case 0x3e00 : return 18;\n+      case 0x3f00 : return 19;\n+      case 0x4000 : return 20;\n+      case 0x4100 : return 21;\n+      case 0x4200 : return 22;\n+      case 0x4400 : return 23;\n+      case 0x4800 : return 24;\n+      case 0x4c00 : return 25;\n+      case 0x5800 : return 26;\n+      case 0x5c00 : return 27;\n+      case 0x7800 : return 28;\n+      case 0x7c00 : return 29;\n+      \/\/ case 0x7c00 : return 30; \/\/ redundant with 29\n+      case 0x7e00 : return 31;\n+      default: break;\n+    }\n+    return -1;\n+  }\n+\n@@ -416,0 +454,8 @@\n+  static bool can_zfa_zli_half_float(jshort hf) {\n+    if (!UseZfa || !UseZfh) {\n+      return false;\n+    }\n+    uint16_t hf_bits = (uint16_t)hf;\n+    return zfa_zli_lookup_half_float(hf_bits) != -1;\n+  }\n+\n@@ -1443,0 +1489,5 @@\n+  void _fli_h(FloatRegister Rd, uint8_t Rs1) {\n+    assert_cond(UseZfa);\n+    fp_base<H_16_hp, 0b11110>(Rd, Rs1, 0b00001, 0b000);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2597,0 +2597,8 @@\n+bool MacroAssembler::can_hf_imm_load(short imm) {\n+  jshort h_bits = (jshort)imm;\n+  if (h_bits == 0) {\n+    return true;\n+  }\n+  return can_zfa_zli_half_float(imm);\n+}\n+\n@@ -2613,0 +2621,11 @@\n+void MacroAssembler::fli_h(FloatRegister Rd, short imm) {\n+  jint f_bits = jint_cast(imm);\n+  if (f_bits == 0) {\n+    fmv_w_x(Rd, zr);\n+    return;\n+  }\n+  int Rs = zfa_zli_lookup_half_float(f_bits);\n+  assert(Rs != -1, \"Must be\");\n+  _fli_h(Rd, Rs);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -924,0 +924,1 @@\n+  static bool can_hf_imm_load(short imm);\n@@ -926,0 +927,1 @@\n+  void fli_h(FloatRegister Rd, short imm);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4958,2 +4958,5 @@\n-    __ flh(as_FloatRegister($dst$$reg), $constantaddress($con));\n-    \/\/ TODO: add zfa instructions for half float, and optimize here.\n+    if (MacroAssembler::can_hf_imm_load($con$$constant)) {\n+      __ fli_h(as_FloatRegister($dst$$reg), $con$$constant);\n+    } else {\n+      __ flh(as_FloatRegister($dst$$reg), $constantaddress($con));\n+    }\n@@ -4990,5 +4993,5 @@\n-      if (MacroAssembler::can_fp_imm_load($con$$constant)) {\n-        __ fli_s(as_FloatRegister($dst$$reg), $con$$constant);\n-      } else {\n-        __ flw(as_FloatRegister($dst$$reg), $constantaddress($con));\n-      }\n+    if (MacroAssembler::can_fp_imm_load($con$$constant)) {\n+      __ fli_s(as_FloatRegister($dst$$reg), $con$$constant);\n+    } else {\n+      __ flw(as_FloatRegister($dst$$reg), $constantaddress($con));\n+    }\n@@ -5024,5 +5027,5 @@\n-      if (MacroAssembler::can_dp_imm_load($con$$constant)) {\n-        __ fli_d(as_FloatRegister($dst$$reg), $con$$constant);\n-      } else {\n-        __ fld(as_FloatRegister($dst$$reg), $constantaddress($con));\n-      }\n+    if (MacroAssembler::can_dp_imm_load($con$$constant)) {\n+      __ fli_d(as_FloatRegister($dst$$reg), $con$$constant);\n+    } else {\n+      __ fld(as_FloatRegister($dst$$reg), $constantaddress($con));\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"}]}