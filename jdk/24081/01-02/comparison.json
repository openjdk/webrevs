{"files":[{"patch":"@@ -2622,3 +2622,3 @@\n-  jint f_bits = jint_cast(imm);\n-  if (f_bits == 0) {\n-    fmv_w_x(Rd, zr);\n+  jshort h_bits = (jshort)imm;\n+  if (h_bits == 0) {\n+    fmv_h_x(Rd, zr);\n@@ -2627,1 +2627,1 @@\n-  int Rs = zfa_zli_lookup_half_float(f_bits);\n+  int Rs = zfa_zli_lookup_half_float(h_bits);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -8390,1 +8390,1 @@\n-instruct min_max_HF_reg(fRegF dst, fRegF src1, fRegF src2)\n+instruct min_HF_reg(fRegF dst, fRegF src1, fRegF src2, rFlagsReg cr)\n@@ -8394,2 +8394,4 @@\n-  match(Set dst (MaxHF src1 src2));\n-  format %{ \"min_max_hf $dst, $src1, $src2\" %}\n+  effect(KILL cr);\n+\n+  format %{ \"min_hf $dst, $src1, $src2\" %}\n+\n@@ -8397,10 +8399,2 @@\n-    int opcode = this->ideal_Opcode();\n-    switch(opcode) {\n-      case Op_MinHF: __ minmax_fp($dst$$FloatRegister, $src1$$FloatRegister, $src2$$FloatRegister,\n-                                  __ FLOAT_TYPE::half_precision, true);\n-                     break;\n-      case Op_MaxHF: __ minmax_fp($dst$$FloatRegister, $src1$$FloatRegister, $src2$$FloatRegister,\n-                                  __ FLOAT_TYPE::half_precision, false);\n-                     break;\n-      default: assert(false, \"%s is not supported here\", NodeClassNames[opcode]); break;\n-    }\n+    __ minmax_fp($dst$$FloatRegister, $src1$$FloatRegister, $src2$$FloatRegister,\n+                 __ FLOAT_TYPE::half_precision, true \/* is_min *\/);\n@@ -8411,1 +8405,1 @@\n-instruct minHF_reg_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n+instruct min_HF_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n@@ -8415,1 +8409,1 @@\n-  format %{ \"minHF $dst, $src1, $src2\" %}\n+  format %{ \"min_hf $dst, $src1, $src2\" %}\n@@ -8418,2 +8412,1 @@\n-    __ fminm_h(as_FloatRegister($dst$$reg),\n-               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+    __ fminm_h(as_FloatRegister($dst$$reg), as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n@@ -8425,1 +8418,16 @@\n-instruct maxHF_reg_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n+instruct max_HF_reg(fRegF dst, fRegF src1, fRegF src2, rFlagsReg cr)\n+%{\n+  predicate(!UseZfa);\n+  match(Set dst (MaxHF src1 src2));\n+  effect(KILL cr);\n+\n+  format %{ \"max_hf $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+      __ minmax_fp($dst$$FloatRegister, $src1$$FloatRegister, $src2$$FloatRegister,\n+                   __ FLOAT_TYPE::half_precision, false \/* is_min *\/);\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct max_HF_reg_zfa(fRegF dst, fRegF src1, fRegF src2) %{\n@@ -8429,1 +8437,1 @@\n-  format %{ \"maxHF $dst, $src1, $src2\" %}\n+  format %{ \"max_hf $dst, $src1, $src2\" %}\n@@ -8432,2 +8440,1 @@\n-    __ fmaxm_h(as_FloatRegister($dst$$reg),\n-               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+    __ fmaxm_h(as_FloatRegister($dst$$reg), as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":28,"deletions":21,"binary":false,"changes":49,"status":"modified"}]}