{"files":[{"patch":"@@ -100,0 +100,1 @@\n+import com.sun.tools.javac.tree.JCTree.JCInstanceOf;\n@@ -1553,0 +1554,7 @@\n+            public void visitTypeTest(JCInstanceOf tree) {\n+                if (tree.pattern.type.isPrimitive()) {\n+                    hasPatterns = true;\n+                }\n+                super.visitTypeTest(tree);\n+            }\n+            @Override\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8345474\n+ * @summary instanceof does not reify the deduced type when patterns are not used in the compilation unit\n+ * @enablePreview\n+ * @compile T8345474.java\n+ * @run main T8345474\n+ *\/\n+import java.util.List;\n+\n+public class T8345474 {\n+    public static void main(String[] args) {\n+        erasureInstanceofTypeComparisonOperator();\n+    }\n+\n+    public static void erasureInstanceofTypeComparisonOperator() {\n+        List<Short> ls = List.of((short) 42);\n+\n+        assertTrue(ls.get(0) instanceof int);\n+    }\n+\n+    static void assertTrue(boolean actual) {\n+        if (!actual) {\n+            throw new AssertionError(\"Expected: true, but got false\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8345474.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}