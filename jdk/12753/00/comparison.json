{"files":[{"patch":"@@ -1215,1 +1215,3 @@\n-  __ membar(MacroAssembler::Membar_mask_bits(MacroAssembler::StoreLoad | MacroAssembler::StoreStore), Rtemp);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::Membar_mask_bits(MacroAssembler::StoreLoad | MacroAssembler::StoreStore), Rtemp);\n+  }\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1005,2 +1005,4 @@\n-    \/\/ Force this write out before the read below\n-  __ membar(MacroAssembler::StoreLoad, Rtemp);\n+  \/\/ Force this write out before the read below\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::StoreLoad, Rtemp);\n+  }\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -266,1 +266,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1750,1 +1750,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1149,1 +1149,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1841,1 +1841,3 @@\n-    __ z_fence();\n+    if (!UseSystemMemoryBarrier) {\n+      __ z_fence();\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1522,1 +1522,3 @@\n-  __ z_fence();\n+  if (!UseSystemMemoryBarrier) {\n+    __ z_fence();\n+  }\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1771,3 +1771,5 @@\n-  __ membar(Assembler::Membar_mask_bits(\n-            Assembler::LoadLoad | Assembler::LoadStore |\n-            Assembler::StoreLoad | Assembler::StoreStore));\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(Assembler::Membar_mask_bits(\n+              Assembler::LoadLoad | Assembler::LoadStore |\n+              Assembler::StoreLoad | Assembler::StoreStore));\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    log_error(os)(\"MEMBARRIER_CMD_QUERY unsupported\");\n+    log_trace(os)(\"MEMBARRIER_CMD_QUERY unsupported\");\n@@ -80,1 +80,1 @@\n-    log_error(os)(\"MEMBARRIER PRIVATE_EXPEDITED unsupported\");\n+    log_trace(os)(\"MEMBARRIER PRIVATE_EXPEDITED unsupported\");\n","filename":"src\/hotspot\/os\/linux\/systemMemoryBarrier_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1300,2 +1300,2 @@\n-  product(bool, UseSystemMemoryBarrier, false, EXPERIMENTAL,                \\\n-          \"Try to enable system memory barrier\")                            \\\n+  product(bool, UseSystemMemoryBarrier, true, DIAGNOSTIC,                   \\\n+          \"Try to enable system memory barrier if supported by OS\")         \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+#include \"runtime\/globals_extension.hpp\"\n@@ -557,2 +558,4 @@\n-      vm_shutdown_during_initialization(\"Failed to initialize the requested system memory barrier synchronization.\");\n-      return JNI_EINVAL;\n+      if (!FLAG_IS_DEFAULT(UseSystemMemoryBarrier)) {\n+        warning(\"UseSystemMemoryBarrier specified, but not supported on this OS.\");\n+      }\n+      FLAG_SET_ERGO(UseSystemMemoryBarrier, false);\n@@ -560,1 +563,0 @@\n-    log_debug(os)(\"Using experimental system memory barrier synchronization\");\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}