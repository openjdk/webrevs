{"files":[{"patch":"@@ -1215,1 +1215,3 @@\n-  __ membar(MacroAssembler::Membar_mask_bits(MacroAssembler::StoreLoad | MacroAssembler::StoreStore), Rtemp);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::Membar_mask_bits(MacroAssembler::StoreLoad | MacroAssembler::StoreStore), Rtemp);\n+  }\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1005,2 +1005,4 @@\n-    \/\/ Force this write out before the read below\n-  __ membar(MacroAssembler::StoreLoad, Rtemp);\n+  \/\/ Force this write out before the read below\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::StoreLoad, Rtemp);\n+  }\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -266,1 +266,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -1750,1 +1751,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -1149,1 +1150,3 @@\n-  __ membar(MacroAssembler::AnyAny);\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(MacroAssembler::AnyAny);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1841,1 +1841,3 @@\n-    __ z_fence();\n+    if (!UseSystemMemoryBarrier) {\n+      __ z_fence();\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1522,1 +1522,3 @@\n-  __ z_fence();\n+  if (!UseSystemMemoryBarrier) {\n+    __ z_fence();\n+  }\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1771,3 +1771,5 @@\n-  __ membar(Assembler::Membar_mask_bits(\n-            Assembler::LoadLoad | Assembler::LoadStore |\n-            Assembler::StoreLoad | Assembler::StoreStore));\n+  if (!UseSystemMemoryBarrier) {\n+    __ membar(Assembler::Membar_mask_bits(\n+              Assembler::LoadLoad | Assembler::LoadStore |\n+              Assembler::StoreLoad | Assembler::StoreStore));\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+#include \"utilities\/systemMemoryBarrier.hpp\"\n@@ -2225,0 +2226,9 @@\n+  if (UseSystemMemoryBarrier) {\n+    if (!SystemMemoryBarrier::initialize()) {\n+      if (!FLAG_IS_DEFAULT(UseSystemMemoryBarrier)) {\n+        warning(\"UseSystemMemoryBarrier specified, but not supported on this OS. Use -Xlog:os=info for details.\");\n+      }\n+      FLAG_SET_ERGO(UseSystemMemoryBarrier, false);\n+    }\n+  }\n+\n@@ -2333,0 +2343,6 @@\n+  if (UseSystemMemoryBarrier) {\n+    if (!FLAG_IS_DEFAULT(UseSystemMemoryBarrier)) {\n+      warning(\"UseSystemMemoryBarrier specified, but not supported on this OS.\");\n+    }\n+    FLAG_SET_ERGO(UseSystemMemoryBarrier, false);\n+  }\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+#include \"utilities\/systemMemoryBarrier.hpp\"\n@@ -1966,0 +1967,6 @@\n+  if (UseSystemMemoryBarrier) {\n+    if (!FLAG_IS_DEFAULT(UseSystemMemoryBarrier)) {\n+      warning(\"UseSystemMemoryBarrier specified, but not supported on this OS.\");\n+    }\n+    FLAG_SET_ERGO(UseSystemMemoryBarrier, false);\n+  }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+#include \"utilities\/systemMemoryBarrier.hpp\"\n@@ -4492,0 +4493,8 @@\n+  if (UseSystemMemoryBarrier) {\n+    if (!SystemMemoryBarrier::initialize()) {\n+      if (!FLAG_IS_DEFAULT(UseSystemMemoryBarrier)) {\n+        warning(\"UseSystemMemoryBarrier specified, but not supported on this linux version. Use -Xlog:os=info for details.\");\n+      }\n+      FLAG_SET_ERGO(UseSystemMemoryBarrier, false);\n+    }\n+  }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    log_error(os)(\"MEMBARRIER_CMD_QUERY unsupported\");\n+    log_info(os)(\"MEMBARRIER_CMD_QUERY unsupported\");\n@@ -80,1 +80,1 @@\n-    log_error(os)(\"MEMBARRIER PRIVATE_EXPEDITED unsupported\");\n+    log_info(os)(\"MEMBARRIER PRIVATE_EXPEDITED unsupported\");\n@@ -85,0 +85,1 @@\n+  log_info(os)(\"Using MEMBARRIER PRIVATE_EXPEDITED\");\n@@ -92,1 +93,0 @@\n-\n","filename":"src\/hotspot\/os\/linux\/systemMemoryBarrier_linux.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+#include \"utilities\/systemMemoryBarrier.hpp\"\n@@ -4313,0 +4314,4 @@\n+  if (UseSystemMemoryBarrier) {\n+    bool SystemMemoryBarrier_usable = SystemMemoryBarrier::initialize();\n+    assert(SystemMemoryBarrier_usable, \"should be on Windows\");\n+  }\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1300,2 +1300,2 @@\n-  product(bool, UseSystemMemoryBarrier, false, EXPERIMENTAL,                \\\n-          \"Try to enable system memory barrier\")                            \\\n+  product(bool, UseSystemMemoryBarrier, false,                              \\\n+          \"Try to enable system memory barrier if supported by OS\")         \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,0 @@\n-#include \"utilities\/systemMemoryBarrier.hpp\"\n@@ -555,8 +554,0 @@\n-  if (UseSystemMemoryBarrier) {\n-    if (!SystemMemoryBarrier::initialize()) {\n-      vm_shutdown_during_initialization(\"Failed to initialize the requested system memory barrier synchronization.\");\n-      return JNI_EINVAL;\n-    }\n-    log_debug(os)(\"Using experimental system memory barrier synchronization\");\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    log_error(os)(\"SystemMemoryBarrier not supported on this platform\");\n+    log_info(os)(\"SystemMemoryBarrier not supported on this platform\");\n","filename":"src\/hotspot\/share\/utilities\/systemMemoryBarrier.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}