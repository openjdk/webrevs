{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import java.util.Objects;\n@@ -221,0 +222,2 @@\n+            char[] chars = (prompt == null ? \"null\" : prompt).toCharArray();\n+\n@@ -224,1 +227,0 @@\n-                    char[] chars = (prompt == null ? \"null\" : prompt).toCharArray();\n@@ -248,0 +250,5 @@\n+            Objects.requireNonNull(format, \"the format String must be non-null\");\n+\n+            String prompt = String.format(locale, format, args);\n+            char[] chars = prompt.toCharArray();\n+\n@@ -251,2 +258,0 @@\n-                    String prompt = String.format(locale, format, args);\n-                    char[] chars = prompt.toCharArray();\n@@ -275,0 +280,5 @@\n+            Objects.requireNonNull(format, \"the format String must be non-null\");\n+\n+            String prompt = String.format(locale, format, args);\n+            char[] chars = prompt.toCharArray();\n+\n@@ -278,2 +288,0 @@\n-                    String prompt = String.format(locale, format, args);\n-                    char[] chars = prompt.toCharArray();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/impl\/ConsoleImpl.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+import jdk.jshell.EvalException;\n@@ -45,0 +46,1 @@\n+import jdk.jshell.Snippet.Status;\n@@ -186,0 +188,9 @@\n+    @Test\n+    public void testNPE() {\n+        console = new ThrowingJShellConsole();\n+        assertEval(\"System.console().readLine(null)\", DiagCheck.DIAG_OK, DiagCheck.DIAG_OK, chain(added(Status.VALID), null, EvalException.class));\n+        assertEval(\"System.console().readPassword(null)\", DiagCheck.DIAG_OK, DiagCheck.DIAG_OK, chain(added(Status.VALID), null, EvalException.class));\n+        assertEval(\"System.console().readLine(\\\"%d\\\", \\\"\\\")\", DiagCheck.DIAG_OK, DiagCheck.DIAG_OK, chain(added(Status.VALID), null, EvalException.class));\n+        assertEval(\"System.console().readPassword(\\\"%d\\\", \\\"\\\")\", DiagCheck.DIAG_OK, DiagCheck.DIAG_OK, chain(added(Status.VALID), null, EvalException.class));\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ConsoleTest.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}