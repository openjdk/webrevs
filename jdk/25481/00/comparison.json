{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.nio.file.Files;\n@@ -57,0 +58,1 @@\n+        var installDirDeleteRoot = new Object() { Path path; };\n@@ -58,4 +60,42 @@\n-            final var defaultInstallDirLocation = superPkgBuilder.defaultInstallDir().map(Path::getParent).orElseThrow();\n-            if (!defaultInstallDirLocation.equals(installDir)) {\n-                Log.info(I18N.format(\"message.install-dir-ignored\", defaultInstallDirLocation));\n-                superPkgBuilder.installDir(defaultInstallDirLocation);\n+            if (Files.exists(installDir) && !Files.isDirectory(installDir)) {\n+                    throw new RuntimeException(\n+                             I18N.format(\"message.install-dir-invalid\",\n+                             installDir.toString()));\n+            }\n+\n+            if (!Files.exists(installDir)) {\n+                try {\n+                    \/\/ Install dir can have multiple non-existing directories.\n+                    \/\/ We need to find first non-existing directory, so we can\n+                    \/\/ delete it.\n+                    Path parent = installDir.getParent();\n+                    Path deleteRoot = null;\n+                    while (parent != null) {\n+                        if (!Files.exists(parent.getParent())) {\n+                            parent = parent.getParent();\n+                        } else {\n+                            deleteRoot = parent;\n+                            break;\n+                        }\n+                    }\n+\n+                    if (parent == null) {\n+                        throw new RuntimeException(\n+                             I18N.format(\"message.install-dir-invalid\",\n+                             installDir.toString()));\n+                    }\n+\n+                    installDirDeleteRoot.path = deleteRoot;\n+\n+                    try {\n+                        Files.createDirectories(installDir);\n+                    } catch (Exception ex) {\n+                        throw new RuntimeException(\n+                             I18N.format(\"message.install-dir-create\",\n+                             installDir.toString(),\n+                             ex.getLocalizedMessage()));\n+                    }\n+                } catch (Exception ex) {\n+                    Log.verbose(ex);\n+                    throw new RuntimeException(ex);\n+                }\n@@ -69,0 +109,1 @@\n+                Optional.ofNullable(installDirDeleteRoot.path),\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackageBuilder.java","additions":45,"deletions":4,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -427,0 +427,8 @@\n+            \/\/ Delete root of install dir if set (jpackage created)\n+            pkg.installDirDeleteRoot().ifPresent(path -> {\n+                try {\n+                    FileUtils.deleteRecursive(path);\n+                } catch (IOException e) {\n+                    Log.verbose(e.getMessage());\n+                }\n+            });\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackager.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,0 +35,8 @@\n+    \/**\n+     * Will be set to root of created install dir for deletion once it is no\n+     * longer needed.\n+     *\n+     * @return Root of created install dir\n+     *\/\n+    Optional<Path> installDirDeleteRoot();\n+\n@@ -44,1 +52,2 @@\n-    record Stub(Optional<Path> icon, List<Path> content) implements MacDmgPackageMixin {\n+    record Stub(Optional<Path> icon, Optional<Path> installDirDeleteRoot,\n+                List<Path> content) implements MacDmgPackageMixin {\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacDmgPackageMixin.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -83,1 +83,2 @@\n-message.install-dir-ignored=Warning: \"--install-dir\" option is ignored for DMG packaging. The installation directory will default to {0}.\n+message.install-dir-invalid=Error: \"--install-dir\" value {0} is ivalid for DMG packaging. Make sure it is valid path to existing or non-existing directory.\n+message.install-dir-create=Error: Unable to create install dir {0}. Make sure you have sufficient permissions or create it manually. Exception: {1}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -116,84 +116,15 @@\n-    record DmgTestSpec(Path installDir, boolean installDirIgnored, boolean runtimeInstaller) {\n-\n-        DmgTestSpec {\n-            Objects.requireNonNull(installDir);\n-        }\n-\n-        static Builder build() {\n-            return new Builder();\n-        }\n-\n-        static final class Builder {\n-\n-            Builder ignoredInstallDir(String v) {\n-                installDir = Path.of(v);\n-                installDirIgnored = true;\n-                return this;\n-            }\n-\n-            Builder acceptedInstallDir(String v) {\n-                installDir = Path.of(v);\n-                installDirIgnored = false;\n-                return this;\n-            }\n-\n-            Builder runtimeInstaller() {\n-                runtimeInstaller = true;\n-                return this;\n-            }\n-\n-            DmgTestSpec create() {\n-                return new DmgTestSpec(installDir, installDirIgnored, runtimeInstaller);\n-            }\n-\n-            private Path installDir;\n-            private boolean installDirIgnored;\n-            private boolean runtimeInstaller;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            final var sb = new StringBuilder();\n-            sb.append(installDir);\n-            if (installDirIgnored) {\n-                sb.append(\", ignore\");\n-            }\n-            if (runtimeInstaller) {\n-                sb.append(\", runtime\");\n-            }\n-            return sb.toString();\n-        }\n-\n-        void run() {\n-            final var test = new PackageTest().forTypes(PackageType.MAC_DMG).ignoreBundleOutputDir();\n-            if (runtimeInstaller) {\n-                test.addInitializer(cmd -> {\n-                    cmd.removeArgumentWithValue(\"--input\");\n-                });\n-            } else {\n-                test.configureHelloApp();\n-            }\n-\n-            test.addInitializer(JPackageCommand::setFakeRuntime).addInitializer(cmd -> {\n-                cmd.addArguments(\"--install-dir\", installDir);\n-                cmd.validateOutput(createInstallDirWarningVerifier());\n-            }).run(Action.CREATE_AND_UNPACK);\n-        }\n-\n-        private TextStreamVerifier createInstallDirWarningVerifier() {\n-            final var verifier = TKit.assertTextStream(\n-                    JPackageStringBundle.MAIN.cannedFormattedString(\"message.install-dir-ignored\", defaultDmgInstallDir()).getValue());\n-            if (installDirIgnored) {\n-                return verifier;\n-            } else {\n-                return verifier.negate();\n-            }\n-        }\n-\n-        private String defaultDmgInstallDir() {\n-            if (runtimeInstaller) {\n-                return \"\/Library\/Java\/JavaVirtualMachines\";\n-            } else {\n-                return \"\/Applications\";\n-            }\n-        }\n+    @Test(ifOS = OperatingSystem.MACOS)\n+    @Parameter(\"\/System\/jpackage\")\n+    public static void testMacCreate(String installDir) {\n+        new PackageTest()\n+        .setExpectedExitCode(1)\n+        .excludeTypes(PackageType.MAC_PKG)\n+        .configureHelloApp()\n+        .addInitializer(cmd -> {\n+            cmd.addArguments(\"--install-dir\", installDir);\n+            cmd.saveConsoleOutput(true);\n+        })\n+        .addBundleVerifier((cmd, result) -> {\n+            cmd.validateOutput(JPackageStringBundle.MAIN.cannedFormattedString(\"message.install-dir-create\", installDir));\n+        })\n+        .run();\n@@ -203,4 +134,3 @@\n-    @ParameterSupplier\n-    public static void testDmg(DmgTestSpec testSpec) {\n-        testSpec.run();\n-    }\n+    public static void testMacInvalid() {\n+        String installDir = TKit.createTempFile(\"InstallDir.txt\")\n+                .toAbsolutePath().toString();\n@@ -208,6 +138,13 @@\n-    public static List<Object[]> testDmg() {\n-        return Stream.of(\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\/bar\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\").runtimeInstaller(),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\/bar\").runtimeInstaller(),\n+        new PackageTest()\n+        .setExpectedExitCode(1)\n+        .excludeTypes(PackageType.MAC_PKG)\n+        .configureHelloApp()\n+        .addInitializer(cmd -> {\n+            cmd.addArguments(\"--install-dir\", installDir);\n+            cmd.saveConsoleOutput(true);\n+        })\n+        .addBundleVerifier((cmd, result) -> {\n+            cmd.validateOutput(JPackageStringBundle.MAIN.cannedFormattedString(\"message.install-dir-invalid\", installDir));\n+        })\n+        .run();\n+    }\n@@ -215,2 +152,4 @@\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Library\/Java\/JavaVirtualMachines\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Applications\").runtimeInstaller(),\n+    @Test(ifOS = OperatingSystem.MACOS)\n+    public static void testMacValid() {\n+        final Path installDirRoot = TKit.createTempDirectory(\"InstallDirRoot\");\n+        Path installDir = installDirRoot.resolve(\"MyCompany\").resolve(\"MyApp\");\n@@ -218,2 +157,7 @@\n-                DmgTestSpec.build().acceptedInstallDir(\"\/Applications\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Applications\/foo\/bar\/buz\"),\n+        new PackageTest()\n+        .excludeTypes(PackageType.MAC_PKG)\n+        .configureHelloApp()\n+        .addInitializer(cmd -> {\n+            cmd.addArguments(\"--install-dir\", installDir.toAbsolutePath().toString());\n+        })\n+        .run();\n@@ -221,5 +165,2 @@\n-                DmgTestSpec.build().runtimeInstaller().acceptedInstallDir(\"\/Library\/Java\/JavaVirtualMachines\"),\n-                DmgTestSpec.build().runtimeInstaller().ignoredInstallDir(\"\/Library\/Java\/JavaVirtualMachines\/foo\/bar\/buz\")\n-        ).map(DmgTestSpec.Builder::create).map(testSpec -> {\n-            return new Object[] { testSpec };\n-        }).toList();\n+        \/\/ If we have non existing install directories make sure root is empty\n+        TKit.assertDirectoryEmpty(installDirRoot);\n","filename":"test\/jdk\/tools\/jpackage\/share\/InstallDirTest.java","additions":44,"deletions":103,"binary":false,"changes":147,"status":"modified"}]}