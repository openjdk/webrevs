{"files":[{"patch":"@@ -57,8 +57,0 @@\n-        superPkgBuilder.installDir().ifPresent(installDir -> {\n-            final var defaultInstallDirLocation = superPkgBuilder.defaultInstallDir().map(Path::getParent).orElseThrow();\n-            if (!defaultInstallDirLocation.equals(installDir)) {\n-                Log.info(I18N.format(\"message.install-dir-ignored\", defaultInstallDirLocation));\n-                superPkgBuilder.installDir(defaultInstallDirLocation);\n-            }\n-        });\n-\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackageBuilder.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -288,1 +288,3 @@\n-            return pkg.installDir().getParent().toString();\n+            \/\/ If we returning full path we need to replace '\/' with ':'.\n+            \/\/ In this case macOS will display link name as \"\/Users\/USER\/MyCompany\/MyApp\".\n+            return pkg.installDir().getParent().toString().replace('\/', ':');\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackager.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -20,1 +20,1 @@\n-  make new alias file at POSIX file \"DEPLOY_VOLUME_PATH\" to POSIX file \"DEPLOY_INSTALL_LOCATION\" with properties {name:\"DEPLOY_INSTALL_LOCATION_DISPLAY_NAME\"}\n+  do shell script \"(cd 'DEPLOY_VOLUME_PATH' && ln -s 'DEPLOY_INSTALL_LOCATION' 'DEPLOY_INSTALL_LOCATION_DISPLAY_NAME')\"\n@@ -31,1 +31,4 @@\n-      -- Position install location\n+      -- Position install location for default install dir\n+      set position of item theFile of theWindow to {390, 130}\n+    else if theFilePath ends with \"DEPLOY_INSTALL_LOCATION\" then\n+      -- Position install location for custom install dir\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/DMGsetup.scpt","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-message.install-dir-ignored=Warning: \"--install-dir\" option is ignored for DMG packaging. The installation directory will default to {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    record DmgTestSpec(Path installDir, boolean installDirIgnored, boolean runtimeInstaller) {\n+    record DmgTestSpec(Path installDir, boolean runtimeInstaller) {\n@@ -128,6 +128,0 @@\n-            Builder ignoredInstallDir(String v) {\n-                installDir = Path.of(v);\n-                installDirIgnored = true;\n-                return this;\n-            }\n-\n@@ -136,1 +130,0 @@\n-                installDirIgnored = false;\n@@ -146,1 +139,1 @@\n-                return new DmgTestSpec(installDir, installDirIgnored, runtimeInstaller);\n+                return new DmgTestSpec(installDir, runtimeInstaller);\n@@ -150,1 +143,0 @@\n-            private boolean installDirIgnored;\n@@ -158,3 +150,0 @@\n-            if (installDirIgnored) {\n-                sb.append(\", ignore\");\n-            }\n@@ -179,1 +168,0 @@\n-                cmd.validateOutput(createInstallDirWarningVerifier());\n@@ -182,18 +170,0 @@\n-\n-        private TextStreamVerifier createInstallDirWarningVerifier() {\n-            final var verifier = TKit.assertTextStream(\n-                    JPackageStringBundle.MAIN.cannedFormattedString(\"message.install-dir-ignored\", defaultDmgInstallDir()).getValue());\n-            if (installDirIgnored) {\n-                return verifier;\n-            } else {\n-                return verifier.negate();\n-            }\n-        }\n-\n-        private String defaultDmgInstallDir() {\n-            if (runtimeInstaller) {\n-                return \"\/Library\/Java\/JavaVirtualMachines\";\n-            } else {\n-                return \"\/Applications\";\n-            }\n-        }\n@@ -210,4 +180,4 @@\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\/bar\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\").runtimeInstaller(),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/foo\/bar\").runtimeInstaller(),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/foo\"),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/foo\/bar\"),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/foo\").runtimeInstaller(),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/foo\/bar\").runtimeInstaller(),\n@@ -215,2 +185,2 @@\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Library\/Java\/JavaVirtualMachines\"),\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Applications\").runtimeInstaller(),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/Library\/Java\/JavaVirtualMachines\"),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/Applications\").runtimeInstaller(),\n@@ -219,1 +189,1 @@\n-                DmgTestSpec.build().ignoredInstallDir(\"\/Applications\/foo\/bar\/buz\"),\n+                DmgTestSpec.build().acceptedInstallDir(\"\/Applications\/foo\/bar\/buz\"),\n@@ -222,1 +192,1 @@\n-                DmgTestSpec.build().runtimeInstaller().ignoredInstallDir(\"\/Library\/Java\/JavaVirtualMachines\/foo\/bar\/buz\")\n+                DmgTestSpec.build().runtimeInstaller().acceptedInstallDir(\"\/Library\/Java\/JavaVirtualMachines\/foo\/bar\/buz\")\n","filename":"test\/jdk\/tools\/jpackage\/share\/InstallDirTest.java","additions":10,"deletions":40,"binary":false,"changes":50,"status":"modified"}]}