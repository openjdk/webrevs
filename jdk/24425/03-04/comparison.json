{"files":[{"patch":"@@ -29,0 +29,2 @@\n+ * @modules java.base\/sun.security.x509\n+ *          java.base\/sun.security.util\n@@ -38,1 +40,1 @@\n-import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n@@ -40,1 +42,2 @@\n-import java.security.KeyFactory;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n@@ -42,0 +45,3 @@\n+import java.security.PrivateKey;\n+import java.security.PublicKey;\n+import java.security.SecureRandom;\n@@ -43,3 +49,5 @@\n-import java.security.cert.CertificateFactory;\n-import java.security.interfaces.RSAPrivateKey;\n-import java.security.spec.RSAPrivateKeySpec;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.Date;\n@@ -51,0 +59,1 @@\n+import jdk.test.lib.security.CertificateBuilder;\n@@ -52,0 +61,6 @@\n+import sun.security.x509.AuthorityKeyIdentifierExtension;\n+import sun.security.x509.GeneralName;\n+import sun.security.x509.GeneralNames;\n+import sun.security.x509.KeyIdentifier;\n+import sun.security.x509.SerialNumber;\n+import sun.security.x509.X500Name;\n@@ -56,205 +71,0 @@\n-    \/\/ Certificates and keys used in the test.\n-    \/\/ Certificates are signed with signature using MD5WithRSA algorithm.\n-    static String trustedCertStr =\n-            \"\"\"\n-            -----BEGIN CERTIFICATE-----\n-            MIICrDCCAhWgAwIBAgIBADANBgkqhkiG9w0BAQQFADBJMQswCQYDVQQGEwJVUzET\n-            MBEGA1UECBMKU29tZS1TdGF0ZTESMBAGA1UEBxMJU29tZS1DaXR5MREwDwYDVQQK\n-            EwhTb21lLU9yZzAeFw0wODEyMDgwMjQzMzZaFw0yODA4MjUwMjQzMzZaMEkxCzAJ\n-            BgNVBAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMRIwEAYDVQQHEwlTb21lLUNp\n-            dHkxETAPBgNVBAoTCFNvbWUtT3JnMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB\n-            gQDLxDggB76Ip5OwoUNRLdeOha9U3a2ieyNbz5kTU5lFfe5tui2\/461uPZ8a+QOX\n-            4BdVrhEmV94BKY4FPyH35zboLjfXSKxT1mAOx1Bt9sWF94umxZE1cjyU7vEX8HHj\n-            7BvOyk5AQrBt7moO1uWtPA\/JuoJPePiJl4kqlRJM2Akq6QIDAQABo4GjMIGgMB0G\n-            A1UdDgQWBBT6uVG\/TOfZhpgz+efLHvEzSfeoFDBxBgNVHSMEajBogBT6uVG\/TOfZ\n-            hpgz+efLHvEzSfeoFKFNpEswSTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUt\n-            U3RhdGUxEjAQBgNVBAcTCVNvbWUtQ2l0eTERMA8GA1UEChMIU29tZS1PcmeCAQAw\n-            DAYDVR0TBAUwAwEB\/zANBgkqhkiG9w0BAQQFAAOBgQBcIm534U123Hz+rtyYO5uA\n-            ofd81G6FnTfEAV8Kw9fGyyEbQZclBv34A9JsFKeMvU4OFIaixD7nLZ\/NZ+IWbhmZ\n-            LovmJXyCkOufea73pNiZ+f\/4\/ScZaIlM\/PRycQSqbFNd4j9Wott+08qxHPLpsf3P\n-            6Mvf0r1PNTY2hwTJLJmKtg==\n-            -----END CERTIFICATE-----\"\"\";\n-\n-    static String serverCertStr =\n-            \"\"\"\n-            -----BEGIN CERTIFICATE-----\n-            MIICqjCCAhOgAwIBAgIBBDANBgkqhkiG9w0BAQQFADBJMQswCQYDVQQGEwJVUzET\n-            MBEGA1UECBMKU29tZS1TdGF0ZTESMBAGA1UEBxMJU29tZS1DaXR5MREwDwYDVQQK\n-            EwhTb21lLU9yZzAeFw0wODEyMDgwMzIxMTZaFw0yODA4MjUwMzIxMTZaMHIxCzAJ\n-            BgNVBAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMRIwEAYDVQQHEwlTb21lLUNp\n-            dHkxETAPBgNVBAoTCFNvbWUtT3JnMRMwEQYDVQQLEwpTU0wtU2VydmVyMRIwEAYD\n-            VQQDEwlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKWsWxw3\n-            ot2ZiS2yebiP1Uil5xyEF41pnMasbfnyHR85GdrTch5u7ETMcKTcugAw9qBPPVR6\n-            YWrMV9AKf5UoGD+a2ZTyG8gkiH7+nQ89+1dTCLMgM9Q\/F0cU0c3qCNgOdU6vvszS\n-            7K+peknfwtmsuCRAkKYDVirQMAVALE+r2XSJAgMBAAGjeTB3MAkGA1UdEwQCMAAw\n-            CwYDVR0PBAQDAgXgMB0GA1UdDgQWBBTtbtv0tVbI+xoGYT8PCLumBNgWVDAfBgNV\n-            HSMEGDAWgBT6uVG\/TOfZhpgz+efLHvEzSfeoFDAdBgNVHREBAf8EEzARhwR\/AAAB\n-            gglsb2NhbGhvc3QwDQYJKoZIhvcNAQEEBQADgYEAWTrftGaL73lKLgRTrChGR+F6\n-            \/\/qvs0OM94IOKVeHz36NO49cMJmhJSbKdiGIkppBgpLIBoWxZlN9NOO9oSXFYZsZ\n-            rHaAe9\/lWMtQM7XpjqjhWVhB5VPvWFbkorQFMtRYLf7pkonGPFq8GOO1s0TKhogC\n-            jtYCdzlrU4v+om\/J3H8=\n-            -----END CERTIFICATE-----\"\"\";\n-\n-    static String clientCertStr =\n-            \"\"\"\n-            -----BEGIN CERTIFICATE-----\n-            MIICqjCCAhOgAwIBAgIBBTANBgkqhkiG9w0BAQQFADBJMQswCQYDVQQGEwJVUzET\n-            MBEGA1UECBMKU29tZS1TdGF0ZTESMBAGA1UEBxMJU29tZS1DaXR5MREwDwYDVQQK\n-            EwhTb21lLU9yZzAeFw0wODEyMDgwMzIyMTBaFw0yODA4MjUwMzIyMTBaMHIxCzAJ\n-            BgNVBAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMRIwEAYDVQQHEwlTb21lLUNp\n-            dHkxETAPBgNVBAoTCFNvbWUtT3JnMRMwEQYDVQQLEwpTU0wtQ2xpZW50MRIwEAYD\n-            VQQDEwlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALvwQDas\n-            JlRO9KNaAC9pIW+5ejqT7KL24Y7HY9gvEjCZLrDyj\/gnLSR4KIT3Ab+NRHndO9JV\n-            8848slshfe\/9M0qxo\/\/GyJu5D3xBNZf52zoFYAUVr1kXkqMQrRYc5AdTr6h2olYq\n-            ktP5KOB4z14fSKtcGd3hZ0O6dY31gqxDkkQbAgMBAAGjeTB3MAkGA1UdEwQCMAAw\n-            CwYDVR0PBAQDAgXgMB0GA1UdDgQWBBTNu8iFqpG9\/R2+zWd8\/7PpTKgi5jAfBgNV\n-            HSMEGDAWgBT6uVG\/TOfZhpgz+efLHvEzSfeoFDAdBgNVHREBAf8EEzARhwR\/AAAB\n-            gglsb2NhbGhvc3QwDQYJKoZIhvcNAQEEBQADgYEAwDc4f13abs9ZeEkrl5WV2Z74\n-            BlmBhXu8ExtAvoF9q6Ug6xV1MDpxbD124KfUHHL0kNMhMB1WIpC0kOnQBxziNpfS\n-            7u6GOc3tWLSxw\/sHoJGCefnRBllLZOoQuSBrWB8qgilL6HRmZ4UqDcXu4UCaLBZ0\n-            KGDT5ASEN6Lq2GtiP4Y=\n-            -----END CERTIFICATE-----\"\"\";\n-\n-    static byte[] serverPrivateExponent = {\n-            (byte)0x6e, (byte)0xa7, (byte)0x1b, (byte)0x83,\n-            (byte)0x51, (byte)0x35, (byte)0x9a, (byte)0x44,\n-            (byte)0x7d, (byte)0xf6, (byte)0xe3, (byte)0x89,\n-            (byte)0xa0, (byte)0xd7, (byte)0x90, (byte)0x60,\n-            (byte)0xa1, (byte)0x4e, (byte)0x27, (byte)0x21,\n-            (byte)0xa2, (byte)0x89, (byte)0x74, (byte)0xcc,\n-            (byte)0x9d, (byte)0x75, (byte)0x75, (byte)0x4e,\n-            (byte)0xc7, (byte)0x82, (byte)0xe3, (byte)0xe3,\n-            (byte)0xc3, (byte)0x7d, (byte)0x00, (byte)0x54,\n-            (byte)0xec, (byte)0x36, (byte)0xb1, (byte)0xdf,\n-            (byte)0x91, (byte)0x9c, (byte)0x7a, (byte)0xc0,\n-            (byte)0x62, (byte)0x0a, (byte)0xd6, (byte)0xa9,\n-            (byte)0x22, (byte)0x91, (byte)0x4a, (byte)0x29,\n-            (byte)0x2e, (byte)0x43, (byte)0xfa, (byte)0x8c,\n-            (byte)0xd8, (byte)0xe9, (byte)0xbe, (byte)0xd9,\n-            (byte)0x4f, (byte)0xca, (byte)0x23, (byte)0xc6,\n-            (byte)0xe4, (byte)0x3f, (byte)0xb8, (byte)0x72,\n-            (byte)0xcf, (byte)0x02, (byte)0xfc, (byte)0xf4,\n-            (byte)0x58, (byte)0x34, (byte)0x77, (byte)0x76,\n-            (byte)0xce, (byte)0x22, (byte)0x44, (byte)0x5f,\n-            (byte)0x2d, (byte)0xca, (byte)0xee, (byte)0xf5,\n-            (byte)0x43, (byte)0x56, (byte)0x47, (byte)0x71,\n-            (byte)0x0b, (byte)0x09, (byte)0x6b, (byte)0x5e,\n-            (byte)0xf2, (byte)0xc8, (byte)0xee, (byte)0xd4,\n-            (byte)0x6e, (byte)0x44, (byte)0x92, (byte)0x2a,\n-            (byte)0x7f, (byte)0xcc, (byte)0xa7, (byte)0xd4,\n-            (byte)0x5b, (byte)0xfb, (byte)0xf7, (byte)0x4a,\n-            (byte)0xa9, (byte)0xfb, (byte)0x54, (byte)0x18,\n-            (byte)0xd5, (byte)0xd5, (byte)0x14, (byte)0xba,\n-            (byte)0xa0, (byte)0x1c, (byte)0x13, (byte)0xb3,\n-            (byte)0x37, (byte)0x6b, (byte)0x37, (byte)0x59,\n-            (byte)0xed, (byte)0xdb, (byte)0x6d, (byte)0xb1\n-    };\n-\n-    static byte[] serverModulus = {\n-            (byte)0x00,\n-            (byte)0xa5, (byte)0xac, (byte)0x5b, (byte)0x1c,\n-            (byte)0x37, (byte)0xa2, (byte)0xdd, (byte)0x99,\n-            (byte)0x89, (byte)0x2d, (byte)0xb2, (byte)0x79,\n-            (byte)0xb8, (byte)0x8f, (byte)0xd5, (byte)0x48,\n-            (byte)0xa5, (byte)0xe7, (byte)0x1c, (byte)0x84,\n-            (byte)0x17, (byte)0x8d, (byte)0x69, (byte)0x9c,\n-            (byte)0xc6, (byte)0xac, (byte)0x6d, (byte)0xf9,\n-            (byte)0xf2, (byte)0x1d, (byte)0x1f, (byte)0x39,\n-            (byte)0x19, (byte)0xda, (byte)0xd3, (byte)0x72,\n-            (byte)0x1e, (byte)0x6e, (byte)0xec, (byte)0x44,\n-            (byte)0xcc, (byte)0x70, (byte)0xa4, (byte)0xdc,\n-            (byte)0xba, (byte)0x00, (byte)0x30, (byte)0xf6,\n-            (byte)0xa0, (byte)0x4f, (byte)0x3d, (byte)0x54,\n-            (byte)0x7a, (byte)0x61, (byte)0x6a, (byte)0xcc,\n-            (byte)0x57, (byte)0xd0, (byte)0x0a, (byte)0x7f,\n-            (byte)0x95, (byte)0x28, (byte)0x18, (byte)0x3f,\n-            (byte)0x9a, (byte)0xd9, (byte)0x94, (byte)0xf2,\n-            (byte)0x1b, (byte)0xc8, (byte)0x24, (byte)0x88,\n-            (byte)0x7e, (byte)0xfe, (byte)0x9d, (byte)0x0f,\n-            (byte)0x3d, (byte)0xfb, (byte)0x57, (byte)0x53,\n-            (byte)0x08, (byte)0xb3, (byte)0x20, (byte)0x33,\n-            (byte)0xd4, (byte)0x3f, (byte)0x17, (byte)0x47,\n-            (byte)0x14, (byte)0xd1, (byte)0xcd, (byte)0xea,\n-            (byte)0x08, (byte)0xd8, (byte)0x0e, (byte)0x75,\n-            (byte)0x4e, (byte)0xaf, (byte)0xbe, (byte)0xcc,\n-            (byte)0xd2, (byte)0xec, (byte)0xaf, (byte)0xa9,\n-            (byte)0x7a, (byte)0x49, (byte)0xdf, (byte)0xc2,\n-            (byte)0xd9, (byte)0xac, (byte)0xb8, (byte)0x24,\n-            (byte)0x40, (byte)0x90, (byte)0xa6, (byte)0x03,\n-            (byte)0x56, (byte)0x2a, (byte)0xd0, (byte)0x30,\n-            (byte)0x05, (byte)0x40, (byte)0x2c, (byte)0x4f,\n-            (byte)0xab, (byte)0xd9, (byte)0x74, (byte)0x89\n-    };\n-\n-    static byte[] clientPrivateExponent = {\n-            (byte)0x11, (byte)0xb7, (byte)0x6a, (byte)0x36,\n-            (byte)0x3d, (byte)0x30, (byte)0x37, (byte)0xce,\n-            (byte)0x61, (byte)0x9d, (byte)0x6c, (byte)0x84,\n-            (byte)0x8b, (byte)0xf3, (byte)0x9b, (byte)0x25,\n-            (byte)0x4f, (byte)0x14, (byte)0xc8, (byte)0xa4,\n-            (byte)0xdd, (byte)0x2f, (byte)0xd7, (byte)0x9a,\n-            (byte)0x17, (byte)0xbd, (byte)0x90, (byte)0x19,\n-            (byte)0xf7, (byte)0x05, (byte)0xfd, (byte)0xf2,\n-            (byte)0xd2, (byte)0xc5, (byte)0xf7, (byte)0x77,\n-            (byte)0xbe, (byte)0xea, (byte)0xe2, (byte)0x84,\n-            (byte)0x87, (byte)0x97, (byte)0x3a, (byte)0x41,\n-            (byte)0x96, (byte)0xb6, (byte)0x99, (byte)0xf8,\n-            (byte)0x94, (byte)0x8c, (byte)0x58, (byte)0x71,\n-            (byte)0x51, (byte)0x8c, (byte)0xf4, (byte)0x2a,\n-            (byte)0x20, (byte)0x9e, (byte)0x1a, (byte)0xa0,\n-            (byte)0x26, (byte)0x99, (byte)0x75, (byte)0xd6,\n-            (byte)0x31, (byte)0x53, (byte)0x43, (byte)0x39,\n-            (byte)0xf5, (byte)0x2a, (byte)0xa6, (byte)0x7e,\n-            (byte)0x34, (byte)0x42, (byte)0x51, (byte)0x2a,\n-            (byte)0x40, (byte)0x87, (byte)0x03, (byte)0x88,\n-            (byte)0x43, (byte)0x69, (byte)0xb2, (byte)0x89,\n-            (byte)0x6d, (byte)0x20, (byte)0xbd, (byte)0x7d,\n-            (byte)0x71, (byte)0xef, (byte)0x47, (byte)0x0a,\n-            (byte)0xdf, (byte)0x06, (byte)0xc1, (byte)0x69,\n-            (byte)0x66, (byte)0xa8, (byte)0x22, (byte)0x37,\n-            (byte)0x1a, (byte)0x77, (byte)0x1e, (byte)0xc7,\n-            (byte)0x94, (byte)0x4e, (byte)0x2c, (byte)0x27,\n-            (byte)0x69, (byte)0x45, (byte)0x5e, (byte)0xc8,\n-            (byte)0xf8, (byte)0x0c, (byte)0xb7, (byte)0xf8,\n-            (byte)0xc0, (byte)0x8f, (byte)0x99, (byte)0xc1,\n-            (byte)0xe5, (byte)0x28, (byte)0x9b, (byte)0xf9,\n-            (byte)0x4c, (byte)0x94, (byte)0xc6, (byte)0xb1\n-    };\n-\n-    static byte[] clientModulus = {\n-            (byte)0x00,\n-            (byte)0xbb, (byte)0xf0, (byte)0x40, (byte)0x36,\n-            (byte)0xac, (byte)0x26, (byte)0x54, (byte)0x4e,\n-            (byte)0xf4, (byte)0xa3, (byte)0x5a, (byte)0x00,\n-            (byte)0x2f, (byte)0x69, (byte)0x21, (byte)0x6f,\n-            (byte)0xb9, (byte)0x7a, (byte)0x3a, (byte)0x93,\n-            (byte)0xec, (byte)0xa2, (byte)0xf6, (byte)0xe1,\n-            (byte)0x8e, (byte)0xc7, (byte)0x63, (byte)0xd8,\n-            (byte)0x2f, (byte)0x12, (byte)0x30, (byte)0x99,\n-            (byte)0x2e, (byte)0xb0, (byte)0xf2, (byte)0x8f,\n-            (byte)0xf8, (byte)0x27, (byte)0x2d, (byte)0x24,\n-            (byte)0x78, (byte)0x28, (byte)0x84, (byte)0xf7,\n-            (byte)0x01, (byte)0xbf, (byte)0x8d, (byte)0x44,\n-            (byte)0x79, (byte)0xdd, (byte)0x3b, (byte)0xd2,\n-            (byte)0x55, (byte)0xf3, (byte)0xce, (byte)0x3c,\n-            (byte)0xb2, (byte)0x5b, (byte)0x21, (byte)0x7d,\n-            (byte)0xef, (byte)0xfd, (byte)0x33, (byte)0x4a,\n-            (byte)0xb1, (byte)0xa3, (byte)0xff, (byte)0xc6,\n-            (byte)0xc8, (byte)0x9b, (byte)0xb9, (byte)0x0f,\n-            (byte)0x7c, (byte)0x41, (byte)0x35, (byte)0x97,\n-            (byte)0xf9, (byte)0xdb, (byte)0x3a, (byte)0x05,\n-            (byte)0x60, (byte)0x05, (byte)0x15, (byte)0xaf,\n-            (byte)0x59, (byte)0x17, (byte)0x92, (byte)0xa3,\n-            (byte)0x10, (byte)0xad, (byte)0x16, (byte)0x1c,\n-            (byte)0xe4, (byte)0x07, (byte)0x53, (byte)0xaf,\n-            (byte)0xa8, (byte)0x76, (byte)0xa2, (byte)0x56,\n-            (byte)0x2a, (byte)0x92, (byte)0xd3, (byte)0xf9,\n-            (byte)0x28, (byte)0xe0, (byte)0x78, (byte)0xcf,\n-            (byte)0x5e, (byte)0x1f, (byte)0x48, (byte)0xab,\n-            (byte)0x5c, (byte)0x19, (byte)0xdd, (byte)0xe1,\n-            (byte)0x67, (byte)0x43, (byte)0xba, (byte)0x75,\n-            (byte)0x8d, (byte)0xf5, (byte)0x82, (byte)0xac,\n-            (byte)0x43, (byte)0x92, (byte)0x44, (byte)0x1b\n-    };\n-\n-    static char[] passphrase = \"passphrase\".toCharArray();\n@@ -262,0 +72,5 @@\n+    private X509Certificate trustedCert;\n+    private X509Certificate serverCert;\n+    private X509Certificate clientCert;\n+    private KeyPair serverKeys;\n+    private KeyPair clientKeys;\n@@ -263,1 +78,2 @@\n-    protected MD5NotAllowedInTLS13CertificateSignature(String protocol) {\n+    protected MD5NotAllowedInTLS13CertificateSignature(String protocol)\n+            throws Exception {\n@@ -266,0 +82,1 @@\n+        setupCertificates();\n@@ -269,1 +86,2 @@\n-        \/\/ MD5 is disabled by default in java.security config file.\n+        \/\/ MD5 is disabled by default in java.security config file,\n+        \/\/ re-enable it for our test.\n@@ -297,2 +115,2 @@\n-        return getSSLContext(trustedCertStr, serverCertStr,\n-                serverModulus, serverPrivateExponent, passphrase, protocol);\n+        return getSSLContext(\n+                trustedCert, serverCert, serverKeys.getPrivate(), protocol);\n@@ -303,2 +121,2 @@\n-        return getSSLContext(trustedCertStr, clientCertStr,\n-                clientModulus, clientPrivateExponent, passphrase, protocol);\n+        return getSSLContext(\n+                trustedCert, clientCert, clientKeys.getPrivate(), protocol);\n@@ -307,3 +125,3 @@\n-    private static SSLContext getSSLContext(String trustedCertStr,\n-            String keyCertStr, byte[] modulus,\n-            byte[] privateExponent, char[] passphrase, String protocol)\n+    private static SSLContext getSSLContext(\n+            X509Certificate trustedCertificate, X509Certificate keyCertificate,\n+            PrivateKey privateKey, String protocol)\n@@ -312,8 +130,0 @@\n-        \/\/ generate certificate from cert string\n-        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n-\n-        ByteArrayInputStream is =\n-                new ByteArrayInputStream(trustedCertStr.getBytes());\n-        Certificate trustedCert = cf.generateCertificate(is);\n-        is.close();\n-\n@@ -325,9 +135,1 @@\n-        ks.setCertificateEntry(\"TLS Signer\", trustedCert);\n-\n-        \/\/ generate the private key.\n-        RSAPrivateKeySpec priKeySpec = new RSAPrivateKeySpec(\n-                new BigInteger(modulus),\n-                new BigInteger(privateExponent));\n-        KeyFactory kf = KeyFactory.getInstance(\"RSA\");\n-        RSAPrivateKey priKey =\n-                (RSAPrivateKey) kf.generatePrivate(priKeySpec);\n+        ks.setCertificateEntry(\"TLS Signer\", trustedCertificate);\n@@ -336,4 +138,0 @@\n-        is = new ByteArrayInputStream(keyCertStr.getBytes());\n-        Certificate keyCert = cf.generateCertificate(is);\n-        is.close();\n-\n@@ -341,2 +139,2 @@\n-        chain[0] = keyCert;\n-        chain[1] = trustedCert;\n+        chain[0] = keyCertificate;\n+        chain[1] = trustedCertificate;\n@@ -345,1 +143,2 @@\n-        ks.setKeyEntry(\"Whatever\", priKey, passphrase, chain);\n+        final char[] passphrase = \"passphrase\".toCharArray();\n+        ks.setKeyEntry(\"Whatever\", privateKey, passphrase, chain);\n@@ -364,0 +163,68 @@\n+\n+    \/\/ Certificate-building helper methods.\n+    \/\/ Certificates are signed with signature using MD5WithRSA algorithm.\n+\n+    private void setupCertificates() throws Exception {\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\");\n+        kpg.initialize(1024);\n+        KeyPair caKeys = kpg.generateKeyPair();\n+        this.serverKeys = kpg.generateKeyPair();\n+        this.clientKeys = kpg.generateKeyPair();\n+\n+        this.trustedCert = createTrustedCert(caKeys);\n+\n+        this.serverCert = customCertificateBuilder(\n+                \"O=Some-Org, L=Some-City, ST=Some-State, C=US\",\n+                serverKeys.getPublic(), caKeys.getPublic())\n+                .addBasicConstraintsExt(false, false, -1)\n+                .build(trustedCert, caKeys.getPrivate(), \"MD5WithRSA\");\n+\n+        this.clientCert = customCertificateBuilder(\n+                \"CN=localhost, OU=SSL-Client, O=Some-Org, L=Some-City, ST=Some-State, C=US\",\n+                clientKeys.getPublic(), caKeys.getPublic())\n+                .addBasicConstraintsExt(false, false, -1)\n+                .build(trustedCert, caKeys.getPrivate(), \"MD5WithRSA\");\n+    }\n+\n+    private static X509Certificate createTrustedCert(KeyPair caKeys)\n+            throws Exception {\n+        SecureRandom random = new SecureRandom();\n+\n+        KeyIdentifier kid = new KeyIdentifier(caKeys.getPublic());\n+        GeneralNames gns = new GeneralNames();\n+        GeneralName name = new GeneralName(new X500Name(\n+                \"O=Some-Org, L=Some-City, ST=Some-State, C=US\"));\n+        gns.add(name);\n+        BigInteger serialNumber = BigInteger.valueOf(\n+                random.nextLong(1000000) + 1);\n+        return customCertificateBuilder(\n+                \"O=Some-Org, L=Some-City, ST=Some-State, C=US\",\n+                caKeys.getPublic(), caKeys.getPublic())\n+                .setSerialNumber(serialNumber)\n+                .addExtension(new AuthorityKeyIdentifierExtension(kid, gns,\n+                        new SerialNumber(serialNumber)))\n+                .addBasicConstraintsExt(true, true, -1)\n+                .build(null, caKeys.getPrivate(), \"MD5WithRSA\");\n+    }\n+\n+    private static CertificateBuilder customCertificateBuilder(\n+            String subjectName, PublicKey publicKey, PublicKey caKey)\n+            throws CertificateException, IOException {\n+        SecureRandom random = new SecureRandom();\n+\n+        CertificateBuilder builder = new CertificateBuilder()\n+                .setSubjectName(subjectName)\n+                .setPublicKey(publicKey)\n+                .setNotAfter(\n+                        Date.from(Instant.now().minus(1, ChronoUnit.HOURS)))\n+                .setNotAfter(Date.from(Instant.now().plus(1, ChronoUnit.HOURS)))\n+                .setSerialNumber(\n+                        BigInteger.valueOf(random.nextLong(1000000) + 1))\n+                .addSubjectKeyIdExt(publicKey)\n+                .addAuthorityKeyIdExt(caKey);\n+        builder.addKeyUsageExt(\n+                new boolean[]{true, true, true, true, true, true});\n+\n+        return builder;\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/MD5NotAllowedInTLS13CertificateSignature.java","additions":110,"deletions":243,"binary":false,"changes":353,"status":"modified"}]}