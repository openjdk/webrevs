{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Optional;\n@@ -61,6 +60,0 @@\n-    \/**\n-     * {@return the {@link ClassModel} representing the class being transformed,\n-     * if this class builder represents the transformation of some {@link ClassModel}}\n-     *\/\n-    Optional<ClassModel> original();\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassBuilder.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -131,6 +131,0 @@\n-    \/**\n-     * {@return the {@link CodeModel} representing the method body being transformed,\n-     * if this code builder represents the transformation of some {@link CodeModel}}\n-     *\/\n-    Optional<CodeModel> original();\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CodeBuilder.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Optional;\n@@ -71,5 +70,0 @@\n-    \/**\n-     * {@return the {@link FieldModel} representing the field being transformed,\n-     * if this field builder represents the transformation of some {@link FieldModel}}\n-     *\/\n-    Optional<FieldModel> original();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/FieldBuilder.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Optional;\n@@ -53,6 +52,0 @@\n-    \/**\n-     * {@return the {@link MethodModel} representing the method being transformed,\n-     * if this method builder represents the transformation of some {@link MethodModel}}\n-     *\/\n-    Optional<MethodModel> original();\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/MethodBuilder.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,3 +27,0 @@\n-import java.lang.classfile.constantpool.ConstantPool;\n-import java.util.Optional;\n-\n@@ -31,0 +28,1 @@\n+import java.lang.classfile.constantpool.ConstantPool;\n@@ -51,4 +49,0 @@\n-    public Optional<M> original() {\n-        return Optional.ofNullable(original);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractDirectBuilder.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,5 +73,0 @@\n-    @Override\n-    public Optional<CodeModel> original() {\n-        return Optional.ofNullable(original);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedCodeBuilder.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-    private final FieldModel original;\n@@ -49,2 +48,1 @@\n-                                Utf8Entry type,\n-                                FieldModel original) {\n+                                Utf8Entry type) {\n@@ -56,1 +54,0 @@\n-        this.original = original;\n@@ -64,5 +61,0 @@\n-    @Override\n-    public Optional<FieldModel> original() {\n-        return Optional.ofNullable(original);\n-    }\n-\n@@ -94,2 +86,1 @@\n-            FieldModel fm = original().orElse(null);\n-            return fm == null? Optional.empty() : fm.parent();\n+            return Optional.empty();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedFieldBuilder.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -84,5 +84,0 @@\n-    @Override\n-    public Optional<MethodModel> original() {\n-        return Optional.ofNullable(original);\n-    }\n-\n@@ -165,1 +160,1 @@\n-            return original().flatMap(MethodModel::parent);\n+            return Optional.empty();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedMethodBuilder.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.util.Optional;\n@@ -54,5 +53,0 @@\n-    @Override\n-    public Optional<ClassModel> original() {\n-        return terminal.original();\n-    }\n-\n@@ -62,1 +56,1 @@\n-                                                        name, descriptor, null)\n+                                                        name, descriptor)\n@@ -71,2 +65,1 @@\n-                                                                field.fieldName(), field.fieldType(),\n-                                                                field);\n+                                                                field.fieldName(), field.fieldType());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ChainedClassBuilder.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.util.Optional;\n@@ -32,1 +31,0 @@\n-import java.lang.classfile.FieldModel;\n@@ -53,5 +51,0 @@\n-    @Override\n-    public Optional<FieldModel> original() {\n-        return terminal.original();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ChainedFieldBuilder.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.util.Optional;\n@@ -35,1 +34,0 @@\n-import java.lang.classfile.MethodModel;\n@@ -78,5 +76,0 @@\n-    @Override\n-    public Optional<MethodModel> original() {\n-        return terminal.original();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ChainedMethodBuilder.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.util.Optional;\n-\n@@ -30,1 +28,0 @@\n-import java.lang.classfile.CodeModel;\n@@ -62,5 +59,0 @@\n-    @Override\n-    public Optional<CodeModel> original() {\n-        return terminal.original();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/NonterminalCodeBuilder.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"}]}