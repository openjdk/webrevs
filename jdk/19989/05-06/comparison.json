{"files":[{"patch":"@@ -1607,4 +1607,0 @@\n-  \/\/ NB! Callers may assume that, when temp2_reg is a valid register,\n-  \/\/ this code sets it to a nonzero value.\n-  bool temp2_reg_was_valid = temp2_reg->is_valid();\n-\n@@ -1644,1 +1640,3 @@\n-  if (temp2_reg_was_valid) {\n+  \/\/ NB! Callers may assume that, when set_cond_codes is true, this\n+  \/\/ code sets temp2_reg to a nonzero value.\n+  if (set_cond_codes) {\n@@ -1718,1 +1716,1 @@\n-  ldr(r_bitmap, Address(r_sub_klass, Klass::bitmap_offset()));\n+  ldr(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n@@ -1720,1 +1718,1 @@\n-    ldrd(vtemp, Address(r_sub_klass, Klass::bitmap_offset()));\n+    ldrd(vtemp, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n@@ -1814,1 +1812,1 @@\n-  ldr(r_bitmap, Address(r_sub_klass, Klass::bitmap_offset()));\n+  ldr(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2196,1 +2196,1 @@\n-  ld(r_bitmap, in_bytes(Klass::bitmap_offset()), r_sub_klass);\n+  ld(r_bitmap, in_bytes(Klass::secondary_supers_bitmap_offset()), r_sub_klass);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3689,1 +3689,1 @@\n-  ld(r_bitmap, Address(r_sub_klass, Klass::bitmap_offset()));\n+  ld(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4967,1 +4967,1 @@\n-  movq(r_bitmap, Address(r_sub_klass, Klass::bitmap_offset()));\n+  movq(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n@@ -5083,1 +5083,1 @@\n-  movq(r_bitmap, Address(r_sub_klass, Klass::bitmap_offset()));\n+  movq(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-bool Klass::linear_search_secondary_supers(Klass* k) const {\n+bool Klass::linear_search_secondary_supers(const Klass* k) const {\n@@ -184,0 +184,4 @@\n+  if (rotated_bitmap == SECONDARY_SUPERS_BITMAP_FULL) {\n+    return linear_search_secondary_supers(k);\n+  }\n+\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -401,1 +401,1 @@\n-  bool linear_search_secondary_supers(Klass* k) const;\n+  bool linear_search_secondary_supers(const Klass* k) const;\n@@ -436,1 +436,2 @@\n-  static ByteSize bitmap_offset()                { return byte_offset_of(Klass, _secondary_supers_bitmap); }\n+  static ByteSize secondary_supers_bitmap_offset()\n+                                                 { return byte_offset_of(Klass, _secondary_supers_bitmap); }\n@@ -537,0 +538,1 @@\n+\n@@ -538,11 +540,1 @@\n-  bool is_subtype_of(Klass* k) const {\n-    guarantee(secondary_supers() != nullptr, \"must be\");\n-    const juint off = k->super_check_offset();\n-    const juint secondary_offset = in_bytes(secondary_super_cache_offset());\n-    if (off == secondary_offset) {\n-      return search_secondary_supers(k);\n-    } else {\n-      Klass* sup = *(Klass**)( (address)this + off );\n-      return (sup == k);\n-    }\n-  }\n+  bool is_subtype_of(Klass* k) const;\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -80,0 +80,13 @@\n+\/\/ subtype check: true if is_subclass_of, or if k is interface and receiver implements it\n+inline bool Klass::is_subtype_of(Klass* k) const {\n+  guarantee(secondary_supers() != nullptr, \"must be\");\n+  const juint off = k->super_check_offset();\n+  const juint secondary_offset = in_bytes(secondary_super_cache_offset());\n+  if (off == secondary_offset) {\n+    return search_secondary_supers(k);\n+  } else {\n+    Klass* sup = *(Klass**)( (address)this + off );\n+    return (sup == k);\n+  }\n+}\n+\n@@ -84,4 +97,0 @@\n-  if (bitmap == SECONDARY_SUPERS_BITMAP_FULL) {\n-    return linear_search_secondary_supers(k);\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/klass.inline.hpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}