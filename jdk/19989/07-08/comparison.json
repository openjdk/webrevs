{"files":[{"patch":"@@ -116,2 +116,2 @@\n-      hash_code = hash_code % 3;\n-      hash_code = hash_code * (SECONDARY_SUPERS_TABLE_SIZE \/ 3);\n+      int codes[3] = { 0, SECONDARY_SUPERS_TABLE_SIZE \/ 2, SECONDARY_SUPERS_TABLE_SIZE - 1};\n+      hash_code = codes[hash_code % 3];\n@@ -370,5 +370,4 @@\n-  \/\/ For performance reasons we don't use a hashed table unless there\n-  \/\/ are at least two empty slots in it. If there were only one empty\n-  \/\/ slot it'd take a long time to create the table and the resulting\n-  \/\/ search would be no faster than linear probing.\n-  if (length > SECONDARY_SUPERS_TABLE_SIZE - 2) {\n+  \/\/ Don't attempt to hash a table that's completely full, because in\n+  \/\/ the case of an absent interface linear probing would not\n+  \/\/ terminate.\n+  if (length >= SECONDARY_SUPERS_TABLE_SIZE) {\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}