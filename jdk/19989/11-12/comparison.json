{"files":[{"patch":"@@ -16238,3 +16238,3 @@\n-instruct partialSubtypeCheckSuper(iRegP_R4 sub, iRegP_R0 super, vRegD_V0 vtemp, iRegP_R5 result,\n-                                 iRegP_R1 tempR1, iRegP_R2 tempR2, iRegP_R3 tempR3,\n-                                 rFlagsReg cr)\n+instruct partialSubtypeCheckVarSuper(iRegP_R4 sub, iRegP_R0 super, vRegD_V0 vtemp, iRegP_R5 result,\n+                                     iRegP_R1 tempR1, iRegP_R2 tempR2, iRegP_R3 tempR3,\n+                                     rFlagsReg cr)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4844,3 +4844,3 @@\n-    lookup_secondary_supers_table(sub_klass,\n-                                  super_klass,\n-                                  temp_reg, temp2_reg, temp3_reg, temp4_reg, result_reg);\n+    lookup_secondary_supers_table_var(sub_klass,\n+\t\t\t\t      super_klass,\n+\t\t\t\t      temp_reg, temp2_reg, temp3_reg, temp4_reg, result_reg);\n@@ -4943,8 +4943,8 @@\n-void MacroAssembler::lookup_secondary_supers_table(Register r_sub_klass,\n-                                                   Register r_super_klass,\n-                                                   Register temp1,\n-                                                   Register temp2,\n-                                                   Register temp3,\n-                                                   Register temp4,\n-                                                   Register result,\n-                                                   u1 super_klass_slot) {\n+void MacroAssembler::lookup_secondary_supers_table_const(Register r_sub_klass,\n+\t\t\t\t\t\t\t Register r_super_klass,\n+\t\t\t\t\t\t\t Register temp1,\n+\t\t\t\t\t\t\t Register temp2,\n+\t\t\t\t\t\t\t Register temp3,\n+\t\t\t\t\t\t\t Register temp4,\n+\t\t\t\t\t\t\t Register result,\n+\t\t\t\t\t\t\t u1 super_klass_slot) {\n@@ -5046,7 +5046,7 @@\n-void MacroAssembler::lookup_secondary_supers_table(Register r_sub_klass,\n-                                                   Register r_super_klass,\n-                                                   Register temp1,\n-                                                   Register temp2,\n-                                                   Register temp3,\n-                                                   Register temp4,\n-                                                   Register result) {\n+void MacroAssembler::lookup_secondary_supers_table_var(Register r_sub_klass,\n+\t\t\t\t\t\t       Register r_super_klass,\n+\t\t\t\t\t\t       Register temp1,\n+\t\t\t\t\t\t       Register temp2,\n+\t\t\t\t\t\t       Register temp3,\n+\t\t\t\t\t\t       Register temp4,\n+\t\t\t\t\t\t       Register result) {\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -688,8 +688,8 @@\n-  void lookup_secondary_supers_table(Register sub_klass,\n-                                     Register super_klass,\n-                                     Register temp1,\n-                                     Register temp2,\n-                                     Register temp3,\n-                                     Register temp4,\n-                                     Register result,\n-                                     u1 super_klass_slot);\n+  void lookup_secondary_supers_table_const(Register sub_klass,\n+                                           Register super_klass,\n+                                           Register temp1,\n+                                           Register temp2,\n+                                           Register temp3,\n+                                           Register temp4,\n+                                           Register result,\n+                                           u1 super_klass_slot);\n@@ -702,7 +702,7 @@\n-  void lookup_secondary_supers_table(Register sub_klass,\n-                                     Register super_klass,\n-                                     Register temp1,\n-                                     Register temp2,\n-                                     Register temp3,\n-                                     Register temp4,\n-                                     Register result);\n+  void lookup_secondary_supers_table_var(Register sub_klass,\n+                                         Register super_klass,\n+                                         Register temp1,\n+                                         Register temp2,\n+                                         Register temp3,\n+                                         Register temp4,\n+                                         Register result);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -4001,4 +4001,4 @@\n-  __ lookup_secondary_supers_table(r_sub_klass, r_super_klass,\n-                                   rdx, rcx, rbx, r11, \/\/ temps\n-                                   result,\n-                                   super_klass_index);\n+  __ lookup_secondary_supers_table_const(r_sub_klass, r_super_klass,\n+                                         rdx, rcx, rbx, r11, \/\/ temps\n+                                         result,\n+                                         super_klass_index);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -12200,1 +12200,1 @@\n-instruct partialSubtypeCheckConstSuper(rsi_RegP sub, rax_RegP super_reg, immP super_con, rdi_RegP result,\n+instruct partialSubtypeCheckVarSuper(rsi_RegP sub, rax_RegP super, rdi_RegP result,\n@@ -12204,1 +12204,1 @@\n-  match(Set result (PartialSubtypeCheck sub (Binary super_reg super_con)));\n+  match(Set result (PartialSubtypeCheck sub super));\n@@ -12208,2 +12208,2 @@\n-  ins_cost(700);  \/\/ smaller than the next version\n-  format %{ \"partialSubtypeCheck $result, $sub, $super_reg, $super_con\" %}\n+  ins_cost(1000);\n+  format %{ \"partialSubtypeCheck $result, $sub, $super\" %}\n@@ -12212,8 +12212,2 @@\n-    u1 super_klass_slot = ((Klass*)$super_con$$constant)->hash_slot();\n-    if (InlineSecondarySupersTest) {\n-      __ lookup_secondary_supers_table($sub$$Register, $super_reg$$Register, $temp1$$Register, $temp2$$Register,\n-                                       $temp3$$Register, $temp4$$Register, $result$$Register,\n-                                       super_klass_slot);\n-    } else {\n-      __ call(RuntimeAddress(StubRoutines::lookup_secondary_supers_table_stub(super_klass_slot)));\n-    }\n+    __ lookup_secondary_supers_table_var($sub$$Register, $super$$Register, $temp1$$Register, $temp2$$Register,\n+\t\t\t\t\t $temp3$$Register, $temp4$$Register, $result$$Register);\n@@ -12225,1 +12219,1 @@\n-instruct partialSubtypeCheckVarSuper(rsi_RegP sub, rax_RegP super, rdi_RegP result,\n+instruct partialSubtypeCheckConstSuper(rsi_RegP sub, rax_RegP super_reg, immP super_con, rdi_RegP result,\n@@ -12229,1 +12223,1 @@\n-  match(Set result (PartialSubtypeCheck sub super));\n+  match(Set result (PartialSubtypeCheck sub (Binary super_reg super_con)));\n@@ -12233,2 +12227,2 @@\n-  ins_cost(1000);\n-  format %{ \"partialSubtypeCheck $result, $sub, $super\" %}\n+  ins_cost(700);  \/\/ smaller than the next version\n+  format %{ \"partialSubtypeCheck $result, $sub, $super_reg, $super_con\" %}\n@@ -12237,2 +12231,8 @@\n-    __ lookup_secondary_supers_table($sub$$Register, $super$$Register, $temp1$$Register, $temp2$$Register,\n-                                     $temp3$$Register, $temp4$$Register, $result$$Register);\n+    u1 super_klass_slot = ((Klass*)$super_con$$constant)->hash_slot();\n+    if (InlineSecondarySupersTest) {\n+      __ lookup_secondary_supers_table_const($sub$$Register, $super_reg$$Register, $temp1$$Register, $temp2$$Register,\n+                                       $temp3$$Register, $temp4$$Register, $result$$Register,\n+                                       super_klass_slot);\n+    } else {\n+      __ call(RuntimeAddress(StubRoutines::lookup_secondary_supers_table_stub(super_klass_slot)));\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"}]}