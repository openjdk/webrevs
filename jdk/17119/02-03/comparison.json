{"files":[{"patch":"@@ -43,0 +43,1 @@\n+import static org.testng.Assert.assertNotEquals;\n@@ -136,1 +137,1 @@\n-        InputStream is1 = repeat(0, Integer.MAX_VALUE);\n+        InputStream is1 = repeat(0, Long.MAX_VALUE);\n@@ -138,2 +139,2 @@\n-        assertEquals(is1.available(), Integer.MAX_VALUE);\n-        assertEquals(is2.available(), 1);\n+        assertNotEquals(is1.available(), 0);\n+        assertNotEquals(is2.available(), 0);\n@@ -147,0 +148,6 @@\n+    \/*\n+     * Produces an input stream that returns b count times.\n+     * Builds a dysfunctional mock that solely implements\n+     * available() and transferTo() particually,\n+     * but fails with any other operation.\n+     *\/\n@@ -149,1 +156,1 @@\n-            private int pos;\n+            private long pos;\n@@ -156,4 +163,7 @@\n-                if (pos >= count)\n-                    return -1;\n-                pos++;\n-                return b;\n+                throw new UnsupportedOperationException();\n+            }\n+            @Override\n+            public long transferTo(OutputStream os) throws IOException {\n+                \/\/ skipping actual writing to os to spare time\n+                pos += count;\n+                return count;\n","filename":"test\/jdk\/java\/io\/SequenceInputStream\/TransferTo.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}