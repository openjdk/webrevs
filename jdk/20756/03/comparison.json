{"files":[{"patch":"@@ -90,1 +90,1 @@\n-            throw new ConstantPoolException(\"Bad CP index: \" + index);\n+            throw badCP(index);\n@@ -96,1 +96,1 @@\n-            throw new ConstantPoolException(\"Unusable CP index: \" + index);\n+            throw unusableCP(index);\n@@ -101,0 +101,8 @@\n+    private static ConstantPoolException badCP(int index) {\n+        return new ConstantPoolException(\"Bad CP index: \" + index);\n+    }\n+\n+    private static ConstantPoolException unusableCP(int index) {\n+        return new ConstantPoolException(\"Unusable CP index: \" + index);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/SplitConstantPool.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import jdk.internal.constant.PrimitiveClassDescImpl;\n@@ -352,0 +353,1 @@\n+            var labelContext = this.labelContext;\n@@ -393,3 +395,4 @@\n-                b.writeU2(framesCount);\n-                Frame prevFrame =  new Frame(classHierarchy);\n-                prevFrame.setLocalsFromArg(methodName, methodDesc, isStatic, thisType);\n+                var gen = StackMapGenerator.this;\n+                b.writeU2(gen.framesCount);\n+                Frame prevFrame = gen.new Frame(gen.classHierarchy);\n+                prevFrame.setLocalsFromArg(gen.methodName, gen.methodDesc, gen.isStatic, gen.thisType);\n@@ -397,2 +400,2 @@\n-                for (int i = 0; i < framesCount; i++) {\n-                    var fr = frames[i];\n+                for (int i = 0; i < gen.framesCount; i++) {\n+                    var fr = gen.frames[i];\n@@ -400,1 +403,1 @@\n-                    fr.writeTo(b, prevFrame, cp);\n+                    fr.writeTo(b, prevFrame, gen.cp);\n@@ -463,0 +466,1 @@\n+        var currentFrame = this.currentFrame;\n@@ -503,1 +507,1 @@\n-                currentFrame.decStack(2).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack2PushStack(Type.INTEGER_TYPE);\n@@ -505,1 +509,1 @@\n-                currentFrame.decStack(2).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack2PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -507,1 +511,1 @@\n-                currentFrame.decStack(2).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack2PushStack(Type.FLOAT_TYPE);\n@@ -509,1 +513,1 @@\n-                currentFrame.decStack(2).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack2PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -511,1 +515,1 @@\n-                currentFrame.pushStack((type1 = currentFrame.decStack(1).popStack()) == Type.NULL_TYPE ? Type.NULL_TYPE : type1.getComponent());\n+                currentFrame.pushStack((type1 = currentFrame.decStack().popStack()) == Type.NULL_TYPE ? Type.NULL_TYPE : type1.getComponent());\n@@ -513,1 +517,1 @@\n-                currentFrame.decStack(1).setLocal(bcs.getIndex(), Type.INTEGER_TYPE);\n+                currentFrame.decStack().setLocal(bcs.getIndex(), Type.INTEGER_TYPE);\n@@ -515,1 +519,1 @@\n-                currentFrame.decStack(1).setLocal(opcode - ISTORE_0, Type.INTEGER_TYPE);\n+                currentFrame.decStack().setLocal(opcode - ISTORE_0, Type.INTEGER_TYPE);\n@@ -521,1 +525,1 @@\n-                currentFrame.decStack(1).setLocal(bcs.getIndex(), Type.FLOAT_TYPE);\n+                currentFrame.decStack().setLocal(bcs.getIndex(), Type.FLOAT_TYPE);\n@@ -523,1 +527,1 @@\n-                currentFrame.decStack(1).setLocal(opcode - FSTORE_0, Type.FLOAT_TYPE);\n+                currentFrame.decStack().setLocal(opcode - FSTORE_0, Type.FLOAT_TYPE);\n@@ -537,1 +541,1 @@\n-                currentFrame.decStack(1);\n+                currentFrame.decStack();\n@@ -539,1 +543,1 @@\n-                currentFrame.decStack(2);\n+                 currentFrame.decStack(2);\n@@ -541,36 +545,13 @@\n-                currentFrame.pushStack(type1 = currentFrame.popStack()).pushStack(type1);\n-            case DUP_X1 -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                currentFrame.pushStack(type1).pushStack(type2).pushStack(type1);\n-            }\n-            case DUP_X2 -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                type3 = currentFrame.popStack();\n-                currentFrame.pushStack(type1).pushStack(type3).pushStack(type2).pushStack(type1);\n-            }\n-            case DUP2 -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                currentFrame.pushStack(type2).pushStack(type1).pushStack(type2).pushStack(type1);\n-            }\n-            case DUP2_X1 -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                type3 = currentFrame.popStack();\n-                currentFrame.pushStack(type2).pushStack(type1).pushStack(type3).pushStack(type2).pushStack(type1);\n-            }\n-            case DUP2_X2 -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                type3 = currentFrame.popStack();\n-                type4 = currentFrame.popStack();\n-                currentFrame.pushStack(type2).pushStack(type1).pushStack(type4).pushStack(type3).pushStack(type2).pushStack(type1);\n-            }\n-            case SWAP -> {\n-                type1 = currentFrame.popStack();\n-                type2 = currentFrame.popStack();\n-                currentFrame.pushStack(type1);\n-                currentFrame.pushStack(type2);\n-            }\n+                 currentFrame.dup();\n+            case DUP_X1 ->\n+                 currentFrame.dup_x1();\n+            case DUP_X2 ->\n+                 currentFrame.dup_x2();\n+            case DUP2 ->\n+                 currentFrame.dup2();\n+            case DUP2_X1 ->\n+                 currentFrame.dup2_x1();\n+            case DUP2_X2 ->\n+                 currentFrame.dup2_x2();\n+            case SWAP ->\n+                currentFrame.swap();\n@@ -578,1 +559,1 @@\n-                currentFrame.decStack(2).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack2PushStack(Type.INTEGER_TYPE);\n@@ -580,1 +561,1 @@\n-                currentFrame.decStack(1).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack1PushStack(Type.INTEGER_TYPE);\n@@ -582,1 +563,1 @@\n-                currentFrame.decStack(4).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack4PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -584,1 +565,1 @@\n-                currentFrame.decStack(2).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack2PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -586,1 +567,1 @@\n-                currentFrame.decStack(3).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack3PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -588,1 +569,1 @@\n-                currentFrame.decStack(2).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack2PushStack(Type.FLOAT_TYPE);\n@@ -590,1 +571,1 @@\n-                currentFrame.decStack(1).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack1PushStack(Type.FLOAT_TYPE);\n@@ -592,1 +573,1 @@\n-                currentFrame.decStack(4).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack4PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -594,1 +575,1 @@\n-                currentFrame.decStack(2).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack2PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -598,1 +579,1 @@\n-                currentFrame.decStack(1).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack1PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -600,1 +581,1 @@\n-                currentFrame.decStack(2).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack2PushStack(Type.INTEGER_TYPE);\n@@ -602,1 +583,1 @@\n-                currentFrame.decStack(1).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack1PushStack(Type.FLOAT_TYPE);\n@@ -604,1 +585,1 @@\n-                currentFrame.decStack(1).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack1PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -606,1 +587,1 @@\n-                currentFrame.decStack(2).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack2PushStack(Type.FLOAT_TYPE);\n@@ -608,1 +589,1 @@\n-                currentFrame.decStack(2).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack2PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -610,1 +591,1 @@\n-                currentFrame.decStack(1).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack1PushStack(Type.INTEGER_TYPE);\n@@ -612,1 +593,1 @@\n-                currentFrame.decStack(1).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack1PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -614,1 +595,1 @@\n-                currentFrame.decStack(1).pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+                currentFrame.decStack1PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n@@ -616,1 +597,1 @@\n-                currentFrame.decStack(2).pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+                currentFrame.decStack2PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n@@ -618,1 +599,1 @@\n-                currentFrame.decStack(2).pushStack(Type.FLOAT_TYPE);\n+                currentFrame.decStack2PushStack(Type.FLOAT_TYPE);\n@@ -620,1 +601,1 @@\n-                currentFrame.decStack(1).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack1PushStack(Type.INTEGER_TYPE);\n@@ -622,1 +603,1 @@\n-                currentFrame.decStack(4).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack4PushStack(Type.INTEGER_TYPE);\n@@ -624,1 +605,1 @@\n-                currentFrame.decStack(2).pushStack(Type.INTEGER_TYPE);\n+                currentFrame.decStack2PushStack(Type.INTEGER_TYPE);\n@@ -628,1 +609,1 @@\n-                checkJumpTarget(currentFrame.decStack(1), bcs.dest());\n+                checkJumpTarget(currentFrame.decStack(), bcs.dest());\n@@ -646,1 +627,1 @@\n-                currentFrame.decStack(1);\n+                currentFrame.decStack();\n@@ -656,1 +637,1 @@\n-                currentFrame.decStack(1).pushStack(getNewarrayType(bcs.getIndex()));\n+                currentFrame.decStack1PushStack(getNewarrayType(bcs.getIndex()));\n@@ -660,1 +641,1 @@\n-                currentFrame.decStack(1).pushStack(cpIndexToType(bcs.getIndexU2(), cp));\n+                currentFrame.decStack1PushStack(cpIndexToType(bcs.getIndexU2(), cp));\n@@ -663,4 +644,3 @@\n-                int dim = bcs.getU1Unchecked(bcs.bci() + 3);\n-                for (int i = 0; i < dim; i++) {\n-                    currentFrame.popStack();\n-                }\n+                currentFrame.decStack(\n+                        bcs.getU1Unchecked(bcs.bci() + 3) \/* dim *\/\n+                );\n@@ -681,0 +661,1 @@\n+        var currentFrame = this.currentFrame;\n@@ -693,1 +674,4 @@\n-        switch (cp.entryByIndex(index).tag()) {\n+        var e = cp.entryByIndex(index);\n+        byte tag = e.tag();\n+        var currentFrame = this.currentFrame;\n+        switch (tag) {\n@@ -713,1 +697,1 @@\n-                currentFrame.pushStack(cp.entryByIndex(index, ConstantDynamicEntry.class).asSymbol().constantType());\n+                currentFrame.pushStack(ClassReaderImpl.checkType(e, index, ConstantDynamicEntry.class).asSymbol().constantType());\n@@ -715,1 +699,1 @@\n-                throw generatorError(\"CP entry #%d %s is not loadable constant\".formatted(index, cp.entryByIndex(index).tag()));\n+                throw generatorError(\"CP entry #%d %s is not loadable constant\".formatted(index, tag));\n@@ -724,1 +708,1 @@\n-        currentFrame.popStack();\n+        currentFrame.decStack();\n@@ -768,2 +752,1 @@\n-                currentFrame.decStack(1);\n-                currentFrame.pushStack(desc);\n+                currentFrame.dec1PushStack(desc);\n@@ -807,1 +790,1 @@\n-                currentFrame.decStack(1);\n+                currentFrame.decStack();\n@@ -820,1 +803,1 @@\n-        currentFrame.popStack();\n+        currentFrame.decStack();\n@@ -824,0 +807,7 @@\n+    \/**\n+     * {@return the generator error with stack underflow}\n+     *\/\n+    private IllegalArgumentException stackUnderflow() {\n+        return generatorError(\"Operand stack underflow\");\n+    }\n+\n@@ -903,0 +893,1 @@\n+\n@@ -971,0 +962,95 @@\n+        Frame dup() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 1) throw stackUnderflow();\n+            checkStack(stackSize + 1);\n+            stack[stackSize] = stack[stackSize - 1];\n+            this.stackSize = stackSize + 1;\n+            return this;\n+        }\n+\n+        Frame dup_x1() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 2) throw stackUnderflow();\n+            checkStack(stackSize + 1);\n+            var stack = this.stack;\n+            Type type0 = stack[stackSize - 2];\n+            Type type1 = stack[stackSize - 1];\n+            stack[stackSize - 2] = type1;\n+            stack[stackSize - 1] = type0;\n+            stack[stackSize    ] = type1;\n+            this.stackSize = stackSize + 1;\n+            return this;\n+        }\n+\n+        Frame dup_x2() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 3) throw stackUnderflow();\n+            checkStack(stackSize + 1);\n+            var stack = this.stack;\n+            Type type0 = stack[stackSize - 3];\n+            Type type1 = stack[stackSize - 2];\n+            Type type2 = stack[stackSize - 1];\n+            stack[stackSize - 3] = type2;\n+            stack[stackSize - 2] = type0;\n+            stack[stackSize - 1] = type1;\n+            stack[stackSize    ] = type2;\n+            this.stackSize = stackSize + 1;\n+            return this;\n+        }\n+\n+        Frame dup2() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 2) throw stackUnderflow();\n+            checkStack(stackSize + 2);\n+            stack[stackSize    ] = stack[stackSize - 2];\n+            stack[stackSize + 1] = stack[stackSize - 1];\n+            this.stackSize = stackSize + 2;\n+            return this;\n+        }\n+\n+        Frame dup2_x1() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 3) throw stackUnderflow();\n+            checkStack(stackSize + 2);\n+            var stack = this.stack;\n+            Type type0 = stack[stackSize - 3];\n+            Type type1 = stack[stackSize - 2];\n+            Type type2 = stack[stackSize - 1];\n+            stack[stackSize - 3] = type1;\n+            stack[stackSize - 2] = type2;\n+            stack[stackSize - 1] = type0;\n+            stack[stackSize    ] = type1;\n+            stack[stackSize + 1] = type2;\n+            this.stackSize = stackSize + 2;\n+            return this;\n+        }\n+\n+        Frame dup2_x2() {\n+            int stackSize = this.stackSize;\n+            if (stackSize < 4) throw stackUnderflow();\n+            checkStack(stackSize + 4);\n+            var stack = this.stack;\n+            Type type0 = stack[stackSize - 4];\n+            Type type1 = stack[stackSize - 3];\n+            Type type2 = stack[stackSize - 2];\n+            Type type3 = stack[stackSize - 1];\n+            stack[stackSize - 4] = type2;\n+            stack[stackSize - 3] = type3;\n+            stack[stackSize - 2] = type0;\n+            stack[stackSize - 1] = type1;\n+            stack[stackSize    ] = type2;\n+            stack[stackSize + 1] = type3;\n+            this.stackSize = stackSize + 4;\n+            return this;\n+        }\n+\n+        Frame swap() {\n+            int stackSize = this.stackSize - 2;\n+            if (stackSize < 0) throw stackUnderflow();\n+            var stack = this.stack;\n+            Type type = stack[stackSize];\n+            stack[stackSize] = stack[stackSize + 1];\n+            stack[stackSize + 1] = type;\n+            return this;\n+        }\n+\n@@ -972,14 +1058,17 @@\n-            return switch (desc.descriptorString().charAt(0)) {\n-                case 'J' ->\n-                    pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n-                case 'D' ->\n-                    pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n-                case 'I', 'Z', 'B', 'C', 'S' ->\n-                    pushStack(Type.INTEGER_TYPE);\n-                case 'F' ->\n-                    pushStack(Type.FLOAT_TYPE);\n-                case 'V' ->\n-                    this;\n-                default ->\n-                    pushStack(Type.referenceType(desc));\n-            };\n+            if (desc == CD_long)   return pushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+            if (desc == CD_double) return pushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+            return desc == CD_void ? this\n+                    : pushStack(\n+                    desc instanceof PrimitiveClassDescImpl\n+                            ? (desc == CD_float ? Type.FLOAT_TYPE : Type.INTEGER_TYPE)\n+                            : Type.referenceType(desc));\n+        }\n+\n+        Frame dec1PushStack(ClassDesc desc) {\n+            if (desc == CD_long)   return decStack1PushStack(Type.LONG_TYPE, Type.LONG2_TYPE);\n+            if (desc == CD_double) return decStack1PushStack(Type.DOUBLE_TYPE, Type.DOUBLE2_TYPE);\n+            return desc == CD_void ? this\n+                    : decStack1PushStack(\n+                    desc instanceof PrimitiveClassDescImpl\n+                            ? (desc == CD_float ? Type.FLOAT_TYPE : Type.INTEGER_TYPE)\n+                            : Type.referenceType(desc));\n@@ -989,0 +1078,1 @@\n+            int stackSize = this.stackSize;\n@@ -990,1 +1080,2 @@\n-            stack[stackSize++] = type;\n+            stack[stackSize] = type;\n+            this.stackSize = stackSize + 1;\n@@ -995,0 +1086,1 @@\n+            int stackSize = this.stackSize;\n@@ -996,2 +1088,3 @@\n-            stack[stackSize++] = type1;\n-            stack[stackSize++] = type2;\n+            stack[stackSize] = type1;\n+            stack[stackSize + 1] = type2;\n+            this.stackSize = stackSize + 2;\n@@ -1002,2 +1095,9 @@\n-            if (stackSize < 1) throw generatorError(\"Operand stack underflow\");\n-            return stack[--stackSize];\n+            int stackSize = this.stackSize - 1;\n+            if (stackSize < 0) throw stackUnderflow();\n+            this.stackSize = stackSize;\n+            return stack[stackSize];\n+        }\n+\n+        Frame decStack() {\n+            if (--stackSize < 0) throw stackUnderflow();\n+            return this;\n@@ -1008,1 +1108,62 @@\n-            if (stackSize < 0) throw generatorError(\"Operand stack underflow\");\n+            if (stackSize < 0) throw stackUnderflow();\n+            return this;\n+        }\n+\n+        Frame decStack1PushStack(Type type1, Type type2) {\n+            int stackSize = this.stackSize - 1;\n+            if (stackSize < 0) throw stackUnderflow();\n+            checkStack(stackSize + 2);\n+            stack[stackSize    ] = type1;\n+            stack[stackSize + 1] = type2;\n+            this.stackSize = stackSize + 2;\n+            return this;\n+        }\n+\n+        Frame decStack1PushStack(Type type) {\n+            int stackSize = this.stackSize - 1;\n+            if (stackSize < 0) throw stackUnderflow();\n+            stack[stackSize] = type;\n+            return this;\n+        }\n+\n+        Frame decStack2PushStack(Type type) {\n+            int stackSize = this.stackSize - 2;\n+            if (stackSize < 0) throw stackUnderflow();\n+            stack[stackSize] = type;\n+            this.stackSize = stackSize + 1;\n+            return this;\n+        }\n+\n+        Frame decStack2PushStack(Type type1, Type type2) {\n+            int stackSize = this.stackSize - 2;\n+            if (stackSize < 0) throw stackUnderflow();\n+            var stack = this.stack;\n+            stack[stackSize   ] = type1;\n+            stack[stackSize + 1] = type2;\n+            return this;\n+        }\n+\n+        Frame decStack3PushStack(Type type1, Type type2) {\n+            int stackSize = this.stackSize - 3;\n+            if (stackSize < 0) throw stackUnderflow();\n+            stack[stackSize   ] = type1;\n+            stack[stackSize + 1] = type2;\n+            this.stackSize = stackSize + 2;\n+            return this;\n+        }\n+\n+        Frame decStack4PushStack(Type type) {\n+            int stackSize = this.stackSize - 4;\n+            if (stackSize < 0) throw stackUnderflow();\n+            stack[stackSize] = type;\n+            this.stackSize = stackSize + 1;\n+            return this;\n+        }\n+\n+        Frame decStack4PushStack(Type type1, Type type2) {\n+            int stackSize = this.stackSize - 4;\n+            if (stackSize < 0) throw stackUnderflow();\n+            var stack = this.stack;\n+            stack[stackSize   ] = type1;\n+            stack[stackSize + 1] = type2;\n+            this.stackSize = stackSize + 2;\n@@ -1037,2 +1198,1 @@\n-                locals = new Type[index + FRAME_DEFAULT_CAPACITY];\n-                Arrays.fill(locals, Type.TOP_TYPE);\n+                initLocals(index);\n@@ -1040,3 +1200,1 @@\n-                int current = locals.length;\n-                locals = Arrays.copyOf(locals, index + FRAME_DEFAULT_CAPACITY);\n-                Arrays.fill(locals, current, locals.length, Type.TOP_TYPE);\n+                growLocals(index);\n@@ -1047,0 +1205,11 @@\n+        private void initLocals(int index) {\n+            locals = new Type[index + FRAME_DEFAULT_CAPACITY];\n+            Arrays.fill(locals, Type.TOP_TYPE);\n+        }\n+\n+        private void growLocals(int index) {\n+            int current = locals.length;\n+            locals = Arrays.copyOf(locals, index + FRAME_DEFAULT_CAPACITY);\n+            Arrays.fill(locals, current, locals.length, Type.TOP_TYPE);\n+        }\n+\n@@ -1050,2 +1219,1 @@\n-                stack = new Type[index + FRAME_DEFAULT_CAPACITY];\n-                Arrays.fill(stack, Type.TOP_TYPE);\n+                initStack(index);\n@@ -1053,3 +1221,1 @@\n-                int current = stack.length;\n-                stack = Arrays.copyOf(stack, index + FRAME_DEFAULT_CAPACITY);\n-                Arrays.fill(stack, current, stack.length, Type.TOP_TYPE);\n+                growStack(index);\n@@ -1059,0 +1225,11 @@\n+        private void initStack(int index) {\n+            stack = new Type[index + FRAME_DEFAULT_CAPACITY];\n+            Arrays.fill(stack, Type.TOP_TYPE);\n+        }\n+\n+        private void growStack(int index) {\n+            int current = stack.length;\n+            stack = Arrays.copyOf(stack, index + FRAME_DEFAULT_CAPACITY);\n+            Arrays.fill(stack, current, stack.length, Type.TOP_TYPE);\n+        }\n+\n@@ -1061,0 +1238,1 @@\n+            var locals = this.locals;\n@@ -1065,0 +1243,8 @@\n+        private void setLocalRawInternal(int index, Type type1, Type type2) {\n+            checkLocal(index + 1);\n+            var locals = this.locals;\n+            localsChanged |= !type1.equals(locals[index]) || !type2.equals(locals[index + 1]);\n+            locals[index    ] = type1;\n+            locals[index + 1] = type2;\n+        }\n+\n@@ -1165,2 +1351,1 @@\n-            }\n-            if (old == Type.DOUBLE2_TYPE || old == Type.LONG2_TYPE) {\n+            } else if (old == Type.DOUBLE2_TYPE || old == Type.LONG2_TYPE) {\n@@ -1184,2 +1369,1 @@\n-            setLocalRawInternal(index, type1);\n-            setLocalRawInternal(index + 1, type2);\n+            setLocalRawInternal(index, type1, type2);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":310,"deletions":126,"binary":false,"changes":436,"status":"modified"}]}