{"files":[{"patch":"@@ -95,2 +95,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -124,2 +122,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -177,2 +173,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -204,2 +198,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -231,2 +223,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -258,2 +248,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -285,2 +273,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -312,2 +298,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -339,2 +323,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -373,2 +355,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -409,2 +389,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -453,2 +431,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -482,2 +458,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -511,2 +485,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -540,2 +512,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -569,2 +539,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -598,2 +566,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -627,2 +593,0 @@\n-     * @throws IllegalArgumentException if the allocated segment is\n-     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -704,4 +668,0 @@\n-     * <p>\n-     * Providing a {@linkplain MemorySegment#isReadOnly() read only} segment is discouraged\n-     * as the returned SegmentAllocator will not be able to support {@code allocateFrom()}\n-     * operations.\n@@ -713,0 +673,2 @@\n+     * @throws IllegalArgumentException if the {@code segment} is\n+     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -715,1 +677,1 @@\n-        Objects.requireNonNull(segment);\n+        assertWritable(segment);\n@@ -731,4 +693,0 @@\n-     * <p>\n-     * Providing a {@linkplain MemorySegment#isReadOnly() read only} segment is discouraged\n-     * as the returned SegmentAllocator will not be able to support {@code allocateFrom()}\n-     * operations.\n@@ -747,0 +705,2 @@\n+     * @throws IllegalArgumentException if the {@code segment} is\n+     *         {@linkplain MemorySegment#isReadOnly() read-only}\n@@ -749,1 +709,9 @@\n-        return (AbstractMemorySegmentImpl)Objects.requireNonNull(segment);\n+        assertWritable(segment);\n+        return (AbstractMemorySegmentImpl)segment;\n+    }\n+\n+    private static void assertWritable(MemorySegment segment) {\n+        \/\/ Implicit null check\n+        if (segment.isReadOnly()) {\n+            throw new IllegalArgumentException(\"read-only segment\");\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":14,"deletions":46,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -103,0 +103,10 @@\n+    @Test(expectedExceptions = IllegalArgumentException.class)\n+    public void testReadOnlySlicingAllocator() {\n+        SegmentAllocator.slicingAllocator(MemorySegment.ofArray(new int[0]).asReadOnly());\n+    }\n+\n+    @Test(expectedExceptions = IllegalArgumentException.class)\n+    public void testReadOnlyPrefixAllocator() {\n+        SegmentAllocator.prefixAllocator(MemorySegment.ofArray(new int[0]).asReadOnly());\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}