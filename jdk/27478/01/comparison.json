{"files":[{"patch":"@@ -191,1 +191,0 @@\n-java\/awt\/Mouse\/EnterExitEvents\/DragWindowTest.java 8298823 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,5 +29,2 @@\n- *     Mouse Entered\/Exited events are wrongly generated during dragging the window\n- *     from one component to another\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n- * @author alexandr.scherbatiy area=awt.event\n+ *     Mouse Entered\/Exited events are wrongly generated during dragging the\n+ *     window from one component to another\n@@ -53,4 +50,0 @@\n-import java.util.concurrent.Callable;\n-\n-import test.java.awt.regtesthelpers.Util;\n-\n@@ -58,1 +51,0 @@\n-\n@@ -60,1 +52,0 @@\n-    private static volatile int dragWindowMouseReleasedCount = 0;\n@@ -63,0 +54,2 @@\n+    private static volatile Point pointToClick;\n+    private static volatile Point pointToDrag;\n@@ -66,0 +59,1 @@\n+    private static JFrame frame;\n@@ -68,0 +62,3 @@\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -69,2 +66,1 @@\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(100);\n+            SwingUtilities.invokeAndWait(DragWindowTest::createAndShowGUI);\n@@ -72,1 +68,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+            robot.delay(250);\n+            robot.waitForIdle();\n@@ -74,8 +71,4 @@\n-            @Override\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n-\n-        robot.delay(250);\n-        robot.waitForIdle();\n+            SwingUtilities.invokeAndWait(() -> {\n+                pointToClick = getCenterPoint(label);\n+                pointToDrag = getCenterPoint(button);\n+            });\n@@ -83,1 +76,4 @@\n-        Point pointToClick = Util.invokeOnEDT(new Callable<Point>() {\n+            robot.mouseMove(pointToClick.x, pointToClick.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -85,3 +81,2 @@\n-            @Override\n-            public Point call() throws Exception {\n-                return getCenterPoint(label);\n+            if (dragWindowMouseEnteredCount != 1) {\n+                throw new RuntimeException(\"No MouseEntered event on Drag Window!\");\n@@ -89,2 +84,0 @@\n-        });\n-\n@@ -92,3 +85,3 @@\n-        robot.mouseMove(pointToClick.x, pointToClick.y);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.waitForIdle();\n+            robot.mouseMove(pointToDrag.x, pointToDrag.y);\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -96,10 +89,2 @@\n-        if (dragWindowMouseEnteredCount != 1) {\n-            throw new RuntimeException(\"No MouseEntered event on Drag Window!\");\n-        }\n-\n-        Point pointToDrag = Util.invokeOnEDT(new Callable<Point>() {\n-\n-            @Override\n-            public Point call() throws Exception {\n-                button.addMouseListener(new ButtonMouseListener());\n-                return getCenterPoint(button);\n+            if (buttonMouseEnteredCount != 0) {\n+                throw new RuntimeException(\"Extra MouseEntered event on button!\");\n@@ -107,8 +92,0 @@\n-        });\n-\n-        robot.mouseMove(pointToDrag.x, pointToDrag.y);\n-        robot.waitForIdle();\n-\n-        if (buttonMouseEnteredCount != 0) {\n-            throw new RuntimeException(\"Extra MouseEntered event on button!\");\n-        }\n@@ -116,2 +93,3 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        robot.waitForIdle();\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -119,2 +97,9 @@\n-        if (labelMouseReleasedCount != 1) {\n-            throw new RuntimeException(\"No MouseReleased event on label!\");\n+            if (labelMouseReleasedCount != 1) {\n+                throw new RuntimeException(\"No MouseReleased event on label!\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -122,1 +107,0 @@\n-\n@@ -132,2 +116,1 @@\n-\n-        JFrame frame = new JFrame(\"Main Frame\");\n+        frame = new JFrame(\"DragWindowTest\");\n@@ -145,0 +128,1 @@\n+        button.addMouseListener(new ButtonMouseListener());\n@@ -152,1 +136,0 @@\n-\n@@ -160,1 +143,0 @@\n-\n@@ -179,2 +161,0 @@\n-\n-        Point origin;\n@@ -213,1 +193,0 @@\n-\n@@ -218,5 +197,0 @@\n-\n-        @Override\n-        public void mouseReleased(MouseEvent e) {\n-            dragWindowMouseReleasedCount++;\n-        }\n@@ -226,1 +200,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/Mouse\/EnterExitEvents\/DragWindowTest.java","additions":41,"deletions":68,"binary":false,"changes":109,"status":"modified"}]}