{"files":[{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +106,0 @@\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -110,1 +110,0 @@\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -180,1 +179,0 @@\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -185,1 +183,0 @@\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -774,1 +775,0 @@\n-      MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -781,1 +781,0 @@\n-      MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -887,1 +886,0 @@\n-      MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -894,1 +892,0 @@\n-      MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -481,1 +482,1 @@\n-  assert(CodeCache_lock->owned_by_self(), \"Lock must be held\");\n+  MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n@@ -491,1 +492,1 @@\n-  assert(CodeCache_lock->owned_by_self(), \"Lock must be held\");\n+  MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}