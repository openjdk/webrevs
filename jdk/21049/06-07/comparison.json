{"files":[{"patch":"@@ -432,0 +432,3 @@\n+\n+    \/\/ Don't use SoftReferences so that objects used by java.lang.invoke tables can be archived.\n+    Arguments::PropertyList_add(new SystemProperty(\"java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE\", \"false\", false));\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import static java.lang.invoke.MethodHandleStatics.NO_SOFT_CACHE;\n+import static java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE;\n@@ -99,3 +99,1 @@\n-            if (NO_SOFT_CACHE) {\n-                cache = result;\n-            } else {\n+            if (USE_SOFT_CACHE) {\n@@ -103,0 +101,2 @@\n+            } else {\n+                cache = result;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaFormEditor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -31,0 +32,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -34,0 +36,1 @@\n+import java.util.Properties;\n@@ -693,0 +696,19 @@\n+\n+    \/\/--- AOTCache support\n+\n+    \/**\n+     * In normal execution, this is set to true, so that LambdaFormEditor and MethodTypeForm will\n+     * use soft references to allow class unloading.\n+     *\n+     * When dumping the AOTCache, this is set to false so that no cached heap objects will\n+     * contain soft references (which are not yet supported by AOTCache - see JDK-8341587). AOTCache\n+     * only stores LambdaFormEditors and MethodTypeForms for classes in the boot\/platform\/app loaders.\n+     * Such classes will never be unloaded, so it's OK to use hard references.\n+     *\/\n+    static @Stable boolean USE_SOFT_CACHE;\n+\n+    static {\n+        Properties props = GetPropertyAction.privilegedGetProperties();\n+        USE_SOFT_CACHE = Boolean.parseBoolean(\n+                props.getProperty(\"java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE\", \"true\"));\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-    static final boolean NO_SOFT_CACHE; \/\/ Don't use SoftReference in LambdaFormEditor and MethodTypeForm so they can be archived by CDS.\n@@ -92,1 +91,0 @@\n-        NO_SOFT_CACHE = CDS.disableMethodHandleSoftCache();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleStatics.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import static java.lang.invoke.MethodHandleStatics.NO_SOFT_CACHE;\n+import static java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE;\n@@ -131,3 +131,1 @@\n-        if (NO_SOFT_CACHE) {\n-            methodHandles[which] = mh;\n-        } else {\n+        if (USE_SOFT_CACHE) {\n@@ -135,0 +133,2 @@\n+        } else {\n+            methodHandles[which] = mh;\n@@ -157,3 +157,1 @@\n-        if (NO_SOFT_CACHE) {\n-            lambdaForms[which] = form;\n-        } else {\n+        if (USE_SOFT_CACHE) {\n@@ -161,0 +159,2 @@\n+        } else {\n+            lambdaForms[which] = form;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodTypeForm.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -79,10 +79,0 @@\n-    \/*\n-     * When dumping the static archive, CDS is able to archive MethodHandles.\n-     * However, CDS cannot archive SoftReference objects, so we need to\n-     * make sure the archived MethodHandles do not directly or indirectly use\n-     * SoftReferences.\n-     *\/\n-    public static boolean disableMethodHandleSoftCache() {\n-        return isDumpingStaticArchive();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}