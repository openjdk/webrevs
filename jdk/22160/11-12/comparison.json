{"files":[{"patch":"@@ -126,1 +126,1 @@\n-    @MethodSource(\"ctor_should_close_on_failures\")\n+    @MethodSource(\"ctorShouldCloseOnFailuresTestCases\")\n@@ -128,1 +128,1 @@\n-    void ctor_should_close_on_failures(TestCase testCase) throws Throwable {\n+    void ctorShouldCloseOnFailures(TestCase testCase) throws Throwable {\n@@ -135,1 +135,0 @@\n-                InetAddress address = InetAddress.getLoopbackAddress();\n@@ -139,1 +138,3 @@\n-                new Socket(address, 0xDEAD, address, 0xBEEF);\n+                InetAddress serverAddress = InetAddress.getLoopbackAddress();\n+                int deadServerPort = 0xDEAD;\n+                new Socket(serverAddress, deadServerPort, null, 0);\n@@ -150,1 +151,1 @@\n-    static List<TestCase> ctor_should_close_on_failures() {\n+    static List<TestCase> ctorShouldCloseOnFailuresTestCases() {\n@@ -152,3 +153,3 @@\n-                TestCase.ForBindFailure.ofIOException(),\n-                TestCase.ForConnectFailure.ofIOException(),\n-                TestCase.ForConnectFailure.ofIllegalArgumentException(1));\n+                TestCase.BindFailureFactory.iOExceptionTestCase(),\n+                TestCase.ConnectFailureFactory.iOExceptionTestCase(),\n+                TestCase.ConnectFailureFactory.illegalArgumentExceptionTestCase(1));\n@@ -158,1 +159,1 @@\n-    void connect_should_close_on_unresolved_address() throws IOException {\n+    void connectShouldCloseOnUnresolvedAddress() throws IOException {\n@@ -171,2 +172,2 @@\n-    @MethodSource(\"connect_should_close_on_failures\")\n-    void connect_should_close_on_failures(TestCase testCase) throws Throwable {\n+    @MethodSource(\"connectShouldCloseOnFailuresTestCases\")\n+    void connectShouldCloseOnFailures(TestCase testCase) throws Throwable {\n@@ -195,1 +196,1 @@\n-    static List<TestCase> connect_should_close_on_failures() {\n+    static List<TestCase> connectShouldCloseOnFailuresTestCases() {\n@@ -197,2 +198,2 @@\n-                TestCase.ForConnectFailure.ofIOException(),\n-                TestCase.ForConnectFailure.ofIllegalArgumentException(0));\n+                TestCase.ConnectFailureFactory.iOExceptionTestCase(),\n+                TestCase.ConnectFailureFactory.illegalArgumentExceptionTestCase(0));\n@@ -210,1 +211,1 @@\n-        private static final class ForBindFailure {\n+        private static final class BindFailureFactory {\n@@ -212,1 +213,1 @@\n-            private static TestCase ofIOException() {\n+            private static TestCase iOExceptionTestCase() {\n@@ -217,1 +218,1 @@\n-                        ForBindFailure.class.getSimpleName(),\n+                        BindFailureFactory.class.getSimpleName(),\n@@ -229,1 +230,1 @@\n-        private static final class ForConnectFailure {\n+        private static final class ConnectFailureFactory {\n@@ -231,1 +232,1 @@\n-            private static TestCase ofIOException() {\n+            private static TestCase iOExceptionTestCase() {\n@@ -236,1 +237,1 @@\n-                        ForConnectFailure.class.getSimpleName(),\n+                        ConnectFailureFactory.class.getSimpleName(),\n@@ -246,1 +247,1 @@\n-            private static TestCase ofIllegalArgumentException(int expectedCloseInvocationCount) {\n+            private static TestCase illegalArgumentExceptionTestCase(int expectedCloseInvocationCount) {\n@@ -251,1 +252,1 @@\n-                        ForConnectFailure.class.getSimpleName(),\n+                        ConnectFailureFactory.class.getSimpleName(),\n","filename":"test\/jdk\/java\/net\/Socket\/CloseOnFailureTest.java","additions":23,"deletions":22,"binary":false,"changes":45,"status":"modified"}]}