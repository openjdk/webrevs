{"files":[{"patch":"@@ -664,1 +664,1 @@\n-            var uhe = new UnknownHostException(epoint.getHostName() + \" is unresolved\");\n+            var uhe = new UnknownHostException(epoint.getHostName());\n","filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-     * Verifies socket is closed when {@code unboundSocket.connect()} fails.\n+     * Verifies that an unbound socket is closed when {@code connect()} fails.\n@@ -81,1 +81,1 @@\n-     * Verifies socket is closed when {@code boundSocket.connect()} fails.\n+     * Verifies that a bound socket is closed when {@code connect()} fails.\n@@ -96,1 +96,1 @@\n-     * Verifies socket is not closed when {@code `connectedSocket.connect()`} fails.\n+     * Verifies that a connected socket is not closed when {@code connect()} fails.\n@@ -116,1 +116,1 @@\n-     * Verifies socket is closed when {@code unboundSocket.connect(unresolvedAddress)} fails.\n+     * Verifies that an unbound socket is closed when {@code connect()} is invoked using an unresolved address.\n@@ -130,1 +130,1 @@\n-     * Verifies socket is closed when {@code boundSocket.connect(unresolvedAddress)} fails.\n+     * Verifies that a bound socket is closed when {@code connect()} is invoked using an unresolved address.\n@@ -145,1 +145,1 @@\n-     * Verifies socket is not closed when {@code connectedSocket.connect(unresolvedAddress)} fails.\n+     * Verifies that a connected socket is not closed when {@code connect()} is invoked using an unresolved address.\n","filename":"test\/jdk\/java\/net\/Socket\/ConnectFailTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}