{"files":[{"patch":"@@ -497,6 +497,3 @@\n-        if (localAddr != null) {\n-            try {\n-                    bind(localAddr);\n-            } catch (Throwable throwable) {\n-                closeSuppressingExceptions(throwable);\n-                throw throwable;\n+        try {\n+            if (localAddr != null) {\n+                bind(localAddr);\n@@ -504,0 +501,4 @@\n+            connect(address);\n+        } catch (Throwable throwable) {\n+            closeSuppressingExceptions(throwable);\n+            throw throwable;\n@@ -505,1 +506,0 @@\n-        connect(address);   \/\/ `connect()` closes the socket if it throws\n","filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -151,1 +151,4 @@\n-        return List.of(TestCase.ForBindFailure.ofIOException());\n+        return List.of(\n+                TestCase.ForBindFailure.ofIOException(),\n+                TestCase.ForConnectFailure.ofIOException(),\n+                TestCase.ForConnectFailure.ofIllegalArgumentException(1));\n@@ -195,1 +198,1 @@\n-                TestCase.ForConnectFailure.ofIllegalArgumentException());\n+                TestCase.ForConnectFailure.ofIllegalArgumentException(0));\n@@ -243,1 +246,1 @@\n-            private static TestCase ofIllegalArgumentException() {\n+            private static TestCase ofIllegalArgumentException(int expectedCloseInvocationCount) {\n@@ -254,1 +257,1 @@\n-                        () -> assertEquals(0, socketImpl.closeInvocationCounter.get()),\n+                        () -> assertEquals(expectedCloseInvocationCount, socketImpl.closeInvocationCounter.get()),\n","filename":"test\/jdk\/java\/net\/Socket\/CloseOnFailureTest.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}