{"files":[{"patch":"@@ -26,0 +26,2 @@\n+import org.junit.jupiter.api.function.Executable;\n+import org.junit.jupiter.api.function.ThrowingConsumer;\n@@ -31,0 +33,1 @@\n+import java.io.UncheckedIOException;\n@@ -44,0 +47,1 @@\n+import java.util.function.Function;\n@@ -87,1 +91,1 @@\n-    void testConnectedSocket() throws Exception {\n+    void testConnectedSocket() throws Throwable {\n@@ -90,2 +94,2 @@\n-                runnable -> {\n-                    SocketException exception = assertThrows(SocketException.class, runnable::run);\n+                executable -> {\n+                    SocketException exception = assertThrows(SocketException.class, executable);\n@@ -97,1 +101,1 @@\n-    void testConnectedNioSocket() throws Exception {\n+    void testConnectedNioSocket() throws Throwable {\n@@ -100,1 +104,1 @@\n-                runnable -> assertThrows(AlreadyConnectedException.class, runnable::run));\n+                executable -> assertThrows(AlreadyConnectedException.class, executable));\n@@ -109,3 +113,3 @@\n-            ThrowingFunction<SocketAddress, Socket> connectedSocketFactory,\n-            Consumer<ThrowingRunnable> reconnectFailureVerifier)\n-            throws Exception {\n+            Function<SocketAddress, Socket> connectedSocketFactory,\n+            Consumer<Executable> reconnectFailureVerifier)\n+            throws Throwable {\n@@ -187,2 +191,2 @@\n-            ThrowingFunction<SocketAddress, Socket> connectedSocketFactory)\n-            throws Exception {\n+            Function<SocketAddress, Socket> connectedSocketFactory)\n+            throws Throwable {\n@@ -200,1 +204,1 @@\n-    static List<ThrowingFunction<SocketAddress, Socket>> connectedSocketFactories() {\n+    static List<Function<SocketAddress, Socket>> connectedSocketFactories() {\n@@ -206,1 +210,1 @@\n-    private static Socket createConnectedSocket(SocketAddress address) throws IOException {\n+    private static Socket createConnectedSocket(SocketAddress address) {\n@@ -208,1 +212,5 @@\n-        return new Socket(inetAddress.getAddress(), inetAddress.getPort());\n+        try {\n+            return new Socket(inetAddress.getAddress(), inetAddress.getPort());\n+        } catch (IOException exception) {\n+            throw new UncheckedIOException(exception);\n+        }\n@@ -212,2 +220,6 @@\n-    private static Socket createConnectedNioSocket(SocketAddress address) throws IOException {\n-        return SocketChannel.open(address).socket();\n+    private static Socket createConnectedNioSocket(SocketAddress address) {\n+        try {\n+            return SocketChannel.open(address).socket();\n+        } catch (IOException exception) {\n+            throw new UncheckedIOException(exception);\n+        }\n@@ -216,1 +228,2 @@\n-    private static void withEphemeralServerSocket(ThrowingConsumer<ServerSocket> serverSocketConsumer) throws Exception {\n+    private static void withEphemeralServerSocket(ThrowingConsumer<ServerSocket> serverSocketConsumer)\n+            throws Throwable {\n@@ -255,21 +268,0 @@\n-    @FunctionalInterface\n-    private interface ThrowingConsumer<V> {\n-\n-        void accept(V value) throws Exception;\n-\n-    }\n-\n-    @FunctionalInterface\n-    private interface ThrowingRunnable {\n-\n-        void run() throws Exception;\n-\n-    }\n-\n-    @FunctionalInterface\n-    private interface ThrowingFunction<I, O> {\n-\n-        O apply(I input) throws Exception;\n-\n-    }\n-\n","filename":"test\/jdk\/java\/net\/Socket\/ConnectFailTest.java","additions":29,"deletions":37,"binary":false,"changes":66,"status":"modified"}]}