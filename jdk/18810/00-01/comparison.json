{"files":[{"patch":"@@ -178,5 +178,5 @@\n-        \/\/ lambda class has no access to the resolved method, or the\n-        \/\/ target class is hidden and could not be referenced as constant.\n-        \/\/ Instead, we need to pass the live implementation method handle\n-        \/\/ to the proxy class to invoke directly. (javac prefers to avoid\n-        \/\/ this situation by generating bridges in the target class)\n+        \/\/ lambda class has no access to the resolved method, or does\n+        \/\/ 'invokestatic' on a hidden class. Instead, we need to pass the\n+        \/\/ live implementation method handle to the proxy class to invoke\n+        \/\/ directly. (javac prefers to avoid this situation by generating\n+        \/\/ bridges in the target class)\n@@ -186,1 +186,1 @@\n-                               implInfo.getDeclaringClass().isHidden();\n+                               implKind == H_INVOKESTATIC && implClass.isHidden();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}