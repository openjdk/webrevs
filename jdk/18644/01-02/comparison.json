{"files":[{"patch":"@@ -55,1 +55,0 @@\n-    private static final int TOLERANCE = 20;\n@@ -59,1 +58,2 @@\n-        combo.addItem(\"Simple JComboBox\");\n+        combo.addItem(\"\\u2588\".repeat(5));\n+        combo.setFont(combo.getFont().deriveFont(50.0f));\n@@ -62,1 +62,2 @@\n-        combo2.addItem(\"Simple JComboBox\");\n+        combo2.addItem(\"\\u2588\".repeat(5));\n+        combo2.setFont(combo2.getFont().deriveFont(50.0f));\n@@ -95,9 +96,0 @@\n-        ImageIO.write(enabledImage, \"png\", new File(testDir\n-                + \"\/\" + lafName + \"Enabled.png\"));\n-        ImageIO.write(disabledImage, \"png\", new File(testDir\n-                + \"\/\" + lafName + \"Disabled.png\"));\n-        ImageIO.write(enabledImage2, \"png\", new File(testDir\n-                + \"\/\" + lafName + \"EnabledDLCR.png\"));\n-        ImageIO.write(disabledImage2, \"png\", new File(testDir\n-                + \"\/\" + lafName + \"DisabledDLCR.png\"));\n-\n@@ -110,27 +102,5 @@\n-            \/\/ Nimbus has a pixel offset in coordinates since Nimbus is 2px\n-            \/\/ smaller in width than other L&F's\n-            if (lafName.equals(\"Nimbus\")) {\n-                eColor1 = new Color(enabledImage.getRGB(x + 1, y));\n-                eColor2 = new Color(enabledImage2.getRGB(x, y));\n-                dColor1 = new Color(disabledImage.getRGB(x + 1, y));\n-                dColor2 = new Color(disabledImage2.getRGB(x, y));\n-            } else if (lafName.equals(\"Windows\")) {\n-                \/\/ In Windows LAF, the ComboBox sizes are different and\n-                \/\/ that results in pixel offset of 1px for width and 1px for height.\n-                eColor1 = new Color(enabledImage.getRGB(x, y));\n-                eColor2 = new Color(enabledImage2.getRGB(x + 1, y - 1));\n-                dColor1 = new Color(disabledImage.getRGB(x, y));\n-                dColor2 = new Color(disabledImage2.getRGB(x + 1, y - 1));\n-            } else if (lafName.equals(\"GTK+\")) {\n-                \/\/ In GTK LAF, the ComboBox sizes are different and\n-                \/\/ that results in pixel offset of 10px for width and 2px for height.\n-                eColor1 = new Color(enabledImage.getRGB(x, y));\n-                eColor2 = new Color(enabledImage2.getRGB(x + 10, y + 2));\n-                dColor1 = new Color(disabledImage.getRGB(x, y));\n-                dColor2 = new Color(disabledImage2.getRGB(x + 10, y + 2));\n-            } else {\n-                eColor1 = new Color(enabledImage.getRGB(x, y));\n-                eColor2 = new Color(enabledImage2.getRGB(x, y));\n-                dColor1 = new Color(disabledImage.getRGB(x, y));\n-                dColor2 = new Color(disabledImage2.getRGB(x, y));\n-            }\n+            eColor1 = new Color(enabledImage.getRGB(x, y));\n+            eColor2 = new Color(enabledImage2.getRGB(x, y));\n+            dColor1 = new Color(disabledImage.getRGB(x, y));\n+            dColor2 = new Color(disabledImage2.getRGB(x, y));\n+\n@@ -139,0 +109,8 @@\n+                ImageIO.write(enabledImage, \"png\", new File(testDir\n+                        + \"\/\" + lafName + \"Enabled.png\"));\n+                ImageIO.write(disabledImage, \"png\", new File(testDir\n+                        + \"\/\" + lafName + \"Disabled.png\"));\n+                ImageIO.write(enabledImage2, \"png\", new File(testDir\n+                        + \"\/\" + lafName + \"EnabledDLCR.png\"));\n+                ImageIO.write(disabledImage2, \"png\", new File(testDir\n+                        + \"\/\" + lafName + \"DisabledDLCR.png\"));\n@@ -146,8 +124,3 @@\n-        int redDiff = Math.abs(c1.getRed() - c2.getRed());\n-        int blueDiff = Math.abs(c1.getBlue() - c2.getBlue());\n-        int greenDiff = Math.abs(c1.getGreen() - c2.getGreen());\n-\n-        \/\/ Added TOLERANCE for pixel color difference. In Windows LAF the\n-        \/\/ background color between disabled and disabled DLCR image is slightly\n-        \/\/ different (240, 240, 240 vs 255, 255, 255).\n-        if ((redDiff > TOLERANCE) || (blueDiff > TOLERANCE) || (greenDiff > TOLERANCE)) {\n+        if ((c1.getRed() != c2.getRed())\n+            || (c1.getBlue() != c2.getBlue())\n+            || (c1.getGreen() != c2.getGreen())) {\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/DisabledComboBoxFontTestAuto.java","additions":20,"deletions":47,"binary":false,"changes":67,"status":"modified"}]}