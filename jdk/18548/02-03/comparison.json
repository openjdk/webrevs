{"files":[{"patch":"@@ -77,1 +77,1 @@\n-    uintptr_t value;\n+    uintptr_t hash;\n@@ -80,2 +80,2 @@\n-  BytecodeCPEntry() : _tag(ERROR_TAG) { _u.value = 0; }\n-  BytecodeCPEntry(u1 tag) : _tag(tag) { _u.value = 0; }\n+  BytecodeCPEntry() : _tag(ERROR_TAG) { _u.hash = 0; }\n+  BytecodeCPEntry(u1 tag) : _tag(tag) { _u.hash = 0; }\n@@ -116,1 +116,3 @@\n-    return e0._tag == e1._tag && e0._u.value == e1._u.value;\n+    \/\/ The hash is the \"union trick\" value of the information saved for the tag,\n+    \/\/ so can be compared for equality.\n+    return e0._tag == e1._tag && e0._u.hash == e1._u.hash;\n@@ -120,1 +122,1 @@\n-    return (unsigned)(e0._tag ^ e0._u.value);\n+    return (unsigned)(e0._tag ^ e0._u.hash);\n","filename":"src\/hotspot\/share\/classfile\/bytecodeAssembler.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}