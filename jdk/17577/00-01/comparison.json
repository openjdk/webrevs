{"files":[{"patch":"@@ -36,1 +36,1 @@\n-  ASSERT_FALSE(heap->is_in(nullptr)) << \"nullptr is unexpectedly in the heap\";\n+  ASSERT_FALSE(heap->is_in(nullptr)) << \"null is unexpectedly in the heap\";\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_collectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-  virtual void do_oop(oop* p) { guarantee(*p == nullptr, \"expected nullptr\"); }\n+  virtual void do_oop(oop* p) { guarantee(*p == nullptr, \"expected null\"); }\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_oopStorage_parperf.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    p4 = os_realloc(nullptr, 10);           \/\/ realloc with nullptr pointer\n+    p4 = os_realloc(nullptr, 10);        \/\/ realloc with null pointer\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmtpreinit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-    \/\/ Verify the current thread's hazard ptr is nullptr:\n+    \/\/ Verify the current thread's hazard ptr is null:\n@@ -400,1 +400,1 @@\n-      \/\/ Verify the current thread's hazard ptr is nullptr:\n+      \/\/ Verify the current thread's hazard ptr is null:\n@@ -448,1 +448,1 @@\n-    \/\/ Verify the current thread's hazard ptr is nullptr:\n+    \/\/ Verify the current thread's hazard ptr is null:\n@@ -568,1 +568,1 @@\n-    \/\/ Verify the current thread's hazard ptr is nullptr:\n+    \/\/ Verify the current thread's hazard ptr is null:\n@@ -646,1 +646,1 @@\n-    \/\/ Verify the current thread's hazard ptr is nullptr:\n+    \/\/ Verify the current thread's hazard ptr is null:\n","filename":"test\/hotspot\/gtest\/runtime\/test_ThreadsListHandle.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-  ASSERT_TRUE(bad_class_name) << \"Function did not set bad_class_name with nullptr class name\";\n-  ASSERT_TRUE(retval == nullptr) << \"Wrong package for nullptr class name pointer\";\n+  ASSERT_TRUE(bad_class_name) << \"Function did not set bad_class_name with null class name\";\n+  ASSERT_TRUE(retval == nullptr) << \"Wrong package for null class name pointer\";\n","filename":"test\/hotspot\/gtest\/runtime\/test_classLoader.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-      \/\/ return nullptr (as per contract, it cannot return another address)\n+      \/\/ return null (as per contract, it cannot return another address)\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    nullptr,                   \/\/ root_path, ignored\n+    nullptr,                \/\/ root_path, ignored\n@@ -72,1 +72,1 @@\n-    nullptr,                   \/\/ root_path, ignored\n+    nullptr,                \/\/ root_path, ignored\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux_cgroups.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-\/\/ (ASSERT|EXPECT)_NOT_NULL: check that the given pointer is not nullptr\n-\/\/ (ASSERT|EXPECT)_NULL: check that the given pointer is nullptr\n+\/\/ (ASSERT|EXPECT)_NOT_NULL: check that the given pointer is not null\n+\/\/ (ASSERT|EXPECT)_NULL: check that the given pointer is null\n","filename":"test\/hotspot\/gtest\/testutils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}