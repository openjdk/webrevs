{"files":[{"patch":"@@ -117,1 +117,1 @@\n-            String msg = connectEx.getMessage();\n+            String msg = connectEx.toString();\n@@ -144,1 +144,1 @@\n-            commit(start, duration, host, address.getHostAddress(), port, connectEx.getMessage());\n+            commit(start, duration, host, address.getHostAddress(), port, connectEx.toString());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/SocketConnectFailedEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/SocketConnectFailedEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-        Asserts.assertEquals(eventMessage, ioe.getMessage());\n+        Asserts.assertEquals(eventMessage, ioe.toString());\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/IOHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    private static final int MAX_ATTEMPTS = 5;\n@@ -68,1 +69,6 @@\n-        testConnectException();\n+        boolean completed = false;\n+        for (int ntries = 0; (completed == false)  && (ntries < MAX_ATTEMPTS); ++ntries) {\n+            completed = testConnectException();\n+        }\n+        if (! completed)\n+            throw new Exception(\"Unable to setup connect exception\");\n@@ -132,1 +138,1 @@\n-    private static void testConnectException() throws Throwable {\n+    private static boolean testConnectException() throws Throwable {\n@@ -147,0 +153,2 @@\n+                    \/\/ unexpected, abandon the test\n+                    return false;\n@@ -156,0 +164,1 @@\n+                return true;\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketAdapterEvents.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    private static final int MAX_ATTEMPTS = 5;\n@@ -66,2 +67,15 @@\n-        testConnectException();\n-        testNonBlockingConnectException();\n+\n+        boolean completed = false;\n+        for (int ntries = 0; (completed == false)  && (ntries < MAX_ATTEMPTS); ++ntries) {\n+            completed = testConnectException();\n+        }\n+        if (! completed)\n+            throw new Exception(\"Unable to setup connect exception\");\n+\n+        completed = false;\n+        for (int ntries = 0; (completed == false)  && (ntries < MAX_ATTEMPTS); ++ntries) {\n+            completed = testNonBlockingConnectException();\n+        }\n+        if (! completed)\n+            throw new Exception(\"Unable to setup non-blocking connect exception\");\n+\n@@ -168,1 +182,1 @@\n-    private static void testConnectException() throws Throwable {\n+    private static boolean testConnectException() throws Throwable {\n@@ -182,0 +196,2 @@\n+                    \/\/ unexpected connect, abandon the test\n+                    return false;\n@@ -191,0 +207,1 @@\n+                return true;\n@@ -195,1 +212,1 @@\n-    private static void testNonBlockingConnectException() throws Throwable {\n+    private static boolean testNonBlockingConnectException() throws Throwable {\n@@ -209,4 +226,11 @@\n-                    boolean connected = sc.connect(addr);\n-                    while (!connected) {\n-                        Thread.sleep(10);\n-                        connected = sc.finishConnect();\n+                    try {\n+                        boolean connected = sc.connect(addr);\n+                        while (!connected) {\n+                            Thread.sleep(10);\n+                            connected = sc.finishConnect();\n+                        }\n+                        \/\/ unexpected connect, abandon the test\n+                        return false;\n+                    } catch (IOException ioe) {\n+                        \/\/ we expect this\n+                        connectException = ioe;\n@@ -214,3 +238,0 @@\n-                } catch (IOException ioe) {\n-                    \/\/ we expect this\n-                    connectException = ioe;\n@@ -223,0 +244,1 @@\n+                return true;\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketChannelEvents.java","additions":33,"deletions":11,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    private static final int MAX_ATTEMPTS = 5;\n@@ -67,1 +68,6 @@\n-        testConnectException();\n+        boolean completed = false;\n+        for (int ntries = 0; (completed == false)  && (ntries < MAX_ATTEMPTS); ++ntries) {\n+            completed = testConnectException();\n+        }\n+        if (! completed)\n+            throw new Exception(\"Unable to setup connect exception\");\n@@ -129,1 +135,1 @@\n-    private static void testConnectException() throws Throwable {\n+    private static boolean testConnectException() throws Throwable {\n@@ -143,0 +149,2 @@\n+                    \/\/ unexpected, abandon the test\n+                    return false;\n@@ -152,0 +160,1 @@\n+                return true;\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketEvents.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}