{"files":[{"patch":"@@ -197,2 +197,2 @@\n-        private static Map.Entry<String, RandomGeneratorProperties>\n-        entry(Class<? extends RandomGenerator> rgClass, String name, String group,\n+        private static Map.Entry<String, RandomGeneratorProperties> entry(\n+                Class<? extends RandomGenerator> rgClass, String name, String group,\n@@ -613,1 +613,1 @@\n-     * @return new in instance of {@link RandomGenerator}.\n+     * @return new instance of {@link RandomGenerator}.\n@@ -624,3 +624,4 @@\n-     * and providing a starting long seed.\n-     * If a long seed is not supported by the algorithm,\n-     * an {@link UnsupportedOperationException} is thrown.\n+     * and the provided {@code seed}.\n+     * If the {@link RandomGenerator} doesn't support instantiation through\n+     * a {@code seed} of type {@code long} then this method throws\n+     * an {@link UnsupportedOperationException}.\n@@ -630,1 +631,1 @@\n-     * @return new in instance of {@link RandomGenerator}.\n+     * @return new instance of {@link RandomGenerator}.\n@@ -632,1 +633,2 @@\n-     * @throws UnsupportedOperationException if a long seed in not supported.\n+     * @throws UnsupportedOperationException\n+     *      if a {@code seed} of type {@code long} in not supported.\n@@ -643,3 +645,4 @@\n-     * and providing a starting byte[] seed.\n-     * If a byte[] seed is not supported by the algorithm,\n-     * an {@link UnsupportedOperationException} is thrown.\n+     * and the provided {@code seed}.\n+     * If the {@link RandomGenerator} doesn't support instantiation through\n+     * a {@code seed} of type {@code byte[]} then this method throws\n+     * an {@link UnsupportedOperationException}.\n@@ -649,1 +652,4 @@\n-     * @return new in instance of {@link RandomGenerator}.\n+     * @return new instance of {@link RandomGenerator}.\n+     *\n+     * @throws UnsupportedOperationException\n+     *      if a {@code seed} of type {@code byte[]} in not supported.\n@@ -651,1 +657,0 @@\n-     * @throws UnsupportedOperationException if a byte[] seed in not supported.\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/RandomGeneratorFactory.java","additions":18,"deletions":13,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -84,2 +84,2 @@\n- * algorithm to the static method {@link RandomGenerator#of}, in which case no\n- * seed is specified by the caller:\n+ * algorithm to the static method {@link RandomGenerator#of}, in which case\n+ * a {@link RandomGenerator} is constructed without any seed value:\n@@ -128,2 +128,2 @@\n- * <p> There are three groups of random number generator algorithm provided\n- * in Java: the Legacy group, the LXM group, and the Xoroshiro\/Xoshiro group.\n+ * <p> Random number generator algorithms are organized in groups,\n+ * as described <a href=\"package-summary.html#algorithms\">below<\/a>.\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/package-info.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}