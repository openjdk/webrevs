{"files":[{"patch":"@@ -209,2 +209,2 @@\n-  \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n-  ldr(rscratch2, Address(rthread, JavaThread::lock_id_offset()));\n+  \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n+  ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n@@ -472,2 +472,2 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n-    ldr(rscratch2, Address(rthread, JavaThread::lock_id_offset()));\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n+    ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2667,1 +2667,1 @@\n-  \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+  \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -2670,1 +2670,1 @@\n-  ld(thread_id, in_bytes(JavaThread::lock_id_offset()), R16_thread);\n+  ld(thread_id, in_bytes(JavaThread::monitor_owner_id_offset()), R16_thread);\n@@ -2947,1 +2947,1 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -2949,1 +2949,1 @@\n-    ld(thread_id, in_bytes(JavaThread::lock_id_offset()), R16_thread);\n+    ld(thread_id, in_bytes(JavaThread::monitor_owner_id_offset()), R16_thread);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+  \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -122,1 +122,1 @@\n-  ld(tid, Address(xthread, JavaThread::lock_id_offset()));\n+  ld(tid, Address(xthread, JavaThread::monitor_owner_id_offset()));\n@@ -403,1 +403,1 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -405,1 +405,1 @@\n-    ld(tid, Address(xthread, JavaThread::lock_id_offset()));\n+    ld(tid, Address(xthread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3576,1 +3576,1 @@\n-  \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+  \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -3580,1 +3580,1 @@\n-  z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::lock_id_offset()));\n+  z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::monitor_owner_id_offset()));\n@@ -3655,1 +3655,1 @@\n-  z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::lock_id_offset()));\n+  z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::monitor_owner_id_offset()));\n@@ -6359,1 +6359,1 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -6363,1 +6363,1 @@\n-    z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::lock_id_offset()));\n+    z_lg(Z_R0_scratch, Address(Z_thread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-  movptr(boxReg, Address(r15_thread, JavaThread::lock_id_offset()));\n+  movptr(boxReg, Address(r15_thread, JavaThread::monitor_owner_id_offset()));\n@@ -628,1 +628,1 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -630,1 +630,1 @@\n-    movptr(box, Address(thread, JavaThread::lock_id_offset()));\n+    movptr(box, Address(thread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  nonstatic_field(JavaThread,                  _lock_id,                                      int64_t)                               \\\n+  nonstatic_field(JavaThread,                  _monitor_owner_id,                             int64_t)                               \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3685,1 +3685,1 @@\n-  \/\/ Change the lock_id of the JavaThread\n+  \/\/ Change the _monitor_owner_id of the JavaThread\n@@ -3687,2 +3687,2 @@\n-  Node* thread_id_offset = basic_plus_adr(thread, in_bytes(JavaThread::lock_id_offset()));\n-  Node* tid_memory = store_to_memory(control(), thread_id_offset, tid, T_LONG, MemNode::unordered, true);\n+  Node* monitor_owner_id_offset = basic_plus_adr(thread, in_bytes(JavaThread::monitor_owner_id_offset()));\n+  store_to_memory(control(), monitor_owner_id_offset, tid, T_LONG, MemNode::unordered, true);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2980,2 +2980,2 @@\n-  \/\/ Set lock id of new current Thread\n-  thread->set_lock_id(java_lang_Thread::thread_id(threadObj));\n+  \/\/ Set _monitor_owner_id of new current Thread\n+  thread->set_monitor_owner_id(java_lang_Thread::thread_id(threadObj));\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -239,2 +239,2 @@\n-  \/\/ Set the lock_id to the next thread_id temporarily while initialization runs.\n-  set_lock_id(ThreadIdentifier::next());\n+  \/\/ Set the _monitor_owner_id to the next thread_id temporarily while initialization runs.\n+  set_monitor_owner_id(ThreadIdentifier::next());\n@@ -266,2 +266,2 @@\n-  \/\/ Update the lock_id with the tid value.\n-  set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  \/\/ Update the _monitor_owner_id with the tid value.\n+  set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n@@ -438,1 +438,1 @@\n-  _lock_id(0),\n+  _monitor_owner_id(0),\n@@ -1543,2 +1543,1 @@\n-      \/\/ _lock_id is the thread ID of the mounted virtual thread\n-      st->print_cr(\"   Carrying virtual thread #\" INT64_FORMAT, lock_id());\n+      st->print_cr(\"   Carrying virtual thread #\" INT64_FORMAT, java_lang_Thread::thread_id(vthread()));\n@@ -1728,1 +1727,1 @@\n-  set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n@@ -2233,1 +2232,1 @@\n-  target->set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  target->set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-  int64_t _lock_id;\n+  int64_t _monitor_owner_id;\n@@ -172,3 +172,3 @@\n-  void set_lock_id(int64_t tid) {\n-    assert(tid >= ThreadIdentifier::initial() && tid < ThreadIdentifier::current(), \"invalid tid\");\n-    _lock_id = tid;\n+  void set_monitor_owner_id(int64_t id) {\n+    assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"\");\n+    _monitor_owner_id = id;\n@@ -176,1 +176,1 @@\n-  int64_t lock_id() const { return _lock_id; }\n+  int64_t monitor_owner_id() const { return _monitor_owner_id; }\n@@ -887,1 +887,1 @@\n-  static ByteSize lock_id_offset()            { return byte_offset_of(JavaThread, _lock_id); }\n+  static ByteSize monitor_owner_id_offset()   { return byte_offset_of(JavaThread, _monitor_owner_id); }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-\/\/   its tid (return value from owner_from()).\n+\/\/   its owner_id (return value from owner_id_from()).\n@@ -334,1 +334,1 @@\n-  } else if (prev_owner == owner_from(locking_thread)) {\n+  } else if (prev_owner == owner_id_from(locking_thread)) {\n@@ -1551,1 +1551,1 @@\n-\/\/ be set to current's tid, i.e. no ANONYMOUS_OWNER allowed.\n+\/\/ be set to current's owner_id, i.e. no ANONYMOUS_OWNER allowed.\n@@ -1583,1 +1583,1 @@\n-  if (cur == owner_from(current)) {\n+  if (cur == owner_id_from(current)) {\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-  int64_t volatile _owner;  \/\/ Either tid of owner, NO_OWNER, ANONYMOUS_OWNER or DEFLATER_MARKER.\n+  int64_t volatile _owner;  \/\/ Either owner_id of owner, NO_OWNER, ANONYMOUS_OWNER or DEFLATER_MARKER.\n@@ -287,3 +287,3 @@\n-  \/\/ the monitor with the given thread\/vthread (tid).\n-  static int64_t owner_from(JavaThread* thread);\n-  static int64_t owner_from(oop vthread);\n+  \/\/ the monitor with the given thread\/vthread, AKA owner_id.\n+  static int64_t owner_id_from(JavaThread* thread);\n+  static int64_t owner_id_from(oop vthread);\n@@ -295,1 +295,1 @@\n-  \/\/ Clear _owner field; current value must match thread's tid.\n+  \/\/ Clear _owner field; current value must match thread's owner_id.\n@@ -299,1 +299,1 @@\n-  \/\/ Same as above but uses tid of current as new value.\n+  \/\/ Same as above but uses owner_id of current as new value.\n@@ -305,1 +305,1 @@\n-  \/\/ Same as above but uses tid of current as new_value.\n+  \/\/ Same as above but uses owner_id of current as new_value.\n@@ -319,3 +319,3 @@\n-  \/\/ Returns true if _owner field == tid of thread, false otherwise.\n-  bool has_owner(JavaThread* thread) const { return owner() == owner_from(thread); }\n-  \/\/ Set _owner field to tid of thread; current value must be NO_OWNER.\n+  \/\/ Returns true if _owner field == owner_id of thread, false otherwise.\n+  bool has_owner(JavaThread* thread) const { return owner() == owner_id_from(thread); }\n+  \/\/ Set _owner field to owner_id of thread; current value must be NO_OWNER.\n@@ -323,1 +323,1 @@\n-  \/\/ Try to set _owner field from NO_OWNER to tid of thread.\n+  \/\/ Try to set _owner field from NO_OWNER to owner_id of thread.\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -42,4 +42,4 @@\n-inline int64_t ObjectMonitor::owner_from(JavaThread* thread) {\n-  int64_t tid = thread->lock_id();\n-  assert(tid >= ThreadIdentifier::initial() && tid < ThreadIdentifier::current(), \"must be reasonable\");\n-  return tid;\n+inline int64_t ObjectMonitor::owner_id_from(JavaThread* thread) {\n+  int64_t id = thread->monitor_owner_id();\n+  assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"must be reasonable\");\n+  return id;\n@@ -48,4 +48,4 @@\n-inline int64_t ObjectMonitor::owner_from(oop vthread) {\n-  int64_t tid = java_lang_Thread::thread_id(vthread);\n-  assert(tid >= ThreadIdentifier::initial() && tid < ThreadIdentifier::current(), \"must be reasonable\");\n-  return tid;\n+inline int64_t ObjectMonitor::owner_id_from(oop vthread) {\n+  int64_t id = java_lang_Thread::thread_id(vthread);\n+  assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"must be reasonable\");\n+  return id;\n@@ -156,1 +156,1 @@\n-  int64_t old_value = owner_from(old_owner);\n+  int64_t old_value = owner_id_from(old_owner);\n@@ -185,1 +185,1 @@\n-  set_owner_from_raw(old_value, owner_from(current));\n+  set_owner_from_raw(old_value, owner_id_from(current));\n@@ -204,1 +204,1 @@\n-  return try_set_owner_from_raw(old_value, owner_from(current));\n+  return try_set_owner_from_raw(old_value, owner_id_from(current));\n@@ -212,1 +212,1 @@\n-  return owner_from(thread) == Atomic::load(&_succ);\n+  return owner_id_from(thread) == Atomic::load(&_succ);\n@@ -216,1 +216,1 @@\n-  Atomic::store(&_succ, owner_from(thread));\n+  Atomic::store(&_succ, owner_id_from(thread));\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1246,1 +1246,1 @@\n-  int64_t key = ObjectMonitor::owner_from(thread);\n+  int64_t key = ObjectMonitor::owner_id_from(thread);\n@@ -1252,1 +1252,1 @@\n-  int64_t key = ObjectMonitor::owner_from(vthread);\n+  int64_t key = ObjectMonitor::owner_id_from(vthread);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-  assert(main_thread_tid == thread->lock_id(), \"\");\n+  assert(main_thread_tid == thread->monitor_owner_id(), \"\");\n@@ -551,1 +551,1 @@\n-  \/\/ Set the lock_id now since we will run Java code before the Thread instance\n+  \/\/ Set the _monitor_owner_id now since we will run Java code before the Thread instance\n@@ -553,1 +553,1 @@\n-  main_thread->set_lock_id(ThreadIdentifier::next());\n+  main_thread->set_monitor_owner_id(ThreadIdentifier::next());\n@@ -1363,2 +1363,1 @@\n-          \/\/ _lock_id is the thread ID of the mounted virtual thread\n-          st->print_cr(\"   Mounted virtual thread #\" INT64_FORMAT, p->lock_id());\n+          st->print_cr(\"   Mounted virtual thread #\" INT64_FORMAT, java_lang_Thread::thread_id(p->vthread()));\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-    int64_t key = ObjectMonitor::owner_from(thread);\n+    int64_t key = ObjectMonitor::owner_id_from(thread);\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -667,1 +667,1 @@\n-  nonstatic_field(JavaThread,                  _lock_id,                                      int64_t)                               \\\n+  nonstatic_field(JavaThread,                  _monitor_owner_id,                             int64_t)                               \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  private static CIntegerField lockIdField;\n+  private static CIntegerField monitorOwnerIDField;\n@@ -105,1 +105,1 @@\n-    lockIdField        = type.getCIntegerField(\"_lock_id\");\n+    monitorOwnerIDField = type.getCIntegerField(\"_monitor_owner_id\");\n@@ -381,2 +381,2 @@\n-  public Address getLockId() {\n-    return lockIdField.getAddress(addr);\n+  public Address getMonitorOwnerID() {\n+    return monitorOwnerIDField.getAddress(addr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JavaThread.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-            if (o.equals(thread.getLockId())) {\n+            if (o.equals(thread.getMonitorOwnerID())) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}