{"files":[{"patch":"@@ -27,1 +27,1 @@\n-java.launcher.opt.header  =   Verwendung: {0} [Optionen] <Hauptklasse> [args...]\\n           (zur Ausführung einer Klasse)\\n   oder  {0} [Optionen] -jar <JAR-Datei> [args...]\\n           (zur Ausführung einer JAR-Datei)\\n   oder  {0} [Optionen] -m <Modul>[\/<Hauptklasse>] [args...]\\n       {0} [Optionen] --module <Modul>[\/<Hauptklasse>] [args...]\\n            (zur Ausführung der Hauptklasse in einem Modul)\\n   oder  {0} [Optionen] <Quelldatei> [args]\\n           (zur Ausführung eines Programms mit einer Quelldatei)\\n\\n Argumente, die auf die Hauptklasse, die Quelldatei, -jar <JAR-Datei>, -m oder --module\\n <Modul>\/<Hauptklasse> folgen, werden als Argumente für die\\nHauptklasse übergeben.\\n\\n Dabei umfasst \"Optionen\" Folgendes:\\n\\n\n+java.launcher.opt.header  =   Verwendung: {0} [Optionen] <Hauptklasse> [Argumente...]\\n           (zur Ausführung einer Klasse)\\n   oder {0} [Optionen] -jar <JAR-Datei>.jar [Argumente...]\\n           (zur Ausführung einer JAR-Datei)\\n   oder {0} [Optionen] -m <Modul>[\/<Hauptklasse>] [Argumente...]\\n       {0} [Optionen] --module <Modul>[\/<Hauptklasse>] [Argumente...]\\n            (zur Ausführung der Hauptklasse in einem Modul)\\n   oder {0} [Optionen] <Quelldatei>.java [Argumente]\\n           (zur Ausführung eines Programms mit einer Quelldatei)\\n\\n Argumente, die auf die Hauptklasse, die Quelldatei, -jar <JAR-Datei>.jar, -m oder --module\\n <Modul>\/<Hauptklasse> folgen, werden als Argumente für die\\nHauptklasse übergeben.\\n\\n Dabei umfasst \"Optionen\" Folgendes:\\n\\n\n@@ -33,2 +33,2 @@\n-java.launcher.opt.footer = \\    -cp <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    -classpath <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    --class-path <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n                  Eine durch {0} getrennte Liste mit Verzeichnissen, JAR-Archiven\\n                  und ZIP-Archiven, in denen nach Klassendateien gesucht wird.\\n    -p <Modulpfad>\\n    --module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --upgrade-module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist,\\n                  um upgradefähige Module im Laufzeitimage zu ersetzen. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --add-modules <Modulname>[,<Modulname>...]\\n                  Root-Module, die zusätzlich zum anfänglichen Modul aufgelöst werden sollen.\\n                  <Modulname> kann auch wie folgt lauten: ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <Modulname>[,<Modulname>...]\\n                  Damit kann der Code in Modulen auf Code und Daten außerhalb der JRE zugreifen.\\n                  <Modulname> kann auch ALL-UNNAMED sein, um den Code im Classpath anzugeben.\\n    --list-modules\\n                  Listet beobachtbare Module auf und beendet den Vorgang\\n    -d <Modulname>\\n    --describe-module <Modulname>\\n                  Beschreibt ein Modul und beendet den Vorgang\\n    --dry-run     Erstellt eine VM und lädt die Hauptklasse, führt aber nicht die Hauptmethode aus.\\n                  Die Option \"--dry-run\" kann nützlich sein, um die\\n                  Befehlszeilenoptionen, wie die Modulsystemkonfiguration, zu validieren.\\n    --validate-modules\\n                  Validiert alle Module und beendet den Vorgang\\n                  Die Option \"--validate-modules\" kann nützlich sein, um\\n                  Konflikte und andere Fehler mit Modulen auf dem Modulpfad zu ermitteln.\\n    -D<Name>=<Wert>\\n                  Legt eine Systemeigenschaft fest\\n    -verbose:[class|module|gc|jni]\\n                  Aktiviert die Verbose-Ausgabe für das angegebene Subsystem\\n    -version      Gibt die Produktversion an den Fehlerstream aus und beendet den Vorgang\\n    --version      Gibt die Produktversion an den Outputstream aus und beendet den Vorgang\\n    -showversion  Gibt die Produktversion an den Fehlerstream aus und setzt den Vorgang fort\\n    --show-version\\n                  Gibt die Produktversion an den Outputstream aus und setzt den Vorgang fort\\n    --show-module-resolution\\n                  Zeigt die Modulauflösungsausgabe beim Start an\\n    -? -h -help\\n                  Gibt diese Hilfemeldung an den Fehlerstream aus\\n    --help        Gibt diese Hilfemeldung an den Outputstream aus\\n    -X            Gibt Hilfe zu zusätzlichen Optionen an den Fehlerstream aus\\n    --help-extra  Gibt Hilfe zu zusätzlichen Optionen an den Outputstream aus\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  Aktiviert Assertions mit angegebener Granularität\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  Deaktiviert Assertions mit angegebener Granularität\\n    -esa | -enablesystemassertions\\n                  Aktiviert System-Assertions\\n    -dsa | -disablesystemassertions\\n                  Deaktiviert System-Assertions\\n    -agentlib:<libname>[=<options>]\\n                  Lädt die \\\n-native Agent Library <libname>. Beispiel: -agentlib:jdwp\\n                  siehe auch -agentlib:jdwp=help\\n    -agentpath:<pathname>[=<options>]\\n                  Lädt die native Agent Library mit dem vollständigen Pfadnamen\\n    -javaagent:<jarpath>[=<options>]\\n                  Lädt den Java-Programmiersprachen-Agent, siehe java.lang.instrument\\n    -splash:<imagepath>\\n                  Zeigt den Startbildschirm mit einem angegebenen Bild an\\n                  Skalierte HiDPI-Bilder werden automatisch unterstützt und verwendet,\\n                  falls verfügbar. Der nicht skalierte Bilddateiname (Beispiel: image.ext)\\n                  muss immer als Argument an die Option \"-splash\" übergeben werden.\\n                  Das am besten geeignete angegebene skalierte Bild wird\\n                  automatisch ausgewählt.\\n                  Weitere Informationen finden Sie in der Dokumentation zur SplashScreen-API\\n    @argument files\\n                  Eine oder mehrere Argumentdateien mit Optionen\\n    --disable-@files\\n                  Verhindert die weitere Erweiterung von Argumentdateien\\n    --enable-preview\\n                  Lässt zu, das Klassen von Vorschaufeatures dieses Release abhängig sind\\nUm ein Argument für eine lange Option anzugeben, können Sie --<Name>=<Wert> oder\\n--<Name> <Wert> verwenden.\\n\n+java.launcher.opt.footer = \\    -cp <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    -classpath <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    --class-path <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n                  Eine durch \"{0}\" getrennte Liste mit Verzeichnissen, JAR-Archiven\\n                  und ZIP-Archiven, in denen nach Klassendateien gesucht wird.\\n    -p <Modulpfad>\\n    --module-path <Modulpfad>...\\n                  Eine durch \"{0}\" getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad ist\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --upgrade-module-path <Modulpfad>...\\n                  Eine durch \"{0}\" getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad ist\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist,\\n                  um upgradefähige Module im Laufzeitimage zu ersetzen. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --add-modules <Modulname>[,<Modulname>...]\\n                  Root-Module, die zusätzlich zum anfänglichen Modul aufgelöst werden sollen.\\n                  <Modulname> kann auch wie folgt lauten: ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <Modulname>[,<Modulname>...]\\n                  Damit kann der Code in Modulen auf Code und Daten außerhalb der JRE zugreifen.\\n                  <Modulname> kann auch ALL-UNNAMED sein, um den Code im Classpath anzugeben.\\n    --illegal-native-access=<Wert>\\n                  Zugriff auf Code und Daten außerhalb der JRE\\n                  durch Code in Modulen zulassen oder verweigern, für die der native Zugriff nicht explizit aktiviert ist.\\n                  <Wert> ist \"deny\", \"warn\" oder \"allow\". Der Standardwert ist \"warn\".\\n                  Diese Option wird in einem zukünftigen Release entfernt.\\n    --list-modules\\n                  Listet beobachtbare Module auf und beendet den Vorgang\\n    -d <Modulname>\\n    --describe-module <Modulname>\\n                  Beschreibt ein Modul und beendet den Vorgang\\n    --dry-run     Erstellt eine VM und lädt die Hauptklasse, führt aber nicht die Hauptmethode aus.\\n                  Die Option \"--dry-run\" kann nützlich sein, um die\\n                  Befehlszeilenoptionen, wie die Modulsystemkonfiguration, zu validieren.\\n    --validate-modules\\n                  Validiert alle Module und beendet den Vorgang\\n                  Die Option \"--validate-modules\" kann nützlich sein, um\\n                  Konflikte und andere Fehler mit Modulen auf dem Modulpfad zu ermitteln.\\n    -D<Name>=<Wert>\\n                  Legt eine Systemeigenschaft fest\\n    -verbose:[class|module|gc|jni]\\n                  Aktiviert die Verbose-Ausgabe für das angegebene Subsystem\\n    -version      Gibt die Produktversion an den Fehlerstream aus und beendet den Vorgang\\n    --version      Gibt die Produktversion an den Outputstream aus und beendet den Vorgang\\n    -showversion  Gibt die Produktversion an den Fehlerstream aus und setzt den Vorgang fort\\n    --show-version\\n                  Gibt die Produktversion an den Outputstream aus und setzt den Vorgang fort\\n    --show-module-resolution\\n                  Zeigt die Modulauflösungsausgabe beim Start an\\n    -? -h -help\\n                  Gibt diese Hilfemeldung an den Fehlerstream aus\\n    --help        Gibt diese Hilfemeldung an den Outputstream aus\\n    -X            Gibt Hilfe zu zusätzlichen Optionen an den Fehlerstream aus\\n    --help-extra  Gibt Hilfe zu zusätzlichen Optionen an den Outputstream aus\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  Aktiviert Assertions mit angegebener \\\n+Granularität\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  Deaktiviert Assertions mit angegebener Granularität\\n    -esa | -enablesystemassertions\\n                  Aktiviert System-Assertions\\n    -dsa | -disablesystemassertions\\n                  Deaktiviert System-Assertions\\n    -agentlib:<libname>[=<options>]\\n                  Lädt die native Agent Library <libname>. Beispiel: -agentlib:jdwp\\n                  siehe auch -agentlib:jdwp=help\\n    -agentpath:<pathname>[=<options>]\\n                  Lädt die native Agent Library mit dem vollständigen Pfadnamen\\n    -javaagent:<jarpath>[=<options>]\\n                  Lädt den Java-Programmiersprachen-Agent, siehe java.lang.instrument\\n    -splash:<imagepath>\\n                  Zeigt den Startbildschirm mit einem angegebenen Bild an\\n                  Skalierte HiDPI-Bilder werden automatisch unterstützt und verwendet,\\n                  falls verfügbar. Der nicht skalierte Bilddateiname (Beispiel: image.ext)\\n                  muss immer als Argument an die Option \"-splash\" übergeben werden.\\n                  Das am besten geeignete angegebene skalierte Bild wird\\n                  automatisch ausgewählt.\\n                  Weitere Informationen finden Sie in der Dokumentation zur SplashScreen-API\\n    @argument files\\n                  Eine oder mehrere Argumentdateien mit Optionen\\n    --disable-@files\\n                  Verhindert die weitere Erweiterung von Argumentdateien\\n    --enable-preview\\n                  Lässt zu, das Klassen von Vorschaufeatures dieses Release abhängig sind\\nUm ein Argument für eine lange Option anzugeben, können Sie --<Name>=<Wert> oder\\n--<Name> <Wert> verwenden.\\n\n@@ -37,2 +37,2 @@\n-java.launcher.X.usage=\\n    -Xbatch           Deaktiviert die Hintergrundkompilierung\\n    -Xbootclasspath\/a:<durch {0} getrennte Verzeichnisse und ZIP-\/JAR-Dateien>\\n                      An das Ende des Bootstrap Classpaths anhängen\\n    -Xcheck:jni       Führt zusätzliche Prüfungen für JNI-Funktionen aus\\n    -Xcomp            Erzwingt die Kompilierung von Methoden beim ersten Aufruf\\n    -Xdebug           Führt keine Aktion aus. Ist veraltet und wird in einem zukünftigen Release entfernt.\\n    -Xdiag            Zeigt zusätzliche Diagnosemeldungen an\\n    -Xfuture          Aktiviert strengste Prüfungen, als möglicher zukünftiger Standardwert erwartet.\\n                      Diese Option ist veraltet und kann in einem\\n                      zukünftigen Release entfernt werden.\\n    -Xint             Nur Ausführung im interpretierten Modus\\n    -Xinternalversion\\n                      Zeigt detailliertere JVM-Versionsinformationen an als die\\n                      Option -version\\n    -Xlog:<Optionen>      Konfiguriert oder aktiviert Logging mit dem einheitlichen Java Virtual\\n                      Machine-(JVM-)Logging-Framework. Verwenden Sie -Xlog:help\\n                      für weitere Einzelheiten.\\n    -Xloggc:<Datei>    Protokolliert den GC-Status in einer Datei mit Zeitstempeln.\\n                      Diese Option ist veraltet und kann in einem\\n                      zukünftigen Release entfernt werden. Wird durch -Xlog:gc:<Datei> ersetzt.\\n    -Xmixed           Ausführung im gemischten Modus (Standard)\\n    -Xmn<Größe>        Legt die anfängliche und maximale Größe (in Byte) des Heaps\\n                      für die Young Generation (Nursery) fest\\n    -Xms<Größe>        Legt die anfängliche Java-Heap-Größe fest\\n    -Xmx<Größe>        Legt die maximale Java-Heap-Größe fest\\n    -Xnoclassgc       Deaktiviert die Klassen-Garbage Collection\\n    -Xrs               Reduziert die Verwendung von BS-Signalen durch Java\/VM (siehe Dokumentation)\\n    -Xshare:auto      Verwendet freigegebene Klassendaten, wenn möglich (Standard)\\n    -Xshare:off       Versucht nicht, freigegebene Klassendaten zu verwenden\\n    -Xshare:on        Erfordert die Verwendung freigegebener Klassendaten, verläuft sonst nicht erfolgreich.\\n                      Diese Testoption kann zeitweise zu\\n                      Fehlern führen. Sie darf nicht in Produktionsumgebungen verwendet werden.\\n    -XshowSettings    Zeigt alle Einstellungen an und fährt fort\\n    -XshowSettings:all\\n                      Zeigt alle Einstellungen als Verbose-Ausgabe an und fährt fort\\n    -XshowSettings:locale\\n                      Zeigt alle gebietsschemabezogenen Einstellungen an und fährt fort\\n    -XshowSettings:properties\\n                      Zeigt alle Eigenschaftseinstellungen an und fährt fort\\n    -XshowSettings:vm\\n                      Zeigt alle VM-bezogenen Einstellungen an und fährt fort\\n    -XshowSettings:security\\n                      Zeigt alle Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:security:all\\n                      Zeigt alle Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:security:properties\\n                      Zeigt Sicherheitseigenschaften an und fährt fort\\n    -XshowSettings:security:providers\\n                      Zeigt statische Sicherheitsprovidereinstellungen an und fährt fort\\n    -XshowSettings:security:tls\\n                      Zeigt TLS-bezogene Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:system\\n                      (Nur Linux) Zeigt die Konfiguration des Hostsystems oder Containers an\\n                      und fährt fort\\n    -Xss<Größe>        Legt die Stackgröße des Java-Threads fest\\n                      Die tatsächliche \\\n-Größe kann auf ein Vielfaches der\\n                      Systemseitengröße aufgerundet werden, wenn für das Betriebssystem erforderlich.\\n    -Xverify          Legt den Modus der Bytecodeverifizierung fest\\n                      Beachten Sie, dass die Option -Xverify:none veraltet ist und\\n                      in einem zukünftigen Release entfernt werden kann.\\n    --add-reads <Modul>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, damit <Zielmodul> gelesen wird, ungeachtet\\n                      der Moduldeklaration. \\n                      <Zielmodul> kann ALL-UNNAMED sein, um alle unbenannten\\n                      Module zu lesen.\\n    --add-exports <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in <Zielmodul> zu exportieren,\\n                      ungeachtet der Moduldeklaration.\\n                      <Zielmodul> kann ALL-UNNAMED sein, um in alle\\n                      unbenannten Module zu exportieren.\\n    --add-opens <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in\\n                      <Zielmodul> zu öffnen, ungeachtet der Moduldeklaration.\\n    --limit-modules <Modulname>[,<Modulname>...]\\n                      Grenzt die Gesamtmenge der beobachtbaren Module ein\\n    --patch-module <Modul>=<Datei>({0}<Datei>)*\\n                      Überschreibt oder erweitert ein Modul mit Klassen und Ressourcen\\n                      in JAR-Dateien oder Verzeichnissen.\\n    --source <Version>\\n                      Legt die Version der Quelle im Quelldateimodus fest.\\n    --finalization=<Wert>\\n                      Steuert, ob die JVM Objekte finalisiert.\\n                      Dabei ist <Wert> entweder \"enabled\" oder \"disabled\".\\n                      Die Finalisierung ist standardmäßig aktiviert.\\n    --sun-misc-unsafe-memory-access=<value>\\n                      Verwendung der nicht unterstützten API sun.misc.Unsafe zulassen oder verweigern\\n                      <value> ist \"allow\", \"warn\", \"debug\" oder \"deny\".\\n                      Der Standardwert ist \"allow\".\\n\\nDiese zusätzlichen Optionen können jederzeit ohne vorherige Ankündigung geändert werden.\\n\n+java.launcher.X.usage=\\n    -Xbatch           Deaktiviert die Hintergrundkompilierung\\n    -Xbootclasspath\/a:<durch {0} getrennte Verzeichnisse und ZIP-\/JAR-Dateien>\\n                      An das Ende des Bootstrap Classpaths anhängen\\n    -Xcheck:jni       Führt zusätzliche Prüfungen für JNI-Funktionen aus\\n    -Xcomp            Erzwingt die Kompilierung von Methoden beim ersten Aufruf\\n    -Xdebug           Führt keine Aktion aus. Ist veraltet und wird in einem zukünftigen Release entfernt.\\n    -Xdiag            Zeigt zusätzliche Diagnosemeldungen an\\n    -Xint             Nur Ausführung im interpretierten Modus\\n    -Xinternalversion\\n                      Zeigt detailliertere JVM-Versionsinformationen an als die\\n                      Option -version\\n    -Xlog:<Optionen>      Konfiguriert oder aktiviert Logging mit dem einheitlichen Java Virtual\\n                      Machine-(JVM-)Logging-Framework. Verwenden Sie -Xlog:help\\n                      für weitere Einzelheiten.\\n    -Xloggc:<Datei>    Protokolliert den GC-Status in einer Datei mit Zeitstempeln.\\n                      Diese Option ist veraltet und kann in einem\\n                      zukünftigen Release entfernt werden. Wird durch -Xlog:gc:<Datei> ersetzt.\\n    -Xmixed           Ausführung im gemischten Modus (Standard)\\n    -Xmn<Größe>        Legt die anfängliche und maximale Größe (in Byte) des Heaps\\n                      für die Young Generation (Nursery) fest\\n    -Xms<Größe>        Legt die anfängliche Java-Heap-Größe fest\\n    -Xmx<Größe>        Legt die maximale Java-Heap-Größe fest\\n    -Xnoclassgc       Deaktiviert die Klassen-Garbage Collection\\n    -Xrs               Reduziert die Verwendung von BS-Signalen durch Java\/VM (siehe Dokumentation)\\n    -Xshare:auto      Verwendet freigegebene Klassendaten, wenn möglich (Standard)\\n    -Xshare:off       Versucht nicht, freigegebene Klassendaten zu verwenden\\n    -Xshare:on        Erfordert die Verwendung freigegebener Klassendaten, verläuft sonst nicht erfolgreich.\\n                      Diese Testoption kann zeitweise zu\\n                      Fehlern führen. Sie darf nicht in Produktionsumgebungen verwendet werden.\\n    -XshowSettings    Zeigt alle Einstellungen an und fährt fort\\n    -XshowSettings:all\\n                      Zeigt alle Einstellungen als Verbose-Ausgabe an und fährt fort\\n    -XshowSettings:locale\\n                      Zeigt alle gebietsschemabezogenen Einstellungen an und fährt fort\\n    -XshowSettings:properties\\n                      Zeigt alle Eigenschaftseinstellungen an und fährt fort\\n    -XshowSettings:vm\\n                      Zeigt alle VM-bezogenen Einstellungen an und fährt fort\\n    -XshowSettings:security\\n                      Zeigt alle Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:security:all\\n                      Zeigt alle Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:security:properties\\n                      Zeigt Sicherheitseigenschaften an und fährt fort\\n    -XshowSettings:security:providers\\n                      Zeigt statische Sicherheitsprovidereinstellungen an und fährt fort\\n    -XshowSettings:security:tls\\n                      Zeigt TLS-bezogene Sicherheitseinstellungen an und fährt fort\\n    -XshowSettings:system\\n                      (Nur Linux) Zeigt die Konfiguration des Hostsystems oder Containers an\\n                      und fährt fort\\n    -Xss<Größe>        Legt die Stackgröße des Java-Threads fest\\n                      Die tatsächliche Größe kann auf ein Vielfaches der\\n                      Systemseitengröße aufgerundet werden, wenn für das Betriebssystem erforderlich.\\n    -Xverify          Legt den Modus der Bytecodeverifizierung fest\\n                  \\\n+    Beachten Sie, dass die Option -Xverify:none veraltet ist und\\n                      in einem zukünftigen Release entfernt werden kann.\\n    --add-reads <Modul>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, damit <Zielmodul> gelesen wird, ungeachtet\\n                      der Moduldeklaration. \\n                      <Zielmodul> kann ALL-UNNAMED sein, um alle unbenannten\\n                      Module zu lesen.\\n    --add-exports <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in <Zielmodul> zu exportieren,\\n                      ungeachtet der Moduldeklaration.\\n                      <Zielmodul> kann ALL-UNNAMED sein, um in alle\\n                      unbenannten Module zu exportieren.\\n    --add-opens <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in\\n                      <Zielmodul> zu öffnen, ungeachtet der Moduldeklaration.\\n    --limit-modules <Modulname>[,<Modulname>...]\\n                      Grenzt die Gesamtmenge der beobachtbaren Module ein\\n    --patch-module <Modul>=<Datei>({0}<Datei>)*\\n                      Überschreibt oder erweitert ein Modul mit Klassen und Ressourcen\\n                      in JAR-Dateien oder Verzeichnissen.\\n    --source <Version>\\n                      Legt die Version der Quelle im Quelldateimodus fest.\\n    --finalization=<Wert>\\n                      Steuert, ob die JVM Objekte finalisiert.\\n                      Dabei ist <Wert> entweder \"enabled\" oder \"disabled\".\\n                      Die Finalisierung ist standardmäßig aktiviert.\\n    --sun-misc-unsafe-memory-access=<value>\\n                      Verwendung der nicht unterstützten API sun.misc.Unsafe zulassen oder verweigern\\n                      <value> ist \"allow\", \"warn\", \"debug\" oder \"deny\".\\n                      Der Standardwert ist \"warn\".\\n\\nDiese zusätzlichen Optionen können jederzeit ohne vorherige Ankündigung geändert werden.\\n\n@@ -43,0 +43,3 @@\n+# Translators please note do not translate the options themselves\n+java.launcher.opt.concise.header  =   Verwendung: java [Java-Optionen...] <Anwendung> [Anwendungsargumente...]\\n\\nDabei ist <Anwendung> einer der folgenden Werte:\\n  <Hauptklasse>                Zum Ausführen der Hauptmethode einer kompilierten Hauptklasse\\n  -jar <JAR-Datei>.jar         Zum Ausführen der Hauptklasse eines JAR-Archivs\\n  -m <Modul>[\/<Hauptklasse>] Zum Ausführen der Hauptklasse eines Moduls\\n  <Quelldatei>.java          Zum Kompilieren und Ausführen eines Quelldateiprogramms\\n\\nDabei sind die folgenden wichtigen Java-Optionen verfügbar:\\n  --class-path <Classpath>\\n    <Classpath> ist eine durch \"{0}\" getrennte Liste der Verzeichnisse und JAR-Archive, in denen nach Klassendateien gesucht werden soll\\n  --module-path <Modulpfad>\\n    <Modulpfad> ist eine durch \"{0}\" getrennte Liste der Verzeichnisse und JAR-Archive, in denen nach Modulen gesucht werden soll\\n  -version\\n    Zum Ausgeben der Produktversion in den Fehlerstream und Beenden des Vorgangs\\n\\nFür weitere Verwendungshilfe:           java --help\\nFür eine interaktive Java-Umgebung:    jshell\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_de.properties","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-java.launcher.opt.header  =   使用方法: {0} [options] <mainclass> [args...]\\n           (クラスを実行する場合)\\n   または  {0} [options] -jar <jarfile> [args...]\\n           (jarファイルを実行する場合)\\n   または  {0} [options] -m <module>[\/<mainclass>] [args...]\\n       {0} [options] --module <module>[\/<mainclass>] [args...]\\n           (モジュールのメイン・クラスを実行する場合)\\n   または  {0} [options] <sourcefile> [args]\\n           (ソースファイル・プログラムを実行する場合)\\n\\n メイン・クラス、ソース・ファイル、-jar <jarfile>、\\n -mまたは--module <module>\/<mainclass>に続く引数は、メイン・クラスへの引数として\\n 渡されます。\\n\\n オプションは次のとおりです:\\n\\n\n+java.launcher.opt.header  =   使用方法: {0} [options] <mainclass> [args...]\\n           (クラスを実行する場合)\\n   または  {0} [options] -jar <jarfile>.jar [args...]\\n           (jarファイルを実行する場合)\\n   または  {0} [options] -m <module>[\/<mainclass>] [args...]\\n       {0} [options] --module <module>[\/<mainclass>] [args...]\\n           (モジュールのメイン・クラスを実行する場合)\\n   または  {0} [options] <sourcefile>.java [args]\\n           (ソースファイル・プログラムを実行する場合)\\n\\n メイン・クラス、ソース・ファイル、-jar <jarfile>.jar、\\n-mまたは--module <module>\/<mainclass>に続く引数は、メイン・クラスへの引数として\\n渡されます。\\n\\n オプションは次のとおりです:\\n\\n\n@@ -33,3 +33,3 @@\n-java.launcher.opt.footer = \\    -cp <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n    -classpath <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n    --class-path <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n                  {0}区切りリスト(ディレクトリ、JARアーカイブ、\\n                  ZIPアーカイブ)で、クラス・ファイルの検索用。\\n    -p <module path>\\n    --module-path <module path>...\\n                  要素を{0}で区切ったリストで、各要素は次へのファイル・パスです:\\n                  モジュール、またはモジュールが格納されているディレクトリ。各モジュールは次のいずれかです:\\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\\n    --upgrade-module-path <module path>...\\n                  要素を{0}で区切ったリストで、各要素は次へのファイル・パスです:\\n                  モジュール、またはモジュールが格納されているディレクトリで、次のものを置き換えます:\\n                  ランタイム・イメージのアップグレード可能なモジュール。各モジュールは次のいずれかです:\\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\\n    --add-modules <module name>[,<module name>...]\\n                  初期モジュールに加えて解決するルート・モジュール。\\n                  <module name>には次も指定できます: ALL-DEFAULT、ALL-SYSTEM、\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  モジュール内のコードをJavaランタイムの外のコードおよびデータにアクセスさせることができます。\\n                  <module name>は、クラス・パス上のコードを指定するためにALL-UNNAMEDにもできます。\\n    --list-modules\\n                  参照可能なモジュールをリストし終了します\\n    -d <module name>\\n    --describe-module <module name>\\n                  モジュールを説明し終了します\\n    --dry-run     VMを作成しメイン・クラスをロードしますが、メイン・メソッドは実行しません。\\n                  \\\n---dry-runオプションは、次の検証に役立つ場合があります:\\n                  モジュール・システム構成などのコマンド行オプション。\\n    --validate-modules\\n                  すべてのモジュールを検証し終了します\\n                  --validate-modulesオプションは、次の検索に役立つ場合があります:\\n                  モジュール・パス上のモジュールでの競合およびその他のエラー。\\n    -D<name>=<value>\\n                  システム・プロパティを設定します\\n    -verbose:[class|module|gc|jni]\\n                  特定のサブシステムで詳細出力を有効にする\\n    -version      製品バージョンをエラー・ストリームに出力して終了します\\n    --version     製品バージョンを出力ストリームに出力して終了します\\n    -showversion  製品バージョンをエラー・ストリームに出力して続行します\\n    --show-version\\n                  製品バージョンを出力ストリームに出力して続行します\\n    --show-module-resolution\\n                  起動時にモジュール解決出力を表示します\\n    -? -h -help\\n                  このヘルプ・メッセージをエラー・ストリームに出力します\\n    --help        このヘルプ・メッセージを出力ストリームに出力します\\n    -X            追加オプションのヘルプをエラー・ストリームに出力します\\n    --help-extra  追加オプションのヘルプを出力ストリームに出力します\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  指定した粒度でアサーションを有効にします\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  指定した粒度でアサーションを無効にします\\n    -esa | -enablesystemassertions\\n                  システム・アサーションを有効にします\\n    -dsa | -disablesystemassertions\\n                  システム・アサーションを無効にします\\n    -agentlib:<libname>[=<options>]\\n                  ネイティブ・エージェント・ライブラリ<libname>をロードします。例: -agentlib:jdwp\\n                  -agentlib:jdwp=helpも参照してください\\n    -agentpath:<pathname>[=<options>]\\n                  \\\n-フルパス名を使用して、ネイティブ・エージェント・ライブラリをロードします\\n    -javaagent:<jarpath>[=<options>]\\n                  Javaプログラミング言語エージェントをロードします。java.lang.instrumentを参照してください\\n    -splash:<imagepath>\\n                  指定されたイメージを含むスプラッシュ画面を表示します\\n                  HiDPIスケールのイメージが自動的にサポートされて使用されます\\n                  (可能な場合)。スケーリングされないイメージのファイル名(image.extなど)を\\n                  引数として-splashオプションに必ず渡す必要があります。\\n                  指定された最も適切なスケーリング済イメージが選択されます\\n                  (自動的)。\\n                  詳細は、SplashScreen APIのドキュメントを参照してください\\n    @argumentファイル\\n                  オプションを含む1つ以上の引数ファイル\\n    --disable-@files\\n                  さらなる引数ファイル拡張を無効にします\\n    --enable-preview\\n                  クラスをこのリリースのプレビュー機能に依存させることができます\\n長いオプションの引数を指定する場合、--<name>=<value>または\\n--<name> <value>を使用できます。\\n\n+java.launcher.opt.footer = \\    -cp <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n    -classpath <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n    --class-path <ディレクトリおよびzip\/jarファイルのクラス検索パス>\\n                  \"{0}\"区切りリスト(ディレクトリ、JARアーカイブ、\\n                  ZIPアーカイブ)で、クラス・ファイルの検索用。\\n    -p <module path>\\n    --module-path <module path>...\\n                  要素を\"{0}\"で区切ったリストで、各要素は次へのファイル・パスです:\\n                  モジュール、またはモジュールが格納されているディレクトリ。各モジュールは次のいずれかです:\\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\\n    --upgrade-module-path <module path>...\\n                  要素を\"{0}\"で区切ったリストで、各要素は次へのファイル・パスです:\\n                  モジュール、またはモジュールが格納されているディレクトリで、次のものを置き換えます:\\n                  ランタイム・イメージのアップグレード可能なモジュール。各モジュールは次のいずれかです:\\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\\n    --add-modules <module name>[,<module name>...]\\n                  初期モジュールに加えて解決するルート・モジュール。\\n                  <module name>には次も指定できます: ALL-DEFAULT、ALL-SYSTEM、\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  モジュール内のコードをJavaランタイムの外のコードおよびデータにアクセスさせることができます。\\n                  <module name>は、クラス・パス上のコードを指定するためにALL-UNNAMEDにもできます。\\n    --illegal-native-access=<value>\\n                  Javaランタイムの外のコードおよびデータへのアクセスを許可または拒否します\\n                  (ネイティブ・アクセスが明示的に有効化されていないモジュール内のコードによる)。\\n                  \\\n+<value>は、\"deny\"、\"warn\"または\"allow\"のいずれかです。デフォルト値は\"warn\"です。\\n                  このオプションは、将来のリリースで削除される予定です。\\n    --list-modules\\n                  参照可能なモジュールをリストし終了します\\n    -d <module name>\\n    --describe-module <module name>\\n                  モジュールを説明し終了します\\n    --dry-run     VMを作成しメイン・クラスをロードしますが、メイン・メソッドは実行しません。\\n                  --dry-runオプションは、次の検証に役立つ場合があります:\\n                  モジュール・システム構成などのコマンド行オプション。\\n    --validate-modules\\n                  すべてのモジュールを検証し終了します\\n                  --validate-modulesオプションは、次の検索に役立つ場合があります:\\n                  モジュール・パス上のモジュールでの競合およびその他のエラー。\\n    -D<name>=<value>\\n                  システム・プロパティを設定します\\n    -verbose:[class|module|gc|jni]\\n                  特定のサブシステムで詳細出力を有効にする\\n    -version      製品バージョンをエラー・ストリームに出力して終了します\\n    --version     製品バージョンを出力ストリームに出力して終了します\\n    -showversion  製品バージョンをエラー・ストリームに出力して続行します\\n    --show-version\\n                  製品バージョンを出力ストリームに出力して続行します\\n    --show-module-resolution\\n                  起動時にモジュール解決出力を表示します\\n    -? -h -help\\n                  このヘルプ・メッセージをエラー・ストリームに出力します\\n    --help        このヘルプ・メッセージを出力ストリームに出力します\\n    -X            追加オプションのヘルプをエラー・ストリームに出力します\\n    --help-extra  追加オプションのヘルプを出力ストリームに出力します\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  指定した粒度でアサーションを有効にします\\n    -da[:<packagename>...|:<classname>]\\n    \\\n+-disableassertions[:<packagename>...|:<classname>]\\n                  指定した粒度でアサーションを無効にします\\n    -esa | -enablesystemassertions\\n                  システム・アサーションを有効にします\\n    -dsa | -disablesystemassertions\\n                  システム・アサーションを無効にします\\n    -agentlib:<libname>[=<options>]\\n                  ネイティブ・エージェント・ライブラリ<libname>をロードします。例: -agentlib:jdwp\\n                  -agentlib:jdwp=helpも参照してください\\n    -agentpath:<pathname>[=<options>]\\n                  フルパス名を使用して、ネイティブ・エージェント・ライブラリをロードします\\n    -javaagent:<jarpath>[=<options>]\\n                  Javaプログラミング言語エージェントをロードします。java.lang.instrumentを参照してください\\n    -splash:<imagepath>\\n                  指定されたイメージを含むスプラッシュ画面を表示します\\n                  HiDPIスケールのイメージが自動的にサポートされて使用されます\\n                  (可能な場合)。スケーリングされないイメージのファイル名(image.extなど)を\\n                  引数として-splashオプションに必ず渡す必要があります。\\n                  指定された最も適切なスケーリング済イメージが選択されます\\n                  (自動的)。\\n                  詳細は、SplashScreen APIのドキュメントを参照してください\\n    @argumentファイル\\n                  オプションを含む1つ以上の引数ファイル\\n    --disable-@files\\n                  さらなる引数ファイル拡張を無効にします\\n    --enable-preview\\n                  クラスをこのリリースのプレビュー機能に依存させることができます\\n長いオプションの引数を指定する場合、--<name>=<value>または\\n--<name> <value>を使用できます。\\n\n@@ -38,3 +38,3 @@\n-java.launcher.X.usage=\\n    -Xbatch           バックグラウンド・コンパイルを無効にします\\n    -Xbootclasspath\/a:<directories and zip\/jar files separated by {0}>\\n                      ブートストラップ・クラス・パスの最後に追加します\\n    -Xcheck:jni       JNI関数に対する追加のチェックを実行します\\n    -Xcomp            初回呼出し時にメソッドのコンパイルを強制します\\n    -Xdebug           何も実行されません。将来のリリースで削除されるため、非推奨になりました。\\n    -Xdiag            追加の診断メッセージを表示します\\n    -Xfuture          将来のデフォルトを見越して、最も厳密なチェックを有効にします\\n                      このオプションは非推奨であり、将来のリリースで削除される\\n                      可能性があります。\\n    -Xint             インタプリタ・モードの実行のみ\\n    -Xinternalversion\\n                      -versionオプションより詳細なJVMバージョン情報を\\n                      表示します\\n    -Xlog:<opts>      Java Virtual Machine (JVM)統合ロギング・フレームワークでの\\n                      ロギングを構成または有効化します。詳細は、-Xlog:helpを\\n                      使用してください。\\n    -Xloggc:<file>    タイムスタンプが付いたファイルにGCステータスのログを記録します\\n                      このオプションは非推奨であり、将来のリリースで削除される\\n                      可能性があります。-Xlog:gc:<file>で置換されています。\\n    -Xmixed           混合モードの実行(デフォルト)\\n    -Xmn<size>        若い世代(ナーサリ)のヒープの初期サイズおよび最大サイズ\\n                      (バイト単位)を設定します\\n    -Xms<size>        Javaの初期ヒープ・サイズを設定します\\n    -Xmx<size>        Javaの最大ヒープ・サイズを設定します\\n    -Xnoclassgc       クラスのガベージ・コレクションを無効にします\\n    -Xrs              Java\/VMによるOSシグナルの使用を削減します(ドキュメントを参照)\\n    -Xshare:auto      可能であれば共有クラス・データを使用します(デフォルト)\\n    -Xshare:off       \\\n-共有クラス・データの使用を試みません\\n    -Xshare:on        共有クラス・データの使用を必須にし、できなければ失敗します。\\n                      これはテスト・オプションであり、断続的な失敗につながる\\n                      可能性があります。本番環境では使用しないでください。\\n    -XshowSettings    すべての設定を表示して続行します\\n    -XshowSettings:all\\n                      すべての設定を詳細に表示して続行します\\n    -XshowSettings:locale\\n                      すべてのロケール関連の設定を表示して続行します\\n    -XshowSettings:properties\\n                      すべてのプロパティ設定を表示して続行します\\n    -XshowSettings:vm\\n                      すべてのVM関連の設定を表示して続行します\\n    -XshowSettings:security\\n                      すべてのセキュリティ設定を表示して続行します\\n    -XshowSettings:security:all\\n                      すべてのセキュリティ設定を表示して続行します\\n    -XshowSettings:security:properties\\n                      セキュリティ・プロパティを表示して続行します\\n    -XshowSettings:security:providers\\n                      静的セキュリティ・プロバイダ設定を表示して続行します\\n    -XshowSettings:security:tls\\n                      TLS関連のセキュリティ設定を表示して続行します\\n    -XshowSettings:system\\n                      (Linuxのみ)ホスト・システムまたはコンテナを表示します\\n                      構成して続行します\\n    -Xss<size>        javaスレッドのスタック・サイズを設定します\\n                      実際のサイズは、次の倍数に切り上げられる場合があります: \\n                      オペレーティング・システムの要件に応じたシステム・ページ・サイズ。\\n    -Xverify          バイトコード・ベリファイアのモードを設定します\\n                      オプション-Xverify:noneは非推奨になり、\\n                      将来のリリースで削除される可能性があります。\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<target-module>を\\n                      \\\n-読み取ります。 \\n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールを\\n                      読み取ることができます。\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<package>を<target-module>に\\n                      エクスポートします。\\n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールに\\n                      エクスポートできます。\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<package>を\\n                      <target-module>に開きます。\\n    --limit-modules <module name>[,<module name>...]\\n                      参照可能なモジュールの領域を制限します\\n    --patch-module <module>=<file>({0}<file>)*\\n                      JARファイルまたはディレクトリのクラスおよびリソースで\\n                      モジュールをオーバーライドまたは拡張します。\\n    --source <version>\\n                      ソースファイル・モードでソースのバージョンを設定します。\\n    --finalization=<value>\\n                      JVMがオブジェクトのファイナライズを実行するかどうかを制御します\\n                      <value>は\"enabled\"または\"disabled\"のいずれかです。\\n                      ファイナライズはデフォルトで有効になっています。\\n    --sun-misc-unsafe-memory-access=<value>\\n                      サポートされていないAPI sun.misc.Unsafeの使用を許可または拒否します\\n                      <value>は\"allow\"、\"warn\"、\"debug\"または\"deny\"のいずれかです。\\n                      デフォルト値は、\"allow\"です。\\n\\nこの追加オプションは予告なしに変更されることがあります。\\n\n+java.launcher.X.usage=\\n    -Xbatch           バックグラウンド・コンパイルを無効にします\\n    -Xbootclasspath\/a:<directories and zip\/jar files separated by {0}>\\n                      ブートストラップ・クラス・パスの最後に追加します\\n    -Xcheck:jni       JNI関数に対する追加のチェックを実行します\\n    -Xcomp            初回呼出し時にメソッドのコンパイルを強制します\\n    -Xdebug           何も実行されません。将来のリリースで削除されるため、非推奨になりました。\\n    -Xdiag            追加の診断メッセージを表示します\\n    -Xint             インタプリタ・モードの実行のみ\\n    -Xinternalversion\\n                      -versionオプションより詳細なJVMバージョン情報を\\n                      表示します\\n    -Xlog:<opts>      Java Virtual Machine (JVM)統合ロギング・フレームワークでの\\n                      ロギングを構成または有効化します。詳細は、-Xlog:helpを\\n                      使用してください。\\n    -Xloggc:<file>    タイムスタンプが付いたファイルにGCステータスのログを記録します\\n                      このオプションは非推奨であり、将来のリリースで削除される\\n                      可能性があります。-Xlog:gc:<file>で置換されています。\\n    -Xmixed           混合モードの実行(デフォルト)\\n    -Xmn<size>        若い世代(ナーサリ)のヒープの初期サイズおよび最大サイズ\\n                      (バイト単位)を設定します\\n    -Xms<size>        Javaの初期ヒープ・サイズを設定します\\n    -Xmx<size>        Javaの最大ヒープ・サイズを設定します\\n    -Xnoclassgc       クラスのガベージ・コレクションを無効にします\\n    -Xrs              Java\/VMによるOSシグナルの使用を削減します(ドキュメントを参照)\\n    -Xshare:auto      可能であれば共有クラス・データを使用します(デフォルト)\\n    -Xshare:off       共有クラス・データの使用を試みません\\n    -Xshare:on        共有クラス・データの使用を必須にし、できなければ失敗します。\\n                      \\\n+これはテスト・オプションであり、断続的な失敗につながる\\n                      可能性があります。本番環境では使用しないでください。\\n    -XshowSettings    すべての設定を表示して続行します\\n    -XshowSettings:all\\n                      すべての設定を詳細に表示して続行します\\n    -XshowSettings:locale\\n                      すべてのロケール関連の設定を表示して続行します\\n    -XshowSettings:properties\\n                      すべてのプロパティ設定を表示して続行します\\n    -XshowSettings:vm\\n                      すべてのVM関連の設定を表示して続行します\\n    -XshowSettings:security\\n                      すべてのセキュリティ設定を表示して続行します\\n    -XshowSettings:security:all\\n                      すべてのセキュリティ設定を表示して続行します\\n    -XshowSettings:security:properties\\n                      セキュリティ・プロパティを表示して続行します\\n    -XshowSettings:security:providers\\n                      静的セキュリティ・プロバイダ設定を表示して続行します\\n    -XshowSettings:security:tls\\n                      TLS関連のセキュリティ設定を表示して続行します\\n    -XshowSettings:system\\n                      (Linuxのみ)ホスト・システムまたはコンテナを表示します\\n                      構成して続行します\\n    -Xss<size>        javaスレッドのスタック・サイズを設定します\\n                      実際のサイズは、次の倍数に切り上げられる場合があります: \\n                      オペレーティング・システムの要件に応じたシステム・ページ・サイズ。\\n    -Xverify          バイトコード・ベリファイアのモードを設定します\\n                      オプション-Xverify:noneは非推奨になり、\\n                      将来のリリースで削除される可能性があります。\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<target-module>を\\n                      読み取ります。 \\n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールを\\n                      読み取ることができます。\\n    --add-exports \\\n+<module>\/<package>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<package>を<target-module>に\\n                      エクスポートします。\\n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールに\\n                      エクスポートできます。\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      モジュール宣言に関係なく、<module>を更新して<package>を\\n                      <target-module>に開きます。\\n    --limit-modules <module name>[,<module name>...]\\n                      参照可能なモジュールの領域を制限します\\n    --patch-module <module>=<file>({0}<file>)*\\n                      JARファイルまたはディレクトリのクラスおよびリソースで\\n                      モジュールをオーバーライドまたは拡張します。\\n    --source <version>\\n                      ソースファイル・モードでソースのバージョンを設定します。\\n    --finalization=<value>\\n                      JVMがオブジェクトのファイナライズを実行するかどうかを制御します\\n                      <value>は\"enabled\"または\"disabled\"のいずれかです。\\n                      ファイナライズはデフォルトで有効になっています。\\n    --sun-misc-unsafe-memory-access=<value>\\n                      サポートされていないAPI sun.misc.Unsafeの使用を許可または拒否します\\n                      <value>は\"allow\"、\"warn\"、\"debug\"または\"deny\"のいずれかです。\\n                      デフォルト値は\"warn\"です。\\n\\nこの追加オプションは予告なしに変更されることがあります。\\n\n@@ -45,0 +45,3 @@\n+# Translators please note do not translate the options themselves\n+java.launcher.opt.concise.header  =   使用方法: java [java options...] <application> [application arguments...]\\n\\n<application>は次のいずれかです:\\n  <mainclass>                コンパイルされたメイン・クラスのメイン・メソッドを実行します\\n  -jar <jarfile>.jar         JARアーカイブのメイン・クラスを実行します\\n  -m <module>[\/<mainclass>]  モジュールのメイン・クラスを実行します\\n  <sourcefile>.java          ソースファイル・プログラムをコンパイルおよび実行します\\n\\n主要なjavaオプションには次が含まれます:\\n  --class-path <class path>\\n    <class path>は、クラス・ファイルを検索するためのディレクトリおよびJARアーカイブのリストであり、\"{0}\"で区切られます\\n  --module-path <module path>\\n    <module path>は、モジュールを検索するためのディレクトリおよびJARアーカイブのリストであり、\"{0}\"で区切られます\\n  -version\\n    製品バージョンをエラー・ストリームに出力し終了します\\n\\n使用方法についての追加のヘルプの場合:           java --help\\n対話型のJava環境の場合:    jshell\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_ja.properties","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-java.launcher.opt.header  =   用法：{0} [options] <mainclass> [args...]\\n           （执行类）\\n   或  {0} [options] -jar <jarfile> [args...]\\n           （执行 jar 文件）\\n   或  {0} [options] -m <module>[\/<mainclass>] [args...]\\n       {0} [options] --module <module>[\/<mainclass>] [args...]\\n           （执行模块中的主类）\\n   或  {0} [options] <sourcefile> [args]\\n           （执行源文件程序）\\n\\n 将主类、源文件、-jar <jarfile>、-m 或\\n --module <module>\/<mainclass> 后的参数作为参数\\n 传递到主类。\\n\\n 其中，选项包括：\\n\\n\n+java.launcher.opt.header  =   用法：{0} [options] <mainclass> [args...]\\n           （执行类）\\n   或  {0} [options] -jar <jarfile>.jar [args...]\\n           （执行 jar 文件）\\n   或  {0} [options] -m <module>[\/<mainclass>] [args...]\\n       {0} [options] --module <module>[\/<mainclass>] [args...]\\n           （执行模块中的主类）\\n   或  {0} [options] <sourcefile>.java [args]\\n           （执行源文件程序）\\n\\n 将主类、源文件、-jar <jarfile>.jar、-m 或\\n --module <module>\/<mainclass> 后的参数作为参数\\n 传递到主类。\\n\\n 其中，选项包括：\\n\\n\n@@ -33,2 +33,2 @@\n-java.launcher.opt.footer = \\    -cp <目录和 zip\/jar 文件的类搜索路径>\\n    -classpath <目录和 zip\/jar 文件的类搜索路径>\\n    --class-path <目录和 zip\/jar 文件的类搜索路径>\\n                  使用 {0} 分隔的, 用于搜索类文件的目录, JAR 档案\\n                  和 ZIP 档案列表。\\n    -p <模块路径>\\n    --module-path <模块路径>...\\n                  {0} 分隔的元素列表，每个元素都是\\n                  模块或包含模块的目录的文件路径。每个模块都是\\n                  模块化 JAR 或展开的模块目录。\\n    --upgrade-module-path <模块路径>...\\n                  {0} 分隔的元素列表，每个元素都是\\n                  模块或包含模块（用于替换运行时映像中的\\n                  可升级模块）的目录的文件路径。每个模块都是\\n                  模块化 JAR 或展开的模块目录。\\n    --add-modules <模块名称>[,<模块名称>...]\\n                  除了初始模块之外要解析的根模块。\\n                  <模块名称> 还可以为 ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  允许模块中的代码访问 Java 运行时之外的代码和数据。\\n                  <module name> 也可以是 ALL-UNNAMED，以指示类路径上的代码。\\n    --list-modules\\n                  列出可观察模块并退出\\n    -d <module name>\\n    --describe-module <模块名称>\\n                  描述模块并退出\\n    --dry-run     创建 VM 并加载主类, 但不执行 main 方法。\\n                  此 --dry-run 选项对于验证诸如\\n                  模块系统配置这样的命令行选项可能非常有用。\\n    --validate-modules\\n                  验证所有模块并退出\\n                  --validate-modules 选项对于查找\\n                  模块路径中模块的冲突及其他错误可能非常有用。\\n    -D<名称>=<值>\\n                  设置系统属性\\n    -verbose:[class|module|gc|jni]\\n                  为给定子系统启用详细输出\\n    -version      将产品版本输出到错误流并退出\\n    --version     将产品版本输出到输出流并退出\\n    -showversion  将产品版本输出到错误流并继续\\n    --show-version\\n                  将产品版本输出到输出流并继续\\n    --show-module-resolution\\n                  在启动过程中显示模块解析输出\\n    -? -h -help\\n                  将此帮助消息输出到错误流\\n    --help        \\\n-将此帮助消息输出到输出流\\n    -X            将额外选项的帮助输出到错误流\\n    --help-extra  将额外选项的帮助输出到输出流\\n    -ea[:<程序包名称>...|:<类名>]\\n    -enableassertions[:<程序包名称>...|:<类名>]\\n                  按指定的粒度启用断言\\n    -da[:<程序包名称>...|:<类名>]\\n    -disableassertions[:<程序包名称>...|:<类名>]\\n                  按指定的粒度禁用断言\\n    -esa | -enablesystemassertions\\n                  启用系统断言\\n    -dsa | -disablesystemassertions\\n                  禁用系统断言\\n    -agentlib:<库名>[=<选项>]\\n                  加载本机代理库 <库名>, 例如 -agentlib:jdwp\\n                  另请参阅 -agentlib:jdwp=help\\n    -agentpath:<路径名>[=<选项>]\\n                  按完整路径名加载本机代理库\\n    -javaagent:<jar 路径>[=<选项>]\\n                  加载 Java 编程语言代理, 请参阅 java.lang.instrument\\n    -splash:<图像路径>\\n                  使用指定的图像显示启动屏幕\\n                  自动支持和使用 HiDPI 缩放图像\\n                  (如果可用)。应始终将未缩放的图像文件名 (例如, image.ext)\\n                  作为参数传递给 -splash 选项。\\n                  将自动选取提供的最合适的缩放\\n                  图像。\\n                  有关详细信息, 请参阅 SplashScreen API 文档\\n    @argument 文件\\n                  一个或多个包含选项的参数文件\\n    --disable-@files\\n                  阻止进一步扩展参数文件\\n    --enable-preview\\n                  允许类依赖于此发行版的预览功能\\n要为长选项指定参数, 可以使用 --<名称>=<值> 或\\n--<名称> <值>。\\n\n+java.launcher.opt.footer = \\    -cp <目录和 zip\/jar 文件的类搜索路径>\\n    -classpath <目录和 zip\/jar 文件的类搜索路径>\\n    --class-path <目录和 zip\/jar 文件的类搜索路径>\\n                  以 \"{0}\" 分隔的用于搜索类文件的目录、JAR 档案\\n                  和 ZIP 档案列表。\\n    -p <模块路径>\\n    --module-path <模块路径>...\\n                  以 \"{0}\" 分隔的元素列表，每个元素都是\\n                  模块或包含模块的目录的文件路径。每个模块都是\\n                  模块化 JAR 或展开的模块目录。\\n    --upgrade-module-path <模块路径>...\\n                  以 \"{0}\" 分隔的元素列表，每个元素都是\\n                  模块或包含模块（用于替换运行时映像中的\\n                  可升级模块）的目录的文件路径。每个模块都是\\n                  模块化 JAR 或展开的模块目录。\\n    --add-modules <模块名称>[,<模块名称>...]\\n                  除了初始模块之外要解析的根模块。\\n                  <模块名称> 还可以为 ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  允许模块中的代码访问 Java 运行时之外的代码和数据。\\n                  <module name> 也可以是 ALL-UNNAMED，以指示类路径上的代码。\\n    --illegal-native-access=<value>\\n                  允许或拒绝模块中没有明确为其启用本机访问的\\n                  代码访问 Java 运行时之外的代码和数据。\\n                  <value> 为 \"deny\"、\"warn\" 或 \"allow\" 之一。默认值为 \"warn\"。\\n                  此选项将在未来发行版中删除。\\n    --list-modules\\n                  列出可观察模块并退出\\n    -d <module name>\\n    --describe-module <模块名称>\\n                  描述模块并退出\\n    --dry-run     创建 VM 并加载主类, 但不执行 main 方法。\\n                  此 --dry-run 选项对于验证诸如\\n                  模块系统配置这样的命令行选项可能非常有用。\\n    --validate-modules\\n                  验证所有模块并退出\\n                  --validate-modules 选项对于查找\\n                  模块路径中模块的冲突及其他错误可能非常有用。\\n    -D<名称>=<值>\\n                  设置系统属性\\n    -verbose:[class|module|gc|jni]\\n                  为给定子系统启用详细输出\\n    -version      将产品版本输出到错误流并退出\\n    --version     \\\n+将产品版本输出到输出流并退出\\n    -showversion  将产品版本输出到错误流并继续\\n    --show-version\\n                  将产品版本输出到输出流并继续\\n    --show-module-resolution\\n                  在启动过程中显示模块解析输出\\n    -? -h -help\\n                  将此帮助消息输出到错误流\\n    --help        将此帮助消息输出到输出流\\n    -X            将额外选项的帮助输出到错误流\\n    --help-extra  将额外选项的帮助输出到输出流\\n    -ea[:<程序包名称>...|:<类名>]\\n    -enableassertions[:<程序包名称>...|:<类名>]\\n                  按指定的粒度启用断言\\n    -da[:<程序包名称>...|:<类名>]\\n    -disableassertions[:<程序包名称>...|:<类名>]\\n                  按指定的粒度禁用断言\\n    -esa | -enablesystemassertions\\n                  启用系统断言\\n    -dsa | -disablesystemassertions\\n                  禁用系统断言\\n    -agentlib:<库名>[=<选项>]\\n                  加载本机代理库 <库名>, 例如 -agentlib:jdwp\\n                  另请参阅 -agentlib:jdwp=help\\n    -agentpath:<路径名>[=<选项>]\\n                  按完整路径名加载本机代理库\\n    -javaagent:<jar 路径>[=<选项>]\\n                  加载 Java 编程语言代理, 请参阅 java.lang.instrument\\n    -splash:<图像路径>\\n                  使用指定的图像显示启动屏幕\\n                  自动支持和使用 HiDPI 缩放图像\\n                  (如果可用)。应始终将未缩放的图像文件名 (例如, image.ext)\\n                  作为参数传递给 -splash 选项。\\n                  将自动选取提供的最合适的缩放\\n                  图像。\\n                  有关详细信息, 请参阅 SplashScreen API 文档\\n    @argument 文件\\n                  一个或多个包含选项的参数文件\\n    --disable-@files\\n                  阻止进一步扩展参数文件\\n    --enable-preview\\n                  允许类依赖于此发行版的预览功能\\n要为长选项指定参数, 可以使用 --<名称>=<值> 或\\n--<名称> <值>。\\n\n@@ -37,2 +37,2 @@\n-java.launcher.X.usage=\\n    -Xbatch           禁用后台编译\\n    -Xbootclasspath\/a:<以 {0} 分隔的目录和 zip\/jar 文件>\\n                      附加在引导类路径末尾\\n    -Xcheck:jni       对 JNI 函数执行其他检查\\n    -Xcomp            强制在首次调用时编译方法\\n    -Xdebug           不执行任何操作；已过时，将在未来发行版中删除。\\n    -Xdiag            显示附加诊断消息\\n    -Xfuture          启用最严格的检查，预期将来的默认值。\\n                      此选项已过时，可能会在\\n                      未来发行版中删除。\\n    -Xint             仅解释模式执行\\n    -Xinternalversion\\n                      显示比 -version 选项更详细的\\n                      JVM 版本信息\\n    -Xlog:<opts>      配置或启用采用 Java 虚拟\\n                      机 (Java Virtual Machine, JVM) 统一记录框架进行事件记录。使用 -Xlog:help\\n                      可了解详细信息。\\n    -Xloggc:<file>    将 GC 状态记录在文件中（带时间戳）。\\n                      此选项已过时，可能会在\\n                      将来的发行版中删除。它将替换为 -Xlog:gc:<file>。\\n    -Xmixed           混合模式执行（默认值）\\n    -Xmn<size>        为年轻代（新生代）设置初始和最大堆大小\\n                      （以字节为单位）\\n    -Xms<size>        设置初始 Java 堆大小\\n    -Xmx<size>        设置最大 Java 堆大小\\n    -Xnoclassgc       禁用类垃圾收集\\n    -Xrs              减少 Java\/VM 对操作系统信号的使用（请参见文档）\\n    -Xshare:auto      在可能的情况下使用共享类数据（默认值）\\n    -Xshare:off       不尝试使用共享类数据\\n    -Xshare:on        要求使用共享类数据，否则将失败。\\n                      这是一个测试选项，可能导致间歇性\\n                      故障。不应在生产环境中使用它。\\n    -XshowSettings    显示所有设置并继续\\n    -XshowSettings:all\\n                      详细显示所有设置并继续\\n    -XshowSettings:locale\\n                      显示所有与区域设置相关的设置并继续\\n    -XshowSettings:properties\\n                      显示所有属性设置并继续\\n    -XshowSettings:vm\\n                      显示所有与 vm 相关的设置并继续\\n    -XshowSettings:security\\n                      显示所有安全设置并继续\\n    -XshowSettings:security:all\\n                      显示所有安全设置并继续\\n    -XshowSettings:security:properties\\n                     \\\n- 显示安全属性并继续\\n    -XshowSettings:security:providers\\n                      显示静态安全提供方设置并继续\\n    -XshowSettings:security:tls\\n                      显示与 TLS 相关的安全设置并继续\\n    -XshowSettings:system\\n                      （仅 Linux）显示主机系统或容器\\n                      配置并继续\\n    -Xss<size>        设置 Java 线程堆栈大小\\n                      实际大小可以舍入到\\n                      操作系统要求的系统页面大小的倍数。\\n    -Xverify          设置字节码验证器的模式\\n                      请注意，选项 -Xverify:none 已过时，\\n                      可能会在未来发行版中删除。\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      更新 <module> 以读取 <target-module>，而无论\\n                      模块如何声明。 \\n                      <target-module> 可以是 ALL-UNNAMED，将读取所有未命名\\n                      模块。\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      更新 <module> 以将 <package> 导出到 <target-module>，\\n                      而无论模块如何声明。\\n                      <target-module> 可以是 ALL-UNNAMED，将导出到所有\\n                      未命名模块。\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      更新 <module> 以在 <target-module> 中打开\\n                      <package>，而无论模块如何声明。\\n    --limit-modules <module name>[,<module name>...]\\n                      限制可观察模块的领域\\n    --patch-module <module>=<file>({0}<file>)*\\n                      使用 JAR 文件或目录中的类和资源\\n                      覆盖或增强模块。\\n    --source <version>\\n                      设置源文件模式中源的版本。\\n    --finalization=<value>\\n                      控制 JVM 是否执行对象最终处理，\\n                      其中 <value> 为 \"enabled\" 或 \"disabled\" 之一。\\n                      默认情况下，最终处理处于启用状态。\\n    --sun-misc-unsafe-memory-access=<value>\\n                      允许或拒绝使用不受支持的 API sun.misc.Unsafe\\n                      <value> 为 \"allow\"、\"warn\"、\"debug\" 或 \"deny\" 之一。\\n                      默认值为 \"allow\"。\\n\\n这些额外选项如有更改, 恕不另行通知。\\n\n+java.launcher.X.usage=\\n    -Xbatch           禁用后台编译\\n    -Xbootclasspath\/a:<以 {0} 分隔的目录和 zip\/jar 文件>\\n                      附加在引导类路径末尾\\n    -Xcheck:jni       对 JNI 函数执行其他检查\\n    -Xcomp            强制在首次调用时编译方法\\n    -Xdebug           不执行任何操作；已过时，将在未来发行版中删除。\\n    -Xdiag            显示附加诊断消息\\n    -Xint             仅解释模式执行\\n    -Xinternalversion\\n                      显示比 -version 选项更详细的\\n                      JVM 版本信息\\n    -Xlog:<opts>      配置或启用采用 Java 虚拟\\n                      机 (Java Virtual Machine, JVM) 统一记录框架进行事件记录。使用 -Xlog:help\\n                      可了解详细信息。\\n    -Xloggc:<file>    将 GC 状态记录在文件中（带时间戳）。\\n                      此选项已过时，可能会在\\n                      将来的发行版中删除。它将替换为 -Xlog:gc:<file>。\\n    -Xmixed           混合模式执行（默认值）\\n    -Xmn<size>        为年轻代（新生代）设置初始和最大堆大小\\n                      （以字节为单位）\\n    -Xms<size>        设置初始 Java 堆大小\\n    -Xmx<size>        设置最大 Java 堆大小\\n    -Xnoclassgc       禁用类垃圾收集\\n    -Xrs              减少 Java\/VM 对操作系统信号的使用（请参见文档）\\n    -Xshare:auto      在可能的情况下使用共享类数据（默认值）\\n    -Xshare:off       不尝试使用共享类数据\\n    -Xshare:on        要求使用共享类数据，否则将失败。\\n                      这是一个测试选项，可能导致间歇性\\n                      故障。不应在生产环境中使用它。\\n    -XshowSettings    显示所有设置并继续\\n    -XshowSettings:all\\n                      详细显示所有设置并继续\\n    -XshowSettings:locale\\n                      显示所有与区域设置相关的设置并继续\\n    -XshowSettings:properties\\n                      显示所有属性设置并继续\\n    -XshowSettings:vm\\n                      显示所有与 vm 相关的设置并继续\\n    -XshowSettings:security\\n                      显示所有安全设置并继续\\n    -XshowSettings:security:all\\n                      显示所有安全设置并继续\\n    -XshowSettings:security:properties\\n                      显示安全属性并继续\\n    -XshowSettings:security:providers\\n                      显示静态安全提供方设置并继续\\n    -XshowSettings:security:tls\\n                      显示与 TLS \\\n+相关的安全设置并继续\\n    -XshowSettings:system\\n                      （仅 Linux）显示主机系统或容器\\n                      配置并继续\\n    -Xss<size>        设置 Java 线程堆栈大小\\n                      实际大小可以舍入到\\n                      操作系统要求的系统页面大小的倍数。\\n    -Xverify          设置字节码验证器的模式\\n                      请注意，选项 -Xverify:none 已过时，\\n                      可能会在未来发行版中删除。\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      更新 <module> 以读取 <target-module>，而无论\\n                      模块如何声明。 \\n                      <target-module> 可以是 ALL-UNNAMED，将读取所有未命名\\n                      模块。\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      更新 <module> 以将 <package> 导出到 <target-module>，\\n                      而无论模块如何声明。\\n                      <target-module> 可以是 ALL-UNNAMED，将导出到所有\\n                      未命名模块。\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      更新 <module> 以在 <target-module> 中打开\\n                      <package>，而无论模块如何声明。\\n    --limit-modules <module name>[,<module name>...]\\n                      限制可观察模块的领域\\n    --patch-module <module>=<file>({0}<file>)*\\n                      使用 JAR 文件或目录中的类和资源\\n                      覆盖或增强模块。\\n    --source <version>\\n                      设置源文件模式中源的版本。\\n    --finalization=<value>\\n                      控制 JVM 是否执行对象最终处理，\\n                      其中 <value> 为 \"enabled\" 或 \"disabled\" 之一。\\n                      默认情况下，最终处理处于启用状态。\\n    --sun-misc-unsafe-memory-access=<value>\\n                      允许或拒绝使用不受支持的 API sun.misc.Unsafe\\n                      <value> 为 \"allow\"、\"warn\"、\"debug\" 或 \"deny\" 之一。\\n                      默认值为 \"warn\"。\\n\\n这些额外选项如有更改, 恕不另行通知。\\n\n@@ -43,0 +43,3 @@\n+# Translators please note do not translate the options themselves\n+java.launcher.opt.concise.header  =   用法：java [java options...] <application> [application arguments...]\\n\\n其中，<application> 为以下项之一：\\n  <mainclass>                执行编译的主类的 main 方法\\n  -jar <jarfile>.jar         执行 JAR 档案的主类\\n  -m <module>[\/<mainclass>]  执行模块的主类\\n  <sourcefile>.java          编译和执行源文件程序\\n\\n其中，主要的 java 选项包括：\\n  --class-path <class path>\\n    其中，<class path> 是用于搜索类文件的目录和 JAR 档案列表（以 \"{0}\" 分隔）\\n  --module-path <module path>\\n    其中，<module path> 是用于搜索模块的目录和 JAR 档案列表（以 \"{0}\" 分隔）\\n  -version\\n    将产品版本输出到错误流并退出\\n\\n获取有关用法的其他帮助：           java --help\\n获取交互式 Java 环境：    jshell\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_zh_CN.properties","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,0 @@\n-        {\"invalid.null.AccessControlContext.provided\",\n-                \"Ung\\u00FCltiger Nullwert f\\u00FCr AccessControlContext angegeben\"},\n@@ -93,18 +91,0 @@\n-        \/\/ sun.security.provider.PolicyFile\n-\n-        {\"java.security.policy.error.parsing.policy.message\",\n-                \"java.security.policy: Fehler beim Parsen von {0}:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Permission.perm.message\",\n-                \"java.security.policy: Fehler beim Hinzuf\\u00FCgen von Berechtigung, {0}:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Entry.message\",\n-                \"java.security.policy: Fehler beim Hinzuf\\u00FCgen von Eintrag:\\n\\t{0}\"},\n-        {\"alias.name.not.provided.pe.name.\", \"Aliasname nicht angegeben ({0})\"},\n-        {\"unable.to.perform.substitution.on.alias.suffix\",\n-                \"Substitution f\\u00FCr Alias {0} kann nicht ausgef\\u00FChrt werden\"},\n-        {\"substitution.value.prefix.unsupported\",\n-                \"Substitutionswert {0} nicht unterst\\u00FCtzt\"},\n-        {\"SPACE\", \" \"},\n-        {\"LPARAM\", \"(\"},\n-        {\"RPARAM\", \")\"},\n-        {\"type.can.t.be.null\",\"Typ kann nicht null sein\"},\n-\n@@ -112,7 +92,0 @@\n-        {\"keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore\",\n-                \"keystorePasswordURL kann nicht ohne Keystore angegeben werden\"},\n-        {\"expected.keystore.type\", \"Keystore-Typ erwartet\"},\n-        {\"expected.keystore.provider\", \"Keystore-Provider erwartet\"},\n-        {\"multiple.Codebase.expressions\",\n-                \"mehrere Codebase-Ausdr\\u00FCcke\"},\n-        {\"multiple.SignedBy.expressions\",\"mehrere SignedBy-Ausdr\\u00FCcke\"},\n@@ -121,6 +94,0 @@\n-        {\"SignedBy.has.empty.alias\",\"Leerer Alias in SignedBy\"},\n-        {\"can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name\",\n-                \"Principal kann nicht mit einer Platzhalterklasse ohne Platzhalternamen angegeben werden\"},\n-        {\"expected.codeBase.or.SignedBy.or.Principal\",\n-                \"codeBase oder SignedBy oder Principal erwartet\"},\n-        {\"expected.permission.entry\", \"Berechtigungseintrag erwartet\"},\n@@ -135,2 +102,0 @@\n-        {\"null.principalClass.or.principalName\",\n-                \"principalClass oder principalName null\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Resources_de.java","additions":1,"deletions":36,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,0 @@\n-        {\"invalid.null.AccessControlContext.provided\",\n-                \"\\u7121\\u52B9\\u306Anull AccessControlContext\\u304C\\u6307\\u5B9A\\u3055\\u308C\\u307E\\u3057\\u305F\"},\n@@ -93,18 +91,0 @@\n-        \/\/ sun.security.provider.PolicyFile\n-\n-        {\"java.security.policy.error.parsing.policy.message\",\n-                \"java.security.policy: {0}\\u306E\\u69CB\\u6587\\u89E3\\u6790\\u30A8\\u30E9\\u30FC:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Permission.perm.message\",\n-                \"java.security.policy: \\u30A2\\u30AF\\u30BB\\u30B9\\u6A29{0}\\u306E\\u8FFD\\u52A0\\u30A8\\u30E9\\u30FC:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Entry.message\",\n-                \"java.security.policy: \\u30A8\\u30F3\\u30C8\\u30EA\\u306E\\u8FFD\\u52A0\\u30A8\\u30E9\\u30FC:\\n\\t{0}\"},\n-        {\"alias.name.not.provided.pe.name.\", \"\\u5225\\u540D\\u306E\\u6307\\u5B9A\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093({0})\"},\n-        {\"unable.to.perform.substitution.on.alias.suffix\",\n-                \"\\u5225\\u540D{0}\\u306B\\u5BFE\\u3057\\u3066\\u7F6E\\u63DB\\u64CD\\u4F5C\\u304C\\u3067\\u304D\\u307E\\u305B\\u3093\"},\n-        {\"substitution.value.prefix.unsupported\",\n-                \"\\u7F6E\\u63DB\\u5024{0}\\u306F\\u30B5\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"},\n-        {\"SPACE\", \" \"},\n-        {\"LPARAM\", \"(\"},\n-        {\"RPARAM\", \")\"},\n-        {\"type.can.t.be.null\",\"\\u5165\\u529B\\u3092null\\u306B\\u3059\\u308B\\u3053\\u3068\\u306F\\u3067\\u304D\\u307E\\u305B\\u3093\"},\n-\n@@ -112,7 +92,0 @@\n-        {\"keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore\",\n-                \"\\u30AD\\u30FC\\u30B9\\u30C8\\u30A2\\u3092\\u6307\\u5B9A\\u3057\\u306A\\u3044\\u5834\\u5408\\u3001keystorePasswordURL\\u306F\\u6307\\u5B9A\\u3067\\u304D\\u307E\\u305B\\u3093\"},\n-        {\"expected.keystore.type\", \"\\u4E88\\u60F3\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u30B9\\u30C8\\u30A2\\u30FB\\u30BF\\u30A4\\u30D7\"},\n-        {\"expected.keystore.provider\", \"\\u4E88\\u60F3\\u3055\\u308C\\u305F\\u30AD\\u30FC\\u30B9\\u30C8\\u30A2\\u30FB\\u30D7\\u30ED\\u30D0\\u30A4\\u30C0\"},\n-        {\"multiple.Codebase.expressions\",\n-                \"\\u8907\\u6570\\u306ECodebase\\u5F0F\"},\n-        {\"multiple.SignedBy.expressions\",\"\\u8907\\u6570\\u306ESignedBy\\u5F0F\"},\n@@ -121,6 +94,0 @@\n-        {\"SignedBy.has.empty.alias\",\"SignedBy\\u306F\\u7A7A\\u306E\\u5225\\u540D\\u3092\\u4FDD\\u6301\\u3057\\u307E\\u3059\"},\n-        {\"can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name\",\n-                \"\\u30EF\\u30A4\\u30EB\\u30C9\\u30AB\\u30FC\\u30C9\\u540D\\u306E\\u306A\\u3044\\u30EF\\u30A4\\u30EB\\u30C9\\u30AB\\u30FC\\u30C9\\u30FB\\u30AF\\u30E9\\u30B9\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u3001\\u30D7\\u30EA\\u30F3\\u30B7\\u30D1\\u30EB\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u3053\\u3068\\u306F\\u3067\\u304D\\u307E\\u305B\\u3093\"},\n-        {\"expected.codeBase.or.SignedBy.or.Principal\",\n-                \"\\u4E88\\u60F3\\u3055\\u308C\\u305FcodeBase\\u3001SignedBy\\u307E\\u305F\\u306FPrincipal\"},\n-        {\"expected.permission.entry\", \"\\u4E88\\u60F3\\u3055\\u308C\\u305F\\u30A2\\u30AF\\u30BB\\u30B9\\u6A29\\u30A8\\u30F3\\u30C8\\u30EA\"},\n@@ -135,2 +102,0 @@\n-        {\"null.principalClass.or.principalName\",\n-                \"null\\u306EprincipalClass\\u307E\\u305F\\u306FprincipalName\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Resources_ja.java","additions":1,"deletions":36,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,0 @@\n-        {\"invalid.null.AccessControlContext.provided\",\n-                \"\\u63D0\\u4F9B\\u4E86\\u65E0\\u6548\\u7684\\u7A7A AccessControlContext\"},\n@@ -93,18 +91,0 @@\n-        \/\/ sun.security.provider.PolicyFile\n-\n-        {\"java.security.policy.error.parsing.policy.message\",\n-                \"java.security.policy: \\u89E3\\u6790{0}\\u65F6\\u51FA\\u9519:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Permission.perm.message\",\n-                \"java.security.policy: \\u6DFB\\u52A0\\u6743\\u9650{0}\\u65F6\\u51FA\\u9519:\\n\\t{1}\"},\n-        {\"java.security.policy.error.adding.Entry.message\",\n-                \"java.security.policy: \\u6DFB\\u52A0\\u6761\\u76EE\\u65F6\\u51FA\\u9519:\\n\\t{0}\"},\n-        {\"alias.name.not.provided.pe.name.\", \"\\u672A\\u63D0\\u4F9B\\u522B\\u540D ({0})\"},\n-        {\"unable.to.perform.substitution.on.alias.suffix\",\n-                \"\\u65E0\\u6CD5\\u5728\\u522B\\u540D {0} \\u4E0A\\u6267\\u884C\\u66FF\\u4EE3\"},\n-        {\"substitution.value.prefix.unsupported\",\n-                \"\\u66FF\\u4EE3\\u503C{0}\\u4E0D\\u53D7\\u652F\\u6301\"},\n-        {\"SPACE\", \" \"},\n-        {\"LPARAM\", \"(\"},\n-        {\"RPARAM\", \")\"},\n-        {\"type.can.t.be.null\",\"\\u7C7B\\u578B\\u4E0D\\u80FD\\u4E3A\\u7A7A\\u503C\"},\n-\n@@ -112,7 +92,0 @@\n-        {\"keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore\",\n-                \"\\u4E0D\\u6307\\u5B9A\\u5BC6\\u94A5\\u5E93\\u65F6\\u65E0\\u6CD5\\u6307\\u5B9A keystorePasswordURL\"},\n-        {\"expected.keystore.type\", \"\\u5E94\\u4E3A\\u5BC6\\u94A5\\u5E93\\u7C7B\\u578B\"},\n-        {\"expected.keystore.provider\", \"\\u5E94\\u4E3A\\u5BC6\\u94A5\\u5E93\\u63D0\\u4F9B\\u65B9\"},\n-        {\"multiple.Codebase.expressions\",\n-                \"\\u591A\\u4E2A\\u4EE3\\u7801\\u5E93\\u8868\\u8FBE\\u5F0F\"},\n-        {\"multiple.SignedBy.expressions\",\"\\u591A\\u4E2A SignedBy \\u8868\\u8FBE\\u5F0F\"},\n@@ -121,6 +94,0 @@\n-        {\"SignedBy.has.empty.alias\",\"SignedBy \\u6709\\u7A7A\\u522B\\u540D\"},\n-        {\"can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name\",\n-                \"\\u6CA1\\u6709\\u901A\\u914D\\u7B26\\u540D\\u79F0, \\u65E0\\u6CD5\\u4F7F\\u7528\\u901A\\u914D\\u7B26\\u7C7B\\u6307\\u5B9A\\u4E3B\\u7528\\u6237\"},\n-        {\"expected.codeBase.or.SignedBy.or.Principal\",\n-                \"\\u5E94\\u4E3A codeBase, SignedBy \\u6216\\u4E3B\\u7528\\u6237\"},\n-        {\"expected.permission.entry\", \"\\u5E94\\u4E3A\\u6743\\u9650\\u6761\\u76EE\"},\n@@ -135,2 +102,0 @@\n-        {\"null.principalClass.or.principalName\",\n-                \"principalClass \\u6216 principalName \\u4E3A\\u7A7A\\u503C\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Resources_zh_CN.java","additions":1,"deletions":36,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -318,2 +318,2 @@\n-        EntityExpansionLimit=JAXP00010001: Der Parser hat mehr als {0} Entityerweiterungen in diesem Dokument gefunden. Dies ist der von JDK vorgeschriebene Grenzwert.\n-        ElementAttributeLimit=JAXP00010002: Element \"{0}\" hat mehr als {1} Attribute. \"{1}\" ist der von JDK vorgeschriebene Grenzwert.\n+        EntityExpansionLimit=JAXP00010001: Der Parser hat mehr als {0} Entityerweiterungen in diesem Dokument gefunden. Das ist der von \"{1}\" vorgeschriebene Grenzwert.\n+        ElementAttributeLimit=JAXP00010002: Element \"{0}\" hat mehr als {1} Attribute. \"{1}\" ist der von \"{2}\" vorgeschriebene Grenzwert.\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/msg\/XMLMessages_de.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -318,2 +318,2 @@\n-        EntityExpansionLimit=JAXP00010001: パーサーによって、このドキュメント内で\"{0}\"を超えるエンティティ拡張が検出されました。これは、JDKによる制限です。\n-        ElementAttributeLimit=JAXP00010002: 要素\"{0}\"に\"{1}\"を超える属性が存在します。\"{1}\"は、JDKによる制限です。\n+        EntityExpansionLimit=JAXP00010001: パーサーによって、このドキュメント内で\"{0}\"を超えるエンティティ拡張が検出されました。これは、\"{1}\"による制限です。\n+        ElementAttributeLimit=JAXP00010002: 要素\"{0}\"に\"{1}\"を超える属性が存在します。\"{1}\"は、\"{2}\"で設定された制限です。\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/msg\/XMLMessages_ja.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -318,2 +318,2 @@\n-        EntityExpansionLimit=JAXP00010001: 解析器在此文档中遇到多个 \"{0}\" 实体扩展; 这是 JDK 施加的限制。\n-        ElementAttributeLimit=JAXP00010002: 元素 \"{0}\" 具有多个 \"{1}\" 属性, \"{1}\" 是 JDK 施加的限制。\n+        EntityExpansionLimit=JAXP00010001：解析器在此文档中遇到多个 \"{0}\" 实体扩展；这是 \"{1}\" 施加的限制。\n+        ElementAttributeLimit=JAXP00010002：元素 \"{0}\" 具有多个 \"{1}\" 属性，\"{1}\" 是 \"{2}\" 设置的限制。\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/msg\/XMLMessages_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -638,0 +638,3 @@\n+# 0: symbol\n+compiler.err.annotation.array.too.large=Annotationsarrayelement zu groß in \"{0}\"\n+\n@@ -659,3 +662,0 @@\n-# 0: name\n-compiler.err.modifier.not.allowed.here=Modifikator {0} hier nicht zulässig\n-\n@@ -784,3 +784,0 @@\n-# 0: symbol, 1: list of type, 2: type\n-compiler.misc.cant.access.inner.cls.constr=Zugriff auf Konstruktor {0}({1}) nicht möglich\\nEinschließende Instanz vom Typ {2} ist nicht im Geltungsbereich\n-\n@@ -1151,0 +1148,4 @@\n+compiler.err.statement.not.expected=Anweisungen werden außerhalb von Methoden und Initializern nicht erwartet\n+\n+compiler.err.class.method.or.field.expected=Klasse, Schnittstelle, Annotationstyp, Enumeration, Datensatz, Methode oder Feld erwartet\n+\n@@ -1592,0 +1593,1 @@\n+\n@@ -1674,0 +1676,3 @@\n+# 0: list of annotation, 1: symbol, 2: name, 3: message segment\n+compiler.err.cant.attach.type.annotations=Typannotationen {0} können nicht an {1}.{2} angehängt werden:\\n{3}\n+\n@@ -1809,1 +1814,5 @@\n-compiler.misc.bad.runtime.invisible.param.annotations=Ungültiges RuntimeInvisibleParameterAnnotations-Attribut: {0}\n+# 0: file name\n+compiler.warn.runtime.visible.invisible.param.annotations.mismatch=Die Längen der Parameter im RuntimeVisibleParameterAnnotations-Attribut und RuntimeInvisibleParameterAnnotations-Attribut in {0} stimmen nicht überein. Beide Attribute werden ignoriert\n+\n+# 0: file name\n+compiler.warn.runtime.invisible.parameter.annotations=Die Attribute RuntimeVisibleParameterAnnotations und RuntimeInvisibleParameterAnnotations in {0} können nicht den Parametern der Methode zugeordnet werden\n@@ -2041,0 +2050,4 @@\n+## The first argument ({0}) is a \"kindname\".\n+# 0: symbol kind, 1: symbol\n+compiler.err.local.cant.be.inst.static={0} {1} ist lokal und kann nicht aus einem statischen Kontext instanziiert werden\n+\n@@ -2289,0 +2302,2 @@\n+compiler.misc.feature.java.base.transitive=Transitiver Modifikator für java.base\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_de.properties","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -638,0 +638,3 @@\n+# 0: symbol\n+compiler.err.annotation.array.too.large=\"{0}\"の注釈配列要素が大きすぎます\n+\n@@ -659,3 +662,0 @@\n-# 0: name\n-compiler.err.modifier.not.allowed.here=修飾子{0}をここで使用することはできません\n-\n@@ -784,3 +784,0 @@\n-# 0: symbol, 1: list of type, 2: type\n-compiler.misc.cant.access.inner.cls.constr=コンストラクタ{0}({1})にアクセスできません\\n内部クラスを囲む型{2}のインスタンスがスコープ内にありません\n-\n@@ -1151,0 +1148,4 @@\n+compiler.err.statement.not.expected=文はメソッドおよびイニシャライザの外では必要ありません\n+\n+compiler.err.class.method.or.field.expected=クラス、インタフェース、注釈型、列挙、レコード、メソッドまたはフィールドが必要です\n+\n@@ -1592,0 +1593,1 @@\n+\n@@ -1674,0 +1676,3 @@\n+# 0: list of annotation, 1: symbol, 2: name, 3: message segment\n+compiler.err.cant.attach.type.annotations=タイプ注釈{0}を{1}.{2}に添付できません:\\n{3}\n+\n@@ -1809,1 +1814,5 @@\n-compiler.misc.bad.runtime.invisible.param.annotations=RuntimeInvisibleParameterAnnotations属性が不正です: {0}\n+# 0: file name\n+compiler.warn.runtime.visible.invisible.param.annotations.mismatch={0}内のRuntimeVisibleParameterAnnotations属性およびRuntimeInvisibleParameterAnnotations属性内のパラメータの長さが一致しません。両方の属性を無視します\n+\n+# 0: file name\n+compiler.warn.runtime.invisible.parameter.annotations={0}内のRuntimeVisibleParameterAnnotationsおよびRuntimeInvisibleParameterAnnotations属性をメソッドのパラメータにマップできません\n@@ -2041,0 +2050,4 @@\n+## The first argument ({0}) is a \"kindname\".\n+# 0: symbol kind, 1: symbol\n+compiler.err.local.cant.be.inst.static=ローカル{0} {1}をstaticコンテキストからインスタンス化できません\n+\n@@ -2289,0 +2302,2 @@\n+compiler.misc.feature.java.base.transitive=java.baseの推移的修飾子\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_ja.properties","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -638,0 +638,3 @@\n+# 0: symbol\n+compiler.err.annotation.array.too.large=\"{0}\" 中的批注数组元素太大\n+\n@@ -659,3 +662,0 @@\n-# 0: name\n-compiler.err.modifier.not.allowed.here=此处不允许使用修饰符{0}\n-\n@@ -784,3 +784,0 @@\n-# 0: symbol, 1: list of type, 2: type\n-compiler.misc.cant.access.inner.cls.constr=无法访问构造器 {0}({1})\\n作用域中没有类型为{2}的封闭实例\n-\n@@ -1151,0 +1148,4 @@\n+compiler.err.statement.not.expected=语句不应在方法和初始化程序外部\n+\n+compiler.err.class.method.or.field.expected=需要类、接口、批注类型、枚举、记录、方法或字段\n+\n@@ -1592,0 +1593,1 @@\n+\n@@ -1674,0 +1676,3 @@\n+# 0: list of annotation, 1: symbol, 2: name, 3: message segment\n+compiler.err.cant.attach.type.annotations=无法将类型批注 {0} 附加到 {1}.{2}：\\n{3}\n+\n@@ -1809,1 +1814,5 @@\n-compiler.misc.bad.runtime.invisible.param.annotations=错误的 RuntimeInvisibleParameterAnnotations 属性: {0}\n+# 0: file name\n+compiler.warn.runtime.visible.invisible.param.annotations.mismatch={0} 中 RuntimeVisibleParameterAnnotations 属性和 RuntimeInvisibleParameterAnnotations 属性中的参数长度不匹配，将忽略这两个属性\n+\n+# 0: file name\n+compiler.warn.runtime.invisible.parameter.annotations={0} 中的 RuntimeVisibleParameterAnnotations 属性和 RuntimeInvisibleParameterAnnotations 属性无法映射到方法的参数\n@@ -2041,0 +2050,4 @@\n+## The first argument ({0}) is a \"kindname\".\n+# 0: symbol kind, 1: symbol\n+compiler.err.local.cant.be.inst.static=无法从静态上下文实例化本地 {0} {1}\n+\n@@ -2289,0 +2302,2 @@\n+compiler.misc.feature.java.base.transitive=java.base 的过渡修饰符\n+\n@@ -2741,1 +2756,1 @@\n-compiler.err.record.cant.declare.field.modifiers=记录组件不能具有限定符\n+compiler.err.record.cant.declare.field.modifiers=记录组件不能具有修饰符\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_zh_CN.properties","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-javac.opt.Xlint.custom=Warnungen, die aktiviert oder deaktiviert werden sollen, durch Komma getrennt.\\nStellen Sie einem Schlüssel \"-\" voran, um die angegebene Warnung zu deaktivieren.\\nVerwenden Sie --help-lint, um die unterstützten Schlüssel zu sehen.\n+javac.opt.Xlint.custom=Warnungen, die aktiviert oder deaktiviert werden sollen, durch Komma getrennt.\\nStellen Sie einem Schlüssel \"-\" voran, um die angegebene Warnung zu deaktivieren.\\nVerwenden Sie \"--help-lint\", um die unterstützten Schlüssel anzuzeigen.\n@@ -190,1 +190,1 @@\n-javac.opt.Xdoclint.package.desc=Aktiviert oder deaktiviert Prüfungen in bestimmten Packages. Jedes <Package> ist entweder der\\nqualifizierte Name eines Packages oder ein Packagenamenspräfix, gefolgt von \".*\",\\ndas sich auf alle Subpackages des angegebenen Packages bezieht. Jedem <Package>\\nkann \"-\" vorangestellt werden, um Prüfungen für die angegebenen Packages zu deaktivieren.\n+javac.opt.Xdoclint.package.desc=Aktiviert oder deaktiviert Prüfungen in bestimmten Packages. Jedes <Package> ist entweder\\nein qualifizierter Packagename oder ein Packagenamenspräfix, gefolgt von \".*\",\\ndas sich auf alle Subpackages des angegebenen Packages bezieht. Jedem <Package>\\nkann \"-\" vorangestellt werden, um Prüfungen für die angegebenen Packages zu deaktivieren.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac_de.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-javac.opt.Xlint.custom=有効または無効にする警告(カンマ区切り)。\\n指定した警告を無効にするには、キーの前に'-'を指定します。\\nサポートされているキーを表示するには--help-lintを使用します。\n+javac.opt.Xlint.custom=有効または無効にする警告(カンマ区切り)。\\n指定した警告を無効にするには、キーの前に''-''を指定します。\\nサポートされているキーを表示するには--help-lintを使用します。\n@@ -190,1 +190,1 @@\n-javac.opt.Xdoclint.package.desc=特定のパッケージのチェックを有効または無効にします。各<package>は、\\nパッケージの修飾された名前、またはパッケージ名の接頭辞の後に'.*'を\\n指定(指定したパッケージのすべてのサブパッケージに拡張)したものです。各<package>\\nの前に'-'を指定すると、指定した1つ以上のパッケージに関するチェックを無効にできます。\n+javac.opt.Xdoclint.package.desc=特定のパッケージのチェックを有効または無効にします。各<package>は、\\n修飾されたパッケージ名、またはパッケージ名の接頭辞の後に''.*''を\\n指定(指定したパッケージのすべてのサブパッケージに拡張)したものです。各<package>\\nの前に''-''を指定すると、指定した1つ以上のパッケージに関するチェックを無効にできます。\n@@ -219,1 +219,1 @@\n-javac.opt.lineDocComments='\/\/\/'で行を開始すると、ドキュメンテーション・コメントのサポートが無効化されます\n+javac.opt.lineDocComments=''\/\/\/''で行を開始すると、ドキュメンテーション・コメントのサポートが 無効化されます\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac_ja.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-javac.opt.nogj=语言中不接受泛型\n+javac.opt.nogj=该语言不接受泛型\n@@ -104,2 +104,2 @@\n-javac.opt.arg.Xlint=<密钥>(,<密钥>)*\n-javac.opt.Xlint.custom=要启用或禁用的警告，使用逗号分隔。\\n在关键字前面加上 '-' 可禁用指定的警告。\\n使用 --help-lint 可查看受支持的关键字。\n+javac.opt.arg.Xlint=<key>(,<key>)*\n+javac.opt.Xlint.custom=要启用或禁用的警告（以逗号分隔）。\\n在关键字前面加上 ''-'' 可禁用指定的警告。\\n使用 --help-lint 可查看受支持的关键字。\n@@ -190,1 +190,1 @@\n-javac.opt.Xdoclint.package.desc=在特定的程序包中启用或禁用检查。每个 <程序包> 是\\n程序包的限定名称，或程序包名称前缀后跟 '.*'\\n（这将扩展到给定程序包的所有子程序包）。在每个 <程序包>\\n前面加上 '-' 可以为指定程序包禁用检查。\n+javac.opt.Xdoclint.package.desc=在特定的程序包中启用或禁用检查。每个 <package> 是\\n限定的程序包名称，或程序包名称前缀后跟 ''.*''\\n（这将扩展到给定程序包的所有子程序包）。在每个 <package>\\n前面加上 ''-'' 可对指定程序包禁用检查。\n@@ -219,1 +219,1 @@\n-javac.opt.lineDocComments=禁用对带有以 '\/\/\/' 开头的行的文档注释的支持\n+javac.opt.lineDocComments=禁用对带有以 ''\/\/\/'' 开头的行的文档注释的支持\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac_zh_CN.properties","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+        {\"history.nonexistent.entries\", \"    Warnung: Nicht vorhandene signierte Eintr\\u00E4ge: \"},\n@@ -181,0 +182,1 @@\n+        {\"nonexistent.entries.found\", \"Diese JAR-Datei enth\\u00E4lt signierte Eintr\\u00E4ge f\\u00FCr Dateien, die nicht vorhanden sind. Weitere Details finden Sie in der Verbose-Ausgabe (-verbose).\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_de.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+        {\"history.nonexistent.entries\", \"    \\u8B66\\u544A: \\u5B58\\u5728\\u3057\\u306A\\u3044\\u7F72\\u540D\\u6E08\\u30A8\\u30F3\\u30C8\\u30EA: \"},\n@@ -181,0 +182,1 @@\n+        {\"nonexistent.entries.found\", \"\\u3053\\u306Ejar\\u306B\\u306F\\u3001\\u5B58\\u5728\\u3057\\u306A\\u3044\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u7F72\\u540D\\u6E08\\u30A8\\u30F3\\u30C8\\u30EA\\u304C\\u542B\\u307E\\u308C\\u307E\\u3059\\u3002\\u8A73\\u7D30\\u306F\\u3001-verbose\\u51FA\\u529B\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_ja.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+        {\"history.nonexistent.entries\", \"    \\u8B66\\u544A\\uFF1A\\u7B7E\\u540D\\u6761\\u76EE\\u4E0D\\u5B58\\u5728\\uFF1A\"},\n@@ -181,0 +182,1 @@\n+        {\"nonexistent.entries.found\", \"\\u6B64 jar \\u7684\\u6587\\u4EF6\\u5305\\u542B\\u4E0D\\u5B58\\u5728\\u7684\\u7B7E\\u540D\\u6761\\u76EE\\u3002\\u6709\\u5173\\u66F4\\u591A\\u8BE6\\u7EC6\\u4FE1\\u606F\\uFF0C\\u8BF7\\u53C2\\u89C1 -verbose \\u8F93\\u51FA\\u3002\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_zh_CN.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+error.extract.multiple.dest.dir=Sie können die Option \"-C\" oder \"--dir\" nicht mehrmals mit der Option \"-x\" angeben\n+error.extract.pflag.not.allowed=Sie können nicht \"-Px\" mit der Option \"-C\" oder \"--dir\" angeben\n@@ -86,0 +88,1 @@\n+warn.option.is.ignored=Warnung: Die Option \"{0}\" ist mit der aktuellen Verwendung nicht gültig und wird ignoriert.\n@@ -97,0 +100,1 @@\n+out.kept=\\  übersprungen: {0} vorhanden\n@@ -99,0 +103,1 @@\n+out.extract.dir=Extrahieren in Verzeichnis: {0}\n@@ -100,1 +105,1 @@\n-usage.compat=Kompatibilitätsschnittstelle\\nVerwendung: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\nOptionen:\\n    -c  erstellt ein neues Archiv (einschließlich fehlender übergeordneter Verzeichnisse)\\n    -t  listet das Inhaltsverzeichnis für das Archiv auf\\n    -x  extrahiert die benannten (oder alle) Dateien aus dem Archiv\\n    -u  aktualisiert ein vorhandenes Archiv\\n    -v  generiert Verbose-Ausgabe zur Standardausgabe\\n    -f  gibt den Archivdateinamen an\\n    -m  schließt Manifestinformationen aus der angegebenen Manifestdatei ein\\n    -e  gibt den Anwendungseinstiegspunkt für Standalone-Anwendungen an,\\n        die in einer ausführbaren JAR-Datei gebündelt sind\\n    -0  speichert nur, keine ZIP-Komprimierung\\n    -P  behält die vorangestellten Komponenten \"\/\" (absoluter Pfad) und \"..\" (übergeordnetes Verzeichnis) aus Dateinamen bei\\n    -M  generiert keine Manifestdatei für die Einträge\\n    -i  generiert Indexinformationen für die angegebenen JAR-Dateien\\n    -C  wechselt zum angegebenen Verzeichnis und schließt die folgende Datei ein\\nDateien, die Verzeichnisse sind, werden rekursiv verarbeitet.\\nDie Namen der Manifestdatei, der Archivdatei und des Einstiegspunkts werden\\nin der gleichen Reihenfolge wie die Flags \"m\", \"f\" und \"e\" angegeben.\\n\\nBeispiel 1: Zwei Klassendateien in einem Archiv namens classes.jar archivieren: \\n       jar cvf classes.jar Foo.class Bar.class \\nBeispiel 2: Die vorhandene Manifestdatei \"mymanifest\" verwenden und alle\\n           Dateien im Verzeichnis \"foo\/\" in \"classes.jar\" archivieren: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage.compat=Kompatibilitätsschnittstelle\\nVerwendung: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\nOptionen:\\n    -c erstellt ein neues Archiv (einschließlich fehlender übergeordneter Verzeichnisse)\\n    -t listet das Inhaltsverzeichnis für das Archiv auf\\n    -x extrahiert die benannten (oder alle) Dateien aus dem Archiv\\n    -u aktualisiert ein vorhandenes Archiv\\n    -v generiert Verbose-Ausgabe zur Standardausgabe\\n    -f gibt den Archivdateinamen an\\n    -m schließt Manifestinformationen aus der angegebenen Manifestdatei ein\\n    -e gibt den Anwendungseinstiegspunkt für Standalone-Anwendungen an,\\n        die in einer ausführbaren JAR-Datei gebündelt sind\\n    -0 speichert nur, ohne ZIP-Komprimierung\\n    -P behält die vorangestellten Komponenten \"\/\" (absoluter Pfad) und \"..\" (übergeordnetes Verzeichnis) aus Dateinamen bei\\n    -M generiert keine Manifestdatei für die Einträge\\n    -i generiert Indexinformationen für die angegebenen JAR-Dateien\\n    -C wechselt zum angegebenen Verzeichnis und schließt die folgende Datei ein\\nDateien, die Verzeichnisse sind, werden rekursiv verarbeitet.\\nBei Verwendung im Extraktionsmodus wird die JAR-Datei in das angegebene Verzeichnis extrahiert\\nDie Namen der Manifestdatei, der Archivdatei und des Einstiegspunkts werden\\nin der gleichen Reihenfolge wie die Kennzeichen \"m\", \"f\" und \"e\" angegeben.\\n\\nBeispiel 1: Zwei Klassendateien in einem Archiv namens classes.jar archivieren: \\n       jar cvf classes.jar Foo.class Bar.class \\nBeispiel 2: Die vorhandene Manifestdatei \"mymanifest\" verwenden und alle\\n           Dateien im Verzeichnis \"foo\/\" in \"classes.jar\" archivieren: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n@@ -111,1 +116,1 @@\n-main.help.opt.main.extract=\\  -x, --extract              Benannte (oder alle) Dateien aus dem Archiv extrahieren\n+main.help.opt.main.extract=\\  -x, --extract              Extrahiert benannte (oder alle) Dateien aus dem Archiv.\\n                             Wenn eine Datei mit demselben Namen mehrmals im\\n                             Archiv enthalten ist, wird jede Kopie extrahiert. Dabei überschreiben (ersetzen) neuere Kopien\\n                             ältere Kopien, es sei denn, \"-k\" ist angegeben.\n@@ -114,1 +119,1 @@\n-main.help.opt.any=\\ In jedem Modus gültige Vorgangsmodifikatoren:\\n\\n  -C DIR                     Zum angegebenen Verzeichnis wechseln und die folgende\\n                             Datei aufnehmen\n+main.help.opt.any=\\ In jedem Modus gültige Vorgangsmodifikatoren:\\n\\n  -C DIR                     Zum angegebenen Verzeichnis wechseln und die folgende\\n                             Datei aufnehmen. Bei Verwendung im Extraktionsmodus wird\\n                             die JAR-Datei in das angegebene Verzeichnis extrahiert\n@@ -131,0 +136,2 @@\n+main.help.opt.extract=\\ Vorgangsmodifikatoren, die nur im Extraktionsmodus gültig sind:\\n\n+main.help.opt.extract.keep-old-files=\\  -k, --keep-old-files       Vorhandene Dateien nicht überschreiben.\\n                             Wenn bereits ein JAR-Dateieintrag mit demselben Namen im\\n                             Zielverzeichnis vorhanden ist, wird die vorhandene Datei nicht überschrieben.\\n                             Wenn eine Datei also mehrmals in einem\\n                             Archiv enthalten ist, werden ältere Kopien nicht durch neuere Kopien überschrieben.\\n                             Beachten Sie zudem, dass bei einigen Dateisystemen die Groß-\/Kleinschreibung ignoriert wird.\n@@ -136,0 +143,2 @@\n+main.help.opt.extract=\\ Vorgangsmodifikatoren, die nur im Extraktionsmodus gültig sind:\\n\n+main.help.opt.extract.dir=\\  --dir                    Verzeichnis, in das die JAR-Datei extrahiert wird\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar_de.properties","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+error.extract.multiple.dest.dir='-x'オプションでは複数の'-C'または'--dir'を指定できません\n+error.extract.pflag.not.allowed='-C'または'--dir'オプションでは'-Px'を指定できません\n@@ -86,0 +88,1 @@\n+warn.option.is.ignored=警告: {0}オプションは、現在の使用状況では有効ではありません。無視されます。\n@@ -97,0 +100,1 @@\n+out.kept=\\  スキップされました: {0}が存在します\n@@ -99,0 +103,1 @@\n+out.extract.dir=ディレクトリに抽出しています: {0}\n@@ -100,1 +105,1 @@\n-usage.compat=互換性インタフェース:\\n使用方法: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\nオプション:\\n    -c  アーカイブを新規作成する(欠落している親ディレクトリを含む)\\n    -t  アーカイブの内容を一覧表示する\\n    -x  指定の(またはすべての)ファイルをアーカイブから抽出する\\n    -u  既存アーカイブを更新する\\n    -v  標準出力に詳細な出力を生成する\\n    -f  アーカイブ・ファイル名を指定する\\n    -m  指定のマニフェスト・ファイルからマニフェスト情報を取り込む\\n    -e  実行可能jarファイルにバンドルされたスタンドアロン・アプリケーションの \\n        エントリ・ポイントを指定する\\n    -0  格納のみ。ZIP圧縮を使用しない\\n    -P  ファイル名の先頭の'\/' (絶対パス)および\"..\" (親ディレクトリ)コンポーネントを保持する\\n    -M  エントリのマニフェスト・ファイルを作成しない\\n    -i  指定のjarファイルの索引情報を生成する\\n    -C  指定のディレクトリに変更し、次のファイルを取り込む\\nファイルがディレクトリの場合は再帰的に処理されます。\\nマニフェスト・ファイル名、アーカイブ・ファイル名およびエントリ・ポイント名は、\\nフラグ'm'、'f'、'e'の指定と同じ順番で指定する必要があります。\\n\\n例1: 2つのクラス・ファイルをアーカイブclasses.jarに保存する: \\n       jar cvf classes.jar Foo.class Bar.class \\n例2: 既存のマニフェスト・ファイル'mymanifest'を使用し、foo\/ディレクトリの\\n           全ファイルを'classes.jar'にアーカイブする: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n+usage.compat=互換性インタフェース:\\n使用方法: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\nオプション:\\n    -c  アーカイブを新規作成する(欠落している親ディレクトリを含む)\\n    -t  アーカイブの内容を一覧表示する\\n    -x  指定の(またはすべての)ファイルをアーカイブから抽出する\\n    -u  既存アーカイブを更新する\\n    -v  標準出力に詳細な出力を生成する\\n    -f  アーカイブ・ファイル名を指定する\\n    -m  指定のマニフェスト・ファイルからマニフェスト情報を取り込む\\n    -e  実行可能jarファイルにバンドルされたスタンドアロン・アプリケーションの \\n        エントリ・ポイントを指定する\\n    -0  格納のみ。ZIP圧縮を使用しない\\n    -P  ファイル名の先頭の'\/' (絶対パス)および\"..\" (親ディレクトリ)コンポーネントを保持する\\n    -M  エントリのマニフェスト・ファイルを作成しない\\n    -i  指定のjarファイルの索引情報を生成する\\n    -C  指定のディレクトリに変更し、次のファイルを取り込む\\nファイルがディレクトリの場合は再帰的に処理されます。\\n抽出モードで使用される場合、jarを指定のディレクトリに抽出します\\nマニフェスト・ファイル名、アーカイブ・ファイル名およびエントリ・ポイント名は、\\nフラグ'm'、'f'、'e'の指定と同じ順番で指定する必要があります。\\n\\n例1: 2つのクラス・ファイルをアーカイブclasses.jarに保存する: \\n       jar cvf classes.jar Foo.class Bar.class \\n例2: 既存のマニフェスト・ファイル'mymanifest'を使用し、foo\/ディレクトリの\\n           全ファイルを'classes.jar'にアーカイブする: \\n       jar cvfm classes.jar mymanifest -C foo\/ .\\n\n@@ -111,1 +116,1 @@\n-main.help.opt.main.extract=\\  -x、--extract              指定の(またはすべての)ファイルをアーカイブから抽出します\n+main.help.opt.main.extract=\\  -x、--extract              指定の(またはすべての)ファイルをアーカイブから抽出します。\\n                             同じ名前のファイルがアーカイブに複数回出現する場合、\\n                             各コピーが抽出され、後のコピーにより、前のコピーが\\n                             上書き(置換)されます(-kが指定されている場合以外)。\n@@ -114,1 +119,1 @@\n-main.help.opt.any=\\ どのモードでも有効な操作修飾子:\\n\\n  -C DIR                     指定のディレクトリに変更し、次のファイルを\\n                             取り込みます\n+main.help.opt.any=\\ どのモードでも有効な操作修飾子:\\n\\n  -C DIR                     指定のディレクトリに変更し、次のファイルを\\n                             取り込みます。抽出モードで使用されている場合、jarを\\n                             指定のディレクトリに抽出します\n@@ -131,0 +136,2 @@\n+main.help.opt.extract=\\ 抽出モードでのみ有効な操作修飾子:\\n\n+main.help.opt.extract.keep-old-files=\\  -k、--keep-old-files       既存のファイルを上書きしません。\\n                             同じ名前のJarファイル・エントリがターゲット・ディレクトリに\\n                             存在する場合、既存のファイルは上書きされません。\\n                             結果として、ファイルがアーカイブ内に複数回出現する場合、\\n                             後のコピーによって前のコピーは上書きされません。\\n                             また、一部のファイル・システムでは、大\/小文字が区別される場合があることに注意してください。\n@@ -136,0 +143,2 @@\n+main.help.opt.extract=\\ 抽出モードでのみ有効な操作修飾子:\\n\n+main.help.opt.extract.dir=\\  --dir                    jarが抽出されるディレクトリ\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar_ja.properties","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+error.extract.multiple.dest.dir=不能与 '-x' 选项一起多次指定 '-C' 或 '--dir' 选项\n+error.extract.pflag.not.allowed=不能与 '-C' 或 '--dir' 选项一起指定 '-Px'\n@@ -86,0 +88,1 @@\n+warn.option.is.ignored=警告：{0} 选项对于当前用法无效，将忽略它。\n@@ -97,0 +100,1 @@\n+out.kept=\\  已跳过：{0} 已存在\n@@ -99,0 +103,1 @@\n+out.extract.dir=提取到目录：{0}\n@@ -100,1 +105,1 @@\n-usage.compat=兼容性接口：\\n用法：jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\n选项：\\n    -c  创建新档案（包括缺少的父目录）\\n    -t  列出档案目录\\n    -x  从档案中提取指定的（或所有）文件\\n    -u  更新现有档案\\n    -v  在标准输出中生成详细输出\\n    -f  指定档案文件名\\n    -m  包含指定清单文件中的清单信息\\n    -e  为捆绑到可执行 jar 文件的独立应用程序\\n        指定应用程序入口点\\n    -0  仅存储；不使用任何 ZIP 压缩\\n    -P  保留文件名中的前导 '\/'（绝对路径）和 \"..\"（父目录）组成部分\\n    -M  不创建条目的清单文件\\n    -i  为指定的 jar 文件生成索引信息\\n    -C  更改为指定的目录并包含以下文件\\n如果任何文件为目录，则对其进行递归处理。\\n清单文件名、档案文件名和入口点名称的指定顺序\\n与 'm', 'f' 和 'e' 标记的指定顺序相同。\\n\\n示例 1：将两个类文件归档到一个名为 classes.jar 的档案中：\\n       jar cvf classes.jar Foo.class Bar.class \\n示例 2：使用现有的清单文件 'mymanifest' 并\\n           将 foo\/ 目录中的所有文件归档到 'classes.jar' 中：\\n       jar cvfm classes.jar mymanifest -C foo\/。\\n\n+usage.compat=兼容性接口：\\n用法：jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files] ...\\n选项：\\n    -c  创建新档案（包括缺少的父目录）\\n    -t  列出档案目录\\n    -x  从档案中提取指定的（或所有）文件\\n    -u  更新现有档案\\n    -v  在标准输出中生成详细输出\\n    -f  指定档案文件名\\n    -m  包含指定清单文件中的清单信息\\n    -e  为捆绑到可执行 jar 文件的独立应用程序\\n        指定应用程序入口点\\n    -0  仅存储；不使用任何 ZIP 压缩\\n    -P  保留文件名中的前导 '\/'（绝对路径）和 \"..\"（父目录）组成部分\\n    -M  不创建条目的清单文件\\n    -i  为指定的 jar 文件生成索引信息\\n    -C  更改为指定的目录并包含以下文件\\n如果任何文件为目录，则对其进行递归处理。\\n在提取模式下使用时，将 jar 提取到指定目录\\n清单文件名、档案文件名和入口点名称的指定顺序\\n与 'm'、'f' 和 'e' 标记的指定顺序相同。\\n\\n示例 1：将两个类文件归档到一个名为 classes.jar 的档案中：\\n       jar cvf classes.jar Foo.class Bar.class \\n示例 2：使用现有的清单文件 'mymanifest' 并\\n           将 foo\/ 目录中的所有文件归档到 'classes.jar' 中：\\n       jar cvfm classes.jar mymanifest -C foo\/。\\n\n@@ -111,1 +116,1 @@\n-main.help.opt.main.extract=\\  -x, --extract              从档案中提取指定的 (或全部) 文件\n+main.help.opt.main.extract=\\  -x, --extract              从档案中提取指定的（或所有）文件。\\n                             如果某个同名的文件在档案中出现多次，\\n                             则将提取每个副本，除非指定 -k，否则\\n                             后面的副本将覆盖（替换）前面的副本。\n@@ -114,1 +119,1 @@\n-main.help.opt.any=\\ 在任意模式下有效的操作修饰符:\\n\\n  -C DIR                     更改为指定的目录并包含\\n                             以下文件\n+main.help.opt.any=\\ 在任意模式下有效的操作修饰符：\\n\\n  -C DIR                     更改为指定目录并包含\\n                             以下文件。在提取模式下使用时，\\n                             将 jar 提取到指定目录\n@@ -131,0 +136,2 @@\n+main.help.opt.extract=\\ 仅在提取模式下有效的操作修饰符：\\n\n+main.help.opt.extract.keep-old-files=\\  -k, --keep-old-files       不覆盖现有文件。\\n                             如果目标目录中存在同名的 Jar 文件\\n                             条目，将不覆盖现有文件。\\n                             因此，如果某个文件在档案中出现多次，\\n                             后面的副本不会覆盖前面的副本。\\n                             另请注意，一些文件系统可能不区分大小写。\n@@ -136,0 +143,2 @@\n+main.help.opt.extract=\\ 仅在提取模式下有效的操作修饰符：\\n\n+main.help.opt.extract.dir=\\  --dir                    jar 将提取到其中的目录\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar_zh_CN.properties","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -138,0 +138,3 @@\n+doclet.searchTag=Suchtag\n+doclet.searchTags=Tags suchen\n+doclet.searchTagsSummary=Übersicht über Suchtags\n@@ -172,0 +175,1 @@\n+doclet.DefinedIn=Definiert in\n@@ -259,0 +263,2 @@\n+# 0: link to Search Tags page\n+doclet.help.searchTags.body=Auf der Seite \"{0}\" werden die in der Dokumentation definierten Suchtags aufgelistet.\n@@ -326,1 +332,3 @@\n-doclet.RestrictedLeadingNote={0} ist eine eingeschränkte Methode der Java-Plattform.\n+doclet.PreviewJavaSERequiresTransitiveJavaBase=Indirekte Exporte aus dem Modul <code>java.base<\/code> sind mit der Direktive <code>requires transitive java.base<\/code> verknüpft. Das ist ein Vorschaufeature der Java-Sprache.<br>Programme können <code>requires transitive java.base<\/code> nur verwenden, wenn Vorschaufeatures aktiviert sind.<br>Vorschaufeatures können in einem zukünftigen Release entfernt oder zu permanenten Features der Java-Plattform hochgestuft werden.<br>\n+doclet.RestrictedMethod=eingeschränkte Methode\n+doclet.RestrictedLeadingNote={0} ist eine {1} der Java-Plattform.\n@@ -365,1 +373,1 @@\n-doclet.usage.docfilessubdirs.description=doc-file-Unterverzeichnisse rekursiv kopieren\n+doclet.usage.docfilessubdirs.description=Ermöglicht Deep Copying von \"doc-files\"-Verzeichnissen. Unterverzeichnisse und alle\\nInhalte werden rekursiv in das Ziel kopiert\n@@ -387,1 +395,1 @@\n-doclet.usage.footer.description=Footertext für jede Seite aufnehmen\n+doclet.usage.footer.description=Diese Option wird nicht mehr unterstützt und gibt eine Warnung aus\n@@ -409,1 +417,1 @@\n-doclet.usage.excludedocfilessubdir.description=doc-files-Unterverzeichnisse mit angegebenem Namen ausschließen.\\n\":\" kann überall im Argument als Trennzeichen verwendet werden.\n+doclet.usage.excludedocfilessubdir.description=Schließen Sie alle \"doc-files\"-Unterverzeichnisse mit einem angegebenen Namen aus.\\n\":\" kann überall im Argument als Trennzeichen verwendet werden.\n@@ -446,1 +454,1 @@\n-doclet.usage.serialwarn.description=Warnung wegen @serial-Tag generieren\n+doclet.usage.serialwarn.description=Gibt Warnungen zur Kompilierzeit für fehlende \"@serial\"-Tags aus\n@@ -455,1 +463,1 @@\n-doclet.usage.tag.description=Benutzerdefinierte Tags mit einem Argument angeben\n+doclet.usage.tag.description=Gibt ein benutzerdefiniertes Tag mit einem einzelnen Argument an\n@@ -471,1 +479,1 @@\n-doclet.usage.helpfile.description=Datei aufnehmen, zu der der Hilfelink verlinkt\n+doclet.usage.helpfile.description=Gibt eine Datei an, die den Text enthält, der beim Klicken auf den\\nHilfelink in der Navigationsleiste angezeigt wird\n@@ -494,1 +502,1 @@\n-doclet.usage.allow-script-in-comments.description=JavaScript in Optionen und Kommentaren zulassen\n+doclet.usage.allow-script-in-comments.description=JavaScript in Dokumentationskommentaren und Optionen\\nzulassen, die HTML-Code enthalten\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard_de.properties","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -138,0 +138,3 @@\n+doclet.searchTag=検索タグ\n+doclet.searchTags=タグの検索\n+doclet.searchTagsSummary=検索タグ・サマリー\n@@ -172,0 +175,1 @@\n+doclet.DefinedIn=定義先\n@@ -259,0 +263,2 @@\n+# 0: link to Search Tags page\n+doclet.help.searchTags.body={0}ページには、ドキュメントに定義されている検索タグがあります。\n@@ -326,1 +332,3 @@\n-doclet.RestrictedLeadingNote={0}はJavaプラットフォームの制限されたメソッドです。\n+doclet.PreviewJavaSERequiresTransitiveJavaBase=<code>java.base<\/code>モジュールからの間接的エクスポートは、Java言語のプレビュー機能である<code>requires transitive java.base<\/code>ディレクティブに関連付けられています。<br>プログラムは、プレビュー機能が有効になっている場合にのみ<code>requires transitive java.base<\/code>を使用できます。<br>プレビュー機能は将来のリリースで削除されるか、Javaプラットフォームの永続的な機能にアップグレードされる可能性があります。<br>\n+doclet.RestrictedMethod=制限されたメソッド\n+doclet.RestrictedLeadingNote={0}は、Javaプラットフォームの{1}です。\n@@ -365,1 +373,1 @@\n-doclet.usage.docfilessubdirs.description=doc-fileサブディレクトリを再帰的にコピーします\n+doclet.usage.docfilessubdirs.description='doc-files'ディレクトリのディープ・コピーを有効にします。\\n宛先には、サブディレクトリとそのすべて内容が再帰的にコピーされます\n@@ -387,1 +395,1 @@\n-doclet.usage.footer.description=各ページにフッター・テキストを含めます\n+doclet.usage.footer.description=このオプションはされなくなったため、警告が報告されます\n@@ -409,1 +417,1 @@\n-doclet.usage.excludedocfilessubdir.description=指定された名前のdoc-filesサブディレクトリをすべて除外します。\\n':'も、セパレータとして引数の任意の場所に使用できます。\n+doclet.usage.excludedocfilessubdir.description=指定された名前の'doc-files'サブディレクトリをすべて除外します。\\n':'も、セパレータとして引数の任意の場所に使用できます。\n@@ -446,1 +454,1 @@\n-doclet.usage.serialwarn.description=@serialタグに関する警告を生成しません\n+doclet.usage.serialwarn.description='@serial'タグがない場合は、コンパイル時に警告を報告します\n@@ -471,1 +479,1 @@\n-doclet.usage.helpfile.description=ヘルプ・リンクのリンク先ファイルを含めます\n+doclet.usage.helpfile.description=ナビゲーション・バー内のヘルプ・リンクがクリックされたときに表示される\\nテキストを含むファイルを指定します\n@@ -494,1 +502,1 @@\n-doclet.usage.allow-script-in-comments.description=オプションおよびコメントでJavaScriptを許可します\n+doclet.usage.allow-script-in-comments.description=ドキュメント・コメント、および値がhtml-codeであるオプションで\\nJavaScriptを許可します\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard_ja.properties","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -138,0 +138,3 @@\n+doclet.searchTag=搜索标记\n+doclet.searchTags=搜索标记\n+doclet.searchTagsSummary=搜索标记概要\n@@ -172,0 +175,1 @@\n+doclet.DefinedIn=定义位置\n@@ -259,0 +263,2 @@\n+# 0: link to Search Tags page\n+doclet.help.searchTags.body={0} 页面列出了文档中定义的搜索标记。\n@@ -326,1 +332,3 @@\n-doclet.RestrictedLeadingNote={0} 是 Java 平台的受限制方法。\n+doclet.PreviewJavaSERequiresTransitiveJavaBase=来自 <code>java.base<\/code> 模块的间接导出项与 <code>requires transitive java.base<\/code> 指令关联，这是 Java 语言的预览功能。<br>仅在启用了预览功能时，程序才能使用 <code>requires transitive java.base<\/code>。<br>预览功能可能会在未来发行版中删除，也可能会升级为 Java 平台的永久功能。<br>\n+doclet.RestrictedMethod=受限制方法\n+doclet.RestrictedLeadingNote={0} 是 Java 平台的 {1}。\n@@ -365,1 +373,1 @@\n-doclet.usage.docfilessubdirs.description=递归复制文档文件子目录\n+doclet.usage.docfilessubdirs.description=启用对 'doc-files' 目录的深层复制。\\n子目录和所有内容将递归复制到目标\n@@ -387,1 +395,1 @@\n-doclet.usage.footer.description=包含每个页面的页脚文本\n+doclet.usage.footer.description=此选项不再受支持，并会报告警告\n@@ -409,1 +417,1 @@\n-doclet.usage.excludedocfilessubdir.description=排除包含给定名称的所有 doc-files 子目录。\\n还可以将 ':' 作为分隔符用于参数中的任何位置。\n+doclet.usage.excludedocfilessubdir.description=排除包含给定名称的所有 'doc-files' 子目录。\\n还可以将 ':' 作为分隔符用于参数中的任何位置。\n@@ -446,1 +454,1 @@\n-doclet.usage.serialwarn.description=生成有关 @serial 标记的警告\n+doclet.usage.serialwarn.description=针对缺少 '@serial' 标记，报告编译时警告\n@@ -455,1 +463,1 @@\n-doclet.usage.tag.description=指定单个参数定制标记\n+doclet.usage.tag.description=使用单个参数指定定制标记\n@@ -471,1 +479,1 @@\n-doclet.usage.helpfile.description=包含帮助链接所链接到的文件\n+doclet.usage.helpfile.description=指定一个文件，其中包含在单击导航栏中的\\n帮助链接时将显示的文本\n@@ -494,1 +502,1 @@\n-doclet.usage.allow-script-in-comments.description=允许在选项和注释中使用 JavaScript\n+doclet.usage.allow-script-in-comments.description=允许在文档注释和选项中使用 JavaScript\\n其值为 html-code\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard_zh_CN.properties","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-doclet.record_equals_doc.fullbody.tail.reference=このレコード・クラスのすべてのコンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}と比較されます。\n+doclet.record_equals_doc.fullbody.tail.reference=このレコード・クラスのすべてのコンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}で比較されます。\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-doclet.Modifier=限定符\n+doclet.Modifier=修饰符\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-main.opt.show.members.desc=Gibt an, welche Mitglieder (Felder, Methoden usw.) dokumentiert\\nwerden, wobei der Wert \"public\", \"protected\",\\n\"package\" oder \"private\" lauten kann. Der Standardwert ist \"protected\"\\nund zeigt öffentliche und geschützte Mitglieder, \"public\" zeigt nur\\nöffentliche Mitglieder, \"package\" zeigt öffentliche, geschützte und\\nPackagemitglieder, und \"private\" zeigt alle Mitglieder.\n+main.opt.show.members.desc=Gibt an, welche Member (Felder, Methoden oder Konstruktoren) dokumentiert\\nwerden, wobei der Wert \"public\", \"protected\",\\n\"package\" oder \"private\" lauten kann. Der Standardwert ist \"protected\"\\nund zeigt öffentliche und geschützte Member an. \"public\" zeigt nur\\nöffentliche Member, \"package\" zeigt öffentliche, geschützte und\\nPackage-Member, und \"private\" zeigt alle Member an.\n@@ -59,1 +59,1 @@\n-main.opt.show.packages.desc=Gibt das Modul an, dessen Packages dokumentiert werden. Mögliche\\nWerte sind \"exported\" oder \"all\" (exportierte oder alle Packages).\n+main.opt.show.packages.desc=Gibt an, welche Modulpackages dokumentiert werden. Mögliche\\nWerte sind \"exported\" oder \"all\" (exportierte oder alle Packages).\n@@ -64,1 +64,1 @@\n-main.opt.expand.requires.arg=<Wert>\n+main.opt.expand.requires.arg=(transitive|all)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/resources\/javadoc_de.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-main.opt.show.members.desc=値が\"public\"、\"protected\"、\"package\"または\"private\"のいずれかの\\nどのメンバー(フィールドやメソッドなど)をドキュメント化するかを指定する。\\nデフォルトは\"protected\"で、publicおよびprotectedメンバーが表示され、\\n\"public\"ではpublicメンバーのみが表示されます。\"package\"では\\npublic、protectedおよびpackageメンバーが表示され、\"private\"\\nではすべてのメンバーが表示されます。\n+main.opt.show.members.desc=値が\"public\"、\"protected\"、\"package\"または\"private\"のいずれかの\\nどのメンバー(フィールド、メソッドまたはコンストラクタ)をドキュメント化するかを指定する。\\nデフォルトは\"protected\"で、publicおよびprotectedメンバーが表示され、\\n\"public\"ではpublicメンバーのみが表示されます。\"package\"では\\npublic、protectedおよびpackageメンバーが表示され、\"private\"\\nではすべてのメンバーが表示されます。\n@@ -59,1 +59,1 @@\n-main.opt.show.packages.desc=どのモジュールのパッケージをドキュメント化するかを指定する。使用可能な\\n値は、\"exported\"または\"all\"パッケージです。\n+main.opt.show.packages.desc=どのモジュール・パッケージをドキュメント化するかを指定する。使用可能な\\n値は、\"exported\"または\"all\"パッケージです。\n@@ -64,1 +64,1 @@\n-main.opt.expand.requires.arg=<value>\n+main.opt.expand.requires.arg=(transitive|all)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/resources\/javadoc_ja.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-main.opt.show.members.desc=指定将文档化的成员 (字段, 方法等), 其值可以\\n为 \"public\", \"protected\", \"package\" 或 \\n\"private\" 之一。默认值为 \"protected\", 该值将\\n显示公共和受保护成员, \"public\" 将仅显示\\n公共成员, \"package\" 将显示公共, 受保护和\\n程序包成员, \"private\" 将显示所有成员。\n+main.opt.show.members.desc=指定将文档化的成员（字段、方法或构造器），\\n其值可以为 \"public\"、\"protected\"、\"package\" \\n或 \"private\" 之一。默认值为 \"protected\"，此时将\\n显示公共和受保护成员，值为 \"public\" 时将仅显示\\n公共成员，值为 \"package\" 时将显示公共、受保护\\n和程序包成员，值为 \"private\" 时将显示所有成员。\n@@ -59,1 +59,1 @@\n-main.opt.show.packages.desc=指定将文档化的模块的程序包。\\n可能的值为 \"exported\" 或 \"all\" 程序包。\n+main.opt.show.packages.desc=指定将文档化的模块程序包。可能的\\n值为 \"exported\" 或 \"all\" 程序包。\n@@ -64,1 +64,1 @@\n-main.opt.expand.requires.arg=<值>\n+main.opt.expand.requires.arg=(transitive|all)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/resources\/javadoc_zh_CN.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-main.opt.l=\\  -l                               Gibt die Zeilennummer und lokale Variablentabellen aus\n+main.opt.l=\\  -l                               Gibt die Zeilennummer und lokale Variablentabellen aus, kann zusammen mit \"-c\" verwendet werden\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/resources\/javap_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-main.opt.l=\\  -l                               行番号とローカル変数表を出力する\n+main.opt.l=\\  -l                               行番号とローカル変数表を出力する。-cとの組合せで動作します\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/resources\/javap_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-main.opt.l=\\  -l                               输出行号和本地变量表\n+main.opt.l=\\  -l                               输出行号和本地变量表，与 -c 结合使用\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/resources\/javap_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,4 @@\n+main.runtime.image.linking.cap.enabled=aktiviert\n+main.runtime.image.linking.cap.disabled=deaktiviert\n+main.runtime.image.linking.cap.sect.header=Funktionen:\n+main.runtime.image.linking.cap.msg=\\      Verknüpfung von Laufzeitimage {0}\n@@ -69,0 +73,5 @@\n+err.runtime.link.not.linkable.runtime=Dieses JDK unterstützt keine Verknüpfung vom aktuellen Laufzeitimage\n+err.runtime.link.jdk.jlink.prohibited=Dieses JDK enthält keine als Package integrierten Module und kann nicht verwendet werden, um ein anderes Image mit dem Modul jdk.jlink zu erstellen\n+err.runtime.link.packaged.mods=Dieses JDK enthält keine als Package integrierten Module. \"--keep-packaged-modules\" wird nicht unterstützt\n+err.runtime.link.modified.file={0} wurde geändert\n+err.runtime.link.patched.module=Datei {0} nicht im Modulimage gefunden. \"--patch-module\" wird beim Verknüpfen aus dem Laufzeitimage nicht unterstützt\n@@ -77,1 +86,1 @@\n-err.modulepath.must.be.specified:--module-path ist nicht angegeben, und dieses Laufzeitimage enthält nicht das jmods-Verzeichnis.\n+err.modulepath.must.be.specified:\"--module-path\" ist nicht angegeben, und dieses Laufzeitimage enthält kein jmods-Verzeichnis\n@@ -109,0 +118,3 @@\n+\n+runtime.link.info=Verknüpfung basierend auf dem aktuellen Laufzeitimage\n+runtime.link.jprt.path.extra=(Laufzeitimage)\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_de.properties","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,4 @@\n+main.runtime.image.linking.cap.enabled=有効\n+main.runtime.image.linking.cap.disabled=無効\n+main.runtime.image.linking.cap.sect.header=機能:\n+main.runtime.image.linking.cap.msg=\\      ランタイム・イメージ{0}からのリンク\n@@ -69,0 +73,5 @@\n+err.runtime.link.not.linkable.runtime=このJDKでは、現在のランタイム・イメージからのリンクをサポートしていません\n+err.runtime.link.jdk.jlink.prohibited=このJDKは、パッケージ化されたモジュールを含んでおらず、jdk.jlinkモジュールによる別のイメージの作成に使用できません\n+err.runtime.link.packaged.mods=このJDKにはパッケージ化されたモジュールがありません。--keep-packaged-modulesはサポートされていません\n+err.runtime.link.modified.file={0}が変更されました\n+err.runtime.link.patched.module=ファイル{0}がモジュール・イメージに見つかりません。ランタイム・イメージからリンクする際、--patch-moduleはサポートされていません\n@@ -77,1 +86,1 @@\n-err.modulepath.must.be.specified:--module-pathが指定されておらず、このランタイム・イメージにjmodsディレクトリが含まれていません。\n+err.modulepath.must.be.specified:--module-pathが指定されておらず、このランタイム・イメージにjmodsディレクトリが含まれていません\n@@ -109,0 +118,3 @@\n+\n+runtime.link.info=現在のランタイム・イメージに基づいてリンク\n+runtime.link.jprt.path.extra=(ランタイム・イメージ)\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_ja.properties","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,4 @@\n+main.runtime.image.linking.cap.enabled=启用\n+main.runtime.image.linking.cap.disabled=禁用\n+main.runtime.image.linking.cap.sect.header=功能：\n+main.runtime.image.linking.cap.msg=\\      从运行时映像 {0} 链接\n@@ -69,0 +73,5 @@\n+err.runtime.link.not.linkable.runtime=此 JDK 不支持从当前运行时映像链接\n+err.runtime.link.jdk.jlink.prohibited=此 JDK 不包含打包模块，无法用于使用 jdk.jlink 模块创建其他映像\n+err.runtime.link.packaged.mods=此 JDK 没有打包模块。不支持 --keep-packaged-modules\n+err.runtime.link.modified.file=已修改 {0}\n+err.runtime.link.patched.module=在模块映像中未找到文件 {0}。从运行时映像链接时，不支持 --patch-module\n@@ -77,1 +86,1 @@\n-err.modulepath.must.be.specified:未指定 --module-path，此运行时映像不包含 jmods 目录。\n+err.modulepath.must.be.specified:未指定 --module-path，此运行时映像不包含 jmods 目录\n@@ -109,0 +118,3 @@\n+\n+runtime.link.info=基于当前运行时映像进行链接\n+runtime.link.jprt.path.extra=（运行时映像）\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_zh_CN.properties","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -99,2 +99,2 @@\n-err.compress.incorrect=--圧縮値が無効です: {0}\n-err.compress.wrong.mode=--圧縮を行えるのは作成モードのときのみです\n+err.compress.incorrect=--compress値が無効です: {0}\n+err.compress.wrong.mode=--compressを行えるのは作成モードのときのみです\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/resources\/jmod_ja.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,2 +99,2 @@\n-err.compress.incorrect=--压缩值无效：{0}\n-err.compress.wrong.mode=--仅在使用创建模式时接受压缩\n+err.compress.incorrect=--compress 值无效：{0}\n+err.compress.wrong.mode=--仅在使用创建模式时接受 compress\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/resources\/jmod_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-message.codesign.failed.reason.xcode.tools=Possible reason for \"codesign\" failure is missing Xcode with command line developer tools. Install Xcode with command line developer tools to see if it resolves the problem.\n+message.codesign.failed.reason.xcode.tools=Möglicher Grund für \"codesign\"-Fehler ist fehlender Xcode mit Befehlszeilen-Entwicklertools. Installieren Sie Xcode mit Befehlszeilen-Entwicklertools, und prüfen Sie, ob das Problem dadurch beseitigt wird.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-message.codesign.failed.reason.xcode.tools=Possible reason for \"codesign\" failure is missing Xcode with command line developer tools. Install Xcode with command line developer tools to see if it resolves the problem.\n+message.codesign.failed.reason.xcode.tools=\"codesign\"失敗の考えられる理由は、Xcodeとコマンドライン・デベロッパ・ツールの欠落です。Xcodeとコマンドライン・デベロッパ・ツールをインストールして、問題が解決されるかを確認してください。\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-message.codesign.failed.reason.xcode.tools=Possible reason for \"codesign\" failure is missing Xcode with command line developer tools. Install Xcode with command line developer tools to see if it resolves the problem.\n+message.codesign.failed.reason.xcode.tools=\"codesign\" 失败可能是因为缺少带命令行开发人员工具的 Xcode。请安装带命令行开发人员工具的 Xcode，看看是否可以解决问题。\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n+resource.wix-src-conv=XSLT-Stylesheet zum Konvertieren von WiX-Quellen vom Format WiX v3 in WiX v4\n@@ -45,1 +45,1 @@\n-error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4\/v5 wix.exe and none was found\n+error.no-wix-tools=WiX-Tools nicht gefunden. Gesucht wurden WiX v3 light.exe und candle.exe oder WiX v4\/v5 wix.exe, aber keine der Dateien wurde gefunden\n@@ -59,1 +59,1 @@\n-error.short-path-conv-fail=Failed to get short version of \"{0}\" path\n+error.short-path-conv-fail=Kurze Version des Pfades \"{0}\" konnte nicht abgerufen werden\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_de.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n+resource.wix-src-conv=WiXソースをWiX v3からWiX v4フォーマットに変換するXSLTスタイルシート\n@@ -45,1 +45,1 @@\n-error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4\/v5 wix.exe and none was found\n+error.no-wix-tools=WiXツールが見つかりません。WiX v3 light.exeとcandle.exeまたはWiX v4\/v5 wix.exeを探しましたが、いずれも見つかりませんでした\n@@ -59,1 +59,1 @@\n-error.short-path-conv-fail=Failed to get short version of \"{0}\" path\n+error.short-path-conv-fail=\"{0}\"パスの短縮バージョンの取得に失敗しました\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n+resource.wix-src-conv=将 WiX 源从 WiX v3 格式转换为 WiX v4 格式的 XSLT 样式表\n@@ -45,1 +45,1 @@\n-error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4\/v5 wix.exe and none was found\n+error.no-wix-tools=找不到 WiX 工具。已查找 WiX v3 light.exe 和 candle.exe 或 WiX v4\/v5 wix.exe，但都未找到\n@@ -59,1 +59,1 @@\n-error.short-path-conv-fail=Failed to get short version of \"{0}\" path\n+error.short-path-conv-fail=无法获取简短形式的 \"{0}\" 路径\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-help.usage = Verwendung:   jshell <Option>... <Ladedatei>...\\nMögliche Optionen:\\n    --class-path <Pfad>   Gibt an, wo die Benutzerklassendateien gespeichert sind\\n    --module-path <Pfad>  Gibt an, wo die Anwendungsmodule gespeichert sind\\n    --add-modules <Modul>(,<Modul>)*\\n                         Gibt aufzulösende Module oder alle Module im\\n                            Modulpfad an, wenn <Modul> ALL-MODULE-PATHs lautet\\n    --enable-native-access\\n                          Ermöglicht Ausführung eingeschränkter nativer Methoden durch Code\\n    --enable-preview      Code kann Vorschaufeatures in diesem Release nutzen\\n    --startup <Datei>      Ersetzung der Startdefinitionen mit einer Ausführung\\n    --no-startup          Startdefinitionen werden nicht ausgeführt\\n    --feedback <Modus>     Gibt den anfänglichen Feedbackmodus an. Der Modus kann\\n                            vordefiniert (Silent, Concise, Normal oder Verbose) oder\\n                            vorab benutzerdefiniert sein\\n    -q                    Stilles Feedback. Identisch mit: --feedback concise\\n    -s                    Äußerst stilles Feedback. Identisch mit: --feedback silent\\n    -v                    Verbose-Feedback. Identisch mit: --feedback verbose\\n    -J<Kennzeichen>              Übergibt <Kennzeichen> an das Laufzeitsystem, hat aber keine Auswirkungen\\n                            auf die Ausführung von Code-Snippets. Um Kennzeichen anzugeben,\\n                            die die Ausführung von Code-Snippets beeinflussen, verwenden Sie\\n                            -R<Kennzeichen>. Verwenden Sie alternativ dazu -J<Kennzeichen> mit\\n                            --execution local.\\n    -R<Kennzeichen>              Übergibt <Kennzeichen> nur dann an das Laufzeitsystem, wenn\\n                            Code-Snippets ausgeführt werden. Beispiel: -R-Dfoo=bar\\n                            bedeutet, dass die Ausführung des Snippets\\n                            System.getProperty(\"foo\") \"bar\" zurückgibt.\\n    -C<flag>              Übergibt <Kennzeichen> an den Java-Compiler in JShell.\\n                            Beispiel: -C-Xlint aktiviert alle empfohlenen\\n                            LINT-Warnungen, und -C--release=<N> kompiliert für\\n                            Java SE N, wie wenn --release N angegeben wird.\\n                            Verwenden Sie ein -C pro Compiler-Kennzeichen oder Kennzeichenargument\\n    --version             Gibt Versionsinformationen aus und beendet den Vorgang\\n    --show-version        Gibt Versionsinformationen aus und setzt den Vorgang fort\\n    --help, -?, -h        Gibt diese Zusammenfassung der Standardoptionen aus und beendet den Vorgang\\n    --help-extra, -X      Gibt Hilfetext zu Nicht-Standardoptionen aus und beendet den Vorgang\\n\\nEin Dateiargument kann ein Dateiname oder einer der vordefinierten Dateinamen sein: DEFAULT,\\nPRINTING, TOOLING oder JAVASE.\\nEine Ladedatei kann auch \"-\" zur Angabe einer Standardeingabe ohne interaktiven I\/O sein.\\n\\nWeitere Informationen zu den Auswertungskontextoptionen (--class-path,\\n--module-path und --add-modules) finden Sie unter:\\n\\t\/help context\\n\\nEin Pfad listet die zu durchsuchenden Verzeichnisse und Archive auf. Verwenden Sie unter Windows ein\\nSemikolon (;), um Elemente im Pfad zu trennen. Verwenden Sie auf anderen Plattformen einen\\nDoppelpunkt (:), um Elemente zu trennen.\\n\n+help.usage = Verwendung:   jshell <Option>... <Ladedatei>...\\nMögliche Optionen:\\n    --class-path <Pfad>   Gibt an, wo die Benutzerklassendateien gespeichert sind\\n    --module-path <Pfad>  Gibt an, wo die Anwendungsmodule gespeichert sind\\n    --add-modules <Modul>(,<Modul>)*\\n                          Gibt aufzulösende Module oder alle Module im\\n                            Modulpfad an, wenn <Modul> ALL-MODULE-PATHs lautet\\n    --enable-native-access\\n                          Ermöglicht Ausführung eingeschränkter nativer Methoden durch Code\\n    --enable-preview      Code kann Vorschaufeatures in diesem Release nutzen\\n    --startup <Datei>      Ersetzung der Startdefinitionen mit einer Ausführung\\n    --no-startup          Startdefinitionen werden nicht ausgeführt\\n    --feedback <Modus>     Gibt den anfänglichen Feedbackmodus an. Der Modus kann\\n                            vordefiniert (Silent, Concise, Normal oder Verbose) oder\\n                            vorab benutzerdefiniert sein\\n    -q                    Stilles Feedback. Identisch mit: --feedback concise\\n    -s                    Äußerst stilles Feedback. Identisch mit: --feedback silent\\n    -v                    Verbose-Feedback. Identisch mit: --feedback verbose\\n    -J<Kennzeichen>              Übergibt <Kennzeichen> an das Laufzeitsystem, hat aber keine Auswirkungen\\n                            auf die Ausführung von Code-Snippets. Um Kennzeichen anzugeben,\\n                            die die Ausführung von Code-Snippets beeinflussen, verwenden Sie\\n                            -R<Kennzeichen>. Verwenden Sie alternativ dazu -J<Kennzeichen> mit\\n                            --execution local.\\n    -R<Kennzeichen>              Übergibt <Kennzeichen> nur dann an das Laufzeitsystem, wenn\\n                            Code-Snippets ausgeführt werden. Beispiel: -R-Dfoo=bar\\n                            bedeutet, dass die Ausführung des Snippets\\n                            System.getProperty(\"foo\") \"bar\" zurückgibt.\\n    -C<Kennzeichen>              Übergibt <Kennzeichen> an den Java-Compiler in JShell.\\n                            Beispiel: -C-Xlint aktiviert alle empfohlenen\\n                            LINT-Warnungen, und -C--release=<N> kompiliert für\\n                            Java SE N, wie wenn --release N angegeben wird.\\n                            Verwenden Sie ein -C pro Compiler-Kennzeichen oder Kennzeichenargument\\n    --version             Gibt Versionsinformationen aus und beendet den Vorgang\\n    --show-version        Gibt Versionsinformationen aus und setzt den Vorgang fort\\n    --help, -?, -h        Gibt diese Zusammenfassung der Standardoptionen aus und beendet den Vorgang\\n    --help-extra, -X      Gibt Hilfetext zu Nicht-Standardoptionen aus und beendet den Vorgang\\n\\nEin Dateiargument kann ein Dateiname oder einer der vordefinierten Dateinamen sein: DEFAULT,\\nPRINTING, TOOLING oder JAVASE.\\nEine Ladedatei kann auch \"-\" zur Angabe einer Standardeingabe ohne interaktiven I\/O sein.\\n\\nWeitere Informationen zu den Auswertungskontextoptionen (--class-path,\\n--module-path und --add-modules) finden Sie unter:\\n\\t\/help context\\n\\nEin Pfad listet die zu durchsuchenden Verzeichnisse und Archive auf. Verwenden Sie unter Windows ein\\nSemikolon (;), um Elemente im Pfad zu trennen. Verwenden Sie auf anderen Plattformen einen\\nDoppelpunkt (:), um Elemente zu trennen.\\n\n@@ -204,1 +204,1 @@\n-help.open =Datei öffnen und ihren Inhalt als Snippets und Befehle lesen.\\n\\n\/open <file>\\n\\tAngegebene Datei als JShell-Tooleingabe lesen.\\n\/open <URL>\\n\\tAngegebene URL herunterladen und als JShell-Tooleingabe verwenden.\\n\\n<file> kann der Name einer Betriebssystemdatei oder einer der folgenden vordefinierten\\nDateinamen sein: DEFAULT, PRINTING, TOOLING oder JAVASE.\\nHierbei handelt es sich jeweils um: die Standardimport-Snippets (wie von -default verwendet),\\nDefinitionen der Methoden-Snippets print(), println() und printf(),\\nDefinitionen\\nvon Methoden-Snippets, die JDK-Tools ausführen, oder Importe aller Java SE-Packages.\\n\n+help.open =Datei öffnen und ihren Inhalt als Snippets und Befehle lesen.\\n\\n\/open <Datei>\\n\\tAngegebene Datei als JShell-Tooleingabe lesen.\\n\/open <URL>\\n\\tAngegebene URL herunterladen und als JShell-Tooleingabe verwenden.\\n\\nDie <Datei> kann der Name einer Betriebssystemdatei oder einer der folgenden vordefinierten\\nDateinamen sein: DEFAULT, PRINTING, TOOLING oder JAVASE.\\nHierbei handelt es sich jeweils um: die Standardimport-Snippets (wie von -default verwendet),\\nDefinitionen der Methoden-Snippets print(), println() und printf(),\\nDefinitionen\\nvon Methoden-Snippets, die JDK-Tools ausführen, oder Importe aller Java SE-Packages.\\n\n@@ -309,1 +309,1 @@\n-help.set.prompt = Legt die Prompts fest. Es müssen sowohl der normale als auch der Fortsetzungs-Prompt festgelegt werden:\\n\\n\\t\/set prompt <mode> \"<Prompt>\" \"<Fortsetzungs-Prompt>\"\\n\\nZeigt den normalen und den Fortsetzungs-Prompt an:\\n\\n\\t\/set prompt [<Modus>]\\n\\nDabei gilt: <Modus> ist der Name eines zuvor definierten Feedbackmodus.\\n<Prompt> und <Fortsetzungs-Prompt> sind in Anführungszeichen gesetzte Zeichenfolgen, die als Eingabe-Prompts ausgegeben werden.\\nOptional können beide \"%%s\" enthalten. Dies wird durch die nächste Snippet-ID ersetzt.\\nDer Eingabe wird unter Umständen keine ID zugewiesen, wenn es sich z.B. um einen Fehler oder Befehl handelt.\\nDer Fortsetzungs-Prompt wird in einem mehrzeiligen Snippet in der zweiten und allen nachfolgenden Zeilen verwendet.\\n\\nBei fehlender Angabe von <Prompt> werden die aktuell festgelegten Prompts angezeigt.\\nBei Angabe des <Modus> werden nur die Prompts für diesen Modus angezeigt.\\nBeispiel:\\n\\t\/set prompt mymode\\nZeigt die für den Modus \"mymode\" festgelegten Prompts an\\n\n+help.set.prompt = Legt die Prompts fest. Es müssen sowohl der normale als auch der Fortsetzungs-Prompt festgelegt werden:\\n\\n\\t\/set prompt <Modus> \"<Prompt>\" \"<Fortsetzungs-Prompt>\"\\n\\nZeigt den normalen und den Fortsetzungs-Prompt an:\\n\\n\\t\/set prompt [<Modus>]\\n\\nDabei gilt: <Modus> ist der Name eines zuvor definierten Feedbackmodus.\\n<Prompt> und <Fortsetzungs-Prompt> sind in Anführungszeichen gesetzte Zeichenfolgen, die als Eingabe-Prompts ausgegeben werden.\\nOptional können beide \"%%s\" enthalten. Dies wird durch die nächste Snippet-ID ersetzt.\\nDer Eingabe wird unter Umständen keine ID zugewiesen, wenn es sich z.B. um einen Fehler oder Befehl handelt.\\nDer Fortsetzungs-Prompt wird in einem mehrzeiligen Snippet in der zweiten und allen nachfolgenden Zeilen verwendet.\\n\\nBei fehlender Angabe von <Prompt> werden die aktuell festgelegten Prompts angezeigt.\\nBei Angabe des <Modus> werden nur die Prompts für diesen Modus angezeigt.\\nBeispiel:\\n\\t\/set prompt mymode\\nZeigt die für den Modus \"mymode\" festgelegten Prompts an\\n\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n_de.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -183,2 +183,2 @@\n-help.usage = 用法：   jshell <option>... <load-file>...\\n其中，可能的选项包括：\\n    --class-path <path>   指定用户类文件的查找位置\\n    --module-path <path>  指定应用程序模块的查找位置\\n    --add-modules <module>(,<module>)*\\n                          指定要解析的模块；如果 <module> 为 \\n                            ALL-MODULE-PATHs，则为模块路径中的所有模块\\n    --enable-native-access\\n                          允许代码运行受限的本机方法\\n    --enable-preview      允许代码依赖于此发行版的预览功能\\n    --startup <file>      对启动定义执行单次替换\\n    --no-startup          不运行启动定义\\n    --feedback <mode>     指定初始反馈模式。该模式可以是\\n                            预定义的（silent、concise、normal 或 verbose），\\n                            也可以是用户以前定义的\\n    -q                    无提示反馈。等同于：--feedback concise\\n    -s                    真正无提示反馈。等同于：--feedback silent\\n    -v                    详细反馈。等同于：--feedback verbose\\n    -J<flag>              将 <flag> 传递给运行时系统，但对代码片段的\\n                            执行没有影响。要指定\\n                            影响代码片段执行的标记，请使用\\n                            -R<flag>。或者，将 -J<flag> 与\\n                            --execution local 一起使用。\\n    -R<flag>              仅当执行代码片段时才将 <flag>\\n                            传递给运行时系统。例如，-R-Dfoo=bar\\n                            表示执行片段\\n                            System.getProperty(\"foo\") 将返回 \"bar\"。\\n    -C<flag>              将 <flag> 传递给 JShell 内的 Java 编译器。\\n                            例如，-C-Xlint 启用所有建议的\\n                            lint 警告，而 -C--release=<N> 针对\\n                            Java SE N 进行编译，如同已指定 --release N。\\n                            为每个编译器标记或标记参数使用一个 -C\\n    --version             输出版本信息并退出\\n    --show-version        输出版本信息并继续\\n    --help, -?, -h        输出标准选项的此提要并退出\\n    --help-extra, -X      输出非标准选项的帮助并退出\\n\\n文件参数可以是文件名，或者是预定义的文件名之一：DEFAULT、\\nPRINTING、TOOLING 或 JAVASE。\\n加载文件还可以是 \"-\"，用于指明标准输入，没有交互式 I\/O。\\n\\n有关评估上下文选项（--class-path、--module-path \\n和 \\\n---add-modules）的更多信息，请参见：\\n\\t\/help context\\n\\n路径列出要搜索的目录和档案。对于 Windows，请使用\\n分号 (;) 来分隔路径中的项。在其他平台上，请使用\\n冒号 (:) 来分隔各项。\\n\n+help.usage = 用法：   jshell <选项>... <加载文件>...\\n其中，可能的选项包括：\\n    --class-path <路径>   指定用户类文件的查找位置\\n    --module-path <路径>  指定应用程序模块的查找位置\\n    --add-modules <模块>(,<模块>)*\\n                          指定要解析的模块；如果<模块>为 \\n                            ALL-MODULE-PATHs，则为模块路径中的所有模块\\n    --enable-native-access\\n                          允许代码运行受限的本机方法\\n    --enable-preview      允许代码依赖于此发行版的预览功能\\n    --startup <文件>      对启动定义执行单次替换\\n    --no-startup          不运行启动定义\\n    --feedback <模式>     指定初始反馈模式。该模式可以是\\n                            预定义的（silent、concise、normal 或 verbose），\\n                            也可以是用户以前定义的\\n    -q                    无提示反馈。等同于：--feedback concise\\n    -s                    真正无提示反馈。等同于：--feedback silent\\n    -v                    详细反馈。等同于：--feedback verbose\\n    -J<标记>              将 <标记> 传递给运行时系统，但对代码片段的\\n                            执行没有影响。要指定\\n                            影响代码片段执行的标记，请使用\\n                            -R<标记>。或者，将 -J<标记>与\\n                            --execution local 一起使用。\\n    -R<标记>              仅当执行代码片段时才将 <标记>\\n                            传递给运行时系统。例如，-R-Dfoo=bar\\n                            表示执行片段\\n                            System.getProperty(\"foo\") 将返回 \"bar\"。\\n    -C<标记>              将 <标记> 传递给 JShell 内的 Java 编译器。\\n                            例如，-C-Xlint 启用所有建议的\\n                            lint 警告，而 -C--release=<N> 针对\\n                            Java SE N 进行编译，如同已指定 --release N。\\n                            为每个编译器标记或标记参数使用一个 -C\\n    --version             输出版本信息并退出\\n    --show-version        输出版本信息并继续\\n    --help, -?, -h        输出标准选项的此提要并退出\\n    --help-extra, -X      输出非标准选项的帮助并退出\\n\\n文件参数可以是文件名，或者是预定义的文件名之一：DEFAULT、\\nPRINTING、TOOLING 或 JAVASE。\\n加载文件还可以是 \"-\"，用于指明标准输入，没有交互式 \\\n+I\/O。\\n\\n有关评估上下文选项（--class-path、--module-path \\n和 --add-modules）的更多信息，请参见：\\n\\t\/help context\\n\\n路径列出要搜索的目录和档案。对于 Windows，请使用\\n分号 (;) 来分隔路径中的项。在其他平台上，请使用\\n冒号 (:) 来分隔各项。\\n\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}