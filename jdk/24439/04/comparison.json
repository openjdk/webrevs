{"files":[{"patch":"@@ -1195,0 +1195,3 @@\n+\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n@@ -1259,0 +1262,3 @@\n+\n+                putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileChooserUI.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -659,0 +659,3 @@\n+\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n@@ -671,0 +674,3 @@\n+\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/motif\/MotifFileChooserUI.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -402,0 +402,1 @@\n+        putClientProperty(\"html.disable\", true);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JFileChooser.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -952,0 +952,2 @@\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalFileChooserUI.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1238,0 +1238,2 @@\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n@@ -1634,0 +1636,2 @@\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -692,0 +692,2 @@\n+            label.putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/plaf\/synth\/SynthFileChooserUIImpl.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1081,0 +1081,2 @@\n+            putClientProperty(\"html.disable\", getFileChooser().getClientProperty(\"html.disable\"));\n+\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsFileChooserUI.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.util.List;\n+import javax.swing.Icon;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.filechooser.FileSystemView;\n+\n+\/*\n+ * @test id=metal\n+ * @bug 8139228\n+ * @summary JFileChooser should not render Directory names in HTML format\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HTMLFileName metal\n+ *\/\n+\n+\/*\n+ * @test id=system\n+ * @bug 8139228\n+ * @summary JFileChooser should not render Directory names in HTML format\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HTMLFileName system\n+ *\/\n+\n+public class HTMLFileName {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            <html>\n+            <ol>\n+            <li>FileChooser shows up a virtual directory and file with name\n+               <html><h1 color=#ff00ff><font face=\"Comic Sans MS\">Swing Rocks!.\n+            <li>On \"HTML disabled\" frame :\n+                <ol>\n+                  <li>Verify that the folder and file name must be plain text.\n+                  <li>If the name in file pane window and also in directory\n+                     ComboBox remains in plain text, then press <b>Pass<\/b>.\n+                     If it appears to be in HTML format with Pink color as\n+                     shown, then press <b>Fail<\/b>.\n+                <\/ol>\n+\n+            <li>On \"HTML enabled\" frame :\n+                <ol>\n+                  <li>Verify that the folder and file name remains in HTML\n+                     format with name \"Swing Rocks!\" pink in color as shown.\n+                  <li>If the name in file pane window and also in directory\n+                     ComboBox remains in HTML format string, then press <b>Pass<\/b>.\n+                     If it appears to be in plain text, then press <b>Fail<\/b>.\n+                <\/ol>\n+            <\/ol>\n+            <\/html>\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length < 1) {\n+            throw new IllegalArgumentException(\"Look-and-Feel keyword is required\");\n+        }\n+\n+        final String lafClassName;\n+        switch (args[0]) {\n+            case \"metal\" -> lafClassName = UIManager.getCrossPlatformLookAndFeelClassName();\n+            case \"system\" -> lafClassName = UIManager.getSystemLookAndFeelClassName();\n+            default -> throw new IllegalArgumentException(\"Unsupported Look-and-Feel keyword: \" + args[0]);\n+        }\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                UIManager.setLookAndFeel(lafClassName);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n+        });\n+\n+        System.out.println(\"Test for LookAndFeel \" + lafClassName);\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(HTMLFileName::initialize)\n+                .positionTestUIBottomRowCentered()\n+                .build()\n+                .awaitAndCheck();\n+        System.out.println(\"Test passed for LookAndFeel \" + lafClassName);\n+    }\n+\n+    private static List<JFrame> initialize() {\n+        return List.of(createFileChooser(true), createFileChooser(false));\n+    }\n+\n+    private static JFrame createFileChooser(boolean htmlEnabled) {\n+        JFileChooser jfc = new JFileChooser(new VirtualFileSystemView());\n+        jfc.putClientProperty(\"html.disable\", htmlEnabled);\n+        jfc.setControlButtonsAreShown(false);\n+\n+        JFrame frame = new JFrame((htmlEnabled) ? \"HTML enabled\" : \"HTML disabled\");\n+        frame.add(jfc);\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    private static class VirtualFileSystemView extends FileSystemView {\n+        @Override\n+        public File createNewFolder(File containingDir) {\n+            return null;\n+        }\n+\n+        @Override\n+        public File[] getRoots() {\n+            return new File[]{\n+                    new File(\"\/\", \"<html><h1 color=#ff00ff><font \" +\n+                            \"face=\\\"Comic Sans MS\\\">Swing Rocks!\"),\n+                    new File(\"\/\", \"virtualFile2.txt\"),\n+                    new File(\"\/\", \"virtualFolder\")\n+            };\n+        }\n+\n+        @Override\n+        public File getHomeDirectory() {\n+            return new File(\"\/\");\n+        }\n+\n+        @Override\n+        public File getDefaultDirectory() {\n+            return new File(\"\/\");\n+        }\n+\n+        @Override\n+        public File[] getFiles(File dir, boolean useFileHiding) {\n+            \/\/ Simulate a virtual folder structure\n+            return new File[]{\n+                    new File(\"\/\", \"<html><h1 color=#ff00ff><font \" +\n+                            \"face=\\\"Comic Sans MS\\\">Swing Rocks!\"),\n+                    new File(dir, \"virtualFile2.txt\"),\n+                    new File(dir, \"virtualFolder\")\n+            };\n+        }\n+\n+        @Override\n+        public Icon getSystemIcon(File f) {\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/HTMLFileName.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"}]}