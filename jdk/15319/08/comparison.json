{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.MediaTracker;\n@@ -46,1 +47,0 @@\n-import javax.swing.Icon;\n@@ -196,1 +196,1 @@\n-            attr.getAttribute(StyleConstants.NameAttribute);\n+                attr.getAttribute(StyleConstants.NameAttribute);\n@@ -211,2 +211,2 @@\n-                                                         HTML.Attribute.SIZE,\n-                                                         1);\n+                        HTML.Attribute.SIZE,\n+                        1);\n@@ -225,2 +225,2 @@\n-                                                     HTML.Attribute.ROWS,\n-                                                     1);\n+                    HTML.Attribute.ROWS,\n+                    1);\n@@ -229,2 +229,2 @@\n-                                                     HTML.Attribute.COLS,\n-                                                     20);\n+                    HTML.Attribute.COLS,\n+                    20);\n@@ -234,2 +234,2 @@\n-                                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n-                                JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\n+                    JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n+                    JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\n@@ -259,1 +259,1 @@\n-                attr.getAttribute(HTML.Attribute.VALUE);\n+                    attr.getAttribute(HTML.Attribute.VALUE);\n@@ -276,0 +276,4 @@\n+            String altAtt = (String) attr.getAttribute(HTML.Attribute.ALT);\n+            if (altAtt == null) {\n+                altAtt = srcAtt;\n+            }\n@@ -281,2 +285,4 @@\n-                Icon icon = new ImageIcon(srcURL);\n-                button  = new JButton(icon);\n+                ImageIcon icon = new ImageIcon(srcURL, altAtt);\n+                button = icon.getImageLoadStatus() == MediaTracker.COMPLETE\n+                        ? new JButton(icon)\n+                        : new JButton(altAtt);\n@@ -284,1 +290,1 @@\n-                button = new JButton(srcAtt);\n+                button = new JButton(altAtt);\n@@ -306,2 +312,2 @@\n-                                                     HTML.Attribute.SIZE,\n-                                                     -1);\n+                    HTML.Attribute.SIZE,\n+                    -1);\n@@ -330,2 +336,2 @@\n-                                                     HTML.Attribute.SIZE,\n-                                                     -1);\n+                    HTML.Attribute.SIZE,\n+                    -1);\n@@ -341,1 +347,1 @@\n-                                                     -1);\n+                    -1);\n@@ -344,1 +350,1 @@\n-                                           (\"FormView.browseFileButtonText\"));\n+                    (\"FormView.browseFileButtonText\"));\n@@ -350,1 +356,1 @@\n-                                           attr, (Document)model));\n+                    attr, (Document)model));\n@@ -431,14 +437,14 @@\n-        case View.X_AXIS:\n-            if ((maxIsPreferred & 1) == 1) {\n-                super.getMaximumSpan(axis);\n-                return getPreferredSpan(axis);\n-            }\n-            return super.getMaximumSpan(axis);\n-        case View.Y_AXIS:\n-            if ((maxIsPreferred & 2) == 2) {\n-                super.getMaximumSpan(axis);\n-                return getPreferredSpan(axis);\n-            }\n-            return super.getMaximumSpan(axis);\n-        default:\n-            break;\n+            case View.X_AXIS:\n+                if ((maxIsPreferred & 1) == 1) {\n+                    super.getMaximumSpan(axis);\n+                    return getPreferredSpan(axis);\n+                }\n+                return super.getMaximumSpan(axis);\n+            case View.Y_AXIS:\n+                if ((maxIsPreferred & 2) == 2) {\n+                    super.getMaximumSpan(axis);\n+                    return getPreferredSpan(axis);\n+                }\n+                return super.getMaximumSpan(axis);\n+            default:\n+                break;\n@@ -520,3 +526,3 @@\n-                ? new URL(base.getProtocol(), base.getHost(),\n-                                        base.getPort(), base.getFile())\n-                : new URL(base, action);\n+                    ? new URL(base.getProtocol(), base.getHost(),\n+                    base.getPort(), base.getFile())\n+                    : new URL(base, action);\n@@ -683,1 +689,1 @@\n-                (StyleConstants.NameAttribute) == HTML.Tag.FORM) {\n+                    (StyleConstants.NameAttribute) == HTML.Tag.FORM) {\n@@ -710,1 +716,1 @@\n-                                       (HTML.Attribute.TYPE);\n+                            (HTML.Attribute.TYPE);\n@@ -713,1 +719,1 @@\n-                        next != getElement()) {\n+                            next != getElement()) {\n@@ -744,1 +750,1 @@\n-                                  (StyleConstants.NameAttribute);\n+                (StyleConstants.NameAttribute);\n@@ -911,1 +917,1 @@\n-                                     (elemAttr, HTML.Tag.INPUT)) {\n+                            (elemAttr, HTML.Tag.INPUT)) {\n@@ -913,1 +919,1 @@\n-                                                  (HTML.Attribute.TYPE);\n+                                (HTML.Attribute.TYPE);\n@@ -944,1 +950,1 @@\n-                                                     ModelAttribute);\n+                            ModelAttribute);\n@@ -953,1 +959,1 @@\n-                                             (elemAttr, HTML.Tag.INPUT)) {\n+                                    (elemAttr, HTML.Tag.INPUT)) {\n@@ -955,1 +961,1 @@\n-                                           getAttribute(HTML.Attribute.VALUE);\n+                                        getAttribute(HTML.Attribute.VALUE);\n@@ -982,1 +988,1 @@\n-                                           (HTML.Attribute.CHECKED) != null);\n+                                (HTML.Attribute.CHECKED) != null);\n@@ -984,1 +990,1 @@\n-                                        (JToggleButton.ToggleButtonModel)m;\n+                                (JToggleButton.ToggleButtonModel)m;\n@@ -1014,1 +1020,1 @@\n-                  JFileChooser.APPROVE_OPTION) {\n+                    JFileChooser.APPROVE_OPTION) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/FormView.java","additions":56,"deletions":50,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314731\n+ * @summary FormView doesn't support the alt attribute\n+ * @key headful\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Document;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.StyleSheet;\n+\n+public class bug8314731 {\n+\n+    private static boolean testPassed;\n+    private static JFrame jf;\n+    private static JEditorPane jEditorPane;\n+\n+    public static void main(String[] args) throws Exception {\n+        new bug8314731();\n+        if (testPassed) {\n+            System.out.println(\"ok\");\n+        } else {\n+            throw new RuntimeException(\"FormView doesn't support the alt attribute, see JDK-8314731.\");\n+        }\n+    }\n+\n+    public bug8314731() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(bug8314731::createAndSetVisibleUI);\n+            testPassed = ContainsAlt(jEditorPane);\n+        } finally {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    jf.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndSetVisibleUI() {\n+\n+        jEditorPane = new JEditorPane();\n+        jEditorPane.setEditable(false);\n+        jf = new JFrame(\"alt attribute test in HTML image type input\");\n+\n+        JScrollPane scrollPane = new JScrollPane(jEditorPane);\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        jEditorPane.setEditorKit(kit);\n+        StyleSheet styleSheet = kit.getStyleSheet();\n+        styleSheet.addRule(\"\"\"\n+                body {\n+                    color: #000;\n+                    font-family:times;\n+                    margin: 4px;\n+                }\n+                \"\"\");\n+        String htmlString = \"\"\"\n+                <html>\n+                    <body>\n+                        <input type=image\n+                               name=point\n+                               alt=\"Logo\">\n+                    <\/body>\n+                <\/html>\n+                \"\"\";\n+        Document doc = kit.createDefaultDocument();\n+        jEditorPane.setDocument(doc);\n+        jEditorPane.setText(htmlString);\n+\n+        jf.getContentPane().add(scrollPane, BorderLayout.CENTER);\n+        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        jf.setSize(new Dimension(400, 200));\n+        jf.setLocationRelativeTo(null);\n+        jf.setVisible(true);\n+    }\n+\n+    private boolean ContainsAlt(Container container) {\n+        for (Component c : container.getComponents()) {\n+            if (c instanceof JButton butt) {\n+                String text = butt.getText();\n+                if (text.equals(\"Logo\")) {\n+                    return true;\n+                }\n+            } else if (c instanceof Container cont) {\n+                if (ContainsAlt(cont)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/bug8314731.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"}]}