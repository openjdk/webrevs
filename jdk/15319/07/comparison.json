{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.MediaTracker;\n@@ -46,1 +47,0 @@\n-import javax.swing.Icon;\n@@ -196,1 +196,1 @@\n-            attr.getAttribute(StyleConstants.NameAttribute);\n+                attr.getAttribute(StyleConstants.NameAttribute);\n@@ -214,1 +214,1 @@\n-                list.setSelectionModel((ListSelectionModel)model);\n+                list.setSelectionModel((ListSelectionModel) model);\n@@ -244,1 +244,0 @@\n-\n@@ -269,1 +268,1 @@\n-                button.setModel((ButtonModel)model);\n+                button.setModel((ButtonModel) model);\n@@ -276,0 +275,4 @@\n+            String altAtt = (String) attr.getAttribute(HTML.Attribute.ALT);\n+            if (altAtt == null) {\n+                altAtt = srcAtt;\n+            }\n@@ -278,1 +281,1 @@\n-                URL base = ((HTMLDocument)getElement().getDocument()).getBase();\n+                URL base = ((HTMLDocument) getElement().getDocument()).getBase();\n@@ -281,2 +284,4 @@\n-                Icon icon = new ImageIcon(srcURL);\n-                button  = new JButton(icon);\n+                ImageIcon icon = new ImageIcon(srcURL, altAtt);\n+                button = icon.getImageLoadStatus() == MediaTracker.COMPLETE\n+                         ? new JButton(icon)\n+                         : new JButton(altAtt);\n@@ -284,1 +289,1 @@\n-                button = new JButton(srcAtt);\n+                button = new JButton(altAtt);\n@@ -287,1 +292,1 @@\n-                button.setModel((ButtonModel)model);\n+                button.setModel((ButtonModel) model);\n@@ -295,1 +300,1 @@\n-                ((JCheckBox)c).setModel((JToggleButton.ToggleButtonModel) model);\n+                ((JCheckBox) c).setModel((JToggleButton.ToggleButtonModel) model);\n@@ -301,1 +306,1 @@\n-                ((JRadioButton)c).setModel((JToggleButton.ToggleButtonModel)model);\n+                ((JRadioButton) c).setModel((JToggleButton.ToggleButtonModel) model);\n@@ -312,2 +317,1 @@\n-            }\n-            else {\n+            } else {\n@@ -338,1 +342,1 @@\n-                field.setDocument((Document)model);\n+                field.setDocument((Document) model);\n@@ -344,1 +348,1 @@\n-                                           (\"FormView.browseFileButtonText\"));\n+                    (\"FormView.browseFileButtonText\"));\n@@ -350,1 +354,1 @@\n-                                           attr, (Document)model));\n+                                           attr, (Document) model));\n@@ -392,2 +396,1 @@\n-                        || listenerClass2.equals(listener.getClass().getName()))\n-                {\n+                        || listenerClass2.equals(listener.getClass().getName())) {\n@@ -407,2 +410,1 @@\n-                        || listenerClass2.equals(listener.getClass().getName()))\n-                {\n+                        || listenerClass2.equals(listener.getClass().getName())) {\n@@ -423,4 +425,4 @@\n-     * @return   the span the view would like to be rendered into &gt;= 0.\n-     *           Typically the view is told to render into the span\n-     *           that is returned, although there is no guarantee.\n-     *           The parent may choose to resize or break the view.\n+     * @return the span the view would like to be rendered into &gt;= 0.\n+     *         Typically the view is told to render into the span\n+     *         that is returned, although there is no guarantee.\n+     *         The parent may choose to resize or break the view.\n@@ -431,14 +433,14 @@\n-        case View.X_AXIS:\n-            if ((maxIsPreferred & 1) == 1) {\n-                super.getMaximumSpan(axis);\n-                return getPreferredSpan(axis);\n-            }\n-            return super.getMaximumSpan(axis);\n-        case View.Y_AXIS:\n-            if ((maxIsPreferred & 2) == 2) {\n-                super.getMaximumSpan(axis);\n-                return getPreferredSpan(axis);\n-            }\n-            return super.getMaximumSpan(axis);\n-        default:\n-            break;\n+            case View.X_AXIS:\n+                if ((maxIsPreferred & 1) == 1) {\n+                    super.getMaximumSpan(axis);\n+                    return getPreferredSpan(axis);\n+                }\n+                return super.getMaximumSpan(axis);\n+            case View.Y_AXIS:\n+                if ((maxIsPreferred & 2) == 2) {\n+                    super.getMaximumSpan(axis);\n+                    return getPreferredSpan(axis);\n+                }\n+                return super.getMaximumSpan(axis);\n+            default:\n+                break;\n@@ -449,1 +451,0 @@\n-\n@@ -467,1 +468,0 @@\n-        HTMLDocument doc = (HTMLDocument)getDocument();\n@@ -487,1 +487,0 @@\n-\n@@ -521,1 +520,1 @@\n-                                        base.getPort(), base.getFile())\n+                          base.getPort(), base.getFile())\n@@ -622,2 +621,0 @@\n-        Element elem = getElement();\n-        HTMLDocument hdoc = (HTMLDocument)elem.getDocument();\n@@ -630,1 +627,0 @@\n-        return;\n@@ -639,1 +635,1 @@\n-     *      name + \".x\" +\"=\"+ x +\"&\"+ name +\".y\"+\"=\"+ y\n+     *     name + \".x\" + \"=\" + x + \"&\" + name + \".y\" + \"=\" + y\n@@ -641,1 +637,1 @@\n-     *      \"x=\"+ x +\"&y=\"+ y\n+     *     \"x=\" + x + \"&y=\" + y\n@@ -657,1 +653,1 @@\n-            data = \"x=\"+ x +\"&y=\"+ y;\n+            data = \"x=\" + x + \"&y=\" + y;\n@@ -660,1 +656,1 @@\n-            data = name + \".x\" +\"=\"+ x +\"&\"+ name +\".y\"+\"=\"+ y;\n+            data = name + \".x\" + \"=\" + x + \"&\" + name + \".y\" + \"=\" + y;\n@@ -665,1 +661,0 @@\n-\n@@ -675,1 +670,0 @@\n-\n@@ -699,1 +693,1 @@\n-     * @param buffer        the buffer that contains that data to submit\n+     * @param buffer the buffer that contains that data to submit\n@@ -709,1 +703,1 @@\n-                    String type = (String)next.getAttributes().getAttribute\n+                    String type = (String) next.getAttributes().getAttribute\n@@ -733,1 +727,0 @@\n-     *\n@@ -738,1 +731,1 @@\n-        String name = (String)attr.getAttribute(HTML.Attribute.NAME);\n+        String name = (String) attr.getAttribute(HTML.Attribute.NAME);\n@@ -743,2 +736,2 @@\n-        HTML.Tag tag = (HTML.Tag)elem.getAttributes().getAttribute\n-                                  (StyleConstants.NameAttribute);\n+        HTML.Tag tag = (HTML.Tag) elem.getAttributes().getAttribute\n+                                   (StyleConstants.NameAttribute);\n@@ -748,1 +741,1 @@\n-        } else if (tag ==  HTML.Tag.TEXTAREA) {\n+        } else if (tag == HTML.Tag.TEXTAREA) {\n@@ -754,1 +747,1 @@\n-        if (name != null && value != null) {\n+        if (value != null) {\n@@ -759,1 +752,0 @@\n-\n@@ -774,1 +766,1 @@\n-            Document doc = (Document)model;\n+            Document doc = (Document) model;\n@@ -778,1 +770,0 @@\n-                value = null;\n@@ -786,1 +777,1 @@\n-            ButtonModel m = (ButtonModel)model;\n+            ButtonModel m = (ButtonModel) model;\n@@ -794,1 +785,1 @@\n-            Document doc = (Document)model;\n+            Document doc = (Document) model;\n@@ -815,1 +806,1 @@\n-        Document doc = (Document)attr.getAttribute(StyleConstants.ModelAttribute);\n+        Document doc = (Document) attr.getAttribute(StyleConstants.ModelAttribute);\n@@ -823,1 +814,0 @@\n-\n@@ -831,1 +821,1 @@\n-        String name = (String)attr.getAttribute(HTML.Attribute.NAME);\n+        String name = (String) attr.getAttribute(HTML.Attribute.NAME);\n@@ -852,2 +842,2 @@\n-            ComboBoxModel<?> model = (ComboBoxModel)m;\n-            Option option = (Option)model.getSelectedItem();\n+            ComboBoxModel<?> model = (ComboBoxModel) m;\n+            Option option = (Option) model.getSelectedItem();\n@@ -906,2 +896,1 @@\n-                }\n-                else if (found && isControl(next)) {\n+                } else if (found && isControl(next)) {\n@@ -912,2 +901,2 @@\n-                        String type = (String)elemAttr.getAttribute\n-                                                  (HTML.Attribute.TYPE);\n+                        String type = (String) elemAttr.getAttribute\n+                                                   (HTML.Attribute.TYPE);\n@@ -930,1 +919,1 @@\n-     *\n+     * <p>\n@@ -940,1 +929,1 @@\n-            while((next = it.next()) != null) {\n+            while ((next = it.next()) != null) {\n@@ -946,1 +935,1 @@\n-                        TextAreaDocument doc = (TextAreaDocument)m;\n+                        TextAreaDocument doc = (TextAreaDocument) m;\n@@ -950,1 +939,1 @@\n-                            PlainDocument doc =  (PlainDocument)m;\n+                            PlainDocument doc = (PlainDocument) m;\n@@ -954,2 +943,2 @@\n-                                String value = (String)elemAttr.\n-                                           getAttribute(HTML.Attribute.VALUE);\n+                                String value = (String) elemAttr.\n+                                        getAttribute(HTML.Attribute.VALUE);\n@@ -981,1 +970,1 @@\n-                        boolean checked = ((String)elemAttr.getAttribute\n+                        boolean checked = ((String) elemAttr.getAttribute\n@@ -984,1 +973,1 @@\n-                                        (JToggleButton.ToggleButtonModel)m;\n+                                        (JToggleButton.ToggleButtonModel) m;\n@@ -992,1 +981,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/FormView.java","additions":71,"deletions":83,"binary":false,"changes":154,"status":"modified"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314731\n+ * @summary FormView doesn't support the alt attribute\n+ * @library \/java\/swing\/text\/html\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Document;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.StyleSheet;\n+\n+public class bug8314731 {\n+\n+    private static boolean testFailed = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        new bug8314731();\n+        if (testFailed) {\n+            System.out.println(\"ok\");\n+        } else {\n+            throw new RuntimeException(\"FormView doesn't support the alt attribute, see JDK-8314731.\");\n+        }\n+    }\n+\n+    public bug8314731() throws Exception {\n+        JEditorPane jEditorPane = new JEditorPane();\n+        jEditorPane.setEditable(false);\n+        JFrame jf = new JFrame(\"alt attribute test in HTML image type input\");\n+\n+        JScrollPane scrollPane = new JScrollPane(jEditorPane);\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        jEditorPane.setEditorKit(kit);\n+        StyleSheet styleSheet = kit.getStyleSheet();\n+        styleSheet.addRule(\"\"\"\n+                body {\n+                    color: #000;\n+                    font-family:times;\n+                    margin: 4px;\n+                }\n+                \"\"\");\n+        String htmlString = \"\"\"\n+                <html>\n+                    <body>\n+                        <input type=image\n+                               name=point\n+                               src=\"file:logo.jpeg\"\n+                               alt=\"Logo\">\n+                    <\/body>\n+                <\/html>\n+                \"\"\";\n+        Document doc = kit.createDefaultDocument();\n+        jEditorPane.setDocument(doc);\n+        jEditorPane.setText(htmlString);\n+\n+        jf.getContentPane().add(scrollPane, BorderLayout.CENTER);\n+        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        jf.setSize(new Dimension(400, 200));\n+        jf.setLocationRelativeTo(null);\n+\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                jf.setVisible(true);\n+            }\n+        });\n+\n+        testFailed = ContainsAlt(jEditorPane);\n+\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                jf.dispose();\n+            }\n+        });\n+\n+    }\n+\n+    private boolean ContainsAlt(Container container) {\n+        for (Component c : container.getComponents()) {\n+            if (c instanceof JButton butt) {\n+                String text = butt.getText();\n+                if (text.equals(\"Logo\")) {\n+                    return true;\n+                }\n+            } else if (c instanceof Container cont) {\n+                if (ContainsAlt(cont)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/bug8314731.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"}]}