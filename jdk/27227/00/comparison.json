{"files":[{"patch":"@@ -239,1 +239,1 @@\n-  oop new_obj = nullptr;\n+  HeapWord* new_obj_addr = nullptr;\n@@ -262,1 +262,1 @@\n-      new_obj = cast_to_oop(allocate_in_young_gen(klass, new_obj_size, age));\n+      new_obj_addr = allocate_in_young_gen(klass, new_obj_size, age);\n@@ -267,3 +267,3 @@\n-  if (new_obj == nullptr) {\n-    new_obj = cast_to_oop(allocate_in_old_gen(klass, new_obj_size, age));\n-    if (new_obj == nullptr) {\n+  if (new_obj_addr == nullptr) {\n+    new_obj_addr = allocate_in_old_gen(klass, new_obj_size, age);\n+    if (new_obj_addr == nullptr) {\n@@ -275,1 +275,1 @@\n-  assert(new_obj != nullptr, \"allocation should have succeeded\");\n+  assert(new_obj_addr != nullptr, \"allocation should have succeeded\");\n@@ -278,1 +278,1 @@\n-  Copy::aligned_disjoint_words(cast_from_oop<HeapWord*>(o), cast_from_oop<HeapWord*>(new_obj), new_obj_size);\n+  Copy::aligned_disjoint_words(cast_from_oop<HeapWord*>(o), new_obj_addr, new_obj_size);\n@@ -285,1 +285,1 @@\n-  oop forwardee = o->forward_to_atomic(new_obj, test_mark, memory_order_relaxed);\n+  oop forwardee = o->forward_to_atomic(cast_to_oop(new_obj_addr), test_mark, memory_order_relaxed);\n@@ -288,0 +288,1 @@\n+    oop new_obj = cast_to_oop(new_obj_addr);\n@@ -324,1 +325,1 @@\n-      _old_lab.unallocate_object(cast_from_oop<HeapWord*>(new_obj), new_obj_size);\n+      _old_lab.unallocate_object(new_obj_addr, new_obj_size);\n@@ -326,1 +327,1 @@\n-      _young_lab.unallocate_object(cast_from_oop<HeapWord*>(new_obj), new_obj_size);\n+      _young_lab.unallocate_object(new_obj_addr, new_obj_size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"}]}