{"files":[{"patch":"@@ -134,1 +134,1 @@\n-    field.reinitialize(field_holder(), _index);\n+    field.reinitialize(field_holder(), _index, _fi_buf);\n","filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-#include \"utilities\/pair.hpp\"\n@@ -102,0 +101,1 @@\n+#include \"utilities\/tuple.hpp\"\n@@ -1788,1 +1788,1 @@\n-      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index());\n+      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index(), fs.to_FieldInfo());\n@@ -1857,1 +1857,1 @@\n-      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index());\n+      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index(), fs.to_FieldInfo());\n@@ -1918,4 +1918,2 @@\n-  fieldDescriptor fd;\n-  int length = java_fields_count();\n-  for (int i = 0; i < length; i += 1) {\n-    fd.reinitialize(this, i);\n+  for (JavaFieldStream fs(this); !fs.done(); fs.next()) {\n+    fieldDescriptor& fd = fs.field_descriptor();\n@@ -1929,2 +1927,2 @@\n-static int compare_fields_by_offset(Pair<int,int>* a, Pair<int,int>* b) {\n-  return a->first - b->first;\n+static int compare_fields_by_offset(Tuple<int, int, FieldInfo>* a, Tuple<int, int, FieldInfo>* b) {\n+  return a->template get<0>() - b->template get<0>();\n@@ -1941,1 +1939,1 @@\n-  GrowableArray<Pair<int,int> > fields_sorted;\n+  GrowableArray<Tuple<int, int, FieldInfo> > fields_sorted;\n@@ -1946,1 +1944,1 @@\n-      Pair<int,int> f(fs.offset(), fs.index());\n+      Tuple<int, int, FieldInfo> f(fs.offset(), fs.index(), fs.to_FieldInfo());\n@@ -1956,2 +1954,2 @@\n-      fd.reinitialize(this, fields_sorted.at(i).second);\n-      assert(!fd.is_static() && fd.offset() == fields_sorted.at(i).first, \"only nonstatic fields\");\n+      fd.reinitialize(this, fields_sorted.at(i).template get<1>(), fields_sorted.at(i).template get<2>());\n+      assert(!fd.is_static() && fd.offset() == fields_sorted.at(i).template get<0>(), \"only nonstatic fields\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1591,1 +1591,1 @@\n-      fd.reinitialize(k, fs.index());\n+      fd.reinitialize(k, fs.index(), fs.to_FieldInfo());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-void fieldDescriptor::reinitialize(InstanceKlass* ik, int index) {\n+void fieldDescriptor::reinitialize(InstanceKlass* ik, int index, const FieldInfo &fieldinfo) {\n@@ -97,1 +97,1 @@\n-  _fieldinfo= ik->field(index);\n+  _fieldinfo = fieldinfo;\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    reinitialize(ik, index);\n+    reinitialize(ik, index, ik->field(index));\n@@ -105,1 +105,1 @@\n-  void reinitialize(InstanceKlass* ik, int index);\n+  void reinitialize(InstanceKlass* ik, int index, const FieldInfo &fieldinfo);\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  constexpr Tuple() noexcept {}\n","filename":"src\/hotspot\/share\/utilities\/tuple.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}