{"files":[{"patch":"@@ -1938,1 +1938,0 @@\n-  int i = 0;\n@@ -1942,1 +1941,0 @@\n-      i++;\n@@ -1945,3 +1943,1 @@\n-  if (i > 0) {\n-    int length = i;\n-    assert(length == fields_sorted.length(), \"duh\");\n+  if (fields_sorted.length() > 0) {\n@@ -1950,3 +1946,3 @@\n-    for (int i = 0; i < length; i++) {\n-      fd.reinitialize(this, fields_sorted.at(i));\n-      assert(!fd.is_static() && fd.offset() == checked_cast<int>(fields_sorted.at(i).offset()), \"only nonstatic fields\");\n+    for (GrowableArrayIterator<FieldInfo> it = fields_sorted.begin(); it != fields_sorted.end(); ++it) {\n+      fd.reinitialize(this, *it);\n+      assert(!fd.is_static() && fd.offset() == checked_cast<int>(it->offset()), \"only nonstatic fields\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -877,0 +877,2 @@\n+  inline const E &operator*() const   { return _array->at(_position); }\n+  inline const E *operator->() const  { return &_array->at(_position); }\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}