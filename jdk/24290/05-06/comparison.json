{"files":[{"patch":"@@ -1942,1 +1942,2 @@\n-  if (fields_sorted.length() > 0) {\n+  int length = fields_sorted.length();\n+  if (length > 0) {\n@@ -1945,3 +1946,3 @@\n-    for (auto it = fields_sorted.begin(); it != fields_sorted.end(); ++it) {\n-      fd.reinitialize(this, *it);\n-      assert(!fd.is_static() && fd.offset() == checked_cast<int>(it->offset()), \"only nonstatic fields\");\n+    for (int i = 0; i < length; i++) {\n+      fd.reinitialize(this, fields_sorted.at(i));\n+      assert(!fd.is_static() && fd.offset() == checked_cast<int>(fields_sorted.at(i).offset()), \"only nonstatic fields\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -877,2 +877,0 @@\n-  inline const E& operator*() const   { return _array->at(_position); }\n-  inline const E* operator->() const  { return &_array->at(_position); }\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}