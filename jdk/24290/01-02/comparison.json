{"files":[{"patch":"@@ -134,1 +134,1 @@\n-    field.reinitialize(field_holder(), _index, _fi_buf);\n+    field.reinitialize(field_holder(), _fi_buf);\n","filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,0 @@\n-#include \"utilities\/tuple.hpp\"\n@@ -1788,1 +1787,1 @@\n-      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index(), fs.to_FieldInfo());\n+      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.to_FieldInfo());\n@@ -1857,1 +1856,1 @@\n-      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.index(), fs.to_FieldInfo());\n+      fd->reinitialize(const_cast<InstanceKlass*>(this), fs.to_FieldInfo());\n@@ -1927,2 +1926,2 @@\n-static int compare_fields_by_offset(Tuple<int, int, FieldInfo>* a, Tuple<int, int, FieldInfo>* b) {\n-  return a->template get<0>() - b->template get<0>();\n+static int compare_fields_by_offset(FieldInfo *a, FieldInfo *b) {\n+  return a->offset() - b->offset();\n@@ -1937,1 +1936,0 @@\n-  fieldDescriptor fd;\n@@ -1939,1 +1937,1 @@\n-  GrowableArray<Tuple<int, int, FieldInfo> > fields_sorted;\n+  GrowableArray<FieldInfo> fields_sorted;\n@@ -1943,3 +1941,1 @@\n-      fd = fs.field_descriptor();\n-      Tuple<int, int, FieldInfo> f(fs.offset(), fs.index(), fs.to_FieldInfo());\n-      fields_sorted.push(f);\n+      fields_sorted.push(fs.to_FieldInfo());\n@@ -1953,0 +1949,1 @@\n+    fieldDescriptor fd;\n@@ -1954,2 +1951,2 @@\n-      fd.reinitialize(this, fields_sorted.at(i).template get<1>(), fields_sorted.at(i).template get<2>());\n-      assert(!fd.is_static() && fd.offset() == fields_sorted.at(i).template get<0>(), \"only nonstatic fields\");\n+      fd.reinitialize(this, fields_sorted.at(i));\n+      assert(!fd.is_static() && fd.offset() == checked_cast<int>(fields_sorted.at(i).offset()), \"only nonstatic fields\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1591,1 +1591,1 @@\n-      fd.reinitialize(k, fs.index(), fs.to_FieldInfo());\n+      fd.reinitialize(k, fs.to_FieldInfo());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-void fieldDescriptor::reinitialize(InstanceKlass* ik, int index, const FieldInfo &fieldinfo) {\n+void fieldDescriptor::reinitialize(InstanceKlass* ik, const FieldInfo &fieldinfo) {\n@@ -98,1 +98,0 @@\n-  assert((int)_fieldinfo.index() == index, \"just checking\");\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    reinitialize(ik, index, ik->field(index));\n+    reinitialize(ik, ik->field(index));\n@@ -105,1 +105,1 @@\n-  void reinitialize(InstanceKlass* ik, int index, const FieldInfo &fieldinfo);\n+  void reinitialize(InstanceKlass* ik, const FieldInfo &fieldinfo);\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}