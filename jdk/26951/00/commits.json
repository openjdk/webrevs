[{"commit":{"message":"8365911: AArch64: Fix encoding error in sve_cpy for negative floats\n\nThe sve_cpy instruction is not correctly implemented for negative\nfloating-point values. The issues include:\n\n1. When a negative floating-point number (e.g. `-1.0`) is passed, the\n`checked_cast<int8_t>(pack(d))` check fails. For example, assume `d = -1.0`:\n- `pack(-1.0)` returns an unsigned int with the 7th bit set, i.e., `0xf0`.\n- `checked_cast<int8_t>(0xf0)` casts `0xf0` to an int8_t value, which is `-16`.\n- Casting this int8_t `-16` back to unsigned int results in `0xfffffff0`.\n- The check compares `0xf0` to `0xfffffff0`, which obviously fails.\n\n2. Additionally, the encoding of the negative floating-point number is incorrect:\n- The imm8 field can fall outside the valid range of **[-128, 127]**.\n- Bit **13** should be encoded as **0** for floating-point numbers.\n\nThis PR fixes these issues and renames floating-point `sve_cpy` as `sve_fcpy`.\n\nSome test cases are added to aarch64-asmtest.py, and all tests passed."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"dad0e0112c72494a11ea5add5182ba292912ed0e"}]