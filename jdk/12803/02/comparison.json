{"files":[{"patch":"@@ -9,1 +9,0 @@\n-    <Property name=\"resizable\" type=\"boolean\" value=\"false\"\/>\n@@ -13,0 +12,1 @@\n+    <SyntheticProperty name=\"generateCenter\" type=\"boolean\" value=\"false\"\/>\n@@ -17,0 +17,1 @@\n+    <AuxValue name=\"FormSettings_generateFQN\" type=\"java.lang.Boolean\" value=\"true\"\/>\n@@ -55,1 +56,1 @@\n-              <EmptySpace max=\"-2\" attributes=\"0\"\/>\n+              <EmptySpace min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n@@ -60,1 +61,1 @@\n-              <EmptySpace type=\"unrelated\" max=\"-2\" attributes=\"0\"\/>\n+              <EmptySpace type=\"unrelated\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n@@ -63,1 +64,1 @@\n-                  <Component id=\"jScrollPane1\" min=\"-2\" pref=\"337\" max=\"-2\" attributes=\"0\"\/>\n+                  <Component id=\"jScrollPane1\" pref=\"383\" max=\"32767\" attributes=\"0\"\/>\n@@ -65,1 +66,1 @@\n-              <EmptySpace pref=\"16\" max=\"32767\" attributes=\"0\"\/>\n+              <EmptySpace min=\"-2\" pref=\"16\" max=\"-2\" attributes=\"0\"\/>\n@@ -70,1 +71,1 @@\n-              <EmptySpace max=\"-2\" attributes=\"0\"\/>\n+              <EmptySpace min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n@@ -80,1 +81,0 @@\n-\n@@ -83,6 +83,12 @@\n-        <Component class=\"javax.swing.JTextArea\" name=\"sourceTextArea\">\n-          <Properties>\n-            <Property name=\"columns\" type=\"int\" value=\"20\"\/>\n-            <Property name=\"rows\" type=\"int\" value=\"5\"\/>\n-          <\/Properties>\n-        <\/Component>\n+        <Container class=\"javax.swing.JPanel\" name=\"jPanel1\">\n+          <Layout class=\"org.netbeans.modules.form.compat2.layouts.DesignBorderLayout\"\/>\n+          <SubComponents>\n+            <Component class=\"javax.swing.JTextPane\" name=\"sourceTextArea\">\n+              <Constraints>\n+                <Constraint layoutClass=\"org.netbeans.modules.form.compat2.layouts.DesignBorderLayout\" value=\"org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription\">\n+                  <BorderConstraints direction=\"Center\"\/>\n+                <\/Constraint>\n+              <\/Constraints>\n+            <\/Component>\n+          <\/SubComponents>\n+        <\/Container>\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/EditFilterDialog.form","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,6 @@\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.*;\n@@ -35,1 +41,1 @@\n-    private CustomFilter customFilter;\n+    private final CustomFilter customFilter;\n@@ -44,0 +50,72 @@\n+        sourceTextArea.setFont(new Font(\"Monospaced\", Font.PLAIN, 12));\n+        AbstractDocument doc = (AbstractDocument) sourceTextArea.getDocument();\n+        doc.setDocumentFilter(new DocumentFilter(){\n+            private final StyledDocument styledDocument = sourceTextArea.getStyledDocument();\n+            private final StyleContext styleContext = StyleContext.getDefaultStyleContext();\n+            private final AttributeSet blueAttributeSet = styleContext.addAttribute(styleContext.getEmptySet(), StyleConstants.Foreground, new Color(8,8,255));\n+            private final AttributeSet greenAttributeSet = styleContext.addAttribute(styleContext.getEmptySet(), StyleConstants.Foreground, new Color(80,160,80));\n+            private final AttributeSet greyAttributeSet = styleContext.addAttribute(styleContext.getEmptySet(), StyleConstants.Foreground, Color.GRAY);\n+            private final AttributeSet blackAttributeSet = styleContext.addAttribute(styleContext.getEmptySet(), StyleConstants.Foreground, Color.BLACK);\n+            private final Pattern comments_pattern = Pattern.compile(\"(?:\/\/.*)|(\/\\\\*(?:.|[\\\\n\\\\r])*?\\\\*\/)\");\n+            private final Pattern quote_pattern = Pattern.compile(\"([\\\"'])((?:\\\\\\\\\\\\1|(?:(?!\\\\1)).)*)(\\\\1)\");\n+            private final Pattern keywords_pattern = buildKeywordsPattern();\n+            private final String tabSpaces = \"  \";\n+\n+\n+            private Pattern buildKeywordsPattern() {\n+                StringBuilder pattern = new StringBuilder();\n+                String[] keywords = new String[]{\"await\",\"break\",\"case\",\"catch\",\"class\",\"const\",\"continue\",\"debugger\",\n+                        \"default\",\"delete\",\"do\",\"else\",\"enum\",\"export\",\"extends\",\"false\",\"finally\",\"for\",\"function\",\n+                        \"if\",\"implements\",\"import\",\"in\",\"instanceof\",\"interface\",\"let\",\"new\",\"null\",\"package\",\"private\",\n+                        \"protected\",\"public\",\"return\",\"super\",\"switch\",\"static\",\"this\",\"throw\",\"try\",\"true\",\"typeof\",\n+                        \"var\",\"void\",\"while\",\"with\",\"yield\"\n+                };\n+                for (String keyword : keywords) {\n+                    pattern.append(\"\\\\b\").append(keyword).append(\"\\\\b|\");\n+                }\n+                if (pattern.length()>0) {\n+                    pattern.deleteCharAt(pattern.length()-1);\n+                }\n+                return Pattern.compile(pattern.toString());\n+            }\n+\n+            @Override\n+            public void insertString(FilterBypass fb, int offset, String text, AttributeSet attrs) throws BadLocationException {\n+                text = text.replace(\"\\t\", tabSpaces);\n+                super.insertString(fb, offset, text, attrs);\n+                SwingUtilities.invokeLater(this::updateSyntaxHighlighting);\n+            }\n+\n+            @Override\n+            public void remove(FilterBypass fb, int offset, int length) throws BadLocationException {\n+                super.remove(fb, offset, length);\n+                SwingUtilities.invokeLater(this::updateSyntaxHighlighting);\n+            }\n+\n+            @Override\n+            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {\n+                text = text.replace(\"\\t\", tabSpaces);\n+                super.replace(fb, offset, length, text, attrs);\n+                SwingUtilities.invokeLater(this::updateSyntaxHighlighting);\n+            }\n+\n+            private void updateSyntaxHighlighting() {\n+                styledDocument.setCharacterAttributes(0, sourceTextArea.getText().length(), blackAttributeSet, true);\n+\n+                Matcher keyword_matcher = keywords_pattern.matcher(sourceTextArea.getText());\n+                while (keyword_matcher.find()) {\n+                    styledDocument.setCharacterAttributes(keyword_matcher.start(), keyword_matcher.end() - keyword_matcher.start(), blueAttributeSet, false);\n+                }\n+\n+                Matcher quote_matcher = quote_pattern.matcher(sourceTextArea.getText());\n+                while (quote_matcher.find()) {\n+                    styledDocument.setCharacterAttributes(quote_matcher.start(), quote_matcher.end() - quote_matcher.start(), greenAttributeSet, false);\n+                }\n+\n+                Matcher comments_matcher = comments_pattern.matcher(sourceTextArea.getText());\n+                while (comments_matcher.find()) {\n+                    styledDocument.setCharacterAttributes(comments_matcher.start(), comments_matcher.end() - comments_matcher.start(), greyAttributeSet, false);\n+                }\n+            }\n+        });\n+\n@@ -61,1 +139,2 @@\n-        sourceTextArea = new javax.swing.JTextArea();\n+        jPanel1 = new javax.swing.JPanel();\n+        sourceTextArea = new javax.swing.JTextPane();\n@@ -70,1 +149,0 @@\n-        setResizable(false);\n@@ -72,3 +150,4 @@\n-        sourceTextArea.setColumns(20);\n-        sourceTextArea.setRows(5);\n-        jScrollPane1.setViewportView(sourceTextArea);\n+        jPanel1.setLayout(new java.awt.BorderLayout());\n+        jPanel1.add(sourceTextArea, java.awt.BorderLayout.CENTER);\n+\n+        jScrollPane1.setViewportView(jPanel1);\n@@ -76,1 +155,1 @@\n-        nameTextField.setText(\"null\");\n+        nameTextField.setText(org.openide.util.NbBundle.getMessage(EditFilterDialog.class, \"nameTextField.text\")); \/\/ NOI18N\n@@ -128,2 +207,2 @@\n-                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 337, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))\n-                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 16, Short.MAX_VALUE)\n+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))\n+                .add(16, 16, 16)\n@@ -153,0 +232,1 @@\n+    private javax.swing.JPanel jPanel1;\n@@ -158,1 +238,1 @@\n-    private javax.swing.JTextArea sourceTextArea;\n+    private javax.swing.JTextPane sourceTextArea;\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/EditFilterDialog.java","additions":91,"deletions":11,"binary":false,"changes":102,"status":"modified"}]}