{"files":[{"patch":"@@ -3821,3 +3821,7 @@\n-\/\/ This method creates a list (_required_safept) of ncsfpt nodes that must\n-\/\/ be protected is created for each loop. When a ncsfpt maybe deleted, it\n-\/\/ is first looked for in the lists for the outer loops of the current loop.\n+\/\/ This method maintains a list (_required_safept) of ncsfpts that must\n+\/\/ be protected for each loop. It only marks ncsfpts for prevervation,\n+\/\/ and does not actually delete any of them.\n+\/\/\n+\/\/ If some other method needs to delete a ncsfpt later, it will make sure\n+\/\/ the ncsfpt is not in the list of all outer loops of the current loop.\n+\/\/ See `PhaseIdealLoop::is_deleteable_safept`.\n@@ -3826,9 +3830,11 @@\n-\/\/  A) counted loops are okay\n-\/\/  B) innermost loops are okay (only an inner loop can delete\n-\/\/     a ncsfpt needed by an outer loop)\n-\/\/  C) a loop is immune from an inner loop deleting a safepoint\n-\/\/     if the loop has a call on the idom-path\n-\/\/  D) a loop is also immune if it has a ncsfpt (non-call safepoint) on the\n-\/\/     idom-path that is not in a nested loop\n-\/\/  E) otherwise, an ncsfpt on the idom-path that is nested in an inner\n-\/\/     loop needs to be prevented from deletion by an inner loop\n+\/\/  A) Counted loops are okay\n+\/\/  B) Innermost loops are okay because there's no inner loops can delete\n+\/\/     their ncsfpts\n+\/\/  C) If an outer loop has a call that's guaranteed to execute (on the\n+\/\/     idom-path), then that loop is okay. Because the call will always\n+\/\/     perform a safepoint poll, regardless of what safepoints are deleted\n+\/\/     from its inner loops\n+\/\/  D) Similarly, if an outer loop has a ncsfpt on the idom-path that isn't\n+\/\/     inside any nested loop, then that loop is okay\n+\/\/  E) Otherwise, if an outer loop's ncsfpt on the idom-path is nested in\n+\/\/     an inner loop, we need to prevent the inner loop from deleting it\n@@ -3868,0 +3874,2 @@\n+            \/\/ We found a local ncsfpt.\n+            \/\/ Continue searching for a call that is guaranteed to be a safepoint.\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"}]}