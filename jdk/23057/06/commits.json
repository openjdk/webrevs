[{"commit":{"message":"Update microbench"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LoopSafepoint.java"}],"sha":"b132bddc29f63b1c98bb71c42eb8be7234bf073c"},{"commit":{"message":"Add IR tests for nested loops"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRedundantSafepointElimination.java"}],"sha":"b42ffb46a590e2c1d8c2e8ad6cd765138a36f3cd"},{"commit":{"message":"Fix comments of `check_safepts`"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"9b2bd6e64eb58fe13121919c00136fba3baff929"},{"commit":{"message":"Update comments in `loopnode.cpp`"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"b52f7ba1d5334c54b8e26c2f599dab476df2cfaf"},{"commit":{"message":"Move IR test to `compiler.loopopts`"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRedundantSafepointElimination.java"}],"sha":"d86160d73dff8652c00b394e52857ad41e446291"},{"commit":{"message":"Merge branch 'master' into enhance-loop-safepoint-elim"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"ba6e7e791fc822e9b18998f4ee472949680ea1cd"},{"commit":{"message":"Improve documentation comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"1a21604647ed937526ffd7e9fbda9dbfd61aa1f4"},{"commit":{"message":"Merge branch 'master' into enhance-loop-safepoint-elim"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"56983ed5c09771baebb4cc7da09c169115195348"},{"commit":{"message":"Add IR test and microbench."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LoopSafepoint.java"}],"sha":"23ef6aab271e5ec24ce0490f828658e5864a4d18"},{"commit":{"message":"Make `PhaseIdealLoop` eliminate more redundant safepoints in loops."},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"6e5dbafe87b58d299c084682ac166b724f1a0fae"}]