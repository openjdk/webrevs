{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -3868,3 +3868,1 @@\n-            break;\n-          }\n-          if (nonlocal_ncsfpt == nullptr) {\n+          } else if (nonlocal_ncsfpt == nullptr) {\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2025 Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2.irTests;\n+\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8347499\n+ * @summary Tests that redundant safepoints can be eliminated in loops.\n+ * @library \/test\/lib \/\n+ * @requires vm.compiler2.enabled\n+ * @run main compiler.c2.irTests.TestLoopSafepoint\n+ *\/\n+public class TestLoopSafepoint {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    static int loopCount = 100000;\n+    static int anotherInt = 1;\n+\n+    @DontInline\n+    private void empty() {}\n+\n+    @DontInline\n+    private int constInt() {\n+        return 100000;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.SAFEPOINT)\n+    public void loopConst() {\n+        for (int i = 0; i < 100000; i++) {\n+            empty();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.SAFEPOINT)\n+    public void loopVar() {\n+        for (int i = 0; i < loopCount; i++) {\n+            empty();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.SAFEPOINT, \"1\"})\n+    public int loopVarWithoutCall() {\n+        int sum = 0;\n+        for (int i = 0; i < loopCount; i++) {\n+            sum += anotherInt;\n+        }\n+        return sum;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.SAFEPOINT)\n+    public void loopFunc() {\n+        for (int i = 0; i < constInt(); i++) {\n+            empty();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestLoopSafepoint.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2025 Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.*;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(value = 3)\n+@Warmup(iterations = 5, time = 2)\n+@Measurement(iterations = 5, time = 3)\n+@State(Scope.Thread)\n+public class LoopSafepoint {\n+    static int loopCount = 100000;\n+    static int anotherInt = 1;\n+\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private void empty() {}\n+\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private int constInt() {\n+        return 100000;\n+    }\n+\n+    @Benchmark\n+    public int loopConst() {\n+        int sum = 0;\n+        for (int i = 0; i < 100000; i++) {\n+            sum += anotherInt;\n+            empty();\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public int loopVar() {\n+        int sum = 0;\n+        for (int i = 0; i < loopCount; i++) {\n+            sum += anotherInt;\n+            empty();\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public int loopFunc() {\n+        int sum = 0;\n+        for (int i = 0; i < constInt(); i++) {\n+            sum += anotherInt;\n+            empty();\n+        }\n+        return sum;\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LoopSafepoint.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"}]}