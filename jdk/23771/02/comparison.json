{"files":[{"patch":"@@ -209,1 +209,2 @@\n-  SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(metadata.mem_tag)];\n+  MemTag tag_to_change = use_tag_inplace ? stA.out.mem_tag() : metadata.mem_tag;\n+  SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(tag_to_change)];\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -727,0 +727,16 @@\n+\n+TEST_VM_F(NMTVMATreeTest, SummaryAccountingWhenUseFlagInplace) {\n+  Tree tree;\n+  VMATree::RegionData rd1(si[0], mtTest);\n+  VMATree::RegionData rd2(si[1], mtNone);\n+  tree.reserve_mapping(0, 100, rd1);\n+  VMATree::SummaryDiff diff = tree.commit_mapping(0, 50, rd2, true);\n+  EXPECT_EQ(0, diff.tag[NMTUtil::tag_to_index(mtTest)].reserve);\n+  EXPECT_EQ(50, diff.tag[NMTUtil::tag_to_index(mtTest)].commit);\n+  diff = tree.commit_mapping(60, 10, rd2, true);\n+  EXPECT_EQ(0, diff.tag[NMTUtil::tag_to_index(mtTest)].reserve);\n+  EXPECT_EQ(10, diff.tag[NMTUtil::tag_to_index(mtTest)].commit);\n+  diff = tree.uncommit_mapping(0, 50, rd2);\n+  EXPECT_EQ(0, diff.tag[NMTUtil::tag_to_index(mtTest)].reserve);\n+  EXPECT_EQ(-50, diff.tag[NMTUtil::tag_to_index(mtTest)].commit);\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}