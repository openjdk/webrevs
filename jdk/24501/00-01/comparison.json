{"files":[{"patch":"@@ -31,1 +31,0 @@\n-import java.awt.print.PrinterException;\n@@ -33,0 +32,2 @@\n+import java.io.File;\n+import java.lang.Override;\n@@ -36,1 +37,3 @@\n-import javax.swing.JOptionPane;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.print.attribute.standard.Destination;\n@@ -41,1 +44,1 @@\n- * @summary Printer graphics must behave the same as screen graphics\n+ * @summary Printer graphics must throw expected exceptions\n@@ -43,3 +46,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual PrintNullString\n+ * @run main PrintNullString\n@@ -48,5 +49,0 @@\n-    private static final String INSTRUCTIONS =\n-            \"This test will automatically initiate a print\\n\\n\" +\n-            \"A passing test will print 'OK' and 'expected' messages.\\n\" +\n-            \"Test failed if no exception thrown.\\n\\n\" +\n-            \"The test will complete automatically.\";\n@@ -58,14 +54,0 @@\n-\n-        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 1)\n-                .columns(45)\n-                .build();\n-        new PrintNullString();\n-        passFailJFrame.awaitAndCheck();\n-    }\n-\n-    public PrintNullString() {\n-        TextCanvas c = new TextCanvas();\n-        add(\"Center\", c);\n-        pack();\n@@ -73,14 +55,6 @@\n-        if (pj.printDialog()) {\n-            pj.setPrintable(c);\n-            try {\n-                pj.print();\n-            } catch (PrinterException ex) {\n-                ex.printStackTrace();\n-                String msg = \"PrinterException: \" + ex.getMessage();\n-                JOptionPane.showMessageDialog(c, msg, \"Error occurred\",\n-                        JOptionPane.ERROR_MESSAGE);\n-                PassFailJFrame.forceFail(msg);\n-            }\n-        } else {\n-            PassFailJFrame.forceFail(\"User cancelled printing\");\n-        }\n+        pj.setPrintable(new TextCanvas(), new PageFormat());\n+        PrintRequestAttributeSet pSet = new HashPrintRequestAttributeSet();\n+        File file = new File(\"out.prn\");\n+        file.deleteOnExit();\n+        pSet.add(new Destination(file.toURI()));\n+        pj.print(pSet);\n@@ -113,1 +87,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No NPE for null String, int\");\n+                throw new RuntimeException(\"FAILURE: No NPE for null String, int\");\n@@ -124,1 +98,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No NPE for null String, float\");\n+                throw new RuntimeException(\"FAILURE: No NPE for null String, float\");\n@@ -135,1 +109,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No NPE for null iterator, int\");\n+                throw new RuntimeException(\"FAILURE: No NPE for null iterator, int\");\n@@ -142,1 +116,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No IAE for empty iterator, int\");\n+                throw new RuntimeException(\"FAILURE: No IAE for empty iterator, int\");\n@@ -150,1 +124,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No NPE for null iterator, float\");\n+                throw new RuntimeException(\"FAILURE: No NPE for null iterator, float\");\n@@ -157,1 +131,1 @@\n-                PassFailJFrame.forceFail(\"FAILURE: No IAE for empty iterator, float\");\n+                throw new RuntimeException(\"FAILURE: No IAE for empty iterator, float\");\n@@ -161,1 +135,0 @@\n-            PassFailJFrame.forcePass();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintNullString.java","additions":19,"deletions":46,"binary":false,"changes":65,"status":"modified"}]}