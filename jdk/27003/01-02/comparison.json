{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -276,0 +277,1 @@\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,4 @@\n-    VirtualMemoryTracker::Instance::add_reserved_region(stack_end, stack_size, CALLER_PC, mtThreadStack);\n+    {\n+      MemTracker::NmtVirtualMemoryLocker nvml;\n+      VirtualMemoryTracker::Instance::add_reserved_region(stack_end, stack_size, CALLER_PC, mtThreadStack);\n+    }\n@@ -44,1 +47,4 @@\n-    VirtualMemoryTracker::Instance::snapshot_thread_stacks();\n+    {\n+      MemTracker::NmtVirtualMemoryLocker nvml;\n+      VirtualMemoryTracker::Instance::snapshot_thread_stacks();\n+    }\n@@ -111,1 +117,4 @@\n-    ReservedMemoryRegion rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n+    {\n+      MemTracker::NmtVirtualMemoryLocker nvml;\n+      ReservedMemoryRegion rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n+    }\n@@ -117,9 +126,12 @@\n-    VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const CommittedMemoryRegion& cmr){\n-      if (cmr.size() == size) {\n-        return false;\n-      } else {\n-        precise_tracking_supported = true;\n-        check_covered_pages(cmr.base(), cmr.size(), (address)base, touch_pages, page_num);\n-      }\n-      return true;\n-    });\n+    {\n+      MemTracker::NmtVirtualMemoryLocker nvml;\n+      VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const CommittedMemoryRegion& cmr){\n+        if (cmr.size() == size) {\n+          return false;\n+        } else {\n+          precise_tracking_supported = true;\n+          check_covered_pages(cmr.base(), cmr.size(), (address)base, touch_pages, page_num);\n+        }\n+        return true;\n+      });\n+    }\n@@ -136,2 +148,4 @@\n-    VirtualMemoryTracker::Instance::remove_released_region((address)base, size);\n-    rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n+    {\n+      VirtualMemoryTracker::Instance::remove_released_region((address)base, size);\n+      rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n+    }\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n+  vmt.tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}