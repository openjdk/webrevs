{"files":[{"patch":"@@ -387,0 +387,19 @@\n+void remove_single_entry_region(NTarjan* t, NTarjan*& tdom, Node*& dom, PhaseIterGVN& igvn) {\n+  \/\/ remove phis:\n+  for (DUIterator_Fast jmax, j = dom->fast_outs(jmax); j < jmax; j++) {\n+    Node* use = dom->fast_out(j);\n+    if (use->is_Phi()) {\n+      igvn.replace_node(use, use->in(1));\n+      --j; --jmax;\n+    }\n+  }\n+  \/\/ Disconnect region from dominator tree\n+  assert(dom->unique_ctrl_out() == t->_control, \"expect a single dominated node\");\n+  tdom = tdom->_dom;\n+  t->_dom = tdom;\n+  assert(tdom->_control == dom->in(1), \"dominator of region with single input should be that input\");\n+  \/\/ and remove it\n+  igvn.replace_node(dom, dom->in(1));\n+  dom = tdom->_control;\n+}\n+\n@@ -489,1 +508,5 @@\n-      _idom[t->_control->_idx] = tdom->_control; \/\/ Set immediate dominator\n+      Node* dom = tdom->_control;\n+      if (dom != C->root() && dom->is_Region() && dom->req() == 2) {\n+        remove_single_entry_region(t, tdom, dom, _igvn);\n+      }\n+      _idom[t->_control->_idx] = dom; \/\/ Set immediate dominator\n","filename":"src\/hotspot\/share\/opto\/domgraph.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321278\n+ * @summary C2: Partial peeling fails with assert \"last_peel <- first_not_peeled\"\n+ * @run main\/othervm -XX:CompileCommand=quiet -XX:CompileCommand=compileonly,TestPartialPeelingAtSingleInputRegion::test\n+ *                   -XX:-TieredCompilation -Xbatch -XX:PerMethodTrapLimit=0 TestPartialPeelingAtSingleInputRegion\n+ *\n+ *\/\n+\n+public class TestPartialPeelingAtSingleInputRegion {\n+\n+    static void test() {\n+        for (int i = 100; i > 10; --i) {\n+            for (int j = i; j < 10; ++j) {\n+                switch (j) {\n+                case 1:\n+                    if (j != 0) {\n+                        return;\n+                    }\n+                }\n+             }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 50_000; ++i) {\n+            test();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPartialPeelingAtSingleInputRegion.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}