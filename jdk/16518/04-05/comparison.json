{"files":[{"patch":"@@ -108,1 +108,1 @@\n-     * @param layout the target layout.\n+     * @param layout the target layout\n@@ -110,1 +110,1 @@\n-     *          provided target layout.\n+     *          provided target layout\n@@ -127,1 +127,1 @@\n-     *         target layout.\n+     *         target layout\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-     * @return a new arena that is managed, automatically, by the garbage collector.\n+     * @return a new arena that is managed, automatically, by the garbage collector\n@@ -229,5 +229,4 @@\n-     * Obtains the global arena. Segments allocated with the global arena can be\n-     * {@linkplain MemorySegment#isAccessibleBy(Thread) accessed} by any thread.\n-     * Calling {@link #close()} on the returned arena will result in an {@link UnsupportedOperationException}.\n-     *\n-     * @return the global arena.\n+     * {@return the global arena} Segments allocated with the global arena can be\n+     *          {@linkplain MemorySegment#isAccessibleBy(Thread) accessed} by any thread.\n+     *          Calling {@link #close()} on the returned arena will result in\n+     *          an {@link UnsupportedOperationException}.\n@@ -278,1 +277,1 @@\n-     *                 the native memory segment.\n+     *                 the native memory segment\n@@ -280,2 +279,2 @@\n-     *                      of memory backing the native memory segment.\n-     * @return a new native memory segment.\n+     *                      of memory backing the native memory segment\n+     * @return a new native memory segment\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -40,1 +40,2 @@\n- * {@linkplain Linker#downcallHandle(MemorySegment, FunctionDescriptor, Linker.Option...) downcall method handles} and\n+ * {@linkplain Linker#downcallHandle(MemorySegment, FunctionDescriptor, Linker.Option...) downcall method handles}\n+ * and\n@@ -66,1 +67,1 @@\n-     * @param addedLayouts the argument layouts to append.\n+     * @param addedLayouts the argument layouts to append\n@@ -78,1 +79,1 @@\n-     * @param addedLayouts the argument layouts to insert at given index.\n+     * @param addedLayouts the argument layouts to insert at given index\n@@ -88,1 +89,1 @@\n-     * @param newReturn the new return layout.\n+     * @param newReturn the new return layout\n@@ -90,1 +91,1 @@\n-     * @return a new function descriptor, with the provided return layout.\n+     * @return a new function descriptor, with the provided return layout\n@@ -116,1 +117,1 @@\n-     *         function descriptor.\n+     *         function descriptor\n@@ -123,2 +124,2 @@\n-     * @param resLayout the return layout.\n-     * @param argLayouts the argument layouts.\n+     * @param resLayout the return layout\n+     * @param argLayouts the argument layouts\n@@ -128,1 +129,1 @@\n-     * @return a new function descriptor with the provided return and argument layouts.\n+     * @return a new function descriptor with the provided return and argument layouts\n@@ -140,1 +141,1 @@\n-     * @param argLayouts the argument layouts.\n+     * @param argLayouts the argument layouts\n@@ -143,1 +144,1 @@\n-     * @return a new function descriptor with the provided argument layouts.\n+     * @return a new function descriptor with the provided argument layouts\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -51,3 +51,3 @@\n-     * member layouts have been passed to one of the group layout factory methods\n-     * (see {@link MemoryLayout#structLayout(MemoryLayout...)} and\n-     * {@link MemoryLayout#unionLayout(MemoryLayout...)}).\n+     *          member layouts have been passed to one of the group layout factory methods\n+     *          (see {@link MemoryLayout#structLayout(MemoryLayout...)} and\n+     *          {@link MemoryLayout#unionLayout(MemoryLayout...)}).\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -590,4 +590,4 @@\n-     *                 of the target foreign function.\n-     * @param function the function descriptor of the target foreign function.\n-     * @param options  the linker options associated with this linkage request.\n-     * @return a downcall method handle.\n+     *                 of the target foreign function\n+     * @param function the function descriptor of the target foreign function\n+     * @param options  the linker options associated with this linkage request\n+     * @return a downcall method handle\n@@ -657,3 +657,3 @@\n-     * @param function the function descriptor of the target foreign function.\n-     * @param options  the linker options associated with this linkage request.\n-     * @return a downcall method handle.\n+     * @param function the function descriptor of the target foreign function\n+     * @param options  the linker options associated with this linkage request\n+     * @return a downcall method handle\n@@ -698,5 +698,5 @@\n-     * @param target the target method handle.\n-     * @param function the upcall stub function descriptor.\n-     * @param arena the arena associated with the returned upcall stub segment.\n-     * @param options  the linker options associated with this linkage request.\n-     * @return a zero-length segment whose address is the address of the upcall stub.\n+     * @param target the target method handle\n+     * @param function the upcall stub function descriptor\n+     * @param arena the arena associated with the returned upcall stub segment\n+     * @param options  the linker options associated with this linkage request\n+     * @return a zero-length segment whose address is the address of the upcall stub\n@@ -738,1 +738,1 @@\n-     * @return a symbol lookup for symbols in a set of commonly used libraries.\n+     * @return a symbol lookup for symbols in a set of commonly used libraries\n@@ -798,1 +798,1 @@\n-         *             descriptor associated with a downcall linkage request.\n+         *             descriptor associated with a downcall linkage request\n@@ -843,1 +843,1 @@\n-         * @param capturedState the names of the values to save.\n+         * @param capturedState the names of the values to save\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -469,1 +469,1 @@\n-     * @param name the layout name.\n+     * @param name the layout name\n@@ -535,1 +535,1 @@\n-     * @param elements the layout path elements.\n+     * @param elements the layout path elements\n@@ -537,1 +537,1 @@\n-     *         {@code elements}.\n+     *         {@code elements}\n@@ -579,1 +579,1 @@\n-     * @param elements the layout path elements.\n+     * @param elements the layout path elements\n@@ -581,1 +581,1 @@\n-     *         by the given layout path.\n+     *         by the given layout path\n@@ -690,1 +690,1 @@\n-     * @param elements the layout path elements.\n+     * @param elements the layout path elements\n@@ -692,1 +692,1 @@\n-     *         given layout path.\n+     *         given layout path\n@@ -744,1 +744,1 @@\n-     * @param elements the layout path elements.\n+     * @param elements the layout path elements\n@@ -746,1 +746,1 @@\n-     *         offsets selected by the given layout path.\n+     *         offsets selected by the given layout path\n@@ -797,1 +797,1 @@\n-     * @param elements the layout path elements.\n+     * @param elements the layout path elements\n@@ -799,1 +799,1 @@\n-     *         selected by the given layout path.\n+     *         selected by the given layout path\n@@ -811,2 +811,2 @@\n-     * @param elements the layout path elements.\n-     * @return the layout selected by the layout path in {@code elements}.\n+     * @param elements the layout path elements\n+     * @return the layout selected by the layout path in {@code elements}\n@@ -857,1 +857,1 @@\n-         * @param name the name of the member layout to be selected.\n+         * @param name the name of the member layout to be selected\n@@ -859,1 +859,1 @@\n-         *         given name.\n+         *         given name\n@@ -871,1 +871,1 @@\n-         * @param index the index of the member layout element to be selected.\n+         * @param index the index of the member layout element to be selected\n@@ -873,1 +873,1 @@\n-         *         given index.\n+         *         given index\n@@ -888,1 +888,1 @@\n-         * @param index the index of the sequence element to be selected.\n+         * @param index the index of the sequence element to be selected\n@@ -890,1 +890,1 @@\n-         *         given index.\n+         *         given index\n@@ -916,1 +916,1 @@\n-         * @param start the index of the first sequence element to be selected.\n+         * @param start the index of the first sequence element to be selected\n@@ -918,1 +918,1 @@\n-         *             selected.\n+         *             selected\n@@ -920,1 +920,1 @@\n-         *         given index.\n+         *         given index\n@@ -942,1 +942,1 @@\n-         * @return a path element which selects an unspecified sequence element layout.\n+         * @return a path element which selects an unspecified sequence element layout\n@@ -953,1 +953,1 @@\n-         * @return a path element which dereferences an address layout.\n+         * @return a path element which dereferences an address layout\n@@ -981,2 +981,2 @@\n-     * @param other the object to be compared for equality with this layout.\n-     * @return {@code true} if the specified object is equal to this layout.\n+     * @param other the object to be compared for equality with this layout\n+     * @return {@code true} if the specified object is equal to this layout\n@@ -1004,2 +1004,2 @@\n-     * @param byteSize the padding size (expressed in bytes).\n-     * @return the new selector layout.\n+     * @param byteSize the padding size (expressed in bytes)\n+     * @return the new selector layout\n@@ -1015,2 +1015,2 @@\n-     * @param elementCount the sequence element count.\n-     * @param elementLayout the sequence element layout.\n+     * @param elementCount the sequence element count\n+     * @param elementLayout the sequence element layout\n@@ -1034,2 +1034,2 @@\n-     * @param elements The member layouts of the struct layout.\n-     * @return a struct layout with the given member layouts.\n+     * @param elements The member layouts of the struct layout\n+     * @return a struct layout with the given member layouts\n@@ -1075,2 +1075,2 @@\n-     * @param elements The member layouts of the union layout.\n-     * @return a union layout with the given member layouts.\n+     * @param elements The member layouts of the union layout\n+     * @return a union layout with the given member layouts\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -537,1 +537,1 @@\n-     * @return the Java object associated with this memory segment, if any.\n+     * @return the Java object associated with this memory segment, if any\n@@ -558,1 +558,1 @@\n-     * @param elementLayout the layout to be used for splitting.\n+     * @param elementLayout the layout to be used for splitting\n@@ -577,2 +577,2 @@\n-     * @param elementLayout the layout to be used for splitting.\n-     * @return a sequential {@code Stream} over disjoint slices in this segment.\n+     * @param elementLayout the layout to be used for splitting\n+     * @return a sequential {@code Stream} over disjoint slices in this segment\n@@ -595,1 +595,1 @@\n-     * @param thread the thread to be tested.\n+     * @param thread the thread to be tested\n@@ -617,3 +617,3 @@\n-     *               specified in bytes.\n-     * @param newSize The new segment size, specified in bytes.\n-     * @return a slice of this memory segment.\n+     *               specified in bytes\n+     * @param newSize The new segment size, specified in bytes\n+     * @return a slice of this memory segment\n@@ -631,4 +631,4 @@\n-     *               specified in bytes.\n-     * @param newSize The new segment size, specified in bytes.\n-     * @param byteAlignment The alignment constraint (in bytes) of the returned slice.\n-     * @return a slice of this memory segment.\n+     *               specified in bytes\n+     * @param newSize The new segment size, specified in bytes\n+     * @param byteAlignment The alignment constraint (in bytes) of the returned slice\n+     * @return a slice of this memory segment\n@@ -657,2 +657,2 @@\n-     *               specified in bytes.\n-     * @param layout The layout of the segment slice.\n+     *               specified in bytes\n+     * @param layout The layout of the segment slice\n@@ -663,1 +663,1 @@\n-     * @return a slice of this memory segment.\n+     * @return a slice of this memory segment\n@@ -680,2 +680,2 @@\n-     *               specified in bytes.\n-     * @return a slice of this memory segment.\n+     *               specified in bytes\n+     * @return a slice of this memory segment\n@@ -690,1 +690,1 @@\n-     * @param newSize the size of the returned segment.\n+     * @param newSize the size of the returned segment\n@@ -692,1 +692,1 @@\n-     *         this segment, but the new provided size.\n+     *         this segment, but the new provided size\n@@ -734,1 +734,1 @@\n-     * @param arena the arena to be associated with the returned segment.\n+     * @param arena the arena to be associated with the returned segment\n@@ -736,2 +736,2 @@\n-     *                is closed (can be {@code null}).\n-     * @return a new memory segment with unbounded size.\n+     *                is closed (can be {@code null})\n+     * @return a new memory segment with unbounded size\n@@ -779,2 +779,2 @@\n-     * @param newSize the size of the returned segment.\n-     * @param arena the arena to be associated with the returned segment.\n+     * @param newSize the size of the returned segment\n+     * @param arena the arena to be associated with the returned segment\n@@ -782,1 +782,1 @@\n-     *                is closed (can be {@code null}).\n+     *                is closed (can be {@code null})\n@@ -784,1 +784,1 @@\n-     *         and its scope set to that of the provided arena.\n+     *         and its scope set to that of the provided arena\n@@ -843,2 +843,2 @@\n-     * @param other the segment to test for an overlap with this segment.\n-     * @return a slice of this segment (where overlapping occurs).\n+     * @param other the segment to test for an overlap with this segment\n+     * @return a slice of this segment (where overlapping occurs)\n@@ -865,2 +865,2 @@\n-     * @param value the value to write into this segment.\n-     * @return this memory segment.\n+     * @param value the value to write into this segment\n+     * @return this memory segment\n@@ -886,1 +886,1 @@\n-     * @param src the source segment.\n+     * @param src the source segment\n@@ -917,1 +917,1 @@\n-     * @param other the segment to be tested for a mismatch with this segment.\n+     * @param other the segment to be tested for a mismatch with this segment\n@@ -919,1 +919,1 @@\n-     * and the given other segment, otherwise -1 if no mismatch.\n+     * and the given other segment, otherwise -1 if no mismatch\n@@ -1054,1 +1054,1 @@\n-     * @return a {@link ByteBuffer} view of this memory segment.\n+     * @return a {@link ByteBuffer} view of this memory segment\n@@ -1068,2 +1068,2 @@\n-     *                      operation will be performed on each array element.\n-     * @return a new byte array whose contents are copied from this memory segment.\n+     *                      operation will be performed on each array element\n+     * @return a new byte array whose contents are copied from this memory segment\n@@ -1085,2 +1085,2 @@\n-     *                      operation will be performed on each array element.\n-     * @return a new short array whose contents are copied from this memory segment.\n+     *                      operation will be performed on each array element\n+     * @return a new short array whose contents are copied from this memory segment\n@@ -1103,2 +1103,2 @@\n-     *                      operation will be performed on each array element.\n-     * @return a new char array whose contents are copied from this memory segment.\n+     *                      operation will be performed on each array element\n+     * @return a new char array whose contents are copied from this memory segment\n@@ -1139,2 +1139,2 @@\n-     *                      operation will be performed on each array element.\n-     * @return a new float array whose contents are copied from this memory segment.\n+     *                      operation will be performed on each array element\n+     * @return a new float array whose contents are copied from this memory segment\n@@ -1157,2 +1157,2 @@\n-     *                     operation will be performed on each array element.\n-     * @return a new long array whose contents are copied from this memory segment.\n+     *                     operation will be performed on each array element\n+     * @return a new long array whose contents are copied from this memory segment\n@@ -1175,2 +1175,2 @@\n-     *                      operation will be performed on each array element.\n-     * @return a new double array whose contents are copied from this memory segment.\n+     *                      operation will be performed on each array element\n+     * @return a new double array whose contents are copied from this memory segment\n@@ -1197,1 +1197,1 @@\n-     *               access operation will occur.\n+     *               access operation will occur\n@@ -1200,1 +1200,1 @@\n-     *         character (assuming one is found).\n+     *         character (assuming one is found)\n@@ -1224,1 +1224,1 @@\n-     *                access operation will occur.\n+     *                access operation will occur\n@@ -1226,1 +1226,1 @@\n-     *                string bytes.\n+     *                string bytes\n@@ -1229,1 +1229,1 @@\n-     *         character (assuming one is found).\n+     *         character (assuming one is found)\n@@ -1260,3 +1260,3 @@\n-     *               access operation will occur. The final address of this write\n-     *               operation can be expressed as {@code address() + offset}.\n-     * @param str the Java string to be written into this segment.\n+     *               access operation will occur, the final address of this write\n+     *               operation can be expressed as {@code address() + offset}\n+     * @param str the Java string to be written into this segment\n@@ -1289,4 +1289,4 @@\n-     *                access operation will occur. The final address of this write\n-     *                operation can be expressed as {@code address() + offset}.\n-     * @param str     the Java string to be written into this segment.\n-     * @param charset the charset used to {@linkplain Charset#newEncoder() encode} the string bytes.\n+     *                access operation will occur, the final address of this write\n+     *                operation can be expressed as {@code address() + offset}\n+     * @param str     the Java string to be written into this segment\n+     * @param charset the charset used to {@linkplain Charset#newEncoder() encode} the string bytes\n@@ -1329,2 +1329,2 @@\n-     * @param buffer the buffer instance to be turned into a new memory segment.\n-     * @return a memory segment, derived from the given buffer instance.\n+     * @param buffer the buffer instance to be turned into a new memory segment\n+     * @return a memory segment, derived from the given buffer instance\n@@ -1346,2 +1346,2 @@\n-     * @param byteArray the primitive array backing the heap memory segment.\n-     * @return a heap memory segment backed by a byte array.\n+     * @param byteArray the primitive array backing the heap memory segment\n+     * @return a heap memory segment backed by a byte array\n@@ -1359,2 +1359,2 @@\n-     * @param charArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by a char array.\n+     * @param charArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by a char array\n@@ -1372,2 +1372,2 @@\n-     * @param shortArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by a short array.\n+     * @param shortArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by a short array\n@@ -1385,2 +1385,2 @@\n-     * @param intArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by an int array.\n+     * @param intArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by an int array\n@@ -1398,2 +1398,2 @@\n-     * @param floatArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by a float array.\n+     * @param floatArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by a float array\n@@ -1411,2 +1411,2 @@\n-     * @param longArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by a long array.\n+     * @param longArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by a long array\n@@ -1424,2 +1424,2 @@\n-     * @param doubleArray the primitive array backing the heap segment.\n-     * @return a heap memory segment backed by a double array.\n+     * @param doubleArray the primitive array backing the heap segment\n+     * @return a heap memory segment backed by a double array\n@@ -1448,2 +1448,2 @@\n-     * @param address the address of the returned native segment.\n-     * @return a zero-length native segment with the given address.\n+     * @param address the address of the returned native segment\n+     * @return a zero-length native segment with the given address\n@@ -1478,5 +1478,5 @@\n-     * @param srcSegment the source segment.\n-     * @param srcOffset the starting offset, in bytes, of the source segment.\n-     * @param dstSegment the destination segment.\n-     * @param dstOffset the starting offset, in bytes, of the destination segment.\n-     * @param bytes the number of bytes to be copied.\n+     * @param srcSegment the source segment\n+     * @param srcOffset the starting offset, in bytes, of the source segment\n+     * @param dstSegment the destination segment\n+     * @param dstOffset the starting offset, in bytes, of the destination segment\n+     * @param bytes the number of bytes to be copied\n@@ -1531,7 +1531,7 @@\n-     * @param srcSegment the source segment.\n-     * @param srcElementLayout the element layout associated with the source segment.\n-     * @param srcOffset the starting offset, in bytes, of the source segment.\n-     * @param dstSegment the destination segment.\n-     * @param dstElementLayout the element layout associated with the destination segment.\n-     * @param dstOffset the starting offset, in bytes, of the destination segment.\n-     * @param elementCount the number of elements to be copied.\n+     * @param srcSegment the source segment\n+     * @param srcElementLayout the element layout associated with the source segment\n+     * @param srcOffset the starting offset, in bytes, of the source segment\n+     * @param dstSegment the destination segment\n+     * @param dstElementLayout the element layout associated with the destination segment\n+     * @param dstOffset the starting offset, in bytes, of the destination segment\n+     * @param elementCount the number of elements to be copied\n@@ -1573,1 +1573,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1575,2 +1575,2 @@\n-     *               access operation will occur.\n-     * @return a byte value read from this segment.\n+     *               access operation will occur\n+     * @return a byte value read from this segment\n@@ -1591,1 +1591,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1593,1 +1593,1 @@\n-     *               access operation will occur.\n+     *               access operation will occur\n@@ -1611,1 +1611,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1613,2 +1613,2 @@\n-     *               access operation will occur.\n-     * @return a boolean value read from this segment.\n+     *               access operation will occur\n+     * @return a boolean value read from this segment\n@@ -1629,1 +1629,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1631,2 +1631,2 @@\n-     *               access operation will occur.\n-     * @param value the boolean value to be written.\n+     *               access operation will occur\n+     * @param value the boolean value to be written\n@@ -1649,1 +1649,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1651,2 +1651,2 @@\n-     *               access operation will occur.\n-     * @return a char value read from this segment.\n+     *               access operation will occur\n+     * @return a char value read from this segment\n@@ -1667,1 +1667,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1669,2 +1669,2 @@\n-     *               access operation will occur.\n-     * @param value the char value to be written.\n+     *               access operation will occur\n+     * @param value the char value to be written\n@@ -1687,1 +1687,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1689,2 +1689,2 @@\n-     *               access operation will occur.\n-     * @return a short value read from this segment.\n+     *               access operation will occur\n+     * @return a short value read from this segment\n@@ -1705,1 +1705,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1707,2 +1707,2 @@\n-     *               access operation will occur.\n-     * @param value the short value to be written.\n+     *               access operation will occur\n+     * @param value the short value to be written\n@@ -1725,1 +1725,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1727,2 +1727,2 @@\n-     *               access operation will occur.\n-     * @return an int value read from this segment.\n+     *               access operation will occur\n+     * @return an int value read from this segment\n@@ -1743,1 +1743,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1745,2 +1745,2 @@\n-     *               access operation will occur.\n-     * @param value the int value to be written.\n+     *               access operation will occur\n+     * @param value the int value to be written\n@@ -1763,1 +1763,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1765,2 +1765,2 @@\n-     *               access operation will occur.\n-     * @return a float value read from this segment.\n+     *               access operation will occur\n+     * @return a float value read from this segment\n@@ -1768,1 +1768,1 @@\n-     *         this segment is not {@linkplain Scope#isAlive() alive}.\n+     *         this segment is not {@linkplain Scope#isAlive() alive}\n@@ -1770,1 +1770,1 @@\n-     *         such that {@code isAccessibleBy(T) == false}.\n+     *         such that {@code isAccessibleBy(T) == false}\n@@ -1781,1 +1781,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1783,2 +1783,2 @@\n-     *               access operation will occur.\n-     * @param value the float value to be written.\n+     *               access operation will occur\n+     * @param value the float value to be written\n@@ -1801,1 +1801,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1803,2 +1803,2 @@\n-     *               access operation will occur.\n-     * @return a long value read from this segment.\n+     *               access operation will occur\n+     * @return a long value read from this segment\n@@ -1806,1 +1806,1 @@\n-     *         this segment is not {@linkplain Scope#isAlive() alive}.\n+     *         this segment is not {@linkplain Scope#isAlive() alive}\n@@ -1808,1 +1808,1 @@\n-     *         such that {@code isAccessibleBy(T) == false}.\n+     *         such that {@code isAccessibleBy(T) == false}\n@@ -1819,1 +1819,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1821,2 +1821,2 @@\n-     *               access operation will occur.\n-     * @param value the long value to be written.\n+     *               access operation will occur\n+     * @param value the long value to be written\n@@ -1839,1 +1839,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1841,2 +1841,2 @@\n-     *               access operation will occur.\n-     * @return a double value read from this segment.\n+     *               access operation will occur\n+     * @return a double value read from this segment\n@@ -1844,1 +1844,1 @@\n-     *         this segment is not {@linkplain Scope#isAlive() alive}.\n+     *         this segment is not {@linkplain Scope#isAlive() alive}\n@@ -1846,1 +1846,1 @@\n-     *         such that {@code isAccessibleBy(T) == false}.\n+     *         such that {@code isAccessibleBy(T) == false}\n@@ -1857,1 +1857,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1859,2 +1859,2 @@\n-     *               access operation will occur.\n-     * @param value the double value to be written.\n+     *               access operation will occur\n+     * @param value the double value to be written\n@@ -1882,1 +1882,1 @@\n-     * @param layout the layout of the region of memory to be read.\n+     * @param layout the layout of the region of memory to be read\n@@ -1884,2 +1884,2 @@\n-     *               access operation will occur.\n-     * @return a native segment wrapping an address read from this segment.\n+     *               access operation will occur\n+     * @return a native segment wrapping an address read from this segment\n@@ -1905,1 +1905,1 @@\n-     * @param layout the layout of the region of memory to be written.\n+     * @param layout the layout of the region of memory to be written\n@@ -1907,2 +1907,2 @@\n-     *               access operation will occur.\n-     * @param value the byte value to be written.\n+     *               access operation will occur\n+     * @param value the byte value to be written\n@@ -1928,2 +1928,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -1931,1 +1931,1 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n+     *              expressed as {@code (index * layout.byteSize())}\n@@ -1950,2 +1950,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -1953,2 +1953,2 @@\n-     *             expressed as {@code (index * layout.byteSize())}.\n-     * @return a boolean value read from this segment.\n+     *             expressed as {@code (index * layout.byteSize())}\n+     * @return a boolean value read from this segment\n@@ -1972,2 +1972,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -1976,1 +1976,1 @@\n-     * @return a char value read from this segment.\n+     * @return a char value read from this segment\n@@ -1994,2 +1994,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -1997,2 +1997,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the char value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the char value to be written\n@@ -2017,2 +2017,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2020,2 +2020,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @return a short value read from this segment.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return a short value read from this segment\n@@ -2038,2 +2038,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2041,2 +2041,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the short value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the short value to be written\n@@ -2061,2 +2061,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2064,2 +2064,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the short value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the short value to be written\n@@ -2084,2 +2084,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2087,2 +2087,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the short value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the short value to be written\n@@ -2108,1 +2108,1 @@\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2110,2 +2110,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @return an int value read from this segment.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return an int value read from this segment\n@@ -2129,2 +2129,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2132,2 +2132,2 @@\n-     *              will occur can be expressed as {@code (index * layout.byteSize())}.\n-     * @param value the int value to be written.\n+     *              will occur can be expressed as {@code (index * layout.byteSize())}\n+     * @param value the int value to be written\n@@ -2152,2 +2152,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2155,2 +2155,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @return a float value read from this segment.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return a float value read from this segment\n@@ -2174,2 +2174,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2177,2 +2177,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the float value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the float value to be written\n@@ -2197,2 +2197,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2200,2 +2200,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @return a long value read from this segment.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return a long value read from this segment\n@@ -2219,2 +2219,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2222,2 +2222,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the long value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the long value to be written\n@@ -2242,2 +2242,2 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2245,2 +2245,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @return a double value read from this segment.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return a double value read from this segment\n@@ -2264,2 +2264,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2267,2 +2267,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the double value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the double value to be written\n@@ -2291,4 +2291,5 @@\n-     * @param layout the layout of the region of memory to be read.\n-     * @param index a logical index. The offset in bytes (relative to this segment address) at which the access operation\n-     *              will occur can be expressed as {@code (index * layout.byteSize())}.\n-     * @return a native segment wrapping an address read from this segment.\n+     * @param layout the layout of the region of memory to be read\n+     * @param index a logical index, the offset in bytes (relative to this\n+     *              segment address) at which the access operation will occur can be\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @return a native segment wrapping an address read from this segment\n@@ -2317,2 +2318,2 @@\n-     * @param layout the layout of the region of memory to be written.\n-     * @param index a logical index. The offset in bytes (relative to this\n+     * @param layout the layout of the region of memory to be written\n+     * @param index a logical index, the offset in bytes (relative to this\n@@ -2320,2 +2321,2 @@\n-     *              expressed as {@code (index * layout.byteSize())}.\n-     * @param value the address value to be written.\n+     *              expressed as {@code (index * layout.byteSize())}\n+     * @param value the address value to be written\n@@ -2361,2 +2362,2 @@\n-     * @param that the object to be compared for equality with this memory segment.\n-     * @return {@code true} if the specified object is equal to this memory segment.\n+     * @param that the object to be compared for equality with this memory segment\n+     * @return {@code true} if the specified object is equal to this memory segment\n@@ -2386,1 +2387,1 @@\n-     * @param srcSegment the source segment.\n+     * @param srcSegment the source segment\n@@ -2390,5 +2391,5 @@\n-     *                  operation will be performed on each array element.\n-     * @param srcOffset the starting offset, in bytes, of the source segment.\n-     * @param dstArray the destination array.\n-     * @param dstIndex the starting index of the destination array.\n-     * @param elementCount the number of array elements to be copied.\n+     *                  operation will be performed on each array element\n+     * @param srcOffset the starting offset, in bytes, of the source segment\n+     * @param dstArray the destination array\n+     * @param dstIndex the starting index of the destination array\n+     * @param elementCount the number of array elements to be copied\n@@ -2436,3 +2437,3 @@\n-     * @param srcArray the source array.\n-     * @param srcIndex the starting index of the source array.\n-     * @param dstSegment the destination segment.\n+     * @param srcArray the source array\n+     * @param srcIndex the starting index of the source array\n+     * @param dstSegment the destination segment\n@@ -2443,2 +2444,2 @@\n-     * @param dstOffset the starting offset, in bytes, of the destination segment.\n-     * @param elementCount the number of array elements to be copied.\n+     * @param dstOffset the starting offset, in bytes, of the destination segment\n+     * @param elementCount the number of array elements to be copied\n@@ -2493,1 +2494,1 @@\n-     *                      source segment to be tested.\n+     *                      source segment to be tested\n@@ -2495,2 +2496,2 @@\n-     *                    source segment to be tested.\n-     * @param dstSegment the destination segment.\n+     *                    source segment to be tested\n+     * @param dstSegment the destination segment\n@@ -2498,1 +2499,1 @@\n-     *                      destination segment to be tested.\n+     *                      destination segment to be tested\n@@ -2500,1 +2501,1 @@\n-     *                    destination segment to be tested.\n+     *                    destination segment to be tested\n@@ -2502,1 +2503,1 @@\n-     *         source and destination segments, otherwise -1 if no mismatch.\n+     *         source and destination segments, otherwise -1 if no mismatch\n@@ -2586,1 +2587,1 @@\n-         * @param that the object to be tested.\n+         * @param that the object to be tested\n@@ -2597,1 +2598,1 @@\n-         * @return the hash code of this scope object.\n+         * @return the hash code of this scope object\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":238,"deletions":237,"binary":false,"changes":475,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-     * @param str the Java string to be converted into a C string.\n-     * @return a new native segment containing the converted C string.\n+     * @param str the Java string to be converted into a C string\n+     * @return a new native segment containing the converted C string\n@@ -116,1 +116,1 @@\n-     * @param str     the Java string to be converted into a C string.\n+     * @param str     the Java string to be converted into a C string\n@@ -118,2 +118,2 @@\n-     *                string bytes.\n-     * @return a new native segment containing the converted C string.\n+     *                string bytes\n+     * @return a new native segment containing the converted C string\n@@ -171,2 +171,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -196,2 +196,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -221,2 +221,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -246,2 +246,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -271,2 +271,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -296,2 +296,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -321,2 +321,2 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n@@ -351,3 +351,4 @@\n-     * @param layout the layout of the block of memory to be allocated.\n-     * @param value  the value to be set in the newly allocated memory segment.\n-     * @throws UnsupportedOperationException if {@code value} is not a {@linkplain MemorySegment#isNative() native} segment\n+     * @param layout the layout of the block of memory to be allocated\n+     * @param value  the value to be set in the newly allocated memory segment\n+     * @throws UnsupportedOperationException if {@code value} is not\n+     *         a {@linkplain MemorySegment#isNative() native} segment\n@@ -377,5 +378,5 @@\n-     * @param elementLayout the element layout of the allocated array.\n-     * @param source the source segment.\n-     * @param sourceElementLayout the element layout of the source segment.\n-     * @param sourceOffset the starting offset, in bytes, of the source segment.\n-     * @param elementCount the number of elements in the source segment to be copied.\n+     * @param elementLayout the element layout of the allocated array\n+     * @param source the source segment\n+     * @param sourceElementLayout the element layout of the source segment\n+     * @param sourceOffset the starting offset, in bytes, of the source segment\n+     * @param elementCount the number of elements in the source segment to be copied\n@@ -422,1 +423,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -424,1 +425,1 @@\n-     *                      memory block.\n+     *                      memory block\n@@ -449,1 +450,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -451,1 +452,1 @@\n-     *                      memory block.\n+     *                      memory block\n@@ -476,1 +477,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -478,1 +479,1 @@\n-     *                      memory block.\n+     *                      memory block\n@@ -503,1 +504,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -505,1 +506,1 @@\n-     *                      memory block.\n+     *                      memory block\n@@ -530,1 +531,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -532,1 +533,1 @@\n-     *                 memory block.\n+     *                 memory block\n@@ -557,1 +558,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -559,1 +560,1 @@\n-     *                 memory block.\n+     *                 memory block\n@@ -584,1 +585,1 @@\n-     * @param elementLayout the element layout of the array to be allocated.\n+     * @param elementLayout the element layout of the array to be allocated\n@@ -586,1 +587,1 @@\n-     *                      memory block.\n+     *                      memory block\n@@ -602,1 +603,1 @@\n-     * @param layout the layout of the block of memory to be allocated.\n+     * @param layout the layout of the block of memory to be allocated\n@@ -615,2 +616,2 @@\n-     * @param elementLayout the array element layout.\n-     * @param count the array element count.\n+     * @param elementLayout the array element layout\n+     * @param count the array element count\n@@ -635,1 +636,1 @@\n-     * @param byteSize the size (in bytes) of the block of memory to be allocated.\n+     * @param byteSize the size (in bytes) of the block of memory to be allocated\n@@ -647,1 +648,1 @@\n-     *                 to be allocated.\n+     *                 to be allocated\n@@ -649,1 +650,1 @@\n-     *                      to be allocated.\n+     *                      to be allocated\n@@ -667,1 +668,1 @@\n-     * @param segment the segment which the returned allocator should slice from.\n+     * @param segment the segment which the returned allocator should slice from\n@@ -696,1 +697,1 @@\n-     * @param segment the memory segment to be recycled by the returned allocator.\n+     * @param segment the memory segment to be recycled by the returned allocator\n@@ -698,1 +699,1 @@\n-     *         request.\n+     *         request\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":51,"deletions":50,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-     * @param elementCount the new element count.\n+     * @param elementCount the new element count\n@@ -80,1 +80,1 @@\n-     * Rearranges the elements in this sequence layout into a multi-dimensional sequence\n+     * Rearranges the elements in this sequence layout into a multidimensional sequence\n@@ -106,1 +106,1 @@\n-     * @param elementCounts an array of element counts, of which at most one can be {@code -1}.\n+     * @param elementCounts an array of element counts, of which at most one can be {@code -1}\n@@ -145,1 +145,1 @@\n-     *         element layout is not a sequence layout.\n+     *         element layout is not a sequence layout\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -142,1 +142,2 @@\n-     * @param name the symbol name.\n+     *\n+     * @param name the symbol name\n@@ -167,1 +168,1 @@\n-     *              in this lookup.\n+     *              in this lookup\n@@ -201,1 +202,1 @@\n-     *         the caller's class loader.\n+     *         the caller's class loader\n@@ -245,2 +246,2 @@\n-     * @param name the name of the library in which symbols should be looked up.\n-     * @param arena the arena associated with symbols obtained from the returned lookup.\n+     * @param name the name of the library in which symbols should be looked up\n+     * @param arena the arena associated with symbols obtained from the returned lookup\n@@ -248,1 +249,1 @@\n-     *         given name.\n+     *         given name\n@@ -276,2 +277,3 @@\n-     * @param path the path of the library in which symbols should be looked up.\n-     * @param arena the arena associated with symbols obtained from the returned lookup.\n+     *\n+     * @param path the path of the library in which symbols should be looked up\n+     * @param arena the arena associated with symbols obtained from the returned lookup\n@@ -279,1 +281,1 @@\n-     *         path.\n+     *         path\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-     * @param order the desired byte order.\n+     * @param order the desired byte order\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}