{"files":[{"patch":"@@ -135,2 +135,2 @@\n- * Resources allocated by the {@code HttpClient} may be reclaimed early\n- * by {@linkplain #close() closing} the client.\n+ * <p id=\"closing\"> Resources allocated by the {@code HttpClient} may be\n+ * reclaimed early by {@linkplain #close() closing} the client.\n@@ -143,0 +143,4 @@\n+ * The JDK built-in implementation of the {@code HttpClient} overrides\n+ * {@link #close()}, {@link #shutdown()}, {@link #shutdownNow()},\n+ * {@link #awaitTermination(Duration)}, and {@link #isTerminated()} to\n+ * provide a best effort implementation.\n@@ -757,0 +761,1 @@\n+     * See the API Note on {@linkplain ##closing closing}.\n@@ -770,0 +775,1 @@\n+     * See the API Note on {@linkplain ##closing closing}.\n@@ -791,0 +797,1 @@\n+     * See the API Note on {@linkplain ##closing closing}.\n@@ -801,1 +808,2 @@\n-     * This method is called if the thread waiting on {@link #close()} is\n+     * This method attempts to initiate an immediate shutdown.\n+     * It is called if the thread waiting on {@link #close()} is\n@@ -812,1 +820,1 @@\n-     * behavior.\n+     * behavior. See the API Note on {@linkplain ##closing closing}.\n@@ -834,1 +842,2 @@\n-     * to complete execution with {@code awaitTermination}.\n+     * to complete execution with {@code awaitTermination}. See the API Note on\n+     * {@linkplain ##closing closing}.\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-            if (t instanceof  IOException io && hasExpectedMessage(io)) {\n+            if (t instanceof IOException io && hasExpectedMessage(io)) {\n","filename":"test\/jdk\/java\/net\/httpclient\/AsyncShutdownNow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-            if (t instanceof  IOException io && hasExpectedMessage(io)) {\n+            if (t instanceof IOException io && hasExpectedMessage(io)) {\n@@ -451,1 +451,1 @@\n-                    long sincePrevious =  Duration.ofNanos(now - previous).toMillis();\n+                    long sincePrevious = Duration.ofNanos(now - previous).toMillis();\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientShutdown.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-            if (t instanceof  IOException io && hasExpectedMessage(io)) {\n+            if (t instanceof IOException io && hasExpectedMessage(io)) {\n","filename":"test\/jdk\/java\/net\/httpclient\/ShutdownNow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}