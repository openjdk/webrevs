{"files":[{"patch":"@@ -47,0 +47,1 @@\n+import jdk.jfr.SettingControl;\n@@ -62,1 +63,0 @@\n-    private Constructor<EventConfiguration> cachedEventConfigurationConstructor;\n@@ -106,1 +106,1 @@\n-                eventTypes.add(ec.getEventType());\n+                eventTypes.add(ec.eventType());\n@@ -120,1 +120,1 @@\n-            return ec.getEventType();\n+            return ec.eventType();\n@@ -128,1 +128,1 @@\n-            configuration.getPlatformEventType().setRegistered(false);\n+            configuration.platformEventType().setRegistered(false);\n@@ -150,2 +150,2 @@\n-        configuration.getPlatformEventType().setRegistered(true);\n-        TypeLibrary.addType(configuration.getPlatformEventType());\n+        configuration.platformEventType().setRegistered(true);\n+        TypeLibrary.addType(configuration.platformEventType());\n@@ -153,1 +153,1 @@\n-            settingsManager.setEventControl(configuration.getEventControl(), true, JVM.counterTime());\n+            settingsManager.setEventControl(configuration.eventControl(), true, JVM.counterTime());\n@@ -157,1 +157,1 @@\n-       return configuration.getEventType();\n+       return configuration.eventType();\n@@ -182,14 +182,0 @@\n-    private EventConfiguration newEventConfiguration(EventType eventType, EventControl ec) {\n-        try {\n-            if (cachedEventConfigurationConstructor == null) {\n-                var argClasses = new Class<?>[] { EventType.class, EventControl.class};\n-                Constructor<EventConfiguration> c = EventConfiguration.class.getDeclaredConstructor(argClasses);\n-                c.setAccessible(true);\n-                cachedEventConfigurationConstructor = c;\n-            }\n-            return cachedEventConfigurationConstructor.newInstance(eventType, ec);\n-        } catch (NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n-            throw new InternalError(e);\n-        }\n-    }\n-\n@@ -229,3 +215,3 @@\n-        EventConfiguration configuration = newEventConfiguration(eventType, ec);\n-        PlatformEventType pe = configuration.getPlatformEventType();\n-        pe.setRegistered(true);\n+        SettingControl[] settings = ec.getSettingControls().toArray(new SettingControl[0]);\n+        EventConfiguration configuration = new EventConfiguration(pEventType, eventType, ec, settings, eventType.getId());\n+        pEventType.setRegistered(true);\n@@ -233,2 +219,2 @@\n-        if (JVM.isInstrumented(eventClass) || !JVMSupport.shouldInstrument(pe.isJDK(), pe.getName())) {\n-            pe.setInstrumented();\n+        if (JVM.isInstrumented(eventClass) || !JVMSupport.shouldInstrument(pEventType.isJDK(), pEventType.getName())) {\n+            pEventType.setInstrumented();\n@@ -257,1 +243,1 @@\n-                controls.add(eh.getEventControl());\n+                controls.add(eh.eventControl());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":14,"deletions":28,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,1 @@\n-                PlatformEventType eventType = ec.getPlatformEventType();\n+                PlatformEventType eventType = ec.platformEventType();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.jfr.SettingControl;\n@@ -32,2 +33,0 @@\n-import jdk.jfr.internal.PrivateAccess;\n-import jdk.jfr.SettingControl;\n@@ -35,26 +34,6 @@\n-\/\/ Users should not be able to subclass or instantiate for security reasons.\n-public final class EventConfiguration {\n-    private final PlatformEventType platformEventType;\n-    private final EventType eventType;\n-    private final EventControl eventControl;\n-    private final SettingControl[] settings;\n-\n-    \/\/ Private constructor so user code can't instantiate\n-    private EventConfiguration(EventType eventType, EventControl eventControl) {\n-        this.eventType = eventType;\n-        this.platformEventType = PrivateAccess.getInstance().getPlatformEventType(eventType);\n-        this.eventControl = eventControl;\n-        this.settings = eventControl.getSettingControls().toArray(new SettingControl[0]);\n-    }\n-\n-    \/\/ Class jdk.jfr.internal.PlatformEventType is not\n-    \/\/ accessible from event class by design\n-    public PlatformEventType getPlatformEventType() {\n-        return platformEventType;\n-    }\n-\n-    \/\/ Class jdk.jfr.internal.EventControl is not\n-    \/\/ accessible from event class by design\n-    public EventControl getEventControl() {\n-        return eventControl;\n-    }\n+public record EventConfiguration(\n+    PlatformEventType platformEventType,\n+    EventType eventType,\n+    EventControl eventControl,\n+    SettingControl[] settings,\n+    long id) {\n@@ -77,5 +56,0 @@\n-    \/\/ Accessed by generated code in event class\n-    public EventType getEventType() {\n-        return eventType;\n-    }\n-\n@@ -103,4 +77,0 @@\n-\n-    public long getId() {\n-        return eventType.getId();\n-    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/event\/EventConfiguration.java","additions":8,"deletions":38,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-        if (configuration.getId() != typeId) {\n+        if (configuration.id() != typeId) {\n@@ -244,1 +244,1 @@\n-        this.eventType = configuration.getPlatformEventType();\n+        this.eventType = configuration.platformEventType();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/event\/EventWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}