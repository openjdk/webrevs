{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,10 +100,0 @@\n-    jvmtiPhase phase;\n-\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetPhase(&phase))) {\n-        nsk_jvmti_setFailStatus();\n-        return;\n-    }\n-    if (phase == JVMTI_PHASE_DEAD) {\n-      NSK_DISPLAY0(\"CompiledMethodLoad event recieved in dead phase\");\n-      return;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass029\/redefclass029.cpp","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,12 +119,0 @@\n-}\n-\n- void JNICALL\n-cbVMDeath(jvmtiEnv* jvmti, JNIEnv* jni_env) {\n-    if (!NSK_VERIFY(nsk_list_destroy(plist))) {\n-        nsk_jvmti_setFailStatus();\n-    }\n-\n-    if (!NSK_JVMTI_VERIFY(jvmti->DestroyRawMonitor(syncLock))) {\n-        nsk_jvmti_setFailStatus();\n-    }\n-\n@@ -150,1 +138,0 @@\n-    eventCallbacks.VMDeath = cbVMDeath;\n@@ -258,0 +245,19 @@\n+\/* ============================================================================= *\/\n+\n+JNIEXPORT void JNICALL\n+#ifdef STATIC_BUILD\n+Agent_OnUnload_em04t001(JavaVM *jvm)\n+#else\n+Agent_OnUnload(JavaVM *jvm)\n+#endif\n+{\n+\n+    if (!NSK_VERIFY(nsk_list_destroy(plist))) {\n+        nsk_jvmti_setFailStatus();\n+    }\n+\n+    if (!NSK_JVMTI_VERIFY(jvmti->DestroyRawMonitor(syncLock))) {\n+        nsk_jvmti_setFailStatus();\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM04\/em04t001\/em04t001.cpp","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,0 @@\n-    jvmtiPhase phase;\n@@ -58,8 +57,0 @@\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetPhase(&phase))) {\n-        nsk_jvmti_setFailStatus();\n-        return;\n-    }\n-    if (phase == JVMTI_PHASE_DEAD) {\n-      NSK_DISPLAY0(\"CompiledMethodLoad event recieved in dead phase\");\n-      return;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/multienv\/MA10\/ma10t006\/ma10t006.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include <stdio.h>\n@@ -66,3 +65,0 @@\n-    printf(\"Test failed by setFailStatus(). See log.\");\n-    fflush(stdout);\n-    exit(97);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/agent_tools.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,0 @@\n-    jvmtiPhase phase;\n@@ -148,9 +147,0 @@\n-    \/\/ GetMethodName works in live phase only so just exit if the event is generated too late\n-    if (!NSK_JVMTI_VERIFY(jvmti_env->GetPhase(&phase))) {\n-        nsk_jvmti_setFailStatus();\n-        return;\n-    }\n-    if (phase == JVMTI_PHASE_DEAD) {\n-      NSK_DISPLAY0(\"CompiledMethodLoad event recieved in dead phase\");\n-      return;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/hotswap\/HotSwap.cpp","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"}]}