{"files":[{"patch":"@@ -1004,0 +1004,5 @@\n+    @Override\n+    public String readUserLine() throws IOException {\n+        return readUserLine(\"\");\n+    }\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -67,0 +67,2 @@\n+        userOutput().write(prompt);\n+        userOutput().flush();\n@@ -79,0 +81,2 @@\n+        userOutput().write(prompt);\n+        userOutput().flush();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/IOContext.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.io.OutputStreamWriter;\n@@ -1195,1 +1196,1 @@\n-        try (IOContext suin = new ScannerIOContext(new StringReader(start))) {\n+        try (IOContext suin = new ScannerIOContext(new StringReader(start), userout)) {\n@@ -3128,1 +3129,1 @@\n-                try (var scannerIOContext = new ScannerIOContext(scanner)) {\n+                try (var scannerIOContext = new ScannerIOContext(scanner, userout)) {\n@@ -3291,2 +3292,4 @@\n-            run(new ReloadIOContext(history.iterable(),\n-                    echo ? cmdout : null));\n+            try (ReloadIOContext ctx = new ReloadIOContext(history.iterable(),\n+                    echo ? cmdout : null, userout)) {\n+                run(ctx);\n+            }\n@@ -4110,0 +4113,2 @@\n+            } catch (UserInterruptException ex) {\n+                return null;\n@@ -4128,0 +4133,2 @@\n+            } catch (UserInterruptException ex) {\n+                return null;\n@@ -4147,0 +4154,6 @@\n+    private final Writer userOutput;\n+\n+    public NonInteractiveIOContext(PrintStream userOutput) {\n+        this.userOutput = new OutputStreamWriter(userOutput);\n+    }\n+\n@@ -4181,0 +4194,15 @@\n+\n+    @Override\n+    public Writer userOutput() {\n+        return userOutput;\n+    }\n+\n+    @Override\n+    public void close() {\n+        try {\n+            userOutput.flush();\n+        } catch (IOException _) {\n+            \/\/ignore\n+        }\n+    }\n+\n@@ -4186,1 +4214,2 @@\n-    ScannerIOContext(Scanner scannerIn) {\n+    ScannerIOContext(Scanner scannerIn, PrintStream userOutput) {\n+        super(userOutput);\n@@ -4190,2 +4219,2 @@\n-    ScannerIOContext(Reader rdr) throws FileNotFoundException {\n-        this(new Scanner(rdr));\n+    ScannerIOContext(Reader rdr, PrintStream userOutput) throws FileNotFoundException {\n+        this(new Scanner(rdr), userOutput);\n@@ -4205,0 +4234,1 @@\n+        super.close();\n@@ -4218,1 +4248,2 @@\n-    ReloadIOContext(Iterable<String> history, PrintStream echoStream) {\n+    ReloadIOContext(Iterable<String> history, PrintStream echoStream, PrintStream userOutput) {\n+        super(userOutput);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":39,"deletions":8,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -120,0 +120,3 @@\n+            if (actualLen == (-1)) {\n+                return null;\n+            }\n@@ -270,0 +273,3 @@\n+                    if (line == null) {\n+                        return null;\n+                    }\n@@ -420,2 +426,6 @@\n-                        char[] chars = line.toCharArray();\n-                        sendChars(sinkOutput, chars, 0, chars.length);\n+                        if (line == null) {\n+                            sendInt(sinkOutput, -1);\n+                        } else {\n+                            char[] chars = line.toCharArray();\n+                            sendChars(sinkOutput, chars, 0, chars.length);\n+                        }\n@@ -435,1 +445,5 @@\n-                        sendChars(sinkOutput, chars, 0, chars.length);\n+                        if (chars == null) {\n+                            sendInt(sinkOutput, -1);\n+                        } else {\n+                            sendChars(sinkOutput, chars, 0, chars.length);\n+                        }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/impl\/ConsoleImpl.java","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+import static java.io.IO.*;\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/tool\/resources\/PREVIEW_DEFAULT.jsh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8331535\n+ * @bug 8331535 8341631\n@@ -59,0 +59,34 @@\n+    @Test \/\/JDK-8341631\n+    public void testIO() {\n+        test(new String[] {\"--enable-preview\"},\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"java.io.IO.readln(\\\"%%s\\\");\\ninput\", \/\/newline automatically appended\n+                                                      \"$1 ==> \\\"input\\\"\",\n+                                                      \"\"\"\n+                                                      \\u0005java.io.IO.readln(\\\"%%s\\\");\n+                                                      %%sinput\n+                                                      \"\"\");},\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"java.io.IO.readln();\\ninput!\", \/\/newline automatically appended\n+                                                      \"$2 ==> \\\"input!\\\"\",\n+                                                      \"\"\"\n+                                                      \\u0005java.io.IO.readln();\n+                                                      input!\n+                                                      \"\"\");},\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"java.io.IO.println(\\\"Hello, World!\\\");\",\n+                                                      \"\",\n+                                                      \"\"\"\n+                                                      \\u0005java.io.IO.println(\\\"Hello, World!\\\");\n+                                                      Hello, World!\n+                                                      \"\"\");},\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"java.io.IO.println();\",\n+                                                      \"\",\n+                                                      \"\"\"\n+                                                      \\u0005java.io.IO.println();\n+\n+                                                      \"\"\");}\n+            );\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ConsoleToolTest.java","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test 8151754 8080883 8160089 8170162 8166581 8172102 8171343 8178023 8186708 8179856 8185840 8190383\n+ * @test 8151754 8080883 8160089 8170162 8166581 8172102 8171343 8178023 8186708 8179856 8185840 8190383 8341631\n@@ -369,4 +369,7 @@\n-        String fn = writeToFile(\"System.out.println(\\\"prefix\\\");\\n\" +\n-                \"System.out.println(MethodHandle.class.getName());\\n\" +\n-                \"System.out.println(\\\"suffix\\\");\\n\" +\n-                \"\/exit\\n\");\n+        String fn = writeToFile(\n+                \"\"\"\n+                System.out.println(\\\"prefix\\\");\n+                System.out.println(MethodHandle.class.getName());\n+                System.out.println(\\\"suffix\\\");\n+                \/exit\n+                \"\"\");\n@@ -377,0 +380,32 @@\n+        \/\/JDK-8341631:\n+        String fn2 = writeToFile(\n+                \"\"\"\n+                System.out.println(\\\"prefix\\\");\n+                IO.println(\\\"test\\\");\n+                System.out.println(\\\"suffix\\\");\n+                \/exit\n+                \"\"\");\n+        startCheckUserOutput(s -> assertEquals(s, \"prefix\\nsuffix\\n\"),\n+                             fn2);\n+        startCheckUserOutput(s -> assertEquals(s, \"prefix\\ntest\\nsuffix\\n\"),\n+                             \"--enable-preview\", fn2);\n+    }\n+    public void testInput() {\n+        \/\/readLine(String):\n+        String readLinePrompt = writeToFile(\n+                \"\"\"\n+                var v = System.console().readLine(\"prompt: \");\n+                System.out.println(v);\n+                \/exit\n+                \"\"\");\n+        startCheckUserOutput(s -> assertEquals(s, \"prompt: null\\n\"),\n+                             readLinePrompt);\n+        \/\/readPassword(String):\n+        String readPasswordPrompt = writeToFile(\n+                \"\"\"\n+                var v = System.console().readPassword(\"prompt: \");\n+                System.out.println(java.util.Arrays.toString(v));\n+                \/exit\n+                \"\"\");\n+        startCheckUserOutput(s -> assertEquals(s, \"prompt: null\\n\"),\n+                             readPasswordPrompt);\n","filename":"test\/langtools\/jdk\/jshell\/StartOptionTest.java","additions":40,"deletions":5,"binary":false,"changes":45,"status":"modified"}]}