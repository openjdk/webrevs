{"files":[{"patch":"@@ -506,1 +506,1 @@\n-  load_unsigned_short(r2, Address(r1, Method::access_flags_offset()));\n+  ldrh(r2, Address(r1, Method::access_flags_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -763,1 +763,1 @@\n-      __ load_unsigned_short(rscratch1, Address(rmethod, Method::access_flags_offset()));\n+      __ ldrh(rscratch1, Address(rmethod, Method::access_flags_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-    __ load_unsigned_short(r0, access_flags);\n+    __ ldrh(r0, access_flags);\n@@ -823,1 +823,1 @@\n-    __ load_unsigned_short(r0, access_flags);\n+    __ ldrh(r0, access_flags);\n@@ -1228,1 +1228,1 @@\n-  __ load_unsigned_short(r0, access_flags);\n+  __ ldrh(r0, access_flags);\n@@ -1280,1 +1280,1 @@\n-      __ load_unsigned_short(r0, access_flags);\n+      __ ldrh(r0, access_flags);\n@@ -1357,1 +1357,1 @@\n-    __ load_unsigned_short(t, Address(rmethod, Method::access_flags_offset()));\n+    __ ldrh(t, Address(rmethod, Method::access_flags_offset()));\n@@ -1567,1 +1567,1 @@\n-    __ load_unsigned_short(t, Address(rmethod, Method::access_flags_offset()));\n+    __ ldrh(t, Address(rmethod, Method::access_flags_offset()));\n@@ -1698,1 +1698,1 @@\n-  __ load_unsigned_short(r0, access_flags);\n+  __ ldrh(r0, access_flags);\n@@ -1754,1 +1754,1 @@\n-      __ load_unsigned_short(r0, access_flags);\n+      __ ldrh(r0, access_flags);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -690,2 +690,2 @@\n-    \/\/ Skip if we don't have to unlock. (???is this right???)\n-    rldicl_(R0, Raccess_flags, 64-JVM_ACC_SYNCHRONIZED_BIT, 63); \/\/ Extract bit and compare to 0.\n+    \/\/ Skip if we don't have to unlock.\n+    testbitdi(CCR0, R0, Raccess_flags, JVM_ACC_SYNCHRONIZED_BIT);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}