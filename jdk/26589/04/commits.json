[{"commit":{"message":"Add an extra space in one of the comments"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFloat16Replicate.java"}],"sha":"f8dc132bbfd91e02d6a46b7fc7758818ba1b51e8"},{"commit":{"message":"Addressed review comments and modified some comments"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFloat16Replicate.java"}],"sha":"bcecc6e1a4b446177a05340a2677d033d9401410"},{"commit":{"message":"Addressed review comments"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"}],"sha":"a44eccc07e554b9b8bb8c4d766d6fa93e418ed34"},{"commit":{"message":"Merge branch 'master' into JDK-8361582"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"30d82f851e1efcb9b796c94b9cfadd6cc151277f"},{"commit":{"message":"8361582: AArch64: Some ConH values cannot be replicated with SVE\n\nAfter this commit -\nhttps:\/\/github.com\/openjdk\/jdk\/commit\/a49ecb26c5ff2f949851937f3bb036d7946a103e,\nthe JTREG test -\nhotspot\/jtreg\/compiler\/vectorization\/TestFloat16VectorOperations.java\nfails for some of the tests which contain constant values such as -\n\npublic void vectorAddConstInputFloat16() {\n         for (int i = 0; i < LEN; ++i) {\n             output[i] = float16ToRawShortBits(add(shortBitsToFloat16(input1[i]), FP16_CONST));\n         }\n     }\n<The full failure log is present in the JBS ticket, thus not\nreproducing it here>\n\nThe current code in the JDK results in the generation of sve_dup\ninstruction for every 16-bit immediate while the acceptable range is\n[-128, 127] for 8-bit immediates and [-127 << 8, 128 << 8] with a\nmultiple of 256 for 16-bit signed immediates.\n\nThis patch allows the generation of sve_dup instruction for only those\n16-bit values which are within the limits as specified above and for the\nvalues which are out of range, the immediate half float value is loaded\nfrom the constant pool into a register (\"loadConH\" mach node) which is\nthen replicated or broadcasted to an SVE register (\"replicateHF\" mach\nnode)."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFloat16Replicate.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"32e07405086a649ce9580123d675e4cdffb0b241"}]