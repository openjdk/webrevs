{"files":[{"patch":"@@ -136,1 +136,1 @@\n-                                       setupMethod + \" on \" + target + \", \" + e);\n+                                       setupMethod + \" on \" + target, e);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/ArgumentsProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        Object[] arguments = test.getArguments(invocationTarget, invocationCounter);\n+        Object[] arguments = test.getArguments(invocationTarget, invocationCounter++);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/BaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,6 @@\n+        \/\/ Positive tests in TestSetupTestsWithFields class\n+        TestFramework.run(TestSetupTestsWithFields.class);\n+\n+        \/\/ Positive tests in TestSetupTestsSetupInfo class\n+        TestFramework.run(TestSetupTestsSetupInfo.class);\n+\n@@ -166,0 +172,48 @@\n+class TestSetupTestsWithFields {\n+    int iFld1, iFld2, iFld3;\n+\n+    @Setup\n+    Object[] setupTest1(SetupInfo info) {\n+        iFld1 = info.invocationCounter() + 1;\n+        iFld2 = info.invocationCounter() + 2;\n+        iFld3 = info.invocationCounter() + 3;\n+        return new Object[]{info.invocationCounter()}; \/\/ -> argument x in test\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupTest1\")\n+    int test1(int x) {\n+        if (iFld1 != x + 1) { throw new RuntimeException(\"iFld1 wrong value: \" + iFld1 + \" != \" + (x + 1)); }\n+        if (iFld2 != x + 2) { throw new RuntimeException(\"iFld2 wrong value: \" + iFld2 + \" != \" + (x + 2)); }\n+        if (iFld3 != x + 3) { throw new RuntimeException(\"iFld3 wrong value: \" + iFld3 + \" != \" + (x + 3)); }\n+        return x + 5; \/\/ -> argument y in check\n+    }\n+\n+    @Check(test = \"test1\")\n+    void checkTest1(int y) {\n+        if (iFld1 != y - 4) { throw new RuntimeException(\"iFld1 wrong value: \" + iFld1 + \" != \" + (y - 4)); }\n+        if (iFld2 != y - 3) { throw new RuntimeException(\"iFld2 wrong value: \" + iFld2 + \" != \" + (y - 3)); }\n+        if (iFld3 != y - 2) { throw new RuntimeException(\"iFld3 wrong value: \" + iFld3 + \" != \" + (y - 2)); }\n+    }\n+}\n+\n+class TestSetupTestsSetupInfo {\n+    static int lastCnt = -1;\n+\n+    @Setup\n+    Object[] setupTest1(SetupInfo info) {\n+        int cnt = info.invocationCounter();\n+        \/\/ Check that we increment every time\n+        if (cnt - 1 != lastCnt) {\n+            throw new RuntimeException(\"SetupInfo invocationCounter does not increment correctly: \" +\n+                                       cnt + \", vs last: \" + lastCnt);\n+        }\n+        lastCnt = cnt;\n+        return new Object[]{1, 2};\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupTest1\")\n+    void test1(int a, int b) {}\n+}\n+\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestSetupTests.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"modified"}]}