{"files":[{"patch":"@@ -30,3 +30,3 @@\n- * This annotation is used for test methods (see {@link Test}), to specify what values should be passed as arguments.\n- * One can either specify the individual arguments with values (see {@link Argument}). Alternatively, one can specify\n- * a setup method (see {@link Setup}), which can compute arbitrary arguments, and can even be used to set fields.\n+ * This annotation is used for test methods (see {@link Test}) to specify what values should be passed as arguments.\n+ * One can either specify the individual arguments with values (see {@link Argument}), or use\n+ * a setup method (see {@link Setup}) to define more complex arguments and\/or even set fields values.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/Arguments.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n- * method (see {@link Test}), as well as set fields. A test method can use a Setup method, by specifying it in a\n- * {@link Arguments} annotation. A setup method can optionally take a {@link SetupInfo} as an argument. The for the\n- * arguments for the test methods are returned in an Object[].\n+ * method (see {@link Test}), as well as to set field values. A test method can use a setup method, by specifying it in a\n+ * {@link Arguments} annotation. A setup method can optionally take a {@link SetupInfo} as an argument. The\n+ * arguments for the test methods are returned as a new object array.\n@@ -35,0 +35,1 @@\n+ * Examples on how to use test methods can be found in {@link ir_framework.examples.SetupExample} and also as part of the internal testing in the package {@link ir_framework.tests}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/Setup.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-                             \"@Arguments: setup should specify exactly one setup method \" +\n+                             \"@Arguments: \\\"setup\\\" should specify exactly one @Setup method \" +\n@@ -79,1 +79,1 @@\n-                             \"@Arguments: specify only one of setup and values in \" + method);\n+                             \"@Arguments: Can only specify \\\"setup\\\" or \\\"values\" but not both in \" + method);\n@@ -88,2 +88,1 @@\n-                             \"@Arguments: empty annotation not allowed, need to have at least one values \" +\n-                             \"argument, or specify a setup method. In method \" + method);\n+                             \"@Arguments: Empty annotation not allowed. Either specify \\\"values\\\" or \\\"setup\\\" in \" + method);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/ArgumentsProvider.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -508,1 +508,1 @@\n-     *  Collect all @Setup annodated methods and add them to setupMethodMap, for conveninence to reference later from\n+     *  Collect all @Setup annotated methods and add them to setupMethodMap, for convenience to reference later from\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/TestVM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}