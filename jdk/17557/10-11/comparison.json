{"files":[{"patch":"@@ -60,1 +60,0 @@\n-            Asserts.assertTrue(e.getExceptionInfo().contains(\"Test Failures (2)\"));\n@@ -62,0 +61,1 @@\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"IllegalArgumentException: wrong number of arguments: 3 expected: 1\"));\n@@ -63,1 +63,20 @@\n-            Asserts.assertTrue(e.getExceptionInfo().split(\"There was an error while invoking @Test\").length == 3);\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"IllegalArgumentException: wrong number of arguments: 2 expected: 3\"));\n+\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"setupTestBadSetupArgsTooMany\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"wrong number of arguments: 0 expected: 2\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"setupTestBadSetupArgsWrongType\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"argument type mismatch\"));\n+\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"setupReturnIntArray\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"class [I cannot be cast to class [Ljava.lang.Object;\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"setupReturnInt\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"class java.lang.Integer cannot be cast to class [Ljava.lang.Object;\"));\n+\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"testSetupWrongArgumentType\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"argument type mismatch\"));\n+\n+            \/\/ Check number of total failures:\n+            Asserts.assertEQ(e.getExceptionInfo().split(\"argument type mismatch\").length - 1, 2);\n+            Asserts.assertEQ(e.getExceptionInfo().split(\"There was an error while invoking setup\").length - 1, 4);\n+            Asserts.assertEQ(e.getExceptionInfo().split(\"There was an error while invoking @Test\").length - 1, 3);\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"Test Failures (7)\"));\n@@ -66,0 +85,1 @@\n+\/\/ TODO make sure asserts from setup get out properly\n@@ -81,1 +101,1 @@\n-    public void setupTestGood1() {}\n+    public void setupVoid() {}\n@@ -84,2 +104,8 @@\n-    @Arguments(setup = \"setupTestGood1\")\n-    public void testGood1() {}\n+    @Arguments(setup = \"setupVoid\")\n+    public void testSetupVoid() {}\n+\n+    \/\/ TODO\n+    \/\/ - SetupInfo\n+    \/\/ - Object only used once\n+    \/\/ - move the examples here, make examples more \"real examples\"\n+\n@@ -128,0 +154,1 @@\n+    \/\/ ----------------- wrong number of arguments ------------------\n@@ -132,1 +159,1 @@\n-    \n+\n@@ -141,1 +168,1 @@\n-    \n+\n@@ -145,0 +172,49 @@\n+\n+    \/\/ ----------------- wrong arguments for setup ------------------\n+    @Setup\n+    public Object[] setupTestBadSetupArgsTooMany(SetupInfo setupInfo, int bad) {\n+      return new Object[]{1, 2};\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupTestBadSetupArgsTooMany\")\n+    public void testBadSetupArgsTooMany(int a, int b) {}\n+\n+    @Setup\n+    public Object[] setupTestBadSetupArgsWrongType(int bad) {\n+      return new Object[]{1, 2};\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupTestBadSetupArgsWrongType\")\n+    public void testBadSetupArgsWrongType(int a, int b) {}\n+\n+    \/\/ ----------------- setup wrong return type ------------------\n+    @Setup\n+    public int[] setupReturnIntArray() {\n+        return new int[]{1, 2, 3};\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupReturnIntArray\")\n+    public void testSetupReturnIntArray(int a, int b, int c) {}\n+\n+    @Setup\n+    public int setupReturnInt(SetupInfo setupInfo) {\n+        return setupInfo.invocationCounter();\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupReturnInt\")\n+    public void testSetupReturnInt(int a) {}\n+\n+    \/\/ ----------------- setup provides wrong argument types ------\n+    @Setup\n+    public Object[] setupWrongArgumentType(SetupInfo setupInfo) {\n+        return new Object[]{(int)1, (long)2};\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupWrongArgumentType\")\n+    public void testSetupWrongArgumentType(long a, int b) {}\n+\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestSetupTests.java","additions":83,"deletions":7,"binary":false,"changes":90,"status":"modified"}]}