{"files":[{"patch":"@@ -36,1 +36,1 @@\n-### 2.1 Test Method\n+### 2.1 Different Tests\n@@ -39,1 +39,1 @@\n-#### Normal Test Method\n+#### Normal Test\n@@ -42,1 +42,1 @@\n-Arguments can be provided with `@Arguments(values = {...})` by providing well-specified inputs for each individual argument. Alternatively, a setup method can be chosen with `@Arguments(setup = {\"setupMethodName\"})`, which computes arguments and can also set fields.\n+Arguments can be provided with `@Arguments(values = {...})` by providing well-specified inputs for each individual argument. Alternatively, a setup method can be chosen with `@Arguments(setup = \"setupMethodName\")`, which computes arguments and can also set fields.\n@@ -46,8 +46,2 @@\n-#### Custom Run Tests\n-The normal test method is invoked directly by the framework, and hence the user does not have control over the invokation.\n-A custom run test gives full control over the invocation of the `@Test` annotated method to the user. The framework calls a dedicated `@Run` annotated method from which the user can invoke the `@Test` method according to their needs.\n-\n-More information on checked tests with a precise definition can be found in the Javadocs of [Run](.\/Run.java). Concrete examples on how to specify a custom run test can be found in [CustomRunTestsExample](..\/..\/..\/testlibrary_tests\/ir_framework\/examples\/CustomRunTestExample.java).\n-\n-### 2.2 Setup Method\n-A `@Setup` annotated method can provide custom arguments and set fields before a normal test is run. A normal test method can be annotated with `@Arguments(setup = {\"setupMethodName\"})` to specify which setup method is to be used.\n+##### Setup Method\n+A `@Setup` annotated method can provide custom arguments and set fields before a normal test is run. A normal test method can be annotated with `@Arguments(setup = \"setupMethodName\")` to specify which setup method is to be used.\n@@ -57,1 +51,1 @@\n-### 2.3 Check Method\n+##### Check Method\n@@ -62,1 +56,7 @@\n-### 2.4 IR Verification\n+#### Custom Run Tests\n+The normal test method is invoked directly by the framework, and hence the user does not have control over the invokation.\n+A custom run test gives full control over the invocation of the `@Test` annotated method to the user. The framework calls a dedicated `@Run` annotated method from which the user can invoke the `@Test` method according to their needs.\n+\n+More information on checked tests with a precise definition can be found in the Javadocs of [Run](.\/Run.java). Concrete examples on how to specify a custom run test can be found in [CustomRunTestsExample](..\/..\/..\/testlibrary_tests\/ir_framework\/examples\/CustomRunTestExample.java).\n+\n+### 2.2 IR Verification\n@@ -145,1 +145,1 @@\n-### 2.5 Test VM Flags and Scenarios\n+### 2.3 Test VM Flags and Scenarios\n@@ -150,1 +150,1 @@\n-### 2.6 Compiler Controls\n+### 2.4 Compiler Controls\n@@ -159,1 +159,1 @@\n-### 2.7 Framework Debug and Stress Flags\n+### 2.5 Framework Debug and Stress Flags\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-    public Object getValue(int invocationCounter) {\n+    public Object getValue() {\n@@ -321,1 +321,1 @@\n-    public Object getValue(int invocationCounter) {\n+    public Object getValue() {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/ArgumentValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-        return Arrays.stream(argumentValues).map(v -> v.getValue(invocationCounter)).toArray();\n+        return Arrays.stream(argumentValues).map(v -> v.getValue()).toArray();\n@@ -114,1 +114,1 @@\n- * Used for @Arguments(setup = {\"setupMethodName\"}) to specify a setup method to provide arguments\n+ * Used for @Arguments(setup = \"setupMethodName\") to specify a setup method to provide arguments\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/ArgumentsProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -509,1 +509,1 @@\n-     *  tests with @Arguments(setup = {\"setupMethodName\"}).\n+     *  tests with @Arguments(setup = \"setupMethodName\").\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/TestVM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * a test method with @Arguments(setup = {\"setupMethodName\"}).\n+ * a test method with @Arguments(setup = \"setupMethodName\").\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/examples\/SetupExample.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}