{"files":[{"patch":"@@ -2129,1 +2129,1 @@\n-    public static final String VAND_NOTI_VX = PREFIX + \"VAND_NOTI_VX\" + POSTFIX;\n+    public static final String RISCV_VAND_NOTI_VX = PREFIX + \"RISCV_VAND_NOTI_VX\" + POSTFIX;\n@@ -2131,1 +2131,1 @@\n-        machOnlyNameRegex(VAND_NOTI_VX, \"vand_notI_vx\");\n+        machOnlyNameRegex(RISCV_VAND_NOTI_VX, \"vand_notI_vx\");\n@@ -2134,1 +2134,1 @@\n-    public static final String VAND_NOTL_VX = PREFIX + \"VAND_NOTL_VX\" + POSTFIX;\n+    public static final String RISCV_VAND_NOTL_VX = PREFIX + \"RISCV_VAND_NOTL_VX\" + POSTFIX;\n@@ -2136,1 +2136,1 @@\n-        machOnlyNameRegex(VAND_NOTL_VX, \"vand_notL_vx\");\n+        machOnlyNameRegex(RISCV_VAND_NOTL_VX, \"vand_notL_vx\");\n@@ -2139,1 +2139,1 @@\n-    public static final String VAND_NOTI_VX_MASKED = PREFIX + \"VAND_NOTI_VX_MASKED\" + POSTFIX;\n+    public static final String RISCV_VAND_NOTI_VX_MASKED = PREFIX + \"RISCV_VAND_NOTI_VX_MASKED\" + POSTFIX;\n@@ -2141,1 +2141,1 @@\n-        machOnlyNameRegex(VAND_NOTI_VX_MASKED, \"vand_notI_vx_masked\");\n+        machOnlyNameRegex(RISCV_VAND_NOTI_VX_MASKED, \"vand_notI_vx_masked\");\n@@ -2144,1 +2144,1 @@\n-    public static final String VAND_NOTL_VX_MASKED = PREFIX + \"VAND_NOTL_VX_MASKED\" + POSTFIX;\n+    public static final String RISCV_VAND_NOTL_VX_MASKED = PREFIX + \"RISCV_VAND_NOTL_VX_MASKED\" + POSTFIX;\n@@ -2146,1 +2146,1 @@\n-        machOnlyNameRegex(VAND_NOTL_VX_MASKED, \"vand_notL_vx_masked\");\n+        machOnlyNameRegex(RISCV_VAND_NOTL_VX_MASKED, \"vand_notL_vx_masked\");\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-    @IR(counts = { IRNode.VAND_NOTI_VX, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n+    @IR(counts = { IRNode.RISCV_VAND_NOTI_VX, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n@@ -173,1 +173,1 @@\n-    @IR(counts = { IRNode.VAND_NOTL_VX, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n+    @IR(counts = { IRNode.RISCV_VAND_NOTL_VX, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n@@ -187,1 +187,1 @@\n-    @IR(counts = { IRNode.VAND_NOTI_VX_MASKED, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n+    @IR(counts = { IRNode.RISCV_VAND_NOTI_VX_MASKED, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n@@ -204,1 +204,1 @@\n-    @IR(counts = { IRNode.VAND_NOTL_VX_MASKED, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n+    @IR(counts = { IRNode.RISCV_VAND_NOTL_VX_MASKED, \" >= 1\" }, applyIfPlatform = {\"riscv64\", \"true\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/AllBitsSetVectorMatchRuleTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}