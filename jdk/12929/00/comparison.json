{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        vsprintf(buf, msg, argprt);\n+        vsnprintf(buf, sizeof(buf), msg, argprt);\n@@ -156,1 +156,1 @@\n-        vsprintf(buf, msg, argprt);\n+        vsnprintf(buf, sizeof(buf), msg, argprt);\n@@ -184,2 +184,2 @@\n-        sprintf(charmsg, \"%ls\", msg);  \/\/ convert format string to multi-byte\n-        vsprintf(buf, charmsg, argprt);\n+        snprintf(charmsg, sizeof(charmsg), \"%ls\", msg);  \/\/ convert format string to multi-byte\n+        vsnprintf(buf, sizeof(buf), charmsg, argprt);\n@@ -214,2 +214,2 @@\n-        sprintf(charmsg, \"%ls\", msg);  \/\/ convert format string to multi-byte\n-        vsprintf(buf, charmsg, argprt);\n+        snprintf(charmsg, sizeof(charmsg), \"%ls\", msg);  \/\/ convert format string to multi-byte\n+        vsnprintf(buf, sizeof(buf), charmsg, argprt);\n","filename":"src\/jdk.accessibility\/windows\/native\/common\/AccessBridgeDebug.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -612,1 +612,1 @@\n-    sprintf( buffer,\n+    snprintf( buffer, sizeof(buffer),\n@@ -650,1 +650,1 @@\n-    sprintf( buffer,\n+    snprintf( buffer, sizeof(buffer),\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -545,1 +545,1 @@\n-        sprintf( s,\n+        snprintf( s, sizeof(s),\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccesswalker\/jaccesswalker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-    DEBUG_CODE(sprintf(debugBuf, \"\\r\\nCalling firePropertyChange(%p, %p):\\r\\n\", event, source));\n+    DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"\\r\\nCalling firePropertyChange(%p, %p):\\r\\n\", event, source));\n@@ -166,1 +166,1 @@\n-    DEBUG_CODE(sprintf(debugBuf, \"\\r\\nCalling firePropertyChange(%016I64X, %016I64X):\\r\\n\", event, source));\n+    DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"\\r\\nCalling firePropertyChange(%016I64X, %016I64X):\\r\\n\", event, source));\n@@ -197,1 +197,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, fireEventDebugString, #method, event, source, vmID)); \\\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), fireEventDebugString, #method, event, source, vmID)); \\\n@@ -208,1 +208,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"[INFO]: Calling fireJavaShutdown; vmID = %X\\r\\n\", vmID));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"[INFO]: Calling fireJavaShutdown; vmID = %X\\r\\n\", vmID));\n@@ -252,1 +252,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, firePropertyChangeDebugString, #method, event, source)); \\\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), firePropertyChangeDebugString, #method, event, source)); \\\n@@ -281,1 +281,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, fireStringPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), fireStringPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n@@ -310,1 +310,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, fireIntPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), fireIntPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n@@ -339,1 +339,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, fireACPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), fireACPropertyChangeDebugString, #method, event, source, oldValue, newValue)); \\\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeEventHandler.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    sprintf(memoryMappedFileName, \"AccessBridge-%p-%p.mmf\",\n+    snprintf(memoryMappedFileName, sizeof(memoryMappedFileName), \"AccessBridge-%p-%p.mmf\",\n@@ -88,1 +88,1 @@\n-        DEBUG_CODE(sprintf(buffer, \"  unmapping memoryMappedView; view = %p\\r\\n\", memoryMappedView));\n+        DEBUG_CODE(snprintf(buffer, sizeof(buffer), \"  unmapping memoryMappedView; view = %p\\r\\n\", memoryMappedView));\n@@ -95,1 +95,1 @@\n-        DEBUG_CODE(sprintf(buffer, \"  closing memoryMappedFileMapHandle; handle = %p\\r\\n\", memoryMappedFileMapHandle));\n+        DEBUG_CODE(snprintf(buffer, sizeof(buffer), \"  closing memoryMappedFileMapHandle; handle = %p\\r\\n\", memoryMappedFileMapHandle));\n@@ -134,1 +134,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  Failed to CreateFileMapping for %s, error: %X\", memoryMappedFileName, errorCode));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  Failed to CreateFileMapping for %s, error: %X\", memoryMappedFileName, errorCode));\n@@ -138,1 +138,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  CreateFileMapping worked - filename: %s\\r\\n\", memoryMappedFileName));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  CreateFileMapping worked - filename: %s\\r\\n\", memoryMappedFileName));\n@@ -147,1 +147,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  Failed to MapViewOfFile for %s, error: %X\", memoryMappedFileName, errorCode));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  Failed to MapViewOfFile for %s, error: %X\", memoryMappedFileName, errorCode));\n@@ -151,1 +151,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  MapViewOfFile worked - view: %p\\r\\n\", memoryMappedView));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  MapViewOfFile worked - view: %p\\r\\n\", memoryMappedView));\n@@ -172,1 +172,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  JavaVM failed to deal with memory mapped file %s\\r\\n\",\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  JavaVM failed to deal with memory mapped file %s\\r\\n\",\n@@ -177,1 +177,1 @@\n-        DEBUG_CODE(sprintf(debugBuf, \"  Success!  JavaVM accpeted our file\\r\\n\"));\n+        DEBUG_CODE(snprintf(debugBuf, sizeof(debugBuf), \"  Success!  JavaVM accpeted our file\\r\\n\"));\n@@ -248,1 +248,1 @@\n-    DEBUG_CODE(sprintf(outputBuf, \"AccessBridgeJavaVMInstance::sendMemoryPackage(, %d)\", bufsize));\n+    DEBUG_CODE(snprintf(outputBuf, sizeof(outputBuf), \"AccessBridgeJavaVMInstance::sendMemoryPackage(, %d)\", bufsize));\n@@ -255,1 +255,1 @@\n-        DEBUG_CODE(sprintf(outputBuf, \"    PackageType = %X\", *type));\n+        DEBUG_CODE(snprintf(outputBuf, sizeof(outputBuf), \"    PackageType = %X\", *type));\n@@ -257,1 +257,1 @@\n-        DEBUG_CODE(sprintf(outputBuf, \"    GetAccessibleTextRange: start = %d, end = %d, rText = %ls\",\n+        DEBUG_CODE(snprintf(outputBuf, sizeof(outputBuf), \"    GetAccessibleTextRange: start = %d, end = %d, rText = %ls\",\n@@ -272,1 +272,1 @@\n-                DEBUG_CODE(sprintf(outputBuf, \"    PackageType = %X\", *type));\n+                DEBUG_CODE(snprintf(outputBuf, sizeof(outputBuf), \"    PackageType = %X\", *type));\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeJavaVMInstance.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,1 @@\n-        sprintf(buf, \"WinAccessBridge: %s\", s);\n+        snprintf(buf, sizeof(buf), \"WinAccessBridge: %s\", s);\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/WinAccessBridge.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    sprintf(datebuf, \"%.19s %s\\n\", asctime( newtime ), am_pm );\n+    snprintf(datebuf, sizeof(datebuf), \"%.19s %s\\n\", asctime( newtime ), am_pm );\n@@ -70,1 +70,1 @@\n-    vsprintf(tmpbuf, msg, argprt);\n+    vsnprintf(tmpbuf, sizeof(tmpbuf), msg, argprt);\n@@ -98,1 +98,1 @@\n-    vsprintf(tmpbuf, msg, argprt);\n+    vsnprintf(tmpbuf, sizeof(tmpbuf), msg, argprt);\n@@ -122,1 +122,1 @@\n-    vsprintf(tmpbuf, msg, argprt);\n+    vsnprintf(tmpbuf, sizeof(tmpbuf), msg, argprt);\n","filename":"src\/jdk.accessibility\/windows\/native\/toolscommon\/AccessInfo.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}