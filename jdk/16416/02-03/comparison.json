{"files":[{"patch":"@@ -525,1 +525,1 @@\n-  \/\/ NOTE: these may be called before ciMethodData::load_data (is that a bug?).\n+  \/\/ NOTE: these may be called before ciMethodData::load_data\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @test\n+ * @test id=default_config\n@@ -43,0 +43,30 @@\n+\/*\n+ * @test id=no_profiling\n+ * @bug 8267532\n+ * @summary basic smoke test for disabled ex. handler profiling\n+ *\n+ * @run main\/othervm\n+ *   -Xbatch\n+ *   -Xlog:deoptimization=trace\n+ *   -XX:CompileCommand=PrintCompilation,compiler.c2.TestExHandlerTrap::payload\n+ *   -XX:CompileCommand=dontinline,compiler.c2.TestExHandlerTrap::payload\n+ *   -XX:CompileCommand=dontinline,compiler.c2.TestExHandlerTrap::maybeThrow\n+ *   -XX:-ProfileExceptionHandlers\n+ *   compiler.c2.TestExHandlerTrap\n+ *\/\n+\n+\/*\n+ * @test id=stress\n+ * @bug 8267532\n+ * @summary basic smoke test for stressing ex. handler pruning\n+ *\n+ * @run main\/othervm\n+ *   -Xbatch\n+ *   -Xlog:deoptimization=trace\n+ *   -XX:CompileCommand=PrintCompilation,compiler.c2.TestExHandlerTrap::payload\n+ *   -XX:CompileCommand=dontinline,compiler.c2.TestExHandlerTrap::payload\n+ *   -XX:CompileCommand=dontinline,compiler.c2.TestExHandlerTrap::maybeThrow\n+ *   -XX:+StressPrunedExceptionHandlers\n+ *   compiler.c2.TestExHandlerTrap\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestExHandlerTrap.java","additions":31,"deletions":1,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -552,1 +552,1 @@\n-        trapNodes(INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\"intrinsic_or_type_checked_inlining\");\n+        trapNodes(INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP, \"intrinsic_or_type_checked_inlining\");\n@@ -557,1 +557,1 @@\n-        trapNodes(INTRINSIC_TRAP,\"intrinsic\");\n+        trapNodes(INTRINSIC_TRAP, \"intrinsic\");\n@@ -1027,1 +1027,1 @@\n-        trapNodes(NULL_ASSERT_TRAP,\"null_assert\");\n+        trapNodes(NULL_ASSERT_TRAP, \"null_assert\");\n@@ -1032,1 +1032,1 @@\n-        trapNodes(NULL_CHECK_TRAP,\"null_check\");\n+        trapNodes(NULL_CHECK_TRAP, \"null_check\");\n@@ -1116,1 +1116,1 @@\n-        trapNodes(PREDICATE_TRAP,\"predicate\");\n+        trapNodes(PREDICATE_TRAP, \"predicate\");\n@@ -1121,1 +1121,1 @@\n-        trapNodes(RANGE_CHECK_TRAP,\"range_check\");\n+        trapNodes(RANGE_CHECK_TRAP, \"range_check\");\n@@ -1491,1 +1491,1 @@\n-        trapNodes(TRAP,\"reason\");\n+        trapNodes(TRAP, \"reason\");\n@@ -1526,1 +1526,1 @@\n-        trapNodes(UNHANDLED_TRAP,\"unhandled\");\n+        trapNodes(UNHANDLED_TRAP, \"unhandled\");\n@@ -1531,1 +1531,1 @@\n-        trapNodes(UNSTABLE_IF_TRAP,\"unstable_if\");\n+        trapNodes(UNSTABLE_IF_TRAP, \"unstable_if\");\n@@ -1536,1 +1536,1 @@\n-        trapNodes(UNREACHED_TRAP,\"unreached\");\n+        trapNodes(UNREACHED_TRAP, \"unreached\");\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}