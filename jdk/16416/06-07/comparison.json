{"files":[{"patch":"@@ -392,0 +392,4 @@\n+  if (method()->is_synchronized()) {\n+    set_has_monitors(true);\n+  }\n+\n@@ -580,1 +584,1 @@\n-, _has_monitors(method->is_synchronized() || method->has_monitor_bytecodes())\n+, _has_monitors(false)\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2319,0 +2319,1 @@\n+  compilation()->set_has_monitors(true);\n@@ -3508,9 +3509,0 @@\n-static void set_flags_for_inlined_callee(Compilation* compilation, ciMethod* callee) {\n-  if (callee->has_reserved_stack_access()) {\n-    compilation->set_has_reserved_stack_access(true);\n-  }\n-  if (callee->is_synchronized() || callee->has_monitor_bytecodes()) {\n-    compilation->set_has_monitors(true);\n-  }\n-}\n-\n@@ -3533,1 +3525,3 @@\n-      set_flags_for_inlined_callee(compilation(), callee);\n+      if (callee->has_reserved_stack_access()) {\n+        compilation()->set_has_reserved_stack_access(true);\n+      }\n@@ -3544,1 +3538,3 @@\n-      set_flags_for_inlined_callee(compilation(), callee);\n+      if (callee->has_reserved_stack_access()) {\n+        compilation()->set_has_reserved_stack_access(true);\n+      }\n@@ -3562,1 +3558,3 @@\n-    set_flags_for_inlined_callee(compilation(), callee);\n+    if (callee->has_reserved_stack_access()) {\n+      compilation()->set_has_reserved_stack_access(true);\n+    }\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -182,0 +182,2 @@\n+  C->set_has_monitors(true);\n+\n@@ -199,0 +201,4 @@\n+  \/\/ need to set it for monitor exit as well.\n+  \/\/ OSR compiled methods can start with lock taken\n+  C->set_has_monitors(true);\n+\n","filename":"src\/hotspot\/share\/opto\/locknode.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -426,1 +426,1 @@\n-  if (parse_method->is_synchronized() || parse_method->has_monitor_bytecodes()) {\n+  if (parse_method->is_synchronized()) {\n@@ -1539,1 +1539,4 @@\n-      if (!data.ex_handler_entered() || StressPrunedExceptionHandlers) {\n+      bool too_many_traps = C->too_many_traps(method(), block()->start(),\n+                                              Deoptimization::Reason_unreached);\n+      assert(StressPrunedExceptionHandlers || !too_many_traps, \"too many traps. missing profiling somewhere?\");\n+      if ((!data.ex_handler_entered() && !too_many_traps) || StressPrunedExceptionHandlers) {\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1578,2 +1578,2 @@\n-  assert(monitors_on_stack(current) == ((current->held_monitor_count() - current->jni_monitor_count()) > 0),\n-         \"Held monitor count and locks on stack invariant: \" INT64_FORMAT \" JNI: \" INT64_FORMAT, (int64_t)current->held_monitor_count(), (int64_t)current->jni_monitor_count());\n+  \/\/ assert(monitors_on_stack(current) == ((current->held_monitor_count() - current->jni_monitor_count()) > 0),\n+  \/\/        \"Held monitor count and locks on stack invariant: \" INT64_FORMAT \" JNI: \" INT64_FORMAT, (int64_t)current->held_monitor_count(), (int64_t)current->jni_monitor_count());\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}