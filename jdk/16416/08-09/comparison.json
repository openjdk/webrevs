{"files":[{"patch":"@@ -46,1 +46,1 @@\n-  _ex_handlers_data_offset(0),\n+  _exception_handlers_data_offset(0),\n@@ -145,3 +145,3 @@\n-  Copy::disjoint_words_atomic((HeapWord*) mdo->ex_handler_data_base(),\n-                              (HeapWord*) ex_handler_data_base(),\n-                              ex_handler_data_size() \/ HeapWordSize);\n+  Copy::disjoint_words_atomic((HeapWord*) mdo->exception_handler_data_base(),\n+                              (HeapWord*) exception_handler_data_base(),\n+                              exception_handler_data_size() \/ HeapWordSize);\n@@ -216,1 +216,1 @@\n-  \/\/ param_data_limit = ex_handler_data_base\n+  \/\/ param_data_limit = exception_handler_data_base\n@@ -237,1 +237,1 @@\n-  _ex_handlers_data_offset = mdo->ex_handlers_data_di();\n+  _exception_handlers_data_offset = mdo->exception_handlers_data_di();\n@@ -262,1 +262,1 @@\n-  assert((DataLayout*) ((address)_data + total_size - parameters_data_size - ex_handler_data_size()) == args_data_limit(),\n+  assert((DataLayout*) ((address)_data + total_size - parameters_data_size - exception_handler_data_size()) == args_data_limit(),\n@@ -466,1 +466,1 @@\n-ciBitData ciMethodData::ex_handler_bci_to_data(int bci) {\n+ciBitData ciMethodData::exception_handler_bci_to_data(int bci) {\n@@ -469,1 +469,1 @@\n-  for (DataLayout* data = ex_handler_data_base(); data < ex_handler_data_limit(); data = next_extra_data_layout(data)) {\n+  for (DataLayout* data = exception_handler_data_base(); data < exception_handler_data_limit(); data = next_extra_data_layout(data)) {\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -384,1 +384,1 @@\n-  int _ex_handlers_data_offset;\n+  int _exception_handlers_data_offset;\n@@ -415,2 +415,2 @@\n-  int parameter_data_size() const { return _ex_handlers_data_offset - _parameters_data_offset; }\n-  int ex_handler_data_size() const { return dp_to_di((address) ex_handler_data_limit()) - _ex_handlers_data_offset; }\n+  int parameter_data_size() const { return _exception_handlers_data_offset - _parameters_data_offset; }\n+  int exception_handler_data_size() const { return dp_to_di((address) exception_handler_data_limit()) - _exception_handlers_data_offset; }\n@@ -532,3 +532,3 @@\n-  DataLayout* parameters_data_limit() const { return ex_handler_data_base(); }\n-  DataLayout* ex_handler_data_base() const { return data_layout_at(_ex_handlers_data_offset); }\n-  DataLayout* ex_handler_data_limit() const { return extra_data_limit(); }\n+  DataLayout* parameters_data_limit() const { return exception_handler_data_base(); }\n+  DataLayout* exception_handler_data_base() const { return data_layout_at(_exception_handlers_data_offset); }\n+  DataLayout* exception_handler_data_limit() const { return extra_data_limit(); }\n@@ -540,1 +540,1 @@\n-  ciBitData ex_handler_bci_to_data(int bci);\n+  ciBitData exception_handler_bci_to_data(int bci);\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -578,1 +578,1 @@\n-    h_method->set_ex_handler_entered(handler_bci); \/\/ profiling\n+    h_method->set_exception_handler_entered(handler_bci); \/\/ profiling\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -651,1 +651,1 @@\n-void Method::set_ex_handler_entered(int handler_bci) {\n+void Method::set_exception_handler_entered(int handler_bci) {\n@@ -655,2 +655,2 @@\n-      BitData handler_data = mdo->ex_handler_bci_to_data(handler_bci);\n-      handler_data.set_ex_handler_entered();\n+      BitData handler_data = mdo->exception_handler_bci_to_data(handler_bci);\n+      handler_data.set_exception_handler_entered();\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-  void set_ex_handler_entered(int handler_bci);\n+  void set_exception_handler_entered(int handler_bci);\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -970,2 +970,2 @@\n-    int num_ex_handlers = method()->exception_table_length();\n-    object_size += num_ex_handlers * single_ex_handler_data_size();\n+    int num_exception_handlers = method()->exception_table_length();\n+    object_size += num_exception_handlers * single_exception_handler_data_size();\n@@ -1295,1 +1295,1 @@\n-  _ex_handler_data_di = data_size + extra_size + arg_data_size + parm_data_size;\n+  _exception_handler_data_di = data_size + extra_size + arg_data_size + parm_data_size;\n@@ -1297,6 +1297,6 @@\n-    int num_ex_handlers = method()->exception_table_length();\n-    object_size += num_ex_handlers * single_ex_handler_data_size();\n-    ExceptionTableElement* ex_handlers = method()->exception_table_start();\n-    for (int i = 0; i < num_ex_handlers; i++) {\n-      DataLayout *dp = ex_handler_data_at(i);\n-      dp->initialize(DataLayout::bit_data_tag, ex_handlers[i].handler_pc, single_ex_handler_data_cell_count());\n+    int num_exception_handlers = method()->exception_table_length();\n+    object_size += num_exception_handlers * single_exception_handler_data_size();\n+    ExceptionTableElement* exception_handlers = method()->exception_table_start();\n+    for (int i = 0; i < num_exception_handlers; i++) {\n+      DataLayout *dp = exception_handler_data_at(i);\n+      dp->initialize(DataLayout::bit_data_tag, exception_handlers[i].handler_pc, single_exception_handler_data_cell_count());\n@@ -1400,1 +1400,1 @@\n-DataLayout* MethodData::ex_handler_bci_to_data_helper(int bci) {\n+DataLayout* MethodData::exception_handler_bci_to_data_helper(int bci) {\n@@ -1402,4 +1402,4 @@\n-  for (int i = 0; i < num_ex_handler_data(); i++) {\n-    DataLayout* ex_handler_data = ex_handler_data_at(i);\n-    if (ex_handler_data->bci() == bci) {\n-      return ex_handler_data;\n+  for (int i = 0; i < num_exception_handler_data(); i++) {\n+    DataLayout* exception_handler_data = exception_handler_data_at(i);\n+    if (exception_handler_data->bci() == bci) {\n+      return exception_handler_data;\n@@ -1411,2 +1411,2 @@\n-BitData* MethodData::ex_handler_bci_to_data_or_null(int bci) {\n-  DataLayout* data = ex_handler_bci_to_data_helper(bci);\n+BitData* MethodData::exception_handler_bci_to_data_or_null(int bci) {\n+  DataLayout* data = exception_handler_bci_to_data_helper(bci);\n@@ -1416,2 +1416,2 @@\n-BitData MethodData::ex_handler_bci_to_data(int bci) {\n-  DataLayout* data = ex_handler_bci_to_data_helper(bci);\n+BitData MethodData::exception_handler_bci_to_data(int bci) {\n+  DataLayout* data = exception_handler_bci_to_data_helper(bci);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-      ex_handler_entered_flag     = null_seen_flag + 1\n+      exception_handler_entered_flag     = null_seen_flag + 1\n@@ -498,1 +498,1 @@\n-    , exception_seen_flag         = ex_handler_entered_flag + 1\n+    , exception_seen_flag         = exception_handler_entered_flag + 1\n@@ -530,2 +530,2 @@\n-  bool ex_handler_entered() { return flag_at(ex_handler_entered_flag); }\n-  void set_ex_handler_entered() { set_flag_at(ex_handler_entered_flag); }\n+  bool exception_handler_entered() { return flag_at(exception_handler_entered_flag); }\n+  void set_exception_handler_entered() { set_flag_at(exception_handler_entered_flag); }\n@@ -2072,1 +2072,1 @@\n-  int _ex_handler_data_di;\n+  int _exception_handler_data_di;\n@@ -2090,1 +2090,1 @@\n-  static int single_ex_handler_data_cell_count() {\n+  static int single_exception_handler_data_cell_count() {\n@@ -2094,2 +2094,2 @@\n-  static int single_ex_handler_data_size() {\n-    return DataLayout::compute_size_in_bytes(single_ex_handler_data_cell_count());\n+  static int single_exception_handler_data_size() {\n+    return DataLayout::compute_size_in_bytes(single_exception_handler_data_cell_count());\n@@ -2098,2 +2098,2 @@\n-  DataLayout* ex_handler_data_at(int ex_handler_index) const {\n-    return data_layout_at(_ex_handler_data_di + (ex_handler_index * single_ex_handler_data_size()));\n+  DataLayout* exception_handler_data_at(int exception_handler_index) const {\n+    return data_layout_at(_exception_handler_data_di + (exception_handler_index * single_exception_handler_data_size()));\n@@ -2102,2 +2102,2 @@\n-  int num_ex_handler_data() const {\n-    return ex_handlers_data_size() \/ single_ex_handler_data_size();\n+  int num_exception_handler_data() const {\n+    return exception_handlers_data_size() \/ single_exception_handler_data_size();\n@@ -2171,1 +2171,1 @@\n-  DataLayout* ex_handler_bci_to_data_helper(int bci);\n+  DataLayout* exception_handler_bci_to_data_helper(int bci);\n@@ -2312,2 +2312,2 @@\n-  int ex_handlers_data_size() const {\n-    return pointer_delta_as_int((address) ex_handler_data_limit(), (address) ex_handler_data_base());\n+  int exception_handlers_data_size() const {\n+    return pointer_delta_as_int((address) exception_handler_data_limit(), (address) exception_handler_data_base());\n@@ -2366,2 +2366,2 @@\n-  BitData* ex_handler_bci_to_data_or_null(int bci);\n-  BitData ex_handler_bci_to_data(int bci);\n+  BitData* exception_handler_bci_to_data_or_null(int bci);\n+  BitData exception_handler_bci_to_data(int bci);\n@@ -2381,1 +2381,1 @@\n-    return ex_handler_data_base();\n+    return exception_handler_data_base();\n@@ -2383,2 +2383,2 @@\n-  DataLayout* ex_handler_data_base() const { return data_layout_at(_ex_handler_data_di); }\n-  DataLayout* ex_handler_data_limit() const { return extra_data_limit(); }\n+  DataLayout* exception_handler_data_base() const { return data_layout_at(_exception_handler_data_di); }\n+  DataLayout* exception_handler_data_limit() const { return extra_data_limit(); }\n@@ -2434,1 +2434,1 @@\n-    return _parameters_type_data_di != no_parameters ? _parameters_type_data_di : ex_handlers_data_di();\n+    return _parameters_type_data_di != no_parameters ? _parameters_type_data_di : exception_handlers_data_di();\n@@ -2437,2 +2437,2 @@\n-  int ex_handlers_data_di() const {\n-    return _ex_handler_data_di;\n+  int exception_handlers_data_di() const {\n+    return _exception_handler_data_di;\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -944,1 +944,1 @@\n-  if (has_ex_handler() && !ex_type->klass_is_exact()) {\n+  if (has_exception_handler() && !ex_type->klass_is_exact()) {\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-\/\/-----------------------------has_ex_handler----------------------------------\n+\/\/-----------------------------has_exception_handler----------------------------------\n@@ -186,1 +186,1 @@\n-bool GraphKit::has_ex_handler() {\n+bool GraphKit::has_exception_handler() {\n@@ -551,1 +551,1 @@\n-        && has_ex_handler()) {\n+        && has_exception_handler()) {\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-  bool has_ex_handler();\n+  bool has_exception_handler();\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1538,2 +1538,2 @@\n-      ciBitData data = methodData->ex_handler_bci_to_data(block()->start());\n-      if (!data.ex_handler_entered() || StressPrunedExceptionHandlers) {\n+      ciBitData data = methodData->exception_handler_bci_to_data(block()->start());\n+      if (!data.exception_handler_entered() || StressPrunedExceptionHandlers) {\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2448,2 +2448,2 @@\n-      BitData* ex_handler_data = trap_mdo->ex_handler_bci_to_data_or_null(trap_bci);\n-      if (ex_handler_data != nullptr) {\n+      BitData* exception_handler_data = trap_mdo->exception_handler_bci_to_data_or_null(trap_bci);\n+      if (exception_handler_data != nullptr) {\n@@ -2454,1 +2454,1 @@\n-        ex_handler_data->set_ex_handler_entered();\n+        exception_handler_data->set_exception_handler_entered();\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -784,1 +784,1 @@\n-    sd->method()->set_ex_handler_entered(handler_bci); \/\/ profile\n+    sd->method()->set_exception_handler_entered(handler_bci); \/\/ profile\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,0 +145,57 @@\n+    @Test\n+    @IR(counts = {IRNode.UNREACHED_TRAP, \"1\"})\n+    public static void testThrowBeforeProfiling(boolean shouldThrow) {\n+        try {\n+            outOfLine(shouldThrow);\n+        } catch (IllegalStateException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Run(test = \"testThrowBeforeProfiling\", mode = RunMode.STANDALONE)\n+    public static void runThrowBeforeProfiling(RunInfo info) {\n+        testThrowBeforeProfiling(true);\n+        \/\/ this exception should not be profiled, as MDO has not been created yet\n+\n+        for (int i = 0; i < 20_000; i++) { \/\/ tier 4\n+            testThrowBeforeProfiling(false);\n+        }\n+        \/\/ should have trap\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.UNREACHED_TRAP, \"0\"})\n+    public static void testInterpreterProfiling(boolean takeBranch, boolean shouldThrow) {\n+        if (takeBranch) {\n+            System.out.println(\"testInterpreterProfiling: branch taken\");\n+        }\n+\n+        try {\n+            outOfLine(shouldThrow);\n+        } catch (IllegalStateException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Run(test = \"testInterpreterProfiling\", mode = RunMode.STANDALONE)\n+    public static void runInterpreterProfiling(RunInfo info) {\n+        for (int i = 0; i < 20_000; i++) { \/\/ tier 4\n+            testInterpreterProfiling(false, false);\n+        }\n+        TestFramework.assertCompiledByC2(info.getTest());\n+        \/\/ should have no trap at this point\n+\n+        testInterpreterProfiling(true, false); \/\/ take branch -> deopt due to unstable if\n+        TestFramework.assertDeoptimizedByC2(info.getTest());\n+\n+        \/\/ continue in the interpreter:\n+        testInterpreterProfiling(false, false);\n+        \/\/ throw exception in the interpreter, test interpreter profiling:\n+        testInterpreterProfiling(false, true);\n+\n+        for (int i = 0; i < 20_000; i++) { \/\/ tier 4 again\n+            testInterpreterProfiling(false, false);\n+        }\n+        \/\/ should have no trap\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestPrunedExHandler.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"modified"}]}