{"files":[{"patch":"@@ -30,1 +30,1 @@\n-void BasicLock::print_on(outputStream* st, oop owner) const {\n+void BasicLock::print_on(outputStream* st, oop owner) {\n","filename":"src\/hotspot\/share\/runtime\/basicLock.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  inline ObjectMonitor* object_monitor_cache() const;\n+  inline ObjectMonitor* object_monitor_cache();\n@@ -69,1 +69,1 @@\n-  void print_on(outputStream* st, oop owner) const;\n+  void print_on(outputStream* st, oop owner);\n","filename":"src\/hotspot\/share\/runtime\/basicLock.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/objectMonitor.hpp\"\n@@ -40,1 +41,1 @@\n-inline ObjectMonitor* BasicLock::object_monitor_cache() const {\n+inline ObjectMonitor* BasicLock::object_monitor_cache() {\n@@ -43,1 +44,6 @@\n-  return reinterpret_cast<ObjectMonitor*>(get_metadata());\n+  ObjectMonitor* monitor = reinterpret_cast<ObjectMonitor*>(get_metadata());\n+  if (monitor != nullptr && monitor->is_being_async_deflated()) {\n+    clear_object_monitor_cache();\n+    return nullptr;\n+  }\n+  return monitor;\n","filename":"src\/hotspot\/share\/runtime\/basicLock.inline.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -749,1 +749,1 @@\n-      monitor = JavaThread::cast(current)->om_get_from_monitor_cache(object);\n+      monitor = current->om_get_from_monitor_cache(object);\n","filename":"src\/hotspot\/share\/runtime\/lightweightSynchronizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}