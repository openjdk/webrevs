{"files":[{"patch":"@@ -68,2 +68,2 @@\n-  assert(Heap_lock != nullptr, \"inv\");\n-  _lock = Heap_lock;\n+  assert(JNICritical_lock != nullptr, \"inv\");\n+  _lock = JNICritical_lock;\n@@ -85,1 +85,2 @@\n-  assert(_lock->is_locked(), \"precondition\");\n+  \/\/ _lock is held from the beginning of block() to the end of of unblock().\n+  _lock->lock();\n@@ -119,1 +120,0 @@\n-  assert(_lock->is_locked(), \"precondition\");\n@@ -123,0 +123,1 @@\n+  _lock->unlock();\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,0 +96,5 @@\n+static bool should_use_gclocker() {\n+  \/\/ Only Serial and Parallel use GCLocker to synchronize with threads in JNI critical-sections, in order to handle pinned objects.\n+  return UseSerialGC || UseParallelGC;\n+}\n+\n@@ -109,0 +114,4 @@\n+\n+  if (should_use_gclocker()) {\n+    GCLocker::block();\n+  }\n@@ -115,0 +124,3 @@\n+    if (should_use_gclocker()) {\n+      GCLocker::unblock();\n+    }\n@@ -117,3 +129,0 @@\n-    if (UseSerialGC || UseParallelGC) {\n-      GCLocker::block();\n-    }\n@@ -127,3 +136,0 @@\n-  if (UseSerialGC || UseParallelGC) {\n-    GCLocker::unblock();\n-  }\n@@ -137,0 +143,3 @@\n+  if (should_use_gclocker()) {\n+    GCLocker::unblock();\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+Monitor* JNICritical_lock             = nullptr;\n@@ -321,1 +322,2 @@\n-  MUTEX_DEFL(Heap_lock                      , PaddedMonitor, AdapterHandlerLibrary_lock);\n+  MUTEX_DEFL(JNICritical_lock               , PaddedMonitor, AdapterHandlerLibrary_lock); \/\/ used for JNI critical regions\n+  MUTEX_DEFL(Heap_lock                      , PaddedMonitor, JNICritical_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+extern Monitor* JNICritical_lock;                \/\/ a lock used while synchronizing with threads entering\/leaving JNI critical regions\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}