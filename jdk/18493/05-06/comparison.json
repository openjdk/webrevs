{"files":[{"patch":"@@ -255,1 +255,1 @@\n-        return parseAddressStringPosix(posixIPAddressLiteral, true);\n+        return parseAddressStringPosix(posixIPAddressLiteral);\n@@ -321,1 +321,1 @@\n-    static Inet4Address parseAddressStringPosix(String addressLiteral, boolean throwIAE) {\n+    private static Inet4Address parseAddressStringPosix(String addressLiteral) {\n@@ -323,1 +323,1 @@\n-        if (parsedBytes == null && throwIAE) {\n+        if (parsedBytes == null) {\n@@ -326,1 +326,1 @@\n-        return (parsedBytes == null) ? null : new Inet4Address(null, parsedBytes);\n+        return new Inet4Address(null, parsedBytes);\n","filename":"src\/java.base\/share\/classes\/java\/net\/Inet4Address.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -712,0 +712,4 @@\n+                        \/\/ Store the parsed field in the byte buffer.\n+                        \/\/ If the field value is greater than 255, it can only be the last field.\n+                        \/\/ If it is not the last one, parseV4FieldBsd enforces this limit\n+                        \/\/ and returns TERMINAL_PARSE_ERROR.\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/IPAddressUtil.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @summary Test for ofLiteral API in InetAddress classes\n+ * @summary Test for ofLiteral, ofPosixLiteral APIs in InetAddress classes\n","filename":"test\/jdk\/java\/net\/InetAddress\/OfLiteralTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}