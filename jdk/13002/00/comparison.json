{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.List;\n@@ -48,1 +49,10 @@\n-    RetryExecutor setWriteOutputToFile(boolean v) {\n+    public RetryExecutor saveOutput(boolean v) {\n+        saveOutput = v;\n+        return this;\n+    }\n+\n+    public List<String> getOutput() {\n+        return output;\n+    }\n+\n+    public RetryExecutor setWriteOutputToFile(boolean v) {\n@@ -95,1 +105,1 @@\n-                Executor exec = execSupplier.get();\n+                Executor exec = execSupplier.get().saveOutput(saveOutput);\n@@ -100,0 +110,3 @@\n+                if (saveOutput) {\n+                    output = exec.getOutput();\n+                }\n@@ -120,0 +133,2 @@\n+    private boolean saveOutput;\n+    private List<String> output;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/RetryExecutor.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,3 @@\n-        var plist = readPList(Executor.of(\"sh\", \"-c\",\n-                String.join(\" \", \"yes\", \"|\", \"\/usr\/bin\/hdiutil\", \"attach\",\n+        String attachCMD[] = {\n+            \"sh\", \"-c\",\n+            String.join(\" \", \"yes\", \"|\", \"\/usr\/bin\/hdiutil\", \"attach\",\n@@ -63,3 +64,12 @@\n-                                cmd.outputBundle().toString()), \"-plist\"))\n-                .dumpOutput()\n-                .executeAndGetOutput());\n+                                cmd.outputBundle().toString()), \"-plist\")};\n+        RetryExecutor attachExecutor = new RetryExecutor();\n+        try {\n+            \/\/ 10 times with 6 second delays.\n+            attachExecutor.setMaxAttemptsCount(10)\n+                    .setAttemptTimeoutMillis(6000)\n+                    .setWriteOutputToFile(true)\n+                    .saveOutput(true)\n+                    .execute(attachCMD);\n+        } catch (IOException ex) {\n+            throw new RuntimeException(ex);\n+        }\n@@ -67,1 +77,1 @@\n-        final Path mountPoint = Path.of(plist.queryValue(\"mount-point\"));\n+        Path mountPoint = null;\n@@ -69,0 +79,3 @@\n+            var plist = readPList(attachExecutor.getOutput());\n+            mountPoint = Path.of(plist.queryValue(\"mount-point\"));\n+\n@@ -80,1 +93,1 @@\n-            String cmdline[] = {\n+            String detachCMD[] = {\n@@ -87,1 +100,1 @@\n-            RetryExecutor retryExecutor = new RetryExecutor();\n+            RetryExecutor detachExecutor = new RetryExecutor();\n@@ -90,3 +103,4 @@\n-            retryExecutor.setExecutorInitializer(exec -> {\n-                if (!Files.exists(mountPoint)) {\n-                    retryExecutor.abort();\n+            final Path mp = mountPoint;\n+            detachExecutor.setExecutorInitializer(exec -> {\n+                if (!Files.exists(mp)) {\n+                    detachExecutor.abort();\n@@ -97,1 +111,1 @@\n-                retryExecutor.setMaxAttemptsCount(10)\n+                detachExecutor.setMaxAttemptsCount(10)\n@@ -99,1 +113,3 @@\n-                        .execute(cmdline);\n+                        .setWriteOutputToFile(true)\n+                        .saveOutput(true)\n+                        .execute(detachCMD);\n@@ -101,1 +117,1 @@\n-                if (!retryExecutor.isAborted()) {\n+                if (!detachExecutor.isAborted()) {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/MacHelper.java","additions":31,"deletions":15,"binary":false,"changes":46,"status":"modified"}]}