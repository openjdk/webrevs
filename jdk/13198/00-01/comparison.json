{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.io.Flushable;\n@@ -344,5 +345,3 @@\n-     * its I\/O operations to the given stream.  Upon returning from the\n-     * channel's {@linkplain WritableByteChannel#write write} method, the\n-     * state of the stream will be as if its {@linkplain OutputStream#flush\n-     * flush} method had been invoked.  Closing the channel will in turn cause\n-     * the stream to be closed. <\/p>\n+     * its I\/O operations to the given stream.  Closing the channel will in\n+     * turn cause the stream to be closed.  The returned channel implements\n+     * {@linkplain Flushable}; flushing the channel will flush the stream. <\/p>\n@@ -362,1 +361,28 @@\n-        return new WritableByteChannelImpl(out);\n+        return new WritableByteChannelImpl(out, false);\n+    }\n+\n+    \/**\n+     * Constructs a channel that writes bytes to the given stream.\n+     *\n+     * <p> The resulting channel will not be buffered; it will simply redirect\n+     * its I\/O operations to the given stream.  Closing the channel will in\n+     * turn cause the stream to be closed.  The stream will be flushed after\n+     * each write if the {@code autoFlush} parameter is {@code true}. <\/p>\n+     *\n+     * @param  out\n+     *         The stream to which bytes are to be written\n+     *\n+     * @param  autoFlush\n+     *         Whether to flush the stream after each write to the channel\n+     *\n+     * @return  A new writable byte channel\n+     *\/\n+    public static WritableByteChannel newChannel(OutputStream out,\n+                                                 boolean autoFlush) {\n+        Objects.requireNonNull(out, \"out\");\n+\n+        if (out.getClass() == FileOutputStream.class) {\n+            return ((FileOutputStream) out).getChannel();\n+        }\n+\n+        return new WritableByteChannelImpl(out, autoFlush);\n@@ -367,1 +393,1 @@\n-        implements WritableByteChannel\n+        implements Flushable, WritableByteChannel\n@@ -370,0 +396,1 @@\n+        private final boolean autoFlush;\n@@ -374,1 +401,1 @@\n-        WritableByteChannelImpl(OutputStream out) {\n+        WritableByteChannelImpl(OutputStream out, boolean autoFlush) {\n@@ -376,0 +403,1 @@\n+            this.autoFlush = autoFlush;\n@@ -401,1 +429,2 @@\n-                out.flush();\n+                if (autoFlush)\n+                    out.flush();\n@@ -406,0 +435,4 @@\n+        public void flush() throws IOException {\n+            out.flush();\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Channels.java","additions":42,"deletions":9,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-             WritableByteChannel wbc = Channels.newChannel(bos);) {\n+             WritableByteChannel wbc = Channels.newChannel(bos, true);) {\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}