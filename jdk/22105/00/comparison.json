{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,2 +237,0 @@\n-     * @throws SecurityException if there is a SecurityManager installed and it\n-     * denied the authorization to connect to the destination.\n@@ -250,2 +248,0 @@\n-     * @throws SecurityException if there is a SecurityManager installed and it\n-     * denied the authorization to connect to the destination.\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/FtpClient.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,3 +51,0 @@\n-     *\n-     * @throws SecurityException if a security manager is installed and it denies\n-     *         {@link RuntimePermission}{@code (\"ftpClientProvider\")}\n@@ -58,5 +53,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new RuntimePermission(\"ftpClientProvider\"));\n-        }\n@@ -77,2 +67,1 @@\n-                 InstantiationException |\n-                 SecurityException x) {\n+                 InstantiationException x) {\n@@ -138,1 +127,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -144,14 +132,8 @@\n-            return (FtpClientProvider) AccessController.doPrivileged(\n-                    new PrivilegedAction<Object>() {\n-\n-                        public Object run() {\n-                            if (loadProviderFromProperty()) {\n-                                return provider;\n-                            }\n-                            if (loadProviderAsService()) {\n-                                return provider;\n-                            }\n-                            provider = new sun.net.ftp.impl.DefaultFtpClientProvider();\n-                            return provider;\n-                        }\n-                    });\n+            if (loadProviderFromProperty()) {\n+                return provider;\n+            }\n+            if (loadProviderAsService()) {\n+                return provider;\n+            }\n+            provider = new sun.net.ftp.impl.DefaultFtpClientProvider();\n+            return provider;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/FtpClientProvider.java","additions":10,"deletions":28,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -47,3 +47,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import java.security.PrivilegedExceptionAction;\n@@ -136,13 +133,2 @@\n-        final int vals[] = {0, 0};\n-        final String acceptPasvAddress[] = {null};\n-        @SuppressWarnings(\"removal\")\n-        final String enc = AccessController.doPrivileged(\n-                new PrivilegedAction<String>() {\n-                    public String run() {\n-                        acceptPasvAddress[0] = System.getProperty(\"jdk.net.ftp.trustPasvAddress\", \"false\");\n-                        vals[0] = Integer.getInteger(\"sun.net.client.defaultReadTimeout\", 300_000).intValue();\n-                        vals[1] = Integer.getInteger(\"sun.net.client.defaultConnectTimeout\", 300_000).intValue();\n-                        return System.getProperty(\"file.encoding\", \"ISO8859_1\");\n-                    }\n-                });\n-        if (vals[0] == 0) {\n+        defaultSoTimeout = Integer.getInteger(\"sun.net.client.defaultReadTimeout\", 300_000).intValue();\n+        if (defaultSoTimeout == 0) {\n@@ -150,2 +136,0 @@\n-        } else {\n-            defaultSoTimeout = vals[0];\n@@ -154,1 +138,2 @@\n-        if (vals[1] == 0) {\n+        defaultConnectTimeout = Integer.getInteger(\"sun.net.client.defaultConnectTimeout\", 300_000).intValue();\n+        if (defaultConnectTimeout == 0) {\n@@ -156,2 +141,0 @@\n-        } else {\n-            defaultConnectTimeout = vals[1];\n@@ -160,1 +143,1 @@\n-        encoding = enc;\n+        encoding = System.getProperty(\"file.encoding\", \"ISO8859_1\");\n@@ -174,1 +157,1 @@\n-        acceptPasvAddressVal = Boolean.parseBoolean(acceptPasvAddress[0]);\n+        acceptPasvAddressVal = Boolean.getBoolean(\"jdk.net.ftp.trustPasvAddress\");\n@@ -665,4 +648,1 @@\n-                PrivilegedAction<Socket> pa = () -> new Socket(proxy);\n-                @SuppressWarnings(\"removal\")\n-                var tmp = AccessController.doPrivileged(pa);\n-                s = tmp;\n+                s = new Socket(proxy);\n@@ -676,3 +656,1 @@\n-        PrivilegedAction<InetAddress> pa = () -> server.getLocalAddress();\n-        @SuppressWarnings(\"removal\")\n-        InetAddress serverAddress = AccessController.doPrivileged(pa);\n+        InetAddress serverAddress = server.getLocalAddress();\n@@ -764,1 +742,0 @@\n-        PrivilegedExceptionAction<InetAddress> action = InetAddress::getLocalHost;\n@@ -766,3 +743,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var tmp = AccessController.doPrivileged(action);\n-            return tmp;\n+            return InetAddress.getLocalHost();\n@@ -777,1 +752,0 @@\n-        PrivilegedExceptionAction<InetAddress[]> pAction = () -> InetAddress.getAllByName(hostName);\n@@ -779,3 +753,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var tmp =AccessController.doPrivileged(pAction);\n-            return tmp;\n+            return InetAddress.getAllByName(hostName);\n@@ -1024,4 +996,1 @@\n-                PrivilegedAction<Socket> pa = () -> new Socket(proxy);\n-                @SuppressWarnings(\"removal\")\n-                var tmp = AccessController.doPrivileged(pa);\n-                s = tmp;\n+                s = new Socket(proxy);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/impl\/FtpClient.java","additions":11,"deletions":42,"binary":false,"changes":53,"status":"modified"}]}