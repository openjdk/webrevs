{"files":[{"patch":"@@ -289,1 +289,1 @@\n-  bool is_spill = lea_address != decode->in(1) &&\n+  bool is_spill = lea_address != decode_address &&\n@@ -293,0 +293,10 @@\n+  \/\/ If this is a spill, move lea_address and decode_address one node further up to the\n+  \/\/ grandparents of lea_derived_oop and decode respectively. This lets us look through\n+  \/\/ the indirection of the spill.\n+  MachNode* decode_spill;\n+  if (is_spill) {\n+    decode_spill = decode_address->as_Mach();\n+    decode_address = decode_address->in(1);\n+    lea_address = lea_address->in(1);\n+  }\n+\n@@ -295,2 +305,1 @@\n-  if ((!is_spill && lea_address != decode_address) ||\n-      (is_spill && lea_address->in(1) != decode_address->in(1))) {\n+  if (lea_address != decode_address) {\n@@ -317,2 +326,2 @@\n-          (other_lea->in(AddPNode::Address) == decode_address ||\n-          (is_spill && other_lea->in(AddPNode::Address)->in(1) == decode_address->in(1)))) {\n+          (is_spill ? other_lea->in(AddPNode::Address)->in(1)\n+                    : other_lea->in(AddPNode::Address)) == decode_address) {\n@@ -342,4 +351,2 @@\n-      dependant_lea->set_req(\n-        AddPNode::Base,\n-        is_spill ? dependant_lea->in(AddPNode::Address)->in(1) : dependant_lea->in(AddPNode::Address)\n-      );\n+\n+      dependant_lea->set_req(AddPNode::Base, decode_address);\n@@ -352,3 +359,2 @@\n-  \/\/ Remove spill for the decode if it does not have any other uses.\n-  if (is_spill && decode_address->is_Mach() && decode_address->outcnt() == 1 && block->contains(decode_address)) {\n-    MachNode* decode_spill = decode_address->as_Mach();\n+  \/\/ Remove spill for the decode if the spill node does not have any other uses.\n+  if (is_spill && decode_spill->outcnt() == 1 && block->contains(decode_spill)) {\n","filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        Scenario[] scenarios = new Scenario[4];\n+        Scenario[] scenarios = new Scenario[2];\n@@ -140,7 +140,4 @@\n-            for (boolean compressedTest : new boolean[] {false, true}) {\n-                \/\/                                             leaPCompressedOopOffset  leaP(8|32)Narrow\n-                scenarios[i] = new Scenario(i, compressedTest ? \"-XX:MaxHeapSize=4g\" : \"-XX:MaxHeapSize=32m\");\n-                if (negativeTest) {\n-                    scenarios[i].addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-OptoPeephole\");\n-                }\n-                i += 1;\n+            if (negativeTest) {\n+                scenarios[i] = new Scenario(i, \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-OptoPeephole\");\n+            } else {\n+                scenarios[i] = new Scenario(i, \"-XX:+OptoPeephole\");\n@@ -148,0 +145,1 @@\n+            i += 1;\n@@ -161,5 +159,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=1\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=1\"},\n+    @IR(counts = {IRNode.LEA_P, \"=1\"},\n@@ -167,1 +161,0 @@\n-        applyIf = {\"MaxHeapSize\", \">1073741824\"},\n@@ -193,1 +186,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=2\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -195,5 +188,0 @@\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \">1073741824\"},\n@@ -245,5 +233,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=2\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -251,1 +235,0 @@\n-        applyIf = {\"MaxHeapSize\", \">1073741824\"},\n@@ -326,2 +309,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=1\",\n-                  IRNode.LEA_P_32_NARROW, \"=1\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -329,5 +311,0 @@\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n-        phase  = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \">=1073741824\"},\n@@ -359,6 +336,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=1\",\n-                  IRNode.LEA_P_32_NARROW, \"=1\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -366,1 +338,0 @@\n-        applyIf = {\"MaxHeapSize\", \">=1073741824\"},\n@@ -380,2 +351,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=1\",\n-                  IRNode.LEA_P_32_NARROW, \"=1\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -383,5 +353,0 @@\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \">=1073741824\"},\n@@ -403,6 +368,1 @@\n-    @IR(counts = {IRNode.LEA_P_8_NARROW, \"=1\",\n-                  IRNode.LEA_P_32_NARROW, \"=1\"},\n-        phase = {CompilePhase.FINAL_CODE},\n-        applyIf = {\"MaxHeapSize\", \"<1073741824\"},\n-        applyIfPlatform = {\"mac\", \"false\"})\n-    @IR(counts = {IRNode.LEA_P_COMPRESSED_OOP_OFFSET, \"=2\"},\n+    @IR(counts = {IRNode.LEA_P, \"=2\"},\n@@ -410,1 +370,0 @@\n-        applyIf = {\"MaxHeapSize\", \">=1073741824\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestRedundantLea.java","additions":13,"deletions":54,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -896,0 +896,6 @@\n+    \/\/ Only supported on x86.\n+    public static final String LEA_P = PREFIX + \"LEA_P\" + POSTFIX;\n+    static {\n+        machOnly(LEA_P, \"leaP(CompressedOopOffset|(8|32)Narrow)\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}