{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,1 @@\n+        failures += testAtan2();\n@@ -65,0 +66,18 @@\n+    private static int testAtan2() {\n+        int failures = 0;\n+\n+        \/\/ Empirical worst-case points in other libraries with larger\n+        \/\/ worst-case errors than FDLIBM\n+        double[][] testCases = {\n+            {-0x0.00000000039a2p-1022, 0x0.000fdf02p-1022,     -0x1.d0ce6fac85de9p-27},\n+            { 0x1.9173ea8221453p+842,  0x1.8c6f1b4b72f3ap+842,  0x1.9558272cbbdf9p-1},\n+            { 0x1.9cde4ff190e45p+931,  0x1.37d91467e558bp+931,  0x1.d909432d6f9c8p-1},\n+            { 0x1.401ec07d65549p+888,  0x1.3c3976605bb0cp+888,  0x1.95421cda9c65bp-1},\n+        };\n+\n+        for (double[] testCase : testCases) {\n+            failures += testAtan2Case(testCase[0], testCase[1], testCase[2]); \n+        }\n+        return failures;\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Atan2Tests.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -708,0 +708,5 @@\n+\n+            \/\/ Empirical worst-case points in other libraries with\n+            \/\/ larger worst-case errors than FDLIBM\n+            {0x0.00000000039a2p-1022, 0x0.0000000000001p-1022, 0x0.00000000039a2p-1022},\n+            {0x1.41fcfeeb2e246p+420,  0x1.8d4d41eacdeccp+420,  0x1.ff65325de5517p420},\n","filename":"test\/jdk\/java\/lang\/StrictMath\/HypotTests.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}