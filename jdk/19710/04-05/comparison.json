{"files":[{"patch":"@@ -283,0 +283,1 @@\n+     * Assumes no leading unnecessary zeros.\n@@ -285,3 +286,0 @@\n-        this.normalize();\n-        b.normalize();\n-\n@@ -311,0 +309,1 @@\n+     * Assumes no leading unnecessary zeros.\n@@ -313,3 +312,0 @@\n-        this.normalize();\n-        b.normalize();\n-\n@@ -508,1 +504,0 @@\n-        normalize();\n@@ -516,1 +511,0 @@\n-        normalize();\n@@ -2065,3 +2059,7 @@\n-        int from = offset + len - (blockIndex + 1) * blockLen;\n-        int intEnd = offset + limit;\n-        if (from >= intEnd)\n+        int blockEnd = offset + len - blockIndex * blockLen;\n+        int from = blockEnd - blockLen, to = Math.min(blockEnd, offset + limit);\n+\n+        \/\/ Skip leading zeros\n+        for(; from < to && value[from] == 0; from++);\n+\n+        if (from >= to)\n@@ -2070,2 +2068,2 @@\n-        int[] block = new int[blockLen];\n-        System.arraycopy(value, from, block, 0, Math.min(intEnd - from, blockLen));\n+        int[] block = new int[blockEnd - from];\n+        System.arraycopy(value, from, block, 0, to - from);\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}