{"files":[{"patch":"@@ -1973,3 +1973,3 @@\n-             * it is true that s == Math.round(Math.sqrt(x >= 0 ? x : x + 0x1p64)),\n-             * and if x == 2^64 - 1, then Math.round(Math.sqrt(x >= 0 ? x : x + 0x1p64)) == 2^32.\n-             * This means that the value returned by Math.round(Math.sqrt())\n+             * it is true that s - 1 <= (long) Math.sqrt(x >= 0 ? x : x + 0x1p64) <= s,\n+             * and if x == 2^64 - 1, then (long) Math.sqrt(x >= 0 ? x : x + 0x1p64) == 2^32.\n+             * This means that the value returned by Math.sqrt()\n@@ -1977,2 +1977,2 @@\n-             * or rounded up by one if the value is too high\n-             * and too close to the next perfect square.\n+             * or rounded up\/down by one if the value is too high\n+             * and too close to a perfect square.\n@@ -1980,1 +1980,1 @@\n-            long s = Math.round(Math.sqrt(x >= 0 ? x : x + 0x1p64));\n+            long s = (long) Math.sqrt(x >= 0 ? x : x + 0x1p64);\n@@ -1984,0 +1984,4 @@\n+            } else if (s < LONG_MASK) { \/\/ avoid overflow of (s + 1) * (s + 1)\n+                long s1 = s + 1;\n+                if (Long.compareUnsigned(x, s1 * s1) >= 0)\n+                    s = s1;\n@@ -2036,2 +2040,2 @@\n-            long s = Math.round(Math.sqrt(x >= 0 ? x : x + 0x1p64));\n-            if (s > LONG_MASK || Long.compareUnsigned(x, s * s) < 0)\n+            long s = (long) Math.sqrt(x >= 0 ? x : x + 0x1p64);\n+            if (s > LONG_MASK || Long.compareUnsigned(x, s * s) < 0) {\n@@ -2039,0 +2043,3 @@\n+            } else if (s < LONG_MASK && Long.compareUnsigned(x, (s + 1) * (s + 1)) >= 0) {\n+                s++;\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}