{"files":[{"patch":"@@ -1705,1 +1705,5 @@\n-\n+        }\n+        \/\/ Write interrupted before reading nioBlocker for correct synchronization.\n+        interrupted = true;\n+        interrupt0();  \/\/ inform VM of interrupt\n+        if (this != Thread.currentThread()) {\n@@ -1711,2 +1715,0 @@\n-                    interrupted = true;\n-                    interrupt0();  \/\/ inform VM of interrupt\n@@ -1718,1 +1720,0 @@\n-                return;\n@@ -1721,2 +1722,0 @@\n-        interrupted = true;\n-        interrupt0();  \/\/ inform VM of interrupt\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test id=platform\n+ * @bug 8323782\n+ * @summary Stress test Thread.interrupt on a target Thread doing a selection operation\n+ * @run main LotsOfInterrupts 200000\n+ *\/\n+\n+\/*\n+ * @test id=virtual\n+ * @run main\/othervm -DthreadFactory=virtual LotsOfInterrupts 200000\n+ *\/\n+\n+import java.nio.channels.Selector;\n+import java.time.Instant;\n+import java.util.concurrent.Phaser;\n+import java.util.concurrent.ThreadFactory;\n+\n+public class LotsOfInterrupts {\n+\n+    public static void main(String[] args) throws Exception {\n+        int iterations;\n+        if (args.length > 0) {\n+            iterations = Integer.parseInt(args[0]);\n+        } else {\n+            iterations = 500_000;\n+        }\n+\n+        ThreadFactory factory;\n+        String value = System.getProperty(\"threadFactory\");\n+        if (\"virtual\".equals(value)) {\n+            factory = Thread.ofVirtual().factory();\n+        } else {\n+            factory = Thread.ofPlatform().factory();\n+        }\n+\n+        var phaser = new Phaser(2);\n+\n+        Thread thread = factory.newThread(() -> {\n+            try (Selector sel = Selector.open()) {\n+                for (int i = 0; i < iterations; i++) {\n+                    phaser.arriveAndAwaitAdvance();\n+                    sel.select();\n+\n+                    \/\/ clear interrupt status and consume wakeup\n+                    Thread.interrupted();\n+                    sel.selectNow();\n+                }\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+        });\n+        thread.start();\n+\n+        long lastTimestamp = System.currentTimeMillis();\n+        for (int i = 0; i < iterations; i++) {\n+            phaser.arriveAndAwaitAdvance();\n+            thread.interrupt();\n+\n+            long currentTime = System.currentTimeMillis();\n+            if ((currentTime - lastTimestamp) > 500) {\n+                System.out.format(\"%s %d iterations remaining ...%n\", Instant.now(), (iterations - i));\n+                lastTimestamp = currentTime;\n+            }\n+        }\n+\n+        thread.join();\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfInterrupts.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}