{"files":[{"patch":"@@ -3679,0 +3679,1 @@\n+  predicate(Matcher::vector_length_in_bytes(n->in(3)->in(1)) >= 16);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -112,1 +112,2 @@\n-        \"zvbb\"\n+        \"zvbb\",\n+        \"zvfh\"\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n- * @requires (os.simpleArch == \"x64\" & (vm.cpu.features ~= \".*avx512f.*\" | vm.cpu.features ~= \".*f16c.*\")) |\n- *           os.arch == \"aarch64\" |\n- *           (os.arch == \"riscv64\" & vm.cpu.features ~= \".*zvfh.*\")\n@@ -56,1 +53,3 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2HF, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \"> 0\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2HF, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \"> 0\"},\n+                  applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\", \"true\", \"riscv64\", \"true\"},\n+                  applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512f\", \"true\", \"zvfh\", \"true\", \"asimd\", \"true\", \"sve\", \"true\"})\n@@ -70,1 +69,10 @@\n-    @Run(test = {\"test_float_float16\", \"test_float_float16_strided\"}, mode = RunMode.STANDALONE)\n+    @Test\n+    public void test_float_float16_short_vector(short[] sout, float[] finp) {\n+        for (int i = 0; i < finp.length; i+= 4) {\n+            sout[i+0] = Float.floatToFloat16(finp[i+0]);\n+            sout[i+1] = Float.floatToFloat16(finp[i+1]);\n+        }\n+    }\n+\n+    @Run(test = {\"test_float_float16\", \"test_float_float16_strided\",\n+                 \"test_float_float16_short_vector\"}, mode = RunMode.STANDALONE)\n@@ -96,0 +104,9 @@\n+\n+        for (int i = 0; i < ITERS; i++) {\n+            test_float_float16_short_vector(sout, finp);\n+        }\n+\n+        \/\/ Verifying the result\n+        for (int i = 0; i < ARRLEN; i++) {\n+            Asserts.assertEquals(Float.floatToFloat16(finp[i]), sout[i]);\n+        }\n@@ -99,1 +116,3 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_HF2F, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \"> 0\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_HF2F, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \"> 0\"},\n+                  applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\", \"true\", \"riscv64\", \"true\"},\n+                  applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512f\", \"true\", \"zvfh\", \"true\", \"asimd\", \"true\", \"sve\", \"true\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestFloatConversionsVector.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"}]}