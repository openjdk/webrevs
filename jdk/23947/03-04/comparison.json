{"files":[{"patch":"@@ -266,1 +266,1 @@\n-      int max_mask_bit_width;\n+      int result_bit_width;\n@@ -271,1 +271,1 @@\n-        max_mask_bit_width = mask_bit_width;\n+        result_bit_width = mask_bit_width;\n@@ -276,1 +276,1 @@\n-        max_mask_bit_width = mask_bit_width - 1;\n+        result_bit_width = mask_bit_width - 1;\n@@ -282,0 +282,1 @@\n+        jlong clz = count_leading_zeros(mask_type->hi_as_long());\n@@ -284,1 +285,0 @@\n-        jlong clz = count_leading_zeros(mask_type->hi_as_long());\n@@ -286,1 +286,1 @@\n-        max_mask_bit_width = mask_bit_width - clz;\n+        result_bit_width = mask_bit_width - clz;\n@@ -288,1 +288,0 @@\n-\n@@ -293,1 +292,1 @@\n-      lo = max_mask_bit_width == mask_bit_width ? lo : 0L;\n+      lo = result_bit_width == mask_bit_width ? lo : 0L;\n@@ -295,0 +294,2 @@\n+      assert(hi == (bt == T_INT) ? max_jint : max_jlong, \"\");\n+      assert((lo == (bt == T_INT) ? min_jint : min_jlong) || lo == 0, \"\");\n@@ -299,1 +300,1 @@\n-      hi = max_mask_bit_width < mask_bit_width ? (1L << max_mask_bit_width) - 1 : hi;\n+      hi = result_bit_width < mask_bit_width ? (1L << result_bit_width) - 1 : hi;\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm compiler.c2.TestBitCompressValueTransform\n+ * @run driver compiler.c2.gvn.TestBitCompressValueTransform\n@@ -31,1 +31,1 @@\n-package compiler.c2;\n+package compiler.c2.gvn;\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestBitCompressValueTransform.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestBitCompressValueTransform.java","status":"renamed"}]}