{"files":[{"patch":"@@ -274,1 +274,0 @@\n-      int bitcount = population_count(static_cast<julong>(bt == T_INT ? maskcon & 0xFFFFFFFFL : maskcon));\n@@ -276,0 +275,1 @@\n+        int bitcount = population_count(static_cast<julong>(bt == T_INT ? maskcon & 0xFFFFFFFFL : maskcon));\n@@ -279,1 +279,2 @@\n-        \/\/ preserve originally assigned hi (MAX_INT\/LONG) and lo (MIN_INT\/LONG) values.\n+        \/\/ preserve originally assigned hi (MAX_INT\/LONG) and lo (MIN_INT\/LONG) values\n+        \/\/ for unknown source bits.\n@@ -390,2 +391,4 @@\n-        \/\/ bit of its entire value must be unset(zero). Similar to the proof of Lemma1, upper and\n-        \/\/ lower bounds of result will always match the bounds of the mask value range.\n+        \/\/ bit of its entire value must be unset(zero). If all the lower order 'n' source bits\n+        \/\/ where n corresponds to popcount of mask are set(ones) then upper bound of the result equals\n+        \/\/ mask. In order to compute the lower bound, we pssimistically assume all the lower order 'n'\n+        \/\/ source bits are unset(zero) there by resuling into a zero value.\n@@ -393,1 +396,1 @@\n-        lo = min_mask;\n+        lo = 0;\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}