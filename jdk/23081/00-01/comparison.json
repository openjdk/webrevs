{"files":[{"patch":"@@ -1264,1 +1264,1 @@\n-            throw new IllegalArgumentException(\"keepAliveTime must not be negative\");\n+            throw new IllegalArgumentException(\"keepAliveTime must be non-negative\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPoolExecutor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -740,1 +740,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+        }\n@@ -751,1 +753,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -762,1 +769,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -773,1 +785,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+        }\n@@ -784,1 +798,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -795,1 +814,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -807,1 +828,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+        }\n@@ -819,1 +842,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -831,1 +859,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -843,1 +876,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+        }\n@@ -855,1 +890,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -867,1 +907,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -879,1 +921,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"threadFactory\", success.getMessage());\n+        }\n@@ -891,1 +935,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+        }\n@@ -903,1 +949,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -915,1 +966,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -927,1 +983,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+        }\n@@ -939,1 +997,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -951,1 +1014,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -963,1 +1028,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"handler\", success.getMessage());\n+        }\n@@ -976,1 +1043,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+        }\n@@ -989,1 +1058,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -1002,1 +1076,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -1015,1 +1094,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+        }\n@@ -1028,1 +1109,6 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            assertEquals(\n+                \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                success.getMessage()\n+            );\n+        }\n@@ -1041,1 +1127,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -1054,1 +1142,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"handler\", success.getMessage());\n+        }\n@@ -1067,1 +1157,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            assertEquals(\"threadFactory\", success.getMessage());\n+        }\n@@ -1231,1 +1323,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+            }\n@@ -1248,1 +1342,6 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                assertEquals(\n+                    \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                    success.getMessage()\n+                );\n+            }\n@@ -1265,1 +1364,6 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                assertEquals(\n+                    \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                    success.getMessage()\n+                );\n+            }\n@@ -1285,1 +1389,6 @@\n-                } catch (IllegalArgumentException success) {}\n+                } catch (IllegalArgumentException success) {\n+                    assertEquals(\n+                        \"maximumPoolSize must be positive and greater-or-equal to corePoolSize\",\n+                        success.getMessage()\n+                    );\n+                }\n@@ -1291,1 +1400,6 @@\n-                } catch (IllegalArgumentException success) {}\n+                } catch (IllegalArgumentException success) {\n+                    assertEquals(\n+                        \"corePoolSize must be lesser-or-equal to maximumPoolSize\",\n+                        success.getMessage()\n+                    );\n+                }\n@@ -1311,1 +1425,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                assertEquals(\"time must be non-negative\", success.getMessage());\n+            }\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ThreadPoolExecutorTest.java","additions":150,"deletions":34,"binary":false,"changes":184,"status":"modified"}]}