{"files":[{"patch":"@@ -878,1 +878,1 @@\n-    \/** Attribute type reference in an `extends' or `implements' clause.\n+    \/** Attribute type reference in an `extends', `implements', or 'permits' clause.\n@@ -5410,0 +5410,4 @@\n+                        if (subType.isErroneous()) {\n+                            \/\/ the type already caused errors, don't produce more potentially misleading errors\n+                            continue;\n+                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,7 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8347562\n+ * @summary Erroneous types in permit clause shouldn't cause more errors\/crashes\n+ * @compile\/fail\/ref=MultipleErroneousPermittedTypes.out -XDrawDiagnostics MultipleErroneousPermittedTypes.java\n+ *\/\n+sealed class Permits<X, Y> permits X, Y {}\n","filename":"test\/langtools\/tools\/javac\/sealed\/erroneous_permits\/MultipleErroneousPermittedTypes.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+MultipleErroneousPermittedTypes.java:7:36: compiler.err.illegal.forward.ref\n+MultipleErroneousPermittedTypes.java:7:39: compiler.err.illegal.forward.ref\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/sealed\/erroneous_permits\/MultipleErroneousPermittedTypes.out","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}