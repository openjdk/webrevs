{"files":[{"patch":"@@ -46,0 +46,1 @@\n+    public static final String PRINT_TIMES_TAG = \"[PRINT_TIMES]\";\n@@ -126,0 +127,6 @@\n+     * <p>\n+     * The test VM is spawned by the main jtreg VM. The stdout of the test VM is hidden\n+     * unless the Verbose or ReportStdout flag is used. TestFrameworkSocket is used by the parent jtreg\n+     * VM and the test VM to communicate. By sending the prints through the TestFrameworkSocket with the\n+     * parameter stdout set to true, the parent VM will print the received messages to its stdout, making it\n+     * visible to the user.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/shared\/TestFrameworkSocket.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import static compiler.lib.ir_framework.shared.TestFrameworkSocket.PRINT_TIMES_TAG;\n+\n@@ -886,1 +888,1 @@\n-            System.out.println(System.lineSeparator() + System.lineSeparator() + \"Test execution times:\");\n+            TestFrameworkSocket.write(\"Test execution times:\", PRINT_TIMES_TAG, true);\n@@ -888,1 +890,2 @@\n-                System.out.format(\"%-10s%15d ns%n\", entry.getValue() + \":\", entry.getKey());\n+                TestFrameworkSocket.write(String.format(\"%-25s%15d ns%n\", entry.getValue() + \":\", entry.getKey()),\n+                        PRINT_TIMES_TAG, true);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/TestVM.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}