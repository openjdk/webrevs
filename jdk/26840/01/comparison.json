{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+ * @requires vm.compMode != \"Xcomp\"\n@@ -65,0 +66,6 @@\n+    private static final MethodType MT_calledFromNative = MethodType.methodType(\n+            Object.class,\n+            Object.class, Object.class, int.class, long.class, double.class, float.class);\n+\n+    private static MethodHandle mh;\n+\n@@ -67,0 +74,8 @@\n+        try {\n+            mh = MethodHandles.lookup().findStatic(\n+                Test.class,\n+                \"calledFromNative\",\n+                MT_calledFromNative);\n+        } catch (Exception ex) {\n+            throw new RuntimeException(\"TEST FAILED - Unable to lookup \\\"calledFromNative\\\"\");\n+        }\n@@ -71,4 +86,0 @@\n-    private static final MethodType MT_calledFromNative = MethodType.methodType(\n-            Object.class,\n-            Object.class, Object.class, int.class, long.class, double.class, float.class);\n-\n@@ -81,4 +92,0 @@\n-        MethodHandle mh = MethodHandles.lookup().findStatic(\n-                Test.class,\n-                \"calledFromNative\",\n-                MT_calledFromNative);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/jni\/nativeAndMH\/Test.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}