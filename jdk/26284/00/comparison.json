{"files":[{"patch":"@@ -218,1 +218,1 @@\n-    site->commit_memory(rgn->committed_size());\n+    site->commit_memory(VirtualMemoryTracker::Instance::committed_size(rgn));\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -425,1 +425,1 @@\n-  bool all_committed = reserved_rgn->size() == reserved_rgn->committed_size();\n+  bool all_committed = reserved_rgn->size() == VirtualMemoryTracker::Instance::committed_size(reserved_rgn);\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,2 +222,1 @@\n-size_t ReservedMemoryRegion::committed_size() const {\n-  size_t committed = 0;\n+size_t VirtualMemoryTracker::committed_size(const ReservedMemoryRegion* rmr) {\n@@ -225,1 +224,1 @@\n-  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(*this, [&](CommittedMemoryRegion& crgn) {\n+  tree()->visit_committed_regions(*rmr, [&](CommittedMemoryRegion& crgn) {\n@@ -232,4 +231,14 @@\n-address ReservedMemoryRegion::thread_stack_uncommitted_bottom() const {\n-  address bottom = base();\n-  address top = base() + size();\n-  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(*this, [&](CommittedMemoryRegion& crgn) {\n+size_t VirtualMemoryTracker::Instance::committed_size(const ReservedMemoryRegion* rmr) {\n+  assert(_tracker != nullptr, \"Sanity check\");\n+  return _tracker->committed_size(rmr);\n+}\n+\n+address VirtualMemoryTracker::Instance::thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr) {\n+  assert(_tracker != nullptr, \"Sanity check\");\n+  return _tracker->thread_stack_uncommitted_bottom(rmr);\n+}\n+\n+address VirtualMemoryTracker::thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr) {\n+  address bottom = rmr->base();\n+  address top = rmr->end();\n+    tree()->visit_committed_regions(*rmr, [&](CommittedMemoryRegion& crgn) {\n@@ -294,1 +303,1 @@\n-      address stack_bottom = rgn->thread_stack_uncommitted_bottom();\n+      address stack_bottom = VirtualMemoryTracker::Instance::thread_stack_uncommitted_bottom(rgn);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -333,6 +333,0 @@\n-  \/\/ uncommitted thread stack bottom, above guard pages if there is any.\n-  address thread_stack_uncommitted_bottom() const;\n-\n-  size_t committed_size() const;\n-\n-\n@@ -385,0 +379,3 @@\n+  size_t committed_size(const ReservedMemoryRegion* rmr);\n+  address thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr);\n+\n@@ -407,0 +404,3 @@\n+    static size_t committed_size(const ReservedMemoryRegion* rmr);\n+    \/\/ uncommitted thread stack bottom, above guard pages if there is any.\n+    static address thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-#define check(rmr, regions) check_inner((rmr), (regions), ARRAY_SIZE(regions), __FILE__, __LINE__)\n+#define check(vmt, rmr, regions) check_inner((vmt), (rmr), (regions), ARRAY_SIZE(regions), __FILE__, __LINE__)\n@@ -55,1 +55,1 @@\n-#define check_empty(rmr)                              \\\n+#define check_empty(vmt, rmr)                              \\\n@@ -57,1 +57,1 @@\n-    check_inner((rmr), nullptr, 0, __FILE__, __LINE__);  \\\n+    check_inner((vmt), (rmr), nullptr, 0, __FILE__, __LINE__);  \\\n@@ -60,1 +60,1 @@\n-static void diagnostic_print(const ReservedMemoryRegion& rmr) {\n+static void diagnostic_print(VirtualMemoryTracker& vmt, const ReservedMemoryRegion& rmr) {\n@@ -68,1 +68,1 @@\n-static void check_inner(const ReservedMemoryRegion& rmr, R* regions, size_t regions_size, const char* file, int line) {\n+static void check_inner(VirtualMemoryTracker& vmt, const ReservedMemoryRegion& rmr, R* regions, size_t regions_size, const char* file, int line) {\n@@ -73,1 +73,1 @@\n-  diagnostic_print(rmr);\n+  diagnostic_print(vmt, rmr);\n@@ -77,1 +77,1 @@\n-  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n+  vmt.tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n@@ -87,1 +87,1 @@\n-  EXPECT_EQ(size, rmr.committed_size()) << WHERE;\n+  EXPECT_EQ(size, vmt.committed_size(&rmr)) << WHERE;\n@@ -93,1 +93,2 @@\n-\n+    VirtualMemoryTracker vmt(true);\n+    RegionsTree* rtree = vmt.tree();\n@@ -95,2 +96,1 @@\n-    ReservedSpace rs = MemoryReserver::reserve(size, mtTest);\n-    MemTracker::NmtVirtualMemoryLocker nvml;\n+    const address addr = (address)0x0000A000;\n@@ -98,1 +98,1 @@\n-    address addr = (address)rs.base();\n+    vmt.add_reserved_region(addr, size, CALLER_PC, mtTest);\n@@ -107,2 +107,1 @@\n-    ReservedMemoryRegion rmr = VirtualMemoryTracker::Instance::tree()->find_reserved_region(addr);\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n+    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n@@ -121,1 +120,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -127,1 +126,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -133,1 +132,1 @@\n-      check(rmr, r);\n+      check(vmt,rmr, r);\n@@ -138,1 +137,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 0u);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 0u);\n@@ -146,1 +145,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -153,1 +152,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -161,1 +160,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -166,1 +165,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 0u);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 0u);\n@@ -170,3 +169,2 @@\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n-    rtree->tree().remove_all();\n-\n+    VirtualMemoryTracker vmt(true);\n+    RegionsTree* rtree = vmt.tree();\n@@ -174,4 +172,1 @@\n-    ReservedSpace rs = MemoryReserver::reserve(size, mtTest);\n-    MemTracker::NmtVirtualMemoryLocker nvml;\n-\n-    address addr = (address)rs.base();\n+    const address addr = (address)0x0000A000;\n@@ -179,0 +174,1 @@\n+    vmt.add_reserved_region(addr, size, CALLER_PC, mtTest);\n@@ -201,1 +197,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -207,1 +203,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -212,1 +208,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 4 * cs);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 4 * cs);\n@@ -217,1 +213,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -222,1 +218,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 0u);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 0u);\n@@ -232,1 +228,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -240,1 +236,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -246,1 +242,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 4 * cs);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 4 * cs);\n@@ -253,1 +249,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -258,3 +254,2 @@\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n-    rtree->tree().remove_all();\n-\n+    VirtualMemoryTracker vmt(true);\n+    RegionsTree* rtree = vmt.tree();\n@@ -262,0 +257,1 @@\n+    const address addr = (address)0x0000A000;\n@@ -263,4 +259,1 @@\n-    ReservedSpace rs = MemoryReserver::reserve(size, mtTest);\n-    MemTracker::NmtVirtualMemoryLocker nvml;\n-\n-    address addr = (address)rs.base();\n+    vmt.add_reserved_region(addr, size, CALLER_PC, mtTest);\n@@ -289,1 +282,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -295,1 +288,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -301,1 +294,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -307,1 +300,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -313,1 +306,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -319,1 +312,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -325,1 +318,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -331,1 +324,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -336,1 +329,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 0u);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 0u);\n@@ -347,1 +340,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -354,1 +347,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -361,1 +354,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -366,1 +359,1 @@\n-    ASSERT_EQ(rmr.committed_size(), 0u);\n+    ASSERT_EQ(vmt.committed_size(&rmr), 0u);\n@@ -373,1 +366,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -379,1 +372,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -386,1 +379,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -392,1 +385,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -399,1 +392,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -405,1 +398,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -411,1 +404,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -419,1 +412,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -435,3 +428,2 @@\n-    RegionsTree* rtree = VirtualMemoryTracker::Instance::tree();\n-    rtree->tree().remove_all();\n-\n+    VirtualMemoryTracker vmt(true);\n+    RegionsTree* rtree = vmt.tree();\n@@ -439,4 +431,1 @@\n-    ReservedSpace rs = MemoryReserver::reserve(size, mtTest);\n-    MemTracker::NmtVirtualMemoryLocker nvml;\n-\n-    address addr = (address)rs.base();\n+    const address addr = (address)0x0000A000;\n@@ -444,0 +433,1 @@\n+    vmt.add_reserved_region(addr, size, CALLER_PC, mtTest);\n@@ -462,1 +452,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -466,1 +456,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -478,1 +468,1 @@\n-        check(rmr, r);\n+        check(vmt, rmr, r);\n@@ -488,1 +478,1 @@\n-        check(rmr, r);\n+        check(vmt, rmr, r);\n@@ -498,1 +488,1 @@\n-        check(rmr, r);\n+        check(vmt, rmr, r);\n@@ -502,1 +492,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -508,1 +498,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -516,1 +506,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -519,1 +509,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -526,1 +516,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -529,1 +519,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -536,1 +526,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -539,1 +529,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -546,1 +536,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -549,1 +539,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n@@ -556,1 +546,1 @@\n-      check(rmr, r);\n+      check(vmt, rmr, r);\n@@ -559,1 +549,1 @@\n-      check_empty(rmr);\n+      check_empty(vmt, rmr);\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":80,"deletions":90,"binary":false,"changes":170,"status":"modified"}]}