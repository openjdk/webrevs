{"files":[{"patch":"@@ -247,0 +247,1 @@\n+            setSuccess(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/referringObjects\/referringObjects001\/referringObjects001.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,6 +48,5 @@\n- *         - check that thread group have only 1 referrer: parent thread group\n- *         - check that threre are no references to test threads in target VM\n- *       - Debugger VM\n- *         - test ObjectReference.disableCollection, ObjectReference.enableCollection for ThreadGroupReference:\n- *         can't force collection of thread group because of thread group always has 1 referrer - parent thread group, so\n- *         just test disableCollection\/enableCollection don't throw any unexpected exceptions\n+ *         - force GC\n+ *         - check that the test thread group has been collected. The reference from the\n+ *           parent thread group is weak and should not prevent the test thread group from\n+ *           being collected.\n+ *         - check that there are no references to test threads in target VM\n@@ -110,3 +109,2 @@\n-                log\n-                        .complain(\"List with wrong size was returned by ObjectReference.referringObjects(ThreadGroupReference): \"\n-                                + referrerCount + \", expected: \" + expectedCount);\n+                log.complain(\"List with wrong size was returned by ObjectReference.referringObjects(ThreadGroupReference): \"\n+                             + referrerCount + \", expected: \" + expectedCount);\n@@ -184,1 +182,5 @@\n-        checkDebugeeAnswer_instances(\"java.lang.ThreadGroup\", threadGroupsToFilter.size() + 1);\n+        \/\/ Force the test ThreadGroup to be collected. The only reference to it is a weak\n+        \/\/ reference from the parent ThreadGroup.\n+        forceGC();\n+\n+        checkDebugeeAnswer_instances(\"java.lang.ThreadGroup\", threadGroupsToFilter.size());\n@@ -190,2 +192,8 @@\n-        \/\/ 1 referrer(parent thread group) is left\n-        checkThreadGroupReferrersCount(threadGroups, 1);\n+        if (threadGroups.size() != 0) {\n+            setSuccess(false);\n+            log.complain(\"All test threads groups should be removed\");\n+            log.complain(\"Unexpected threads groups:\");\n+            for (ObjectReference objectReference : threadGroups) {\n+                log.complain(objectReference.toString());\n+            }\n+        }\n@@ -198,0 +206,1 @@\n+            setSuccess(false);\n@@ -204,32 +213,0 @@\n-\n-        checkThreadGroupDisableCollection(threadGroups);\n-    }\n-\n-    \/\/ can't force collection of thread group because of 1 reference is always\n-    \/\/ left in parent tread group\n-    public void checkThreadGroupDisableCollection(List<ObjectReference> objectReferences) {\n-        try {\n-            for (ObjectReference objectReference : objectReferences)\n-                objectReference.disableCollection();\n-        } catch (Throwable t) {\n-            log.complain(\"Unexpected exception: \" + t);\n-            t.printStackTrace(log.getOutStream());\n-        }\n-\n-        forceGC();\n-        try {\n-            for (ObjectReference objectReference : objectReferences)\n-                objectReference.enableCollection();\n-        } catch (Throwable t) {\n-            log.complain(\"Unexpected exception: \" + t);\n-            t.printStackTrace(log.getOutStream());\n-        }\n-\n-        forceGC();\n-        try {\n-            for (ObjectReference objectReference : objectReferences)\n-                objectReference.referringObjects(0);\n-        } catch (Throwable t) {\n-            log.complain(\"Unexpected exception: \" + t);\n-            t.printStackTrace(log.getOutStream());\n-        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/referringObjects\/referringObjects003\/referringObjects003.java","additions":22,"deletions":45,"binary":false,"changes":67,"status":"modified"}]}