{"files":[{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4464774\n+ * @requires (os.family == \"windows\")\n+ * @summary JFileChooser: selection of left-side folder buttons shown incorrectly\n+            in Windows L&F\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4464774\n+ *\/\n+\n+import javax.swing.JFileChooser;\n+import javax.swing.UIManager;\n+\n+public class bug4464774 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click any button from the buttons to the left\n+            (\"Documents\", \"Desktop\", \"My Computer\" etc.) in FileChooser dialog.\n+            When the button is toggled, it should be lowered and\n+            should NOT have focus painted inside it (black dotted frame).\n+\n+            If the above is true, press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] argv) throws Exception {\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(65)\n+                .rows(10)\n+                .testUI(() -> {\n+                    JFileChooser jfc = new JFileChooser();\n+                    jfc.setControlButtonsAreShown(false);\n+                    return jfc;\n+                })\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4464774.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4522756\n+ * @requires (os.family == \"windows\")\n+ * @summary Verifies that the Desktop icon is not missing when\n+            JFileChooser is opened for the first time.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4522756\n+ *\/\n+\n+import javax.swing.JFileChooser;\n+import javax.swing.UIManager;\n+\n+public class bug4522756 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify the following:\n+\n+            1. If Desktop icon image is present on the Desktop button\n+               on the left panel of JFileChooser.\n+            2. Press Desktop button. Check that you actually\n+               go up to the desktop.\n+\n+            If the above is true, press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .rows(12)\n+                .testUI(() -> {\n+                    JFileChooser jfc = new JFileChooser();\n+                    jfc.setControlButtonsAreShown(false);\n+                    return jfc;\n+                })\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4522756.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4759934\n+ * @summary windows activation problem\n+ * @library \/javax\/swing\/regtesthelpers\n+ * @build Util\n+ * @run main bug4759934\n+ *\/\n+\n+import java.awt.Dialog;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4759934 {\n+    private static JFrame fr;\n+    private static Dialog dlg;\n+    private static JFileChooser jfc;\n+\n+    private static JButton frameBtn;\n+    private static JButton dialogBtn;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+            robot.setAutoDelay(50);\n+\n+            SwingUtilities.invokeAndWait(bug4759934::createTestUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point frameBtnLoc = Util.getCenterPoint(frameBtn);\n+            robot.mouseMove(frameBtnLoc.x, frameBtnLoc.y);\n+            robot.mousePress(MouseEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(MouseEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(500);\n+\n+            Point dlgBtnLoc = Util.getCenterPoint(dialogBtn);\n+            robot.mouseMove(dlgBtnLoc.x , dlgBtnLoc.y);\n+            robot.mousePress(MouseEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(MouseEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(500);\n+\n+            robot.keyPress(KeyEvent.VK_ESCAPE);\n+            robot.keyRelease(KeyEvent.VK_ESCAPE);\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frameBtn.hasFocus() && !dialogBtn.hasFocus()) {\n+                    throw new RuntimeException(\"Test failed! Focus was passed back\" +\n+                            \" to Frame instead of Dialog\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (dlg != null) {\n+                    dlg.dispose();\n+                }\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createTestUI() {\n+        fr = new JFrame(\"bug4759934 - JFrame\");\n+\n+        frameBtn = new JButton(\"Show Dialog\");\n+        frameBtn.addActionListener(e -> createDialog());\n+        fr.add(frameBtn);\n+\n+        fr.setSize(300, 200);\n+        fr.setLocationRelativeTo(null);\n+        fr.setVisible(true);\n+    }\n+\n+    private static void createDialog() {\n+        dlg = new JDialog(fr, \"bug4759934 - JDialog\");\n+\n+        dialogBtn = new JButton(\"Show FileChooser\");\n+        dlg.add(dialogBtn);\n+\n+        dialogBtn.addActionListener(e -> {\n+            jfc = new JFileChooser();\n+            jfc.showOpenDialog(dlg);\n+        });\n+\n+        dlg.setSize(300, 200);\n+        dlg.setLocation(fr.getX() + fr.getWidth() + 10, fr.getY());\n+        dlg.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4759934.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4943900\n+ * @summary Tests that FileFilter combo box is shown in FileChooser\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4943900\n+ *\/\n+\n+import java.io.File;\n+import javax.swing.JComponent;\n+import javax.swing.JFileChooser;\n+import javax.swing.UIManager;\n+import javax.swing.filechooser.FileFilter;\n+\n+public class bug4943900 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+        <html>\n+        <p> 1. When the test runs a JFileChooser will be displayed.<\/p>\n+\n+        <p> 2. Ensure that there is a Filter combo box with these two items:\n+         - Text Files (*.txt)  [must be selected when the dialog opens]\n+         - All Files <\/p>\n+\n+        <p> 3. Leave the \"Text files\" item selected and check that the\n+        filter works: only *.txt files can appear in the file list.\n+        You can navigate directories in the FileChooser and find one\n+        that contains some *.txt files to ensure they are shown in\n+        the file list. On macOS when the text filter is applied verify\n+        that the non-text files are greyed out.<\/p>\n+\n+        <p>4. Try switching the filters and ensure that the file list\n+        is updated properly.<\/p>\n+\n+        <p>If the FileFilter works correctly, press <b>Pass<\/b> else\n+        press <b>Fail<\/b><\/p>.\n+        <\/html>\n+        \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+\n+        PassFailJFrame.builder()\n+                .title(\"bug4943900 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(14)\n+                .columns(60)\n+                .testUI(bug4943900::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JComponent createAndShowUI() {\n+        JFileChooser fc = new JFileChooser();\n+        fc.setControlButtonsAreShown(false);\n+        TextFileFilter filter = new TextFileFilter();\n+        fc.setFileFilter(filter);\n+        return fc;\n+    }\n+\n+    private static final class TextFileFilter extends FileFilter {\n+        @Override\n+        public boolean accept(File f) {\n+            if (f != null) {\n+                if (f.isDirectory()) {\n+                    return true;\n+                }\n+                String extension = getExtension(f);\n+                return extension != null && extension.equals(\"txt\");\n+            }\n+            return false;\n+        }\n+\n+        @Override\n+        public String getDescription() {\n+            return \"Text Files (*.txt)\";\n+        }\n+\n+        private static String getExtension(File f) {\n+            if (f != null) {\n+                String filename = f.getName();\n+                int i = filename.lastIndexOf('.');\n+                if (i > 0 && i < filename.length() - 1) {\n+                    return filename.substring(i + 1).toLowerCase();\n+                }\n+            }\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/bug4943900.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4194862\n+ * @summary Tests that internal frame-based dialogs are centered relative\n+            to their parents\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4194862\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JOptionPane;\n+\n+public class bug4194862 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            In the internal frame titled \"Main\",\n+            click the \"Show JOptionPane Dialog\" button.\n+            A dialog will appear. It should be centered with\n+            respect to the JInternalFrame - \"Main\".\n+\n+            If the above is true then click on JOptionPane's \"YES\" button\n+            to PASS else click JOptionPane's \"NO\" button to FAIL the test.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception{\n+        PassFailJFrame.builder()\n+                .title(\"Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4194862::createAndShowUI)\n+                .screenCapture()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame frame = new JFrame(\"bug4194862 - JInternalFrame JOptionPane\");\n+        JDesktopPane desktop = new JDesktopPane();\n+        frame.add(desktop);\n+        JInternalFrame jInternalFrame = new JInternalFrame(\"Main\", true);\n+        desktop.add(jInternalFrame);\n+        jInternalFrame.setBounds(5, 30, 390, 240);\n+        jInternalFrame.setVisible(true);\n+\n+        JButton b = new JButton(\"Show JOptionPane Dialog\");\n+        b.addActionListener(e -> {\n+            int retVal = JOptionPane.showInternalConfirmDialog(\n+                                      jInternalFrame, \"Am I centered?\",\n+                                      \"bug4194862 JOptionPane\", JOptionPane.YES_NO_OPTION);\n+            switch (retVal) {\n+                case JOptionPane.YES_OPTION -> PassFailJFrame.forcePass();\n+                case JOptionPane.NO_OPTION ->\n+                        PassFailJFrame.forceFail(\"JOptionPane isn't centered\"\n+                                + \" within JInternalFrame \\\"Main\\\"\");\n+            }\n+        });\n+        jInternalFrame.add(b);\n+\n+        for (int i = 0; i < 4; i++) {\n+            JInternalFrame f = new JInternalFrame(\"JIF: \"+ i);\n+            f.setBounds(i * 50, i * 33, 120, 120);\n+            f.setVisible(true);\n+            desktop.add(f);\n+        }\n+        frame.setSize(450, 400);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/bug4194862.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}