{"files":[{"patch":"@@ -244,1 +244,0 @@\n-  nonstatic_field(JavaThread,                  _poll_data,                                    SafepointMechanism::ThreadData)        \\\n@@ -412,0 +411,1 @@\n+  nonstatic_field(Thread,                   _poll_data,                                       SafepointMechanism::ThreadData)        \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -241,2 +241,0 @@\n- private:\n-  SafepointMechanism::ThreadData _poll_data;\n@@ -601,0 +599,16 @@\n+  static ByteSize polling_word_offset() {\n+    ByteSize offset = byte_offset_of(Thread, _poll_data) +\n+                      byte_offset_of(SafepointMechanism::ThreadData, _polling_word);\n+    \/\/ At least on x86_64, safepoint polls encode the offset as disp8 imm.\n+    assert(in_bytes(offset) < 128, \"Offset >= 128\");\n+    return offset;\n+  }\n+\n+  static ByteSize polling_page_offset() {\n+    ByteSize offset = byte_offset_of(Thread, _poll_data) +\n+                      byte_offset_of(SafepointMechanism::ThreadData, _polling_page);\n+    \/\/ At least on x86_64, safepoint polls encode the offset as disp8 imm.\n+    assert(in_bytes(offset) < 128, \"Offset >= 128\");\n+    return offset;\n+  }\n+\n@@ -790,2 +804,0 @@\n-  static ByteSize polling_word_offset()          { return byte_offset_of(JavaThread, _poll_data) + byte_offset_of(SafepointMechanism::ThreadData, _polling_word);}\n-  static ByteSize polling_page_offset()          { return byte_offset_of(JavaThread, _poll_data) + byte_offset_of(SafepointMechanism::ThreadData, _polling_page);}\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"runtime\/safepointMechanism.hpp\"\n@@ -112,0 +113,1 @@\n+  friend class JavaThread;\n@@ -138,0 +140,5 @@\n+  \/\/ Poll data is used in generated code for safepoint polls.\n+  \/\/ It is important for performance to put this at lower offset\n+  \/\/ in Thread. The accessors are in JavaThread.\n+  SafepointMechanism::ThreadData _poll_data;\n+\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    @IR(counts = { IRNode.NOP, \"1\" })\n+    @IR(counts = { IRNode.NOP, \"<=1\" })\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestPadding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}