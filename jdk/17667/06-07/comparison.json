{"files":[{"patch":"@@ -2030,2 +2030,4 @@\n-      if (type != nullptr && type->is_loaded() &&\n-          type->is_instance_klass() && !type->as_instance_klass()->is_interface()) {\n+      if (type != nullptr && type->is_loaded()) {\n+        \/\/ Detects non-interface instances, primitive arrays, and some object arrays.\n+        \/\/ Array receivers can only call Object methods, so we should be able to allow\n+        \/\/ all object arrays here too, even those with unloaded types.\n@@ -2136,2 +2138,1 @@\n-        code == Bytecodes::_invokedynamic ||\n-        target->get_Method()->intrinsic_id() == vmIntrinsics::_clone) {\n+        code == Bytecodes::_invokedynamic) {\n@@ -2141,12 +2142,1 @@\n-      bool success;\n-      \/\/ Clone intrinsic and inlining can only kick when instance is a primitive array,\n-      \/\/ or when the target of the clone is not a Phi node\n-      ciType* receiver_type;\n-      if (target->get_Method()->intrinsic_id() == vmIntrinsics::_clone &&\n-          ((receiver_type = state()->stack_at(state()->stack_size() - inline_target->arg_size())->exact_type()) == nullptr || \/\/ clone target is phi\n-           !receiver_type->is_array_klass() || \/\/ not array\n-           !receiver_type->as_array_klass()->element_type()->is_primitive_type())) { \/\/ not primitive array\n-        success = false;\n-      } else {\n-        success = try_inline(inline_target, holder_known, false \/* ignore_return *\/, code, better_receiver);\n-      }\n+      bool success = try_inline(inline_target, holder_known, false \/* ignore_return *\/, code, better_receiver);\n@@ -3670,0 +3660,3 @@\n+  if (_inline_bailout_msg != nullptr) {\n+    return;\n+  }\n@@ -3731,0 +3724,3 @@\n+  if (_inline_bailout_msg != nullptr) {\n+    return false;\n+  }\n@@ -4445,0 +4441,13 @@\n+  {\n+    \/\/ Peek at receiver\n+    Value recv = state()->stack_at(state()->stack_size() - callee->arg_size());\n+    ciType* receiver_type = recv->exact_type();\n+    if (receiver_type == nullptr || \/\/ clone target is phi\n+        !receiver_type->is_type_array_klass()) \/\/ not primtive array\n+    {\n+      \/\/ not primitive array\n+      inline_bailout(\"clone array not primitive\");\n+      return;\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":25,"deletions":16,"binary":false,"changes":41,"status":"modified"}]}