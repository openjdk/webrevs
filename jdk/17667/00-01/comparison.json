{"files":[{"patch":"@@ -925,1 +925,2 @@\n-    __ load(new LIR_Address(array.result(), arrayOopDesc::length_offset_in_bytes(), T_INT), len);\n+    CodeEmitInfo* null_check_info = state_for(x);\n+    __ load(new LIR_Address(array.result(), arrayOopDesc::length_offset_in_bytes(), T_INT), len, null_check_info);\n@@ -942,0 +943,1 @@\n+    info->set_force_reexecute();\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1063,1 +1063,2 @@\n-  __ load(new LIR_Address(array.result(), arrayOopDesc::length_offset_in_bytes(), T_INT), len);\n+  CodeEmitInfo* null_check_info = state_for(x);\n+  __ load(new LIR_Address(array.result(), arrayOopDesc::length_offset_in_bytes(), T_INT), len, null_check_info);\n@@ -1080,0 +1081,1 @@\n+  info->set_force_reexecute();\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3674,1 +3674,1 @@\n-  ValueStack* state_before = copy_state_for_exception();\n+  ValueStack* state_before = id == vmIntrinsics::_clone ? copy_state_before() : copy_state_for_exception();\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8302850\n+ *\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:TieredStopAtLevel=1\n+ *                   -XX:CompileOnly=compiler.c1.TestNullArrayClone::test -XX:+UnlockExperimentalVMOptions\n+ *                   -XX:CompileCommand=blackhole,compiler.c1.TestNullArrayClone::blackhole\n+ *                   compiler.c1.TestNullArrayClone\n+ *\/\n+package compiler.c1;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+public class TestNullArrayClone {\n+    public static void main(String[] args)\n+    {\n+        final int size = 10;\n+        final int[] ints = new int[size];\n+        for (int i = 0; i < ints.length; i++)\n+        {\n+            ints[i] = ThreadLocalRandom.current().nextInt();\n+        }\n+\n+        for (int i = 0; i < 1_000; i++)\n+        {\n+            int[] result = test(ints);\n+            blackhole(result);\n+        }\n+\n+        try {\n+            test(null);\n+            System.out.println(\"Expected NullPointerException to be thrown\");\n+            System.exit(97);\n+        } catch (NullPointerException e) {\n+        }\n+    }\n+\n+    static int[] test(int[] ints)\n+    {\n+        return ints.clone();\n+    }\n+\n+    static void blackhole(Object obj) {}\n+\n+\/\/    static void blackhole(Object obj)\n+\/\/    {\n+\/\/        if (obj.hashCode() == System.nanoTime())\n+\/\/        {\n+\/\/            System.out.println(obj);\n+\/\/        }\n+\/\/    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestNullArrayClone.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}