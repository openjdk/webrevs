{"files":[{"patch":"@@ -4441,11 +4441,9 @@\n-  {\n-    \/\/ Peek at receiver\n-    Value recv = state()->stack_at(state()->stack_size() - callee->arg_size());\n-    ciType* receiver_type = recv->exact_type();\n-    if (receiver_type == nullptr || \/\/ clone target is phi\n-        !receiver_type->is_type_array_klass()) \/\/ not primtive array\n-    {\n-      \/\/ not primitive array\n-      inline_bailout(\"clone array not primitive\");\n-      return;\n-    }\n+  const int args_base = state()->stack_size() - callee->arg_size();\n+  ciType* receiver_type = state()->stack_at(args_base)->exact_type();\n+  if (receiver_type == nullptr) {\n+    inline_bailout(\"must have a receiver\");\n+    return;    \n+  }\n+  if (!receiver_type->is_type_array_klass()) {\n+    inline_bailout(\"clone array not primitive\");\n+    return;\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n- *\n+ * @summary Tests that an array clone call that has been compiled with C1\n+ *          handles null values correctly.\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestNullArrayClone.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}