{"files":[{"patch":"@@ -38,1 +38,1 @@\n- * @summary Verifies Color filter on Non ICC profile\n+ * @summary Verifies Color filter on non-ICC profile\n@@ -46,5 +46,3 @@\n-        protected TestColorSpace(boolean bSrc) {\n-            super(ColorSpace.getInstance(ColorSpace.CS_sRGB).getType(),\n-                    ColorSpace.getInstance(ColorSpace.CS_sRGB).getNumComponents());\n-            csRGB = ColorSpace.getInstance(bSrc ? ColorSpace.CS_LINEAR_RGB :\n-                    ColorSpace.CS_sRGB);\n+        protected TestColorSpace(ColorSpace csRGB) {\n+            super(csRGB.getType(), csRGB.getNumComponents());\n+            this.csRGB = csRGB;\n@@ -53,0 +51,7 @@\n+        private static ColorSpace createColorSpace(boolean isSrc) {\n+            return new TestColorSpace(ColorSpace.getInstance(isSrc\n+                    ? ColorSpace.CS_LINEAR_RGB\n+                    : ColorSpace.CS_sRGB));\n+        }\n+\n+        @Override\n@@ -54,1 +59,1 @@\n-            return colorvalue;\n+            return csRGB.toRGB(colorvalue);\n@@ -57,0 +62,1 @@\n+        @Override\n@@ -58,1 +64,1 @@\n-            return rgbvalue;\n+            return csRGB.fromRGB(rgbvalue);\n@@ -61,0 +67,1 @@\n+        @Override\n@@ -65,0 +72,1 @@\n+        @Override\n@@ -71,1 +79,1 @@\n-        ColorSpace cs = new TestColorSpace(isSrc);\n+        ColorSpace cs = TestColorSpace.createColorSpace(isSrc);\n@@ -99,3 +107,3 @@\n-        BufferedImage src, dest;\n-        src = createTestImage(true);\n-        dest = createTestImage(false);\n+\n+        BufferedImage src = createTestImage(true);\n+        BufferedImage dst = createTestImage(false);\n@@ -105,1 +113,1 @@\n-        ccop.filter(src, dest);\n+        ccop.filter(src, dst);\n@@ -107,1 +115,1 @@\n-        if (compareImages(src, dest)) {\n+        if (compareImages(src, dst)) {\n","filename":"test\/jdk\/java\/awt\/color\/NonICCFilterTest.java","additions":22,"deletions":14,"binary":false,"changes":36,"status":"modified"}]}