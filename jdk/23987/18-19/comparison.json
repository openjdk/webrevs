{"files":[{"patch":"@@ -1924,1 +1924,3 @@\n-  if (reg < 64) return rc_int;\n+  const int first_float_slot = Register::number_of_registers * 2;\n+  STATIC_ASSERT(first_float_slot == MachRegisterNumbers::F0_num);\n+  if (reg < first_float_slot) return rc_int;\n@@ -1927,1 +1929,3 @@\n-  if (reg < 64+64) return rc_float;\n+  const int first_condition_register_slot = first_float_slot + FloatRegister::number_of_registers * 2;\n+  STATIC_ASSERT(first_condition_register_slot == MachRegisterNumbers::CR0_num);\n+  if (reg < first_condition_register_slot) return rc_float;\n@@ -1929,1 +1933,3 @@\n-  assert(OptoReg::is_stack(reg) || reg >= 128+8, \"flags are not expected\");\n+  const int first_vs_register_slot = first_condition_register_slot + ConditionRegister::number_of_registers;\n+  STATIC_ASSERT(first_vs_register_slot == MachRegisterNumbers::VSR0_num);\n+  assert(reg >= first_vs_register_slot, \"ConditionRegisters are not expected\");\n@@ -1932,1 +1938,3 @@\n-  if (reg < 136+256) return rc_vs;\n+  const int first_special_register_slot = first_vs_register_slot + VectorSRegister::number_of_registers * 4;\n+  STATIC_ASSERT(first_special_register_slot == MachRegisterNumbers::SR_XER_num);\n+  if (reg < first_special_register_slot) return rc_vs;\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}