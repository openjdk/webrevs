{"files":[{"patch":"@@ -699,13 +699,0 @@\n-  \/\/ Chunk2 contains *all* 8 condition code registers.\n-\n-  CR0,\n-  CR1,\n-  CR2,\n-  CR3,\n-  CR4,\n-  CR5,\n-  CR6,\n-  CR7\n-);\n-\n-alloc_class chunk3 (\n@@ -778,0 +765,12 @@\n+alloc_class chunk3 (\n+  \/\/ Chunk2 contains *all* 8 condition code registers.\n+  CR0,\n+  CR1,\n+  CR2,\n+  CR3,\n+  CR4,\n+  CR5,\n+  CR6,\n+  CR7\n+);\n+\n@@ -1924,3 +1923,2 @@\n-  const int first_float_slot = Register::number_of_registers * 2;\n-  STATIC_ASSERT(first_float_slot == MachRegisterNumbers::F0_num);\n-  if (reg < first_float_slot) return rc_int;\n+  STATIC_ASSERT((int)ConcreteRegisterImpl::max_gpr == (int)MachRegisterNumbers::F0_num);\n+  if (reg < ConcreteRegisterImpl::max_gpr) return rc_int;\n@@ -1929,7 +1927,2 @@\n-  const int first_condition_register_slot = first_float_slot + FloatRegister::number_of_registers * 2;\n-  STATIC_ASSERT(first_condition_register_slot == MachRegisterNumbers::CR0_num);\n-  if (reg < first_condition_register_slot) return rc_float;\n-\n-  const int first_vs_register_slot = first_condition_register_slot + ConditionRegister::number_of_registers;\n-  STATIC_ASSERT(first_vs_register_slot == MachRegisterNumbers::VSR0_num);\n-  assert(reg >= first_vs_register_slot, \"ConditionRegisters are not expected\");\n+  STATIC_ASSERT((int)ConcreteRegisterImpl::max_fpr == (int)MachRegisterNumbers::VSR0_num);\n+  if (reg < ConcreteRegisterImpl::max_fpr) return rc_float;\n@@ -1937,4 +1930,3 @@\n-  \/\/ We have 64 vector-scalar registers, starting at index 136.\n-  const int first_special_register_slot = first_vs_register_slot + VectorSRegister::number_of_registers * 4;\n-  STATIC_ASSERT(first_special_register_slot == MachRegisterNumbers::SR_XER_num);\n-  if (reg < first_special_register_slot) return rc_vs;\n+  \/\/ We have 64 vector-scalar registers, starting at index 128.\n+  STATIC_ASSERT((int)ConcreteRegisterImpl::max_vsr == (int)MachRegisterNumbers::CR0_num);\n+  if (reg < ConcreteRegisterImpl::max_vsr) return rc_vs;\n@@ -1942,1 +1934,1 @@\n-  \/\/ Special purpose registers are not allocated. We only accept stack from here.\n+  \/\/ Condition and special purpose registers are not allocated. We only accept stack from here.\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":20,"deletions":28,"binary":false,"changes":48,"status":"modified"}]}