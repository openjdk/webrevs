{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=22\n+version=23\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-DEFAULT_VERSION_FEATURE=22\n+DEFAULT_VERSION_FEATURE=23\n@@ -36,2 +36,2 @@\n-DEFAULT_VERSION_DATE=2024-03-19\n-DEFAULT_VERSION_CLASSFILE_MAJOR=66  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n+DEFAULT_VERSION_DATE=2024-09-17\n+DEFAULT_VERSION_CLASSFILE_MAJOR=67  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n@@ -40,2 +40,2 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"21 22\"\n-DEFAULT_JDK_SOURCE_TARGET_VERSION=22\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"21 22 23\"\n+DEFAULT_JDK_SOURCE_TARGET_VERSION=23\n","filename":"make\/conf\/version-numbers.conf","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -152,0 +152,2 @@\n+#define JAVA_23_VERSION                   67\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1478,0 +1478,3 @@\n+    \/** 67 *\/\n+    int JAVA_23_VERSION = 67;\n+\n@@ -1489,1 +1492,1 @@\n-        return JAVA_22_VERSION;\n+        return JAVA_23_VERSION;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassFile.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -297,0 +297,12 @@\n+\n+    \/**\n+     * The version introduced by the Java Platform, Standard Edition\n+     * 23.\n+     *\n+     * @since 23\n+     *\n+     * @see <a\n+     * href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se23\/html\/index.html\">\n+     * <cite>The Java Virtual Machine Specification, Java SE 23 Edition<\/cite><\/a>\n+     *\/\n+    RELEASE_23(67),\n@@ -312,1 +324,1 @@\n-        return RELEASE_22;\n+        return RELEASE_23;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ClassFileFormatVersion.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V22) {\n+        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V23) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/ClassReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,0 +315,1 @@\n+    int V23 = 0 << 16 | 67;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Opcodes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -418,0 +418,12 @@\n+\n+    \/**\n+     * The version introduced by the Java Platform, Standard Edition\n+     * 23.\n+     *\n+     * @since 23\n+     *\n+     * @see <a\n+     * href=\"https:\/\/docs.oracle.com\/javase\/specs\/jls\/se23\/html\/index.html\">\n+     * <cite>The Java Language Specification, Java SE 23 Edition<\/cite><\/a>\n+     *\/\n+    RELEASE_23,\n@@ -427,1 +439,1 @@\n-        return RELEASE_22;\n+        return RELEASE_23;\n@@ -442,1 +454,1 @@\n-            valueOf(\"RELEASE_\" + Math.min(22, intVersion)):\n+            valueOf(\"RELEASE_\" + Math.min(23, intVersion)):\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractTypeVisitor14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementKindVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementScanner14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleTypeVisitor14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_22)\n+@SupportedSourceVersion(RELEASE_23)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/TypeKindVisitor14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -141,0 +141,5 @@\n+\n+    \/**\n+      * 23, tbd\n+      *\/\n+    JDK23(\"23\"),\n@@ -193,0 +198,1 @@\n+        case JDK23  -> Target.JDK1_23;\n@@ -336,0 +342,1 @@\n+        case JDK23  -> RELEASE_23;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+        V67(67, 0),   \/\/ JDK 23\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassFile.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -104,0 +104,3 @@\n+\n+    \/** JDK 23. *\/\n+    JDK1_23(\"23\", 67, 0),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@SupportedSourceVersion(SourceVersion.RELEASE_22)\n+@SupportedSourceVersion(SourceVersion.RELEASE_23)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/PrintingProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,689 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.base\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/foreign,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] extraModulePackages jdk\/internal\/access\/foreign,jdk\/internal\/foreign\/abi,jdk\/internal\/foreign\/abi\/aarch64\/linux,jdk\/internal\/foreign\/abi\/aarch64\/macos,jdk\/internal\/foreign\/abi\/aarch64\/windows,jdk\/internal\/foreign\/abi\/fallback,jdk\/internal\/foreign\/abi\/ppc64\/aix,jdk\/internal\/foreign\/abi\/ppc64\/linux,jdk\/internal\/foreign\/abi\/riscv64\/linux,jdk\/internal\/foreign\/abi\/s390\/linux,jdk\/internal\/foreign\/abi\/x64\/sysv,jdk\/internal\/foreign\/abi\/x64\/windows,jdk\/internal\/foreign\/layout,sun\/nio\/ch,sun\/net,jdk\/internal\/foreign,jdk\/internal\/foreign,sun\/net,sun\/nio\/ch uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/InetAddressResolverProvider,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/io\/JdkConsoleProvider,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n+\n+class name java\/io\/Console\n+method name isTerminal descriptor ()Z flags 1\n+\n+class name java\/io\/FileDescriptor\n+-method name sync descriptor ()V\n+method name sync descriptor ()V thrownTypes java\/io\/SyncFailedException flags 1\n+\n+class name java\/lang\/Character$UnicodeBlock\n+field name CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+\n+class name java\/lang\/Class\n+method name forPrimitiveName descriptor (Ljava\/lang\/String;)Ljava\/lang\/Class; flags 9 signature (Ljava\/lang\/String;)Ljava\/lang\/Class<*>;\n+\n+class name java\/lang\/Module\n+-method name isNativeAccessEnabled descriptor ()Z\n+method name isNativeAccessEnabled descriptor ()Z flags 1\n+\n+class name java\/lang\/ModuleLayer$Controller\n+-method name enableNativeAccess descriptor (Ljava\/lang\/Module;)Ljava\/lang\/ModuleLayer$Controller;\n+method name enableNativeAccess descriptor (Ljava\/lang\/Module;)Ljava\/lang\/ModuleLayer$Controller; flags 1 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+\n+class name java\/lang\/StackWalker$Option\n+field name DROP_METHOD_INFO descriptor Ljava\/lang\/StackWalker$Option; flags 4019\n+\n+class name java\/lang\/String\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Comparable,java\/lang\/CharSequence,java\/lang\/constant\/Constable,java\/lang\/constant\/ConstantDesc flags 31 signature Ljava\/lang\/Object;Ljava\/io\/Serializable;Ljava\/lang\/Comparable<Ljava\/lang\/String;>;Ljava\/lang\/CharSequence;Ljava\/lang\/constant\/Constable;Ljava\/lang\/constant\/ConstantDesc;\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/util\/Spliterator$OfInt outerClass java\/util\/Spliterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/Thread\n+-method name countStackFrames descriptor ()I\n+\n+class name java\/lang\/foreign\/AddressLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfAddressImpl flags 601\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfAddressImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfAddressImpl flags 19\n+-method name withTargetLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/AddressLayout;\n+method name withTargetLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/AddressLayout; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+\n+class name java\/lang\/foreign\/Arena\n+header extends java\/lang\/Object implements java\/lang\/foreign\/SegmentAllocator,java\/lang\/AutoCloseable flags 601\n+innerclass innerClass java\/lang\/foreign\/MemorySegment$Scope outerClass java\/lang\/foreign\/MemorySegment innerClassName Scope flags 609\n+-method name allocate descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment;\n+method name allocate descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+\n+class name java\/lang\/foreign\/FunctionDescriptor\n+header extends java\/lang\/Object sealed true permittedSubclasses jdk\/internal\/foreign\/FunctionDescriptorImpl flags 601\n+\n+class name java\/lang\/foreign\/GroupLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true permittedSubclasses java\/lang\/foreign\/StructLayout,java\/lang\/foreign\/UnionLayout flags 601\n+\n+class name java\/lang\/foreign\/Linker\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/Linker$Option sealed true permittedSubclasses jdk\/internal\/foreign\/abi\/AbstractLinker flags 601\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+-method name downcallHandle descriptor (Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name downcallHandle descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/foreign\/FunctionDescriptor;Ljava\/lang\/foreign\/Arena;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/foreign\/MemorySegment;\n+method name downcallHandle descriptor (Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle; flags 481 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name downcallHandle descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle; flags 481 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/foreign\/FunctionDescriptor;Ljava\/lang\/foreign\/Arena;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/foreign\/MemorySegment; flags 481 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 401 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name java\/lang\/foreign\/Linker$Option\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/Linker sealed true permittedSubclasses jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl flags 601\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$FirstVariadicArg outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName FirstVariadicArg flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$CaptureCallState outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName CaptureCallState flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$Critical outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName Critical flags 19\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName LinkerOptionImpl flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name isTrivial descriptor ()Ljava\/lang\/foreign\/Linker$Option;\n+method name critical descriptor (Z)Ljava\/lang\/foreign\/Linker$Option; flags 9\n+\n+class name java\/lang\/foreign\/MemoryLayout\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/MemoryLayout$PathElement sealed true permittedSubclasses java\/lang\/foreign\/SequenceLayout,java\/lang\/foreign\/GroupLayout,java\/lang\/foreign\/PaddingLayout,java\/lang\/foreign\/ValueLayout flags 601\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name byteOffset descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)J\n+-method name byteOffsetHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name varHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle;\n+-method name sliceHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name select descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/foreign\/MemoryLayout;\n+-method name sequenceLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/SequenceLayout;\n+method name scale descriptor (JJ)J flags 401\n+method name scaleHandle descriptor ()Ljava\/lang\/invoke\/MethodHandle; flags 401\n+method name byteOffset descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)J flags 481\n+method name byteOffsetHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle; flags 481\n+method name varHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle; flags 481\n+method name arrayElementVarHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle; flags 481\n+method name sliceHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle; flags 481\n+method name select descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/foreign\/MemoryLayout; flags 481\n+\n+class name java\/lang\/foreign\/MemoryLayout$PathElement\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/MemoryLayout sealed true permittedSubclasses jdk\/internal\/foreign\/LayoutPath$PathElementImpl flags 601\n+innerclass innerClass jdk\/internal\/foreign\/LayoutPath$PathElementImpl outerClass jdk\/internal\/foreign\/LayoutPath innerClassName PathElementImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/foreign\/MemorySegment\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/MemorySegment$Scope sealed true permittedSubclasses jdk\/internal\/foreign\/AbstractMemorySegmentImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/MemorySegment$Scope outerClass java\/lang\/foreign\/MemorySegment innerClassName Scope flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+-method name segmentOffset descriptor (Ljava\/lang\/foreign\/MemorySegment;)J\n+-method name copyFrom descriptor (Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name getUtf8String descriptor (J)Ljava\/lang\/String;\n+-method name setUtf8String descriptor (JLjava\/lang\/String;)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V\n+-method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;)J\n+-method name asSlice descriptor (JLjava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name reinterpret descriptor (J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name reinterpret descriptor (Ljava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name reinterpret descriptor (JLjava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name get descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name set descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V\n+method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;)J flags 401\n+method name asSlice descriptor (JLjava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name reinterpret descriptor (J)Ljava\/lang\/foreign\/MemorySegment; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name reinterpret descriptor (Ljava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer;)Ljava\/lang\/foreign\/MemorySegment; flags 401 signature (Ljava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer<Ljava\/lang\/foreign\/MemorySegment;>;)Ljava\/lang\/foreign\/MemorySegment; runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name reinterpret descriptor (JLjava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer;)Ljava\/lang\/foreign\/MemorySegment; flags 401 signature (JLjava\/lang\/foreign\/Arena;Ljava\/util\/function\/Consumer<Ljava\/lang\/foreign\/MemorySegment;>;)Ljava\/lang\/foreign\/MemorySegment; runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name copyFrom descriptor (Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name getString descriptor (J)Ljava\/lang\/String; flags 401\n+method name getString descriptor (JLjava\/nio\/charset\/Charset;)Ljava\/lang\/String; flags 401\n+method name setString descriptor (JLjava\/lang\/String;)V flags 401\n+method name setString descriptor (JLjava\/lang\/String;Ljava\/nio\/charset\/Charset;)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V flags 401\n+method name get descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name set descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V flags 401\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V flags 401\n+\n+class name java\/lang\/foreign\/MemorySegment$Scope\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/MemorySegment sealed true permittedSubclasses jdk\/internal\/foreign\/MemorySessionImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/MemorySegment$Scope outerClass java\/lang\/foreign\/MemorySegment innerClassName Scope flags 609\n+\n+class name java\/lang\/foreign\/PaddingLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/PaddingLayoutImpl flags 601\n+\n+class name java\/lang\/foreign\/SegmentAllocator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+-method name allocateUtf8String descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;B)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;C)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;S)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;I)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;F)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;D)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;[B)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;[S)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;[C)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;[I)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;[F)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;[J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;[D)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljava\/lang\/foreign\/MemoryLayout;J)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljava\/lang\/foreign\/AddressLayout;Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment;\n+method name allocateFrom descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;B)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;C)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;S)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;I)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;F)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;D)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/AddressLayout;Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout;Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/ValueLayout;JJ)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;[B)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;[S)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;[C)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;[I)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;[F)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;[J)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocateFrom descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;[D)Ljava\/lang\/foreign\/MemorySegment; flags 81 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name allocate descriptor (Ljava\/lang\/foreign\/MemoryLayout;J)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+\n+class name java\/lang\/foreign\/SequenceLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/SequenceLayoutImpl flags 601\n+\n+class name java\/lang\/foreign\/StructLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/GroupLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/StructLayoutImpl flags 601\n+\n+class name java\/lang\/foreign\/SymbolLookup\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList outerClass jdk\/internal\/foreign\/MemorySessionImpl innerClassName ResourceList flags 409\n+innerclass innerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList$ResourceCleanup outerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList innerClassName ResourceCleanup flags 409\n+-method name libraryLookup descriptor (Ljava\/lang\/String;Ljava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/SymbolLookup;\n+-method name libraryLookup descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/SymbolLookup;\n+method name libraryLookup descriptor (Ljava\/lang\/String;Ljava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+method name libraryLookup descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/javac\/Restricted;\n+\n+class name java\/lang\/foreign\/UnionLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/GroupLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/UnionLayoutImpl flags 601\n+\n+class name java\/lang\/foreign\/ValueLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout nestMembers java\/lang\/foreign\/ValueLayout$OfDouble,java\/lang\/foreign\/ValueLayout$OfLong,java\/lang\/foreign\/ValueLayout$OfFloat,java\/lang\/foreign\/ValueLayout$OfInt,java\/lang\/foreign\/ValueLayout$OfShort,java\/lang\/foreign\/ValueLayout$OfChar,java\/lang\/foreign\/ValueLayout$OfByte,java\/lang\/foreign\/ValueLayout$OfBoolean sealed true permittedSubclasses java\/lang\/foreign\/ValueLayout$OfBoolean,java\/lang\/foreign\/ValueLayout$OfByte,java\/lang\/foreign\/ValueLayout$OfChar,java\/lang\/foreign\/ValueLayout$OfShort,java\/lang\/foreign\/ValueLayout$OfInt,java\/lang\/foreign\/ValueLayout$OfFloat,java\/lang\/foreign\/ValueLayout$OfLong,java\/lang\/foreign\/ValueLayout$OfDouble,java\/lang\/foreign\/AddressLayout flags 601\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfAddressImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfAddressImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfByteImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfByteImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfBooleanImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfBooleanImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfCharImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfCharImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfShortImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfShortImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfIntImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfIntImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfLongImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfLongImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfFloatImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfFloatImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfDoubleImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfDoubleImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+-method name arrayElementVarHandle descriptor ([I)Ljava\/lang\/invoke\/VarHandle;\n+method name varHandle descriptor ()Ljava\/lang\/invoke\/VarHandle; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfBoolean\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfBooleanImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfBooleanImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfBooleanImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfByte\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfByteImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfByteImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfByteImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfChar\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfCharImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfCharImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfCharImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfDouble\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfDoubleImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfDoubleImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfDoubleImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfFloat\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfFloatImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfFloatImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfFloatImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfInt\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfIntImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfIntImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfIntImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfLong\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfLongImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfLongImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfLongImpl flags 19\n+\n+class name java\/lang\/foreign\/ValueLayout$OfShort\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfShortImpl flags 601\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfShortImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfShortImpl flags 19\n+\n+class name java\/lang\/invoke\/IndirectVarHandle\n+-method name toMethodHandle descriptor (Ljava\/lang\/invoke\/VarHandle$AccessMode;)Ljava\/lang\/invoke\/MethodHandle;\n+\n+class name java\/lang\/invoke\/LazyInitializingVarHandle\n+header extends java\/lang\/invoke\/VarHandle flags 30\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass java\/lang\/invoke\/VarHandle$VarHandleDesc outerClass java\/lang\/invoke\/VarHandle innerClassName VarHandleDesc flags 19\n+method name withInvokeExactBehavior descriptor ()Ljava\/lang\/invoke\/VarHandle; flags 1\n+method name withInvokeBehavior descriptor ()Ljava\/lang\/invoke\/VarHandle; flags 1\n+method name describeConstable descriptor ()Ljava\/util\/Optional; flags 1 signature ()Ljava\/util\/Optional<Ljava\/lang\/invoke\/VarHandle$VarHandleDesc;>;\n+method name getMethodHandleUncached descriptor (I)Ljava\/lang\/invoke\/MethodHandle; flags 1\n+\n+class name java\/lang\/invoke\/MethodHandleProxies\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Modifier outerClass java\/lang\/module\/ModuleDescriptor innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Builder outerClass java\/lang\/module\/ModuleDescriptor innerClassName Builder flags 19\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+\n+class name java\/lang\/invoke\/MethodHandles\n+-method name memorySegmentViewVarHandle descriptor (Ljava\/lang\/foreign\/ValueLayout;)Ljava\/lang\/invoke\/VarHandle;\n+-method name filterValue descriptor (Ljava\/lang\/invoke\/VarHandle;Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle;\n+-method name filterCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle;\n+-method name insertCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/VarHandle;\n+-method name permuteCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;Ljava\/util\/List;[I)Ljava\/lang\/invoke\/VarHandle;\n+-method name collectCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;ILjava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle;\n+-method name dropCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/Class;)Ljava\/lang\/invoke\/VarHandle;\n+method name filterValue descriptor (Ljava\/lang\/invoke\/VarHandle;Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle; flags 9\n+method name filterCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle; flags 89\n+method name insertCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/VarHandle; flags 89\n+method name permuteCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;Ljava\/util\/List;[I)Ljava\/lang\/invoke\/VarHandle; flags 89 signature (Ljava\/lang\/invoke\/VarHandle;Ljava\/util\/List<Ljava\/lang\/Class<*>;>;[I)Ljava\/lang\/invoke\/VarHandle;\n+method name collectCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;ILjava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/VarHandle; flags 9\n+method name dropCoordinates descriptor (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/Class;)Ljava\/lang\/invoke\/VarHandle; flags 89 signature (Ljava\/lang\/invoke\/VarHandle;I[Ljava\/lang\/Class<*>;)Ljava\/lang\/invoke\/VarHandle;\n+\n+class name java\/lang\/invoke\/VarHandle\n+header extends java\/lang\/Object implements java\/lang\/constant\/Constable nestMembers java\/lang\/invoke\/VarHandle$VarHandleDesc,java\/lang\/invoke\/VarHandle$AccessMode sealed true permittedSubclasses java\/lang\/invoke\/IndirectVarHandle,java\/lang\/invoke\/LazyInitializingVarHandle,java\/lang\/invoke\/VarHandleSegmentViewBase,java\/lang\/invoke\/VarHandleByteArrayAsChars$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleByteArrayAsFloats$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleByteArrayAsInts$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleByteArrayAsShorts$ByteArrayViewVarHandle,java\/lang\/invoke\/VarHandleBooleans$Array,java\/lang\/invoke\/VarHandleBooleans$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleBooleans$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleBytes$Array,java\/lang\/invoke\/VarHandleBytes$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleBytes$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleChars$Array,java\/lang\/invoke\/VarHandleChars$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleChars$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleDoubles$Array,java\/lang\/invoke\/VarHandleDoubles$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleDoubles$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleFloats$Array,java\/lang\/invoke\/VarHandleFloats$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleFloats$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleInts$Array,java\/lang\/invoke\/VarHandleInts$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleInts$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleLongs$Array,java\/lang\/invoke\/VarHandleLongs$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleLongs$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleReferences$Array,java\/lang\/invoke\/VarHandleReferences$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleReferences$FieldStaticReadOnly,java\/lang\/invoke\/VarHandleShorts$Array,java\/lang\/invoke\/VarHandleShorts$FieldInstanceReadOnly,java\/lang\/invoke\/VarHandleShorts$FieldStaticReadOnly flags 421\n+innerclass innerClass java\/lang\/invoke\/VarHandle$AccessMode outerClass java\/lang\/invoke\/VarHandle innerClassName AccessMode flags 4019\n+innerclass innerClass java\/lang\/invoke\/VarHandle$VarHandleDesc outerClass java\/lang\/invoke\/VarHandle innerClassName VarHandleDesc flags 19\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsChars$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsChars innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsDoubles innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsFloats$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsFloats innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsInts$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsInts innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsLongs innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleByteArrayAsShorts$ByteArrayViewVarHandle outerClass java\/lang\/invoke\/VarHandleByteArrayAsShorts innerClassName ByteArrayViewVarHandle flags 408\n+innerclass innerClass java\/lang\/invoke\/VarHandleBooleans$Array outerClass java\/lang\/invoke\/VarHandleBooleans innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleBooleans$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleBooleans innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleBooleans$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleBooleans innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleBytes$Array outerClass java\/lang\/invoke\/VarHandleBytes innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleBytes$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleBytes innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleBytes$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleBytes innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleChars$Array outerClass java\/lang\/invoke\/VarHandleChars innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleChars$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleChars innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleChars$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleChars innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleDoubles$Array outerClass java\/lang\/invoke\/VarHandleDoubles innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleDoubles$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleDoubles innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleDoubles$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleDoubles innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleFloats$Array outerClass java\/lang\/invoke\/VarHandleFloats innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleFloats$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleFloats innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleFloats$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleFloats innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleInts$Array outerClass java\/lang\/invoke\/VarHandleInts innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleInts$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleInts innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleInts$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleInts innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleLongs$Array outerClass java\/lang\/invoke\/VarHandleLongs innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleLongs$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleLongs innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleLongs$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleLongs innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleReferences$Array outerClass java\/lang\/invoke\/VarHandleReferences innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleReferences$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleReferences innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleReferences$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleReferences innerClassName FieldStaticReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleShorts$Array outerClass java\/lang\/invoke\/VarHandleShorts innerClassName Array flags 18\n+innerclass innerClass java\/lang\/invoke\/VarHandleShorts$FieldInstanceReadOnly outerClass java\/lang\/invoke\/VarHandleShorts innerClassName FieldInstanceReadOnly flags 8\n+innerclass innerClass java\/lang\/invoke\/VarHandleShorts$FieldStaticReadOnly outerClass java\/lang\/invoke\/VarHandleShorts innerClassName FieldStaticReadOnly flags 8\n+\n+class name java\/lang\/reflect\/ClassFileFormatVersion\n+field name RELEASE_22 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+\n+class name java\/lang\/runtime\/SwitchBootstraps\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass java\/lang\/Enum$EnumDesc outerClass java\/lang\/Enum innerClassName EnumDesc flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup$ClassOption outerClass java\/lang\/invoke\/MethodHandles$Lookup innerClassName ClassOption flags 4019\n+\n+class name java\/net\/Inet4Address\n+method name ofLiteral descriptor (Ljava\/lang\/String;)Ljava\/net\/Inet4Address; flags 9\n+\n+class name java\/net\/Inet6Address\n+method name ofLiteral descriptor (Ljava\/lang\/String;)Ljava\/net\/InetAddress; flags 9\n+\n+class name java\/net\/InetAddress\n+method name ofLiteral descriptor (Ljava\/lang\/String;)Ljava\/net\/InetAddress; flags 9\n+\n+class name java\/nio\/channels\/FileChannel\n+-method name map descriptor (Ljava\/nio\/channels\/FileChannel$MapMode;JJLjava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/MemorySegment;\n+method name map descriptor (Ljava\/nio\/channels\/FileChannel$MapMode;JJLjava\/lang\/foreign\/Arena;)Ljava\/lang\/foreign\/MemorySegment; thrownTypes java\/io\/IOException flags 1\n+\n+class name java\/nio\/charset\/StandardCharsets\n+field name UTF_32BE descriptor Ljava\/nio\/charset\/Charset; flags 19\n+field name UTF_32LE descriptor Ljava\/nio\/charset\/Charset; flags 19\n+field name UTF_32 descriptor Ljava\/nio\/charset\/Charset; flags 19\n+\n+class name java\/nio\/file\/Path\n+method name resolve descriptor (Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/Path;)Ljava\/nio\/file\/Path; flags 81\n+method name resolve descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;)Ljava\/nio\/file\/Path; flags 81\n+\n+class name java\/security\/AsymmetricKey\n+header extends java\/lang\/Object implements java\/security\/Key flags 601\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/PrivateKey\n+header extends java\/lang\/Object implements java\/security\/AsymmetricKey,javax\/security\/auth\/Destroyable flags 601\n+\n+class name java\/security\/PublicKey\n+header extends java\/lang\/Object implements java\/security\/AsymmetricKey flags 601\n+\n+class name java\/security\/interfaces\/DSAParams\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 601\n+\n+class name java\/security\/interfaces\/DSAPrivateKey\n+method name getParams descriptor ()Ljava\/security\/interfaces\/DSAParams; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/DSAPublicKey\n+method name getParams descriptor ()Ljava\/security\/interfaces\/DSAParams; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/ECPrivateKey\n+method name getParams descriptor ()Ljava\/security\/spec\/ECParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/ECPublicKey\n+method name getParams descriptor ()Ljava\/security\/spec\/ECParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/EdECPrivateKey\n+method name getParams descriptor ()Ljava\/security\/spec\/NamedParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/EdECPublicKey\n+method name getParams descriptor ()Ljava\/security\/spec\/NamedParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name java\/security\/interfaces\/RSAPrivateKey\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/interfaces\/RSAPublicKey\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/interfaces\/XECPrivateKey\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/interfaces\/XECPublicKey\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/text\/ListFormat\n+header extends java\/text\/Format nestMembers java\/text\/ListFormat$Style,java\/text\/ListFormat$Type flags 31\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+innerclass innerClass java\/text\/ListFormat$Type outerClass java\/text\/ListFormat innerClassName Type flags 4019\n+innerclass innerClass java\/text\/ListFormat$Style outerClass java\/text\/ListFormat innerClassName Style flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name getAvailableLocales descriptor ()[Ljava\/util\/Locale; flags 9\n+method name getInstance descriptor ()Ljava\/text\/ListFormat; flags 9\n+method name getInstance descriptor (Ljava\/util\/Locale;Ljava\/text\/ListFormat$Type;Ljava\/text\/ListFormat$Style;)Ljava\/text\/ListFormat; flags 9\n+method name getInstance descriptor ([Ljava\/lang\/String;)Ljava\/text\/ListFormat; flags 9\n+method name getLocale descriptor ()Ljava\/util\/Locale; flags 1\n+method name getPatterns descriptor ()[Ljava\/lang\/String; flags 1\n+method name format descriptor (Ljava\/util\/List;)Ljava\/lang\/String; flags 1 signature (Ljava\/util\/List<Ljava\/lang\/String;>;)Ljava\/lang\/String;\n+method name format descriptor (Ljava\/lang\/Object;Ljava\/lang\/StringBuffer;Ljava\/text\/FieldPosition;)Ljava\/lang\/StringBuffer; flags 1\n+method name parse descriptor (Ljava\/lang\/String;)Ljava\/util\/List; thrownTypes java\/text\/ParseException flags 1 signature (Ljava\/lang\/String;)Ljava\/util\/List<Ljava\/lang\/String;>;\n+method name parseObject descriptor (Ljava\/lang\/String;Ljava\/text\/ParsePosition;)Ljava\/lang\/Object; flags 1\n+method name formatToCharacterIterator descriptor (Ljava\/lang\/Object;)Ljava\/text\/AttributedCharacterIterator; flags 1\n+method name equals descriptor (Ljava\/lang\/Object;)Z flags 1\n+method name hashCode descriptor ()I flags 1\n+method name toString descriptor ()Ljava\/lang\/String; flags 1\n+\n+class name java\/text\/ListFormat$Style\n+header extends java\/lang\/Enum nestHost java\/text\/ListFormat flags 4031 signature Ljava\/lang\/Enum<Ljava\/text\/ListFormat$Style;>;\n+innerclass innerClass java\/text\/ListFormat$Style outerClass java\/text\/ListFormat innerClassName Style flags 4019\n+field name FULL descriptor Ljava\/text\/ListFormat$Style; flags 4019\n+field name SHORT descriptor Ljava\/text\/ListFormat$Style; flags 4019\n+field name NARROW descriptor Ljava\/text\/ListFormat$Style; flags 4019\n+method name values descriptor ()[Ljava\/text\/ListFormat$Style; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljava\/text\/ListFormat$Style; flags 9 methodParameters 8000:null\n+\n+class name java\/text\/ListFormat$Type\n+header extends java\/lang\/Enum nestHost java\/text\/ListFormat flags 4031 signature Ljava\/lang\/Enum<Ljava\/text\/ListFormat$Type;>;\n+innerclass innerClass java\/text\/ListFormat$Type outerClass java\/text\/ListFormat innerClassName Type flags 4019\n+field name STANDARD descriptor Ljava\/text\/ListFormat$Type; flags 4019\n+field name OR descriptor Ljava\/text\/ListFormat$Type; flags 4019\n+field name UNIT descriptor Ljava\/text\/ListFormat$Type; flags 4019\n+method name values descriptor ()[Ljava\/text\/ListFormat$Type; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljava\/text\/ListFormat$Type; flags 9 methodParameters 8000:null\n+\n+class name java\/util\/concurrent\/ForkJoinPool\n+-method name invokeAll descriptor (Ljava\/util\/Collection;)Ljava\/util\/List;\n+method name invokeAllUninterruptibly descriptor (Ljava\/util\/Collection;)Ljava\/util\/List; flags 1 signature <T:Ljava\/lang\/Object;>(Ljava\/util\/Collection<+Ljava\/util\/concurrent\/Callable<TT;>;>;)Ljava\/util\/List<Ljava\/util\/concurrent\/Future<TT;>;>;\n+method name invokeAll descriptor (Ljava\/util\/Collection;)Ljava\/util\/List; thrownTypes java\/lang\/InterruptedException flags 1 signature <T:Ljava\/lang\/Object;>(Ljava\/util\/Collection<+Ljava\/util\/concurrent\/Callable<TT;>;>;)Ljava\/util\/List<Ljava\/util\/concurrent\/Future<TT;>;>;\n+\n+class name java\/util\/concurrent\/ForkJoinTask\n+method name adaptInterruptible descriptor (Ljava\/lang\/Runnable;Ljava\/lang\/Object;)Ljava\/util\/concurrent\/ForkJoinTask; flags 9 signature <T:Ljava\/lang\/Object;>(Ljava\/lang\/Runnable;TT;)Ljava\/util\/concurrent\/ForkJoinTask<TT;>;\n+method name adaptInterruptible descriptor (Ljava\/lang\/Runnable;)Ljava\/util\/concurrent\/ForkJoinTask; flags 9 signature (Ljava\/lang\/Runnable;)Ljava\/util\/concurrent\/ForkJoinTask<*>;\n+\n+class name java\/util\/concurrent\/LinkedTransferQueue\n+header extends java\/util\/AbstractQueue implements java\/util\/concurrent\/TransferQueue,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractQueue<TE;>;Ljava\/util\/concurrent\/TransferQueue<TE;>;Ljava\/io\/Serializable;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/random\/RandomGenerator\n+method name equiDoubles descriptor (DDZZ)Ljava\/util\/stream\/DoubleStream; flags 1\n+\n+class name javax\/crypto\/interfaces\/DHPrivateKey\n+method name getParams descriptor ()Ljavax\/crypto\/spec\/DHParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name javax\/crypto\/interfaces\/DHPublicKey\n+method name getParams descriptor ()Ljavax\/crypto\/spec\/DHParameterSpec; flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1041\n+\n+class name jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/ppc64\/aix\/AixPPC64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name getInstance descriptor ()Ljdk\/internal\/foreign\/abi\/ppc64\/aix\/AixPPC64Linker; flags 9\n+method name checkStructMember descriptor (Ljava\/lang\/foreign\/MemoryLayout;J)V flags 4\n+method name arrangeDowncall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljava\/lang\/invoke\/MethodHandle; flags 4\n+method name arrangeUpcall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljdk\/internal\/foreign\/abi\/AbstractLinker$UpcallStubFactory; flags 4\n+method name linkerByteOrder descriptor ()Ljava\/nio\/ByteOrder; flags 4\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/ppc64\/linux\/LinuxPPC64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name getInstance descriptor ()Ljdk\/internal\/foreign\/abi\/ppc64\/linux\/LinuxPPC64Linker; flags 9\n+method name arrangeDowncall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljava\/lang\/invoke\/MethodHandle; flags 4\n+method name arrangeUpcall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljdk\/internal\/foreign\/abi\/AbstractLinker$UpcallStubFactory; flags 4\n+method name linkerByteOrder descriptor ()Ljava\/nio\/ByteOrder; flags 4\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/ppc64\/linux\/LinuxPPC64leLinker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/s390\/linux\/LinuxS390Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name getInstance descriptor ()Ljdk\/internal\/foreign\/abi\/s390\/linux\/LinuxS390Linker; flags 9\n+method name arrangeDowncall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljava\/lang\/invoke\/MethodHandle; flags 4\n+method name arrangeUpcall descriptor (Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/foreign\/FunctionDescriptor;Ljdk\/internal\/foreign\/abi\/LinkerOptions;)Ljdk\/internal\/foreign\/abi\/AbstractLinker$UpcallStubFactory; flags 4\n+method name linkerByteOrder descriptor ()Ljava\/nio\/ByteOrder; flags 4\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/layout\/AbstractGroupLayout\n+header extends jdk\/internal\/foreign\/layout\/AbstractLayout sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/StructLayoutImpl,jdk\/internal\/foreign\/layout\/UnionLayoutImpl flags 420 signature <L:Ljdk\/internal\/foreign\/layout\/AbstractGroupLayout<TL;>;:Ljava\/lang\/foreign\/MemoryLayout;>Ljdk\/internal\/foreign\/layout\/AbstractLayout<TL;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/internal\/foreign\/layout\/AbstractLayout\n+header extends java\/lang\/Object sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/AbstractGroupLayout,jdk\/internal\/foreign\/layout\/PaddingLayoutImpl,jdk\/internal\/foreign\/layout\/SequenceLayoutImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$AbstractValueLayout flags 421 signature <L:Ljdk\/internal\/foreign\/layout\/AbstractLayout<TL;>;:Ljava\/lang\/foreign\/MemoryLayout;>Ljava\/lang\/Object;\n+innerclass innerClass jdk\/internal\/foreign\/LayoutPath$PathElementImpl outerClass jdk\/internal\/foreign\/LayoutPath innerClassName PathElementImpl flags 19\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$AbstractValueLayout outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName AbstractValueLayout flags 408\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name scale descriptor (JJ)J flags 1\n+method name scaleHandle descriptor ()Ljava\/lang\/invoke\/MethodHandle; flags 1\n+method name byteOffset descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)J flags 81\n+method name byteOffsetHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle; flags 81\n+method name varHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle; flags 81\n+method name arrayElementVarHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle; flags 81\n+method name sliceHandle descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/MethodHandle; flags 81\n+method name select descriptor ([Ljava\/lang\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/foreign\/MemoryLayout; flags 81\n+\n+class name jdk\/internal\/foreign\/layout\/StructLayoutImpl\n+method name withByteAlignment descriptor (J)Ljdk\/internal\/foreign\/layout\/AbstractGroupLayout; flags 1041 methodParameters 1000:null\n+\n+class name jdk\/internal\/foreign\/layout\/UnionLayoutImpl\n+method name withByteAlignment descriptor (J)Ljdk\/internal\/foreign\/layout\/AbstractGroupLayout; flags 1041 methodParameters 1000:null\n+\n+class name jdk\/internal\/foreign\/layout\/ValueLayouts$AbstractValueLayout\n+header extends jdk\/internal\/foreign\/layout\/AbstractLayout nestHost jdk\/internal\/foreign\/layout\/ValueLayouts sealed true permittedSubclasses jdk\/internal\/foreign\/layout\/ValueLayouts$OfBooleanImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfByteImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfCharImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfShortImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfIntImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfFloatImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfLongImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfDoubleImpl,jdk\/internal\/foreign\/layout\/ValueLayouts$OfAddressImpl flags 420 signature <V:Ljdk\/internal\/foreign\/layout\/ValueLayouts$AbstractValueLayout<TV;>;:Ljava\/lang\/foreign\/ValueLayout;>Ljdk\/internal\/foreign\/layout\/AbstractLayout<TV;>;\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$AbstractValueLayout outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName AbstractValueLayout flags 408\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfBooleanImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfBooleanImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfByteImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfByteImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfCharImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfCharImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfShortImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfShortImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfIntImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfIntImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfFloatImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfFloatImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfLongImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfLongImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfDoubleImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfDoubleImpl flags 19\n+innerclass innerClass jdk\/internal\/foreign\/layout\/ValueLayouts$OfAddressImpl outerClass jdk\/internal\/foreign\/layout\/ValueLayouts innerClassName OfAddressImpl flags 19\n+-method name arrayElementVarHandle descriptor ([I)Ljava\/lang\/invoke\/VarHandle;\n+-method name accessHandle descriptor ()Ljava\/lang\/invoke\/VarHandle;\n+method name varHandle descriptor ()Ljava\/lang\/invoke\/VarHandle; flags 11 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+-method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J\n+method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J flags 9 signature <VM:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;ITVM;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp<TVM;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.base-M.sym.txt","additions":689,"deletions":0,"binary":false,"changes":689,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/lang\/model\/SourceVersion\n+field name RELEASE_22 descriptor Ljavax\/lang\/model\/SourceVersion; flags 4019\n+\n+class name javax\/lang\/model\/element\/RecordComponentElement\n+method name asType descriptor ()Ljavax\/lang\/model\/type\/TypeMirror; flags 401\n+\n+class name javax\/lang\/model\/element\/VariableElement\n+-method name isUnnamed descriptor ()Z\n+method name isUnnamed descriptor ()Z flags 1\n+\n+class name javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/AbstractAnnotationValueVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/AbstractElementVisitor14\n+header extends javax\/lang\/model\/util\/AbstractElementVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor14\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/ElementKindVisitor14\n+header extends javax\/lang\/model\/util\/ElementKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/ElementScanner14\n+header extends javax\/lang\/model\/util\/ElementScanner9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementScanner9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/ElementScanner6\n+method name visitRecordComponent descriptor (Ljavax\/lang\/model\/element\/RecordComponentElement;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Ljavax\/lang\/model\/element\/RecordComponentElement;TP;)TR;\n+\n+class name javax\/lang\/model\/util\/Elements\n+method name getEnumConstantBody descriptor (Ljavax\/lang\/model\/element\/VariableElement;)Ljavax\/lang\/model\/element\/TypeElement; flags 1\n+\n+class name javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/SimpleAnnotationValueVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/SimpleElementVisitor14\n+header extends javax\/lang\/model\/util\/SimpleElementVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/SimpleTypeVisitor14\n+header extends javax\/lang\/model\/util\/SimpleTypeVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n+class name javax\/lang\/model\/util\/TypeKindVisitor14\n+header extends javax\/lang\/model\/util\/TypeKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/TypeKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_22;)\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.compiler-M.sym.txt","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.datatransfer\n+header exports java\/awt\/datatransfer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses sun\/datatransfer\/DesktopDatatransferService flags 8000\n+\n+class name java\/awt\/datatransfer\/Clipboard\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/datatransfer\/DataFlavor\n+header extends java\/lang\/Object implements java\/io\/Externalizable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.datatransfer-M.sym.txt","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/swing\/JFileChooser\n+-method name setFileSystemView descriptor (Ljavax\/swing\/filechooser\/FileSystemView;)V\n+method name setFileSystemView descriptor (Ljavax\/swing\/filechooser\/FileSystemView;)V flags 1 runtimeAnnotations @Ljava\/beans\/BeanProperty;(expert=Ztrue,description=\"Sets\\u005C;u0020;the\\u005C;u0020;FileSystemView\\u005C;u0020;used\\u005C;u0020;to\\u005C;u0020;get\\u005C;u0020;filesystem\\u005C;u0020;information.\")\n+method name setEnabled descriptor (Z)V flags 1\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.desktop-M.sym.txt","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.instrument\n+header exports java\/lang\/instrument requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n+class name java\/lang\/instrument\/UnmodifiableModuleException\n+header extends java\/lang\/RuntimeException flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.instrument-M.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.logging\n+header exports java\/util\/logging requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;jdk\/internal\/logger\/DefaultLoggerFinder\\u0020;impls\\u0020;sun\/util\/logging\/internal\/LoggingProviderImpl flags 8000\n+\n+class name java\/util\/logging\/ErrorManager\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/Logger\n+-method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n+-method name getLogger descriptor (Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n+-method name getAnonymousLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n+method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n+method name getLogger descriptor (Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n+method name getAnonymousLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n+\n+class name java\/util\/logging\/LoggingMXBean\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/logging\/LoggingPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/MemoryHandler\n+header extends java\/util\/logging\/Handler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/SimpleFormatter\n+header extends java\/util\/logging\/Formatter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/SocketHandler\n+header extends java\/util\/logging\/StreamHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/XMLFormatter\n+header extends java\/util\/logging\/Formatter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.logging-M.sym.txt","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,264 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.management\n+header exports java\/lang\/management,javax\/management,javax\/management\/loading,javax\/management\/modelmbean,javax\/management\/monitor,javax\/management\/openmbean,javax\/management\/relation,javax\/management\/remote,javax\/management\/timer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses javax\/management\/remote\/JMXConnectorProvider,javax\/management\/remote\/JMXConnectorServerProvider,sun\/management\/spi\/PlatformMBeanProvider provides interface\\u0020;javax\/security\/auth\/spi\/LoginModule\\u0020;impls\\u0020;com\/sun\/jmx\/remote\/security\/FileLoginModule flags 8000\n+\n+class name java\/lang\/management\/LockInfo\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/ManagementPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MemoryUsage\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MonitorInfo\n+header extends java\/lang\/management\/LockInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/RuntimeMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/PlatformManagedObject flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Attribute\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/AttributeList\n+header extends java\/util\/ArrayList flags 21 signature Ljava\/util\/ArrayList<Ljava\/lang\/Object;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadAttributeValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadBinaryOpValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadStringOperationException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ConstructorParameters\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name javax\/management\/ImmutableDescriptor\n+header extends java\/lang\/Object implements javax\/management\/Descriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanAttributeInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanConstructorInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanNotificationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanOperationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanParameterInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanPermission\n+header extends java\/security\/Permission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerDelegate\n+header extends java\/lang\/Object implements javax\/management\/MBeanServerDelegateMBean,javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanTrustPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Notification\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ObjectInstance\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Query\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StandardEmitterMBean\n+header extends javax\/management\/StandardMBean implements javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StringValueExp\n+header extends java\/lang\/Object implements javax\/management\/ValueExp flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/loading\/DefaultLoaderRepository\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/modelmbean\/InvalidTargetObjectTypeException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/modelmbean\/XMLParseException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/ArrayType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,java\/io\/Serializable flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/CompositeData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanAttributeInfoSupport\n+header extends javax\/management\/MBeanAttributeInfo implements javax\/management\/openmbean\/OpenMBeanAttributeInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanOperationInfoSupport\n+header extends javax\/management\/MBeanOperationInfo implements javax\/management\/openmbean\/OpenMBeanOperationInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/SimpleType\n+header extends javax\/management\/openmbean\/OpenType flags 31 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/TabularData,java\/util\/Map,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature Ljava\/lang\/Object;Ljavax\/management\/openmbean\/TabularData;Ljava\/util\/Map<Ljava\/lang\/Object;Ljava\/lang\/Object;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/TabularData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RelationNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RelationSupport\n+header extends java\/lang\/Object implements javax\/management\/relation\/RelationSupportMBean,javax\/management\/MBeanRegistration flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/relation\/Role\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleInfo\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RoleUnresolved\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXConnectorServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/util\/ServiceLoader$Provider outerClass java\/util\/ServiceLoader innerClassName Provider flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXServiceURL\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/NotificationResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/TargetedNotification\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management-M.sym.txt","additions":264,"deletions":0,"binary":false,"changes":264,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.management.rmi\n+header exports javax\/management\/remote\/rmi requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.naming\\u0020;flags\\u0020;0,name\\u0020;java.management\\u0020;flags\\u0020;20,name\\u0020;java.rmi\\u0020;flags\\u0020;20 provides interface\\u0020;javax\/management\/remote\/JMXConnectorProvider\\u0020;impls\\u0020;com\/sun\/jmx\/remote\/protocol\/rmi\/ClientProvider,interface\\u0020;javax\/management\/remote\/JMXConnectorServerProvider\\u0020;impls\\u0020;com\/sun\/jmx\/remote\/protocol\/rmi\/ServerProvider flags 8000\n+\n+class name javax\/management\/remote\/rmi\/RMIConnectorServer\n+header extends javax\/management\/remote\/JMXConnectorServer flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/rmi\/RMIServerImpl\n+header extends java\/lang\/Object implements java\/io\/Closeable,javax\/management\/remote\/rmi\/RMIServer flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management.rmi-M.sym.txt","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.naming\n+header exports javax\/naming,javax\/naming\/directory,javax\/naming\/event,javax\/naming\/ldap,javax\/naming\/spi,javax\/naming\/ldap\/spi requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.security.sasl\\u0020;flags\\u0020;0 uses javax\/naming\/ldap\/StartTlsResponse,javax\/naming\/spi\/InitialContextFactory,javax\/naming\/ldap\/spi\/LdapDnsProvider provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;sun\/security\/provider\/certpath\/ldap\/JdkLDAP flags 8000\n+\n+class name javax\/naming\/BinaryRefAddr\n+header extends javax\/naming\/RefAddr flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Binding\n+header extends javax\/naming\/NameClassPair flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompositeName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompoundName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/LinkException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NameClassPair\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NamingException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/RefAddr\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Reference\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/AttributeModificationException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/ModificationItem\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/SearchResult\n+header extends javax\/naming\/Binding flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.naming-M.sym.txt","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.net.http\n+header exports java\/net\/http requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.net.http-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.prefs\n+header exports java\/util\/prefs requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.xml\\u0020;flags\\u0020;0 uses java\/util\/prefs\/PreferencesFactory flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.prefs-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.rmi\n+header exports java\/rmi,java\/rmi\/dgc,java\/rmi\/registry,java\/rmi\/server,javax\/rmi\/ssl requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;0 uses java\/rmi\/server\/RMIClassLoaderSpi flags 8000\n+\n+class name java\/rmi\/RemoteException\n+header extends java\/io\/IOException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/dgc\/VMID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/ObjID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/RemoteObject\n+header extends java\/lang\/Object implements java\/rmi\/Remote,java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/ServerCloneException\n+header extends java\/lang\/CloneNotSupportedException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/UID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.rmi-M.sym.txt","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.scripting\n+header exports javax\/script requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses javax\/script\/ScriptEngineFactory flags 8000\n+\n+class name javax\/script\/ScriptException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.scripting-M.sym.txt","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.se\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.compiler\\u0020;flags\\u0020;20,name\\u0020;java.datatransfer\\u0020;flags\\u0020;20,name\\u0020;java.desktop\\u0020;flags\\u0020;20,name\\u0020;java.instrument\\u0020;flags\\u0020;20,name\\u0020;java.logging\\u0020;flags\\u0020;20,name\\u0020;java.management\\u0020;flags\\u0020;20,name\\u0020;java.management.rmi\\u0020;flags\\u0020;20,name\\u0020;java.naming\\u0020;flags\\u0020;20,name\\u0020;java.net.http\\u0020;flags\\u0020;20,name\\u0020;java.prefs\\u0020;flags\\u0020;20,name\\u0020;java.rmi\\u0020;flags\\u0020;20,name\\u0020;java.scripting\\u0020;flags\\u0020;20,name\\u0020;java.security.jgss\\u0020;flags\\u0020;20,name\\u0020;java.security.sasl\\u0020;flags\\u0020;20,name\\u0020;java.sql\\u0020;flags\\u0020;20,name\\u0020;java.sql.rowset\\u0020;flags\\u0020;20,name\\u0020;java.transaction.xa\\u0020;flags\\u0020;20,name\\u0020;java.xml\\u0020;flags\\u0020;20,name\\u0020;java.xml.crypto\\u0020;flags\\u0020;20 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.se-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.security.jgss\n+header exports javax\/security\/auth\/kerberos,org\/ietf\/jgss requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.naming\\u0020;flags\\u0020;0 provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;sun\/security\/jgss\/SunProvider flags 8000\n+\n+class name javax\/security\/auth\/kerberos\/DelegationPermission\n+header extends java\/security\/BasicPermission implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/EncryptionKey\n+header extends java\/lang\/Object implements javax\/crypto\/SecretKey flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/KerberosCredMessage\n+header extends java\/lang\/Object implements javax\/security\/auth\/Destroyable flags 31\n+innerclass innerClass java\/util\/Base64$Encoder outerClass java\/util\/Base64 innerClassName Encoder flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/KerberosKey\n+header extends java\/lang\/Object implements javax\/crypto\/SecretKey flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/KerberosPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/KerberosTicket\n+header extends java\/lang\/Object implements javax\/security\/auth\/Destroyable,javax\/security\/auth\/Refreshable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/KeyTab\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/security\/auth\/kerberos\/ServicePermission\n+header extends java\/security\/Permission implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name org\/ietf\/jgss\/GSSException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name org\/ietf\/jgss\/Oid\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.jgss-M.sym.txt","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.security.sasl\n+header exports javax\/security\/sasl requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;0 provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;com\/sun\/security\/sasl\/Provider flags 8000\n+\n+class name javax\/security\/sasl\/SaslException\n+header extends java\/io\/IOException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.sasl-M.sym.txt","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.smartcardio\n+header exports javax\/smartcardio requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;sun\/security\/smartcardio\/SunPCSC flags 8000\n+\n+class name javax\/smartcardio\/ATR\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/smartcardio\/Card\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/smartcardio\/CardChannel\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/smartcardio\/CardException\n+header extends java\/lang\/Exception flags 21\n+\n+class name javax\/smartcardio\/CardNotPresentException\n+header extends javax\/smartcardio\/CardException flags 21\n+\n+class name javax\/smartcardio\/CardPermission\n+header extends java\/security\/Permission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/smartcardio\/CardTerminal\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/smartcardio\/CommandAPDU\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/smartcardio\/ResponseAPDU\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/smartcardio\/TerminalFactorySpi\n+header extends java\/lang\/Object flags 421\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.smartcardio-M.sym.txt","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.sql\n+header exports java\/sql,javax\/sql requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;20,name\\u0020;java.transaction.xa\\u0020;flags\\u0020;20,name\\u0020;java.xml\\u0020;flags\\u0020;20 uses java\/sql\/Driver flags 8000\n+\n+class name java\/sql\/BatchUpdateException\n+header extends java\/sql\/SQLException flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name java\/sql\/ConnectionBuilder\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/sql\/DriverManager\n+-method name getConnection descriptor (Ljava\/lang\/String;Ljava\/util\/Properties;)Ljava\/sql\/Connection;\n+-method name getConnection descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/sql\/Connection;\n+-method name getConnection descriptor (Ljava\/lang\/String;)Ljava\/sql\/Connection;\n+-method name getDriver descriptor (Ljava\/lang\/String;)Ljava\/sql\/Driver;\n+-method name deregisterDriver descriptor (Ljava\/sql\/Driver;)V\n+-method name getDrivers descriptor ()Ljava\/util\/Enumeration;\n+-method name drivers descriptor ()Ljava\/util\/stream\/Stream;\n+method name getConnection descriptor (Ljava\/lang\/String;Ljava\/util\/Properties;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n+method name getConnection descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n+method name getConnection descriptor (Ljava\/lang\/String;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n+method name getDriver descriptor (Ljava\/lang\/String;)Ljava\/sql\/Driver; thrownTypes java\/sql\/SQLException flags 9\n+method name deregisterDriver descriptor (Ljava\/sql\/Driver;)V thrownTypes java\/sql\/SQLException flags 9\n+method name getDrivers descriptor ()Ljava\/util\/Enumeration; flags 9 signature ()Ljava\/util\/Enumeration<Ljava\/sql\/Driver;>;\n+method name drivers descriptor ()Ljava\/util\/stream\/Stream; flags 9 signature ()Ljava\/util\/stream\/Stream<Ljava\/sql\/Driver;>;\n+\n+class name java\/sql\/JDBCType\n+header extends java\/lang\/Enum implements java\/sql\/SQLType flags 4031 signature Ljava\/lang\/Enum<Ljava\/sql\/JDBCType;>;Ljava\/sql\/SQLType;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/sql\/SQLWarning\n+header extends java\/sql\/SQLException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/sql\/ShardingKey\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/sql\/ShardingKeyBuilder\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/sql\/Statement\n+header extends java\/lang\/Object implements java\/sql\/Wrapper,java\/lang\/AutoCloseable flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/PooledConnectionBuilder\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/sql\/XAConnectionBuilder\n+header extends java\/lang\/Object flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql-M.sym.txt","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.sql.rowset\n+header exports javax\/sql\/rowset,javax\/sql\/rowset\/serial,javax\/sql\/rowset\/spi requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;20,name\\u0020;java.naming\\u0020;flags\\u0020;20,name\\u0020;java.sql\\u0020;flags\\u0020;20 uses javax\/sql\/rowset\/RowSetFactory flags 8000\n+\n+class name javax\/sql\/rowset\/BaseRowSet\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialArray\n+header extends java\/lang\/Object implements java\/sql\/Array,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/sql\/rowset\/serial\/SerialBlob\n+header extends java\/lang\/Object implements java\/sql\/Blob,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/sql\/rowset\/serial\/SerialClob\n+header extends java\/lang\/Object implements java\/sql\/Clob,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialDatalink\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialJavaObject\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+-method name getFields descriptor ()[Ljava\/lang\/reflect\/Field;\n+method name getFields descriptor ()[Ljava\/lang\/reflect\/Field; thrownTypes javax\/sql\/rowset\/serial\/SerialException flags 1\n+\n+class name javax\/sql\/rowset\/serial\/SerialRef\n+header extends java\/lang\/Object implements java\/sql\/Ref,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialStruct\n+header extends java\/lang\/Object implements java\/sql\/Struct,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql.rowset-M.sym.txt","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.transaction.xa\n+header exports javax\/transaction\/xa requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.transaction.xa-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/xml\/catalog\/CatalogManager\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass javax\/xml\/catalog\/CatalogResolver$NotFoundAction outerClass javax\/xml\/catalog\/CatalogResolver innerClassName NotFoundAction flags 4009\n+method name catalogResolver descriptor (Ljavax\/xml\/catalog\/Catalog;Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction;)Ljavax\/xml\/catalog\/CatalogResolver; flags 9\n+\n+class name javax\/xml\/catalog\/CatalogResolver\n+header extends java\/lang\/Object implements org\/xml\/sax\/EntityResolver,javax\/xml\/stream\/XMLResolver,javax\/xml\/transform\/URIResolver,org\/w3c\/dom\/ls\/LSResourceResolver nestMembers javax\/xml\/catalog\/CatalogResolver$NotFoundAction flags 601\n+innerclass innerClass javax\/xml\/catalog\/CatalogResolver$NotFoundAction outerClass javax\/xml\/catalog\/CatalogResolver innerClassName NotFoundAction flags 4009\n+\n+class name javax\/xml\/catalog\/CatalogResolver$NotFoundAction\n+header extends java\/lang\/Enum nestHost javax\/xml\/catalog\/CatalogResolver sealed true permittedSubclasses javax\/xml\/catalog\/CatalogResolver$NotFoundAction$1,javax\/xml\/catalog\/CatalogResolver$NotFoundAction$2,javax\/xml\/catalog\/CatalogResolver$NotFoundAction$3 flags 4021 signature Ljava\/lang\/Enum<Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction;>;\n+innerclass innerClass javax\/xml\/catalog\/CatalogResolver$NotFoundAction outerClass javax\/xml\/catalog\/CatalogResolver innerClassName NotFoundAction flags 4009\n+field name CONTINUE descriptor Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 4019\n+field name IGNORE descriptor Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 4019\n+field name STRICT descriptor Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 4019\n+method name values descriptor ()[Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 9 methodParameters 8000:null\n+method name getType descriptor (Ljava\/lang\/String;)Ljavax\/xml\/catalog\/CatalogResolver$NotFoundAction; flags 9\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml-M.sym.txt","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/xml\/crypto\/dsig\/SignatureMethod\n+field name SHA3_224_RSA_MGF1 descriptor Ljava\/lang\/String; constantValue http:\/\/www.w3.org\/2007\/05\/xmldsig-more#sha3-224-rsa-MGF1 flags 19\n+field name SHA3_256_RSA_MGF1 descriptor Ljava\/lang\/String; constantValue http:\/\/www.w3.org\/2007\/05\/xmldsig-more#sha3-256-rsa-MGF1 flags 19\n+field name SHA3_384_RSA_MGF1 descriptor Ljava\/lang\/String; constantValue http:\/\/www.w3.org\/2007\/05\/xmldsig-more#sha3-384-rsa-MGF1 flags 19\n+field name SHA3_512_RSA_MGF1 descriptor Ljava\/lang\/String; constantValue http:\/\/www.w3.org\/2007\/05\/xmldsig-more#sha3-512-rsa-MGF1 flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml.crypto-M.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.accessibility\n+header exports com\/sun\/java\/accessibility\/util requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.desktop\\u0020;flags\\u0020;20 flags 8000\n+\n+class name com\/sun\/java\/accessibility\/util\/AccessibilityListenerList\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/java\/accessibility\/util\/EventID\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/java\/accessibility\/util\/GUIInitializedListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name com\/sun\/java\/accessibility\/util\/TopLevelWindowListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name com\/sun\/java\/accessibility\/util\/Translator\n+header extends javax\/accessibility\/AccessibleContext implements javax\/accessibility\/Accessible,javax\/accessibility\/AccessibleComponent flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.accessibility-M.sym.txt","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.attach\n+header exports com\/sun\/tools\/attach,com\/sun\/tools\/attach\/spi requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.jvmstat\\u0020;flags\\u0020;0 uses com\/sun\/tools\/attach\/spi\/AttachProvider provides interface\\u0020;com\/sun\/tools\/attach\/spi\/AttachProvider\\u0020;impls\\u0020;sun\/tools\/attach\/AttachProviderImpl flags 8000\n+\n+class name com\/sun\/tools\/attach\/AgentInitializationException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/tools\/attach\/AgentLoadException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/tools\/attach\/AttachNotSupportedException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/tools\/attach\/AttachOperationFailedException\n+header extends java\/io\/IOException flags 21\n+\n+class name com\/sun\/tools\/attach\/AttachPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/tools\/attach\/VirtualMachine\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/tools\/attach\/VirtualMachineDescriptor\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/tools\/attach\/spi\/AttachProvider\n+header extends java\/lang\/Object flags 421\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.attach-M.sym.txt","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.charsets\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;java\/nio\/charset\/spi\/CharsetProvider\\u0020;impls\\u0020;sun\/nio\/cs\/ext\/ExtendedCharsets flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.charsets-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/source\/doctree\/InheritDocTree\n+method name getSupertype descriptor ()Lcom\/sun\/source\/doctree\/ReferenceTree; flags 1\n+\n+class name com\/sun\/source\/tree\/AnyPatternTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/PatternTree flags 601\n+\n+class name com\/sun\/source\/tree\/Tree$Kind\n+-field name ANY_PATTERN descriptor Lcom\/sun\/source\/tree\/Tree$Kind;\n+field name ANY_PATTERN descriptor Lcom\/sun\/source\/tree\/Tree$Kind; flags 4019\n+\n+class name com\/sun\/source\/tree\/TreeVisitor\n+-method name visitAnyPattern descriptor (Lcom\/sun\/source\/tree\/AnyPatternTree;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n+method name visitAnyPattern descriptor (Lcom\/sun\/source\/tree\/AnyPatternTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 401 signature (Lcom\/sun\/source\/tree\/AnyPatternTree;TP;)TR;\n+\n+class name com\/sun\/source\/util\/DocTreeFactory\n+method name newInheritDocTree descriptor (Lcom\/sun\/source\/doctree\/ReferenceTree;)Lcom\/sun\/source\/doctree\/InheritDocTree; flags 1\n+\n+class name com\/sun\/source\/util\/SimpleTreeVisitor\n+-method name visitAnyPattern descriptor (Lcom\/sun\/source\/tree\/AnyPatternTree;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n+method name visitAnyPattern descriptor (Lcom\/sun\/source\/tree\/AnyPatternTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/tree\/AnyPatternTree;TP;)TR;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.compiler-M.sym.txt","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.crypto.cryptoki\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;sun\/security\/pkcs11\/SunPKCS11 target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.crypto.cryptoki-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.crypto.ec\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000 runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.crypto.ec-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.dynalink\n+header exports jdk\/dynalink,jdk\/dynalink\/beans,jdk\/dynalink\/linker,jdk\/dynalink\/linker\/support,jdk\/dynalink\/support requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;0 uses jdk\/dynalink\/linker\/GuardingDynamicLinkerExporter flags 8000\n+\n+class name jdk\/dynalink\/CallSiteDescriptor\n+header extends jdk\/dynalink\/SecureLookupSupplier flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/DynamicLinker\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/StackWalker$StackFrame outerClass java\/lang\/StackWalker innerClassName StackFrame flags 609\n+innerclass innerClass java\/lang\/StackWalker$Option outerClass java\/lang\/StackWalker innerClassName Option flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/NamedOperation\n+header extends java\/lang\/Object implements jdk\/dynalink\/Operation flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/Namespace\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/dynalink\/NamespaceOperation\n+header extends java\/lang\/Object implements jdk\/dynalink\/Operation flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/NoSuchDynamicMethodException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name jdk\/dynalink\/Operation\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/dynalink\/RelinkableCallSite\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/dynalink\/SecureLookupSupplier\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/StandardNamespace\n+header extends java\/lang\/Enum implements jdk\/dynalink\/Namespace flags 4031 signature Ljava\/lang\/Enum<Ljdk\/dynalink\/StandardNamespace;>;Ljdk\/dynalink\/Namespace;\n+\n+class name jdk\/dynalink\/StandardOperation\n+header extends java\/lang\/Enum implements jdk\/dynalink\/Operation flags 4031 signature Ljava\/lang\/Enum<Ljdk\/dynalink\/StandardOperation;>;Ljdk\/dynalink\/Operation;\n+\n+class name jdk\/dynalink\/beans\/MissingMemberHandlerFactory\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+\n+class name jdk\/dynalink\/linker\/GuardedInvocation\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/linker\/GuardedInvocationTransformer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+\n+class name jdk\/dynalink\/linker\/GuardingDynamicLinker\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/dynalink\/linker\/GuardingDynamicLinkerExporter\n+header extends java\/lang\/Object implements java\/util\/function\/Supplier flags 421 signature Ljava\/lang\/Object;Ljava\/util\/function\/Supplier<Ljava\/util\/List<Ljdk\/dynalink\/linker\/GuardingDynamicLinker;>;>;\n+\n+class name jdk\/dynalink\/linker\/GuardingTypeConverterFactory\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/linker\/LinkRequest\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/dynalink\/linker\/LinkerServices\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass jdk\/dynalink\/linker\/ConversionComparator$Comparison outerClass jdk\/dynalink\/linker\/ConversionComparator innerClassName Comparison flags 4019\n+\n+class name jdk\/dynalink\/linker\/MethodHandleTransformer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+\n+class name jdk\/dynalink\/linker\/MethodTypeConversionStrategy\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+\n+class name jdk\/dynalink\/linker\/TypeBasedGuardingDynamicLinker\n+header extends java\/lang\/Object implements jdk\/dynalink\/linker\/GuardingDynamicLinker flags 601\n+\n+class name jdk\/dynalink\/linker\/support\/CompositeGuardingDynamicLinker\n+header extends java\/lang\/Object implements jdk\/dynalink\/linker\/GuardingDynamicLinker flags 21\n+\n+class name jdk\/dynalink\/linker\/support\/DefaultInternalObjectFilter\n+header extends java\/lang\/Object implements jdk\/dynalink\/linker\/MethodHandleTransformer flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/linker\/support\/Guards\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/linker\/support\/Lookup\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/linker\/support\/SimpleLinkRequest\n+header extends java\/lang\/Object implements jdk\/dynalink\/linker\/LinkRequest flags 21\n+\n+class name jdk\/dynalink\/linker\/support\/TypeUtilities\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name jdk\/dynalink\/support\/AbstractRelinkableCallSite\n+header extends java\/lang\/invoke\/MutableCallSite implements jdk\/dynalink\/RelinkableCallSite flags 421\n+\n+class name jdk\/dynalink\/support\/ChainedCallSite\n+header extends jdk\/dynalink\/support\/AbstractRelinkableCallSite flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/dynalink\/support\/SimpleRelinkableCallSite\n+header extends jdk\/dynalink\/support\/AbstractRelinkableCallSite flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.dynalink-M.sym.txt","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.editpad\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.desktop\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.ed\\u0020;flags\\u0020;0 provides interface\\u0020;jdk\/internal\/editor\/spi\/BuildInEditorProvider\\u0020;impls\\u0020;jdk\/editpad\/EditPadProvider flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.editpad-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.graal.compiler\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.vm.ci\\u0020;flags\\u0020;0 target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.graal.compiler-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.graal.compiler.management\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.vm.ci\\u0020;flags\\u0020;0 target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.graal.compiler.management-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.hotspot.agent\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.datatransfer\\u0020;flags\\u0020;0,name\\u0020;java.desktop\\u0020;flags\\u0020;0,name\\u0020;java.rmi\\u0020;flags\\u0020;0,name\\u0020;java.scripting\\u0020;flags\\u0020;0 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.hotspot.agent-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.httpserver\n+header exports com\/sun\/net\/httpserver,com\/sun\/net\/httpserver\/spi requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses com\/sun\/net\/httpserver\/spi\/HttpServerProvider flags 8000\n+\n+class name com\/sun\/net\/httpserver\/HttpContext\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/net\/httpserver\/HttpPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/net\/httpserver\/HttpsConfigurator\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/net\/httpserver\/HttpsExchange\n+header extends com\/sun\/net\/httpserver\/HttpExchange flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpsParameters\n+header extends java\/lang\/Object flags 421\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.httpserver-M.sym.txt","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,243 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/internal\/foreign\/AbstractMemorySegmentImpl\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemorySegment,java\/lang\/foreign\/SegmentAllocator,java\/util\/function\/BiFunction sealed true permittedSubclasses jdk\/internal\/foreign\/HeapMemorySegmentImpl,jdk\/internal\/foreign\/NativeMemorySegmentImpl flags 421 signature Ljava\/lang\/Object;Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/SegmentAllocator;Ljava\/util\/function\/BiFunction<Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/Number;>;Ljava\/lang\/RuntimeException;>;\n+innerclass innerClass java\/lang\/foreign\/MemorySegment$Scope outerClass java\/lang\/foreign\/MemorySegment innerClassName Scope flags 609\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfByte outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfByte flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfShort outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfShort flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfChar outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfChar flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfInt outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfInt flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfFloat outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfLong outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfLong flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfDouble outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfDouble flags 19\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name segmentOffset descriptor (Ljava\/lang\/foreign\/MemorySegment;)J\n+method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;)J flags 1\n+method name asSlice descriptor (JLjava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name copyFrom descriptor (Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;J)B flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;J)Z flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;J)C flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfChar;JC)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;J)S flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfByte;JB)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfBoolean;JZ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfShort;JS)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;J)I flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfInt;JI)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;J)F flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfFloat;JF)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;J)J flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfLong;JJ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;J)D flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfDouble;JD)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;J)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/AddressLayout;JLjava\/lang\/foreign\/MemorySegment;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getString descriptor (J)Ljava\/lang\/String; flags 1\n+method name getString descriptor (JLjava\/nio\/charset\/Charset;)Ljava\/lang\/String; flags 1\n+method name setString descriptor (JLjava\/lang\/String;)V flags 1\n+method name setString descriptor (JLjava\/lang\/String;Ljava\/nio\/charset\/Charset;)V flags 1\n+\n+class name jdk\/internal\/foreign\/GlobalSession\n+header extends jdk\/internal\/foreign\/MemorySessionImpl flags 20\n+innerclass innerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList outerClass jdk\/internal\/foreign\/MemorySessionImpl innerClassName ResourceList flags 409\n+innerclass innerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList$ResourceCleanup outerClass jdk\/internal\/foreign\/MemorySessionImpl$ResourceList innerClassName ResourceCleanup flags 409\n+-method name <init> descriptor (Ljava\/lang\/Object;)V\n+method name <init> descriptor ()V flags 1\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl\n+header extends jdk\/internal\/foreign\/AbstractMemorySegmentImpl nestMembers jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfDouble,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfFloat,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfLong,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfInt,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfShort,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfChar,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfByte sealed true permittedSubclasses jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfByte,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfChar,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfShort,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfInt,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfLong,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfFloat,jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfDouble flags 420\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfDouble outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfFloat outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfLong outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfLong flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfInt outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfInt flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfShort outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfShort flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfChar outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfChar flags 19\n+innerclass innerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfByte outerClass jdk\/internal\/foreign\/HeapMemorySegmentImpl innerClassName OfByte flags 19\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfByte\n+-method name fromArray descriptor ([B)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfChar\n+-method name fromArray descriptor ([C)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfDouble\n+-method name fromArray descriptor ([D)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfFloat\n+-method name fromArray descriptor ([F)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfInt\n+-method name fromArray descriptor ([I)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfLong\n+-method name fromArray descriptor ([J)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/HeapMemorySegmentImpl$OfShort\n+-method name fromArray descriptor ([S)Ljava\/lang\/foreign\/MemorySegment;\n+method name unsafeGetOffset descriptor ()J flags 1041\n+method name heapBase descriptor ()Ljava\/util\/Optional; flags 1041\n+\n+class name jdk\/internal\/foreign\/MappedMemorySegmentImpl\n+header extends jdk\/internal\/foreign\/NativeMemorySegmentImpl flags 30\n+\n+class name jdk\/internal\/foreign\/MemorySessionImpl\n+-field name GLOBAL descriptor Ljdk\/internal\/foreign\/MemorySessionImpl;\n+-method name allocate descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment;\n+-method name heapSession descriptor (Ljava\/lang\/Object;)Ljdk\/internal\/foreign\/MemorySessionImpl;\n+-method name toMemorySession descriptor (Ljava\/lang\/foreign\/Arena;)Ljdk\/internal\/foreign\/MemorySessionImpl;\n+-method name checkValidState descriptor (Ljava\/lang\/foreign\/MemorySegment;)V\n+field name GLOBAL_SESSION descriptor Ljdk\/internal\/foreign\/MemorySessionImpl; flags 19\n+method name toMemorySession descriptor (Ljava\/lang\/foreign\/Arena;)Ljdk\/internal\/foreign\/MemorySessionImpl; flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name createHeap descriptor (Ljava\/lang\/Object;)Ljdk\/internal\/foreign\/MemorySessionImpl; flags 9\n+method name checkValidState descriptor (Ljava\/lang\/foreign\/MemorySegment;)V flags 9\n+\n+class name jdk\/internal\/foreign\/NativeMemorySegmentImpl\n+header extends jdk\/internal\/foreign\/AbstractMemorySegmentImpl sealed true permittedSubclasses jdk\/internal\/foreign\/MappedMemorySegmentImpl flags 20\n+-method name makeNativeSegmentUnchecked descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment;\n+-method name <init> descriptor ()V\n+-method name makeNativeSegment descriptor (JJLjdk\/internal\/foreign\/MemorySessionImpl;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name makeNativeSegmentUnchecked descriptor (JJLjdk\/internal\/foreign\/MemorySessionImpl;Ljava\/lang\/Runnable;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name makeNativeSegmentUnchecked descriptor (JJLjdk\/internal\/foreign\/MemorySessionImpl;)Ljava\/lang\/foreign\/MemorySegment;\n+\n+class name jdk\/internal\/foreign\/abi\/AbstractLinker\n+header extends java\/lang\/Object implements java\/lang\/foreign\/Linker sealed true permittedSubclasses jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker,jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker,jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker,jdk\/internal\/foreign\/abi\/aarch64\/windows\/WindowsAArch64Linker,jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker,jdk\/internal\/foreign\/abi\/ppc64\/aix\/AixPPC64Linker,jdk\/internal\/foreign\/abi\/ppc64\/linux\/LinuxPPC64Linker,jdk\/internal\/foreign\/abi\/ppc64\/linux\/LinuxPPC64leLinker,jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker,jdk\/internal\/foreign\/abi\/s390\/linux\/LinuxS390Linker,jdk\/internal\/foreign\/abi\/fallback\/FallbackLinker flags 421\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name checkStructMember descriptor (Ljava\/lang\/foreign\/MemoryLayout;J)V flags 4\n+\n+class name jdk\/internal\/foreign\/abi\/LinkerOptions\n+header extends java\/lang\/Object nestMembers jdk\/internal\/foreign\/abi\/LinkerOptions$Critical,jdk\/internal\/foreign\/abi\/LinkerOptions$CaptureCallState,jdk\/internal\/foreign\/abi\/LinkerOptions$FirstVariadicArg,jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl flags 21\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName LinkerOptionImpl flags 609\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$FirstVariadicArg outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName FirstVariadicArg flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$CaptureCallState outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName CaptureCallState flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$Critical outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName Critical flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name isTrivial descriptor ()Z\n+method name isCritical descriptor ()Z flags 1\n+method name allowsHeapAccess descriptor ()Z flags 1\n+\n+class name jdk\/internal\/foreign\/abi\/LinkerOptions$Critical\n+header extends java\/lang\/Record implements jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl nestHost jdk\/internal\/foreign\/abi\/LinkerOptions record true flags 31\n+recordcomponent name allowHeapAccess descriptor Z\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$Critical outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName Critical flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName LinkerOptionImpl flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+field name ALLOW_HEAP descriptor Ljdk\/internal\/foreign\/abi\/LinkerOptions$Critical; flags 9\n+field name DONT_ALLOW_HEAP descriptor Ljdk\/internal\/foreign\/abi\/LinkerOptions$Critical; flags 9\n+method name <init> descriptor (Z)V flags 1 methodParameters 0:allowHeapAccess\n+method name validateForDowncall descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;)V flags 1\n+method name toString descriptor ()Ljava\/lang\/String; flags 11\n+method name hashCode descriptor ()I flags 11\n+method name equals descriptor (Ljava\/lang\/Object;)Z flags 11\n+method name allowHeapAccess descriptor ()Z flags 1\n+\n+-class name jdk\/internal\/foreign\/abi\/LinkerOptions$IsTrivial\n+\n+class name jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl\n+header extends java\/lang\/Object implements java\/lang\/foreign\/Linker$Option nestHost jdk\/internal\/foreign\/abi\/LinkerOptions sealed true permittedSubclasses jdk\/internal\/foreign\/abi\/LinkerOptions$CaptureCallState,jdk\/internal\/foreign\/abi\/LinkerOptions$FirstVariadicArg,jdk\/internal\/foreign\/abi\/LinkerOptions$Critical flags 601\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$LinkerOptionImpl outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName LinkerOptionImpl flags 609\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$CaptureCallState outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName CaptureCallState flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$FirstVariadicArg outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName FirstVariadicArg flags 19\n+innerclass innerClass jdk\/internal\/foreign\/abi\/LinkerOptions$Critical outerClass jdk\/internal\/foreign\/abi\/LinkerOptions innerClassName Critical flags 19\n+\n+class name jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n+class name jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker\n+header extends jdk\/internal\/foreign\/abi\/AbstractLinker flags 31\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+method name canonicalLayouts descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/foreign\/MemoryLayout;>;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.incubator.foreign-M.sym.txt","additions":243,"deletions":0,"binary":false,"changes":243,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.incubator.vector\n+header exports jdk\/incubator\/vector requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 resolution 9 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.incubator.vector-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.internal.ed\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.internal.ed-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.internal.jvmstat\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses sun\/jvmstat\/monitor\/MonitoredHostService provides interface\\u0020;sun\/jvmstat\/monitor\/MonitoredHostService\\u0020;impls\\u0020;sun\/jvmstat\/perfdata\/monitor\/protocol\/file\/MonitoredHostFileService\\u005C;u002C;sun\/jvmstat\/perfdata\/monitor\/protocol\/local\/MonitoredHostLocalService target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.internal.jvmstat-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.internal.le\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;jdk\/internal\/io\/JdkConsoleProvider\\u0020;impls\\u0020;jdk\/internal\/org\/jline\/JdkConsoleProviderImpl target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.internal.le-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.internal.opt\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.internal.opt-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.internal.vm.ci\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses jdk\/vm\/ci\/services\/JVMCIServiceLocator,jdk\/vm\/ci\/hotspot\/HotSpotJVMCIBackendFactory provides interface\\u0020;jdk\/vm\/ci\/hotspot\/HotSpotJVMCIBackendFactory\\u0020;impls\\u0020;jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotJVMCIBackendFactory\\u005C;u002C;jdk\/vm\/ci\/hotspot\/amd64\/AMD64HotSpotJVMCIBackendFactory\\u005C;u002C;jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotJVMCIBackendFactory target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.internal.vm.ci-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jartool\n+header exports jdk\/security\/jarsigner requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0 provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;sun\/tools\/jar\/JarToolProvider target linux-amd64 moduleMainClass sun\/tools\/jar\/Main flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jartool-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.javadoc\n+header exports jdk\/javadoc\/doclet requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.xml\\u0020;flags\\u0020;0,name\\u0020;java.compiler\\u0020;flags\\u0020;20,name\\u0020;jdk.compiler\\u0020;flags\\u0020;20,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0 provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/javadoc\/internal\/tool\/JavadocToolProvider,interface\\u0020;javax\/tools\/DocumentationTool\\u0020;impls\\u0020;jdk\/javadoc\/internal\/api\/JavadocTool,interface\\u0020;javax\/tools\/Tool\\u0020;impls\\u0020;jdk\/javadoc\/internal\/api\/JavadocTool,interface\\u0020;com\/sun\/tools\/doclint\/DocLint\\u0020;impls\\u0020;jdk\/javadoc\/internal\/doclint\/DocLint flags 8000\n+\n+class name jdk\/javadoc\/doclet\/Reporter\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+\n+class name jdk\/javadoc\/doclet\/StandardDoclet\n+header extends java\/lang\/Object implements jdk\/javadoc\/doclet\/Doclet flags 21\n+innerclass innerClass jdk\/javadoc\/doclet\/Doclet$Option outerClass jdk\/javadoc\/doclet\/Doclet innerClassName Option flags 609\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.javadoc-M.sym.txt","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jcmd\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.attach\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.jvmstat\\u0020;flags\\u0020;0 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jcmd-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jconsole\n+header exports com\/sun\/tools\/jconsole requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.management.rmi\\u0020;flags\\u0020;0,name\\u0020;java.rmi\\u0020;flags\\u0020;0,name\\u0020;jdk.attach\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.jvmstat\\u0020;flags\\u0020;0,name\\u0020;jdk.management\\u0020;flags\\u0020;0,name\\u0020;jdk.management.agent\\u0020;flags\\u0020;0,name\\u0020;java.desktop\\u0020;flags\\u0020;20,name\\u0020;java.management\\u0020;flags\\u0020;20 uses com\/sun\/tools\/jconsole\/JConsolePlugin flags 8000\n+\n+class name com\/sun\/tools\/jconsole\/JConsolePlugin\n+header extends java\/lang\/Object flags 421\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jconsole-M.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jdeps\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.compiler\\u0020;flags\\u0020;0,name\\u0020;jdk.compiler\\u0020;flags\\u0020;0 provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;com\/sun\/tools\/javap\/Main$JavapToolProvider\\u005C;u002C;com\/sun\/tools\/jdeps\/Main$JDepsToolProvider flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jdeps-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,398 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jdi\n+header exports com\/sun\/jdi,com\/sun\/jdi\/connect,com\/sun\/jdi\/connect\/spi,com\/sun\/jdi\/event,com\/sun\/jdi\/request requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.attach\\u0020;flags\\u0020;0,name\\u0020;jdk.jdwp.agent\\u0020;flags\\u0020;0 uses com\/sun\/jdi\/connect\/Connector,com\/sun\/jdi\/connect\/spi\/TransportService provides interface\\u0020;com\/sun\/jdi\/connect\/Connector\\u0020;impls\\u0020;com\/sun\/tools\/jdi\/ProcessAttachingConnector\\u005C;u002C;com\/sun\/tools\/jdi\/RawCommandLineLauncher\\u005C;u002C;com\/sun\/tools\/jdi\/SocketAttachingConnector\\u005C;u002C;com\/sun\/tools\/jdi\/SocketListeningConnector\\u005C;u002C;com\/sun\/tools\/jdi\/SunCommandLineLauncher flags 8000\n+\n+class name com\/sun\/jdi\/AbsentInformationException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/Accessible\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/ArrayReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ArrayType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/BooleanType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/BooleanValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue flags 601\n+\n+class name com\/sun\/jdi\/Bootstrap\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/jdi\/ByteType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/ByteValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ByteValue;>;\n+\n+class name com\/sun\/jdi\/CharType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/CharValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/CharValue;>;\n+\n+class name com\/sun\/jdi\/ClassLoaderReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ClassNotLoadedException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/ClassNotPreparedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/ClassObjectReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ClassType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/DoubleType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/DoubleValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/DoubleValue;>;\n+\n+class name com\/sun\/jdi\/Field\n+header extends java\/lang\/Object implements com\/sun\/jdi\/TypeComponent,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/TypeComponent;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Field;>;\n+\n+class name com\/sun\/jdi\/FloatType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/FloatValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/FloatValue;>;\n+\n+class name com\/sun\/jdi\/IncompatibleThreadStateException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/InconsistentDebugInfoException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/IntegerType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/IntegerValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/IntegerValue;>;\n+\n+class name com\/sun\/jdi\/InterfaceType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/InternalException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidCodeIndexException\n+header extends java\/lang\/RuntimeException flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+\n+class name com\/sun\/jdi\/InvalidLineNumberException\n+header extends java\/lang\/RuntimeException flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+\n+class name com\/sun\/jdi\/InvalidModuleException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidStackFrameException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidTypeException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/InvocationException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/JDIPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/jdi\/LocalVariable\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/LocalVariable;>;\n+\n+class name com\/sun\/jdi\/Locatable\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/Location\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Location;>;\n+\n+class name com\/sun\/jdi\/LongType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/LongValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/LongValue;>;\n+\n+class name com\/sun\/jdi\/Method\n+header extends java\/lang\/Object implements com\/sun\/jdi\/TypeComponent,com\/sun\/jdi\/Locatable,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/TypeComponent;Lcom\/sun\/jdi\/Locatable;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Method;>;\n+\n+class name com\/sun\/jdi\/Mirror\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/ModuleReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/MonitorInfo\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/ObjectCollectedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/ObjectReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/OpaqueFrameException\n+header extends java\/lang\/RuntimeException sealed true flags 21\n+\n+class name com\/sun\/jdi\/PathSearchingVirtualMachine\n+header extends java\/lang\/Object implements com\/sun\/jdi\/VirtualMachine flags 601\n+\n+class name com\/sun\/jdi\/PrimitiveType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type flags 601\n+\n+class name com\/sun\/jdi\/PrimitiveValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/ReferenceType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type,java\/lang\/Comparable,com\/sun\/jdi\/Accessible flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Type;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ReferenceType;>;Lcom\/sun\/jdi\/Accessible;\n+\n+class name com\/sun\/jdi\/ShortType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/ShortValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ShortValue;>;\n+\n+class name com\/sun\/jdi\/StackFrame\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/StringReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ThreadGroupReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ThreadReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/Type\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/TypeComponent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,com\/sun\/jdi\/Accessible flags 601\n+\n+class name com\/sun\/jdi\/VMCannotBeModifiedException\n+header extends java\/lang\/UnsupportedOperationException flags 21\n+\n+class name com\/sun\/jdi\/VMDisconnectedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/VMMismatchException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/VMOutOfMemoryException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/Value\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/VirtualMachine\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/VirtualMachineManager\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/VoidType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type flags 601\n+\n+class name com\/sun\/jdi\/VoidValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/connect\/AttachingConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/IllegalConnectorArgumentsException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/connect\/LaunchingConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/ListeningConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/Transport\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/connect\/TransportTimeoutException\n+header extends java\/io\/IOException flags 21\n+\n+class name com\/sun\/jdi\/connect\/VMStartException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/connect\/spi\/ClosedConnectionException\n+header extends java\/io\/IOException flags 21\n+\n+class name com\/sun\/jdi\/connect\/spi\/Connection\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/jdi\/event\/AccessWatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/WatchpointEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/BreakpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ClassPrepareEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/ClassUnloadEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/Event\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/event\/EventIterator\n+header extends java\/lang\/Object implements java\/util\/Iterator flags 601 signature Ljava\/lang\/Object;Ljava\/util\/Iterator<Lcom\/sun\/jdi\/event\/Event;>;\n+\n+class name com\/sun\/jdi\/event\/EventQueue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/event\/EventSet\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/util\/Set flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/util\/Set<Lcom\/sun\/jdi\/event\/Event;>;\n+\n+class name com\/sun\/jdi\/event\/ExceptionEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/LocatableEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/event\/MethodEntryEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MethodExitEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ModificationWatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/WatchpointEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorContendedEnterEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorContendedEnteredEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorWaitEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorWaitedEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/StepEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ThreadDeathEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/ThreadStartEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMDeathEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMDisconnectEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMStartEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/WatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/request\/AccessWatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/WatchpointRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/BreakpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/request\/ClassPrepareRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ClassUnloadRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/DuplicateRequestException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/request\/EventRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/request\/EventRequestManager\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/request\/ExceptionRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/InvalidRequestStateException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/request\/MethodEntryRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MethodExitRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ModificationWatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/WatchpointRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorContendedEnterRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorContendedEnteredRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorWaitRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorWaitedRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/StepRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ThreadDeathRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ThreadStartRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/VMDeathRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/WatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jdi-M.sym.txt","additions":398,"deletions":0,"binary":false,"changes":398,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jdwp.agent\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jdwp.agent-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jfr\n+header exports jdk\/jfr,jdk\/jfr\/consumer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 moduleMainClass jdk\/jfr\/internal\/tool\/Main flags 8000\n+\n+class name jdk\/jfr\/consumer\/RecordedObject\n+header extends java\/lang\/Object sealed true permittedSubclasses jdk\/jfr\/consumer\/RecordedEvent,jdk\/jfr\/consumer\/RecordedClassLoader,jdk\/jfr\/consumer\/RecordedClass,jdk\/jfr\/consumer\/RecordedMethod,jdk\/jfr\/consumer\/RecordedStackTrace,jdk\/jfr\/consumer\/RecordedFrame,jdk\/jfr\/consumer\/RecordedThread,jdk\/jfr\/consumer\/RecordedThreadGroup flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jfr-M.sym.txt","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jlink\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;jdk.jdeps\\u0020;flags\\u0020;0 uses jdk\/tools\/jlink\/plugin\/Plugin provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/tools\/jmod\/Main$JmodToolProvider\\u005C;u002C;jdk\/tools\/jlink\/internal\/Main$JlinkToolProvider,interface\\u0020;jdk\/tools\/jlink\/plugin\/Plugin\\u0020;impls\\u0020;jdk\/tools\/jlink\/internal\/plugins\/DefaultStripDebugPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeFilesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeJmodSectionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/LegalNoticeFilePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeCommandsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/OrderResourcesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/DefaultCompressPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeVMPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/GenerateJLIClassesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ReleaseInfoPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/AddOptionsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVMBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVersionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/CDSPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/SaveJlinkArgfilesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeDebugSymbolsPlugin flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jlink-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jpackage\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;jdk.jlink\\u0020;flags\\u0020;0,name\\u0020;java.desktop\\u0020;flags\\u0020;0 uses jdk\/jpackage\/internal\/Bundler,jdk\/jpackage\/internal\/Bundlers provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/jpackage\/internal\/JPackageToolProvider,interface\\u0020;jdk\/jpackage\/internal\/Bundler\\u0020;impls\\u0020;jdk\/jpackage\/internal\/LinuxAppBundler\\u005C;u002C;jdk\/jpackage\/internal\/LinuxDebBundler\\u005C;u002C;jdk\/jpackage\/internal\/LinuxRpmBundler,interface\\u0020;jdk\/jpackage\/internal\/Bundlers\\u0020;impls\\u0020;jdk\/jpackage\/internal\/BasicBundlers target linux-amd64 moduleMainClass jdk\/jpackage\/main\/Main flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jpackage-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jshell\n+header exports jdk\/jshell,jdk\/jshell\/execution,jdk\/jshell\/spi,jdk\/jshell\/tool requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;0,name\\u0020;jdk.compiler\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.ed\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.le\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;java.compiler\\u0020;flags\\u0020;20,name\\u0020;java.prefs\\u0020;flags\\u0020;20,name\\u0020;jdk.jdi\\u0020;flags\\u0020;20 uses jdk\/jshell\/spi\/ExecutionControlProvider,jdk\/internal\/editor\/spi\/BuildInEditorProvider provides interface\\u0020;javax\/tools\/Tool\\u0020;impls\\u0020;jdk\/internal\/jshell\/tool\/JShellToolProvider,interface\\u0020;jdk\/jshell\/spi\/ExecutionControlProvider\\u0020;impls\\u0020;jdk\/jshell\/execution\/JdiExecutionControlProvider\\u005C;u002C;jdk\/jshell\/execution\/LocalExecutionControlProvider\\u005C;u002C;jdk\/jshell\/execution\/FailOverExecutionControlProvider,interface\\u0020;jdk\/internal\/io\/JdkConsoleProvider\\u0020;impls\\u0020;jdk\/jshell\/execution\/impl\/ConsoleImpl$ConsoleProviderImpl target linux-amd64 moduleMainClass jdk\/internal\/jshell\/tool\/JShellToolProvider flags 8000\n+\n+class name jdk\/jshell\/execution\/JdiDefaultExecutionControl\n+header extends jdk\/jshell\/execution\/JdiExecutionControl nestMembers jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter,jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription flags 21\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl innerClassName JdiStarter flags 609\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter innerClassName TargetDescription flags 19\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$RunException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName RunException flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter\n+header extends java\/lang\/Object nestHost jdk\/jshell\/execution\/JdiDefaultExecutionControl flags 601\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl innerClassName JdiStarter flags 609\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter innerClassName TargetDescription flags 19\n+method name start descriptor (Ljdk\/jshell\/spi\/ExecutionEnv;Ljava\/util\/Map;I)Ljdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription; flags 401 signature (Ljdk\/jshell\/spi\/ExecutionEnv;Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/String;>;I)Ljdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription;\n+\n+class name jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription\n+header extends java\/lang\/Record nestHost jdk\/jshell\/execution\/JdiDefaultExecutionControl record true flags 31\n+recordcomponent name vm descriptor Lcom\/sun\/jdi\/VirtualMachine;\n+recordcomponent name process descriptor Ljava\/lang\/Process;\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl innerClassName JdiStarter flags 609\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter$TargetDescription outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter innerClassName TargetDescription flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name <init> descriptor (Lcom\/sun\/jdi\/VirtualMachine;Ljava\/lang\/Process;)V flags 1 methodParameters 0:vm,0:process\n+method name toString descriptor ()Ljava\/lang\/String; flags 11\n+method name hashCode descriptor ()I flags 11\n+method name equals descriptor (Ljava\/lang\/Object;)Z flags 11\n+method name vm descriptor ()Lcom\/sun\/jdi\/VirtualMachine; flags 1\n+method name process descriptor ()Ljava\/lang\/Process; flags 1\n+\n+class name jdk\/jshell\/execution\/JdiExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+innerclass innerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter outerClass jdk\/jshell\/execution\/JdiDefaultExecutionControl innerClassName JdiStarter flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name <init> descriptor (Ljdk\/jshell\/execution\/JdiDefaultExecutionControl$JdiStarter;)V flags 1\n+\n+class name jdk\/jshell\/execution\/JdiInitiator\n+header extends java\/lang\/Object nestMembers jdk\/jshell\/execution\/JdiInitiator$ProcessStarted flags 21\n+innerclass innerClass jdk\/jshell\/execution\/JdiInitiator$ProcessStarted outerClass jdk\/jshell\/execution\/JdiInitiator innerClassName ProcessStarted flags 60c\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name runListenProcess descriptor (Ljava\/lang\/String;ILjava\/util\/List;Ljdk\/jshell\/execution\/JdiInitiator$ProcessStarted;)V flags 4 signature (Ljava\/lang\/String;ILjava\/util\/List<Ljava\/lang\/String;>;Ljdk\/jshell\/execution\/JdiInitiator$ProcessStarted;)V\n+\n+class name jdk\/jshell\/execution\/JdiInitiator$ProcessStarted\n+header extends java\/lang\/Object nestHost jdk\/jshell\/execution\/JdiInitiator flags 601\n+innerclass innerClass jdk\/jshell\/execution\/JdiInitiator$ProcessStarted outerClass jdk\/jshell\/execution\/JdiInitiator innerClassName ProcessStarted flags 60c\n+method name processStarted descriptor (Ljava\/lang\/Process;)V thrownTypes java\/lang\/Throwable flags 401\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jshell-M.sym.txt","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jsobject\n+header exports netscape\/javascript requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n+class name netscape\/javascript\/JSException\n+header extends java\/lang\/RuntimeException flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jsobject-M.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jstatd\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.rmi\\u0020;flags\\u0020;0,name\\u0020;jdk.internal.jvmstat\\u0020;flags\\u0020;0 provides interface\\u0020;sun\/jvmstat\/monitor\/MonitoredHostService\\u0020;impls\\u0020;sun\/jvmstat\/perfdata\/monitor\/protocol\/rmi\/MonitoredHostRmiService target linux-amd64 moduleMainClass sun\/tools\/jstatd\/Jstatd flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jstatd-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.localedata\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;sun\/util\/locale\/provider\/LocaleDataMetaInfo\\u0020;impls\\u0020;sun\/util\/resources\/cldr\/provider\/CLDRLocaleDataMetaInfo\\u005C;u002C;sun\/util\/resources\/provider\/NonBaseLocaleDataMetaInfo,interface\\u0020;sun\/util\/resources\/LocaleData$CommonResourceBundleProvider\\u0020;impls\\u0020;sun\/util\/resources\/provider\/LocaleDataProvider,interface\\u0020;sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider\\u0020;impls\\u0020;sun\/util\/resources\/provider\/SupplementaryLocaleDataProvider flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.localedata-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.management\n+header exports com\/sun\/management requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.management\\u0020;flags\\u0020;20 provides interface\\u0020;sun\/management\/spi\/PlatformMBeanProvider\\u0020;impls\\u0020;com\/sun\/management\/internal\/PlatformMBeanProviderImpl flags 8000\n+\n+class name com\/sun\/management\/GarbageCollectionNotificationInfo\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeDataView flags 21\n+\n+class name com\/sun\/management\/GarbageCollectorMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/GarbageCollectorMXBean flags 601\n+\n+class name com\/sun\/management\/GcInfo\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,javax\/management\/openmbean\/CompositeDataView flags 21\n+\n+class name com\/sun\/management\/OperatingSystemMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/OperatingSystemMXBean flags 601\n+\n+class name com\/sun\/management\/ThreadMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/ThreadMXBean flags 601\n+\n+class name com\/sun\/management\/UnixOperatingSystemMXBean\n+header extends java\/lang\/Object implements com\/sun\/management\/OperatingSystemMXBean flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management-M.sym.txt","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.management.agent\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.management\\u0020;flags\\u0020;0,name\\u0020;java.management.rmi\\u0020;flags\\u0020;0 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management.agent-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.management.jfr\n+header exports jdk\/management\/jfr requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.management\\u0020;flags\\u0020;0,name\\u0020;java.management\\u0020;flags\\u0020;20,name\\u0020;jdk.jfr\\u0020;flags\\u0020;20 provides interface\\u0020;sun\/management\/spi\/PlatformMBeanProvider\\u0020;impls\\u0020;jdk\/management\/jfr\/internal\/FlightRecorderMXBeanProvider flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management.jfr-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.naming.dns\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.naming\\u0020;flags\\u0020;0 provides interface\\u0020;javax\/naming\/spi\/InitialContextFactory\\u0020;impls\\u0020;com\/sun\/jndi\/dns\/DnsContextFactory flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.naming.dns-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.naming.rmi\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.naming\\u0020;flags\\u0020;0,name\\u0020;java.rmi\\u0020;flags\\u0020;0 provides interface\\u0020;javax\/naming\/spi\/InitialContextFactory\\u0020;impls\\u0020;com\/sun\/jndi\/rmi\/registry\/RegistryContextFactory flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.naming.rmi-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.net\n+header exports jdk\/net,jdk\/nio requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n+class name jdk\/net\/NetworkPermission\n+header extends java\/security\/BasicPermission flags 31\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.net-M.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.nio.mapmode\n+header exports jdk\/nio\/mapmode requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.nio.mapmode-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.random\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;jdk\/random\/L32X64MixRandom\\u005C;u002C;jdk\/random\/L64X128MixRandom\\u005C;u002C;jdk\/random\/L64X128StarStarRandom\\u005C;u002C;jdk\/random\/L64X256MixRandom\\u005C;u002C;jdk\/random\/L64X1024MixRandom\\u005C;u002C;jdk\/random\/L128X128MixRandom\\u005C;u002C;jdk\/random\/L128X256MixRandom\\u005C;u002C;jdk\/random\/L128X1024MixRandom\\u005C;u002C;jdk\/random\/Xoroshiro128PlusPlus\\u005C;u002C;jdk\/random\/Xoshiro256PlusPlus target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.random-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.sctp\n+header exports com\/sun\/nio\/sctp requires name\\u0020;java.base\\u0020;flags\\u0020;8000 flags 8000\n+\n+class name com\/sun\/nio\/sctp\/AbstractNotificationHandler\n+header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/NotificationHandler flags 21 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/nio\/sctp\/NotificationHandler<TT;>;\n+\n+class name com\/sun\/nio\/sctp\/Association\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/nio\/sctp\/HandlerResult\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/sctp\/HandlerResult;>;\n+\n+class name com\/sun\/nio\/sctp\/IllegalReceiveException\n+header extends java\/lang\/IllegalStateException flags 21\n+\n+class name com\/sun\/nio\/sctp\/IllegalUnbindException\n+header extends java\/lang\/IllegalStateException flags 21\n+\n+class name com\/sun\/nio\/sctp\/InvalidStreamException\n+header extends java\/lang\/IllegalArgumentException flags 21\n+\n+class name com\/sun\/nio\/sctp\/MessageInfo\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/nio\/sctp\/Notification\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/nio\/sctp\/NotificationHandler\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+\n+class name com\/sun\/nio\/sctp\/SctpChannel\n+header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n+\n+class name com\/sun\/nio\/sctp\/SctpMultiChannel\n+header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n+\n+class name com\/sun\/nio\/sctp\/SctpServerChannel\n+header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n+\n+class name com\/sun\/nio\/sctp\/SctpSocketOption\n+header extends java\/lang\/Object implements java\/net\/SocketOption flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/net\/SocketOption<TT;>;\n+\n+class name com\/sun\/nio\/sctp\/SendFailedNotification\n+header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n+\n+class name com\/sun\/nio\/sctp\/ShutdownNotification\n+header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.sctp-M.sym.txt","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.security.auth\n+header exports com\/sun\/security\/auth,com\/sun\/security\/auth\/callback,com\/sun\/security\/auth\/login,com\/sun\/security\/auth\/module requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.security.jgss\\u0020;flags\\u0020;0,name\\u0020;java.naming\\u0020;flags\\u0020;20 provides interface\\u0020;javax\/security\/auth\/spi\/LoginModule\\u0020;impls\\u0020;com\/sun\/security\/auth\/module\/Krb5LoginModule\\u005C;u002C;com\/sun\/security\/auth\/module\/UnixLoginModule\\u005C;u002C;com\/sun\/security\/auth\/module\/JndiLoginModule\\u005C;u002C;com\/sun\/security\/auth\/module\/KeyStoreLoginModule\\u005C;u002C;com\/sun\/security\/auth\/module\/LdapLoginModule\\u005C;u002C;com\/sun\/security\/auth\/module\/NTLoginModule flags 8000\n+\n+class name com\/sun\/security\/auth\/LdapPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 31\n+\n+class name com\/sun\/security\/auth\/NTDomainPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/NTNumericCredential\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/security\/auth\/NTSid\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/NTSidDomainPrincipal\n+header extends com\/sun\/security\/auth\/NTSid flags 21\n+\n+class name com\/sun\/security\/auth\/NTSidGroupPrincipal\n+header extends com\/sun\/security\/auth\/NTSid flags 21\n+\n+class name com\/sun\/security\/auth\/NTSidPrimaryGroupPrincipal\n+header extends com\/sun\/security\/auth\/NTSid flags 21\n+\n+class name com\/sun\/security\/auth\/NTSidUserPrincipal\n+header extends com\/sun\/security\/auth\/NTSid flags 21\n+\n+class name com\/sun\/security\/auth\/NTUserPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/PrincipalComparator\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/security\/auth\/UnixNumericGroupPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/UnixNumericUserPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/UnixPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+\n+class name com\/sun\/security\/auth\/UserPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 31\n+\n+class name com\/sun\/security\/auth\/callback\/TextCallbackHandler\n+header extends java\/lang\/Object implements javax\/security\/auth\/callback\/CallbackHandler flags 21\n+\n+class name com\/sun\/security\/auth\/login\/ConfigFile\n+header extends javax\/security\/auth\/login\/Configuration flags 21\n+\n+class name com\/sun\/security\/auth\/module\/JndiLoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/KeyStoreLoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/Krb5LoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/LdapLoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/NTLoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/NTSystem\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/security\/auth\/module\/UnixLoginModule\n+header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/auth\/module\/UnixSystem\n+header extends java\/lang\/Object flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.auth-M.sym.txt","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.security.jgss\n+header exports com\/sun\/security\/jgss requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.logging\\u0020;flags\\u0020;0,name\\u0020;java.security.sasl\\u0020;flags\\u0020;0,name\\u0020;java.security.jgss\\u0020;flags\\u0020;20 provides interface\\u0020;java\/security\/Provider\\u0020;impls\\u0020;com\/sun\/security\/sasl\/gsskerb\/JdkSASL flags 8000\n+\n+class name com\/sun\/security\/jgss\/AuthorizationDataEntry\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/jgss\/ExtendedGSSContext\n+header extends java\/lang\/Object implements org\/ietf\/jgss\/GSSContext flags 601\n+\n+class name com\/sun\/security\/jgss\/ExtendedGSSCredential\n+header extends java\/lang\/Object implements org\/ietf\/jgss\/GSSCredential flags 601\n+\n+class name com\/sun\/security\/jgss\/GSSUtil\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/security\/jgss\/InquireSecContextPermission\n+header extends java\/security\/BasicPermission flags 31\n+\n+class name com\/sun\/security\/jgss\/InquireType\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/security\/jgss\/InquireType;>;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.jgss-M.sym.txt","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name sun\/misc\/Unsafe\n+-method name unpark descriptor (Ljava\/lang\/Object;)V\n+-method name park descriptor (ZJ)V\n+-method name getLoadAverage descriptor ([DI)I\n+-method name loadFence descriptor ()V\n+-method name storeFence descriptor ()V\n+-method name fullFence descriptor ()V\n+-method name shouldBeInitialized descriptor (Ljava\/lang\/Class;)Z\n+-method name ensureClassInitialized descriptor (Ljava\/lang\/Class;)V\n+method name unpark descriptor (Ljava\/lang\/Object;)V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name park descriptor (ZJ)V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getLoadAverage descriptor ([DI)I flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name loadFence descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name storeFence descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name fullFence descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"22\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.unsupported-M.sym.txt","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,115 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.unsupported.desktop\n+header exports jdk\/swing\/interop requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.desktop\\u0020;flags\\u0020;20 provides interface\\u0020;sun\/swing\/InteropProvider\\u0020;impls\\u0020;jdk\/swing\/interop\/internal\/InteropProviderImpl target linux-amd64 flags 8000\n+\n+class name jdk\/swing\/interop\/DispatcherWrapper\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor ()V flags 1\n+method name isDispatchThread descriptor ()Z flags 401\n+method name scheduleDispatch descriptor (Ljava\/lang\/Runnable;)V flags 401\n+method name createSecondaryLoop descriptor ()Ljava\/awt\/SecondaryLoop; flags 401\n+method name setFwDispatcher descriptor (Ljava\/awt\/EventQueue;Ljdk\/swing\/interop\/DispatcherWrapper;)V flags 9\n+\n+class name jdk\/swing\/interop\/DragSourceContextWrapper\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor (Ljava\/awt\/dnd\/DragGestureEvent;)V flags 1\n+method name convertModifiersToDropAction descriptor (II)I flags 9\n+method name setNativeCursor descriptor (Ljava\/awt\/Cursor;I)V flags 404\n+method name startDrag descriptor (Ljava\/awt\/datatransfer\/Transferable;[JLjava\/util\/Map;)V flags 404 signature (Ljava\/awt\/datatransfer\/Transferable;[JLjava\/util\/Map<Ljava\/lang\/Long;Ljava\/awt\/datatransfer\/DataFlavor;>;)V\n+method name startSecondaryEventLoop descriptor ()V flags 401\n+method name quitSecondaryEventLoop descriptor ()V flags 401\n+method name dragDropFinished descriptor (ZIII)V flags 1\n+method name getDragSourceContext descriptor ()Ljava\/awt\/dnd\/DragSourceContext; flags 1\n+\n+class name jdk\/swing\/interop\/DropTargetContextWrapper\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor ()V flags 1\n+method name setDropTargetContext descriptor (Ljava\/awt\/dnd\/DropTargetContext;Ljdk\/swing\/interop\/DropTargetContextWrapper;)V flags 1\n+method name reset descriptor (Ljava\/awt\/dnd\/DropTargetContext;)V flags 1\n+method name setTargetActions descriptor (I)V flags 401\n+method name getTargetActions descriptor ()I flags 401\n+method name getDropTarget descriptor ()Ljava\/awt\/dnd\/DropTarget; flags 401\n+method name getTransferDataFlavors descriptor ()[Ljava\/awt\/datatransfer\/DataFlavor; flags 401\n+method name getTransferable descriptor ()Ljava\/awt\/datatransfer\/Transferable; thrownTypes java\/awt\/dnd\/InvalidDnDOperationException flags 401\n+method name isTransferableJVMLocal descriptor ()Z flags 401\n+method name acceptDrag descriptor (I)V flags 401\n+method name rejectDrag descriptor ()V flags 401\n+method name acceptDrop descriptor (I)V flags 401\n+method name rejectDrop descriptor ()V flags 401\n+method name dropComplete descriptor (Z)V flags 401\n+\n+class name jdk\/swing\/interop\/LightweightContentWrapper\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor ()V flags 1\n+method name imageBufferReset descriptor ([IIIIII)V flags 401\n+method name imageBufferReset descriptor ([IIIIIIDD)V flags 401\n+method name getComponent descriptor ()Ljavax\/swing\/JComponent; flags 401\n+method name paintLock descriptor ()V flags 401\n+method name paintUnlock descriptor ()V flags 401\n+method name imageReshaped descriptor (IIII)V flags 401\n+method name imageUpdated descriptor (IIII)V flags 401\n+method name focusGrabbed descriptor ()V flags 401\n+method name focusUngrabbed descriptor ()V flags 401\n+method name preferredSizeChanged descriptor (II)V flags 401\n+method name maximumSizeChanged descriptor (II)V flags 401\n+method name minimumSizeChanged descriptor (II)V flags 401\n+method name createDragGestureRecognizer descriptor (Ljava\/lang\/Class;Ljava\/awt\/dnd\/DragSource;Ljava\/awt\/Component;ILjava\/awt\/dnd\/DragGestureListener;)Ljava\/awt\/dnd\/DragGestureRecognizer; flags 401 signature <T:Ljava\/awt\/dnd\/DragGestureRecognizer;>(Ljava\/lang\/Class<TT;>;Ljava\/awt\/dnd\/DragSource;Ljava\/awt\/Component;ILjava\/awt\/dnd\/DragGestureListener;)TT;\n+method name createDragSourceContext descriptor (Ljava\/awt\/dnd\/DragGestureEvent;)Ljdk\/swing\/interop\/DragSourceContextWrapper; thrownTypes java\/awt\/dnd\/InvalidDnDOperationException flags 401\n+method name addDropTarget descriptor (Ljava\/awt\/dnd\/DropTarget;)V flags 401\n+method name removeDropTarget descriptor (Ljava\/awt\/dnd\/DropTarget;)V flags 401\n+\n+class name jdk\/swing\/interop\/LightweightFrameWrapper\n+header extends java\/lang\/Object flags 21\n+method name <init> descriptor ()V flags 1\n+method name notifyDisplayChanged descriptor (I)V flags 1\n+method name notifyDisplayChanged descriptor (DD)V flags 1\n+method name setHostBounds descriptor (IIII)V flags 1\n+method name dispose descriptor ()V flags 1\n+method name addWindowFocusListener descriptor (Ljava\/awt\/event\/WindowFocusListener;)V flags 1\n+method name setVisible descriptor (Z)V flags 1\n+method name setBounds descriptor (IIII)V flags 1\n+method name setContent descriptor (Ljdk\/swing\/interop\/LightweightContentWrapper;)V flags 1\n+method name emulateActivation descriptor (Z)V flags 1\n+method name createMouseEvent descriptor (Ljdk\/swing\/interop\/LightweightFrameWrapper;IJIIIIIIZI)Ljava\/awt\/event\/MouseEvent; flags 1\n+method name createMouseWheelEvent descriptor (Ljdk\/swing\/interop\/LightweightFrameWrapper;IIII)Ljava\/awt\/event\/MouseWheelEvent; flags 1\n+method name createKeyEvent descriptor (Ljdk\/swing\/interop\/LightweightFrameWrapper;IJIIC)Ljava\/awt\/event\/KeyEvent; flags 1\n+method name createUngrabEvent descriptor (Ljdk\/swing\/interop\/LightweightFrameWrapper;)Ljava\/awt\/AWTEvent; flags 1\n+method name findComponentAt descriptor (Ljdk\/swing\/interop\/LightweightFrameWrapper;IIZ)Ljava\/awt\/Component; flags 1\n+method name isCompEqual descriptor (Ljava\/awt\/Component;Ljdk\/swing\/interop\/LightweightFrameWrapper;)Z flags 1\n+\n+class name jdk\/swing\/interop\/SwingInterOpUtils\n+header extends java\/lang\/Object flags 21\n+field name GRAB_EVENT_MASK descriptor I constantValue -2147483648 flags 19\n+method name <init> descriptor ()V flags 1\n+method name postEvent descriptor (Ljava\/lang\/Object;Ljava\/awt\/AWTEvent;)V flags 9\n+method name grab descriptor (Ljava\/awt\/Toolkit;Ljava\/awt\/Window;)V flags 9\n+method name ungrab descriptor (Ljava\/awt\/Toolkit;Ljava\/awt\/Window;)V flags 9\n+method name isUngrabEvent descriptor (Ljava\/awt\/AWTEvent;)Z flags 9\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.unsupported.desktop-M.sym.txt","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -0,0 +1,298 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.xml.dom\n+header exports org\/w3c\/dom\/css,org\/w3c\/dom\/html,org\/w3c\/dom\/stylesheets,org\/w3c\/dom\/xpath requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;java.xml\\u0020;flags\\u0020;20 flags 8000\n+\n+class name org\/w3c\/dom\/css\/CSS2Properties\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSCharsetRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSFontFaceRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSImportRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSMediaRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSPageRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSPrimitiveValue\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSValue flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSRule\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSRuleList\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSStyleDeclaration\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSStyleRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSStyleSheet\n+header extends java\/lang\/Object implements org\/w3c\/dom\/stylesheets\/StyleSheet flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSUnknownRule\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSRule flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSValue\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/CSSValueList\n+header extends java\/lang\/Object implements org\/w3c\/dom\/css\/CSSValue flags 601\n+\n+class name org\/w3c\/dom\/css\/Counter\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/DOMImplementationCSS\n+header extends java\/lang\/Object implements org\/w3c\/dom\/DOMImplementation flags 601\n+\n+class name org\/w3c\/dom\/css\/DocumentCSS\n+header extends java\/lang\/Object implements org\/w3c\/dom\/stylesheets\/DocumentStyle flags 601\n+\n+class name org\/w3c\/dom\/css\/ElementCSSInlineStyle\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/RGBColor\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/Rect\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/css\/ViewCSS\n+header extends java\/lang\/Object implements org\/w3c\/dom\/views\/AbstractView flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLAnchorElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLAppletElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLAreaElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLBRElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLBaseElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLBaseFontElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLBodyElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLButtonElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLCollection\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLDListElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLDOMImplementation\n+header extends java\/lang\/Object implements org\/w3c\/dom\/DOMImplementation flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLDirectoryElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLDivElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLDocument\n+header extends java\/lang\/Object implements org\/w3c\/dom\/Document flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/Element flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLFieldSetElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLFontElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLFormElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLFrameElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLFrameSetElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLHRElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLHeadElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLHeadingElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLHtmlElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLIFrameElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLImageElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLInputElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLIsIndexElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLLIElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLLabelElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLLegendElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLLinkElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLMapElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLMenuElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLMetaElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLModElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLOListElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLObjectElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLOptGroupElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLOptionElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLParagraphElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLParamElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLPreElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLQuoteElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLScriptElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLSelectElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLStyleElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableCaptionElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableCellElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableColElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableRowElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTableSectionElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTextAreaElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLTitleElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/html\/HTMLUListElement\n+header extends java\/lang\/Object implements org\/w3c\/dom\/html\/HTMLElement flags 601\n+\n+class name org\/w3c\/dom\/stylesheets\/DocumentStyle\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/stylesheets\/LinkStyle\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/stylesheets\/MediaList\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/stylesheets\/StyleSheet\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/stylesheets\/StyleSheetList\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/xpath\/XPathEvaluator\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/xpath\/XPathException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name org\/w3c\/dom\/xpath\/XPathExpression\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/xpath\/XPathNSResolver\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/w3c\/dom\/xpath\/XPathNamespace\n+header extends java\/lang\/Object implements org\/w3c\/dom\/Node flags 601\n+\n+class name org\/w3c\/dom\/xpath\/XPathResult\n+header extends java\/lang\/Object flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.xml.dom-M.sym.txt","additions":298,"deletions":0,"binary":false,"changes":298,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.zipfs\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000 provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/nio\/zipfs\/ZipFileSystemProvider flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.zipfs-M.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -32,1 +32,1 @@\n-generate platforms 8:9:A:B:C:D:E:F:G:H:I:J:K:L\n+generate platforms 8:9:A:B:C:D:E:F:G:H:I:J:K:L:M\n@@ -47,0 +47,1 @@\n+platform version M base L files java.base-M.sym.txt:java.compiler-M.sym.txt:java.desktop-M.sym.txt:java.xml-M.sym.txt:java.xml.crypto-M.sym.txt:jdk.compiler-M.sym.txt:jdk.crypto.cryptoki-M.sym.txt:jdk.crypto.ec-M.sym.txt:jdk.graal.compiler-M.sym.txt:jdk.graal.compiler.management-M.sym.txt:jdk.incubator.foreign-M.sym.txt:jdk.incubator.vector-M.sym.txt:jdk.internal.ed-M.sym.txt:jdk.internal.jvmstat-M.sym.txt:jdk.internal.le-M.sym.txt:jdk.internal.opt-M.sym.txt:jdk.internal.vm.ci-M.sym.txt:jdk.jartool-M.sym.txt:jdk.jfr-M.sym.txt:jdk.jpackage-M.sym.txt:jdk.jshell-M.sym.txt:jdk.jstatd-M.sym.txt:jdk.random-M.sym.txt:jdk.unsupported-M.sym.txt:jdk.unsupported.desktop-M.sym.txt\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/symbols","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- *          8296150 8306585\n+ *          8296150 8306585 8319414\n@@ -40,0 +40,1 @@\n+ *                                      RELEASE_23\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetSourceVersions.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7157626 8001112 8188870 8173382 8193290 8205619 8245586 8257453\n+ * @bug 7157626 8001112 8188870 8173382 8193290 8205619 8245586 8257453 8306586\n@@ -60,0 +60,1 @@\n+        TWENTY_THREE(\"23\", 67),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/ClassVersionChecker.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -126,1 +126,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -136,1 +136,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -146,1 +146,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -167,1 +167,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -186,1 +186,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -207,1 +207,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -228,1 +228,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n@@ -249,1 +249,1 @@\n-    @SupportedSourceVersion(RELEASE_22)\n+    @SupportedSourceVersion(RELEASE_23)\n","filename":"test\/langtools\/tools\/javac\/lib\/JavacTestingAbstractProcessor.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.err.preview.feature.disabled.classfile: Bar.class, 22\n+- compiler.err.preview.feature.disabled.classfile: Bar.class, 23\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.nopreview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.warn.preview.feature.use.classfile: Bar.class, 22\n+- compiler.warn.preview.feature.use.classfile: Bar.class, 23\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.preview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * 8245147 8245586 8257453 8286035 8306586 8320806\n+ * 8245147 8245586 8257453 8286035 8306586 8320806 8306586\n@@ -74,1 +74,2 @@\n-               \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\");\n+               \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\",\n+               \"23\");\n@@ -76,1 +77,1 @@\n-    public static final String LATEST_MAJOR_VERSION = \"66.0\";\n+    public static final String LATEST_MAJOR_VERSION = \"67.0\";\n@@ -94,0 +95,1 @@\n+        TWENTY_THREE(false,\"67.0\", \"23\"),\n","filename":"test\/langtools\/tools\/javac\/versions\/Versions.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}