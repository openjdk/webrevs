{"files":[{"patch":"@@ -155,2 +155,1 @@\n-      assert(!r->rem_set()->is_updating(), \"must be\");\n-      if (!r->rem_set()->is_complete()) {\n+      if (!r->rem_set()->is_tracked()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1443,0 +1443,6 @@\n+    if (_needs_remembered_set_rebuild) {\n+      \/\/ Prune rebuild candidates based on G1HeapWastePercent.\n+      \/\/ Improves rebuild time in addition to remembered set memory usage.\n+      G1CollectionSetChooser::build(_g1h->workers(), _g1h->num_regions(), _g1h->policy()->candidates());\n+    }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1313,1 +1313,0 @@\n-    G1CollectionSetChooser::build(_g1h->workers(), _g1h->num_regions(), candidates());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -187,0 +187,2 @@\n+  G1CollectionSetCandidates* candidates() const;\n+\n@@ -189,1 +191,0 @@\n-  G1CollectionSetCandidates* candidates() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}