{"files":[{"patch":"@@ -643,1 +643,4 @@\n-            StringLatin1.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n+            val[count++] = 'n';\n+            val[count++] = 'u';\n+            val[count++] = 'l';\n+            val[count++] = 'l';\n@@ -645,1 +648,1 @@\n-            StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n+            count = StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n@@ -647,1 +650,1 @@\n-        this.count = count + 4;\n+        this.count = count;\n@@ -772,1 +775,4 @@\n-                StringLatin1.putCharsAt(val, count, 't', 'r', 'u', 'e');\n+                val[count++] = 't';\n+                val[count++] = 'r';\n+                val[count++] = 'u';\n+                val[count++] = 'e';\n@@ -774,1 +780,5 @@\n-                StringLatin1.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n+                val[count++] = 'f';\n+                val[count++] = 'a';\n+                val[count++] = 'l';\n+                val[count++] = 's';\n+                val[count++] = 'e';\n@@ -778,1 +788,1 @@\n-                StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n+                count = StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n@@ -780,1 +790,1 @@\n-                StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n+                count = StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n@@ -783,1 +793,1 @@\n-        this.count = count + (b ? 4 : 5);\n+        this.count = count;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -239,1 +239,4 @@\n-                StringLatin1.putCharsAt(buf, index, 't', 'r', 'u', 'e');\n+                buf[index] = 't';\n+                buf[index + 1] = 'r';\n+                buf[index + 2] = 'u';\n+                buf[index + 3] = 'e';\n@@ -242,1 +245,5 @@\n-                StringLatin1.putCharsAt(buf, index, 'f', 'a', 'l', 's', 'e');\n+                buf[index] = 'f';\n+                buf[index + 1] = 'a';\n+                buf[index + 2] = 'l';\n+                buf[index + 3] = 's';\n+                buf[index + 4] = 'e';\n@@ -250,1 +257,4 @@\n-                StringUTF16.putCharsAt(buf, index, 't', 'r', 'u', 'e');\n+                StringUTF16.putChar(buf, index, 't');\n+                StringUTF16.putChar(buf, index + 1, 'r');\n+                StringUTF16.putChar(buf, index + 2, 'u');\n+                StringUTF16.putChar(buf, index + 3, 'e');\n@@ -253,1 +263,5 @@\n-                StringUTF16.putCharsAt(buf, index, 'f', 'a', 'l', 's', 'e');\n+                StringUTF16.putChar(buf, index, 'f');\n+                StringUTF16.putChar(buf, index + 1, 'a');\n+                StringUTF16.putChar(buf, index + 2, 'l');\n+                StringUTF16.putChar(buf, index + 3, 's');\n+                StringUTF16.putChar(buf, index + 4, 'e');\n@@ -627,1 +641,4 @@\n-                StringLatin1.putCharsAt(buf, index, 't', 'r', 'u', 'e');\n+                buf[index] = 't';\n+                buf[index + 1] = 'r';\n+                buf[index + 2] = 'u';\n+                buf[index + 3] = 'e';\n@@ -630,1 +647,5 @@\n-                StringLatin1.putCharsAt(buf, index, 'f', 'a', 'l', 's', 'e');\n+                buf[index] = 'f';\n+                buf[index + 1] = 'a';\n+                buf[index + 2] = 'l';\n+                buf[index + 3] = 's';\n+                buf[index + 4] = 'e';\n@@ -637,1 +658,4 @@\n-                StringUTF16.putCharsAt(buf, index, 't', 'r', 'u', 'e');\n+                StringUTF16.putChar(buf, index, 't');\n+                StringUTF16.putChar(buf, index + 1, 'r');\n+                StringUTF16.putChar(buf, index + 2, 'u');\n+                StringUTF16.putChar(buf, index + 3, 'e');\n@@ -640,1 +664,5 @@\n-                StringUTF16.putCharsAt(buf, index, 'f', 'a', 'l', 's', 'e');\n+                StringUTF16.putChar(buf, index, 'f');\n+                StringUTF16.putChar(buf, index + 1, 'a');\n+                StringUTF16.putChar(buf, index + 2, 'l');\n+                StringUTF16.putChar(buf, index + 3, 's');\n+                StringUTF16.putChar(buf, index + 4, 'e');\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":36,"deletions":8,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import jdk.internal.misc.Unsafe;\n@@ -46,2 +45,0 @@\n-    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n-\n@@ -830,21 +827,0 @@\n-    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n-        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n-        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n-        long offset = (long) Unsafe.ARRAY_BYTE_BASE_OFFSET + index;\n-        UNSAFE.putByte(val, offset    , (byte)(c1));\n-        UNSAFE.putByte(val, offset + 1, (byte)(c2));\n-        UNSAFE.putByte(val, offset + 2, (byte)(c3));\n-        UNSAFE.putByte(val, offset + 3, (byte)(c4));\n-    }\n-\n-    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n-        assert index >= 0 && index + 4 < length(val) : \"Trusted caller missed bounds check\";\n-        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n-        long offset  = (long) Unsafe.ARRAY_BYTE_BASE_OFFSET + index;\n-        UNSAFE.putByte(val, offset    , (byte)(c1));\n-        UNSAFE.putByte(val, offset + 1, (byte)(c2));\n-        UNSAFE.putByte(val, offset + 2, (byte)(c3));\n-        UNSAFE.putByte(val, offset + 3, (byte)(c4));\n-        UNSAFE.putByte(val, offset + 4, (byte)(c5));\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+\n@@ -1550,14 +1551,21 @@\n-    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n-        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n-        putChar(val, index    , c1);\n-        putChar(val, index + 1, c2);\n-        putChar(val, index + 2, c3);\n-        putChar(val, index + 3, c4);\n-    }\n-\n-    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n-        putChar(val, index    , c1);\n-        putChar(val, index + 1, c2);\n-        putChar(val, index + 2, c3);\n-        putChar(val, index + 3, c4);\n-        putChar(val, index + 4, c5);\n+    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+        int end = i + 4;\n+        checkBoundsBeginEnd(i, end, value);\n+        putChar(value, i++, c1);\n+        putChar(value, i++, c2);\n+        putChar(value, i++, c3);\n+        putChar(value, i++, c4);\n+        assert(i == end);\n+        return end;\n+    }\n+\n+    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+        int end = i + 5;\n+        checkBoundsBeginEnd(i, end, value);\n+        putChar(value, i++, c1);\n+        putChar(value, i++, c2);\n+        putChar(value, i++, c3);\n+        putChar(value, i++, c4);\n+        putChar(value, i++, c5);\n+        assert(i == end);\n+        return end;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":22,"deletions":14,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,4 +136,1 @@\n-        int end = i + 4;\n-        StringUTF16.checkBoundsBeginEnd(i, end, value);\n-        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n-        return end;\n+        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n@@ -143,4 +140,1 @@\n-        int end = i + 5;\n-        StringUTF16.checkBoundsBeginEnd(i, end, value);\n-        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n-        return end;\n+        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -229,60 +229,11 @@\n-    public int appendWithBool8Latin1() {\n-        StringBuilder buf = sbLatin1;\n-        buf.setLength(0);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(true);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(false);\n-        return buf.length();\n-    }\n-\n-\n-    @Benchmark\n-    public int appendWithBool8Utf16() {\n-        StringBuilder buf = sbUtf16;\n-        buf.setLength(0);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(true);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(true);\n-        buf.append(false);\n-        buf.append(false);\n-        return buf.length();\n-    }\n-\n-\n-    @Benchmark\n-    public int appendWithNull8Latin1() {\n-        StringBuilder buf = sbLatin1;\n-        buf.setLength(0);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        return buf.length();\n-    }\n-\n-\n-    @Benchmark\n-    public int appendWithNull8Utf16() {\n-        StringBuilder buf = sbUtf16;\n-        buf.setLength(0);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        buf.append((String) null);\n-        return buf.length();\n+    public String toStringCharWithBool8() {\n+        StringBuilder result = new StringBuilder();\n+        result.append(true);\n+        result.append(false);\n+        result.append(true);\n+        result.append(true);\n+        result.append(false);\n+        result.append(true);\n+        result.append(false);\n+        result.append(false);\n+        return result.toString();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":11,"deletions":60,"binary":false,"changes":71,"status":"modified"}]}