{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Random;\n@@ -52,1 +51,0 @@\n-    static final int RUNS = 0xff; \/\/ Q: Should we measure consecutive runs at all?\n@@ -57,1 +55,0 @@\n-    Random random;\n@@ -73,1 +70,1 @@\n-            ret.hashCode(); \/\/ pre-compute hash code\n+            ret.hashCode(); \/\/ pre-compute hash code for cd\n@@ -78,2 +75,5 @@\n-            var ce = builder.classEntry(cd); \/\/ pre-computes hash code for cd\n-            return ce.name().stringValue(); \/\/ pre-computes hash code for stringValue\n+            cd.hashCode(); \/\/ pre-computes hash code for cd\n+            var ce = builder.classEntry(cd);\n+            var ret = ce.name().stringValue();\n+            ret.hashCode(); \/\/ pre-computes hash code for stringValue\n+            return ret;\n@@ -81,1 +81,0 @@\n-        random = new Random(-555278801022917158L);\n@@ -90,3 +89,2 @@\n-        for (int i = 0; i < RUNS; i++) {\n-            int n = random.nextInt(size);\n-            bh.consume(builder.classEntry(classDescs.get(n)));\n+        for (var cd : classDescs) {\n+            bh.consume(builder.classEntry(cd));\n@@ -103,3 +101,2 @@\n-        for (int i = 0; i < RUNS; i++) {\n-            int n = random.nextInt(size);\n-            bh.consume(builder.classEntry(nonIdenticalClassDescs.get(n)));\n+        for (var cd : nonIdenticalClassDescs) {\n+            bh.consume(builder.classEntry(cd));\n@@ -115,3 +112,2 @@\n-        for (int i = 0; i < RUNS; i++) {\n-            int n = random.nextInt(size);\n-            bh.consume(builder.classEntry(builder.utf8Entry(internalNames.get(n))));\n+        for (var name : internalNames) {\n+            bh.consume(builder.classEntry(builder.utf8Entry(name)));\n@@ -127,3 +123,1 @@\n-        for (int i = 0; i < RUNS; i++) {\n-            int n = random.nextInt(size);\n-            var cd = classDescs.get(n);\n+        for (var cd : classDescs) {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/ConstantPoolBuildingClassEntry.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"}]}