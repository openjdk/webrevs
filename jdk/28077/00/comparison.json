{"files":[{"patch":"@@ -146,1 +146,1 @@\n-                    output.matches (\"CompressedClassSpaceBaseAddress=\" + thisBaseString + \" given with shift .*, cannot be used to encode class pointers\")) {\n+                    output.matches (\"CompressedClassSpaceBaseAddress=0x[0-9a-f]* given with shift .*, cannot be used to encode class pointers\")) {\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/AccessZeroNKlassHitsProtectionZone.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -357,0 +357,9 @@\n+    private boolean matchesHelper(String s, Pattern pattern) {\n+        return s != null && pattern.matcher(s).find();\n+    }\n+\n+    private boolean matchesHelper(String stdout, String stderr, String regexp) {\n+        Pattern pattern = Pattern.compile(regexp, Pattern.MULTILINE);\n+        return matchesHelper(stdout, pattern) || matchesHelper(stderr, pattern);\n+    }\n+\n@@ -361,1 +370,1 @@\n-        return getStdout().matches(regexp);\n+        return matchesHelper(getStdout(), null, regexp);\n@@ -368,1 +377,1 @@\n-        return getStderr().matches(regexp);\n+        return matchesHelper(null, getStderr(), regexp);\n@@ -375,1 +384,1 @@\n-        return stdoutMatches(regexp) || stderrMatches(regexp);\n+        return matchesHelper(getStdout(), getStderr(), regexp);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/OutputAnalyzer.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}