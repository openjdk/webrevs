{"files":[{"patch":"@@ -4948,1 +4948,1 @@\n-          return this;\n+            return this;\n@@ -5319,1 +5319,1 @@\n-          return this;\n+            return this;\n@@ -5323,1 +5323,1 @@\n-          return element;\n+            return element;\n@@ -5327,1 +5327,1 @@\n-          return element;\n+            return element;\n@@ -5574,1 +5574,1 @@\n-          return this;\n+            return this;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-            return ReverseOrderListView.of(this, false);\n+            return size() < 2 ? this : ReverseOrderListView.of(this, false);\n@@ -615,0 +615,11 @@\n+        @Override\n+        public E getFirst() {\n+            return e0;\n+        }\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public E getLast() {\n+            return e1 == EMPTY ? e0 : (E)e1;\n+        }\n+\n@@ -639,0 +650,6 @@\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<E> reversed() {\n+            return e1 == EMPTY ? this : new List12<>((E) e1, e0);\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.util.NoSuchElementException;\n+import java.util.function.Consumer;\n@@ -48,1 +50,1 @@\n-import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.assertThrows;\n@@ -110,0 +112,17 @@\n+    @DataProvider(name=\"reversed\")\n+    public Iterator<Object[]> reversed() {\n+        List<Object[]> reversed = new ArrayList<>();\n+        Consumer<Object[]> addReversed = data -> {\n+            @SuppressWarnings(\"unchecked\")\n+            List<String> act = (List<String>) data[0];\n+            @SuppressWarnings(\"unchecked\")\n+            List<String> exp = new ArrayList<>((List<String>) data[1]);\n+            Collections.reverse(exp);\n+            reversed.add(a(act.reversed(), exp));\n+        };\n+        empty().forEachRemaining(addReversed);\n+        nonempty().forEachRemaining(addReversed);\n+        sublists().forEachRemaining(addReversed);\n+        return reversed.iterator();\n+    }\n+\n@@ -146,0 +165,1 @@\n+        reversed().forEachRemaining(all::add);\n@@ -386,0 +406,18 @@\n+\n+    @Test(dataProvider = \"all\")\n+    public void getFirst(List<String> act, List<String> exp) {\n+        if (!act.isEmpty()) {\n+            assertEquals(act.getFirst(), exp.getFirst());\n+        } else {\n+            assertThrows(NoSuchElementException.class, act::getFirst);\n+        }\n+    }\n+\n+    @Test(dataProvider = \"all\")\n+    public void getLast(List<String> act, List<String> exp) {\n+        if (!act.isEmpty()) {\n+            assertEquals(act.getLast(), exp.getLast());\n+        } else {\n+            assertThrows(NoSuchElementException.class, act::getLast);\n+        }\n+    }\n","filename":"test\/jdk\/java\/util\/List\/ListFactories.java","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"}]}