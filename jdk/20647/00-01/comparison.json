{"files":[{"patch":"@@ -104,1 +104,1 @@\n-        Utils.checkEnclosingLayout(oo, base, (MemoryLayout)encl, ro);\n+        oo.checkEnclosingLayout(base, (MemoryLayout)encl, ro);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleSegmentView.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -376,0 +376,10 @@\n+    @ForceInline\n+    public final void checkEnclosingLayout(long offset, MemoryLayout enclosing, boolean readOnly) {\n+        checkAccess(offset, enclosing.byteSize(), readOnly);\n+        if (!isAlignedForElement(offset, enclosing)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"Target offset %d is incompatible with alignment constraint %d (of %s) for segment %s\"\n+                    , offset, enclosing.byteAlignment(), enclosing, this));\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -242,3 +242,1 @@\n-        \/\/ through the layout API, this is never the case, as the segment offset is checked\n-        \/\/ against the segment size. But when using 'byteOffsetHandle' this might return a\n-        \/\/ negative value. Seems incompatible also with scale(), which use exact operations.\n+        \/\/ through the layout API, this is never the case, as the injected 'base' is always 0.\n@@ -289,1 +287,1 @@\n-        Utils.checkEnclosingLayout(segment, offset, enclosing, true);\n+        ((AbstractMemorySegmentImpl)segment).checkEnclosingLayout(offset, enclosing, true);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -244,10 +244,0 @@\n-    @ForceInline\n-    public static void checkEnclosingLayout(MemorySegment segment, long offset, MemoryLayout enclosing, boolean readOnly) {\n-        ((AbstractMemorySegmentImpl)segment).checkAccess(offset, enclosing.byteSize(), readOnly);\n-        if (!((AbstractMemorySegmentImpl) segment).isAlignedForElement(offset, enclosing)) {\n-            throw new IllegalArgumentException(String.format(\n-                    \"Target offset %d is incompatible with alignment constraint %d (of %s) for segment %s\"\n-                    , offset, enclosing.byteAlignment(), enclosing, segment));\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}