{"files":[{"patch":"@@ -42,0 +42,1 @@\n+#include \"jvm.h\"\n@@ -171,1 +172,1 @@\n-\n+  _entropy_seed = 0x12345678;\n@@ -191,0 +192,10 @@\n+\/\/ Returns a deterministic sequence of pseudo random numbers. The main purpose is NOT\n+\/\/ for randomness but to get good entropy for the identity_hash() of archived Symbols,\n+\/\/ while keeping the contents of static CDS archives deterministic to ensure\n+\/\/ reproducibility of JDK builds.\n+int ArchiveBuilder::entropy() {\n+  assert(SafepointSynchronize::is_at_safepoint(), \"needed to ensure deterministic sequence\");\n+  _entropy_seed = os::next_random(_entropy_seed);\n+  return static_cast<int>(_entropy_seed);\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,0 +215,1 @@\n+  unsigned int _entropy_seed;\n@@ -337,0 +338,1 @@\n+  int entropy();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -516,3 +516,0 @@\n-  \/\/ Initialize random for updating the hash of symbols\n-  os::init_random(0x12345678);\n-\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"cds\/archiveBuilder.hpp\"\n@@ -76,3 +77,0 @@\n-  \/\/ This is called at a safepoint during dumping of a static CDS archive. The caller should have\n-  \/\/ called os::init_random() with a deterministic seed and then iterate all archived Symbols in\n-  \/\/ a deterministic order.\n@@ -80,1 +78,1 @@\n-  _hash_and_refcount =  pack_hash_and_refcount((short)os::random(), PERM_REFCOUNT);\n+  _hash_and_refcount =  pack_hash_and_refcount((short)ArchiveBuilder::current()->entropy(), PERM_REFCOUNT);\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}