{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import java.awt.EventQueue;\n@@ -28,2 +29,0 @@\n-import java.awt.event.ComponentAdapter;\n-import java.awt.event.ComponentEvent;\n@@ -33,2 +32,0 @@\n-import javax.swing.SwingUtilities;\n-\n@@ -40,1 +37,1 @@\n- * @run main SizeMinimizedTest\n+ * @run main\/manual SizeMinimizedTest\n@@ -73,12 +70,0 @@\n-            frame.addComponentListener(new ComponentAdapter() {\n-                @Override\n-                public void componentResized(ComponentEvent e) {\n-                    System.out.println(\"Frame Size: \" + frame.getSize());\n-\n-                    expectedSize = new Dimension(RESET_WIDTH, RESET_HEIGHT);\n-                    frameSize = frame.getSize();\n-\n-                    if (!expectedSize.equals(frameSize)) {\n-                        throw new RuntimeException(\"Test Failed due to size mismatch.\");\n-                    }\n-                }\n@@ -86,0 +71,1 @@\n+            frame.addWindowStateListener(new WindowAdapter() {\n@@ -87,2 +73,6 @@\n-                public void componentMoved(ComponentEvent e) {\n-                    System.out.println(\"Frame Location: \" + frame.getLocationOnScreen());\n+                public void windowStateChanged(WindowEvent e) {\n+                    if (e.getNewState() == Frame.NORMAL) {\n+                        System.out.println(\"Frame Size: \" + frame.getSize());\n+                        System.out.println(\"Frame Location: \" + frame.getLocationOnScreen());\n+                        expectedSize = new Dimension(RESET_WIDTH, RESET_HEIGHT);\n+                        frameSize = frame.getSize();\n@@ -90,2 +80,3 @@\n-                    expectedLoc = new Point(INITIAL_X + OFFSET * iterationCnt, INITIAL_Y);\n-                    frameLoc = frame.getLocationOnScreen();\n+                        if (!expectedSize.equals(frameSize)) {\n+                            throw new RuntimeException(\"Test Failed due to size mismatch.\");\n+                        }\n@@ -93,2 +84,6 @@\n-                    if (!expectedLoc.equals(frameLoc)) {\n-                        throw new RuntimeException(\"Test Failed due to location mismatch.\");\n+                        expectedLoc = new Point(INITIAL_X + OFFSET * iterationCnt, INITIAL_Y);\n+                        frameLoc = frame.getLocationOnScreen();\n+\n+                        if (!expectedLoc.equals(frameLoc)) {\n+                            throw new RuntimeException(\"Test Failed due to location mismatch.\");\n+                        }\n@@ -99,1 +94,8 @@\n-            frame.setSize(RESET_WIDTH, RESET_HEIGHT);\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setState(Frame.ICONIFIED);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setSize(RESET_WIDTH, RESET_HEIGHT);\n+            });\n@@ -102,1 +104,0 @@\n-\n@@ -104,1 +105,1 @@\n-                SwingUtilities.invokeAndWait(() -> {\n+                EventQueue.invokeAndWait(() -> {\n@@ -112,0 +113,5 @@\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setState(Frame.NORMAL);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(100);\n@@ -114,1 +120,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n+            EventQueue.invokeAndWait(() -> {\n","filename":"test\/jdk\/java\/awt\/Frame\/SizeMinimizedTest.java","additions":33,"deletions":27,"binary":false,"changes":60,"status":"modified"}]}