{"files":[{"patch":"@@ -1455,1 +1455,1 @@\n-size_t ShenandoahHeap::trash_humongous_region_at(ShenandoahHeapRegion* start) {\n+size_t ShenandoahHeap::trash_humongous_region_at(ShenandoahHeapRegion* start) const {\n@@ -1460,2 +1460,1 @@\n-  \/\/ have already unloaded classes, so the object may have a bad klass pointer.\n-  int regions_trashed = 0;\n+  \/\/ have already unloaded classes, so an unmarked object may have a bad klass pointer.\n@@ -1463,0 +1462,1 @@\n+  size_t index = region->index();\n@@ -1464,1 +1464,1 @@\n-    assert(region->is_humongous(), \"expect correct humongous start or continuation\");\n+    assert(region->is_humongous(), \"Expect correct humongous start or continuation\");\n@@ -1467,2 +1467,1 @@\n-    regions_trashed++;\n-    region = get_region(region->index() + 1);\n+    region = get_region(++index);\n@@ -1470,1 +1469,3 @@\n-  return regions_trashed;\n+\n+  \/\/ Return number of regions trashed\n+  return index - start->index();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-  size_t trash_humongous_region_at(ShenandoahHeapRegion *r);\n+  size_t trash_humongous_region_at(ShenandoahHeapRegion *r) const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}