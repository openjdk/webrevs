{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1239,1 +1239,0 @@\n-#if COMPILER2_OR_JVMCI\n@@ -1245,3 +1244,0 @@\n-#else\n-        obj = ik->allocate_instance(THREAD);\n-#endif \/\/ COMPILER2_OR_JVMCI\n@@ -1575,1 +1571,0 @@\n-#if COMPILER2_OR_JVMCI\n@@ -1595,1 +1590,0 @@\n-#endif \/* !COMPILER2_OR_JVMCI *\/\n@@ -1606,0 +1600,4 @@\n+  \/\/ These objects may escape when we return to Interpreter after deoptimization.\n+  \/\/ We need barrier so that stores that initialize these objects can't be reordered\n+  \/\/ with subsequent stores that make these objects accessible by other threads.\n+  OrderAccess::storestore();\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}