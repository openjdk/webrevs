{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,5 +23,0 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n@@ -29,0 +24,2 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.MethodModel;\n@@ -40,1 +37,0 @@\n-\n@@ -42,18 +38,16 @@\n-            public byte[] transform(ClassLoader loader, String className, Class<?> classBeingRedefined,\n-                                    ProtectionDomain pd, byte[] cb) {\n-                if (\"java\/awt\/GraphicsEnvironment\".equals(className)) {\n-                    System.out.println(\"Transforming java.awt.GraphicsEnvironment.\");\n-                    try {\n-                        final ClassReader cr = new ClassReader(cb);\n-                        final ClassWriter cw = new ClassWriter(cr, 0);\n-                        cr.accept(new ClassVisitor(Opcodes.ASM9, cw) {\n-\n-                            @Override\n-                            public MethodVisitor visitMethod(int access, String name, String descriptor, String signature,\n-                                                             String[] exceptions) {\n-                                if (\"isHeadless\".equals(name) && \"()Z\".equals(descriptor)) {\n-                                    System.out.println(\"isHeadless removed from java.awt.GraphicsEnvironment.\");\n-                                    \/\/ WHACK! Remove the isHeadless method.\n-                                    return null;\n-                                }\n-                                return super.visitMethod(access, name, descriptor, signature, exceptions);\n+            public byte[] transform(ClassLoader loader,\n+                                    String className,\n+                                    Class<?> classBeingRedefined,\n+                                    ProtectionDomain pd,\n+                                    byte[] cb) {\n+                if (!\"java\/awt\/GraphicsEnvironment\".equals(className)) {\n+                    return null;\n+                }\n+                System.out.println(\"Transforming java.awt.GraphicsEnvironment.\");\n+                try {\n+                    return ClassFile.of().transformClass(ClassFile.of().parse(cb), (classBuilder, element) -> {\n+                        if (element instanceof MethodModel method) {\n+                            if (\"isHeadless\".equals(method.methodName().stringValue()) &&\n+                                    \"()Z\".equals(method.methodType().stringValue())) {\n+                                System.out.println(\"isHeadless removed from java.awt.GraphicsEnvironment.\");\n+                                return;\n@@ -61,5 +55,6 @@\n-                        }, 0);\n-                        return cw.toByteArray();\n-                    } catch (Exception e) {\n-                        e.printStackTrace();\n-                    }\n+                        }\n+                        classBuilder.with(element);\n+                    });\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                    return null;\n@@ -67,1 +62,0 @@\n-                return null;\n","filename":"test\/jdk\/java\/awt\/Headless\/HeadlessMalfunctionAgent.java","additions":25,"deletions":31,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n@@ -41,1 +40,0 @@\n- *              HeadlessMalfunctionAgent$1$1\n@@ -52,2 +50,1 @@\n-                        \"HeadlessMalfunctionAgent$1.class\",\n-                        \"HeadlessMalfunctionAgent$1$1.class\");\n+                        \"HeadlessMalfunctionAgent$1.class\");\n","filename":"test\/jdk\/java\/awt\/Headless\/HeadlessMalfunctionTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}