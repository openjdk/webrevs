{"files":[{"patch":"@@ -511,1 +511,1 @@\n-  JRT_BLOCK\n+  JRT_BLOCK_NO_ASYNC\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,5 @@\n+ * @run main\/othervm -Xcomp -XX:TieredStopAtLevel=3 -XX:+StressCompiledExceptionHandlers\n+ *                   -XX:CompileCommand=dontinline,AsyncExceptionTest::internalRun2\n+ *                   -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun1\n+ *                   -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun2\n+ *                   AsyncExceptionTest\n@@ -31,4 +36,4 @@\n-                     -XX:CompileCommand=dontinline,AsyncExceptionTest::internalRun2\n-                     -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun1\n-                     -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun2\n-                     AsyncExceptionTest\n+ *                   -XX:CompileCommand=dontinline,AsyncExceptionTest::internalRun2\n+ *                   -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun1\n+ *                   -XX:CompileCommand=compileonly,AsyncExceptionTest::internalRun2\n+ *                   AsyncExceptionTest\n@@ -45,1 +50,0 @@\n-    public CountDownLatch exitSyncObj = new CountDownLatch(1);\n@@ -51,0 +55,1 @@\n+    private volatile RuntimeException error = null;\n@@ -57,1 +62,1 @@\n-            throw new RuntimeException(\"Caught ThreadDeath in run() instead of internalRun2() or internalRun1().\\n\"\n+            error = new RuntimeException(\"Caught ThreadDeath in run() instead of internalRun2() or internalRun1().\\n\"\n@@ -65,1 +70,1 @@\n-            throw new RuntimeException(\"Didn't catch ThreadDeath in internalRun2() nor in internalRun1().\\n\"\n+            error =  new RuntimeException(\"Didn't catch ThreadDeath in internalRun2() nor in internalRun1().\\n\"\n@@ -69,1 +74,0 @@\n-        exitSyncObj.countDown();\n@@ -126,12 +130,3 @@\n-                while (true) {\n-                    \/\/ Send async exception and wait until it is thrown\n-                    JVMTIUtils.stopThread(thread);\n-                    thread.exitSyncObj.await();\n-                    Thread.sleep(100);\n-\n-                    if (!thread.isAlive()) {\n-                        \/\/ Done with Thread.stop() calls since\n-                        \/\/ thread is not alive.\n-                        break;\n-                    }\n-                }\n+                \/\/ Send async exception and wait until it is thrown\n+                JVMTIUtils.stopThread(thread);\n+                thread.join();\n@@ -146,5 +141,8 @@\n-\n-            try {\n-                thread.join();\n-            } catch (InterruptedException e) {\n-                throw new Error(\"Unexpected: \" + e);\n+            if (thread.isAlive()) {\n+                \/\/ Really shouldn't be possible after join() above...\n+                throw new RuntimeException(\"Thread did not exit.\\n\"\n+                    + \"receivedThreadDeathinInternal1=\" + thread.receivedThreadDeathinInternal1\n+                    + \"; receivedThreadDeathinInternal2=\" + thread.receivedThreadDeathinInternal2);\n+            }\n+            if (thread.error != null) {\n+                throw thread.error;\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/AsyncExceptionTest.java","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"}]}