{"files":[{"patch":"@@ -29,0 +29,1 @@\n+ * @requires !vm.opt.final.UseTransparentHugePages\n@@ -35,0 +36,2 @@\n+import jdk.test.lib.os.linux.HugePageConfiguration;\n+import jdk.test.lib.os.linux.HugePageConfiguration.ShmemTHPMode;\n@@ -36,0 +39,1 @@\n+import jtreg.SkippedException;\n@@ -44,0 +48,7 @@\n+        final HugePageConfiguration hugePageConfiguration = HugePageConfiguration.readFromOS();\n+        final ShmemTHPMode mode = hugePageConfiguration.getShmemThpMode();\n+\n+        if (mode != ShmemTHPMode.never && mode != ShmemTHPMode.advise) {\n+            throw new SkippedException(\"The UseTransparentHugePages option may not be respected with Shmem THP Mode: \" + mode.name());\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestAllocateHeapAt.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires !vm.opt.final.UseTransparentHugePages\n@@ -35,0 +36,2 @@\n+import jdk.test.lib.os.linux.HugePageConfiguration;\n+import jdk.test.lib.os.linux.HugePageConfiguration.ShmemTHPMode;\n@@ -36,0 +39,1 @@\n+import jtreg.SkippedException;\n@@ -44,0 +48,7 @@\n+        final HugePageConfiguration hugePageConfiguration = HugePageConfiguration.readFromOS();\n+        final ShmemTHPMode mode = hugePageConfiguration.getShmemThpMode();\n+\n+        if (mode != ShmemTHPMode.never && mode != ShmemTHPMode.advise) {\n+            throw new SkippedException(\"The UseTransparentHugePages option may not be respected with Shmem THP Mode: \" + mode.name());\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestAllocateHeapAt.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+ * @library \/test\/lib\n@@ -52,0 +53,2 @@\n+\n+import jdk.test.lib.os.linux.HugePageConfiguration;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/THPsInThreadStackPreventionTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+ * @library \/test\/lib\n@@ -55,0 +56,1 @@\n+import jdk.test.lib.os.linux.HugePageConfiguration;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @library \/test\/lib\n@@ -37,0 +38,1 @@\n+import jdk.test.lib.os.linux.HugePageConfiguration;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDetection.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -389,0 +389,1 @@\n+        vmOptFinalFlag(map, \"UseTransparentHugePages\");\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+package jdk.test.lib.os.linux;\n+\n@@ -36,1 +38,1 @@\n-class HugePageConfiguration {\n+public class HugePageConfiguration {\n@@ -66,1 +68,1 @@\n-    enum THPMode {always, never, madvise}\n+    public enum THPMode {always, never, madvise}\n@@ -70,1 +72,1 @@\n-    enum ShmemTHPMode {always, within_size, advise, never, deny, force, unknown}\n+    public enum ShmemTHPMode {always, within_size, advise, never, deny, force, unknown}\n@@ -136,0 +138,9 @@\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(_explicitDefaultHugePageSize,\n+                            _thpPageSize,\n+                            _explicitHugePageConfigurations,\n+                            _thpMode,\n+                            _shmemThpMode);\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/os\/linux\/HugePageConfiguration.java","additions":14,"deletions":3,"binary":false,"changes":17,"previous_filename":"test\/hotspot\/jtreg\/runtime\/os\/HugePageConfiguration.java","status":"renamed"}]}