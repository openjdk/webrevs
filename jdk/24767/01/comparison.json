{"files":[{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4135833\n+ * @summary Tests that JComboBox draws correctly if the first item in list is an empty string\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4135833\n+ *\/\n+\n+public class bug4135833 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press the combo box. If the popup is readable and appears to be sized properly,\n+            then it passes. The First item is blank intentionally.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4135833::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4135833\");\n+        JPanel panel = new JPanel();\n+        JComboBox comboBox = new JComboBox(new Object[]{\"\", \"Bob\", \"Hank\", \"Joe\", \"Fred\"});\n+        panel.add(comboBox);\n+        frame.add(panel);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4135833.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+\n+\/*\n+ * @test\n+ * @bug 4171819\n+ * @summary Tests that JComboBox uses a lower bevel border in windows\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4171819\n+ *\/\n+\n+public class bug4171819 {\n+    static boolean lafOk = true;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test is for Windows L&F only. If you see\n+            \"No Windows L&F installed\" label just press \"Pass\".\n+\n+            Look at the combo box.  If the border around it looks like it's\n+            lowered rather than raised, it passes the test.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4171819::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+            System.out.println(\"succeeded\");\n+        } catch (Exception e) {\n+            System.err.println(\"Couldn't load the Windows Look and Feel\");\n+            lafOk = false;\n+        }\n+\n+        JFrame frame = new JFrame(\"bug4171819\");\n+        JPanel panel = new JPanel();\n+        JComboBox comboBox;\n+\n+        if (lafOk) {\n+            comboBox = new JComboBox(new Object[]{\n+                    \"Coma Berenices\",\n+                    \"Triangulum\",\n+                    \"Camelopardis\",\n+                    \"Cassiopea\"});\n+            panel.add(comboBox);\n+        } else {\n+            JLabel label = new JLabel(\"No Windows L&F installed\");\n+            panel.add(label);\n+        }\n+        frame.add(panel);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4171819.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.BoxLayout;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4248128 7148092\n+ * @summary Tests that alt+down arrow pulls down JComboBox popup\n+ * @key headful\n+ * @run main bug4248128\n+ *\/\n+\n+public class bug4248128 {\n+    static JFrame frame;\n+    static JComboBox combo;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(250);\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.waitForIdle();\n+\n+            if (!combo.isPopupVisible()) {\n+                throw new RuntimeException(\"Popup did not appear.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createTestUI() {\n+        frame = new JFrame(\"4248128 Test\");\n+        Object[] fruits = {\"Banana\", \"Pear\", \"Apple\"};\n+        combo = new JComboBox(fruits);\n+        frame.setLayout(new BoxLayout(frame.getContentPane(), BoxLayout.X_AXIS));\n+        frame.add(combo);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4248128.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.InputEvent;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4436376\n+ * @key headful\n+ * @summary Tests that ComboBox items can't be deselected with Ctrl+click\n+ * @run main bug4436376\n+ *\/\n+\n+public class bug4436376 {\n+    static JFrame frame;\n+    static volatile Point p;\n+    final static int SELECTED_INDEX = 2;\n+    static JComboBox combo;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(250);\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait(() -> p = combo.getLocationOnScreen());\n+            robot.waitForIdle();\n+\n+            robot.mouseMove(p.x + 10, p.y + 10);\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+            robot.waitForIdle();\n+\n+            if (combo.getSelectedIndex() != SELECTED_INDEX) {\n+                throw new RuntimeException(\"Failed: selected index has been changed\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createTestUI() {\n+        frame = new JFrame(\"bug4436376\");\n+        String[] items = new String[]{\"One\", \"Two\", \"Three\", \"Four\"};\n+        combo = new JComboBox(items);\n+        combo.setSelectedIndex(SELECTED_INDEX);\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(combo);\n+        frame.setLocationRelativeTo(null);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4436376.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"}]}