{"files":[{"patch":"@@ -770,1 +770,2 @@\n-                                ELIGATURES, ETRACKING, ESUPERSCRIPT);\n+                                ELIGATURES, ETRACKING, ESUPERSCRIPT,\n+                                EPROPORTIONAL_FIGURES, ETABULAR_FIGURES);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Font.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+import jdk.internal.access.SharedSecrets;\n+\n@@ -49,2 +51,0 @@\n-import jdk.internal.access.SharedSecrets;\n-\n@@ -1114,0 +1114,46 @@\n+\n+    \/**\n+     * Attribute key for enabling optional proportional figures. Values are\n+     * instances of <b>{@code Integer}<\/b>. The default value is\n+     * {@code 0}, which means do not use optional proportional figures.\n+     *\n+     * <p>The constant value {@link #PROPORTIONAL_FIGURES_ON} is defined.\n+     *\n+     * <p>Conflicts with {@link #TABULAR_FIGURES}\n+     *\n+     * @since 26\n+     *\/\n+    public static final TextAttribute PROPORTIONAL_FIGURES =\n+        new TextAttribute(\"proportional-figures\");\n+\n+    \/**\n+     * Request to enable proportional figures.\n+     *\n+     * @see #PROPORTIONAL_FIGURES\n+     * @since 26\n+     *\/\n+    public static final Integer PROPORTIONAL_FIGURES_ON =\n+        Integer.valueOf(1);\n+\n+    \/**\n+     * Attribute key for enabling optional tabular figures. Values are\n+     * instances of <b>{@code Integer}<\/b>. The default value is\n+     * {@code 0}, which means do not use optional tabular figures.\n+     *\n+     * <p>The constant value {@link #TABULAR_FIGURES_ON} is defined.\n+     *\n+     * <p>Conflicts with {@link #PROPORTIONAL_FIGURES}\n+     *\n+     * @since 26\n+     *\/\n+    public static final TextAttribute TABULAR_FIGURES =\n+        new TextAttribute(\"tabular-figures\");\n+\n+    \/**\n+     * Request to enable tabular figures.\n+     *\n+     * @see #TABULAR_FIGURES\n+     * @since 26\n+     *\/\n+    public static final Integer TABULAR_FIGURES_ON =\n+        Integer.valueOf(1);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/font\/TextAttribute.java","additions":48,"deletions":2,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -86,0 +86,2 @@\n+    private byte proportionalFigures; \/\/ 0\n+    private byte tabularFigures; \/\/ 0\n@@ -195,0 +197,7 @@\n+    public int getProportionalFigures() { return proportionalFigures; }\n+    public void setProportionalFigures(int f) {\n+      this.proportionalFigures = (byte)f; update(EPROPORTIONAL_FIGURES); }\n+\n+    public int getTabularFigures() { return tabularFigures; }\n+    public void setTabularFigures(int f) {\n+      this.tabularFigures = (byte)f; update(ETABULAR_FIGURES); }\n@@ -538,0 +547,2 @@\n+                case EPROPORTIONAL_FIGURES: b.append(proportionalFigures); break;\n+                case ETABULAR_FIGURES: b.append(tabularFigures); break;\n@@ -596,0 +607,2 @@\n+        case EPROPORTIONAL_FIGURES: proportionalFigures = src.proportionalFigures; break;\n+        case ETABULAR_FIGURES: tabularFigures = src.tabularFigures; break;\n@@ -625,0 +638,2 @@\n+        case EPROPORTIONAL_FIGURES: return proportionalFigures == src.proportionalFigures;\n+        case ETABULAR_FIGURES: return tabularFigures == src.tabularFigures;\n@@ -680,0 +695,2 @@\n+        case EPROPORTIONAL_FIGURES: proportionalFigures = (byte) ((Number)o).intValue(); break;\n+        case ETABULAR_FIGURES: tabularFigures = (byte) ((Number)o).intValue(); break;\n@@ -720,0 +737,2 @@\n+        case EPROPORTIONAL_FIGURES: return Integer.valueOf(proportionalFigures);\n+        case ETABULAR_FIGURES: return Integer.valueOf(tabularFigures);\n@@ -752,0 +771,2 @@\n+        case EPROPORTIONAL_FIGURES: return proportionalFigures >= 0 && proportionalFigures <= 1;\n+        case ETABULAR_FIGURES: return tabularFigures >= 0 && tabularFigures <= 1;\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/AttributeValues.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -68,1 +68,3 @@\n-    EBASELINE_TRANSFORM(null);\n+    EBASELINE_TRANSFORM(null),\n+    EPROPORTIONAL_FIGURES(PROPORTIONAL_FIGURES),\n+    ETABULAR_FIGURES(TABULAR_FIGURES);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/EAttribute.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -369,0 +369,2 @@\n+            if (values.getProportionalFigures() != 0) _typo_flags |= 0x4;\n+            if (values.getTabularFigures() != 0) _typo_flags |= 0x8;\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/GlyphLayout.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -226,0 +226,2 @@\n+#define TYPO_PNUM 0x00000004\n+#define TYPO_TNUM 0x00000008\n@@ -258,0 +260,2 @@\n+     char* pnum = (flags & TYPO_PNUM) ? \"pnum\" : \"-pnum\";\n+     char* tnum = (flags & TYPO_TNUM) ? \"tnum\" : \"-tnum\";\n@@ -296,1 +300,1 @@\n-     features = calloc(2, sizeof(hb_feature_t));\n+     features = calloc(4, sizeof(hb_feature_t));\n@@ -300,0 +304,2 @@\n+         hb_feature_from_string(pnum, -1, &features[featureCount++]);\n+         hb_feature_from_string(tnum, -1, &features[featureCount++]);\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/HBShaper.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,0 +64,2 @@\n+#define TYPO_PNUM 0x00000004\n+#define TYPO_TNUM 0x00000008\n@@ -95,0 +97,2 @@\n+     char* pnum = (flags & TYPO_PNUM) ? \"pnum\" : \"-pnum\";\n+     char* tnum = (flags & TYPO_TNUM) ? \"tnum\" : \"-tnum\";\n@@ -123,1 +127,1 @@\n-     features = calloc(2, sizeof(hb_feature_t));\n+     features = calloc(4, sizeof(hb_feature_t));\n@@ -127,0 +131,2 @@\n+         hb_feature_from_string(pnum, -1, &features[featureCount++]);\n+         hb_feature_from_string(tnum, -1, &features[featureCount++]);\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/HBShaper_Panama.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}