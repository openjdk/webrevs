{"files":[{"patch":"@@ -1,163 +0,0 @@\n-\/*\n- * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.AWTException;\n-import java.awt.Button;\n-import java.awt.Color;\n-import java.awt.EventQueue;\n-import java.awt.Frame;\n-import java.awt.Graphics;\n-import java.awt.SystemTray;\n-import java.awt.TrayIcon;\n-import java.awt.image.BufferedImage;\n-\n-import jtreg.SkippedException;\n-import sun.awt.AppContext;\n-import sun.awt.SunToolkit;\n-\n-\/*\n- * @test\n- * @bug 6390934\n- * @library \/java\/awt\/regtesthelpers \/test\/lib\n- * @build PassFailJFrame jtreg.SkippedException\n- * @modules java.desktop\/sun.awt\n- * @summary To check if TrayIcon msg is displayed when there is no system tray.\n- * @run main\/manual RemoveSystemTrayTest\n- *\/\n-\n-public class RemoveSystemTrayTest {\n-    private static SystemTray tray;\n-    private static TrayIcon icon;\n-    private static final ThreadGroup threadGroup\n-            = new ThreadGroup(\"Test thread group\");\n-    private static AppContext appContext = null;\n-    private static final Object lock = new Object();\n-    \/\/ stores information whether AppContext was created to prevent spurious wakeups\n-    private static volatile boolean isCreated;\n-\n-    private static final String INSTRUCTIONS = \"\"\"\n-                1) When the test starts an icon is added to the SystemTray area.\n-                2) Remove the SystemTray manually (if it's impossible just press PASS).\n-                3) If you still see the tray icon in the tray area region\n-                   then press FAIL else goto next step.\n-                4) Press button 'Show message'.\n-                5) If you see the tray icon message then press FAIL else press PASS.\n-                \"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        if (!SystemTray.isSupported()) {\n-            throw new SkippedException(\"Test not applicable as\"\n-                                       + \" System Tray not supported\");\n-        }\n-        try {\n-            PassFailJFrame.builder()\n-                          .title(\"FocusLostAfterTrayTest Instructions\")\n-                          .instructions(INSTRUCTIONS)\n-                          .columns(40)\n-                          .testUI(RemoveSystemTrayTest::createAndShowUI)\n-                          .logArea(4)\n-                          .build()\n-                          .awaitAndCheck();\n-        } finally {\n-            EventQueue.invokeAndWait(() -> {\n-                if (tray != null) {\n-                    tray.remove(icon);\n-                }\n-            });\n-        }\n-    }\n-\n-    private static Frame createAndShowUI() {\n-        Frame frame = new Frame(\"RemoveSystemTrayTest\");\n-        Button button = new Button(\"Show message\");\n-        button.addActionListener(e -> displayMessage());\n-        frame.add(button);\n-        frame.setSize(150, 100);\n-\n-        createAppContext();\n-        final Runnable runnable = RemoveSystemTrayTest::addTrayIcon;\n-        final Thread thread = new Thread(threadGroup, runnable,\n-                                         \"Thread to add icon\");\n-        thread.start();\n-        return frame;\n-    }\n-\n-\n-    private static void addTrayIcon() {\n-        BufferedImage img = new BufferedImage(32, 32,\n-                                              BufferedImage.TYPE_INT_ARGB);\n-        Graphics g = img.createGraphics();\n-        g.setColor(Color.WHITE);\n-        g.fillRect(0, 0, 32, 32);\n-        g.setColor(Color.RED);\n-        g.fillRect(6, 6, 20, 20);\n-        g.dispose();\n-\n-        tray = SystemTray.getSystemTray();\n-        icon = new TrayIcon(img);\n-        icon.setImageAutoSize(true);\n-\n-        try {\n-            tray.add(icon);\n-        } catch (AWTException e) {\n-            throw new RuntimeException(\"Error while adding\"\n-                                       + \" icon to system tray\", e);\n-        }\n-    }\n-\n-    private static void createAppContext() {\n-        final Runnable runnable = () -> {\n-            appContext = SunToolkit.createNewAppContext();\n-            synchronized (lock) {\n-                isCreated = true;\n-                lock.notifyAll();\n-            }\n-        };\n-\n-        final Thread thread = new Thread(threadGroup, runnable, \"Test thread\");\n-        synchronized (lock) {\n-            thread.start();\n-            while (!isCreated) {\n-                try {\n-                    lock.wait();\n-                } catch (InterruptedException ie) {\n-                    ie.printStackTrace();\n-                }\n-            }\n-        }\n-\n-        if (appContext == null) {\n-            PassFailJFrame.log(\"WARNING: Failed to create AppContext.\");\n-        } else {\n-            PassFailJFrame.log(\"AppContext was created.\");\n-        }\n-    }\n-\n-    private static void displayMessage() {\n-        final Runnable runnable = () -> icon.displayMessage(\"caption\",\n-                                                \"TrayIcon Msg\", TrayIcon.MessageType.INFO);\n-        final Thread thread = new Thread(threadGroup, runnable,\n-                                         \"Thread to display message\");\n-        thread.start();\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/RemoveSystemTrayTest.java","additions":0,"deletions":163,"binary":false,"changes":163,"status":"deleted"}]}