{"files":[{"patch":"@@ -1257,3 +1257,1 @@\n-class ShenandoahRecycleTrashedRegionsTask final : public WorkerTask {\n-private:\n-  ShenandoahRegionIterator _regions;\n+class ShenandoahRecycleTrashedRegionClosure final : public ShenandoahHeapRegionClosure {\n@@ -1261,2 +1259,1 @@\n-  ShenandoahRecycleTrashedRegionsTask() :\n-    WorkerTask(\"Shenandoah Recycle Trashed Regions\") {}\n+  ShenandoahRecycleTrashedRegionClosure(): ShenandoahHeapRegionClosure() {}\n@@ -1264,5 +1261,6 @@\n-  void work(uint worker_id) {\n-    ShenandoahHeapRegion* region = nullptr;\n-    while ((region = _regions.next()) != nullptr) {\n-      region->try_recycle();\n-    }\n+  void heap_region_do(ShenandoahHeapRegion* r) {\n+    r->try_recycle();\n+  }\n+\n+  bool is_thread_safe() {\n+    return true;\n@@ -1279,2 +1277,2 @@\n-  ShenandoahRecycleTrashedRegionsTask task;\n-  heap->workers()->run_task(&task);\n+  ShenandoahRecycleTrashedRegionClosure closure;\n+  heap->parallel_heap_region_iterate(&closure);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"}]}