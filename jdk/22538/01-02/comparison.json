{"files":[{"patch":"@@ -1050,3 +1050,3 @@\n-                      ShenandoahWorkerPolicy::calc_workers_for_conc_cleanup(),\n-                      \"cleanup early.\");\n-  ShenandoahHeap::heap()->free_set()->recycle_trash();\n+                              ShenandoahWorkerPolicy::calc_workers_for_conc_cleanup(),\n+                              \"cleanup early.\");\n+  ShenandoahHeap::heap()->recycle_trash();\n@@ -1185,3 +1185,3 @@\n-                        ShenandoahWorkerPolicy::calc_workers_for_conc_cleanup(),\n-                        \"cleanup complete.\");\n-  ShenandoahHeap::heap()->free_set()->recycle_trash();\n+                              ShenandoahWorkerPolicy::calc_workers_for_conc_cleanup(),\n+                              \"cleanup complete.\");\n+  ShenandoahHeap::heap()->recycle_trash();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1262,1 +1262,1 @@\n-    WorkerTask(\"Shenandoah Recycle trashed region.\") {}\n+    WorkerTask(\"Shenandoah Recycle Trashed Regions\") {}\n@@ -1265,1 +1265,0 @@\n-    const ShenandoahHeap* heap = ShenandoahHeap::heap();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-  if (is_trash() && _recycling.try_set()) {\n+  if (_recycling.try_set()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}