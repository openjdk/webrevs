{"files":[{"patch":"@@ -1271,1 +1271,1 @@\n-  \/\/ lock is not reentrable, check we don't have it\n+  \/\/ lock is not non-reentrant, check we don't have it\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -575,0 +575,1 @@\n+  assert(_recycling.is_set() && is_trash(), \"Wrong state\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-  \/\/ Individual states:\n+  \/\/ Primitive state predicates\n@@ -197,0 +197,2 @@\n+  bool is_regular_pinned()         const { return state() == _pinned; }\n+  bool is_trash()                  const { return state() == _trash; }\n@@ -198,5 +200,4 @@\n-  bool is_empty_state(RegionState state) const { return state == _empty_committed || state == _empty_uncommitted; }\n-  bool is_humongous_start_state(RegionState state) const { return state == _humongous_start || state == _pinned_humongous_start; }\n-\n-  \/\/ Participation in logical groups:\n-  bool is_empty()                  const { return this->is_empty_state(this->state()); }\n+  \/\/ Derived state predicates (boolean combinations of individual states)\n+  bool static is_empty_state(RegionState state) { return state == _empty_committed || state == _empty_uncommitted; }\n+  bool static is_humongous_start_state(RegionState state) { return state == _humongous_start || state == _pinned_humongous_start; }\n+  bool is_empty()                  const { return is_empty_state(this->state()); }\n@@ -204,1 +205,0 @@\n-  bool is_trash()                  const { return state() == _trash; }\n@@ -210,1 +210,0 @@\n-  bool is_regular_pinned()         const { return state() == _pinned; }\n@@ -268,1 +267,1 @@\n-  ShenandoahSharedFlag _recycling;\n+  ShenandoahSharedFlag _recycling; \/\/ Used to indicate that the region is being recycled; see try_recycle*().\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}