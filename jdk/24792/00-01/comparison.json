{"files":[{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8319372\n+ * @summary Missed optimization in IGVN because `CastIINode::Value` used to\n+ *          look for deep structures. Reported in 8320909. Fixed in 8319372.\n+ *\n+ * @run main\/othervm\n+ *           -XX:CompileCommand=quiet\n+ *           -XX:CompileCommand=compileonly,MissedOptCastII::*\n+ *           -XX:-TieredCompilation -Xcomp\n+ *           -XX:+IgnoreUnrecognizedVMOptions\n+ *           -XX:+StressIGVN -XX:VerifyIterativeGVN=10\n+ *           MissedOptCastII\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8319372\n+ *\n+ * @run main\/othervm MissedOptCastII\n+ *\/\n+\n+public class MissedOptCastII {\n+    static long res = 0;\n+\n+    static void test() {\n+        int i, i1 = 0, k, l = -4;\n+        for (i = 0; i < 100; i++) {\n+            for (int j = 0; j < 10; j++) {\n+                for (k = 1; k < 2; k++) {\n+                    i1 = l;\n+                    l += k * k;\n+                    if (l != 0) {\n+                        res = i + i1 + Float.floatToIntBits(2);\n+                    }\n+                }\n+            }\n+        }\n+        res = i + i1;\n+    }\n+\n+    public static void main(String[] args) {\n+        test();\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/MissedOptCastII.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -37,1 +37,1 @@\n- *          -XX:CompileOnly=MissingOptWithShiftConvAnd::test\n+ *          -XX:CompileOnly=MissedOptWithShiftConvAnd::test\n@@ -40,1 +40,1 @@\n- *          MissingOptWithShiftConvAnd\n+ *          MissedOptWithShiftConvAnd\n@@ -43,1 +43,8 @@\n-public class MissingOptWithShiftConvAnd {\n+\/*\n+ * @test\n+ * @bug 8320909\n+ *\n+ * @run main\/othervm MissedOptWithShiftConvAnd\n+ *\/\n+\n+public class MissedOptWithShiftConvAnd {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/MissedOptWithShiftConvAnd.java","additions":10,"deletions":3,"binary":false,"changes":13,"previous_filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/MissingOptWithShiftConvAnd.java","status":"renamed"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8320909\n+ * @summary Similar to MissedOptWithShiftConvAnd, but with CastII on the way.\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm\n+ *          -XX:CompileOnly=MissedOptWithShiftConvCastAnd::test\n+ *          -XX:-TieredCompilation -Xbatch\n+ *          -XX:+IgnoreUnrecognizedVMOptions -XX:VerifyIterativeGVN=10\n+ *          MissedOptWithShiftConvCastAnd\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8320909\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm MissedOptWithShiftConvCastAnd\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+\n+public class MissedOptWithShiftConvCastAnd {\n+    static long instanceCount;\n+\n+    public static void main(String[] args) throws Exception {\n+        Thread thread = new Thread() {\n+            public void run() {\n+                test(0);\n+            }\n+        };\n+        \/\/ Give thread some time to trigger compilation\n+        thread.setDaemon(true);\n+        thread.start();\n+        Thread.sleep(Utils.adjustTimeout(500));\n+    }\n+\n+    static void test(int x) {\n+        for (int i = 3; ; ++i) {\n+            for (int j = 5; j > 1; --j) {\n+                instanceCount >>= x <<= 16;\n+            }\n+            x >>>= 16;\n+            for (int j = 1; j < 5; j++) {\n+                try {\n+                    x = 1;\n+                } catch (ArithmeticException a_e) {\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/MissedOptWithShiftConvCastAnd.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8320909\n- * @summary Similar to MissingOptWithShiftConvAnd, but with Cast_II on the way.\n- * @library \/test\/lib\n- *\n- * @run main\/othervm\n- *          -XX:CompileOnly=MissingOptWithShiftConvCastAnd::test\n- *          -XX:-TieredCompilation -Xbatch\n- *          -XX:+IgnoreUnrecognizedVMOptions -XX:VerifyIterativeGVN=10\n- *          MissingOptWithShiftConvCastAnd\n- *\/\n-\n-import jdk.test.lib.Utils;\n-\n-public class MissingOptWithShiftConvCastAnd {\n-    static long instanceCount;\n-\n-    public static void main(String[] args) throws Exception {\n-        Thread thread = new Thread() {\n-            public void run() {\n-                test(0);\n-            }\n-        };\n-        \/\/ Give thread some time to trigger compilation\n-        thread.setDaemon(true);\n-        thread.start();\n-        Thread.sleep(Utils.adjustTimeout(500));\n-    }\n-\n-    static void test(int x) {\n-        for (int i = 3; ; ++i) {\n-            for (int j = 5; j > 1; --j) {\n-                instanceCount >>= x <<= 16;\n-            }\n-            x >>>= 16;\n-            for (int j = 1; j < 5; j++) {\n-                try {\n-                    x = 1;\n-                } catch (ArithmeticException a_e) {\n-                }\n-            }\n-        }\n-    }\n-}\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/MissingOptWithShiftConvCastAnd.java","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"}]}