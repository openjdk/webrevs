{"files":[{"patch":"@@ -216,2 +216,2 @@\n-  static int desired_max_code_buffer_size() {\n-    return (int)NMethodSizeLimit;  \/\/ default 64K\n+  static uint desired_max_code_buffer_size() {\n+    return (uint)NMethodSizeLimit;  \/\/ default 64K\n@@ -219,1 +219,1 @@\n-  static int desired_max_constant_size() {\n+  static uint desired_max_constant_size() {\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-int Compiler::code_buffer_size() {\n+uint Compiler::code_buffer_size() {\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  static int code_buffer_size();\n+  static uint code_buffer_size();\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-BufferBlob* BufferBlob::create(const char* name, int buffer_size) {\n+BufferBlob* BufferBlob::create(const char* name, uint buffer_size) {\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-  static BufferBlob* create(const char* name, int buffer_size);\n+  static BufferBlob* create(const char* name, uint buffer_size);\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -523,1 +523,1 @@\n-CodeBlob* CodeCache::allocate(int size, CodeBlobType code_blob_type, bool handle_alloc_failure, CodeBlobType orig_code_blob_type) {\n+CodeBlob* CodeCache::allocate(uint size, CodeBlobType code_blob_type, bool handle_alloc_failure, CodeBlobType orig_code_blob_type) {\n@@ -1578,1 +1578,1 @@\n-void CodeCache::print_trace(const char* event, CodeBlob* cb, int size) {\n+void CodeCache::print_trace(const char* event, CodeBlob* cb, uint size) {\n@@ -1581,1 +1581,5 @@\n-    if (size == 0)  size = cb->size();\n+    if (size == 0) {\n+      int s = cb->size();\n+      assert(s >= 0, \"CodeBlob size is negative: %d\", s);\n+      size = (uint) s;\n+    }\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-  static CodeBlob* allocate(int size, CodeBlobType code_blob_type, bool handle_alloc_failure = true, CodeBlobType orig_code_blob_type = CodeBlobType::All); \/\/ allocates a new CodeBlob\n+  static CodeBlob* allocate(uint size, CodeBlobType code_blob_type, bool handle_alloc_failure = true, CodeBlobType orig_code_blob_type = CodeBlobType::All); \/\/ allocates a new CodeBlob\n@@ -229,1 +229,1 @@\n-  static void print_trace(const char* event, CodeBlob* cb, int size = 0) PRODUCT_RETURN;\n+  static void print_trace(const char* event, CodeBlob* cb, uint size = 0) PRODUCT_RETURN;\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,10 @@\n+\/**\n+ * @test\n+ * @bug 8316653\n+ * @requires vm.debug\n+ * @summary Test flag with max value\n+ *\n+ * @run main\/othervm -XX:NMethodSizeLimit=2147483647\n+ *                   compiler.arguments.TestC1Globals\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestC1Globals.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}