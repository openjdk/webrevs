{"files":[{"patch":"@@ -63,0 +63,12 @@\n+\n+    \/**\n+     * Only intended for in-package usage.\n+     * Constructs a {@code CancellationException} with the specified detail\n+     * message and CancellationException cause.\n+     *\n+     * @param message the detail message\n+     * @param cause the underlying cancellation exception\n+     *\/\n+    CancellationException(String message, CancellationException cause) {\n+        super(message, cause);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CancellationException.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-    private static Object reportGet(Object r)\n+    private static Object reportGet(Object r, String details)\n@@ -392,1 +392,1 @@\n-                throw (CancellationException)x;\n+                throw new CancellationException(details, (CancellationException)x);\n@@ -404,1 +404,1 @@\n-    private static Object reportJoin(Object r) {\n+    private static Object reportJoin(Object r, String details) {\n@@ -410,1 +410,1 @@\n-                throw (CancellationException)x;\n+                throw new CancellationException(details, (CancellationException)x);\n@@ -2073,1 +2073,1 @@\n-        return (T) reportGet(r);\n+        return (T) reportGet(r, \"get\");\n@@ -2096,1 +2096,1 @@\n-        return (T) reportGet(r);\n+        return (T) reportGet(r, \"get\");\n@@ -2118,1 +2118,1 @@\n-        return (T) reportJoin(r);\n+        return (T) reportJoin(r, \"join\");\n@@ -2134,1 +2134,1 @@\n-        return ((r = result) == null) ? valueIfAbsent : (T) reportJoin(r);\n+        return ((r = result) == null) ? valueIfAbsent : (T) reportJoin(r, \"getNow\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CompletableFuture.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -202,0 +202,7 @@\n+    void checkCancellationException(CancellationException thrown, String message) {\n+        assertTrue(message.equals(thrown.getMessage()));\n+\n+        assertTrue(thrown.getCause() instanceof CancellationException);\n+        assertTrue(thrown.getCause().getCause() == null);\n+    }\n+\n@@ -208,0 +215,1 @@\n+            checkCancellationException(success, \"get\");\n@@ -214,1 +222,3 @@\n-        } catch (CancellationException success) {}\n+        } catch (CancellationException success) {\n+            checkCancellationException(success, \"join\");\n+        }\n@@ -218,1 +228,3 @@\n-        } catch (CancellationException success) {}\n+        } catch (CancellationException success) {\n+            checkCancellationException(success, \"getNow\");\n+        }\n@@ -223,0 +235,1 @@\n+            checkCancellationException(success, \"get\");\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/CompletableFutureTest.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}