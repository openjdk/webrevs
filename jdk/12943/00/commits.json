[{"commit":{"message":"Merge branch 'master' into JDK-8294971-jlink-jimage"},"files":[],"sha":"6800940642be2fdedb12305581cea2eb93d8ab27"},{"commit":{"message":"8294971: jdk.jlink jdk.tools.jimage.JImageTask is using ASM to verify classes"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jimage\/JImageTask.java"}],"sha":"68b20f131384f72a8451dd02e8555c132d15ea7f"},{"commit":{"message":"removed obsolete javadoc from implementation classes"},"files":[],"sha":"385cb26471a4d0a2c113fe5634f8e80a47ef1f72"},{"commit":{"message":"minor fix in CodeBuilder and added test cases to LDCTest"},"files":[],"sha":"cd4a01cd46586012b1aab5095db7fa8826e0b0a6"},{"commit":{"message":"EntryMap::nextPowerOfTwo delegates to Long:numberOfLeadingZeros"},"files":[],"sha":"b49aae8b423e85f572b63648423869bf7b92bf01"},{"commit":{"message":"fixed CodeBuilder:constantInstruction for -0.0d and -0.0f values and added test"},"files":[],"sha":"65a69135f6623e0f78aeaf8cd7b2ebdc8e1bbb27"},{"commit":{"message":"Merge branch 'master' into JDK-8294982"},"files":[],"sha":"4680572a4d90f22b9aa443906cec023a578184cb"},{"commit":{"message":"fixed new lines at end of file"},"files":[],"sha":"f14287d0b139e336901e75876fbfe2248226fe09"},{"commit":{"message":"package jdk.internal.classfile.jdktypes moved to jdk.internal.classfile.java.lang.constant"},"files":[],"sha":"a994c57282e723fb9bf2ff21c30a11f4d4be93a5"},{"commit":{"message":"fixed CodeRelabeler javadoc"},"files":[],"sha":"7a2b5cbeac0bf05f3dd8a856f45a87511ba83a5a"},{"commit":{"message":"Shared `toString` formats for bound and unbound instructions"},"files":[],"sha":"2b1bd7f89696e614e706f724ab5f2eb46cd62243"},{"commit":{"message":"generic implementation of ResolvedTransform"},"files":[],"sha":"a87d0096a60e6a7961c3ce30bb30b1fe4feed0d9"},{"commit":{"message":"snippets and tests synced with jdk.jfr class instrumentation source code"},"files":[],"sha":"6df1297e948c9d120bebc1e6cf530161e300ca74"},{"commit":{"message":"simplified initialization of terminal builder in chained builders"},"files":[],"sha":"0e43af667ba6c6bda61461c260688bc46d3f3474"},{"commit":{"message":"simplified CodeImpl.SINGLETON_INSTRUCTIONS initialization"},"files":[],"sha":"46fffe40cd1754cae836ac096a5553001fdd44d1"},{"commit":{"message":"fixed handling of array descriptors by Util::toInternalName"},"files":[],"sha":"0c718a2cbc57b699851371d608a3ad3f2d04f2ef"},{"commit":{"message":"removed unused methods, fields and parameters\nadded missing overrides\nfixed pointless operations and possible null pointer dereferences"},"files":[],"sha":"61ff1c7cb388c1497e87d1e40be1bc3bfc18396f"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AttributeHolder.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"a40842c447c7a89afe98861a8ed30ffb1471754c"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/Util.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"b44f47ba9f8fb36fc05e00132ae20d8ac6d5b9ba"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"9880458499cc46f28af1ed92aa0081880ee69d28"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BootstrapMethodEntryImpl.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"eee82ef64aa7a6442a12044083ca39e1c2a89edd"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BootstrapMethodEntryImpl.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"6d3e6d71c3d87300db4e86cda4a0aca2c370ba89"},{"commit":{"message":"fixed AccessFlags javadoc"},"files":[],"sha":"173dc1e7bcd9f4d2cddad6479aa71ff158fbf9ba"},{"commit":{"message":"TransformImpl.FakeXyzTransform renamed to UnresolvedXyzTransform"},"files":[],"sha":"4aa9887ef125e5ad5a2172bfa4e38c99c9201639"},{"commit":{"message":"removed obsolete generic parameter from AbstractDirectBuilder"},"files":[],"sha":"c458698afd3fc20a82336e7199cfe36a7a8c9f90"},{"commit":{"message":"factory methods to CharacterRange, LineNumber, LocalVariable and LocalVariableType"},"files":[],"sha":"8561d134a99b2367769a1af3f67d8ce05a2033b3"},{"commit":{"message":"CodeRelabeler fix"},"files":[],"sha":"324d0337f715c368dbef59165ba752603d826671"},{"commit":{"message":"Signature.TypeArg does not inherit from Signature"},"files":[],"sha":"b03f15c1dcdfe99cb247745c62ba8dea940ed653"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/TypeKind.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"79bfd4c51d2acdadfb6cbf8e705ba04467e13cbb"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/NonterminalCodeBuilder.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"e5fd576421773d64cfbeb173ececc05c98f04f8b"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/CodeBuilder.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"0bd5281f92d58868007576c6bb0378e06d9e37dc"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/CodeBuilder.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"5526535dbcbbe90d0cc38775a09e177d5ecf7ade"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/ExceptionCatch.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"1e4ea41911ab8dec6f3cf90a4b39626b21b67d9b"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/ConstantInstruction.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"02bd6dcbda5de6264dd7a78a66b757f4e3c4bc3b"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/ConstantInstruction.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"22113cbeeb5215ff2f5693030e5d0c75a0f42fc1"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/snippet-files\/PackageSnippets.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"6fa25ddc0db1ec82cd2df8b3c4d3efdcd1837936"},{"commit":{"message":"StackMapFrameInfo extracted to top level from StackMapTableAttribute"},"files":[],"sha":"074dd30401a68638a24c157595caeb96b3511614"},{"commit":{"message":"added comment to CodeAttribute::labelToBci"},"files":[],"sha":"13d78c965f991805ceceed2f05b875e35599a8ac"},{"commit":{"message":"ClassReader::readXyzEntry methods throw IllegalArgumentException instead of ClassCastException"},"files":[],"sha":"c0e80155a84e9cb1631293fe654f0ed7ab492f31"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/attribute\/CodeAttribute.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"79ce1698e8215f140ca793135469a74cf7d82f7e"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/ClassModel.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"793de4311459da4aaf9d7362984003d550ec23c8"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/ClassReader.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"e674badaeee392f8269d2f795d8fce42d2127139"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/TemporaryConstantPool.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[],"sha":"ab4fba352f0e55d0d20e08dba287826e2ff4d690"},{"commit":{"message":"SplitConstantPool fixes"},"files":[],"sha":"a1b70d2462f2a607409e047084601d55a0d76be2"},{"commit":{"message":"ConstantPoolBuilder::natEntry renamed to nameAndTypeEntry"},"files":[],"sha":"70ec5ec720095853294bbb419677d860036d4a5c"},{"commit":{"message":"removed static implementation methods from ClassEntry"},"files":[],"sha":"1d747ddc195d6cfa305a28464ba34b506a727fa0"},{"commit":{"message":"removed unused imports"},"files":[],"sha":"6ac830d3a8cd96938ba36388684b51e1071d5260"},{"commit":{"message":"fixed PackageSnipets"},"files":[],"sha":"e424f3f72f44e090d84e884656296026eb4969bc"},{"commit":{"message":"default constantValue delegating to asSymbol pulled from implementations to  ConstantDynamicEntry, MethodHandleEntry and MethodTypeEntry"},"files":[],"sha":"5486011d56c21939cb0ec8bfe97019c6b0253368"},{"commit":{"message":"renamed all remaining ConcreteXyzEntry to XyzEntryImpl"},"files":[],"sha":"1e95e508045422ec564b975c361081770b2ce813"},{"commit":{"message":"abstract implementations of RefEntry, RefsEntry and NamedEntry renamed to AbstractRefEntry, AbstractRefsEntry and AbstractNamedEntry"},"files":[],"sha":"36bbdf6858addcfe5cfc1186e88fc079d9edc3a1"},{"commit":{"message":"renamed ConcreteBootstrapMethodEntry to BootstrapMethodEntryImpl"},"files":[],"sha":"03a39a49b3ce8da93649a65608cebf532d02975b"},{"commit":{"message":"ConcreteEntry renamed to AbstractPoolEntry"},"files":[],"sha":"1892e307b27db4f0b37873899f933ba93f627b40"},{"commit":{"message":"javadoc fix"},"files":[],"sha":"212bb04e9491badb17c110787727ea19842d1528"},{"commit":{"message":"LabelImpl get\/setContextInfo renamed to get\/setBCI"},"files":[],"sha":"f6c65616e2f2afa5b58d769117a81daf8398fb42"},{"commit":{"message":"removed default constructor from AttributeHolder"},"files":[],"sha":"cd6e59ca95ffe0adc3d19e938e5c80cc51781bd0"},{"commit":{"message":"InstructionData content moved to CodeImpl"},"files":[],"sha":"b98d97b5b5b48b2e4b69dd42fc41aa6f431fd7ea"},{"commit":{"message":"BytecodeHelpers fix"},"files":[],"sha":"58c9d2c0da6c058795ede0e367f56d5c9a71aae5"},{"commit":{"message":"javadoc and long lines fixes"},"files":[],"sha":"234d50ef250b1959dd020fb2eb0a3dfd177d2ee5"},{"commit":{"message":"javadoc fixes"},"files":[],"sha":"7002d7196f543527a5780acc650690025f7a161b"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/CodeRelabeler.java\n\nCo-authored-by: Maurizio Cimadamore <54672762+mcimadamore@users.noreply.github.com>"},"files":[],"sha":"7cbd080fcbc2669d305570260dd9cc29565cd510"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/CodeStackTracker.java\n\nCo-authored-by: Maurizio Cimadamore <54672762+mcimadamore@users.noreply.github.com>"},"files":[],"sha":"9976bb85303182b11fe002ee4b75dd047c1ac50f"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/CodeStackTracker.java\n\nCo-authored-by: Maurizio Cimadamore <54672762+mcimadamore@users.noreply.github.com>"},"files":[],"sha":"d44633f84f26fde652e3ad1a4d4892df3212c2de"},{"commit":{"message":"ClassRemapper fixes"},"files":[],"sha":"dfb0e00ebfcbe9d279eb7dc5447f56db77c2cfd2"},{"commit":{"message":"added no-lambda comment"},"files":[],"sha":"9f465f1a7314987ff0795ef08c262941b2a524ee"},{"commit":{"message":"fixed very long lines"},"files":[],"sha":"6bba309faa2e0752e8ae8c11fc8faced075bb279"},{"commit":{"message":"removed obsolete public modifiers and added doc examples"},"files":[],"sha":"164b486b98cc23995e2fe7a002c1b828b05b08ef"},{"commit":{"message":"javadoc fix"},"files":[],"sha":"1bf6201688f7d0b475e572264be5764dd01af3a8"},{"commit":{"message":"renamed PoolEntry::poolEntries to ::width"},"files":[],"sha":"5f9f6785206c2ef53de6992390619fdbe48e98e9"},{"commit":{"message":"removed PoolEntry::clone and ConstantPoolBuilder::maybeClone from API"},"files":[],"sha":"15b69a4c43f62f07dcddbd5f54386af72c862dac"},{"commit":{"message":"Option keys and values accessing pulled from API to implementation"},"files":[],"sha":"4d70fc2feda427e44e0ec9c91b4b7482f93c615f"},{"commit":{"message":"added 4-byte Unicode text to Utf8EntryTest"},"files":[],"sha":"7a45ebd322c26fa7a65244238d3d81e36e2fd633"},{"commit":{"message":"removal of MemberRefEntry::isMethod and ::isInterface"},"files":[],"sha":"dbb9e46a9de5fd24875b93310c9542f67642ad4d"},{"commit":{"message":"added missing factory methods to ModuleExportInfo and ModuleOpenInfo"},"files":[],"sha":"bb295b533d2247b0d603085a906464a6dba7b86b"},{"commit":{"message":"removed generics from Classfile.Option"},"files":[],"sha":"673887ab62fcc37527b5acd1954346db66a7776f"},{"commit":{"message":"Javadoc fixes"},"files":[],"sha":"241676323d3cfa399f50cadb0edb922ca24b1ea6"},{"commit":{"message":"Proprietary hash-based mapping in Attributes replaced with HashMap using raw Utf8Entry keys"},"files":[],"sha":"ec6829e936a5ec894f59ec108318ba878144a767"},{"commit":{"message":"AttributeElement.Kind removal (#48)\n"},"files":[],"sha":"753e6847bf4205e3cf115d583c5bc161fe0e58a7"},{"commit":{"message":"javadoc fixes"},"files":[],"sha":"df08b351b75576e715ef8577305db404f078099e"},{"commit":{"message":"javadoc fixes"},"files":[],"sha":"1aabe0e30286b8f0f20f35f027d2b961d03f48aa"},{"commit":{"message":"obsolete identifiers and unused imports cleanup"},"files":[],"sha":"e1f014ca760b301288e8f224444d4266cb059fab"},{"commit":{"message":"TypeAnnotation.TypePathComponent cleanup"},"files":[],"sha":"421f66d4fb836781e95f4fe0e49f20e6fdad969e"},{"commit":{"message":"Classfile API moved under jdk.internal.classfile package"},"files":[],"sha":"8df1dc210b9f393dc61740fcdc5b15cf1018842f"},{"commit":{"message":"Merge branch 'master' into JDK-8294982"},"files":[],"sha":"80213e6152c985f43de718f31c4daee796b01108"},{"commit":{"message":"update of Java version constants"},"files":[],"sha":"806b90251faee145591735305c8461fa3d372e3d"},{"commit":{"message":"unification of sealed class modifiers order"},"files":[],"sha":"931ca1c5718d2207ed9cb70fbf7b6f707bc8ed89"},{"commit":{"message":"merged JAVAC_FLAGS and EXCLUDES in Java.gmk"},"files":[],"sha":"2bfc2b1a46361c5c1d57f405c3d40a060bb25937"},{"commit":{"message":"removal of Preview.java and TransPatterns.java patch\nand enabled preview for java.base"},"files":[],"sha":"c42dc3e4472e6e7b78607bcdbc26d8d09bde0349"},{"commit":{"message":"jdk.compiler ClassWriter patch to avoid writing PREVIEW_MINOR_VERSION to classes participating in preview"},"files":[],"sha":"9440f8697a7260f72ebbb66e25e499484e32e5b8"},{"commit":{"message":"Merge branch 'master' into JDK-8294982"},"files":[],"sha":"a350f5bd91064ad83e381b33bce0987426be5130"},{"commit":{"message":"Merge branch 'master' into JDK-8294982"},"files":[],"sha":"78ba7bdb39a42241e828e55fb910250c5de1009b"},{"commit":{"message":"javadoc cleanup"},"files":[],"sha":"5345b451e47b92a589809bf0300e0815e1790df0"},{"commit":{"message":"removal of AccessController::doPriviledged from ClassHierarchyResolver"},"files":[],"sha":"31fa159f8cdf155ca0306c9409ef2180ef9093b7"},{"commit":{"message":"PackageSnippets moved from jdk\/classfile\/snippets to jdk\/classfile\/snippet-files"},"files":[],"sha":"3827e5290e9bf8fca382c54f6400de2ef8eba311"},{"commit":{"message":"removed executable"},"files":[],"sha":"4b3e63d51c727297e1b8810a21faed8faed12d57"},{"commit":{"message":"removed executable"},"files":[],"sha":"1f3fac221c0d7f2e75607a206d9b3cd8c39d5759"},{"commit":{"message":"removed executable flags and fixed whitespaces"},"files":[],"sha":"897db831a5b89a540828961b1eaa77b191aea424"},{"commit":{"message":"removed executable flag from test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java"},"files":[],"sha":"63cdd55e59000f0bcaaf04d5c7f568a5f3601e39"},{"commit":{"message":"Merge branch 'classfile-api-branch' into classfile-api-initial-branch\n\n# Conflicts:\n#\tREADME.md\n#\tmake\/Docs.gmk\n#\ttest\/jdk\/jdk\/classfile\/CorpusTest.java\n#\ttest\/jdk\/jdk\/classfile\/LvtTest.java\n#\ttest\/jdk\/jdk\/classfile\/StackMapsTest.java"},"files":[],"sha":"adc1edfac61c8fe78036c1ad3588d5f000e8da1a"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch\n\n# Conflicts:\n#\tREADME.md\n#\tmake\/Docs.gmk"},"files":[],"sha":"f91c55a3c068cc8254fea25a3e0c25b102ea4bc1"},{"commit":{"message":"fixed Classfile API Javadoc build"},"files":[],"sha":"870bff14307e2f40a0de07506b5bed9a9d3147e5"},{"commit":{"message":"removed obsolete factory mthods LocalVariableInfo::of and LocalVariableTypeInfo::of"},"files":[],"sha":"d683af80d967041ac1ef63fdd825f6e3f9319748"},{"commit":{"message":"added Classfile.Option FILTER_DEAD_LABELS\nadded FilterDeadLabelsTest\nStackMapGenerator synced to conditionally throw IllegalStateException\nLocalVariable and LocalVariableType::writeTo(BufWriter) returns boolean if succedded"},"files":[],"sha":"674cb23f9e861568679ec8d8078dba066be0785c"},{"commit":{"message":"fixed javadoc of ModuleOpenInfo and ModuleRequireInfo"},"files":[],"sha":"0b7cfa13d9143a4e6201fa1293a1622d82515889"},{"commit":{"message":"fixed typo"},"files":[],"sha":"ac93c6613d69384bbd3dfb36e6e73b9ff509c1ad"},{"commit":{"message":"linked stateful and chaining transform snippets to ClassfileTransform"},"files":[],"sha":"949bf9c25f8e17e10ce71171ac2a464f2c3405e5"},{"commit":{"message":"removed @@@ Other overloads? from CodeBuilder::invokedynamic\nremoved obsolete ExceptionCatch::of overload"},"files":[],"sha":"953891aae8b047d5360815b2c562bcd3a362aba8"},{"commit":{"message":"Signatures cleanup:\n- null testing and List treatment moved from impl constructors to factory methods\n- corrected Javadoc\n- re-organized arguments in MethodSignature and used varargs where relevant\n- removed obsolete overrides from MethodSignature\n- avoided list copying in SignaturesImpl\n- fixed SignatureTest"},"files":[],"sha":"493abb0cea3aa943744818cb4b0a6819db511fb8"},{"commit":{"message":"removed obsolete comment from CodeBuilder::trying"},"files":[],"sha":"f36ff93c65b61b14a735f89347abaf0a22bf9341"},{"commit":{"message":"reversion of BytecodeHelpers::constantEntry refactored to pattern switch\nthe method is called during JVM bootstrap"},"files":[],"sha":"6c377a6efe817dd10200f6732a1d1af5f934eef2"},{"commit":{"message":"BytecodeHelpers::constantEntry refactored to pattern switch"},"files":[],"sha":"cb8c562e0ecfd9896cc2da2156652ca759b46996"},{"commit":{"message":"BoundAttribute cleanup"},"files":[],"sha":"8f4231aec06a5f79afe132a6996eb846f7252ba5"},{"commit":{"message":"more @@@ Could use JavaUtilCollectionAccess cleanup"},"files":[],"sha":"e175c78dd5ca3fe56b1a9a4d210450780729485e"},{"commit":{"message":"removed tests and ClassRecord dependency on jdk.jdeps\/com.sun.tools.classfile"},"files":[],"sha":"9635cb27b8708ee2a9dd00222005a9041a8c71a2"},{"commit":{"message":"using JavaUtilCollectionAccess.listFromTrustedArrayNullsAllowed in AnnotationReader"},"files":[],"sha":"81eab8f52804a8f391091cf709e1897b04e8fafd"},{"commit":{"message":"Convert Classfile API test to use JUnit Jupiter (#44)\n\n\r\nCo-authored-by: Christian Stein <sormuras@gmail.com>"},"files":[],"sha":"c93f199ad7ee336c13faa4ad77b44f37dd52f70a"},{"commit":{"message":"Convert Classfile API test to use JUnit Jupiter (#44)\n\n\r\nCo-authored-by: Christian Stein <sormuras@gmail.com>"},"files":[],"sha":"1cef3f55807f285cb4fa58465c7465595c42278c"},{"commit":{"message":"Update README.md"},"files":[],"sha":"dadfc01d58e3ec79e32eaf01a3425b4b61fa0640"},{"commit":{"message":"Merge branch 'classfile-api-branch' into classfile-api-initial-branch"},"files":[],"sha":"7bfc295e3002eafa2fe394e7fa83a92f0fbf9ccc"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch"},"files":[],"sha":"8db63f271a4e3eb4b60c4fa73d808467bf04e768"},{"commit":{"message":"Classfile api CodeElement.Kind cleanup (#41)\n\n* CodeElement.Kind moved to Opcode.Kind\r\n* removed CodeElement::codeKind\r\n* CodeElement::opcode and sizeInBytes moved to Instruction\r\n* removed all pseudo Opcodes and Kinds\r\n* removed opcode and sizeInBytes from all pseudo instructions and code attributes\r\n* split of impl.AbstractInstruction\r\n* Wide Opcodes constants fixed"},"files":[],"sha":"d45765b9c0749cee22916a70b3c43ef38200a75e"},{"commit":{"message":"make files and readme cleanup"},"files":[],"sha":"e0b39cf241ef97da7809f2a54dac264be04ab713"},{"commit":{"message":"CompileInterimLangtools.gmk patch allowing to compile Classfile API without \"ignorePreview\" javac option\nremoval of the \"ignorePreview\" option from javac and make files"},"files":[],"sha":"6274c810d5464b20b8f0013a248abc31e11a2a4c"},{"commit":{"message":"minor javadoc fix in CodeBuilder.CatchBuilder and assertion in CatchBuilderImpl"},"files":[],"sha":"4c36725007510cf14cd3a13eb8a05764c0c55d23"},{"commit":{"message":"proposal to add CodeBuilder.CatchBuilder::catchingMulti (#37)\n"},"files":[],"sha":"b074d9180bcdd7c702d8987609d298e807ef6f1b"},{"commit":{"message":"fixed locale in javadoc build"},"files":[],"sha":"5d940814b882ab867b88c409676ac2da4f8c007d"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch"},"files":[],"sha":"368d21c700521fbe1bd21e2d68f9d176db3303f7"},{"commit":{"message":"draft of jdk.classfile.components doc"},"files":[],"sha":"c7da6805d2ef75dcf6c02b97dd48bf022313134b"},{"commit":{"message":"javadoc for ClassPrinter"},"files":[],"sha":"aee0f85861783e42864a15314a03bfb0950e26ad"},{"commit":{"message":"application of ClassDesc::ofInternalName and internal name conversions cleanup"},"files":[],"sha":"d0f7775b3636a1cc2a86d3af68dca982593f8cd0"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch"},"files":[],"sha":"e3a03cb19ef492fcff33fb4e5e3aa3538b2cca68"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch"},"files":[],"sha":"e122f392b53aa1e37cd180dc4c6d840fc2e84074"},{"commit":{"message":"package jdk.classfile.transforms cleanup and move (#36)\n\n* package jdk.classfile.transforms API cleanup\r\n* simplified CodeLocalsShifter to delegate locals allocation on CodeBuilder\r\n* added parent field to NonterminalCodeBuilder\r\n* fixed ChainedCodeBuilder::allocateLocal\r\n* jdk.classfile.transforms package rename to jdk.classfile.components\r\n* ClassPrinter move to jdk.classfile.components package"},"files":[],"sha":"4b153a7c094a938927b073b2e9a967bf2f8cb326"},{"commit":{"message":"Add List combining methods to ClassEntry (#35)\n\n* Add List combining methods to ClassEntry\r\n\r\njdk.classfile.ClassEntry and java.lang.constant.ClassDesc are two ways\r\nof describing similar data. Often when working with Attributes, we need to\r\ncreate lists that combine ClassEntrys and ClassDescs into a single list\r\n\r\nThis PR adds support working with such lists by adding 4 static methods\r\nto ClassEntry:\r\n* List<CE> adding(List<CE> base, List<CE> additions)\r\n* List<CE> adding(List<CE> base, CE... additions)\r\n* List<CE> addingSymbols(List<CE> base, List<CD> additions)\r\n* List<CE> addingSymbols(List<CE> base, CD...additions)\r\n\r\nThis methods convert from CD to CE to create a combined List<CE>.\r\nThe methods are null-hostile in the \"additions\" but do not check for\r\nnulls in the \"base\" List.\r\n\r\nThe returned List is mutable so these methods can be common building\r\nblocks for composing with other CE entries.\r\n\r\nA test has been added that validates the existing behaviours.\r\n\r\n* Return immutable lists rather than mutable ones.\r\n\r\nA side-effect of this change is that the `base` List is now null-hostile\r\nas well as the List.copyOf on the comination is null-hostile.\r\n\r\n* Implement `List<CE> deduplicate(List<CE>)`\r\n\r\nThis allows users to add to a list without worrying about the existing\r\ncontents and in cases where they wish to apply a \"no duplicates\" invariant,\r\nthey can deduplicate the List\r\n\r\n* Implement missing ConcreteEntry equals() methods\r\n\r\n* Basic deduplicate() test"},"files":[],"sha":"aabda890ac95daa99228c8f9b69e5ef0d22dcf3a"},{"commit":{"message":"Merge remote-tracking branch 'origin' into classfile-api-branch"},"files":[],"sha":"5e5a6c6b1d2c76c1380b2aa261c2478660541f57"},{"commit":{"message":"cleanup in CodeBuilder::constantInstruction\nadded support for ConstatntDescs.NULL\nadded CodeBuilder::ldc(LoadableConstantEntry)"},"files":[],"sha":"c148bc28f6462d5558a0cbe025f758430a4ffac3"},{"commit":{"message":"added JCov report link to README.md"},"files":[],"sha":"7919e2a70489330cb5fe82f2e7aed18adcd914c6"},{"commit":{"message":"Classfile api stacktracker branch (#34)\n"},"files":[],"sha":"1bca888f1c3a6081f1783ea51eacaa6b40d94948"},{"commit":{"message":"Merge remote-tracking branch 'origin' into classfile-api-branch"},"files":[],"sha":"5fd417b42f1ff43dc2a01ebccce4276908591f95"},{"commit":{"message":"updated AdvancedTransformationTest according to jdk.jfr"},"files":[],"sha":"674791a3a29340614db85821d54a15c9c63c1baa"},{"commit":{"message":"fixed LabelsRemapper"},"files":[],"sha":"15ba3cd924190de670de05663bc53835a3d4d54a"},{"commit":{"message":"Classfile api label resolver branch (#33)\n\n* removed impl.LabelResolver\r\n* labelToBci moved to CodeAttribute and impl.LabelContext\r\n* removed labelToBci from CodeBuilder"},"files":[],"sha":"cb17b0f7c17af37dcefc3e6fa06f4305ba5edd9d"},{"commit":{"message":"fixed ConstantPoolBuilder::methodHandleEntry"},"files":[],"sha":"de17a3b0eb7c80935d701ba98014f2bd35c221b5"},{"commit":{"message":"fixed RebuildingTransformation test helper"},"files":[],"sha":"b547682001a2e3bb98d23fe15e2c09d5d0c26d02"},{"commit":{"message":"removed obsolete toString"},"files":[],"sha":"ced8ffa75cc6d47df88523d46175bc97f4e954a6"},{"commit":{"message":"Classfile API stack map manual processing (#32)\n\n* removed FrameKind from StackMapTableAttribute and offsets replaced with labels in StackMapFrames\r\n\r\n* simplification of StackMapFrame, removal of compressed sub-types\r\n\r\n* Implemented UnboundStackMapTableAttribute and added related factory methods\r\ndropped VerificationType\r\nSimpleVerificationTypeInfo refactored to enum\r\n\r\n* implemented StackMapTableAttribute compression and writing\r\n\r\n* StackMapTableAttribute extends CodeElement\r\n\r\n* added Classfile.Option.processStackMaps\r\nenable stack maps processing in RebuildingTransformation test helper\r\nfixed UninitializedVerificationTypeInfo labels resolution\r\n\r\n* fixed Opcode\r\n\r\n* enable unordered StackMapTableAttribute entries\r\n\r\n* removal of PROCESS_STACK_MAPS option\r\ngenerated stack maps override user content\r\nadjusted labels inflation from stack maps\r\n\r\n* minor patch in RebuildingTransformation test helper"},"files":[],"sha":"76b09c5e2459b99c30cd605ce8120fe45da1fcc3"},{"commit":{"message":"fixed StackMapGenerator operand stack underflow reporting"},"files":[],"sha":"6c8f57a3f4eb2237628602263c62cc17322064f3"},{"commit":{"message":"added StackMapGenerator error debug info print fallback to bytecode hex dump"},"files":[],"sha":"b83633c6f9f9380564e78fcd9914ec977ea9cf4e"},{"commit":{"message":"Opcode.ISHR and LSHR fix"},"files":[],"sha":"3902fd25583d9385c6287680fd0d672259bf7e7e"},{"commit":{"message":"StackMapGenerator appends detailed debug info about corrupted bytecode in case of an error\n- previous debug logging and TRACE and DEBUG switches have been removed"},"files":[],"sha":"2c988dfab7a491dd37e69bb288786b86a3d06d3e"},{"commit":{"message":"new ClassPrinter API and implementation\n"},"files":[],"sha":"2b471fce5d58ca719980feeb296d36a738f42f2e"},{"commit":{"message":"added more context to StackMapGenerator error messages"},"files":[],"sha":"269e52933db08e34fb5f0b4ba6c7b3809d270e37"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into classfile-api-branch"},"files":[],"sha":"946a382ff5f158ddba092149dc7c9404f3a4d691"},{"commit":{"message":"ClassRemapper implemenation handling RecordAttribute, InnerClassesAttribute, EnclosingMethodAttribute, Annotations, TypeAnnotations, ParameterAnnotations and LoadableConstants"},"files":[],"sha":"34e72c5807bd17136e3d73f82b9bc334afe60178"},{"commit":{"message":"Ifthenelse (#28)\n\n* Enhance ifThenElse.\r\n\r\n* Expose block builder with break label.\r\n\r\n* Docs and tests.\r\n\r\n* Doc.\r\n\r\n* Review feedback.\r\n\r\n* Unused import."},"files":[],"sha":"482add7fd77dd60a925328485eef05d5bd5768bb"},{"commit":{"message":"added missing case for SWAP into RebuildingTransformation test helper"},"files":[],"sha":"b5e9ac3ac85c004b81ba19e0ecd593f74ecd4dc7"},{"commit":{"message":"Fix and test CodeBuilder::swap (#26)\n"},"files":[],"sha":"e76ed5f58de4f710092bd2a623fa2c8fed827ff4"},{"commit":{"message":"patched test calling obsolete CodeBuilder method invokevirtual(..., boolean isInterface)"},"files":[],"sha":"3369fbb7ad9298008580d2f8f6749e50da6bf1b9"},{"commit":{"message":"added missing copyright header"},"files":[],"sha":"28cb754252c76edf9d2ba77cd5a25948422fdd50"},{"commit":{"message":"Classfile try catch\n"},"files":[],"sha":"4c730ede1783f41341ce92e083813a44e0ec4b76"},{"commit":{"message":"CodeBuilder fixes and increased test coverage"},"files":[],"sha":"0c80bffc75b7602ed5835f4a7a387b63ad035ab2"},{"commit":{"message":"update of AdvancedTransformationsTest::instrument"},"files":[],"sha":"4b5620e5ad480fc77f5e789ec887ac5eff6eee9c"},{"commit":{"message":"CodeBuilder and ClassPrinterImpl minor fixes"},"files":[],"sha":"a1502e3ef09b93cdcb502e1da0f009767d2090f5"},{"commit":{"message":"PerformancePatch - StackMapGenerator more effective loops and other fine-tunning"},"files":[],"sha":"5cbe44286997cc17b9c39131d5bc722a219a690b"},{"commit":{"message":"PerformancePatch - StackMapGenerator faster counting of method descriptor argument slots"},"files":[],"sha":"e14f3a5d321a4f4a8b74eaad5d54b09a876e9657"},{"commit":{"message":"StackMapGenerator code cleanup"},"files":[],"sha":"1950b1fc9ce4e11ac51f6080f61031041cf76dac"},{"commit":{"message":"PerformancePatch - avoid ArrayList in StackMapGenerator::processInvokeInstructions"},"files":[],"sha":"0631349a2ef77f32aac513d0521de85d1fc46cb9"},{"commit":{"message":"new JMH micro benchmark focused on clean StackMapGenerator throughput"},"files":[],"sha":"4b69c9c698aa538c75780b340b91e2feabe07aae"},{"commit":{"message":"Update README.md"},"files":[],"sha":"a98f860de0aac271b6901921b24a7f1885048c8e"},{"commit":{"message":"Adds toString methods to all classes that appear within a CodeModel.\n"},"files":[],"sha":"ace0f43573a28cb6186f0932f2d5def6e67adc01"},{"commit":{"message":"Fixed frame offset valid boundaries in StackMapGenerator + added test"},"files":[],"sha":"848016318448c7d27b4b77f1ac72ccb63307e38a"},{"commit":{"message":"test\/jdk\/jdk\/classfile\/examples fixed"},"files":[],"sha":"f2ac7705398aa8720d424cd69ad771665ebbfaf9"},{"commit":{"message":"Added some testing of local variable management, with BlockBuilder"},"files":[],"sha":"99a17b3294ac2d4cdc2a5258dfd22122ebda5019"},{"commit":{"message":"Merge branch 'master' into classfile-api-branch"},"files":[],"sha":"28f560e19ef3f470c455777dd52abf6feedeba54"},{"commit":{"message":"Model stack map frames in a type hierarchy where each type represents a frame type.\n\n Doing so, make the chop size available to consumers of frames."},"files":[],"sha":"59479ff0276885803c7f09e58cc3c81b6d8e533f"},{"commit":{"message":"refactored to FieldModel::fieldTypeSymbol and MethodModel::methodTypeSymbol (#13)\n\nrefactored to FieldModel::fieldTypeSymbol and MethodModel::methodTypeSymbol (#13)\r\nadded round testing of signatures in RebuildTransformation test helper"},"files":[],"sha":"d8f30a7f8986cafa9909bfe603a4bd6e14dcfc9d"},{"commit":{"message":"TypeAnnotation and AnnotationValue API improvements\n\n* added TypeAnnotation factory methods accepting ClassDesc and AnnotationElement...\r\nAnnotationValue.OfConstant sub-classed to allow switch pattern matching\r\nRebuildingTransformation test helper adjusted\r\n\r\n* added TypeAnnotation.TargetInfo factory methods with validity checking for multi-target types\r\nadjusted RebuildTransformation test helper"},"files":[],"sha":"bb7e29474ecfcfbd1eb01d237593eb80d062944f"},{"commit":{"message":"added CompilationIDAttribute::of(String)\nEnclosingMethodAttribute factory method changed to accept Optionals\nadded EnclosingMethodAttribute::of(ClassDesc,Optional<String>,Optional<MethodTypeDesc>)\nadded EnclosingMethodAttribute accessor methods\nInnerClassInfo all factory methods changed to accept Optionals\nadded NestHostAttribute::of(ClassDesc)\nadded SourceIDAttribute::of(String)\nchanges reflected in BoundAttribute and RebuildTransformation test helper"},"files":[],"sha":"7bf66b1bc62849a05252a0571d7c857c0040bdbd"},{"commit":{"message":"added ConstantValueAttribute::of(ConstantDesc)\nMethodParameterInfo name parameter changed to Optional\nadded MethodParameterInfo::ofParameter(Optional<String>,int)\nimplemented TemporaryConstantPool::stringEntry\nadjusted BoundAttribute and RebuildingTransformation test helper"},"files":[],"sha":"a89d822eed587a09e7b5ed8388e9d828ef753c18"},{"commit":{"message":"fixed InvokeDynamicEntry::asSymbol and BytecodeHelpers::handleDescToHandleInfo\nimplemented RebuildingTransformation and added to Transforms and CorpusTest\nreduced CorpusTestHelper output and adjusted TEST.properties"},"files":[],"sha":"0fe61c507a2fa0a66d2477e97f58f5551c3b56fd"},{"commit":{"message":"Classfile API javadoc build fix"},"files":[],"sha":"941dfb0ebac505caf6926cac97c279019817fb49"},{"commit":{"message":"removal of jdk.classfile.jdktypes.AccessFlag and redirection to java.lang.reflect.AccesFlag in Classfile API and tests"},"files":[],"sha":"b5267ad25cbf2cb8d2b909ab2098f06daacabcc0"},{"commit":{"message":"Merge master branch into classfile-api-branch"},"files":[],"sha":"a5a2580b10d46f6394f329e47bc42d4d8a82165a"},{"commit":{"message":"Tweak JEP link"},"files":[],"sha":"0daac4ab60619d76d22e2bf6971404ce00ea34c6"},{"commit":{"message":"fixed dead code patching in StackMapGenerator::removeRangeFromExcTable and added test (#11)\n"},"files":[],"sha":"e1386dfd5acba9642d835a649ea4a4b0e9ae70bb"},{"commit":{"message":"Update README.md\n"},"files":[],"sha":"02bf8b4191fab743ce6893861137e86a90b6e6a6"},{"commit":{"message":"fixed ClassPrinterTest on Windows"},"files":[],"sha":"63d0e3ba015b89de42bc01375175691e4aa5db67"},{"commit":{"message":"fix of javadoc link"},"files":[],"sha":"6663f05bc8cf38d89ac87454ffbf1f8a2832f72b"},{"commit":{"message":"Initial commit of Classfile Processing API"},"files":[],"sha":"34c60575d3c059895a534e2ff84150250f0c7dc2"}]