{"files":[{"patch":"@@ -42,0 +42,6 @@\n+#if defined(__clang_major__)\n+#define CORRECT_COMPILER_ATOMIC_SUPPORT\n+#elif defined(__GNUC__) && __riscv_xlen <= 32\n+#define CORRECT_COMPILER_ATOMIC_SUPPORT\n+#endif\n+\n@@ -117,0 +123,34 @@\n+#ifndef CORRECT_COMPILER_ATOMIC_SUPPORT\n+template<>\n+template<typename T>\n+inline T Atomic::PlatformCmpxchg<4>::operator()(T volatile* dest __attribute__((unused)),\n+                                                T compare_value,\n+                                                T exchange_value,\n+                                                atomic_memory_order order) const {\n+  STATIC_ASSERT(4 == sizeof(T));\n+\n+  T old_value;\n+  long rc;\n+\n+  if (order != memory_order_relaxed) {\n+    FULL_MEM_BARRIER;\n+  }\n+\n+  __asm__ __volatile__ (\n+    \"1:  sext.w    %1, %3      \\n\\t\" \/\/ sign-extend compare_value\n+    \"    lr.w      %0, %2      \\n\\t\"\n+    \"    bne       %0, %1, 2f  \\n\\t\"\n+    \"    sc.w      %1, %4, %2  \\n\\t\"\n+    \"    bnez      %1, 1b      \\n\\t\"\n+    \"2:                        \\n\\t\"\n+    : \/*%0*\/\"=&r\" (old_value), \/*%1*\/\"=&r\" (rc), \/*%2*\/\"+A\" (*dest)\n+    : \/*%3*\/\"r\" (compare_value), \/*%4*\/\"r\" (exchange_value)\n+    : \"memory\" );\n+\n+  if (order != memory_order_relaxed) {\n+    FULL_MEM_BARRIER;\n+  }\n+  return old_value;\n+}\n+#endif\n+\n@@ -150,1 +190,3 @@\n-#ifndef FULL_COMPILER_ATOMIC_SUPPORT\n+#if !defined(CORRECT_COMPILER_ATOMIC_SUPPORT)\n+  STATIC_ASSERT(byte_size >= 8);\n+#elif !defined(FULL_COMPILER_ATOMIC_SUPPORT)\n@@ -190,0 +232,1 @@\n+#undef CORRECT_COMPILER_ATOMIC_SUPPORT\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/atomic_linux_riscv.hpp","additions":44,"deletions":1,"binary":false,"changes":45,"status":"modified"}]}