{"files":[{"patch":"@@ -53,1 +53,0 @@\n-class GenerationSpec;\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,8 +97,0 @@\n-    _young_gen_spec(new GenerationSpec(Generation::DefNew,\n-                                      NewSize,\n-                                      MaxNewSize,\n-                                      GenAlignment)),\n-    _old_gen_spec(new GenerationSpec(Generation::MarkSweepCompact,\n-                                    OldSize,\n-                                    MaxOldSize,\n-                                    GenAlignment)),\n@@ -305,8 +297,0 @@\n-GenerationSpec* SerialHeap::young_gen_spec() const {\n-  return _young_gen_spec;\n-}\n-\n-GenerationSpec* SerialHeap::old_gen_spec() const {\n-  return _old_gen_spec;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-class GenerationSpec;\n@@ -89,3 +88,0 @@\n-  GenerationSpec* _young_gen_spec;\n-  GenerationSpec* _old_gen_spec;\n-\n@@ -162,3 +158,0 @@\n-  GenerationSpec* young_gen_spec() const;\n-  GenerationSpec* old_gen_spec() const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-  nonstatic_field(SerialHeap,                        _young_gen_spec,        GenerationSpec*)               \\\n-  nonstatic_field(SerialHeap,                        _old_gen_spec,          GenerationSpec*)               \\\n","filename":"src\/hotspot\/share\/gc\/serial\/vmStructs_serial.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/serial\/cardTableRS.hpp\"\n-#include \"gc\/shared\/generationSpec.hpp\"\n-#include \"runtime\/java.hpp\"\n-#include \"utilities\/macros.hpp\"\n-#if INCLUDE_SERIALGC\n-#include \"gc\/serial\/defNewGeneration.hpp\"\n-#include \"gc\/serial\/tenuredGeneration.hpp\"\n-#endif\n-\n-Generation* GenerationSpec::init(ReservedSpace rs, CardTableRS* remset) {\n-  switch (name()) {\n-#if INCLUDE_SERIALGC\n-    case Generation::DefNew:\n-      return new DefNewGeneration(rs, _init_size, _min_size, _max_size);\n-\n-    case Generation::MarkSweepCompact:\n-      return new TenuredGeneration(rs, _init_size, _min_size, _max_size, remset);\n-#endif\n-\n-    default:\n-      guarantee(false, \"unrecognized GenerationName\");\n-      return nullptr;\n-  }\n-}\n","filename":"src\/hotspot\/share\/gc\/shared\/generationSpec.cpp","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -1,63 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_SHARED_GENERATIONSPEC_HPP\n-#define SHARE_GC_SHARED_GENERATIONSPEC_HPP\n-\n-#include \"gc\/serial\/generation.hpp\"\n-#include \"utilities\/align.hpp\"\n-\n-class CardTableRS;\n-\n-\/\/ The specification of a generation.  This class also encapsulates\n-\/\/ some generation-specific behavior.  This is done here rather than as a\n-\/\/ virtual function of Generation because these methods are needed in\n-\/\/ initialization of the Generations.\n-class GenerationSpec : public CHeapObj<mtGC> {\n-  friend class VMStructs;\n-private:\n-  Generation::Name _name;\n-  size_t           _init_size;\n-  size_t           _min_size;\n-  size_t           _max_size;\n-\n-public:\n-  GenerationSpec(Generation::Name name, size_t init_size, size_t max_size, size_t alignment) :\n-    _name(name),\n-    _init_size(align_up(init_size, alignment)),\n-    _min_size(_init_size),\n-    _max_size(align_up(max_size, alignment))\n-  { }\n-\n-  Generation* init(ReservedSpace rs, CardTableRS* remset);\n-\n-  Generation::Name name() const { return _name; }\n-  size_t init_size()      const { return _init_size; }\n-  size_t min_size()       const { return _min_size; }\n-  size_t max_size()       const { return _max_size; }\n-};\n-\n-typedef GenerationSpec* GenerationSpecPtr;\n-\n-#endif \/\/ SHARE_GC_SHARED_GENERATIONSPEC_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/generationSpec.hpp","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"gc\/shared\/generationSpec.hpp\"\n@@ -116,4 +115,0 @@\n-  nonstatic_field(GenerationSpec,              _name,                                         Generation::Name)                      \\\n-  nonstatic_field(GenerationSpec,              _init_size,                                    size_t)                                \\\n-  nonstatic_field(GenerationSpec,              _max_size,                                     size_t)                                \\\n-                                                                                                                                     \\\n@@ -168,1 +163,0 @@\n-  declare_toplevel_type(GenerationSpec)                                   \\\n@@ -185,1 +179,0 @@\n-  declare_toplevel_type(GenerationSpec**)                                 \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}