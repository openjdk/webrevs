{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.jshell.execution.impl.ConsoleImpl;\n@@ -119,1 +120,5 @@\n-        return super.invoke(doitMethod);\n+        try {\n+            return super.invoke(doitMethod);\n+        } finally {\n+            ConsoleImpl.ensureOutputAreWritten();\n+        }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/RemoteExecutionControl.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -47,0 +46,8 @@\n+    public static void ensureOutputAreWritten() {\n+        var console = ConsoleProviderImpl.console;\n+\n+        if (console != null) {\n+            console.ensureOutputAreWritten();\n+        }\n+    }\n+\n@@ -54,0 +61,1 @@\n+        private static RemoteConsole console;\n@@ -57,2 +65,5 @@\n-            if (remoteOutput != null && remoteInput != null) {\n-                return new RemoteConsole(remoteOutput, remoteInput);\n+            synchronized (ConsoleProviderImpl.class) {\n+                if (remoteOutput != null && remoteInput != null) {\n+                    return console = new RemoteConsole(remoteOutput, remoteInput);\n+                }\n+                return null;\n@@ -60,1 +71,0 @@\n-            return null;\n@@ -63,1 +73,1 @@\n-        public static void setRemoteOutput(InputStream remoteOutput) {\n+        public static synchronized void setRemoteOutput(InputStream remoteOutput) {\n@@ -67,2 +77,3 @@\n-        public static void setRemoteInput(OutputStream remoteInput) {\n-            ConsoleProviderImpl.remoteInput = remoteInput;\n+        public static synchronized void setRemoteInput(OutputStream remoteInput) {\n+            ConsoleProviderImpl.remoteInput =\n+                    new BufferedOutputStream(remoteInput);\n@@ -138,1 +149,0 @@\n-                            remoteOutput.read();\n@@ -280,0 +290,11 @@\n+        void ensureOutputAreWritten() {\n+            try {\n+                sendAndReceive(() -> {\n+                    remoteInput.write(Task.ENSURE_OUTPUTS_ARE_WRITTEN.ordinal());\n+                    return remoteOutput.read();\n+                });\n+            } catch (IOException ex) {\n+                throw new IOError(ex);\n+            }\n+        }\n+\n@@ -318,1 +339,0 @@\n-                        sinkOutput.write(0);\n@@ -363,0 +383,4 @@\n+                case ENSURE_OUTPUTS_ARE_WRITTEN -> {\n+                    sinkOutput.write(0);\n+                    bp = 0;\n+                }\n@@ -418,0 +442,1 @@\n+        ENSURE_OUTPUTS_ARE_WRITTEN,\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/impl\/ConsoleImpl.java","additions":35,"deletions":10,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/langtools\/jdk\/jshell\/ConsoleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}