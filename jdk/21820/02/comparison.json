{"files":[{"patch":"@@ -3224,1 +3224,1 @@\n-        Index<K,V> h; Node<K,V> n; long est;\n+        Index<K,V> h; Node<K,V> hn, n; long est;\n@@ -3226,1 +3226,1 @@\n-        if ((h = head) == null) {\n+        if ((h = head) == null || (hn = h.node) == null) {\n@@ -3231,1 +3231,1 @@\n-            n = h.node;\n+            n = hn.next;\n@@ -3310,1 +3310,1 @@\n-        Index<K,V> h; Node<K,V> n; long est;\n+        Index<K,V> h; Node<K,V> hn, n; long est;\n@@ -3312,1 +3312,1 @@\n-        if ((h = head) == null) {\n+        if ((h = head) == null || (hn = h.node) == null) {\n@@ -3317,1 +3317,1 @@\n-            n = h.node;\n+            n = hn.next;\n@@ -3414,1 +3414,1 @@\n-        Index<K,V> h; Node<K,V> n; long est;\n+        Index<K,V> h; Node<K,V> hn, n; long est;\n@@ -3416,1 +3416,1 @@\n-        if ((h = head) == null) {\n+        if ((h = head) == null || (hn = h.node) == null) {\n@@ -3421,1 +3421,1 @@\n-            n = h.node;\n+            n = hn.next;\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentSkipListMap.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1326,0 +1326,31 @@\n+    \/**\n+     * Spliterators.trySplit() returns null with an empty map and non-null when\n+     * it is not empty.\n+     *\/\n+    public void testSpliterators() {\n+        \/\/ To test JDK-8343426\n+        ConcurrentSkipListMap<Integer, Integer> map = new ConcurrentSkipListMap<>();\n+        for (int i = 1; i <= 1000; i++) map.put(i, i);\n+        \/\/ ensure that the splits do happen\n+        assertNotNull(map.keySet().spliterator().trySplit());\n+        assertNotNull(map.entrySet().spliterator().trySplit());\n+        assertNotNull(map.values().spliterator().trySplit());\n+        \/\/ ensure that the splits return *all* the items in the set\n+        assertEquals(500_500, map.keySet()\n+                .parallelStream()\n+                .mapToInt(Integer::valueOf)\n+                .sum());\n+        assertEquals(500_500, map.values()\n+                .parallelStream()\n+                .mapToInt(Integer::valueOf)\n+                .sum());\n+        assertEquals(500_500 * 2, map.entrySet()\n+                .parallelStream()\n+                .mapToInt(entry -> entry.getKey() + entry.getValue())\n+                .sum());\n+        map.clear();\n+        assertNull(map.keySet().spliterator().trySplit());\n+        assertNull(map.entrySet().spliterator().trySplit());\n+        assertNull(map.values().spliterator().trySplit());\n+    }\n+\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ConcurrentSkipListMapTest.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"}]}