[{"commit":{"message":"Disable inlining again for better stability w.r.t. spilling"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"2081732404fe6b5233984f1111aff4829f61641a"},{"commit":{"message":"Add a default run without JVM arguments"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"25a24bccd39f3f2dca6806c1e22a343bcf33bcc2"},{"commit":{"message":"Allow inlining, get rid of reads"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"61875050a1b24da905b13d1766d261bedf588535"},{"commit":{"message":"Add tentative testArrayWriteBarrierFastPathRealLarge version with a single, fixed new value"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"ad53c48ca7a14ca59a8c73f54e606aaa0c3a33b0"},{"commit":{"message":"Avoid loads and range checks in null-writing micro-benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"f59ed3fbaef0af76dcbe7788146583591ad05617"},{"commit":{"message":"Do not inline array micro-benchmarks to avoid spilling in the innermost loop"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"30eb0465f821ca6063782736c29c589b93169859"},{"commit":{"message":"Disable loop unrolling"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"b1836b4e68330a1c68df9b43c46bff02e8e79b0f"},{"commit":{"message":"Update copyright"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java"}],"sha":"c04feb47b85acf3503489e04a018a15163f73e6a"}]