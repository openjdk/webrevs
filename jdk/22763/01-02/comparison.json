{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.jmh.annotations.CompilerControl;\n@@ -122,0 +123,5 @@\n+    \/\/ This and the other testArrayWriteBarrierFast benchmarks below should not\n+    \/\/ be inlined into the JMH-generated harness method. If the methods were\n+    \/\/ inlined, we might spill in the main loop (on x64) depending on very\n+    \/\/ subtle conditions (such as whether LinuxPerfAsmProfiler is enabled!),\n+    \/\/ which could distort the results.\n@@ -123,0 +129,1 @@\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -130,0 +137,1 @@\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -137,0 +145,1 @@\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -144,0 +153,1 @@\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}