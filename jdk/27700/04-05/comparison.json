{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+    static boolean failed = false;\n+\n@@ -100,0 +102,39 @@\n+\n+        try {\n+            System.out.println(\"\\nTesting explicit ASN.1 NULL parameter canonicalization...\");\n+\n+            \/\/ Construct an AlgorithmId with explicit DER NULL parameters\n+            DerValue explicitNullParams = new DerValue(DerValue.tag_Null, new byte[0]);\n+            AlgorithmId aiNullParams = new AlgorithmId(AlgorithmId.SHA256_oid, explicitNullParams);\n+\n+            \/\/ The constructor should canonicalize this to \"no parameters\"\n+            if (aiNullParams.getEncodedParams() != null) {\n+                System.out.println(\"FAILED: explicit NULL not canonicalized to absent parameters\");\n+                failed = true;\n+            } else {\n+                System.out.println(\"PASSED explicit ASN.1 NULL canonicalization test\");\n+            }\n+\n+            \/\/ Ensure equality and hashCode are consistent for canonicalized vs. normal AlgorithmId\n+            AlgorithmId aiNormal = AlgorithmId.get(\"SHA-256\");\n+            if (!aiNullParams.equals(aiNormal) ||\n+                    aiNullParams.hashCode() != aiNormal.hashCode()) {\n+                System.out.println(\"FAILED: equals()\/hashCode() NULL vs absent parameters\");\n+                failed = true;\n+            } else {\n+                System.out.println(\"PASSED equals()\/hashCode() NULL vs absent parameters test\");\n+            }\n+        } catch (Exception e) {\n+            System.out.println(\"FAILED: Exception during explicit NULL parameter test - \" + e);\n+            failed = true;\n+        }\n+\n+        try {\n+            DerValue invalidNull = new DerValue(DerValue.tag_Null, new byte[]{0x00});\n+            new AlgorithmId(AlgorithmId.SHA256_oid, invalidNull);\n+            throw new Exception(\"FAILED invalid ASN.1 NULL test: expected IOException not thrown\");\n+        } catch (IOException expected) {\n+            System.out.println(\"PASSED invalid ASN.1 NULL test (caught expected IOException)\");\n+        } catch (Exception e) {\n+            throw new Exception(\"FAILED invalid ASN.1 NULL test: unexpected exception type\", e);\n+        }\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/AlgorithmIdEqualsHashCode.java","additions":42,"deletions":1,"binary":false,"changes":43,"status":"modified"}]}