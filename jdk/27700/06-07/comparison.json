{"files":[{"patch":"@@ -32,1 +32,1 @@\n-import java.io.*;\n+import java.io.IOException;\n@@ -42,2 +42,0 @@\n-    static boolean failed = false;\n-\n@@ -104,1 +102,5 @@\n-            System.out.println(\"\\nTesting explicit ASN.1 NULL parameter canonicalization...\");\n+            System.out.println(\"\\nTesting explicit ASN.1 NULL parameter \" +\n+                    \"canonicalization...\");\n+\n+            \/\/ Assume failure by default\n+            boolean passed = false;\n@@ -112,6 +114,8 @@\n-            if (aiNullParams.getEncodedParams() != null) {\n-                System.out.println(\"FAILED: explicit NULL not canonicalized to absent\" +\n-                        \" parameters\");\n-                failed = true;\n-            } else {\n-                System.out.println(\"PASSED explicit ASN.1 NULL canonicalization test\");\n+            if (aiNullParams.getEncodedParams() == null) {\n+                \/\/ Ensure equals() and hashCode() are consistent for canonicalized\n+                \/\/ vs normal AlgorithmId\n+                AlgorithmId aiNormal = AlgorithmId.get(\"SHA-256\");\n+                if (aiNullParams.equals(aiNormal) &&\n+                        aiNullParams.hashCode() == aiNormal.hashCode()) {\n+                    passed = true; \/\/ Only pass if *both* conditions succeed\n+                }\n@@ -120,10 +124,3 @@\n-            \/\/ Ensure equality and hashCode are consistent for canonicalized\n-            \/\/ vs normal AlgorithmId\n-            AlgorithmId aiNormal = AlgorithmId.get(\"SHA-256\");\n-            if (!aiNullParams.equals(aiNormal) ||\n-                    aiNullParams.hashCode() != aiNormal.hashCode()) {\n-                System.out.println(\"FAILED: equals()\/hashCode() NULL vs absent parameters\");\n-                failed = true;\n-            } else {\n-                System.out.println(\"PASSED equals()\/hashCode() NULL vs absent parameters\" +\n-                        \" test\");\n+            if (!passed) {\n+                throw new Exception(\"FAILED: explicit NULL canonicalization or\" +\n+                        \" equals()\/hashCode() test\");\n@@ -131,0 +128,4 @@\n+\n+            System.out.println(\"PASSED explicit ASN.1 NULL canonicalization and\" +\n+                    \" equality test\");\n+\n@@ -134,1 +135,1 @@\n-            failed = true;\n+            throw e; \/\/ Rethrow to mark test failure\n@@ -137,0 +138,1 @@\n+        \/\/ Test invalid ASN.1 NULL (non-zero length)\n@@ -143,2 +145,2 @@\n-            System.out.println(\"PASSED invalid ASN.1 NULL test (caught expected \" +\n-                    \"IOException)\");\n+            System.out.println(\"PASSED invalid ASN.1 NULL test \" +\n+                    \"(caught expected IOException)\");\n@@ -146,2 +148,2 @@\n-            throw new Exception(\"FAILED invalid ASN.1 NULL test: unexpected exception \" +\n-                    \"type\", e);\n+            throw new Exception(\"FAILED invalid ASN.1 NULL test: unexpected exception\" +\n+                    \" type\", e);\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/AlgorithmIdEqualsHashCode.java","additions":27,"deletions":25,"binary":false,"changes":52,"status":"modified"}]}