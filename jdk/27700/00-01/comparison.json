{"files":[{"patch":"@@ -138,2 +138,6 @@\n-         * Follow parse(DerValue) behavior: if the DerValue is an ASN.1 NULL,\n-         * validate it and canonicalize to \"no parameters\" (encodedParams == null).\n+         * If the parameters field explicitly contains an ASN.1 NULL, treat it as\n+         * \"no parameters\" rather than storing a literal NULL encoding.\n+         *\n+         * This canonicalization ensures consistent encoding\/decoding behavior:\n+         *  - Algorithms that omit parameters and those that encode explicit NULL\n+         *   are treated equivalently (encodedParams == null).\n@@ -143,1 +147,2 @@\n-                throw new IOException(\"invalid NULL\");\n+                throw new IOException(\"Invalid ASN.1 NULL in AlgorithmId parameters: \" +\n+                        \"non-zero length\");\n@@ -145,1 +150,1 @@\n-            \/\/ canonicalize: treat as absent parameters\n+            \/\/ Canonicalize to \"no parameters\" representation for consistency\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/NullParams.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}