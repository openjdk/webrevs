{"files":[{"patch":"@@ -59,1 +59,1 @@\n-  \/\/ VM expects i2c entry to be always filled. The rest can be unset.\n+  \/\/ foil any attempt to call the i2c, c2i or unverified c2i entries\n@@ -61,2 +61,2 @@\n-                            nullptr,\n-                            nullptr,\n+                            CAST_FROM_FN_PTR(address,zero_null_code_stub),\n+                            CAST_FROM_FN_PTR(address,zero_null_code_stub),\n","filename":"src\/hotspot\/cpu\/zero\/sharedRuntime_zero.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  do_arch_blob(initial, 32)                                             \\\n+  do_arch_blob(initial, 0)                                              \\\n@@ -61,1 +61,1 @@\n-  do_arch_blob(final, 32)                                               \\\n+  do_arch_blob(final, 0)                                                \\\n","filename":"src\/hotspot\/cpu\/zero\/stubDeclarations_zero.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2605,5 +2605,7 @@\n-    assert(no_arg_blob != nullptr &&\n-           obj_arg_blob != nullptr &&\n-           int_arg_blob != nullptr &&\n-           obj_int_arg_blob != nullptr &&\n-           obj_obj_arg_blob != nullptr, \"Initial adapters must be properly created\");\n+    \/\/ we should always get an entry back but we don't have any\n+    \/\/ associated blob on Zero\n+    assert(_no_arg_handler != nullptr &&\n+           _obj_arg_handler != nullptr &&\n+           _int_arg_handler != nullptr &&\n+           _obj_int_arg_handler != nullptr &&\n+           _obj_obj_arg_handler != nullptr, \"Initial adapter handlers must be properly created\");\n@@ -2613,0 +2615,2 @@\n+#ifndef ZERO\n+  \/\/ no blobs to register when we are on Zero\n@@ -2618,0 +2622,1 @@\n+#endif \/\/ ZERO\n@@ -2712,0 +2717,2 @@\n+  \/\/ we can only check for the same code if there is any\n+#ifndef ZERO\n@@ -2718,0 +2725,1 @@\n+# endif \/\/ ZERO\n@@ -2795,1 +2803,2 @@\n-  int insts_size = adapter_blob->code_size();\n+  int insts_size;\n+  \/\/ on Zero the blob may be null\n@@ -2797,0 +2806,4 @@\n+  if (adapter_blob == nullptr) {\n+    return;\n+  }\n+  insts_size = adapter_blob->code_size();\n@@ -2837,0 +2850,5 @@\n+#ifdef ZERO\n+  \/\/ On zero there is no code to save and no need to create a blob and\n+  \/\/ or relocate the handler.\n+  adapter_blob = nullptr;\n+#else\n@@ -2872,0 +2890,2 @@\n+#endif \/\/ ZERO\n+\n@@ -2878,0 +2898,1 @@\n+\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -171,8 +171,0 @@\n-  if (code_size == 0) {\n-    LogTarget(Info, stubs) lt;\n-    if (lt.is_enabled()) {\n-      LogStream ls(lt);\n-      ls.print_cr(\"%s\\t not generated\", buffer_name);\n-    }\n-    return nullptr;\n-  }\n@@ -199,0 +191,9 @@\n+  if (code_size == 0) {\n+    assert(buffer.insts_size() == 0, \"should not write into buffer when bob size declared as 0\");\n+    LogTarget(Info, stubs) lt;\n+    if (lt.is_enabled()) {\n+      LogStream ls(lt);\n+      ls.print_cr(\"%s\\t not generated\", buffer_name);\n+      return nullptr;\n+    }\n+  }\n@@ -201,1 +202,1 @@\n-  assert(code_size == 0 || buffer.insts_remaining() > 200,\n+  assert(buffer.insts_remaining() > 200,\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}