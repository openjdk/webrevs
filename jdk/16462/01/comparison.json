{"files":[{"patch":"@@ -392,1 +392,1 @@\n-class AbstractDumpWriter : public ResourceObj {\n+class AbstractDumpWriter : public CHeapObj<mtInternal> {\n@@ -1958,1 +1958,3 @@\n-    remove(path);\n+    if (remove(path) != 0) {\n+      log_info(heapdump)(\"Removal of segment file (%d) failed (%d)\", i, errno);\n+    }\n@@ -2361,0 +2363,1 @@\n+      delete local_writer;\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -42,1 +44,1 @@\n- * @bug 8306441\n+ * @bug 8306441 8319053\n@@ -50,0 +52,2 @@\n+    private static final String heapDumpFileName = \"parallelHeapDump.bin\";\n+\n@@ -68,0 +72,10 @@\n+\n+        List<String> files\n+            = Stream.of(heapDumpFile.getAbsoluteFile().getParentFile().listFiles())\n+                .filter(file -> !file.isDirectory())\n+                .map(File::getName)\n+                .filter(name -> name.startsWith(heapDumpFileName) && !name.equals(heapDumpFileName))\n+                .collect(Collectors.toList());\n+        if (!files.isEmpty()) {\n+            throw new RuntimeException(\"Unexpected files left: \" + files);\n+        }\n@@ -82,2 +96,0 @@\n-        String heapDumpFileName = \"parallelHeapDump.bin\";\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/HeapDumpParallelTest.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}