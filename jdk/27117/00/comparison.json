{"files":[{"patch":"@@ -5968,3 +5968,0 @@\n-\n-  \/\/ List of nop instructions\n-  nops( MachNop );\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2641,3 +2641,0 @@\n-\n-  \/\/ List of nop instructions\n-  nops( Nop_A0, Nop_A1, Nop_MS, Nop_FA, Nop_BR );\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4923,4 +4923,0 @@\n-\n-  \/\/ Unused, list one so that array generated by adlc is not empty.\n-  \/\/ Aix compiler chokes if _nop_count = 0.\n-  nops(fxNop);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3843,3 +3843,0 @@\n-\n-  \/\/ List of nop instructions\n-  nops( MachNop );\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3432,3 +3432,0 @@\n-\n-  \/\/ List of nop instructions\n-  nops( MachNop );\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1510,0 +1510,1 @@\n+          parse_err(WARN, \"Using obsolete token, nops\");\n@@ -1511,29 +1512,0 @@\n-          if (_curchar != '(') {\n-            parse_err(SYNERR, \"expected `(`, found '%c'\\n\", _curchar);\n-            break;\n-            }\n-\n-          next_char(); skipws();\n-\n-          while (_curchar != ')') {\n-            ident = get_ident();\n-            if (ident == nullptr) {\n-              parse_err(SYNERR, \"expected identifier for nop instruction, found '%c'\\n\", _curchar);\n-              break;\n-            }\n-\n-            pipeline->_noplist.addName(ident);\n-            pipeline->_nopcnt++;\n-            skipws();\n-\n-            if (_curchar == ',') {\n-              next_char(); skipws();\n-            }\n-          }\n-\n-          next_char(); skipws();\n-\n-          if (_curchar == ';') {\n-            next_char(); skipws();\n-          }\n-\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":2,"deletions":30,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -514,2 +514,0 @@\n-  ,  _noplist               ()\n-  ,  _nopcnt                (0)\n@@ -536,1 +534,0 @@\n-  const char *nop;\n@@ -577,3 +574,0 @@\n-  fprintf(fp,\"\\nNop Instructions:\");\n-  for ( _noplist.reset(); (nop = _noplist.iter()) != nullptr; )\n-    fprintf(fp, \" \\\"%s\\\"\", nop);\n","filename":"src\/hotspot\/share\/adlc\/formsopt.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -389,3 +389,0 @@\n-  NameList   _noplist;            \/\/ List of NOP instructions\n-  int        _nopcnt;             \/\/ Number of nop instructions\n-\n","filename":"src\/hotspot\/share\/adlc\/formsopt.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -980,12 +980,0 @@\n-  \/\/ Output the list of nop nodes\n-  fprintf(fp_cpp, \"\/\/ Descriptions for emitting different functional unit nops\\n\");\n-  const char *nop;\n-  int nopcnt = 0;\n-  for ( _pipeline->_noplist.reset(); (nop = _pipeline->_noplist.iter()) != nullptr; nopcnt++ );\n-\n-  fprintf(fp_cpp, \"void Bundle::initialize_nops(MachNode * nop_list[%d]) {\\n\", nopcnt);\n-  int i = 0;\n-  for ( _pipeline->_noplist.reset(); (nop = _pipeline->_noplist.iter()) != nullptr; i++ ) {\n-    fprintf(fp_cpp, \"  nop_list[%d] = (MachNode *) new %sNode();\\n\", i, nop);\n-  }\n-  fprintf(fp_cpp, \"};\\n\\n\");\n@@ -1007,1 +995,1 @@\n-  i = 0;\n+  int i = 0;\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1118,6 +1118,0 @@\n-  fprintf(fp_hpp, \"  enum {\\n\");\n-  fprintf(fp_hpp, \"    _nop_count = %d\\n\",\n-    _pipeline->_nopcnt);\n-  fprintf(fp_hpp, \"  };\\n\\n\");\n-  fprintf(fp_hpp, \"  static void initialize_nops(MachNode *nop_list[%d]);\\n\\n\",\n-    _pipeline->_nopcnt);\n","filename":"src\/hotspot\/share\/adlc\/output_h.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1402,4 +1402,0 @@\n-  \/\/ fill in the nop array for bundling computations\n-  MachNode *_nop_list[Bundle::_nop_count];\n-  Bundle::initialize_nops(_nop_list);\n-\n@@ -2065,2 +2061,1 @@\n-  \/\/ Now that the nops are in the array, save the count\n-  \/\/ (but allow entries for the nops)\n+  \/\/ Save the count\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}