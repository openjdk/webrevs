{"files":[{"patch":"@@ -838,1 +838,1 @@\n-  void NAME(Register Rd, Register Rs1, int32_t imm) {                                       \\\n+  void NAME(Register Rd, Register Rs1, int64_t imm) {                                       \\\n@@ -849,6 +849,6 @@\n-  INSN(_addi,      0b0010011, 0b000);\n-  INSN(slti,       0b0010011, 0b010);\n-  INSN(_addiw,     0b0011011, 0b000);\n-  INSN(_and_imm12, 0b0010011, 0b111);\n-  INSN(ori,        0b0010011, 0b110);\n-  INSN(xori,       0b0010011, 0b100);\n+  INSN(_addi,  0b0010011, 0b000);\n+  INSN(_addiw, 0b0011011, 0b000);\n+  INSN(_andi,  0b0010011, 0b111);\n+  INSN(ori,    0b0010011, 0b110);\n+  INSN(xori,   0b0010011, 0b100);\n+  INSN(slti,   0b0010011, 0b010);\n@@ -859,1 +859,1 @@\n-  void NAME(Register Rd, Register Rs1, uint32_t imm) {                                      \\\n+  void NAME(Register Rd, Register Rs1, uint64_t imm) {                                      \\\n@@ -2233,1 +2233,1 @@\n-  void NAME(Register Rd_Rs1, int32_t imm) {                                                  \\\n+  void NAME(Register Rd_Rs1, int64_t imm) {                                                  \\\n@@ -2250,1 +2250,1 @@\n-  void NAME(int32_t imm) {                                                                   \\\n+  void NAME(int64_t imm) {                                                                   \\\n@@ -2271,1 +2271,1 @@\n-  void NAME(Register Rd, uint32_t uimm) {                                                    \\\n+  void NAME(Register Rd, uint64_t uimm) {                                                    \\\n@@ -2328,1 +2328,1 @@\n-  void NAME(Register Rd_Rs1, int32_t imm) {                                                  \\\n+  void NAME(Register Rd_Rs1, int64_t imm) {                                                  \\\n@@ -2953,1 +2953,1 @@\n-  void NAME(Register Rd, Register Rs1, int32_t imm) {                                        \\\n+  void NAME(Register Rd, Register Rs1, int64_t imm) {                                        \\\n@@ -2981,1 +2981,1 @@\n-  void NAME(Register Rd, Register Rs1, int32_t imm) {                                        \\\n+  void NAME(Register Rd, Register Rs1, int64_t imm) {                                        \\\n@@ -2996,2 +2996,2 @@\n-  void NAME(Register Rd, Register Rs1, int32_t imm) {                                        \\\n-    \/* and_imm12 -> c.andi *\/                                                                \\\n+  void NAME(Register Rd, Register Rs1, int64_t imm) {                                        \\\n+    \/* andi -> c.andi *\/                                                                     \\\n@@ -3003,1 +3003,1 @@\n-    _and_imm12(Rd, Rs1, imm);                                                                \\\n+    _andi(Rd, Rs1, imm);                                                                     \\\n@@ -3006,1 +3006,1 @@\n-  INSN(and_imm12);\n+  INSN(andi);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-  andi(arr_size, arr_size, ~(uint)MinObjAlignmentInBytesMask);\n+  andi(arr_size, arr_size, ~MinObjAlignmentInBytesMask);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2622,1 +2622,1 @@\n-void MacroAssembler::addw(Register Rd, Register Rn, int32_t increment, Register tmp) {\n+void MacroAssembler::addw(Register Rd, Register Rn, int64_t increment, Register tmp) {\n@@ -2632,1 +2632,1 @@\n-void MacroAssembler::subw(Register Rd, Register Rn, int32_t decrement, Register tmp) {\n+void MacroAssembler::subw(Register Rd, Register Rn, int64_t decrement, Register tmp) {\n@@ -2904,10 +2904,0 @@\n-void MacroAssembler::andi(Register Rd, Register Rn, int64_t imm, Register tmp) {\n-  if (is_simm12(imm)) {\n-    and_imm12(Rd, Rn, imm);\n-  } else {\n-    assert_different_registers(Rn, tmp);\n-    mv(tmp, imm);\n-    andr(Rd, Rn, tmp);\n-  }\n-}\n-\n@@ -6145,1 +6135,1 @@\n-    and_imm12(Rd, Rs, imm);\n+    andi(Rd, Rs, imm);\n@@ -6148,1 +6138,1 @@\n-    and_imm12(Rd, Rd, 1);\n+    andi(Rd, Rd, 1);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -889,4 +889,4 @@\n-  void add(Register Rd, Register Rn, int64_t increment, Register tmp = t0);\n-  void sub(Register Rd, Register Rn, int64_t decrement, Register tmp = t0);\n-  void addw(Register Rd, Register Rn, int32_t increment, Register tmp = t0);\n-  void subw(Register Rd, Register Rn, int32_t decrement, Register tmp = t0);\n+  void add (Register Rd, Register Rn, int64_t increment, Register tmp = t0);\n+  void sub (Register Rd, Register Rn, int64_t decrement, Register tmp = t0);\n+  void addw(Register Rd, Register Rn, int64_t increment, Register tmp = t0);\n+  void subw(Register Rd, Register Rn, int64_t decrement, Register tmp = t0);\n@@ -894,1 +894,1 @@\n-  void subi(Register Rd, Register Rn, int32_t decrement) {\n+  void subi(Register Rd, Register Rn, int64_t decrement) {\n@@ -899,1 +899,1 @@\n-  void subiw(Register Rd, Register Rn, int32_t decrement) {\n+  void subiw(Register Rd, Register Rn, int64_t decrement) {\n@@ -931,1 +931,1 @@\n-  void andi(Register Rd, Register Rn, int64_t imm, Register tmp = t0);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1718,1 +1718,2 @@\n-      __ andi(swap_reg, swap_reg, 3 - (int)os::vm_page_size());\n+      __ mv(t0, 3 - (int)os::vm_page_size());\n+      __ andr(swap_reg, swap_reg, t0);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}