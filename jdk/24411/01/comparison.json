{"files":[{"patch":"@@ -76,1 +76,3 @@\n-    const size_t sz = 2000;\n+    const size_t sz = AsyncLogBufferSize \/ 2;\n+    const char* str = \"a lot of log...\";\n+    const size_t str_size = strlen(str);\n@@ -79,1 +81,1 @@\n-    AsyncLogWriter::BufferUpdater saver(1024);\n+    \/\/AsyncLogWriter::BufferUpdater saver(1024);\n@@ -84,1 +86,1 @@\n-    for (size_t i = 0; i < sz; ++i) {\n+    for (size_t i = 0; i < (sz \/ str_size); ++i) {\n@@ -87,0 +89,4 @@\n+    lm.debug(\"a lot of log...\");\n+    lm.debug(\"a lot of log...\");\n+    lm.debug(\"a lot of log...\");\n+    lm.debug(\"a lot of log...\");\n@@ -247,1 +253,3 @@\n-  if (AsyncLogWriter::instance() == nullptr) {\n+  if (AsyncLogWriter::instance() == nullptr) return;\n+  if (LogConfiguration::async_mode() != LogConfiguration::AsyncMode::Drop) {\n+    EXPECT_TRUE(false) << \"This test must be run in drop mode if async UL is activated\";\n@@ -253,1 +261,20 @@\n-  EXPECT_TRUE(file_contains_substring(TestLogFileName, \"messages dropped due to async logging\"));\n+  bool messages_dropped = file_contains_substring(TestLogFileName, \"messages dropped due to async logging\");\n+  if (!messages_dropped) {\n+    stringStream content;\n+    FILE* fp = os::fopen(TestLogFileName, \"r\");\n+    assert(fp != nullptr, \"error opening file %s: %s\", TestLogFileName, os::strerror(errno));\n+    {\n+      ResourceMark rm;\n+      char* line = read_line(fp);\n+      while (line != nullptr) {\n+        ResourceMark rm;\n+        content.print_raw(line);\n+        line = read_line(fp);\n+      }\n+    }\n+\n+    \/\/ The thread is null and deattached.\n+    \/\/ That means that UL degrades to synchronous logging for this thread, which means that no messages can be dropped.\n+    EXPECT_NE(nullptr, Thread::current_or_null()) << \"Thread was null\";\n+    EXPECT_TRUE(messages_dropped) << \"Log file content:\\n\" << content.freeze();\n+  }\n","filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp","additions":32,"deletions":5,"binary":false,"changes":37,"status":"modified"}]}