{"files":[{"patch":"@@ -766,1 +766,1 @@\n-      ASSERT_EQ(mapping_info.committed_size, size_t { 0 });\n+      ASSERT_EQ(mapping_info.committed_size, size_t{0});\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -795,1 +795,1 @@\n-    EXPECT_EQ(decided_size, size_t { 0 }) << \"Expected decided size to be 0 when large page is not supported by the processor\";\n+    EXPECT_EQ(decided_size, size_t{0}) << \"Expected decided size to be 0 when large page is not supported by the processor\";\n@@ -817,1 +817,1 @@\n-    EXPECT_EQ(decided_size, size_t { 0 }) << \"Expected decided size to be 0 for large pages bigger than 4mb on IA32 or AMD64\";\n+    EXPECT_EQ(decided_size, size_t{0}) << \"Expected decided size to be 0 for large pages bigger than 4mb on IA32 or AMD64\";\n@@ -830,1 +830,1 @@\n-  EXPECT_EQ(decided_size, size_t { 0 }) << \"Expected decided size to default to 0 when LargePageSizeInBytes is not a multiple of minimum size\";\n+  EXPECT_EQ(decided_size, size_t{0}) << \"Expected decided size to default to 0 when LargePageSizeInBytes is not a multiple of minimum size\";\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}