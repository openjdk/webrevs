{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -103,1 +102,1 @@\n-                adler = updateByteBuffer(adler, ((DirectBuffer)buffer).address(), pos, rem);\n+                adler = updateByteBuffer(adler, NIO_ACCESS.getBufferAddress(buffer), pos, rem);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Adler32.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -102,1 +101,1 @@\n-                crc = updateByteBuffer(crc, ((DirectBuffer)buffer).address(), pos, rem);\n+                crc = updateByteBuffer(crc, NIO_ACCESS.getBufferAddress(buffer), pos, rem);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -33,1 +34,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -179,1 +179,1 @@\n-                crc = updateDirectByteBuffer(crc, ((DirectBuffer)buffer).address(),\n+                crc = updateDirectByteBuffer(crc, NIO_ACCESS.getBufferAddress(buffer),\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32C.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -325,1 +324,1 @@\n-                    long address = ((DirectBuffer) dictionary).address();\n+                    long address = NIO_ACCESS.getBufferAddress(dictionary);\n@@ -580,1 +579,1 @@\n-                        long inputAddress = ((DirectBuffer) input).address();\n+                        long inputAddress = NIO_ACCESS.getBufferAddress(input);\n@@ -704,1 +703,1 @@\n-                        long outputAddress = ((DirectBuffer) output).address();\n+                        long outputAddress = NIO_ACCESS.getBufferAddress(output);\n@@ -726,1 +725,1 @@\n-                        long inputAddress = ((DirectBuffer) input).address();\n+                        long inputAddress = NIO_ACCESS.getBufferAddress(input);\n@@ -730,1 +729,1 @@\n-                                long outputAddress = outputPos + ((DirectBuffer) output).address();\n+                                long outputAddress = outputPos + NIO_ACCESS.getBufferAddress(output);\n@@ -755,1 +754,1 @@\n-                            long outputAddress = ((DirectBuffer) output).address();\n+                            long outputAddress = NIO_ACCESS.getBufferAddress(output);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Deflater.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -246,1 +245,1 @@\n-                    long address = ((DirectBuffer) dictionary).address();\n+                    long address = NIO_ACCESS.getBufferAddress(dictionary);\n@@ -369,1 +368,1 @@\n-                                long inputAddress = ((DirectBuffer) input).address();\n+                                long inputAddress = NIO_ACCESS.getBufferAddress(input);\n@@ -506,1 +505,1 @@\n-                                long outputAddress = ((DirectBuffer) output).address();\n+                                long outputAddress = NIO_ACCESS.getBufferAddress(output);\n@@ -531,1 +530,1 @@\n-                                long inputAddress = ((DirectBuffer) input).address();\n+                                long inputAddress = NIO_ACCESS.getBufferAddress(input);\n@@ -535,1 +534,1 @@\n-                                        long outputAddress = ((DirectBuffer) output).address();\n+                                        long outputAddress = NIO_ACCESS.getBufferAddress(output);\n@@ -558,1 +557,1 @@\n-                                    long outputAddress = ((DirectBuffer) output).address();\n+                                    long outputAddress = NIO_ACCESS.getBufferAddress(output);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Inflater.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,1 @@\n-\/**\n- * Base class for Checksum tests\n- *\/\n+import java.lang.foreign.MemorySegment;\n@@ -32,0 +30,3 @@\n+\/**\n+ * Base class for Checksum tests\n+ *\/\n@@ -39,0 +40,1 @@\n+        testWrappedMemorySegment(checksum, expected);\n@@ -72,0 +74,7 @@\n+    private static void testWrappedMemorySegment(Checksum checksum, long expected) {\n+        checksum.reset();\n+        ByteBuffer bb = MemorySegment.ofArray(BYTES_123456789).asByteBuffer();\n+        checksum.update(bb);\n+        checkChecksum(checksum, expected);\n+    }\n+\n","filename":"test\/jdk\/java\/util\/zip\/ChecksumBase.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 7110149 8184306 6341887\n+ * @bug 7110149 8184306 6341887 8357145\n@@ -32,0 +32,1 @@\n+import java.lang.foreign.Arena;\n@@ -206,0 +207,10 @@\n+\n+        \/\/ segment\n+        try (var arena = Arena.ofConfined()) {\n+            bbIn = arena.allocate(in.length).asByteBuffer();\n+            bbIn.put(in, 0, n).flip();\n+            bbOut1 = arena.allocate(out1.length).asByteBuffer();\n+            bbOut2 = arena.allocate(out2.length).asByteBuffer();\n+            checkByteBuffer(def, inf, bbIn, bbOut1, bbOut2, in, len, out2, false);\n+            checkByteBufferReadonly(def, inf, bbIn, bbOut1, bbOut2);\n+        }\n","filename":"test\/jdk\/java\/util\/zip\/DeInflate.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"}]}