{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import sun.security.util.BitArray;\n@@ -62,1 +63,0 @@\n-    @SuppressWarnings(\"deprecation\")\n@@ -70,1 +70,2 @@\n-        key = ECUtil.encodePoint(w, params.getCurve());\n+        byte[] key = ECUtil.encodePoint(w, params.getCurve());\n+        setKey(new BitArray(key.length * 8, key));\n@@ -95,7 +96,0 @@\n-    \/\/ Internal API to get the encoded point. Currently used by SunPKCS11.\n-    \/\/ This may change\/go away depending on what we do with the public API.\n-    @SuppressWarnings(\"deprecation\")\n-    public byte[] getEncodedPublicValue() {\n-        return key.clone();\n-    }\n-\n@@ -105,1 +99,0 @@\n-    @SuppressWarnings(\"deprecation\")\n@@ -115,1 +108,1 @@\n-            w = ECUtil.decodePoint(key, params.getCurve());\n+            w = ECUtil.decodePoint(getKey().toByteArray(), params.getCurve());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECPublicKeyImpl.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,18 +68,0 @@\n-    \/**\n-     * The key bytes, without the algorithm information.\n-     * @deprecated Use the BitArray form which does not require keys to\n-     * be byte aligned.\n-     * @see sun.security.x509.X509Key#setKey(BitArray)\n-     * @see sun.security.x509.X509Key#getKey()\n-     *\/\n-    @Deprecated\n-    protected byte[] key = null;\n-\n-    \/*\n-     * The number of bits unused in the last byte of the key.\n-     * Added to keep the byte[] key form consistent with the BitArray\n-     * form. Can de deleted when byte[] key is deleted.\n-     *\/\n-    @Deprecated\n-    private int unusedBits = 0;\n-\n@@ -115,9 +97,0 @@\n-\n-        \/*\n-         * Do this to keep the byte array form consistent with\n-         * this. Can delete when byte[] key is deleted.\n-         *\/\n-        this.key = key.toByteArray();\n-        int remaining = key.length() % 8;\n-        this.unusedBits =\n-            ((remaining == 0) ? 0 : 8 - remaining);\n@@ -131,12 +104,0 @@\n-        \/*\n-         * Do this for consistency in case a subclass\n-         * modifies byte[] key directly. Remove when\n-         * byte[] key is deleted.\n-         * Note: the consistency checks fail when the subclass\n-         * modifies a non byte-aligned key (into a byte-aligned key)\n-         * using the deprecated byte[] key field.\n-         *\/\n-        this.bitStringKey = new BitArray(\n-                          this.key.length * 8 - this.unusedBits,\n-                          this.key);\n-\n@@ -334,1 +295,1 @@\n-            + \", unparsed keybits = \\n\" + encoder.encodeBuffer(key);\n+            + \", unparsed keybits = \\n\" + encoder.encodeBuffer(bitStringKey.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":2,"deletions":41,"binary":false,"changes":43,"status":"modified"}]}