{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,5 @@\n-                expStrMap.put(\"pmap\", List.of(\"jvm\", \"java\", \"jli\", \"jimage\"));\n+                if (Platform.isStatic()) {\n+                    expStrMap.put(\"pmap\", List.of(\"java\"));\n+                } else {\n+                    expStrMap.put(\"pmap\", List.of(\"jvm\", \"java\", \"jli\", \"jimage\"));\n+                }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbPmap.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import jdk.test.lib.Platform;\n@@ -68,1 +69,6 @@\n-            out.shouldMatch(\"^0x[0-9a-f]+.+libjvm\\\\.so$\"); \/\/ Find libjvm from output\n+            if (Platform.isStatic()) {\n+                out.shouldMatch(\"java\"); \/\/ Find launcher\n+                out.shouldNotMatch(\"^0x[0-9a-f]+.+libjvm\\\\.so$\"); \/\/ No libjvm from output\n+            } else {\n+                out.shouldMatch(\"^0x[0-9a-f]+.+libjvm\\\\.so$\"); \/\/ Find libjvm from output\n+            }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/PmapOnDebugdTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import jdk.test.lib.Platform;\n@@ -78,1 +79,6 @@\n-            out.shouldMatch(\"^0x[0-9a-f]+: .+\/libjvm\\\\.(so|dylib) \\\\+ 0x[0-9a-f]+$\");\n+            if (Platform.isStatic()) {\n+                out.shouldMatch(\"java\");\n+                out.shouldNotMatch(\"^0x[0-9a-f]+: .+\/libjvm\\\\.(so|dylib) \\\\+ 0x[0-9a-f]+$\");\n+            } else {\n+                out.shouldMatch(\"^0x[0-9a-f]+: .+\/libjvm\\\\.(so|dylib) \\\\+ 0x[0-9a-f]+$\");\n+            }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/RunCommandOnServerTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}