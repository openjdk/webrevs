{"files":[{"patch":"@@ -26,1 +26,0 @@\n-#include \"cds\/cdsConfig.hpp\"\n@@ -945,13 +944,0 @@\n-#ifdef ASSERT\n-static Thread* volatile cds_dump_java_thread = nullptr;\n-static bool runs_on_one_thread_only () {\n-  Thread* const t = Atomic::load(&cds_dump_java_thread);\n-  Thread* const cur = Thread::current();\n-  if (t == nullptr) {\n-    Atomic::cmpxchg(&cds_dump_java_thread, t, cur);\n-    return true;\n-  }\n-  return t == cur;\n-}\n-#endif\n-\n@@ -1007,6 +993,0 @@\n-#ifdef ASSERT\n-    \/\/ Verify that during CDS dumping, only a single thread\n-    \/\/ ever calls ihash\n-    assert(!CDSConfig::is_dumping_archive() || runs_on_one_thread_only(),\n-        \"Only one thread should generate ihash during CDS dumps\");\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-  _hashStateX = CDSConfig::is_dumping_archive() ? 0x12345678 : os::random();\n+  _hashStateX = CDSConfig::is_dumping_static_archive() ? 0x12345678 : os::random();\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}