{"files":[{"patch":"@@ -984,9 +984,1 @@\n-    unsigned t = current->_hashStateX;\n-    t ^= (t << 11);\n-    current->_hashStateX = current->_hashStateY;\n-    current->_hashStateY = current->_hashStateZ;\n-    current->_hashStateZ = current->_hashStateW;\n-    unsigned v = current->_hashStateW;\n-    v = (v ^ (v >> 19)) ^ (t ^ (t >> 8));\n-    current->_hashStateW = v;\n-    value = v;\n+    value = current->_hashState.next_random();\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/cdsConfig.hpp\"\n@@ -105,6 +106,0 @@\n-  \/\/ thread-specific hashCode stream generator state - Marsaglia shift-xor form\n-  _hashStateX = os::random();\n-  _hashStateY = 842502087;\n-  _hashStateZ = 0x8767;    \/\/ (int)(3579807591LL & 0xffff) ;\n-  _hashStateW = 273326509;\n-\n@@ -604,0 +599,24 @@\n+\n+Thread::MarsagliaShiftRNG::MarsagliaShiftRNG() :\n+  _W(0), _X(0), _Y(0), _Z(0), _inited(false) {}\n+\n+unsigned Thread::MarsagliaShiftRNG::next_random() {\n+  if (!_inited) {\n+    _inited = true;\n+    _X = CDSConfig::is_dumping_archive() ?\n+         0x12345678 : \/\/ when dumping, use a constant seed to keep archive generation reproducible\n+         (unsigned) MAX2(1, os::random());\n+    _Y = 842502087;\n+    _Z = 0x8767;    \/\/ (int)(3579807591LL & 0xffff) ;\n+    _W = 273326509;\n+  }\n+  unsigned t = _X;\n+  t ^= (t << 11);\n+  _X = _Y;\n+  _Y = _Z;\n+  _Z = _W;\n+  unsigned v = _W;\n+  v = (v ^ (v >> 19)) ^ (t ^ (t >> 8));\n+  _W = v;\n+  return v;\n+}\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -620,4 +620,9 @@\n-  jint _hashStateW;                           \/\/ Marsaglia Shift-XOR thread-local RNG\n-  jint _hashStateX;                           \/\/ thread-specific hashCode generator state\n-  jint _hashStateY;\n-  jint _hashStateZ;\n+  \/\/ Marsaglia Shift-XOR thread-local RNG for identity_hash\n+  class MarsagliaShiftRNG {\n+    jint _W, _X, _Y, _Z;\n+    bool _inited;\n+  public:\n+    MarsagliaShiftRNG();\n+    unsigned next_random();\n+  };\n+  MarsagliaShiftRNG _hashState;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}