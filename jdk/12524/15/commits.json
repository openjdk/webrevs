[{"commit":{"message":"Update readZipInputStream to verify that the ZipInputStream finds a single zip entry with the expected contents"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"e8d3b9047575d3c2b5d7e327dc4f9e9f4732efd5"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[],"sha":"09d5d2f7827b8a86773d59e1cd2fb16f19cbbd8c"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[],"sha":"4af7f500c71a1ae99f7d43c7f08523f1059ef085"},{"commit":{"message":"Update comment of expect64BitDataDescriptor to reflect relaxed validation"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"134f3f62d333ee8f631888bf9e76bd7b93afd419"},{"commit":{"message":"Dial down validation of the Zip64 extra field"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"2f163f26af13808b4d1ff733a0cfa1552f4082eb"},{"commit":{"message":"8321712: C2: \"failed: Multiple uses of register\" in C2_MacroAssembler::vminmax_fp\n\nCo-authored-by: Volodymyr Paprotski <vpaprotski@openjdk.org>\nReviewed-by: kvn, thartmann, epeter, jbhateja"},"files":[],"sha":"e04f825f57ef29bd90d5364492985ff6fcd0156e"},{"commit":{"message":"8319128: sun\/security\/pkcs11 tests fail on OL 7.9 aarch64\n\nReviewed-by: mbaesken"},"files":[],"sha":"f9ac4ad05527d0c98c7d0f0089cb288bc16505b3"},{"commit":{"message":"8322971: KEM.getInstance() should check if a 3rd-party security provider is signed\n\nReviewed-by: mullan, valeriep"},"files":[],"sha":"483561249276e5f6a5a4c5de6b9d8cf80fde4a76"},{"commit":{"message":"8320890: [AIX] Find a better way to mimic dl handle equality\n\nReviewed-by: stuefe, mdoerr"},"files":[],"sha":"0011b7199590000dd0b41e186211049d6770b884"},{"commit":{"message":"8323276: StressDirListings.java fails on AIX\n\nReviewed-by: jpai, dfuchs"},"files":[],"sha":"62a9f7f503908f9c3ac8fe41adfed03b8b30395f"},{"commit":{"message":"8319793: C2 compilation fails with \"Bad graph detected in build_loop_late\" after JDK-8279888\n\nReviewed-by: chagedorn, epeter"},"files":[],"sha":"e378bf5bf5c905649668f068689ea2dc098bc823"},{"commit":{"message":"8314515: java\/util\/concurrent\/SynchronousQueue\/Fairness.java failed with \"Error: fair=false i=8 j=0\"\n\nReviewed-by: alanb"},"files":[],"sha":"492919fe9fee3c2c375a17696895fbc61e545474"},{"commit":{"message":"8323330: [BACKOUT] JDK-8276809: java\/awt\/font\/JNICheck\/FreeTypeScalerJNICheck.java shows JNI warning on Windows\n\nReviewed-by: prr, stuefe"},"files":[],"sha":"d8fb3610e16a86fecb4b249744b8ae6783630261"},{"commit":{"message":"8264102: JTable Keyboards Navigation differs with Test Instructions.\n\nReviewed-by: psadhukhan, abhiscxk"},"files":[],"sha":"03287a56d97b82cdbc163fe862a724531a168c55"},{"commit":{"message":"8323188: JFR: Needless RESOURCE_ARRAY when sending EventOSInformation\n\nReviewed-by: mgronlun"},"files":[],"sha":"829fb191675a64c94130cab162b035aac755e58a"},{"commit":{"message":"8321616: Retire binary test vectors in test\/jdk\/java\/util\/zip\/ZipFile\n8322830: Add test case for ZipFile opening a ZIP with no entries\n\nReviewed-by: lancea"},"files":[],"sha":"304c3a508bc426fe5a79b8875c81547704044990"},{"commit":{"message":"8317804: com\/sun\/jdi\/JdwpAllowTest.java fails on Alpine 3.17 \/ 3.18\n\nReviewed-by: cjplummer, mbaesken"},"files":[],"sha":"cb38c77efc55b7b04803f2a1c1241aece1133d6f"},{"commit":{"message":"8322565: (zipfs) Files.setPosixPermissions should preserve 'external file attributes' bits\n\nReviewed-by: clanger, lancea"},"files":[],"sha":"1215d0cea114663b2af3e9d30a5c06bbb0f9cd73"},{"commit":{"message":"8322982: CTW fails to build after 8308753\n\nReviewed-by: shade, phh"},"files":[],"sha":"c99826e5616761fa302386dddcfc42be7c4765ac"},{"commit":{"message":"8320788: The system properties page is missing some properties\n\nReviewed-by: iris, rriggs, bpb, joehw"},"files":[],"sha":"6b16ce9b5c539905f5fe1c75afc6d5c48400567d"},{"commit":{"message":"8322878: Including sealing information Class.toGenericString()\n\nCo-authored-by: Pavel Rappo <prappo@openjdk.org>\nReviewed-by: rriggs"},"files":[],"sha":"5d85ed7e6c913bd7d1c559a6da11a5dce5f11d36"},{"commit":{"message":"8323540: assert((!((((method)->is_trace_flag_set(((1 << 4) << 8))))))) failed: invariant\n\nReviewed-by: mikael"},"files":[],"sha":"087dca830f835134c86ef9f55dd039ff2a34ed6d"},{"commit":{"message":"8322477: order of subclasses in the permits clause can differ between compilations\n\nReviewed-by: jlahoda"},"files":[],"sha":"b290b60b15191d65c8b808870d1a22b637a62c29"},{"commit":{"message":"8313083: Print 'rss' and 'cache' as part of the container information\n\nReviewed-by: sgehwolf"},"files":[],"sha":"34f01b5bd3c231f7489028e8aacfe3911e62ea2d"},{"commit":{"message":"8323428: Shenandoah: Unused memory in regions compacted during a full GC should be mangled\n\nReviewed-by: ysr, kdnilsen, shade"},"files":[],"sha":"f9051f5577c3abd4cec5c4559d2b83ea5dfbbe04"},{"commit":{"message":"8309218: java\/util\/concurrent\/locks\/Lock\/OOMEInAQS.java still times out with ZGC, Generational ZGC, and SerialGC\n\nReviewed-by: jpai, dholmes, alanb"},"files":[],"sha":"f73219432faf73314a051a170889504c2e52b1ca"},{"commit":{"message":"7057369: (fs spec) FileStore getUsableSpace and getUnallocatedSpace could be clearer\n\nReviewed-by: alanb"},"files":[],"sha":"7f02685988df5fbdbf051564dd4ff835df7409c1"},{"commit":{"message":"8323518: Parallel: Remove unused methods in psParallelCompact.hpp\n\nReviewed-by: tschatzl"},"files":[],"sha":"b082aa80cb9d8c30712649fcc30a189ae9c75526"},{"commit":{"message":"8323005: Parallel: Refactor PSPromotionManager::claim_or_forward_depth\n\nReviewed-by: tschatzl, rrich"},"files":[],"sha":"1b14916d89f85b64eb8a5168e89937bbeb35ba6c"},{"commit":{"message":"8323331: fix typo hpage_pdm_size\n\nReviewed-by: shade, mdoerr"},"files":[],"sha":"93f898d96b51e20e5192cad1d358c59c45c5b3bd"},{"commit":{"message":"8321685: Missing ResourceMark in code called from JvmtiEnvBase::get_vthread_jvf\n\nReviewed-by: amenkov, cjplummer"},"files":[],"sha":"458ff43c7e76589d12a3bea6ede0513047323e06"},{"commit":{"message":"8323508: Remove TestGCLockerWithShenandoah.java line from TEST.groups\n\nReviewed-by: dholmes, shade, tschatzl"},"files":[],"sha":"e4df050b6b9e955f8cb1f8af29f0e4aa404c1222"},{"commit":{"message":"8322324: java\/foreign\/TestStubAllocFailure.java times out while waiting for forked process\n8322637: java\/foreign\/critical\/TestCriticalUpcall.java timed out\n\nReviewed-by: mcimadamore"},"files":[],"sha":"8199e48852e3142900c2d2a93e233e9e7885a3bd"},{"commit":{"message":"8316241: Test jdk\/jdk\/jfr\/jvm\/TestChunkIntegrity.java failed\n\nReviewed-by: egahlin"},"files":[],"sha":"9d8db1c1407f33ebfe3ae93042d32c00437e9bd5"},{"commit":{"message":"8322278: Generational ZGC: Adjust the comment of ZHeuristics::use_per_cpu_shared_small_pages\n\nReviewed-by: eosterlund"},"files":[],"sha":"3be107b80e16e988f05e8a9bd642265edd16b20a"},{"commit":{"message":"8322294: Cleanup NativePostCallNop\n\nReviewed-by: mdoerr, aph"},"files":[],"sha":"eb86a171cdd3f4bb484d6732f5fa93c325e83b57"},{"commit":{"message":"8314629: Generational ZGC: Clearing All SoftReferences log line lacks GCId\n\nReviewed-by: eosterlund, tschatzl"},"files":[],"sha":"cd8068409d099e886c00e6e266336fb9702ce91b"},{"commit":{"message":"8322828: Parallel: Rename ParallelCompactData::_region_start\n\nReviewed-by: tschatzl, ehelin"},"files":[],"sha":"5f5a7a785b6926bd64d328e18ded716a49d2486e"},{"commit":{"message":"8323499: Remove unused methods in space.hpp\n\nReviewed-by: tschatzl"},"files":[],"sha":"245d8653670674f19422b4ba97dea5f849fc3820"},{"commit":{"message":"8322987: Remove gc\/stress\/gclocker\/TestGCLocker* since they always fail with OOME\n\nReviewed-by: ayang, lmesnik"},"files":[],"sha":"8fae1624a29f2ff61cbccab8ec9e6a152a42aa92"},{"commit":{"message":"8277869: Maven POMs are using HTTP links where HTTPS is available\n\nReviewed-by: kvn, thartmann"},"files":[],"sha":"f6d3a6c8f81b785de42fc0e756af6b8874c9c698"},{"commit":{"message":"8322589: Add Ideal transformation: (~a) & (~b) => ~(a | b)\n\nReviewed-by: thartmann, epeter"},"files":[],"sha":"c24f7f187532ae052304ddcfd31d10718d1396ec"},{"commit":{"message":"8322816: RISC-V: Incorrect guarantee in patch_vtype\n\nReviewed-by: fyang, luhenry"},"files":[],"sha":"adbc6340ec55c39f90b8fffa8bf6905c15132df1"},{"commit":{"message":"8320919: Clarify Locale related system properties\n\nReviewed-by: smarks, rriggs"},"files":[],"sha":"7d4b5f7566dff6bed1ff7b38f733af6ac4bff5e8"},{"commit":{"message":"8322817: RISC-V: Eliminate -Wparentheses warnings in riscv code\n\nReviewed-by: fyang, luhenry"},"files":[],"sha":"79e1832b8e04ab9467b5ffbd3b39443df2a02432"},{"commit":{"message":"8323115: x86-32: Incorrect predicates for cmov instruct transforms with UseSSE\n\nReviewed-by: shade, thartmann"},"files":[],"sha":"ab3256ff0bf95d5afa3f1e1623477066d8e16b61"},{"commit":{"message":"8322880: Eliminate -Wparentheses warnings in arm32 code\n\nReviewed-by: shade, dholmes"},"files":[],"sha":"80aaaa56e00bc446dfb1674427eab0938ff922df"},{"commit":{"message":"8323210: Update the usage of cmsFLAGS_COPY_ALPHA\n\nReviewed-by: prr"},"files":[],"sha":"c3cb1cfaf72797306e57cf7d2327955a0e956f4a"},{"commit":{"message":"8322809: SystemModulesMap::classNames and moduleNames arrays do not match the order\n\nReviewed-by: alanb"},"files":[],"sha":"3cd7db6a1bb67dad61535463fafc8cc03f835438"},{"commit":{"message":"8323318: Remove unused Space::is_free_block\n\nReviewed-by: tschatzl"},"files":[],"sha":"792aef7fa4ce3066d212aef676c31507cb8915e8"},{"commit":{"message":"8322237: Heap dump contains duplicate thread records for mounted virtual threads\n\nReviewed-by: dholmes, sspitsyn"},"files":[],"sha":"b1607a54bcb4a591e35ea2fc7a53dfde9739e94e"},{"commit":{"message":"8323066: gc\/g1\/TestSkipRebuildRemsetPhase.java fails with 'Skipping Remembered Set Rebuild.' missing\n\nReviewed-by: ayang, iwalulya"},"files":[],"sha":"7f6e99f21ca16a35b03069b4328a661744472ea1"},{"commit":{"message":"8322890: Directly return in OldPLABSizeConstraintFunc\n\nReviewed-by: ayang, tschatzl"},"files":[],"sha":"fe3ba46bf69abfade5fa679b849fe1640f1234f3"},{"commit":{"message":"8323284: Remove unused FilteringClosure declaration\n\nReviewed-by: stefank, tschatzl"},"files":[],"sha":"1d4340ab233982941a2f714a7785f1ded5cf6713"},{"commit":{"message":"8322330: JavadocHelperTest.java OOMEs with Parallel GC and ZGC\n\nReviewed-by: ayang, aboldtch"},"files":[],"sha":"0ad6d9c5cca9898bc63927b3705473e2b54611dc"},{"commit":{"message":"8233443: G1 DetailedUsage class names overly generic for global namespace\n\nReviewed-by: ayang, gli, tschatzl"},"files":[],"sha":"e597bfabfeb9a11511a98e10879e703e4fa69909"},{"commit":{"message":"8322936: Update blessed-modifier-order.sh for default, sealed, and non-sealed\n\nReviewed-by: erikj, rriggs, martin"},"files":[],"sha":"0e3efa119aa62855e5a4a0e5f50a49550725ff93"},{"commit":{"message":"8310277: jdk\/javadoc\/doclet\/testMethodCommentAlgorithm\/TestMethodCommentsAlgorithm.java fails with IllegalStateException\n\nReviewed-by: jjg"},"files":[],"sha":"b371b74be655c198dc0234e7295f74173961dc5a"},{"commit":{"message":"8323264: Serial: Remove unused GenerationBlockSizeClosure\n\nReviewed-by: stefank"},"files":[],"sha":"5864fc42586003fefd3b4766ace349be0fd398d3"},{"commit":{"message":"8322858: compiler\/c2\/aarch64\/TestFarJump.java fails on AArch64 due to unexpected PrintAssembly output\n\nReviewed-by: aph, thartmann"},"files":[],"sha":"c33fbcc114a2b26139dba97c5bf1324374f64dc5"},{"commit":{"message":"8323241: jcmd manpage should use lists for argument lists\n\nReviewed-by: alanb"},"files":[],"sha":"daf3af675abb6d69c5585f673d014add5f69e2de"},{"commit":{"message":"8320069: RISC-V: Add Zcb instructions\n\nReviewed-by: fyang, vkempik"},"files":[],"sha":"56c63dfcf936b507daf8025a364f65139a798040"},{"commit":{"message":"8319716: RISC-V: Add SHA-2\n\nCo-authored-by: Robbin Ehn <rehn@openjdk.org>\nReviewed-by: fyang, mli, luhenry"},"files":[],"sha":"f0225c47206b0c5077ece36fa09efff9d4f7403c"},{"commit":{"message":"8322829: Refactor nioBlocker to avoid blocking while holding Thread's interrupt lock\n\nReviewed-by: jpai"},"files":[],"sha":"16031d9b9ebd1bd20d992c1d9f588293edcb0ec9"},{"commit":{"message":"8320864: Serial: Extract out Full GC related fields from ContiguousSpace\n\nReviewed-by: kbarrett, sjohanss"},"files":[],"sha":"2534bd5cdbf4afeb2ac258571c4bafc68a849842"},{"commit":{"message":"8310995: missing @since tags in 36 jdk.dynalink classes\n\nReviewed-by: jlaskey, iris, attila"},"files":[],"sha":"50d4e509dee2845114b575ff6ee03e468f5095fa"},{"commit":{"message":"8318971: Better Error Handling for Jar Tool When Processing Non-existent Files\n\nReviewed-by: alanb, jpai"},"files":[],"sha":"4f61f4afaf400ac63927727e65b5db5491eda140"},{"commit":{"message":"8322657: CDS filemap fastdebug assert while loading Graal CE Polyglot in isolated classloader\n\nReviewed-by: matsaave, dholmes"},"files":[],"sha":"485fcf4f87daa20baa2021701774d40f2af8e8bc"},{"commit":{"message":"8323032: OptimizedModuleHandlingTest failed in dynamic CDS archive mode\n\nReviewed-by: dholmes, matsaave"},"files":[],"sha":"59f4a35f6761bf99e7e20c94bcd72a2d5c0f75a1"},{"commit":{"message":"8322759: Eliminate -Wparentheses warnings in compiler code\n\nReviewed-by: kvn, shade"},"files":[],"sha":"66baa50544610a29151b849f0087f122918954e2"},{"commit":{"message":"8274300: Address dsymutil warning by excluding platform specific files\n\nReviewed-by: erikj"},"files":[],"sha":"f801f859b2596c28d1f950e256a377c6c9a4e65b"},{"commit":{"message":"8322545: Declare newInsets as static in ThemeReader.cpp\n\nReviewed-by: serb, aivanov"},"files":[],"sha":"2afcbfc07958d0ac8337d728ab22054f6a627cf3"},{"commit":{"message":"8323095: Expand TraceOptoParse block output abbreviations\n\nReviewed-by: thartmann, chagedorn, xliu"},"files":[],"sha":"257696fe6889265728c1019a405d3983987b8c13"},{"commit":{"message":"8320128: Clean up Parse constructor for OSR\n\nReviewed-by: thartmann, shade"},"files":[],"sha":"9c2ff341e14883a9dcc5d17844554268caf8fbc1"},{"commit":{"message":"8322980: Debug agent's dumpThread() API should update thread's name before printing it\n\nReviewed-by: kevinw, sspitsyn"},"files":[],"sha":"817b498d357b497ec0c6b9512b6542c471885be4"},{"commit":{"message":"8323086: Shenandoah: Heap could be corrupted by oom during evacuation\n\nReviewed-by: kdnilsen, shade"},"files":[],"sha":"489591ffc3351d80e04ced62571eb614038e5774"},{"commit":{"message":"8310190: C2 SuperWord: AlignVector is broken, generates misaligned packs\n\nCo-authored-by: Christian Hagedorn <chagedorn@openjdk.org>\nReviewed-by: kvn, chagedorn"},"files":[],"sha":"a50212ddf6c267fdc57c37ca3e12a07d88881f3b"},{"commit":{"message":"8322790: RISC-V: Tune costs for shuffles with no conversion\n\nReviewed-by: rehn, fyang"},"files":[],"sha":"0185641ab74c18459cb2d0c2ca99909f103b1da2"},{"commit":{"message":"8320310: CompiledMethod::has_monitors flag can be incorrect\n\nReviewed-by: vlivanov, thartmann"},"files":[],"sha":"45481bda1bbcdd5922139624200188a8a6f53ebf"},{"commit":{"message":"8322003: JShell - Incorrect type inference in lists of records implementing interfaces\n\nReviewed-by: vromero"},"files":[],"sha":"76e3ffeb579c31233b8da7a4d95d990cb9a2c480"},{"commit":{"message":"8318444: Write details about compilation bailouts into crash reports\n\nReviewed-by: thartmann, chagedorn"},"files":[],"sha":"25c997b31aa9ab4d2dd88eb4f4e7e19118179b25"},{"commit":{"message":"8320317: ObjectMonitor NotRunnable is not really an optimization\n\nReviewed-by: eosterlund, dholmes, shade, dcubed"},"files":[],"sha":"2f8126d2df8c48184abb90df0da5ba6465c268eb"},{"commit":{"message":"8321371: SpinPause() not implemented for bsd_aarch64\/macOS\n\nReviewed-by: eosterlund, dholmes, dcubed, eastigeevich, shade"},"files":[],"sha":"dfb1df4a4319266cec04219606838a819a54cffb"},{"commit":{"message":"8310711: [IR Framework] Remove safepoint while printing handling\n\nReviewed-by: thartmann, epeter"},"files":[],"sha":"677bd6227125a4fce170ffc1a9372ee58fb6ef06"},{"commit":{"message":"8276809: java\/awt\/font\/JNICheck\/FreeTypeScalerJNICheck.java shows JNI warning on Windows\n\nReviewed-by: rschmelter, stuefe"},"files":[],"sha":"e45dc8c6e7869785573a1d440f28306bf681e771"},{"commit":{"message":"8322489: 22-b27: Up to 7% regression in all Footprint3-*-G1\/ZGC\n\nReviewed-by: egahlin"},"files":[],"sha":"a1e241da09e1f26a9456aba996e5a8cb0f723dbb"},{"commit":{"message":"8323065: Unneccesary CodeBlob lookup in CompiledIC::internal_set_ic_destination\n\nReviewed-by: dlong, thartmann"},"files":[],"sha":"875d8c889fc857c8425a358b917f3e26df45cf1e"},{"commit":{"message":"8323110: Eliminate -Wparentheses warnings in ppc code\n\nReviewed-by: dholmes"},"files":[],"sha":"a463ff6849cf50019f54ea323a4a84b9fb27a423"},{"commit":{"message":"8321786: SegmentAllocator:allocateFrom(ValueLayout, MemorySegment,ValueLayout,long,long) spec mismatch in exception scenario\n\nReviewed-by: mcimadamore"},"files":[],"sha":"694090157eb96d9ec5feb26a805a9613bbcd08de"},{"commit":{"message":"8322806: Eliminate -Wparentheses warnings in aarch64 code\n\nReviewed-by: stefank, dholmes"},"files":[],"sha":"9132c32546820f672e70b6c6ff8acd1863256df5"},{"commit":{"message":"8322754: click JComboBox when dialog about to close causes IllegalComponentStateException\n\nReviewed-by: abhiscxk, serb"},"files":[],"sha":"51aaf69f03455964f7628dedbceea8edee22b7f8"},{"commit":{"message":"8322815: Eliminate -Wparentheses warnings in shenandoah code\n\nReviewed-by: shade, zgu"},"files":[],"sha":"f51be253bb344855aa0ecf6e97b2a48c7185d9e7"},{"commit":{"message":"8322846: Running with -Djdk.tracePinnedThreads set can hang\n\nReviewed-by: jpai"},"files":[],"sha":"552a63c32c023ab5c8c18b7155126d45f78a4624"},{"commit":{"message":"8319757: java\/nio\/channels\/DatagramChannel\/InterruptibleOrNot.java failed: wrong exception thrown\n\nReviewed-by: jpai, bpb"},"files":[],"sha":"7919a379aa69a9493445b1a3df79105ff96e8398"},{"commit":{"message":"8323016: Improve reporting for bad options\n\nReviewed-by: prappo"},"files":[],"sha":"8602427871f71b2643ab5f078dc43c3dc05f20fe"},{"commit":{"message":"8322636: [JVMCI] HotSpotSpeculationLog can be inconsistent across a single compile\n\nReviewed-by: dnsimon, never"},"files":[],"sha":"b0a08c52b87d572ae34e9cc680dbf8d55b9eae37"},{"commit":{"message":"8322981: Fix 2 locations in JDI that throw IOException without using the \"Caused by\" exception\n\nReviewed-by: dholmes, lmesnik"},"files":[],"sha":"2b1c22ebb6dcea0d28b91d040ed5148eba6e64df"},{"commit":{"message":"8322954: Shenandoah: Convert evac-update closures asserts to rich asserts\n\nReviewed-by: wkemper, kdnilsen, ysr"},"files":[],"sha":"3ff6275bbde26b499bf22fb1194934e3f597031e"},{"commit":{"message":"8323073: ProblemList gc\/g1\/TestSkipRebuildRemsetPhase.java on linux-aarch64\n8323075: ProblemList runtime\/cds\/appcds\/jigsaw\/modulepath\/OptimizeModuleHandlingTest.java\n\nReviewed-by: thartmann"},"files":[],"sha":"f57dbd896b54e9632e585c3b48acc6af91145dcf"},{"commit":{"message":"8322985: [BACKOUT] 8318562: Computational test more than 2x slower when AVX instructions are used\n\nReviewed-by: chagedorn, shade"},"files":[],"sha":"a05665634adef2ca2b5d03e2d068743364cce0f1"},{"commit":{"message":"8310844: [AArch64] C1 compilation fails because monitor offset in OSR buffer is too large for immediate\n\nReviewed-by: aph, chagedorn"},"files":[],"sha":"c9118d03d01bb432d819206de9648dafb91294b8"},{"commit":{"message":"8322532: JShell : Unnamed variable issue\n\nReviewed-by: asotona"},"files":[],"sha":"a927fc5062991583b92de645304b70c415963962"},{"commit":{"message":"8323012: C2 fails with fatal error: no reachable node should have no use\n\nReviewed-by: chagedorn"},"files":[],"sha":"afef7f7fc46c11918d7f2623f65839f5da4000ba"},{"commit":{"message":"8323021: Shenandoah: Encountered reference count always attributed to first worker thread\n\nReviewed-by: kdnilsen, ysr, shade"},"files":[],"sha":"50ede3fee5c605300f051560e593049d7ae36b2a"},{"commit":{"message":"8322989: New test serviceability\/HeapDump\/FullGCHeapDumpLimitTest.java fails\n\nReviewed-by: stefank, dholmes"},"files":[],"sha":"4630a5fbec55942ea7a16e4c1a59501c452c66ff"},{"commit":{"message":"8321812: Update GC tests to use execute[Limited]TestJava\n\nReviewed-by: tschatzl, aboldtch"},"files":[],"sha":"2cf0d57fbeeb594f27c91a8c28afe228775c40ff"},{"commit":{"message":"8322920: Some ProcessTools.execute* functions are declared to throw Throwable\n\nReviewed-by: dholmes, lmesnik"},"files":[],"sha":"82754cc3c31e4eae201786fc4c596a2d978d14bb"},{"commit":{"message":"8322725: (tz) Update Timezone Data to 2023d\n\nReviewed-by: coffeys, naoto"},"files":[],"sha":"bbc7698acfdbb9539dccf3d41463177e385a18c1"},{"commit":{"message":"8322583: RISC-V: Enable fast class initialization checks\n\nReviewed-by: rehn, fyang, fjiang"},"files":[],"sha":"b0858e2e16d3fa7d96721433fe1d4d32ba9afc65"},{"commit":{"message":"8322322: Support archived full module graph when -Xbootclasspath\/a is used\n\nReviewed-by: alanb, mchung"},"files":[],"sha":"18aeda2eded13173ba67108437bc863b547677b8"},{"commit":{"message":"8322978: Remove debug agent debugMonitorTimedWait() function. It is no longer used.\n\nReviewed-by: dholmes, sspitsyn"},"files":[],"sha":"4d647edd7efa74e9545307b0648858960474b13c"},{"commit":{"message":"8322647: Short name for the `Europe\/Lisbon` time zone is incorrect\n\nReviewed-by: joehw, iris"},"files":[],"sha":"639a8fb952da60f09bed1c1a07a6fe4fb47d701b"},{"commit":{"message":"8319626: Override toString() for ZipFile\n\nReviewed-by: jpai, alanb, coffeys"},"files":[],"sha":"39ecafd007f102c980555a2542eeca6f9092f197"},{"commit":{"message":"8322976: Remove reference to transform_no_reclaim\n\nReviewed-by: shade, thartmann"},"files":[],"sha":"39a719b401aa36038bec4c50a0d2f036efa398fa"},{"commit":{"message":"8323011: ProblemList serviceability\/HeapDump\/FullGCHeapDumpLimitTest.java\n\nReviewed-by: azvegint, ctornqvi"},"files":[],"sha":"19c3423072fe9a4b63bcbfce190c43c3ae9f78cb"},{"commit":{"message":"8323002: test\/jdk\/java\/lang\/Thread\/virtual\/stress\/GetStackTraceALotWhenPinned.java times out on macosx-x64\n\nReviewed-by: pchilanomate"},"files":[],"sha":"fed5fb931b1339945eba94e3f0ba0943598bfe91"},{"commit":{"message":"8322781: C1: Debug build crash in GraphBuilder::vmap() when print stats\n\nReviewed-by: kvn, thartmann, shade"},"files":[],"sha":"031195282dfb27d4b50dfa9ea9881f49e08ec696"},{"commit":{"message":"8322512: StringBuffer.repeat does not work correctly after toString() was called\n\nReviewed-by: rriggs, jpai"},"files":[],"sha":"997093bf43733c392cfd8442a318a8fea86b259d"},{"commit":{"message":"8323000: Parallel: Remove unused class declarations in psScavenge\n\nReviewed-by: stefank"},"files":[],"sha":"02fcadb1efe8f1a50cdb9c2298d0b796d4c4dee3"},{"commit":{"message":"8237842: Separate definitions for default cache line and padding sizes\n\nReviewed-by: stefank, kvn, stuefe, tschatzl"},"files":[],"sha":"e395f25048bfae16ffb470016b028b42780e6926"},{"commit":{"message":"8322888: Parallel: Remove unused variables in PSPromotionManager\n\nReviewed-by: kbarrett"},"files":[],"sha":"c3963542e34f204580d8d50aba8eea7069d2c5f2"},{"commit":{"message":"8322298: Obsolete unused AdaptiveSizePolicyCollectionCostMargin\n\nReviewed-by: tschatzl, sjohanss, kbarrett, gli"},"files":[],"sha":"3fd6ba8b6360f71702359eb2983025299764a14e"},{"commit":{"message":"8322945: Problemlist runtime\/CompressedOops\/CompressedClassPointers.java on AIX\n\nReviewed-by: mdoerr"},"files":[],"sha":"98e0c922c2b4b34c6859dc63740f181cd6ca2ce5"},{"commit":{"message":"8322782: Clean up usages of unnecessary fully qualified class name \"java.util.Arrays\"\n\nReviewed-by: alanb, aivanov"},"files":[],"sha":"fdffc43310d44b7a596907d6fd3a99c726ac2ee7"},{"commit":{"message":"8322818: Thread::getStackTrace can fail with InternalError if virtual thread is timed-parked when pinned\n\nReviewed-by: pchilanomate"},"files":[],"sha":"5051312c990e7cf1670c381357bd16c8e429b227"},{"commit":{"message":"8322214: Return value of XMLInputFactory.getProperty() changed from boolean to String in JDK 22 early access builds\n\nReviewed-by: lancea"},"files":[],"sha":"2b3efb571f5fb136024cd249d885bed19ca38409"},{"commit":{"message":"8321404: Limit the number of heap dumps triggered by HeapDumpBeforeFullGC\/AfterFullGC\n\nReviewed-by: dholmes, cjplummer"},"files":[],"sha":"071218aa75b73bb0320e972b73bb01ac03c834f1"},{"commit":{"message":"8321599: Data loss in AVX3 Base64 decoding\n\nReviewed-by: sviswanathan, kvn"},"files":[],"sha":"ed06a8d1a98333f1866ba74ad99875ab22c1c5a1"},{"commit":{"message":"8319948: jcmd man page needs to be updated\n\nCo-authored-by: Thomas Stuefe <stuefe@openjdk.org>\nReviewed-by: kevinw, alanb"},"files":[],"sha":"37e18f7cfd5a926c96c10e1e92a62067de651c68"},{"commit":{"message":"8322877: java\/io\/BufferedInputStream\/TransferTo.java failed with IndexOutOfBoundsException\n\nReviewed-by: alanb, stsypanov"},"files":[],"sha":"b14ed3d29c599e73b8c913301c54f2765c81b069"},{"commit":{"message":"8322879: Eliminate -Wparentheses warnings in x86-32 code\n\nReviewed-by: kvn, shade"},"files":[],"sha":"23bf041c3b21537f6ba757930d80e166d108f51f"},{"commit":{"message":"8320276: Improve class initialization barrier in TemplateTable::_new\n\nReviewed-by: dholmes, fparain"},"files":[],"sha":"d8c34c6b64fd3b592137fe86205c8d57f4763b31"},{"commit":{"message":"8322873: Duplicate -ljava -ljvm options for libinstrument\n\nReviewed-by: dholmes, jwaters, erikj"},"files":[],"sha":"0690407ce23ebc66e197a3b884b34f0ab06cad77"},{"commit":{"message":"8322963: ProblemList java\/io\/BufferedInputStream\/TransferTo.java\n\nReviewed-by: bpb"},"files":[],"sha":"1f6e9d7370ab26d5ced5bc4918910247566a3187"},{"commit":{"message":"8322142: JFR: Periodic tasks aren't orphaned between recordings\n\nReviewed-by: egahlin"},"files":[],"sha":"20c815f7fd7adf051523dbc0d062d91958bece80"},{"commit":{"message":"8320707: Virtual thread test updates\n\nReviewed-by: jpai"},"files":[],"sha":"f1daa3cf42484902c6de1118301b3464dfe6c719"},{"commit":{"message":"8322853: Should use ConditionalMutexLocker in NativeHeapTrimmerThread::print_state\n\nReviewed-by: dholmes, shade"},"files":[],"sha":"2275387c55cc89fccf939f43e50a3595f3b3fe73"},{"commit":{"message":"8322779: C1: Remove the unused counter 'totalInstructionNodes'\n\nReviewed-by: kvn, thartmann"},"files":[],"sha":"aa81929bd074881f789d9bb9192b2c5f38baa2d6"},{"commit":{"message":"8322783: prioritize \/etc\/os-release over \/etc\/SuSE-release in hs_err\/info output\n\nReviewed-by: dholmes, mdoerr"},"files":[],"sha":"f6ddecf80ee18457f9d41b03e84b8f7785672c92"},{"commit":{"message":"8321713: Harmonize executeTestJvm with create[Limited]TestJavaProcessBuilder\n\nReviewed-by: lkorinth, lmesnik"},"files":[],"sha":"42ffb114368307713a5229e68c323a5e4f23feb8"},{"commit":{"message":"8322766: Micro bench SSLHandshake should use default algorithms\n\nReviewed-by: djelinski"},"files":[],"sha":"b901437ccbd3ffa263113c61b262ce497a25350c"},{"commit":{"message":"8321718: ProcessTools.executeProcess calls waitFor before logging\n\nReviewed-by: dholmes, jpai"},"files":[],"sha":"54c1142e31522612334186734c6f6c457e2e2d4d"},{"commit":{"message":"8322841: Parallel: Remove unused using-declaration in MutableNUMASpace\n\nReviewed-by: kbarrett"},"files":[],"sha":"c95ef9ddb923c5f34f2f04ce51f0e0401a2b4719"},{"commit":{"message":"8322801: RISC-V: The riscv path of the debian sysroot had been changed\n\nReviewed-by: rehn, erikj"},"files":[],"sha":"ff6ae887be46af3099bd603304498ddd6806c068"},{"commit":{"message":"8322248: Fix inconsistent wording in ElementFilter.typesIn\n\nReviewed-by: jjg, iris"},"files":[],"sha":"26846a206b03657f95713cb1f0dbe4a4586770a6"},{"commit":{"message":"8322805: Eliminate -Wparentheses warnings in x86 code\n\nReviewed-by: dholmes, kvn"},"files":[],"sha":"ff4490607b45b887538adde1689fc1713b35f535"},{"commit":{"message":"8322758: Eliminate -Wparentheses warnings in C2 code\n\nReviewed-by: aph, kvn"},"files":[],"sha":"c87c4c974bacc8099c60708e6f7289c03cda3080"},{"commit":{"message":"8320275: assert(_chunk->bitmap().at(index)) failed: Bit not set at index\n\nReviewed-by: dlong, fparain"},"files":[],"sha":"ed4020f7b6b0114fffe8e8fcbf98c44a3fee859d"},{"commit":{"message":"8322807: Eliminate -Wparentheses warnings in gc code\n\nReviewed-by: ayang"},"files":[],"sha":"1336810ac221193fad5686bcaaaa614b54967217"},{"commit":{"message":"8322868: java\/io\/BufferedInputStream\/TransferToTrusted.java has bad copyright header\n\nReviewed-by: dcubed"},"files":[],"sha":"24262fe54eee94a4c7848ebd315e248d68c201e0"},{"commit":{"message":"8322802: Add testing for ZipFile.getEntry respecting the 'Language encoding' flag\n\nReviewed-by: lancea, jpai"},"files":[],"sha":"a6e7d7e030049cf1e1850b2380e9377e7e9209db"},{"commit":{"message":"8320971: Use BufferedInputStream.buf directly when param of implTransferTo() is trusted\n\nReviewed-by: alanb, bpb"},"files":[],"sha":"a5d1dd3c19b8a701f6d32fd4920b1f9b1dd5ed9c"},{"commit":{"message":"8322503: Shenandoah: Clarify gc state usage\n\nReviewed-by: ysr, gli"},"files":[],"sha":"197fec8c60e3325561ac58cdba3ddbd63f156442"},{"commit":{"message":"8320343: Generate GIF images for AbstractButton\/5049549\/bug5049549.java\n\nReviewed-by: aivanov"},"files":[],"sha":"9244c51ea389e8fca39d10eade499b70b458495b"},{"commit":{"message":"8320360: ClassFile.parse: Some defect class files cause unexpected exceptions to be thrown\n\nReviewed-by: jpai"},"files":[],"sha":"89bfb2887bafcd19843c8f517abf89cafe64e444"},{"commit":{"message":"8321540: ClassSignature.parseFrom() throws StringIndexOutOfBoundsException for invalid signatures\n\nReviewed-by: jpai"},"files":[],"sha":"a08bf93d50adaff5673fdd1bd125a6dcac55e694"},{"commit":{"message":"8322159: ThisEscapeAnalyzer crashes for erroneous code\n\nReviewed-by: vromero"},"files":[],"sha":"183efcb9c5e4767ca6c07df4124563e68ab35574"},{"commit":{"message":"8317846: Typo in API documentation of classes IdentityHashMap\n\nReviewed-by: mli, jpai"},"files":[],"sha":"f00d280284901ec8fc9670136ffb062790520e9d"},{"commit":{"message":"8322751: ZGC: Fix comments about marking roots\n\nReviewed-by: eosterlund"},"files":[],"sha":"e7dbee7d80c3bba6b52828cc510a618c6ee87913"},{"commit":{"message":"8322027: One XMLStreamException constructor fails to initialize cause\n\nReviewed-by: joehw, jpai"},"files":[],"sha":"e4e1f34420e2b7b5d755a5e0702f1a27cad13a7b"},{"commit":{"message":"8297573: Parallel: Rename do_oop_nv to do_oop_work in subclasses of OopClosure\n\nReviewed-by: ayang, gli"},"files":[],"sha":"e6b52c2dcf299c7b4470e95b77e723b1fdffb740"},{"commit":{"message":"8322765: Eliminate -Wparentheses warnings in runtime code\n\nReviewed-by: dholmes"},"files":[],"sha":"0ff295849bdf23b2fc2dfd33b7fa8fe2bf9f2c0e"},{"commit":{"message":"8322747: StringTable should be AllStatic\n\nReviewed-by: eosterlund"},"files":[],"sha":"1d6a434e2ddd1424fbe5ca711c26e9fa40b603f9"},{"commit":{"message":"8322772: Clean up code after JDK-8322417\n\nReviewed-by: mdoerr, goetz, mbaesken, vtewari"},"files":[],"sha":"40eb9ef5704d48d07c80118ae06510aa1ddb3834"},{"commit":{"message":"8318158: RISC-V: implement roundD\/roundF intrinsics\n\nCo-authored-by: Vladimir Kempik <vkempik@openjdk.org>\nReviewed-by: luhenry, fyang, mli"},"files":[],"sha":"f2ab30065738bfb6acc93131cb45f316ae1da157"},{"commit":{"message":"8322734: A redundant return in method padWithLen\n\nReviewed-by: jiefu"},"files":[],"sha":"cd9b20b7af497a551b01e35dc22826df30f4b45e"},{"commit":{"message":"8068958: Timestamp.from(Instant) should throw when conversion is not possible\n\nReviewed-by: rgiulietti, rriggs"},"files":[],"sha":"4c89d4a21046fea2ba2cef8512c1066a05832664"},{"commit":{"message":"8322661: Build broken due to missing jvmtiExport.hpp after JDK-8320139\n\nReviewed-by: chagedorn, never"},"files":[],"sha":"8d254123ce7991936aa98975da5a6e2bbd1c1bb8"},{"commit":{"message":"8322490: cleanup CastNode construction\n\nReviewed-by: chagedorn, phh"},"files":[],"sha":"22897080e7a298fc584e1276ab0cfcf53a38e80a"},{"commit":{"message":"8321151: JDK-8294427 breaks Windows L&F on all older Windows versions\n\nReviewed-by: aivanov, achung"},"files":[],"sha":"bb90561d2d97681db1cd92e624c31f7472c951a3"},{"commit":{"message":"8321802: (zipfs) Add validation of incorrect LOC signature in ZipFileSystem\n\nReviewed-by: alanb, lancea"},"files":[],"sha":"a7314612cedf1df58ab60c39a083a62833aeb78a"},{"commit":{"message":"8322163: runtime\/Unsafe\/InternalErrorTest.java fails on Alpine after JDK-8320886\n\nReviewed-by: mdoerr, clanger"},"files":[],"sha":"fcda349ec133fb1796b3c4e6b277f1d8ea62cc77"},{"commit":{"message":"8321683: Tests fail with AssertionError in RangeWithPageSize\n\nReviewed-by: stuefe, mbaesken"},"files":[],"sha":"ae8e916bfdc0dadf916b82baa56c3aa57cb42a83"},{"commit":{"message":"8322539: Parallel: Remove duplicated methods in PSAdaptiveSizePolicy\n\nReviewed-by: tschatzl, kbarrett"},"files":[],"sha":"09c4967d72346b29e1e424e8387ade17ca82a932"},{"commit":{"message":"8320139: [JVMCI] VmObjectAlloc is not generated by intrinsics methods which allocate objects\n\nReviewed-by: never, dnsimon"},"files":[],"sha":"0592d881dbc46e4760bbe64ad73f48b2c53d69c1"},{"commit":{"message":"8319795: Static huge pages are not used for CodeCache\n\nReviewed-by: shade, simonis, thartmann, stuefe"},"files":[],"sha":"c947637200a2a801bf3391ef5c32854cf48eb4d0"},{"commit":{"message":"8293623: Simplify G1ConcurrentRefineThreadControl\n\nReviewed-by: kbarrett, tschatzl"},"files":[],"sha":"76783acde82a4b4d032bf54c9c3f7d0f4e45cd01"},{"commit":{"message":"8322418: Problem list gc\/TestAllocHumongousFragment.java subtests for 8298781\n\nReviewed-by: mbaesken"},"files":[],"sha":"bb33e186b979337d519060072f0ca9537ce22f58"},{"commit":{"message":"8322538: remove fatal from JVM_VirtualThread functions for !INCLUDE_JVMTI\n\nReviewed-by: dholmes, alanb"},"files":[],"sha":"03ec1f680ca9b4853952ec70e24c608167aeef66"},{"commit":{"message":"8319548: Unexpected internal name for Filler array klass causes error in VisualVM\n\nCo-authored-by: Tomáš Hůrka <tomas.hurka@oracle.com>\nReviewed-by: ayang, dholmes"},"files":[],"sha":"6f5258b4584e87124d8c0522012c6c13e137d688"},{"commit":{"message":"8321972: test runtime\/Unsafe\/InternalErrorTest.java timeout on linux-riscv64 platform\n\nCo-authored-by: Fei Yang <fyang@openjdk.org>\nReviewed-by: fyang"},"files":[],"sha":"988408c2817a57a00074a690ad389f235ac53850"},{"commit":{"message":"8322078: ZipSourceCache.testKeySourceMapping() test fails with The process cannot access the file because it is being used by another process\n\nReviewed-by: lancea"},"files":[],"sha":"588f4a13e7844f2646434e8198479c59e8c66911"},{"commit":{"message":"Include a test case demonstrating how a ZipException is thrown when a Zip64 entry has an (incorrect) 4-byte Data Descriptor."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"c71f9ba433b469baffd8a937e48f8b4a6151c897"},{"commit":{"message":"Remove extra whitespace\n\nCo-authored-by: Andrey Turbanov <turbanoff@gmail.com>"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"cfd53910e9c0ec774d8cda0602bc0a75f659f4f8"},{"commit":{"message":"Remove extra whitespace\n\nCo-authored-by: Andrey Turbanov <turbanoff@gmail.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"1aedf3e52f0173a62dd772f02d516c6fcba37d10"},{"commit":{"message":"Remove trailing whitespace"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"91fbcce59478490353c8050f0f0d8c584d9a2201"},{"commit":{"message":"Remove trailing whitespace"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"dad2ad3af9ad83837afe55700c8e1a7182fdc1dd"},{"commit":{"message":"Minor tweaks to improve comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"8a44feb5e48bd52bc678bb10d7e97ef65e43fb10"},{"commit":{"message":"Tighten 64-bit data descriptor checking by requiring that the LOC's 'compressed size' and 'uncompressed size' fields must both be 0xFFFFFFFF and that the Zip64 field must have both 'Original Size' and 'Compressed' size fields present and set to zero."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"},{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"6eec86b2d4f225df63a6168a2609e0ed0d0cd322"},{"commit":{"message":"Add test verifying that the data descriptor is read with 32-bit values if neither the 'compressed size' or 'uncompressed size' are set to the Zip64 magic marker value."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"6abd38a06fdfc8f44c996e6ffa4da4f9a8fc5357"},{"commit":{"message":"Rename hasZip64Extra to expect64BitDataDescriptor, make it return false if the LOC is not in streaming mode, if none of the LOC size fields have the Zip64 magic value set, or if the Zip64 data block size does not match the size computed from looking for markers in the LOC fields."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"5a4cb2c873ccf340537f6380de0dfd88499c5b0e"},{"commit":{"message":"Move the call to hasZip64Extra from readEND to readLOC"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"3f57327f5a111e3c2a78252c7d8de1f483e81b2c"},{"commit":{"message":"Add a test verifying that a truncated Zip64 field (one with less than 4 bytes) is ignored and does not cause a ArrayIndexOutOfBoundsException."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"ddd46d85f6df1a1970aabdf7f182c5aca4737341"},{"commit":{"message":"When verifying that invalid Zip64 fields are ignored, use a separate ZIP with regular 4-bit data descriptors."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"46056992bd0363a3d5dffced0e5eecd03115affe"},{"commit":{"message":"Avoid ArrayIndexOutOfBoundsException in the case were the LOC extra field ends with a truncated Zip64 field"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"22ed86fe710ed52ead2c9c2db34de134b3586f28"},{"commit":{"message":"Move hasZip64Extra(e) to the end of the 4\/8-byte data descriptor check"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"900c5b196a649c4a90582ac88c8ba6c423055856"},{"commit":{"message":"hasZip64 does not throw IOException"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"17e0be3bc6a5bb05e405ac75f030d43b06561dbb"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"ddff130fc5b33e7ca5935c8f1e42cc472a8f72c2"},{"commit":{"message":"Extract ZIP64_BLOCK_SIZE_OFFSET as a constant"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"b6d0a0efde777f2e6429932c5f6ccb76c916edb8"},{"commit":{"message":"A Zip64 extra field used in a LOC header must include both the uncompressed and compressed size fields, and does not include local header offset or disk start number fields. Conequently, a valid LOC Zip64 block must always be 16 bytes long."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"a77147bc61bc9a6caf26ab352d93c4f5668df981"},{"commit":{"message":"Document better the zip command and options used to generate the test vector ZIP"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"19797f38aa285d813677a007ee2e86bfe892d008"},{"commit":{"message":"Fix spelling of \"presence\""},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"17f8a27a3102b32363060b070a48484b6e158b38"},{"commit":{"message":"Add a @bug reference in the test"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"7601b8dd1ca6a7bff074670ec98d739d83cfb994"},{"commit":{"message":"Use the term \"block size\" when referring to the size of a Zip64 extra field data block"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"01e26a4fab6476a566e05dea0b093446cfe35a28"},{"commit":{"message":"Update comment reflect that a Zip64 extended field in a LOC header has only two valid block sizes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"bf0a745e93d110f31c303443b3f51cedbac56b43"},{"commit":{"message":"Convert test from testNG to JUnit"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"657f961ed0c2d99698bf260290638535f4b2b705"},{"commit":{"message":"Fix the check that the size of an extra field block size must not grow past the total extra field length"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"534373dc448da11279f4759fbf822242168e364b"},{"commit":{"message":"Move isZip64ExtBlockSizeValid back into ZipInputStream, since it is different from the ZipFile implementation which reads the LOC"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"7eb6b77f6d0529be240ea29e90b48f15c67b4e2f"},{"commit":{"message":"Merge branch 'master' into data-descriptor\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"},"files":[],"sha":"0cbca78d6d2aa1bda166a772a836285d14ea392b"},{"commit":{"message":"Remove excessive comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"fad0da2e6b952d47537c91687f2c0fdb002a36e5"},{"commit":{"message":"Move isZip64ExtBlockSizeValid to ZipUtils, use it from ZipInputStream and ZipFile.Source"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"2d7d3787df299007865ea594d76d9844ec783807"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[],"sha":"2f36679afc5a147f803a1f6b7023c606b2743110"},{"commit":{"message":"Use block comments instead of javadoc comments to avoid doclint warnings"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"01216ef75906f88aa4b574deed20f8511499aeb5"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[],"sha":"0633c8079be981394784990ee50f95fa3633048d"},{"commit":{"message":"Zip64 extra field of a LOC header has 1-3 long components"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"b9e0a483690fbd129cb0312b53b0a2b5f738ed27"},{"commit":{"message":"Clarify comment for shouldIgnoreExcessiveExtraSize"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"e162ee0181535d6c69ba1edc7ef1de389b3059bc"},{"commit":{"message":"Update test to use a Zip64 file produced using the zip command with the -fd flag"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"45d34ce6075c31f837f188202dcdd743c3dcda76"},{"commit":{"message":"Add comment to explaining the setExtraSize and readZipInputStream methods and the zip64File field."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"5a9576e2f90a8548a1d2e4603c2a1e0a82965d14"},{"commit":{"message":"Add comment to the call site of hasZip64 extra"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"e2ca1509babf0768a490e19f7c805cbb676b1e2b"},{"commit":{"message":"Improve the documentation of ZipInputStream.hasZip64Extra, explaining how the method is used and adding a reference to the APPNOTE.txt specification."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"a1937caa1cea27d09be616d938f0a1ac42376512"},{"commit":{"message":"Make (2 * Short.BYTES) less magic my extracting a variable with a comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"dbb349d1c6b687e0c464806f63c8412b6be2e3df"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[],"sha":"e8bf14263041731b5439183ce8bb3d97a07b7661"},{"commit":{"message":"Validate that the Zip64 extra field is right sized (8, 16, 24 or 28 bytes). Add tests for excessive and invalid extra data sizes."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"},{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"05a3d700a15b26dd678f246a369deb5aaa4ba07c"},{"commit":{"message":"Merge branch 'master' into data-descriptor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"9d9927f2ec975271bd3236bf0d44734bf6c7a649"},{"commit":{"message":"Further reduce the impact of this change by augmenting instead of replacing the existing check"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"3f72e264017b6947d08da876f6af72a904be7d21"},{"commit":{"message":"Revert refactoring in ZipInputStream.readEnd, leaving only the change to check for precense of a Zip64 header. Also revert the support for CRC == SIGEXT, including the test."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"719b7db5b93328d3c3e69d1a72c08b2fd702cbb9"},{"commit":{"message":"Break loop in case of invalid extra field data size"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"9bf0a73614b2f09b8fb6e42883675d4cdc707a7e"},{"commit":{"message":"Spellfix in comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"e6eead686cb9f0c707af26ce0236af8e860e19b3"},{"commit":{"message":"Update copyright year"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"a652c59364400a98ab22f08f1e6c13fb0a582c89"},{"commit":{"message":"Fix ZipInputStream.readEnd to correctly identify ZIP64 data descriptor. Also update readEnd to correctly distinguish a CRC of 0x08074b50 from SIGEXT which has the same value."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"},{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"6b5befcdb058df0c7f1c5328cfcd1de4ee1dcceb"}]