[{"commit":{"message":"Minor tweaks to improve comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"8a44feb5e48bd52bc678bb10d7e97ef65e43fb10"},{"commit":{"message":"Tighten 64-bit data descriptor checking by requiring that the LOC's 'compressed size' and 'uncompressed size' fields must both be 0xFFFFFFFF and that the Zip64 field must have both 'Original Size' and 'Compressed' size fields present and set to zero."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"},{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"6eec86b2d4f225df63a6168a2609e0ed0d0cd322"},{"commit":{"message":"Add test verifying that the data descriptor is read with 32-bit values if neither the 'compressed size' or 'uncompressed size' are set to the Zip64 magic marker value."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"6abd38a06fdfc8f44c996e6ffa4da4f9a8fc5357"},{"commit":{"message":"Rename hasZip64Extra to expect64BitDataDescriptor, make it return false if the LOC is not in streaming mode, if none of the LOC size fields have the Zip64 magic value set, or if the Zip64 data block size does not match the size computed from looking for markers in the LOC fields."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"5a4cb2c873ccf340537f6380de0dfd88499c5b0e"},{"commit":{"message":"Move the call to hasZip64Extra from readEND to readLOC"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"3f57327f5a111e3c2a78252c7d8de1f483e81b2c"},{"commit":{"message":"Add a test verifying that a truncated Zip64 field (one with less than 4 bytes) is ignored and does not cause a ArrayIndexOutOfBoundsException."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"ddd46d85f6df1a1970aabdf7f182c5aca4737341"},{"commit":{"message":"When verifying that invalid Zip64 fields are ignored, use a separate ZIP with regular 4-bit data descriptors."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java"}],"sha":"46056992bd0363a3d5dffced0e5eecd03115affe"},{"commit":{"message":"Avoid ArrayIndexOutOfBoundsException in the case were the LOC extra field ends with a truncated Zip64 field"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java"}],"sha":"22ed86fe710ed52ead2c9c2db34de134b3586f28"}]