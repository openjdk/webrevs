{"files":[{"patch":"@@ -681,0 +681,4 @@\n+     *\n+     * This entry in the Local header MUST include BOTH original\n+     * and compressed file size fields.\n+     *\n@@ -684,1 +688,1 @@\n-     * @return true if the extra block size is valid; false otherwise\n+     * @return true if the extra block size is valid in a LOC header; false otherwise\n@@ -687,4 +691,2 @@\n-        return switch (blockSize) {\n-            case 8, 16 -> true;\n-            default -> false;\n-        };\n+        \/\/ Uncompressed and compressed size fields are 8 bytes each\n+        return blockSize == 16;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-         * Structure of the ZIP64 file used below . Note the precense\n+         * Structure of the ZIP64 file used below . Note the presence\n@@ -61,1 +61,5 @@\n-         * The file was produced using the following command:\n+         * The file was produced using the zip command on MacOS\n+         * (zip 3.0, by Info-ZIP), in streamming mode (to enable Zip64),\n+         * using the -fd option (to force the use of data descriptors)\n+         *\n+         * The following command was used:\n","filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/Zip64DataDescriptor.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}