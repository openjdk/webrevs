{"files":[{"patch":"@@ -2053,0 +2053,2 @@\n+  assert_different_registers(prod_lo, prod_hi);\n+\n@@ -2058,0 +2060,3 @@\n+  assert_different_registers(sum_lo, sum_hi);\n+  assert_different_registers(sum_hi, tmp2);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4419,0 +4419,2 @@\n+static const int64_t bits2 = right_n_bits(2);\n+\n@@ -4467,0 +4469,12 @@\n+  \/\/ U_2:U_1:U_0: += (U_2 >> 2) * 5\n+  void reduce(Register U_2, Register U_1, Register U_0, Register tmp1, Register tmp2) {\n+    assert_different_registers(U_2, U_1, U_0, tmp1, tmp2);\n+\n+    __ srli(tmp1, U_2, 2);\n+    __ shadd(tmp1, tmp1, tmp1, tmp2, 2); \/\/ tmp1 is impossible to overflow since two leftmost bits are zero'ed in 'srli(tmp1, U_2, 2)'\n+    __ cad(U_0, U_0, tmp1, tmp2); \/\/ Add tmp1 (= (U_2 >> 2) * 5) to U_0 with carry output to tmp2\n+    __ cad(U_1, U_1, tmp2, tmp2); \/\/ Add carry to U_1 with carry output to tmp2\n+    __ andi(U_2, U_2, bits2); \/\/ Clear U_2 except for the first two bits\n+    __ add(U_2, U_2, tmp2);\n+  }\n+\n@@ -4486,1 +4500,0 @@\n-    const int64_t bits2 = right_n_bits(2);\n@@ -4548,3 +4561,0 @@\n-      \/\/ Recycle registers S_0, S_1, S_2\n-      regs = (regs.remaining() + S_0 + S_1 + S_2).begin();\n-\n@@ -4554,3 +4564,1 @@\n-      \/\/ Sum now in U_2:U_1:U_0.\n-      \/\/ Dead: U_0HI, U_1HI.\n-      regs = (regs.remaining() + U_0HI + U_1HI).begin();\n+      \/\/ Sum is now in U_2:U_1:U_0.\n@@ -4559,6 +4567,1 @@\n-      __ srli(t1, U_2, 2);\n-      __ andi(U_2, U_2, bits2); \/\/ Clear U_2 except for the first two bits\n-      __ shadd(t1, t1, t1, t2, 2); \/\/ t1 is impossible to overflow since two leftmost bits are zero'ed in 'srli(t1, U_2, 2)'\n-      __ cad(U_0, U_0, t1, t2); \/\/ Add t1 (= (U_2 >> 2) * 5) to U_0 with carry output to t2\n-      __ cad(U_1, U_1, t2, t2); \/\/ Add carry to U_1 with carry output to t2\n-      __ add(U_2, U_2, t2);\n+      reduce(U_2, U_1, U_0, t1, t2);\n@@ -4573,6 +4576,1 @@\n-    __ srli(t1, U_2, 2);\n-    __ shadd(t1, t1, t1, t2, 2); \/\/ t1 = U_2 * 5\n-    __ cad(U_0, U_0, t1, t2); \/\/ U_0 += U_2 * 5 with carry output to t2\n-    __ cad(U_1, U_1, t2, t2); \/\/ Add carry to U_1 with carry output to t2\n-    __ andi(U_2, U_2, bits2);\n-    __ add(U_2, U_2, t2); \/\/ Add carry to U_2\n+    reduce(U_2, U_1, U_0, t1, t2);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"}]}