{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,2 @@\n-    \/\/ default polling interval in seconds\n-    private static final int DEFAULT_POLLING_INTERVAL = 2;\n+    \/\/ polling interval in seconds\n+    private static final int POLLING_INTERVAL = 2;\n@@ -121,2 +121,1 @@\n-        \/\/ Extended modifiers may be used to specify the sensitivity level\n-        int sensitivity = DEFAULT_POLLING_INTERVAL;\n+        \/\/ no modifiers supported at this time\n@@ -126,8 +125,3 @@\n-\n-            if (ExtendedOptions.SENSITIVITY_HIGH.matches(modifier)) {\n-                sensitivity = ExtendedOptions.SENSITIVITY_HIGH.parameter();\n-            } else if (ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier)) {\n-                sensitivity = ExtendedOptions.SENSITIVITY_MEDIUM.parameter();\n-            } else if (ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                sensitivity = ExtendedOptions.SENSITIVITY_LOW.parameter();\n-            } else {\n+            if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n+                !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n+                !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n@@ -145,1 +139,0 @@\n-            int value = sensitivity;\n@@ -150,1 +143,1 @@\n-                        return doPrivilegedRegister(path, eventSet, value);\n+                        return doPrivilegedRegister(path, eventSet);\n@@ -164,2 +157,1 @@\n-                                                 Set<? extends WatchEvent.Kind<?>> events,\n-                                                 int sensitivityInSeconds)\n+                                                 Set<? extends WatchEvent.Kind<?>> events)\n@@ -194,1 +186,1 @@\n-            watchKey.enable(events, sensitivityInSeconds);\n+            watchKey.enable(events);\n@@ -303,2 +295,2 @@\n-        \/\/ enables periodic polling\n-        void enable(Set<? extends WatchEvent.Kind<?>> events, long period) {\n+        \/\/ enables periodic polling with interval POLLING_INTERVAL\n+        void enable(Set<? extends WatchEvent.Kind<?>> events) {\n@@ -312,1 +304,2 @@\n-                    .scheduleAtFixedRate(thunk, period, period, TimeUnit.SECONDS);\n+                    .scheduleAtFixedRate(thunk, POLLING_INTERVAL,\n+                                         POLLING_INTERVAL, TimeUnit.SECONDS);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/PollingWatchService.java","additions":14,"deletions":21,"binary":false,"changes":35,"status":"modified"}]}