{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,0 +174,4 @@\n+        AbstractButton b = (AbstractButton) c;\n+        if (!(b.getFont().equals(g.getFont()))) {\n+            b.setFont(g.getFont());\n+        }\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsButtonUI.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6734168\n+ * @requires (os.family == \"windows\")\n+ * @summary Verifies if BasicButtonUI uses wrong FontMetrics to Layout JButtons text\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestButtonFontMetrics\n+ *\/\n+\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ConvolveOp;\n+import java.awt.image.Kernel;\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.WindowConstants;\n+\n+public class TestButtonFontMetrics extends JButton {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        A frame will be shown with a button with text \"Test\";\n+        Click on the button.\n+        If the text on the button truncates,\n+        then test fails else test passes.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"TestButtonFontMetrics Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TestButtonFontMetrics::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public TestButtonFontMetrics(String text) {\n+        super(text);\n+    }\n+\n+    @Override\n+    public void paintComponent(Graphics g) {\n+        if (isEnabled()) {\n+            super.paintComponent(g);\n+            return;\n+        }\n+        Graphics2D g2 = (Graphics2D) g.create();\n+        BufferedImage image = new BufferedImage(getWidth(), getHeight(),\n+                                BufferedImage.TYPE_INT_RGB);\n+        Graphics imgGraphics = image.getGraphics();\n+\n+        super.paintComponent(imgGraphics);\n+        float[] kernel = { 0.1f, 0.1f, 0.1f, 0.1f, 0.2f, 0.1f, 0.1f, 0.1f, 0.1f };\n+        ConvolveOp op = new ConvolveOp(new Kernel(3, 3, kernel),\n+                                       ConvolveOp.EDGE_NO_OP, null);\n+        image = op.filter(image, null);\n+        g2.drawImage(image, 0, 0, null);\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"TestButtonFontMetrics\");\n+        frame.setLayout(new GridBagLayout());\n+        frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        TestButtonFontMetrics button = new TestButtonFontMetrics(\"Test\");\n+        button.addActionListener(new DisableListener());\n+        frame.add(button, new GridBagConstraints(0, 0, 1, 1, 0, 0,\n+             GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(\n+                  10, 10, 0, 10), 0, 0));\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    static class DisableListener implements ActionListener {\n+        public void actionPerformed(ActionEvent e) {\n+            ((JComponent) e.getSource()).setEnabled(false);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/TestButtonFontMetrics.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}