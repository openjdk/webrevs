{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-        err_msg(\"Java heap too large (max supported heap size is \" SIZE_FORMAT \"G)\",\n+        err_msg(\"Java heap too large (max supported heap size is %zuG)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-                                          SIZE_FORMAT \"M large pages are supported by ZGC\",\n+                                          \"%zuM large pages are supported by ZGC\",\n","filename":"src\/hotspot\/share\/gc\/z\/zArguments.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -366,1 +366,1 @@\n-  st->print_cr(\" Offset Max:         \" SIZE_FORMAT \"%s (\" PTR_FORMAT \")\",\n+  st->print_cr(\" Offset Max:         %zu%s (\" PTR_FORMAT \")\",\n@@ -370,2 +370,2 @@\n-  st->print_cr(\" Page Size Small:    \" SIZE_FORMAT \"M\", ZPageSizeSmall \/ M);\n-  st->print_cr(\" Page Size Medium:   \" SIZE_FORMAT \"M\", ZPageSizeMedium \/ M);\n+  st->print_cr(\" Page Size Small:    %zuM\", ZPageSizeSmall \/ M);\n+  st->print_cr(\" Page Size Medium:   %zuM\", ZPageSizeMedium \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-                          \"MaxAllocRate: %.1fMB\/s (+\/-%.1f%%), Free: \" SIZE_FORMAT \"MB, GCCPUTime: %.3f, \"\n+                          \"MaxAllocRate: %.1fMB\/s (+\/-%.1f%%), Free: %zuMB, GCCPUTime: %.3f, \"\n@@ -291,1 +291,1 @@\n-  log_debug(gc, director)(\"Rule Minor: Allocation Rate (Static GC Workers), MaxAllocRate: %.1fMB\/s, Free: \" SIZE_FORMAT \"MB, GCDuration: %.3fs, TimeUntilGC: %.3fs\",\n+  log_debug(gc, director)(\"Rule Minor: Allocation Rate (Static GC Workers), MaxAllocRate: %.1fMB\/s, Free: %zuMB, GCDuration: %.3fs, TimeUntilGC: %.3fs\",\n@@ -389,1 +389,1 @@\n-    log_debug(gc, director)(\"Rule Minor: High Usage, Free: \" SIZE_FORMAT \"MB(%.1f%%)\",\n+    log_debug(gc, director)(\"Rule Minor: High Usage, Free: %zuMB(%.1f%%)\",\n@@ -433,1 +433,1 @@\n-  log_debug(gc, director)(\"Rule Major: Warmup %.0f%%, Used: \" SIZE_FORMAT \"MB, UsedThreshold: \" SIZE_FORMAT \"MB\",\n+  log_debug(gc, director)(\"Rule Major: Warmup %.0f%%, Used: %zuMB, UsedThreshold: %zuMB\",\n@@ -596,1 +596,1 @@\n-    log_debug(gc, director)(\"Rule Major: Proactive, UsedUntilEnabled: \" SIZE_FORMAT \"MB, TimeUntilEnabled: %.3fs\",\n+    log_debug(gc, director)(\"Rule Major: Proactive, UsedUntilEnabled: %zuMB, TimeUntilEnabled: %.3fs\",\n","filename":"src\/hotspot\/share\/gc\/z\/zDirector.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,1 +364,1 @@\n-  assert(index < ARRAY_SIZE(str), \"OOB: \" SIZE_FORMAT \" < \" SIZE_FORMAT, index, ARRAY_SIZE(str));\n+  assert(index < ARRAY_SIZE(str), \"OOB: %zu < %zu\", index, ARRAY_SIZE(str));\n@@ -799,2 +799,2 @@\n-  log_trace(gc, reloc)(\"Young Allocated: \" SIZE_FORMAT \"M\", young_allocated \/ M);\n-  log_trace(gc, reloc)(\"Young Garbage: \" SIZE_FORMAT \"M\", young_garbage \/ M);\n+  log_trace(gc, reloc)(\"Young Allocated: %zuM\", young_allocated \/ M);\n+  log_trace(gc, reloc)(\"Young Garbage: %zuM\", young_garbage \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-    ZInitialize::error(\"Failed to allocate initial Java heap (\" SIZE_FORMAT \"M)\", InitialHeapSize \/ M);\n+    ZInitialize::error(\"Failed to allocate initial Java heap (%zuM)\", InitialHeapSize \/ M);\n@@ -241,1 +241,1 @@\n-  log_trace(gc)(\"Undo page allocation, thread: \" PTR_FORMAT \" (%s), page: \" PTR_FORMAT \", size: \" SIZE_FORMAT,\n+  log_trace(gc)(\"Undo page allocation, thread: \" PTR_FORMAT \" (%s), page: \" PTR_FORMAT \", size: %zu\",\n@@ -323,1 +323,1 @@\n-  st->print_cr(\" ZHeap           used \" SIZE_FORMAT \"M, capacity \" SIZE_FORMAT \"M, max capacity \" SIZE_FORMAT \"M\",\n+  st->print_cr(\" ZHeap           used %zuM, capacity %zuM, max capacity %zuM\",\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -277,1 +277,1 @@\n-    tty->print_cr(\"ZIndexDistributorClaimTree count: %d byte size: \" SIZE_FORMAT, count, claim_variables_size() + os::vm_page_size());\n+    tty->print_cr(\"ZIndexDistributorClaimTree count: %d byte size: %zu\", count, claim_variables_size() + os::vm_page_size());\n","filename":"src\/hotspot\/share\/gc\/z\/zIndexDistributor.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        log_trace(gc)(\"Mark segment reset contention, thread: \" PTR_FORMAT \" (%s), map: \" PTR_FORMAT \", segment: \" SIZE_FORMAT,\n+        log_trace(gc)(\"Mark segment reset contention, thread: \" PTR_FORMAT \" (%s), map: \" PTR_FORMAT \", segment: %zu\",\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,1 +138,1 @@\n-      log.print(\"  Worker %u(%u) -> Stripe \" SIZE_FORMAT \"(\" SIZE_FORMAT \")\",\n+      log.print(\"  Worker %u(%u) -> Stripe %zu(%zu)\",\n@@ -197,1 +197,1 @@\n-  log_develop_trace(gc, marking)(\"Array push partial: \" PTR_FORMAT \" (\" SIZE_FORMAT \"), stripe: \" SIZE_FORMAT,\n+  log_develop_trace(gc, marking)(\"Array push partial: \" PTR_FORMAT \" (%zu), stripe: %zu\",\n@@ -216,1 +216,1 @@\n-  log_develop_trace(gc, marking)(\"Array follow small: \" PTR_FORMAT \" (\" SIZE_FORMAT \")\", p2i(addr), length);\n+  log_develop_trace(gc, marking)(\"Array follow small: \" PTR_FORMAT \" (%zu)\", p2i(addr), length);\n@@ -235,2 +235,2 @@\n-  log_develop_trace(gc, marking)(\"Array follow large: \" PTR_FORMAT \"-\" PTR_FORMAT\" (\" SIZE_FORMAT \"), \"\n-                                 \"middle: \" PTR_FORMAT \"-\" PTR_FORMAT \" (\" SIZE_FORMAT \")\",\n+  log_develop_trace(gc, marking)(\"Array follow large: \" PTR_FORMAT \"-\" PTR_FORMAT\" (%zu), \"\n+                                 \"middle: \" PTR_FORMAT \"-\" PTR_FORMAT \" (%zu)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-  log_debug(gc, marking)(\"Using \" SIZE_FORMAT \" mark stripes\", nstripes);\n+  log_debug(gc, marking)(\"Using %zu mark stripes\", nstripes);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStack.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-          \"maximum number of bytes allocated for mark stacks. Current limit is \" SIZE_FORMAT \"M.\",\n+          \"maximum number of bytes allocated for mark stacks. Current limit is %zuM.\",\n@@ -86,1 +86,1 @@\n-  log_debug(gc, marking)(\"Expanding mark stack space: \" SIZE_FORMAT \"M->\" SIZE_FORMAT \"M\",\n+  log_debug(gc, marking)(\"Expanding mark stack space: %zuM->%zuM\",\n@@ -103,1 +103,1 @@\n-    log_debug(gc, marking)(\"Shrinking mark stack space: \" SIZE_FORMAT \"M->\" SIZE_FORMAT \"M\",\n+    log_debug(gc, marking)(\"Shrinking mark stack space: %zuM->%zuM\",\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,3 +113,3 @@\n-                         SIZE_FORMAT \"->\" SIZE_FORMAT \" entries, \"\n-                         SIZE_FORMAT \"(%.0f%%->%.0f%%) registered, \"\n-                         SIZE_FORMAT \"(%.0f%%->%.0f%%) unregistered\",\n+                         \"%zu->%zu entries, \"\n+                         \"%zu(%.0f%%->%.0f%%) registered, \"\n+                         \"%zu(%.0f%%->%.0f%%) unregistered\",\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethodTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,4 +210,4 @@\n-  log_info_p(gc, init)(\"Min Capacity: \" SIZE_FORMAT \"M\", min_capacity \/ M);\n-  log_info_p(gc, init)(\"Initial Capacity: \" SIZE_FORMAT \"M\", initial_capacity \/ M);\n-  log_info_p(gc, init)(\"Max Capacity: \" SIZE_FORMAT \"M\", max_capacity \/ M);\n-  log_info_p(gc, init)(\"Soft Max Capacity: \" SIZE_FORMAT \"M\", soft_max_capacity \/ M);\n+  log_info_p(gc, init)(\"Min Capacity: %zuM\", min_capacity \/ M);\n+  log_info_p(gc, init)(\"Initial Capacity: %zuM\", initial_capacity \/ M);\n+  log_info_p(gc, init)(\"Max Capacity: %zuM\", max_capacity \/ M);\n+  log_info_p(gc, init)(\"Soft Max Capacity: %zuM\", soft_max_capacity \/ M);\n@@ -215,1 +215,1 @@\n-    log_info_p(gc, init)(\"Medium Page Size: \" SIZE_FORMAT \"M\", ZPageSizeMedium \/ M);\n+    log_info_p(gc, init)(\"Medium Page Size: %zuM\", ZPageSizeMedium \/ M);\n@@ -380,1 +380,1 @@\n-                    SIZE_FORMAT \"M(%.0f%%) to \" SIZE_FORMAT \"M(%.0f%%)\",\n+                    \"%zuM(%.0f%%) to %zuM(%.0f%%)\",\n@@ -653,1 +653,1 @@\n-    log_debug(gc, heap)(\"Page Cache Flushed: \" SIZE_FORMAT \"M\", flushed \/ M);\n+    log_debug(gc, heap)(\"Page Cache Flushed: %zuM\", flushed \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-                         \"%.1f%% relative defragmentation, \" SIZE_FORMAT \" forwarding entries, %s, live %d\",\n+                         \"%.1f%% relative defragmentation, %zu forwarding entries, %s, live %d\",\n@@ -178,1 +178,1 @@\n-  log_debug(gc, reloc)(\"Relocation Set (%s Pages): %d->%d, %d skipped, \" SIZE_FORMAT \" forwarding entries\",\n+  log_debug(gc, reloc)(\"Relocation Set (%s Pages): %d->%d, %d skipped, %zu forwarding entries\",\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSetSelector.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,1 +209,1 @@\n-  _page->log_msg(\" (remembered iter count: \" SIZE_FORMAT \" skipped: \" SIZE_FORMAT \")\", _count, _count_skipped);\n+  _page->log_msg(\" (remembered iter count: %zu skipped: %zu)\", _count, _count_skipped);\n","filename":"src\/hotspot\/share\/gc\/z\/zRememberedSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-#define ZSIZE_FMT                       SIZE_FORMAT \"M(%.0f%%)\"\n+#define ZSIZE_FMT                       \"%zuM(%.0f%%)\"\n@@ -56,1 +56,1 @@\n-#define ZTABLE_ARGS(size)               SIZE_FORMAT_W(8) \"M (%.0f%%)\", \\\n+#define ZTABLE_ARGS(size)               \"%8zuM (%.0f%%)\", \\\n@@ -1451,5 +1451,5 @@\n-                        SIZE_FORMAT \" stripe(s), \"\n-                        SIZE_FORMAT \" proactive flush(es), \"\n-                        SIZE_FORMAT \" terminate flush(es), \"\n-                        SIZE_FORMAT \" completion(s), \"\n-                        SIZE_FORMAT \" continuation(s) \",\n+                        \"%zu stripe(s), \"\n+                        \"%zu proactive flush(es), \"\n+                        \"%zu terminate flush(es), \"\n+                        \"%zu completion(s), \"\n+                        \"%zu continuation(s) \",\n@@ -1462,1 +1462,1 @@\n-  log_info(gc, marking)(\"Mark Stack Usage: \" SIZE_FORMAT \"M\", _mark_stack_usage \/ M);\n+  log_info(gc, marking)(\"Mark Stack Usage: %zuM\", _mark_stack_usage \/ M);\n@@ -1547,1 +1547,1 @@\n-  lt.print(\"Forwarding Usage: \" SIZE_FORMAT \"M\", _forwarding_usage \/ M);\n+  lt.print(\"Forwarding Usage: %zuM\", _forwarding_usage \/ M);\n@@ -1613,1 +1613,1 @@\n-              .left(SIZE_FORMAT_W(7) \" \/ \" SIZE_FORMAT,\n+              .left(\"%7zu \/ %zu\",\n@@ -1616,1 +1616,1 @@\n-              .left(SIZE_FORMAT_W(7) \" \/ \" SIZE_FORMAT,\n+              .left(\"%7zu \/ %zu\",\n@@ -1619,1 +1619,1 @@\n-              .left(SIZE_FORMAT_W(7) \" \/ \" SIZE_FORMAT,\n+              .left(\"%7zu \/ %zu\",\n@@ -1630,1 +1630,1 @@\n-  log_info(gc, nmethod)(\"NMethods: \" SIZE_FORMAT \" registered, \" SIZE_FORMAT \" unregistered\",\n+  log_info(gc, nmethod)(\"NMethods: %zu registered, %zu unregistered\",\n@@ -1641,2 +1641,2 @@\n-                          SIZE_FORMAT \"M used, \"\n-                          SIZE_FORMAT \"M committed, \" SIZE_FORMAT \"M reserved\",\n+                          \"%zuM used, \"\n+                          \"%zuM committed, %zuM reserved\",\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-      log_info(gc, heap)(\"Uncommitted: \" SIZE_FORMAT \"M(%.0f%%)\",\n+      log_info(gc, heap)(\"Uncommitted: %zuM(%.0f%%)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zUncommitter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    log_debug(gc, unmap)(\"Synchronous unmapping \" SIZE_FORMAT \"M page\", page->size() \/ M);\n+    log_debug(gc, unmap)(\"Synchronous unmapping %zuM page\", page->size() \/ M);\n@@ -77,1 +77,1 @@\n-  log_trace(gc, unmap)(\"Asynchronous unmapping \" SIZE_FORMAT \"M page (\" SIZE_FORMAT \"M \/ \" SIZE_FORMAT \"M enqueued)\",\n+  log_trace(gc, unmap)(\"Asynchronous unmapping %zuM page (%zuM \/ %zuM enqueued)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zUnmapper.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-  assert(is_aligned(size, ZGranuleSize), \"Must be granule aligned \" SIZE_FORMAT_X, size);\n+  assert(is_aligned(size, ZGranuleSize), \"Must be granule aligned 0x%zx\", size);\n@@ -204,1 +204,1 @@\n-  log_info_p(gc, init)(\"Address Space Size: \" SIZE_FORMAT \"M\", reserved \/ M);\n+  log_info_p(gc, init)(\"Address Space Size: %zuM\", reserved \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zVirtualMemory.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}