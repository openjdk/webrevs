{"files":[{"patch":"@@ -73,0 +73,11 @@\n+    \/**\n+     * Use in sendResponseHeaders() to signify no content in the response.\n+     * @see #sendResponseHeaders(int, long)\n+     *  *\/\n+    public static final long NO_CONTENT = -1L;\n+    \/**\n+     * use in sendResponseHeaders() to signify an indeterminate response length. The caller must\n+     * close the getResponseBody() or this exchange.\n+     * @see #sendResponseHeaders(int, long)\n+     *  *\/\n+    public static final long CHUNKED_CONTENT = 0L;\n@@ -202,0 +213,2 @@\n+     * @see   HttpExchange#CHUNKED_CONTENT\n+     * @see   HttpExchange#NO_CONTENT\n@@ -205,0 +218,38 @@\n+    \/**\n+     * Convenience method to send the response headers with no response body.\n+     * The exchange is also closed.\n+     * @param code the response code to send\n+     * @throws IOException if the response headers have already been sent or an I\/O error occurs\n+     * @see HttpExchange#sendResponseHeaders(int, long)\n+     *\/\n+    public final void sendResponseHeadersNoContent(int code) throws IOException {\n+        sendResponseHeaders(code, NO_CONTENT);\n+        close();\n+    }\n+    \/**\n+     * Convenience method to send a chunked response. The caller must write the response\n+     * body to the returned output stream and then close it.\n+     * @param code the response code to send\n+     * @throws IOException if the response headers have already been sent or an I\/O error occurs\n+     * @return the stream to write the response to. the caller must close the stream.\n+     * @see HttpExchange#sendResponseHeaders(int, long)\n+     *\/\n+    public final OutputStream sendResponseHeadersChunked(int code) throws IOException {\n+        sendResponseHeaders(code,CHUNKED_CONTENT);\n+        return getResponseBody();\n+    }\n+    \/**\n+     * convenience method to send a fixed length response. the output stream is automatically closed and no\n+     * further writes are permitted.\n+     * @param code the response code to send\n+     * @param data the data to send\n+     * @throws IOException if the response headers have already been sent or an I\/O error occurs\n+     * @see HttpExchange#sendResponseHeaders(int, long)\n+     *\/\n+    public final void sendResponseHeaders(int code,byte[] data) throws IOException {\n+        sendResponseHeaders(code,data.length);\n+        try (var os = getResponseBody()) {\n+            os.write(data);\n+        }\n+    }\n+\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpExchange.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"modified"}]}