{"files":[{"patch":"@@ -321,1 +321,1 @@\n-    _snprintf(msg, sizeof(msg), \"%d\\n\", result);\n+    snprintf(msg, sizeof(msg), \"%d\\n\", result);\n","filename":"src\/hotspot\/os\/windows\/attachListener_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1779,1 +1779,1 @@\n-    ::_snprintf(ebuf, ebuflen - 1,\n+    :: snprintf(ebuf, ebuflen - 1,\n@@ -1784,1 +1784,1 @@\n-    ::_snprintf(ebuf, ebuflen - 1,\n+    :: snprintf(ebuf, ebuflen - 1,\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-  _snprintf(dirname, nbytes, \"%s\\\\%s_%s\", tmpdir, perfdir, user);\n+  snprintf(dirname, nbytes, \"%s\\\\%s_%s\", tmpdir, perfdir, user);\n@@ -458,1 +458,1 @@\n-  _snprintf(name, nbytes, \"%s_%s_%u\", PERFDATA_NAME, user, vmid);\n+  snprintf(name, nbytes, \"%s_%s_%u\", PERFDATA_NAME, user, vmid);\n@@ -474,1 +474,1 @@\n-  _snprintf(name, nbytes, \"%s\\\\%d\", dirname, vmid);\n+  snprintf(name, nbytes, \"%s\\\\%d\", dirname, vmid);\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-        _snprintf(cptr, MAX_PATH, \"\\\"%s\\\" %s\", argv[0], cmdline);\n+        snprintf(cptr, MAX_PATH, \"\\\"%s\\\" %s\", argv[0], cmdline);\n","filename":"src\/java.base\/windows\/native\/libjli\/cmdtoargs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,5 +29,0 @@\n-#ifdef _MSC_VER\n-# ifndef snprintf\n-#       define snprintf _snprintf\n-# endif\n-#endif\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/splashscreen_impl.c","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    _snprintf(assertMsg, ASSERT_MSG_SIZE, AssertFmt, expr, file, line, lastError, msgBuffer);\n+    snprintf(assertMsg, ASSERT_MSG_SIZE, AssertFmt, expr, file, line, lastError, msgBuffer);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1529,1 +1529,1 @@\n-        ::_snprintf(text, sizeof(text), \"%d of %d\", (int)messageNumber,\n+        :: snprintf(text, sizeof(text), \"%d of %d\", (int)messageNumber,\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        _snprintf(errorMessage, sizeof(errorMessage), \"Symbol not found: %s\", functionName);\n+        snprintf(errorMessage, sizeof(errorMessage), \"Symbol not found: %s\", functionName);\n","filename":"src\/jdk.crypto.cryptoki\/windows\/native\/libj2pkcs11\/j2secmod_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,6 +36,0 @@\n-\/\/ Disable CRT security warning against _snprintf\n-#pragma warning (disable : 4996)\n-\n-#define snprintf  _snprintf\n-#define vsnprintf _vsnprintf\n-\n","filename":"src\/jdk.hotspot.agent\/share\/native\/libsaproc\/sadis.c","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        size_t result_len = (size_t)_snprintf(buffer, buflen, \"%s\\\\%s.dll\", path, fname);\n+        size_t result_len = (size_t) snprintf(buffer, buflen, \"%s\\\\%s.dll\", path, fname);\n","filename":"src\/jdk.jdwp.agent\/windows\/native\/libjdwp\/linker_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-typedef unsigned __int64 UNSIGNED_JLONG;\n+typedef unsigned long long UNSIGNED_JLONG;\n@@ -37,5 +37,0 @@\n-\/* Needed on Windows because names seem to be hidden in stdio.h. *\/\n-\n-#define snprintf        _snprintf\n-#define vsnprintf       _vsnprintf\n-\n","filename":"src\/jdk.jdwp.agent\/windows\/native\/libjdwp\/util_md.h","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-typedef unsigned __int32 juint;\n-typedef unsigned __int64 julong;\n+typedef unsigned int juint;\n+typedef unsigned long long julong;\n@@ -439,1 +439,1 @@\n-        _snprintf(fullCounterPath,\n+         snprintf(fullCounterPath,\n@@ -475,1 +475,1 @@\n-            _snprintf(fullCounterPath,\n+             snprintf(fullCounterPath,\n@@ -482,1 +482,1 @@\n-            _snprintf(fullCounterPath,\n+             snprintf(fullCounterPath,\n@@ -722,1 +722,1 @@\n-            _snprintf(fullIDProcessCounterPath,\n+             snprintf(fullIDProcessCounterPath,\n@@ -1062,1 +1062,1 @@\n-    _snprintf(pdhIDProcessCounterFmt,\n+     snprintf(pdhIDProcessCounterFmt,\n","filename":"src\/jdk.management\/windows\/native\/libmanagement_ext\/OperatingSystemImpl.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}