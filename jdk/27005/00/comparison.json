{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.nio.file.attribute.FileTime;\n@@ -96,4 +97,10 @@\n-\n-            \/\/ update the zip file, should expect a new Source Object\n-            \/\/ ignore this part of test if file can't be updated (can't overwrite)\n-            if (createZipFile(\"differentContent\")) {\n+            final FileTime prevLastModTime = Files.readAttributes(Path.of(ZIPFILE_NAME),\n+                    BasicFileAttributes.class).lastModifiedTime();\n+            \/\/ Update the ZIP file. May expect a new Source Object (depending on whether\n+            \/\/ the file could be overwritten and its last modified time is newer than previous)\n+            final boolean created = createZipFile(\"differentContent\");\n+            final FileTime newLastModTime = Files.readAttributes(Path.of(ZIPFILE_NAME),\n+                    BasicFileAttributes.class).lastModifiedTime();\n+            \/\/ only run this part of the test if the file was overwritten and its last modified time\n+            \/\/ changed to a more recent value\n+            if (created && newLastModTime.compareTo(prevLastModTime) > 0) {\n@@ -110,0 +117,4 @@\n+            } else {\n+                System.err.println(\"no updates detected to \" + ZIPFILE_NAME\n+                        + \", last modified time before update = \" + prevLastModTime\n+                        + \", after update = \" + newLastModTime);\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ZipSourceCache.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}