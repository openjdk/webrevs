{"files":[{"patch":"@@ -118,0 +118,1 @@\n+\/\/ Note that this method can be called during IGVN, so we also need to check that the If is not top.\n@@ -119,1 +120,1 @@\n-  if (node->is_IfProj()) {\n+  if (node->is_IfProj() && node->in(0)->is_If()) {\n","filename":"src\/hotspot\/share\/opto\/predicates.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @bug 8342809\n+ * @summary Test that a top input into an IfTrue of an Assertion Predicate is properly handled during IGVN.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.predicates.TestTopIntoIfTrue::test -XX:-TieredCompilation\n+ *                   -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=1073486978\n+ *                   compiler.predicates.TestTopIntoIfTrue\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.predicates.TestTopIntoIfTrue::test -XX:-TieredCompilation\n+ *                   -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN compiler.predicates.TestTopIntoIfTrue\n+ *\/\n+\n+package compiler.predicates;\n+\n+public class TestTopIntoIfTrue {\n+    static int iFld;\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 100; i++) {\n+            test();\n+        }\n+    }\n+\n+    static void test() {\n+        int x = 10;\n+        for (int i = 1; i < 326; ++i) {\n+            x += 12;\n+            if (x != 0) {\n+                Unloaded.trap(); \/\/ unloaded trap\n+            }\n+            iFld += 34;\n+        }\n+    }\n+}\n+\n+class Unloaded {\n+    static void trap() {}\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestTopIntoIfTrue.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}