{"files":[{"patch":"@@ -185,0 +185,8 @@\n+        if (id == Region.LABEL && type == ColorType.FOREGROUND\n+                && (state & SynthConstants.ENABLED) != 0) {\n+            Color c = (Color) get(context, \"Label.foreground\");\n+            if (c != null) {\n+                return c;\n+            }\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKStyle.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.plaf.nimbus.NimbusLookAndFeel;\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n+\n+\/*\n+ * @test\n+ * @bug 4248210 8075917\n+ * @key headful\n+ * @summary Tests that HTML in JLabel is painted using LAF-defined\n+            foreground color\n+ * @run main bug4248210\n+ *\/\n+\n+public class bug4248210 {\n+    private static final Color labelColor = Color.red;\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            if (!laf.getName().contains(\"Motif\")) {\n+                System.out.println(\"Testing LAF: \" + laf.getName());\n+                SwingUtilities.invokeAndWait(() -> test(laf));\n+            }\n+        }\n+    }\n+\n+    private static void test(UIManager.LookAndFeelInfo laf) {\n+        setLookAndFeel(laf);\n+        if (UIManager.getLookAndFeel() instanceof NimbusLookAndFeel) {\n+            \/\/ reset \"basic\" properties\n+            UIManager.getDefaults().put(\"Label.foreground\", null);\n+            \/\/ set \"synth - nimbus\" properties\n+            UIManager.getDefaults().put(\"Label[Enabled].textForeground\", labelColor);\n+        } else {\n+            \/\/ reset \"synth - nimbus\" properties\n+            UIManager.getDefaults().put(\"Label[Enabled].textForeground\", null);\n+            \/\/ set \"basic\" properties\n+            UIManager.getDefaults().put(\"Label.foreground\", labelColor);\n+        }\n+\n+        JLabel label = new JLabel(\"<html><body>Can You Read This?<\/body><\/html>\");\n+        label.setSize(150, 30);\n+\n+        BufferedImage img = paintToImage(label);\n+        if (!chkImgForegroundColor(img)) {\n+            try {\n+                ImageIO.write(img, \"png\", new File(\"Label_\" + laf.getName() + \".png\"));\n+            } catch (IOException ignored) {}\n+            throw new RuntimeException(\"JLabel not painted with LAF defined \" +\n+                    \"foreground color\");\n+        }\n+        System.out.println(\"Test Passed\");\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static BufferedImage paintToImage(JComponent content) {\n+        BufferedImage im = new BufferedImage(content.getWidth(), content.getHeight(),\n+                TYPE_INT_RGB);\n+        Graphics2D g = (Graphics2D) im.getGraphics();\n+        g.setBackground(Color.WHITE);\n+        g.clearRect(0, 0, content.getWidth(), content.getHeight());\n+        content.paint(g);\n+        g.dispose();\n+        return im;\n+    }\n+\n+    private static boolean chkImgForegroundColor(BufferedImage img) {\n+        Color red = new Color(255, 0, 0);\n+        for (int x = 0; x < img.getWidth(); ++x) {\n+            for (int y = 0; y < img.getHeight(); ++y) {\n+                if (img.getRGB(x, y) == red.getRGB()) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicHTML\/bug4248210.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"}]}