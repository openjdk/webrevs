{"files":[{"patch":"@@ -968,4 +968,0 @@\n-        Region id = context.getRegion();\n-        int state = context.getComponentState();\n-        int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n-            SynthConstants.ENABLED : SynthConstants.PRESSED);\n@@ -973,1 +969,6 @@\n-        int placement = pane.getTabPlacement();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            Region id = context.getRegion();\n+            int state = context.getComponentState();\n+            int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n+                    SynthConstants.ENABLED : SynthConstants.PRESSED);\n+            int placement = pane.getTabPlacement();\n@@ -975,2 +976,2 @@\n-        \/\/ Fill the tab rect area\n-        g.fillRect(x, y, w, h);\n+            \/\/ Fill the tab rect area\n+            g.fillRect(x, y, w, h);\n@@ -978,9 +979,10 @@\n-        synchronized (UNIXToolkit.GTK_LOCK) {\n-            if (! ENGINE.paintCachedImage(g, x, y, w, h,\n-                    id, gtkState, placement, tabIndex)) {\n-                PositionType side = POSITIONS[placement - 1];\n-                ENGINE.startPainting(g, x, y, w, h,\n-                        id, gtkState, placement, tabIndex);\n-                ENGINE.paintExtension(g, context, id, gtkState,\n-                        ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n-                ENGINE.finishPainting();\n+            synchronized (UNIXToolkit.GTK_LOCK) {\n+                if (!ENGINE.paintCachedImage(g, x, y, w, h,\n+                        id, gtkState, placement, tabIndex)) {\n+                    PositionType side = POSITIONS[placement - 1];\n+                    ENGINE.startPainting(g, x, y, w, h,\n+                            id, gtkState, placement, tabIndex);\n+                    ENGINE.paintExtension(g, context, id, gtkState,\n+                            ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n+                    ENGINE.finishPainting();\n+                }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKPainter.java","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2101,18 +2101,21 @@\n-        if (orientation == JTabbedPane.LEFT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.scale(-1, 1);\n-            transform.rotate(Math.toRadians(90));\n-            paintBackground(context, g, y, x, h, w, transform);\n-        } else if (orientation == JTabbedPane.RIGHT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.rotate(Math.toRadians(90));\n-            transform.translate(0, -(x + w));\n-            paintBackground(context, g, y, 0, h, w, transform);\n-        } else if (orientation == JTabbedPane.BOTTOM) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.translate(x,y);\n-            transform.scale(1, -1);\n-            transform.translate(0,-h);\n-            paintBackground(context, g, 0, 0, w, h, transform);\n-        } else {\n-            paintBackground(context, g, x, y, w, h, null);\n+        JTabbedPane pane = (JTabbedPane)context.getComponent();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            if (orientation == JTabbedPane.LEFT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.scale(-1, 1);\n+                transform.rotate(Math.toRadians(90));\n+                paintBackground(context, g, y, x, h, w, transform);\n+            } else if (orientation == JTabbedPane.RIGHT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.rotate(Math.toRadians(90));\n+                transform.translate(0, -(x + w));\n+                paintBackground(context, g, y, 0, h, w, transform);\n+            } else if (orientation == JTabbedPane.BOTTOM) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.translate(x, y);\n+                transform.scale(1, -1);\n+                transform.translate(0, -h);\n+                paintBackground(context, g, 0, 0, w, h, transform);\n+            } else {\n+                paintBackground(context, g, x, y, w, h, null);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/SynthPainterImpl.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -130,1 +130,0 @@\n-    private boolean tabsOpaque = true;\n@@ -159,1 +158,0 @@\n-        tabsOpaque = UIManager.getBoolean(\"TabbedPane.tabsOpaque\");\n@@ -658,4 +656,2 @@\n-        if (tabsOpaque || tabPane.isOpaque()) {\n-            tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n-                    x, y, width, height, tabIndex, placement);\n-        }\n+        tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n+                x, y, width, height, tabIndex, placement);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTabbedPaneUI.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}