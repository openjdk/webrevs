{"files":[{"patch":"@@ -53,1 +53,1 @@\n-    \/\/ ontents to write to ZIP entries\n+    \/\/ Contents to write to ZIP entries\n@@ -83,3 +83,3 @@\n-     * Create ZIP file with a CEN entry where the 'uncompressed size' is stored\n-     * in the ZIP64 field. This makes the ZIP64 data block 8 bytes long which\n-     * triggers the regression described in 8226530.\n+     * Create a ZIP file with a CEN entry where the 'uncompressed size' is stored in\n+     * the ZIP64 field, but the 'compressed size' is in the CEN field. This makes the\n+     * ZIP64 data block 8 bytes long, which triggers the regression described in 8226530.\n@@ -110,0 +110,1 @@\n+            \/\/ The 'first' entry will store 'uncompressed size' in the Zip64 format\n@@ -111,2 +112,6 @@\n-            \/\/ Make room for an 8-byte ZIP64 extra field\n-            e1.setExtra(createOpaqueExtra((short) Long.BYTES));\n+\n+            \/\/ Make an extra field with the correct size for an 8-byte 'uncompressed size'\n+            \/\/ Zip64 field. Temporarily use the 'unknown' tag 0x9902 to make\n+            \/\/ ZipEntry.setExtra0 skip parsing this as a Zip64.\n+            byte[] opaqueExtra = createBlankExtra((short) UNKNOWN_TAG, (short) Long.BYTES);\n+            e1.setExtra(opaqueExtra);\n@@ -117,0 +122,1 @@\n+            \/\/ A second entry, not in Zip64 format\n@@ -123,1 +129,3 @@\n-        updateToZip64(zip);\n+\n+        \/\/ Update the CEN of 'first' to use the Zip64 format\n+        updateCENHeaderToZip64(zip);\n@@ -132,1 +140,1 @@\n-    private static void updateToZip64(byte[] zip) {\n+    private static void updateCENHeaderToZip64(byte[] zip) {\n@@ -149,1 +157,0 @@\n-\n@@ -154,4 +161,5 @@\n-     * Create a ZIP64 extra field with an 'unknown' tag, right-sized\n-     * for holding an 8-byte 'uncompressed size field'\n-     * @return\n-     * @param blockSize\n+     * Create an extra field with the given tag and data block size, and a\n+     * blank data block.\n+     * @return an extra field with the specified tag and size\n+     * @param tag the header id of the extra field\n+     * @param blockSize the size of the extra field's data block\n@@ -159,1 +167,1 @@\n-    private static byte[] createOpaqueExtra(short blockSize) {\n+    private static byte[] createBlankExtra(short tag, short blockSize) {\n@@ -161,2 +169,2 @@\n-                + Short.BYTES   \/\/ data size\n-                + blockSize;   \/\/ uncompressed size;\n+                + Short.BYTES   \/\/ data block size\n+                + blockSize;   \/\/ data block;\n@@ -166,1 +174,1 @@\n-                .putShort(0, (short) UNKNOWN_TAG)\n+                .putShort(0, tag)\n@@ -168,1 +176,0 @@\n-\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/Zip64SizeTest.java","additions":25,"deletions":18,"binary":false,"changes":43,"status":"modified"}]}