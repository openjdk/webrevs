{"files":[{"patch":"@@ -475,1 +475,0 @@\n-        URL loaded = getPage();\n@@ -477,0 +476,3 @@\n+        final URL loaded = getPage();\n+        final Object postData = getPostData();\n+        final String reference = page.getRef();\n@@ -478,3 +480,9 @@\n-        \/\/ reset scrollbar\n-        if (!page.equals(loaded) && page.getRef() == null) {\n-            scrollRectToVisible(new Rectangle(0,0,1,1));\n+        if ((postData == null) && page.sameFile(loaded)) {\n+            \/\/ The same page with different reference\n+            if (reference != null) {\n+                scrollToReference(reference);\n+            } else {\n+                \/\/ Scroll to the top of the page\n+                scrollRectToVisible(new Rectangle(0, 0, 1, 1));\n+            }\n+            return;\n@@ -482,4 +490,0 @@\n-        boolean reloaded = false;\n-        Object postData = getPostData();\n-        if ((loaded == null) || !loaded.sameFile(page) || (postData != null)) {\n-            \/\/ different url or POST method, load the new content\n@@ -487,6 +491,1 @@\n-            int p = getAsynchronousLoadPriority(getDocument());\n-            if (p < 0) {\n-                \/\/ open stream synchronously\n-                InputStream in = getStream(page);\n-                if (kit != null) {\n-                    Document doc = initializeModel(kit, page);\n+        \/\/ different url or POST method, load the new content\n@@ -494,23 +493,10 @@\n-                    \/\/ At this point, one could either load up the model with no\n-                    \/\/ view notifications slowing it down (i.e. best synchronous\n-                    \/\/ behavior) or set the model and start to feed it on a separate\n-                    \/\/ thread (best asynchronous behavior).\n-                    p = getAsynchronousLoadPriority(doc);\n-                    if (p >= 0) {\n-                        \/\/ load asynchronously\n-                        setDocument(doc);\n-                        synchronized(this) {\n-                            pageLoader = new PageLoader(doc, in, loaded, page);\n-                            pageLoader.execute();\n-                        }\n-                        return;\n-                    }\n-                    read(in, doc);\n-                    setDocument(doc);\n-                    reloaded = true;\n-                }\n-            } else {\n-                \/\/ we may need to cancel background loading\n-                if (pageLoader != null) {\n-                    pageLoader.cancel(true);\n-                }\n+        \/\/ reset scrollbar\n+        scrollRectToVisible(new Rectangle(0, 0, 1, 1));\n+\n+        synchronized (this) {\n+            \/\/ Cancel background loading\n+            if (pageLoader != null) {\n+                pageLoader.cancel(true);\n+                pageLoader = null;\n+            }\n+        }\n@@ -518,0 +504,3 @@\n+        int p = getAsynchronousLoadPriority(getDocument());\n+        if (p >= 0) {\n+            synchronized (this) {\n@@ -522,1 +511,0 @@\n-                return;\n@@ -524,0 +512,1 @@\n+            return;\n@@ -525,12 +514,22 @@\n-        final String reference = page.getRef();\n-        if (reference != null) {\n-            if (!reloaded) {\n-                scrollToReference(reference);\n-            }\n-            else {\n-                \/\/ Have to scroll after painted.\n-                SwingUtilities.invokeLater(new Runnable() {\n-                    public void run() {\n-                        scrollToReference(reference);\n-                    }\n-                });\n+\n+        \/\/ open stream synchronously\n+        InputStream in = getStream(page);\n+\n+        \/\/ getStream instantiates a new kit\n+        if (kit == null) {\n+            return;\n+        }\n+\n+        Document doc = initializeModel(kit, page);\n+\n+        \/\/ At this point, one could either load up the model with no\n+        \/\/ view notifications slowing it down (i.e. best synchronous\n+        \/\/ behavior) or set the model and start to feed it on a separate\n+        \/\/ thread (best asynchronous behavior).\n+        p = getAsynchronousLoadPriority(doc);\n+        if (p >= 0) {\n+            \/\/ load asynchronously\n+            setDocument(doc);\n+            synchronized (this) {\n+                pageLoader = new PageLoader(doc, in, loaded, page);\n+                pageLoader.execute();\n@@ -538,0 +537,14 @@\n+            return;\n+        }\n+\n+        read(in, doc);\n+        setDocument(doc);\n+\n+        if (reference != null) {\n+            \/\/ Have to scroll after painted.\n+            SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    scrollToReference(reference);\n+                }\n+            });\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":63,"deletions":50,"binary":false,"changes":113,"status":"modified"}]}