{"files":[{"patch":"@@ -326,1 +326,1 @@\n-                if (!patchDeadCode) generatorError(\"Unable to generate stack map frame for dead code\", frame.offset);\n+                if (!patchDeadCode) throw generatorError(\"Unable to generate stack map frame for dead code\", frame.offset);\n@@ -419,1 +419,1 @@\n-                    generatorError(\"Expecting a stack map frame\");\n+                    throw generatorError(\"Expecting a stack map frame\");\n@@ -438,1 +438,1 @@\n-                generatorError(\"Expecting a stack map frame\");\n+                throw generatorError(\"Expecting a stack map frame\");\n@@ -662,1 +662,1 @@\n-                generatorError(\"Instructions jsr, jsr_w, or ret must not appear in the class file version >= 51.0\");\n+                throw generatorError(\"Instructions jsr, jsr_w, or ret must not appear in the class file version >= 51.0\");\n@@ -664,1 +664,1 @@\n-                generatorError(String.format(\"Bad instruction: %02x\", opcode));\n+                throw generatorError(String.format(\"Bad instruction: %02x\", opcode));\n@@ -707,1 +707,1 @@\n-                generatorError(\"CP entry #%d %s is not loadable constant\".formatted(index, cp.entryByIndex(index).tag()));\n+                throw generatorError(\"CP entry #%d %s is not loadable constant\".formatted(index, cp.entryByIndex(index).tag()));\n@@ -721,1 +721,1 @@\n-                generatorError(\"low must be less than or equal to high in tableswitch\");\n+                throw generatorError(\"low must be less than or equal to high in tableswitch\");\n@@ -725,1 +725,1 @@\n-                generatorError(\"too many keys in tableswitch\");\n+                throw generatorError(\"too many keys in tableswitch\");\n@@ -731,1 +731,1 @@\n-                generatorError(\"number of keys in lookupswitch less than 0\");\n+                throw generatorError(\"number of keys in lookupswitch less than 0\");\n@@ -738,1 +738,1 @@\n-                    generatorError(\"Bad lookupswitch instruction\");\n+                    throw generatorError(\"Bad lookupswitch instruction\");\n@@ -800,1 +800,1 @@\n-                    generatorError(\"Bad operand type when invoking <init>\");\n+                    throw generatorError(\"Bad operand type when invoking <init>\");\n@@ -811,1 +811,1 @@\n-        if (index < T_BOOLEAN || index > T_LONG) generatorError(\"Illegal newarray instruction type %d\".formatted(index));\n+        if (index < T_BOOLEAN || index > T_LONG) throw generatorError(\"Illegal newarray instruction type %d\".formatted(index));\n@@ -821,1 +821,1 @@\n-     * Throws <code>java.lang.VerifyError<\/code> with given error message\n+     * {@return the generator error with attached details}\n@@ -824,2 +824,2 @@\n-    private void generatorError(String msg) {\n-        generatorError(msg, currentFrame.offset);\n+    private IllegalArgumentException generatorError(String msg) {\n+        return generatorError(msg, currentFrame.offset);\n@@ -828,2 +828,2 @@\n-        \/**\n-     * Throws <code>java.lang.VerifyError<\/code> with given error message\n+    \/**\n+     * {@return the generator error with attached details}\n@@ -833,1 +833,1 @@\n-    private void generatorError(String msg, int offset) {\n+    private IllegalArgumentException generatorError(String msg, int offset) {\n@@ -865,1 +865,1 @@\n-            var err = new VerifyError(sb.toString());\n+            var err = new IllegalArgumentException(sb.toString());\n@@ -867,1 +867,1 @@\n-            throw err;\n+            return err;\n@@ -869,1 +869,1 @@\n-        throw new IllegalArgumentException(sb.toString());\n+        return new IllegalArgumentException(sb.toString());\n@@ -934,1 +934,1 @@\n-            generatorError(\"Detected branch target out of bytecode range\", bci);\n+            throw generatorError(\"Detected branch target out of bytecode range\", bci);\n@@ -940,1 +940,1 @@\n-                generatorError(\"Detected exception handler out of bytecode range\");\n+                throw generatorError(\"Detected exception handler out of bytecode range\");\n@@ -1012,1 +1012,1 @@\n-            if (stackSize < 1) generatorError(\"Operand stack underflow\");\n+            if (stackSize < 1) throw generatorError(\"Operand stack underflow\");\n@@ -1018,1 +1018,1 @@\n-            if (stackSize < 0) generatorError(\"Operand stack underflow\");\n+            if (stackSize < 0) throw generatorError(\"Operand stack underflow\");\n@@ -1138,1 +1138,1 @@\n-                    generatorError(\"Stack size mismatch\");\n+                    throw generatorError(\"Stack size mismatch\");\n@@ -1142,1 +1142,1 @@\n-                        generatorError(\"Stack content mismatch\");\n+                        throw generatorError(\"Stack content mismatch\");\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}