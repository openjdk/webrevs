{"files":[{"patch":"@@ -175,1 +175,1 @@\n-    \/\/ Subword operations in superword usually don't have precise info\n+    \/\/ Subword operations in auto vectorization usually don't have precise info\n@@ -391,1 +391,1 @@\n-bool VectorNode::vector_size_supported_superword(const BasicType bt, int size) {\n+bool VectorNode::vector_size_supported_auto_vectorization(const BasicType bt, int size) {\n@@ -401,1 +401,1 @@\n-      vector_size_supported_superword(bt, vlen)) {\n+      vector_size_supported_auto_vectorization(bt, vlen)) {\n@@ -417,8 +417,0 @@\n-bool VectorNode::is_type_transition_short_to_int(Node* n) {\n-  return n->Opcode() == Op_MulAddS2I;\n-}\n-\n-bool VectorNode::is_type_transition_to_int(Node* n) {\n-  return is_type_transition_short_to_int(n);\n-}\n-\n@@ -1422,1 +1414,1 @@\n-      VectorNode::vector_size_supported_superword(dst_type, vlen)) {\n+      VectorNode::vector_size_supported_auto_vectorization(dst_type, vlen)) {\n@@ -1516,1 +1508,1 @@\n-      VectorNode::vector_size_supported_superword(bt, vlen)) {\n+      VectorNode::vector_size_supported_auto_vectorization(bt, vlen)) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-  static bool vector_size_supported_superword(const BasicType bt, int size);\n+  static bool vector_size_supported_auto_vectorization(const BasicType bt, int size);\n@@ -103,2 +103,0 @@\n-  static bool is_type_transition_short_to_int(Node* n);\n-  static bool is_type_transition_to_int(Node* n);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}