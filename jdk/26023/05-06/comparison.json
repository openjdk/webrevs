{"files":[{"patch":"@@ -26,3 +26,1 @@\n-#include \"runtime\/osThread.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n+#include \"compiler\/compileTask.hpp\"\n@@ -30,0 +28,1 @@\n+#include \"runtime\/osThread.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -34,1 +34,0 @@\n-#ifndef PRODUCT\n@@ -43,1 +42,3 @@\n-      assert(false, \"compile task timed out\");\n+      CompileTask* task = CompilerThread::current()->task();\n+      assert(false, \"compile task %d (%s) timed out after %ld ms\",\n+             task->compile_id(), task->method()->name_and_sig_as_C_string(), CompileTaskTimeout);\n@@ -51,1 +52,0 @@\n-#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/os\/linux\/compilerThreadTimeout_linux.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-#ifndef PRODUCT\n@@ -44,1 +43,0 @@\n-#endif \/\/ !PRODUCT\n@@ -46,1 +44,1 @@\n-  CompilerThreadTimeoutLinux() NOT_PRODUCT(DEBUG_ONLY(: _timer(nullptr))) {};\n+  CompilerThreadTimeoutLinux() DEBUG_ONLY(: _timer(nullptr)) {};\n","filename":"src\/hotspot\/os\/linux\/compilerThreadTimeout_linux.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#ifndef LINUX\n@@ -55,0 +56,1 @@\n+#endif \/\/ !LINUX\n","filename":"src\/hotspot\/share\/compiler\/compilerThread.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (C) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.arguments;\n+\n+\/*\n+ * @test TestCompileTaskTimeout\n+ * @bug 8308094\n+ * @requires vm.compiler2.enabled & vm.debug & vm.flagless & os.name == \"Linux\"\n+ * @summary Check functionality of CompileTaskTimeout\n+ * @library \/test\/lib\n+ * @run driver compiler.arguments.TestCompileTaskTimeout\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestCompileTaskTimeout {\n+\n+    public static void main(String[] args) throws Throwable {\n+        ProcessTools.executeTestJava(\"-Xcomp\", \"-XX:CompileTaskTimeout=1\", \"-version\")\n+                    .shouldHaveExitValue(134)\n+                    .shouldContain(\"timed out after\");\n+\n+        ProcessTools.executeTestJava(\"-Xcomp\", \"-XX:CompileTaskTimeout=200\", \"-version\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldContain(\"java version\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCompileTaskTimeout.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"}]}