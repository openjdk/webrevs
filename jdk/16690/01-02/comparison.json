{"files":[{"patch":"@@ -27,0 +27,1 @@\n+#include \"os_linux.hpp\"\n@@ -30,1 +31,1 @@\n-  if (HugePages::thp_requested()) {\n+  if (os::Linux::thp_requested()) {\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zLargePages_linux.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-  if (HugePages::should_madvise_shmem_thps()) {\n+  if (os::Linux::should_madvise_shmem_thps()) {\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -313,1 +313,0 @@\n-bool HugePages::_thp_requested{false};\n@@ -319,3 +318,0 @@\n-\n-  const bool huge_pages_turned_off = !FLAG_IS_DEFAULT(UseLargePages) && !UseLargePages;\n-  _thp_requested = UseTransparentHugePages && !huge_pages_turned_off;\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -129,3 +129,0 @@\n-  static bool _huge_pages_requested;\n-  static bool _thp_requested;\n-\n@@ -146,0 +143,1 @@\n+  static ShmemTHPMode shmem_thp_mode()          { return _shmem_thp_support.mode(); }\n@@ -147,3 +145,0 @@\n-  static bool thp_requested()                   { return _thp_requested; }\n-  static bool should_madvise_anonymous_thps()   { return _thp_requested && _thp_support.mode() == THPMode::madvise; }\n-  static bool should_madvise_shmem_thps()       { return _thp_requested && _shmem_thp_support.mode() == ShmemTHPMode::advise; }\n","filename":"src\/hotspot\/os\/linux\/hugepages.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -177,0 +177,2 @@\n+bool os::Linux::_thp_requested{false};\n+\n@@ -2886,1 +2888,1 @@\n-  if (HugePages::should_madvise_anonymous_thps() && alignment_hint > vm_page_size()) {\n+  if (Linux::should_madvise_anonymous_thps() && alignment_hint > vm_page_size()) {\n@@ -3717,1 +3719,1 @@\n-  if (UseZGC && HugePages::thp_requested() && HugePages::supports_shmem_thp()) {\n+  if (UseZGC && os::Linux::thp_requested() && HugePages::supports_shmem_thp()) {\n@@ -3744,1 +3746,1 @@\n-        ((HugePages::thp_requested() && HugePages::supports_shmem_thp()) ||\n+        ((os::Linux::thp_requested() && HugePages::supports_shmem_thp()) ||\n@@ -3751,0 +3753,4 @@\n+  Linux::large_page_init();\n+}\n+\n+void os::Linux::large_page_init() {\n@@ -3753,1 +3759,5 @@\n-  \/\/ Query OS information first and store flag values before changing their values.\n+  \/\/ Decide if the user asked for THPs before we update UseTransparentHugePages.\n+  const bool large_pages_turned_off = !FLAG_IS_DEFAULT(UseLargePages) && !UseLargePages;\n+  _thp_requested = UseTransparentHugePages && !large_pages_turned_off;\n+\n+  \/\/ Query OS information first.\n@@ -3872,0 +3882,12 @@\n+bool os::Linux::thp_requested() {\n+  return _thp_requested;\n+}\n+\n+bool os::Linux::should_madvise_anonymous_thps() {\n+  return _thp_requested && HugePages::thp_mode() == THPMode::madvise;\n+}\n+\n+bool os::Linux::should_madvise_shmem_thps() {\n+  return _thp_requested && HugePages::shmem_thp_mode() == ShmemTHPMode::advise;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -178,0 +178,9 @@\n+  \/\/ Tells if the user asked for transparent huge pages.\n+  static bool _thp_requested;\n+\n+  static void large_page_init();\n+\n+  static bool thp_requested();\n+  static bool should_madvise_anonymous_thps();\n+  static bool should_madvise_shmem_thps();\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}