{"files":[{"patch":"@@ -83,1 +83,1 @@\n-        fflush(0);\n+        fflush(nullptr);\n@@ -93,1 +93,2 @@\n-Per jvmtiHeapReferenceInfoField spec:\n+Per jvmtiHeapReferenceInfoField spec (reference information for\n+JVMTI_HEAP_REFERENCE_FIELD and JVMTI_HEAP_REFERENCE_STATIC_FIELD references.):\n@@ -95,7 +96,7 @@\n-    make a list of all the fields in C and its superclasses,\n-    starting with all the fields in java.lang.Object and ending with all the fields in C.\n-    Within this list, put the fields for a given class in the order returned by GetClassFields.\n-    Assign the fields in this list indices n, n+1, ..., in order,\n-    where n is the count of the fields in all the interfaces implemented by C.\n-    Note that C implements all interfaces directly implemented by its superclasses;\n-    as well as all superinterfaces of these interfaces.\n+- make a list of all the fields in C and its superclasses,\n+  starting with all the fields in java.lang.Object and ending with all the fields in C.\n+- Within this list, put the fields for a given class in the order returned by GetClassFields.\n+- Assign the fields in this list indices n, n+1, ..., in order,\n+  where n is the count of the fields in all the interfaces implemented by C.\n+  Note that C implements all interfaces directly implemented by its superclasses;\n+  as well as all superinterfaces of these interfaces.\n@@ -103,4 +104,4 @@\n-    make a list of the fields directly declared in I.\n-    Within this list, put the fields in the order returned by GetClassFields.\n-    Assign the fields in this list indices n, n+1, ..., in order,\n-    where n is the count of the fields in all the superinterfaces of I.\n+- make a list of the fields directly declared in I.\n+- Within this list, put the fields in the order returned by GetClassFields.\n+- Assign the fields in this list indices n, n+1, ..., in order,\n+  where n is the count of the fields in all the superinterfaces of I.\n@@ -108,1 +109,1 @@\n-'Klass' struct contains all required data to calculate field indeces.\n+'Klass' struct contains all required data to calculate field indices.\n@@ -110,1 +111,1 @@\n-For each test class 'Klass' struct is created and pointer to it set as a tag for jclass object.\n+For each test class, the 'Klass' struct is created and a pointer to it is set as the jclass's tag.\n@@ -153,1 +154,1 @@\n-For each test object 'Object' struct is created and pointer to it set as a tag for jobject.\n+For each test object, the 'Object' struct is created and a pointer to it is set as the jobject's tag.\n@@ -224,2 +225,2 @@\n-\/\/ Explores all interfaces implemented by 'klass' sorting out duplicates\n-\/\/ and store them in the 'arr' starting from 'index'.\n+\/\/ Explores all interfaces implemented by 'klass', sorts out duplicates,\n+\/\/ and stores the interfaces in the 'arr' starting from 'index'.\n@@ -348,1 +349,0 @@\n-\n@@ -350,1 +350,0 @@\n-\n@@ -364,1 +363,0 @@\n-\n@@ -380,1 +378,1 @@\n-        fflush(0);\n+        fflush(nullptr);\n@@ -390,1 +388,1 @@\n-        fflush(0);\n+        fflush(nullptr);\n@@ -484,1 +482,1 @@\n-    fflush(0);\n+    fflush(nullptr);\n@@ -492,1 +490,1 @@\n-    fflush(0);\n+    fflush(nullptr);\n@@ -509,1 +507,1 @@\n-    fflush(0);\n+    fflush(nullptr);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/FollowReferences\/FieldIndices\/libFieldIndicesTest.cpp","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"}]}