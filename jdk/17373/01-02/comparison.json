{"files":[{"patch":"@@ -28,1 +28,2 @@\n- * @run junit ECDHKeyAgreementParamValidation\n+ * @library \/test\/lib\n+ * @run main ECDHKeyAgreementParamValidation\n@@ -37,1 +38,0 @@\n-import java.security.ProviderException;\n@@ -41,2 +41,1 @@\n-import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.Test;\n+import jdk.test.lib.Asserts;\n@@ -46,2 +45,1 @@\n-    @Test\n-    public void testInitWithInvalidKey() throws Exception {\n+    private static void testInitWithInvalidKey() throws Exception {\n@@ -66,1 +64,1 @@\n-        Assertions.assertThrows(\n+        Asserts.assertThrows(\n@@ -71,1 +69,1 @@\n-        Assertions.assertThrows(\n+        Asserts.assertThrows(\n@@ -76,2 +74,1 @@\n-    @Test\n-    public void testDoPhaseWithInvalidKey() throws Exception {\n+    private static void testDoPhaseWithInvalidKey() throws Exception {\n@@ -91,1 +88,1 @@\n-        Assertions.assertThrows(\n+        Asserts.assertThrows(\n@@ -96,1 +93,23 @@\n-        Assertions.assertThrows(IllegalStateException.class, ka::generateSecret);\n+        Asserts.assertThrows(IllegalStateException.class, ka::generateSecret);\n+    }\n+\n+    public static void main(String[] args) {\n+        boolean failed = false;\n+\n+        try {\n+            testInitWithInvalidKey();\n+        } catch (Exception e) {\n+            failed = true;\n+            e.printStackTrace();\n+        }\n+\n+        try {\n+            testDoPhaseWithInvalidKey();\n+        } catch (Exception e) {\n+            failed = true;\n+            e.printStackTrace();\n+        }\n+\n+        if (failed) {\n+            throw new RuntimeException(\"Test failed\");\n+        }\n","filename":"test\/jdk\/sun\/security\/ec\/ECDHKeyAgreementParamValidation.java","additions":31,"deletions":12,"binary":false,"changes":43,"status":"modified"}]}