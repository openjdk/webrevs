{"files":[{"patch":"@@ -233,1 +233,1 @@\n-  DEBUG_ONLY(volatile bool _out_of_stack_walking_enabled;)\n+  DEBUG_ONLY(volatile bool _out_of_stack_walking_enabled = true;)\n@@ -584,1 +584,1 @@\n-void JfrCPUTimeThreadSampling::set_out_of_stack_walking_enabled(bool runnable) {\n+bool JfrCPUTimeThreadSampling::set_out_of_stack_walking_enabled(bool runnable) {\n@@ -587,0 +587,3 @@\n+    return true;\n+  } else {\n+    return false;\n@@ -855,1 +858,1 @@\n-static void set_out_of_stack_walking_enabled(bool runnable) {\n+static bool JfrCPUTimeThreadSampling::set_out_of_stack_walking_enabled(bool runnable) {\n@@ -857,0 +860,1 @@\n+  return false;\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-  DEBUG_ONLY(static void set_out_of_stack_walking_enabled(bool runnable);)\n+  DEBUG_ONLY(static bool set_out_of_stack_walking_enabled(bool runnable);)\n@@ -163,1 +163,1 @@\n-  DEBUG_ONLY(static void set_out_of_stack_walking_enabled(bool runnable));\n+  DEBUG_ONLY(static bool set_out_of_stack_walking_enabled(bool runnable));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2675,2 +2675,1 @@\n-    JfrCPUTimeThreadSampling::set_out_of_stack_walking_enabled(enable == JNI_TRUE);\n-    return JNI_TRUE;\n+    return JfrCPUTimeThreadSampling::set_out_of_stack_walking_enabled(enable == JNI_TRUE) ? JNI_TRUE : JNI_FALSE;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+        private final List<Long> sampleEventsInTimeBox = new ArrayList<>();\n@@ -87,1 +88,1 @@\n-                                          .filter(e -> e.relativeTimeMillis >= previousEnd.get() && e.relativeTimeMillis < timeBoxEnd)\n+                                          .filter(e -> e.relativeTimeMillis >= previousEnd.get() && e.relativeTimeMillis <= timeBoxEnd)\n@@ -96,1 +97,1 @@\n-        public synchronized void addTimeBoxEnd(long timeBoxEnd) {\n+        public synchronized void addTimeBoxEnd(long timeBoxEnd, long sampleEvents) {\n@@ -98,0 +99,14 @@\n+            sampleEventsInTimeBox.add(sampleEvents);\n+        }\n+\n+        public synchronized void print() {\n+            System.out.println(\"Loss event information:\");\n+            for (int i = 0; i < timeBoxEnds.size(); i++) {\n+                System.out.println(\"  Time box end: \" + timeBoxEnds.get(i) + \", sample events: \" + sampleEventsInTimeBox.get(i));\n+            }\n+            for (LossEvent e : events) {\n+                System.out.println(\"  Lost samples event: \" + e.lostSamples + \" at \" + e.relativeTimeMillis);\n+            }\n+            for (LossEvent e : getEventsPerTimeBox()) {\n+                System.out.println(\"  Lost samples in time box ending at \" + e.relativeTimeMillis + \": \" + e.lostSamples);\n+            }\n@@ -107,0 +122,1 @@\n+            AtomicLong sampleEventCountInTimeBox = new AtomicLong(0);\n@@ -117,0 +133,6 @@\n+            rs.onEvent(EventNames.CPUTimeSample, e -> {\n+                if (e.getThread(\"eventThread\").getJavaThreadId() == burstThreadId) {\n+                    sampleEventCountInTimeBox.incrementAndGet();\n+                }\n+            });\n+            rs.startAsync();\n@@ -120,1 +142,0 @@\n-            rs.startAsync();\n@@ -129,1 +150,3 @@\n-                lossEvents.addTimeBoxEnd(Instant.now().toEpochMilli() - startTimeMillis);\n+                WHITE_BOX.forceSafepoint(); \/\/ just to be sure\n+                lossEvents.addTimeBoxEnd(Instant.now().toEpochMilli() - startTimeMillis, sampleEventCountInTimeBox.get());\n+                sampleEventCountInTimeBox.set(0);\n@@ -150,0 +173,1 @@\n+        lossEvents.print();\n@@ -151,3 +175,0 @@\n-        for (LossEvent timeBoxedLoss : timeBoxedLosses) {\n-            System.out.println(\"Lost samples in time box \" + timeBoxedLoss.relativeTimeMillis + \": \" + timeBoxedLoss.lostSamples);\n-        }\n@@ -156,1 +177,1 @@\n-                           timeBoxedLosses.get(0).lostSamples \/ 1.5);\n+                           timeBoxedLosses.get(0).lostSamples \/ 2);\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleQueueAutoSizes.java","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"}]}