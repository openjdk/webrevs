{"files":[{"patch":"@@ -1691,1 +1691,1 @@\n-                        \"label\");\n+                        label);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @library \/javax\/net\/ssl\/templates\n+ * @library \/javax\/net\/ssl\/templates \/test\/lib\n@@ -43,0 +43,2 @@\n+import static jdk.test.lib.Asserts.*;\n+\n@@ -276,2 +278,2 @@\n-            ExtendedSSLSession cessls,\n-            ExtendedSSLSession sessls) throws Exception {\n+            ExtendedSSLSession clientSession,\n+            ExtendedSSLSession serverSession) throws Exception {\n@@ -295,1 +297,1 @@\n-        clientBytes = cessls.exportKeyMaterialKey(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialKey(\"hello\",\n@@ -297,1 +299,1 @@\n-        serverBytes = sessls.exportKeyMaterialKey(\"hello\",\n+        serverBytes = serverSession.exportKeyMaterialKey(\"hello\",\n@@ -299,5 +301,3 @@\n-        if (!Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Equal inputs but exporters are not\");\n-        } else {\n-            log(\"Equal inputs test passed\");\n-        }\n+        assertEqualsByteArray(clientBytes, serverBytes,\n+                \"Equal inputs but exporters are not equal\");\n+        log(\"Equal inputs test passed\");\n@@ -309,1 +309,1 @@\n-        clientBytes = cessls.exportKeyMaterialKey(\"\",\n+        clientBytes = clientSession.exportKeyMaterialKey(\"\",\n@@ -311,1 +311,1 @@\n-        serverBytes = sessls.exportKeyMaterialKey(\"\",\n+        serverBytes = serverSession.exportKeyMaterialKey(\"\",\n@@ -313,5 +313,3 @@\n-        if (!Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Empty label and exporters are equal\");\n-        } else {\n-            log(\"Empty label test passed\");\n-        }\n+        assertEqualsByteArray(clientBytes, serverBytes,\n+                \"Empty label and exporters are equal\");\n+        log(\"Empty label test passed\");\n@@ -320,1 +318,1 @@\n-        clientBytes = cessls.exportKeyMaterialData(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n@@ -322,1 +320,1 @@\n-        serverBytes = sessls.exportKeyMaterialData(\"goodbye\",\n+        serverBytes = serverSession.exportKeyMaterialData(\"goodbye\",\n@@ -324,5 +322,3 @@\n-        if (Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Different labels but exporters same\");\n-        } else {\n-            log(\"Different labels test passed\");\n-        }\n+        assertNotEqualsByteArray(clientBytes, serverBytes,\n+                \"Different labels but exporters same\");\n+        log(\"Different labels test passed\");\n@@ -331,1 +327,1 @@\n-        clientBytes = cessls.exportKeyMaterialData(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n@@ -333,1 +329,1 @@\n-        serverBytes = sessls.exportKeyMaterialData(\"hello\",\n+        serverBytes = serverSession.exportKeyMaterialData(\"hello\",\n@@ -335,9 +331,5 @@\n-        if ((clientBytes.length != 128) || (serverBytes.length != 127)) {\n-            throw new Exception(\"Output sizes incorrect:  \" +\n-                    clientBytes.length + \"\/\" + serverBytes.length);\n-        }\n-        if (Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Different output sizes but exporters same\");\n-        } else {\n-            log(\"Different output size test passed\");\n-        }\n+        assertEquals(clientBytes.length, 128, \"client length != 128\");\n+        assertEquals(serverBytes.length, 127, \"server length != 127\");\n+        assertNotEqualsByteArray(clientBytes, serverBytes,\n+                \"Different output sizes but exporters same\");\n+        log(\"Different output size test passed\");\n@@ -346,1 +338,1 @@\n-        clientBytes = cessls.exportKeyMaterialData(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n@@ -348,1 +340,1 @@\n-        serverBytes = sessls.exportKeyMaterialData(\"hello\",\n+        serverBytes = serverSession.exportKeyMaterialData(\"hello\",\n@@ -350,5 +342,3 @@\n-        if (Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Different context but exporters same\");\n-        } else {\n-            log(\"Different context test passed\");\n-        }\n+        assertNotEqualsByteArray(clientBytes, serverBytes,\n+                \"Different context but exporters same\");\n+        log(\"Different context test passed\");\n@@ -357,1 +347,1 @@\n-        clientBytes = cessls.exportKeyMaterialData(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n@@ -359,1 +349,1 @@\n-        serverBytes = sessls.exportKeyMaterialData(\"hello\",\n+        serverBytes = serverSession.exportKeyMaterialData(\"hello\",\n@@ -361,5 +351,3 @@\n-        if (Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"Different context sizes but exporters same.\");\n-        } else {\n-            log(\"Different context sizes test passed\");\n-        }\n+        assertNotEqualsByteArray(clientBytes, serverBytes,\n+                \"Different context sizes but exporters same\");\n+        log(\"Different context sizes test passed\");\n@@ -368,1 +356,1 @@\n-        clientBytes = cessls.exportKeyMaterialData(\"hello\",\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n@@ -370,1 +358,1 @@\n-        serverBytes = sessls.exportKeyMaterialData(\"hello\",\n+        serverBytes = serverSession.exportKeyMaterialData(\"hello\",\n@@ -372,5 +360,12 @@\n-        if (!Arrays.equals(clientBytes, serverBytes)) {\n-            throw new Exception(\"No context and exporters are not the same.\");\n-        } else {\n-            log(\"No context test passed\");\n-        }\n+        assertEqualsByteArray(clientBytes, serverBytes,\n+                \"No context and exporters are not the same\");\n+        log(\"No context test passed\");\n+\n+        \/\/ Smaller key size\n+        clientBytes = clientSession.exportKeyMaterialData(\"hello\",\n+                bytes, 40);\n+        serverBytes = serverSession.exportKeyMaterialData(\"hello\",\n+                bytes, 40);\n+        assertEqualsByteArray(clientBytes, serverBytes,\n+                \"Smaller key size should be the same\");\n+        log(\"Smaller key size test passed\");\n@@ -380,1 +375,1 @@\n-            cessls.exportKeyMaterialData(null, bytes, 128);\n+            clientSession.exportKeyMaterialData(null, bytes, 128);\n@@ -387,2 +382,2 @@\n-            cessls.exportKeyMaterialData(\"hello\", new byte[1<<16], 128);\n-            if (!cessls.getProtocol().equals(\"TLSv1.3\")) {\n+            clientSession.exportKeyMaterialData(\"hello\", new byte[1<<16], 128);\n+            if (!clientSession.getProtocol().equals(\"TLSv1.3\")) {\n@@ -400,1 +395,1 @@\n-            cessls.exportKeyMaterialData(\"hello\", bytes, -20);\n+            clientSession.exportKeyMaterialData(\"hello\", bytes, -20);\n","filename":"test\/jdk\/javax\/net\/ssl\/ExtendedSSLSession\/TLSKeyExporters.java","additions":55,"deletions":60,"binary":false,"changes":115,"status":"modified"}]}