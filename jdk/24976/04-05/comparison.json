{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -1673,19 +1674,1 @@\n-                        hkdfInfo, hashAlg.hashLength, \"DerivedSecret\");\n-\n-                \/\/ Now do the \"outer\" HKDF-Expand-Label.\n-                \/\/     HKDF-Expand-Label(derivedSecret, \"exporter\",\n-                \/\/         Hash(context_value), key_length)\n-\n-                \/\/ If a context was supplied, use it, otherwise, use the\n-                \/\/ previous hashed value of \"\"...\n-                byte[] hash = ((context.length > 0) ?\n-                        md.digest(context): emptyHash);\n-\n-                \/\/ ...now the hkdfInfo...\n-                hkdfInfo = SSLSecretDerivation.createHkdfInfo((\"tls13 \" +\n-                        \"exporter\").getBytes(StandardCharsets.UTF_8), hash,\n-                        length);\n-\n-                \/\/ ...now the final expand.\n-                SecretKey key = hkdf.expand(derivedSecret, hkdfInfo, length,\n-                        label);\n+                        hkdfInfo, hashAlg.hashLength, \"DerivedSecret\");;\n@@ -1693,0 +1676,19 @@\n+                    \/\/ Now do the \"outer\" HKDF-Expand-Label.\n+                    \/\/     HKDF-Expand-Label(derivedSecret, \"exporter\",\n+                    \/\/         Hash(context_value), key_length)\n+\n+                    \/\/ If a context was supplied, use it, otherwise, use the\n+                    \/\/ previous hashed value of \"\"...\n+                    byte[] hash = ((context.length > 0) ?\n+                            md.digest(context) : emptyHash);\n+\n+                    \/\/ ...now the hkdfInfo...\n+                    hkdfInfo = SSLSecretDerivation.createHkdfInfo(\n+                            (\"tls13 exporter\").getBytes(StandardCharsets.UTF_8),\n+                            hash, length);\n+\n+                    \/\/ ...now the final expand.\n+                    SecretKey key = hkdf.expand(derivedSecret, hkdfInfo, length,\n+                            label);\n+                    return key;\n+                } finally {\n@@ -1694,3 +1696,10 @@\n-                    derivedSecret.destroy();\n-                } catch (DestroyFailedException e) {\n-                    \/\/ swallow\n+                    if (derivedSecret instanceof SecretKeySpec s) {\n+                        SharedSecrets.getJavaxCryptoSpecAccess()\n+                                .clearSecretKeySpec(s);\n+                    } else  {\n+                        try {\n+                            derivedSecret.destroy();\n+                        } catch (DestroyFailedException e) {\n+                            \/\/ swallow\n+                        }\n+                    }\n@@ -1698,1 +1707,0 @@\n-                return key;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":31,"deletions":23,"binary":false,"changes":54,"status":"modified"}]}