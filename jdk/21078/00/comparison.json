{"files":[{"patch":"@@ -1,1 +1,1 @@\n-Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,6 @@\n+The '%' could be used to define parameters substituted during execution:\n+ %p - pid or core of target processes\n+ %java - path to java executable\n+ %{filename} - the scripts, which are located in 'conf' directory\n+\n+\n","filename":"test\/failure_handler\/README","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.io.File;\n@@ -31,0 +32,1 @@\n+import java.nio.file.Files;\n@@ -87,0 +89,21 @@\n+    public static String unpack(String filename) {\n+        InputStream stream = Utils.class.getResourceAsStream(\"\/\" + filename);\n+        if (stream == null) {\n+            throw new IllegalStateException(String.format(\n+                    \"file '%s' doesn't exist%n\", filename));\n+        }\n+        try {\n+            File file = new File(filename);\n+            if (file.exists()) {\n+                file.delete();\n+            }\n+            Files.copy(stream, file.toPath());\n+            return file.getAbsolutePath();\n+        } catch (IOException e) {\n+            throw new IllegalStateException(String.format(\n+                    \"can't unpack resource '%s' : %s%n\",\n+                    filename, e.getMessage()), e);\n+        }\n+\n+    }\n+\n","filename":"test\/failure_handler\/src\/share\/classes\/jdk\/test\/failurehandler\/Utils.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import jdk.test.failurehandler.Utils;\n@@ -32,0 +33,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -60,0 +63,1 @@\n+        Pattern filePattern = Pattern.compile(\"%\\\\{(.*?)}\");\n@@ -71,0 +75,10 @@\n+        for (int i = 0, n = args.length; i < n; ++i) {\n+            if (args[i].matches(filePattern.pattern())) {\n+                Matcher matcher = filePattern.matcher(args[i]);\n+                while (matcher.find()) {\n+                    String filename = matcher.group(1);\n+                    String unpackedFilename = Utils.unpack(filename);\n+                    args[i] = args[i].replace(\"%{\" + filename + \"}\", unpackedFilename);\n+                }\n+            }\n+        }\n","filename":"test\/failure_handler\/src\/share\/classes\/jdk\/test\/failurehandler\/action\/PatternAction.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-  native.stack native.core\n+  native.stack.print_info native.stack.backtrace native.core\n@@ -52,3 +52,5 @@\n-native.stack.args=--pid=%p\\0-batch\\0-ex\\0info threads\\0-ex\\0thread apply all backtrace\n-native.stack.args.delimiter=\\0\n-native.stack.params.repeat=6\n+native.stack.print_info.args=--pid=%p -batch -x %{print_info.gdb}\n+native.stack.print_info.params.repeat=6\n+native.stack.backtrace.args=--pid=%p\\0-batch\\0-ex\\0info threads\\0-ex\\0thread apply all backtrace\n+native.stack.backtrace.args.delimiter=\\0\n+native.stack.backtrace.params.repeat=6\n@@ -63,1 +65,1 @@\n-cores=native.gdb\n+cores=native.gdb.print_info native.gdb.backtrace\n@@ -66,2 +68,3 @@\n-native.gdb.args=%java\\0-c\\0%p\\0-batch\\0-ex\\0info threads\\0-ex\\0thread apply all backtrace\n-native.gdb.args.delimiter=\\0\n+native.gdb.print_info.args=%java -c %p -batch -x %{print_info.gdb}\n+native.gdb.backtrace.args=%java\\0-c\\0%p\\0-batch\\0-ex\\0info threads\\0-ex\\0thread apply all backtrace\n+native.gdb.backtrace.args.delimiter=\\0\n","filename":"test\/failure_handler\/src\/share\/conf\/linux.properties","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,155 @@\n+#\n+# Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+define print_mutex\n+  set $mutex = $arg0\n+  set $_owner =  $mutex._owner\n+  if $_owner != 0\n+    printf \"Mutex: %s owned by %p\\n\", $mutex._name, $_owner\n+  end\n+end\n+\n+define print_mutexes\n+  set $i = 0\n+  set $owned = 0\n+  while $i < _num_mutex\n+    print_mutex _mutex_array[$i]\n+    set $i = $i + 1\n+  end\n+  if $owned == 0\n+    printf \"None\\n\"\n+  end\n+end\n+\n+define print_safepoint\n+  printf \"_state: \"\n+  p SafepointSynchronize::_state\n+  printf \"\\n\"\n+end\n+\n+define print_thread\n+  set $thread = $arg0\n+  printf \"\\nThread: \\n\"\n+  print $thread\n+  printf \"LWP ID: \"\n+  print $thread._osthread._thread_id\n+  printf \"OSThread state: \"\n+  print $thread._osthread._state\n+  printf \"Thread info: \"\n+end\n+\n+\n+define print_vmthread\n+  set $thread = VMThread::_vm_thread\n+  print_thread $thread\n+end\n+\n+define print_java_thread\n+  set $thread = $arg0\n+  print_thread $thread\n+  printf \"JavaThreadState: \"\n+  print $thread._thread_state\n+  printf \"ThreadSafepointState: \"\n+  print *$thread._safepoint_state\n+  printf \"Suspend flags: \"\n+  print $thread._suspend_flags\n+end\n+\n+define print_non_java_thread\n+  set $thread = $arg0\n+  print_thread $thread\n+end\n+\n+\n+define print_java_thread_raw\n+  set $thread = $arg0\n+  print *$thread\n+  print *$thread._osthread._thread_d\n+end\n+\n+define print_java_threads\n+  set $threads = ThreadsSMRSupport::_java_thread_list._threads\n+  set $length = ThreadsSMRSupport::_java_thread_list._length\n+  set $i = 0\n+  while $i < $length\n+    print_java_thread $threads[$i]\n+    set $i = $i + 1\n+  end\n+end\n+\n+define print_non_java_threads\n+  set $thread = NonJavaThread::_the_list._head\n+  while $thread != 0\n+    print_non_java_thread $thread\n+    set $thread = $thread._next\n+  end\n+end\n+\n+printf \"==============================================================================================\\n\"\n+printf \"The list of owned mutexes:\\n\"\n+printf \"==============================================================================================\\n\"\n+print_mutexes\n+printf \"\\n\"\n+printf \"\\n\"\n+\n+printf \"==============================================================================================\\n\"\n+printf \"The Safepoint:\\n\"\n+printf \"==============================================================================================\\n\"\n+print_safepoint\n+printf \"\\n\"\n+printf \"\\n\"\n+\n+printf \"==============================================================================================\\n\"\n+printf \"The VMThread:\\n\"\n+printf \"==============================================================================================\\n\"\n+print_vmthread\n+printf \"\\n\"\n+printf \"\\n\"\n+\n+\n+printf \"==============================================================================================\\n\"\n+printf \"The JavaThreads (ThreadsSMRSupport::_java_thread_list) :\\n\"\n+printf \"==============================================================================================\\n\"\n+print_java_threads\n+printf \"\\n\"\n+printf \"\\n\"\n+\n+printf \"==============================================================================================\\n\"\n+printf \"The NonJavaThreads (NonJavaThread::_the_list) :\\n\"\n+printf \"==============================================================================================\\n\"\n+print_non_java_threads\n+printf \"\\n\"\n+printf \"\\n\"\n+\n+\n+\n+printf \"==============================================================================================\\n\"\n+printf \"Thread info (info threads):\\n\"\n+printf \"==============================================================================================\\n\"\n+info threads\n+printf \"\\n\"\n+printf \"\\n\"\n+printf \"==============================================================================================\\n\"\n+printf \"All stack traces (thread apply all backtrace):\\n\"\n+printf \"==============================================================================================\\n\"\n+thread apply all backtrace\n","filename":"test\/failure_handler\/src\/share\/conf\/print_info.gdb","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"}]}