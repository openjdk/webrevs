{"files":[{"patch":"@@ -426,0 +426,4 @@\n+                 ||\n+                 isCurrentlyResolvingPermitting(env)\n+                 &&\n+                 ((JCClassDecl) env.tree).sym.outermostClass() == sym.owner.outermostClass()\n@@ -461,0 +465,16 @@\n+\n+    \/\/ it's a bit hacky, but basically if we are currently resolving symbol inside permitting block\n+    \/\/ then at least one symbol in permitting block should be unresolved,\n+    \/\/ while extending and implementing should be resolved\n+    private boolean isCurrentlyResolvingPermitting(Env<AttrContext> env) {\n+        return env.tree instanceof JCClassDecl classDecl\n+            && classDecl.permitting.stream().anyMatch(permitting -> !symNotNull(permitting))\n+            && (classDecl.extending == null || symNotNull(classDecl.extending))\n+            && classDecl.implementing.stream().allMatch(this::symNotNull);\n+    }\n+\n+    private boolean symNotNull(JCTree tree) {\n+        return tree instanceof JCFieldAccess fieldAccess && fieldAccess.sym != null\n+            || tree instanceof JCIdent ident && ident.sym != null;\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}