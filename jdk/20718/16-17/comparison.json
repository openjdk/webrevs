{"files":[{"patch":"@@ -265,1 +265,1 @@\n-        PRIVATE_MEMBERS_IN_PERMITS_CLAUSE(JDK19, Fragments.FeaturePrivateMembersInPermitsClause, DiagKind.PLURAL),\n+        PRIVATE_MEMBERS_IN_PERMITS_CLAUSE(JDK19),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -467,4 +467,3 @@\n-        if (env.info.isPermitsClause && ((JCClassDecl) env.tree).sym.outermostClass() == sym.owner.outermostClass()) {\n-            return allowPrivateMembersInPermitsClause;\n-        }\n-        return false;\n+        return allowPrivateMembersInPermitsClause &&\n+            env.info.isPermitsClause &&\n+            ((JCClassDecl) env.tree).sym.outermostClass() == sym.owner.outermostClass();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3250,3 +3250,0 @@\n-compiler.misc.feature.private.members.in.permits.clause=\\\n-    private members in permits clause\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -87,4 +87,1 @@\n-            \"\"\",\n-            \"\"\"\n-            public sealed class T permits S.A {\n-                private static final class A {}\n+            sealed class T permits S.A {\n@@ -95,1 +92,1 @@\n-            \"T.java:1:32: compiler.err.report.access: S.A, private, S\",\n+            \"S.java:5:25: compiler.err.report.access: S.A, private, S\",\n@@ -100,1 +97,1 @@\n-            .files(root.resolve(\"S.java\"), root.resolve(\"T.java\"))\n+            .files(root.resolve(\"S.java\"))\n@@ -156,35 +153,1 @@\n-     * Tests that referencing a private class in the permits clause from another class fails to compile.\n-     *\/\n-    @Test\n-    public void referencePrivateClassFails() throws Exception {\n-        var root = Path.of(\"src\");\n-        tb.writeJavaFiles(root,\n-            \"\"\"\n-            sealed class S permits S.A {\n-                private static final class A extends S {}\n-            }\n-            \"\"\",\n-            \"\"\"\n-            sealed class T permits S.A {\n-            }\n-            \"\"\"\n-        );\n-\n-        var expectedErrors = List.of(\n-            \"T.java:1:25: compiler.err.report.access: S.A, private, S\",\n-            \"1 error\"\n-        );\n-\n-        var compileErrors = new toolbox.JavacTask(tb)\n-            .files(root.resolve(\"S.java\"), root.resolve(\"T.java\"))\n-            .options(\"-XDrawDiagnostics\")\n-            .run(toolbox.Task.Expect.FAIL)\n-            .getOutputLines(Task.OutputKind.DIRECT);\n-\n-        if (!Objects.equals(compileErrors, expectedErrors)) {\n-            throw new AssertionError(\"Expected errors: \" + expectedErrors + \", but got: \" + compileErrors);\n-        }\n-    }\n-\n-    \/**\n-     * Tests that a private class in the permits clause of a sealed class does not compile when the source is lower than 19.\n+     * Tests that a private class in the permits clause of a sealed class does not compile when the release is lower than 19.\n","filename":"test\/langtools\/tools\/javac\/sealed\/PrivateMembersInPermitClause.java","additions":4,"deletions":41,"binary":false,"changes":45,"status":"modified"}]}