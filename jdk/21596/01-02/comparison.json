{"files":[{"patch":"@@ -1786,6 +1786,6 @@\n-    case 4:  movdl(dst, src);   break;\n-    case 8:  movq(dst, src);    break;\n-    case 16: movdqu(dst, src);  break;\n-    case 32: vmovdqu(dst, src); break;\n-    case 64: evmovdqul(dst, src, Assembler::AVX_512bit); break;\n-    default: ShouldNotReachHere();\n+      case 4:  movdl(dst, src);   break;\n+      case 8:  movq(dst, src);    break;\n+      case 16: movdqu(dst, src);  break;\n+      case 32: vmovdqu(dst, src); break;\n+      case 64: evmovdqul(dst, src, Assembler::AVX_512bit); break;\n+      default: ShouldNotReachHere();\n@@ -1795,6 +1795,6 @@\n-    case 4:  movflt(dst, src); break;\n-    case 8:  movdbl(dst, src); break;\n-    case 16: movups(dst, src); break;\n-    case 32: vmovups(dst, src, Assembler::AVX_256bit); break;\n-    case 64: vmovups(dst, src, Assembler::AVX_512bit); break;\n-    default: ShouldNotReachHere();\n+      case 4:  movflt(dst, src); break;\n+      case 8:  movdbl(dst, src); break;\n+      case 16: movups(dst, src); break;\n+      case 32: vmovups(dst, src, Assembler::AVX_256bit); break;\n+      case 64: vmovups(dst, src, Assembler::AVX_512bit); break;\n+      default: ShouldNotReachHere();\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2771,27 +2771,27 @@\n-    case T_BYTE: val->at(i) = con; break;\n-    case T_SHORT: {\n-      jshort c = con;\n-      memcpy(val->adr_at(offset), &c, sizeof(jshort));\n-      break;\n-    }\n-    case T_INT: {\n-      jint c = con;\n-      memcpy(val->adr_at(offset), &c, sizeof(jint));\n-      break;\n-    }\n-    case T_LONG: {\n-      jlong c = con;\n-      memcpy(val->adr_at(offset), &c, sizeof(jlong));\n-      break;\n-    }\n-    case T_FLOAT: {\n-      jfloat c = con;\n-      memcpy(val->adr_at(offset), &c, sizeof(jfloat));\n-      break;\n-    }\n-    case T_DOUBLE: {\n-      jdouble c = con;\n-      memcpy(val->adr_at(offset), &c, sizeof(jdouble));\n-      break;\n-    }\n-    default: assert(false, \"%s\", type2name(bt));\n+      case T_BYTE: val->at(i) = con; break;\n+      case T_SHORT: {\n+        jshort c = con;\n+        memcpy(val->adr_at(offset), &c, sizeof(jshort));\n+        break;\n+      }\n+      case T_INT: {\n+        jint c = con;\n+        memcpy(val->adr_at(offset), &c, sizeof(jint));\n+        break;\n+      }\n+      case T_LONG: {\n+        jlong c = con;\n+        memcpy(val->adr_at(offset), &c, sizeof(jlong));\n+        break;\n+      }\n+      case T_FLOAT: {\n+        jfloat c = con;\n+        memcpy(val->adr_at(offset), &c, sizeof(jfloat));\n+        break;\n+      }\n+      case T_DOUBLE: {\n+        jdouble c = con;\n+        memcpy(val->adr_at(offset), &c, sizeof(jdouble));\n+        break;\n+      }\n+      default: assert(false, \"%s\", type2name(bt));\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}