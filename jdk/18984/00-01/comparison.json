{"files":[{"patch":"@@ -1039,1 +1039,0 @@\n-  nmethod::ResultStatus result_status = nmethod::passed;\n@@ -1128,2 +1127,1 @@\n-                               compiler, CompLevel(task()->comp_level()),\n-                               result_status);\n+                               compiler, CompLevel(task()->comp_level()));\n@@ -1135,1 +1133,0 @@\n-      assert(result_status == nmethod::passed, \"sanity\");\n@@ -1190,7 +1187,2 @@\n-    \/\/ The CodeCache is full or out of memeory.\n-    if (result_status == nmethod::code_cache_full) {\n-      record_failure(\"code cache is full\");\n-    } else {\n-      assert(result_status == nmethod::out_of_memory, \"sanity\");\n-      record_failure(\"out of memory to allocate immutable data\");\n-    }\n+    \/\/ The CodeCache is full.\n+    record_failure(\"code cache is full\");\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -197,0 +197,5 @@\n+#if INCLUDE_JVMCI\n+    if (jvmci_data_size != 0) {\n+      tty->print_cr(\"   JVMCI data    = %u (%f%%)\", jvmci_data_size, (jvmci_data_size * 100.0f)\/total_nm_size);\n+    }\n+#endif\n@@ -219,3 +224,0 @@\n-    if (jvmci_data_size != 0) {\n-      tty->print_cr(\"   JVMCI data    = %u (%f%%)\", jvmci_data_size, (jvmci_data_size * 100.0f)\/total_immut_size);\n-    }\n@@ -1134,2 +1136,1 @@\n-  CompLevel comp_level,\n-  ResultStatus& result_status\n+  CompLevel comp_level\n@@ -1147,0 +1148,1 @@\n+  int nmethod_size = CodeBlob::allocation_size(code_buffer, sizeof(nmethod));\n@@ -1148,1 +1150,3 @@\n-  int jvmci_data_size = compiler->is_jvmci() ? jvmci_data->size() : 0;\n+    if (compiler->is_jvmci()) {\n+      nmethod_size += align_up(jvmci_data->size(), oopSize);\n+    }\n@@ -1150,1 +1154,0 @@\n-  int nmethod_size = CodeBlob::allocation_size(code_buffer, sizeof(nmethod));\n@@ -1159,1 +1162,0 @@\n-    + align_up(jvmci_data_size                   , oopSize)\n@@ -1168,2 +1170,2 @@\n-      result_status = out_of_memory;\n-      return nullptr; \/\/ OutOfMemory, bailout\n+      vm_exit_out_of_memory(immutable_data_size, OOM_MALLOC_ERROR, \"nmethod: no space for immutable data\");\n+      return nullptr;\n@@ -1218,3 +1220,0 @@\n-    result_status = passed;\n-  } else {\n-    result_status = code_cache_full;\n@@ -1320,1 +1319,6 @@\n-    DEBUG_ONLY( int data_end_offset = _metadata_offset + align_up(code_buffer->total_metadata_size(), wordSize); )\n+    int data_end_offset = _metadata_offset + align_up(code_buffer->total_metadata_size(), wordSize);\n+#if INCLUDE_JVMCI\n+    \/\/ jvmci_data_size is 0 in native wrapper but we need to set offset\n+    \/\/ to correctly calculate metadata_end address\n+    CHECKED_CAST(_jvmci_data_offset, uint16_t, data_end_offset);\n+#endif\n@@ -1327,3 +1331,3 @@\n-    _handler_table_offset    = _nul_chk_table_offset;\n-    _scopes_pcs_offset       = _handler_table_offset;\n-    _scopes_data_offset      = _scopes_pcs_offset;\n+    _handler_table_offset    = 0;\n+    _scopes_pcs_offset       = 0;\n+    _scopes_data_offset      = 0;\n@@ -1331,2 +1335,1 @@\n-    _speculations_offset     = _scopes_data_offset;\n-    _jvmci_data_offset       = _speculations_offset;\n+    _speculations_offset     = 0;\n@@ -1484,1 +1487,2 @@\n-      CHECKED_CAST(_unwind_handler_offset, int16_t, (_stub_offset - code_offset() - offsets->value(CodeOffsets::UnwindHandler)));\n+      int unwind_handler_offset = code_offset() + offsets->value(CodeOffsets::UnwindHandler);\n+      CHECKED_CAST(_unwind_handler_offset, int16_t, (_stub_offset - unwind_handler_offset));\n@@ -1489,2 +1493,11 @@\n-    DEBUG_ONLY( int data_end_offset = _metadata_offset + align_up(code_buffer->total_metadata_size(), wordSize); )\n-    assert((data_offset() + data_end_offset) <= nmethod_size, \"wrong nmethod's size: %d < %d\", nmethod_size, (data_offset() + data_end_offset));\n+    int metadata_end_offset = _metadata_offset + align_up(code_buffer->total_metadata_size(), wordSize);\n+\n+#if INCLUDE_JVMCI\n+    CHECKED_CAST(_jvmci_data_offset, uint16_t, metadata_end_offset);\n+    int jvmci_data_size   = compiler->is_jvmci() ? jvmci_data->size() : 0;\n+    DEBUG_ONLY( int data_end_offset = _jvmci_data_offset  + align_up(jvmci_data_size, oopSize); )\n+#else\n+    DEBUG_ONLY( int data_end_offset = metadata_end_offset; )\n+#endif\n+    assert((data_offset() + data_end_offset) <= nmethod_size, \"wrong nmethod's size: %d > %d\",\n+           (data_offset() + data_end_offset), nmethod_size);\n@@ -1507,3 +1520,1 @@\n-    _jvmci_data_offset    = _speculations_offset  + align_up(speculations_len, oopSize);\n-    int jvmci_data_size   = compiler->is_jvmci() ? jvmci_data->size() : 0;\n-    DEBUG_ONLY( int immutable_data_end_offset = _jvmci_data_offset  + align_up(jvmci_data_size, oopSize); )\n+    DEBUG_ONLY( int immutable_data_end_offset = _speculations_offset  + align_up(speculations_len, oopSize); )\n@@ -3081,0 +3092,6 @@\n+#if INCLUDE_JVMCI\n+  if (jvmci_data_size   () > 0) st->print_cr(\" JVMCI data     [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] = %d\",\n+                                             p2i(jvmci_data_begin()),\n+                                             p2i(jvmci_data_end()),\n+                                             jvmci_data_size());\n+#endif\n@@ -3110,4 +3127,0 @@\n-  if (jvmci_data_size   () > 0) st->print_cr(\" JVMCI data     [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] = %d\",\n-                                             p2i(jvmci_data_begin()),\n-                                             p2i(jvmci_data_end()),\n-                                             jvmci_data_size());\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":42,"deletions":29,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -237,0 +237,1 @@\n+  \/\/ Offsets in mutable data section\n@@ -239,0 +240,3 @@\n+#if INCLUDE_JVMCI\n+  uint16_t _jvmci_data_offset;\n+#endif\n@@ -248,1 +252,0 @@\n-  int      _jvmci_data_offset;\n@@ -473,6 +476,0 @@\n-  enum ResultStatus {\n-    passed,\n-    code_cache_full,\n-    out_of_memory\n-  };\n-\n@@ -493,2 +490,1 @@\n-                              CompLevel comp_level,\n-                              ResultStatus& result_status\n+                              CompLevel comp_level\n@@ -543,3 +539,3 @@\n-  oop*    oops_begin            () const { return (oop*)    data_begin(); }\n-  oop*    oops_end              () const { return (oop*)   (data_begin() + _metadata_offset)          ; }\n-\n+  \/\/ mutable data\n+  oop*    oops_begin            () const { return (oop*)        data_begin(); }\n+  oop*    oops_end              () const { return (oop*)       (data_begin() + _metadata_offset)      ; }\n@@ -547,0 +543,5 @@\n+#if INCLUDE_JVMCI\n+  Metadata** metadata_end       () const { return (Metadata**) (data_begin() + _jvmci_data_offset)    ; }\n+  address jvmci_data_begin      () const { return               data_begin() + _jvmci_data_offset     ; }\n+  address jvmci_data_end        () const { return               data_end(); }\n+#else\n@@ -548,0 +549,1 @@\n+#endif\n@@ -549,1 +551,1 @@\n-  \/\/ read-only data\n+  \/\/ immutable data\n@@ -565,3 +567,1 @@\n-  address speculations_end      () const { return           _immutable_data + _jvmci_data_offset   ; }\n-  address jvmci_data_begin      () const { return           _immutable_data + _jvmci_data_offset   ; }\n-  address jvmci_data_end        () const { return            immutable_data_end(); }\n+  address speculations_end      () const { return            immutable_data_end(); }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2178,1 +2178,0 @@\n-      nmethod::ResultStatus result_status;\n@@ -2187,1 +2186,1 @@\n-                                 compiler, comp_level, result_status,\n+                                 compiler, comp_level,\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -528,1 +528,0 @@\n-  private int getDependenciesOffset() { return (int) 0; }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/NMethod.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}