{"files":[{"patch":"@@ -739,1 +739,1 @@\n-         * @param length the number of bytes to use\n+         * @param length the number of bytes to read from the file channel\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -486,3 +486,1 @@\n-            ByteBuffer buffer = Utils.BUFSIZE > remaining\n-                    ? Utils.getBufferWithAtMost((int) remaining)\n-                    : Utils.getBuffer();\n+            ByteBuffer buffer = Utils.getBufferWithAtMost(remaining);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/RequestPublishers.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-    public static ByteBuffer getBufferWithAtMost(int maxCapacity) {\n+    public static ByteBuffer getBufferWithAtMost(long maxCapacity) {\n@@ -392,1 +392,1 @@\n-        int effectiveCapacity = Math.clamp(maxCapacity, 0, BUFSIZE);\n+        int effectiveCapacity = (int) Math.min(maxCapacity, BUFSIZE);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}