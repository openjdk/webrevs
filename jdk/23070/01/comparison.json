{"files":[{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6648816\n- * @summary REGRESSION: setting -Djava.security.debug=failure result in NPE\n- * in ACC\n- * @run main\/othervm -Djava.security.debug=failure FailureDebugOption\n- *\/\n-\n-import java.security.ProtectionDomain;\n-import java.security.AccessController;\n-import java.security.AccessControlException;\n-import java.security.BasicPermission;\n-\n-public class FailureDebugOption {\n-\n-   public static void main (String argv[]) throws Exception {\n-        try {\n-            AccessController.checkPermission(\n-                        new BasicPermission(\"no such permission\"){});\n-        } catch (NullPointerException npe) {\n-           throw new Exception(\"Unexpected NullPointerException for security\" +\n-                        \" debug option, -Djava.security.debug=failure\");\n-        } catch (AccessControlException ace) {\n-        }\n-   }\n-}\n","filename":"test\/jdk\/java\/security\/AccessControlContext\/FailureDebugOption.java","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,0 @@\n-import java.security.cert.CertPathParameters;\n-import java.security.cert.CertPathBuilderResult;\n-import java.security.cert.CertPathBuilderSpi;\n@@ -37,1 +34,0 @@\n-import java.security.AccessController;\n","filename":"test\/jdk\/java\/security\/cert\/CertPathBuilder\/GetInstance.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.security.Policy;\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -42,2 +40,1 @@\n-        String os = AccessController.doPrivileged(\n-                    (PrivilegedAction<String>)() -> System.getProperty(\"os.name\"));\n+        String os = System.getProperty(\"os.name\");\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/CertChainUnclosed.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,3 +52,1 @@\n-        GetAVAConstructor a = new GetAVAConstructor();\n-        java.security.AccessController.doPrivileged(a);\n-        Constructor c = a.getCons();\n+        Constructor c = getAVAConstructor();\n@@ -75,3 +73,0 @@\n-}\n-\n-class GetAVAConstructor implements java.security.PrivilegedExceptionAction {\n@@ -79,4 +74,1 @@\n-    private Class avaClass = null;\n-    private Constructor avaCons = null;\n-\n-    public Object run() throws Exception {\n+    static Constructor getAVAConstructor() throws Exception {\n@@ -84,1 +76,1 @@\n-            avaClass = Class.forName(\"sun.security.x509.AVA\");\n+            Class avaClass = Class.forName(\"sun.security.x509.AVA\");\n@@ -93,1 +85,1 @@\n-                        avaCons = cons[i];\n+                        Constructor avaCons = cons[i];\n@@ -95,1 +87,1 @@\n-                        break;\n+                        return avaCons;\n@@ -99,1 +91,1 @@\n-\n+            return null;\n@@ -104,1 +96,0 @@\n-        return avaCons;\n@@ -106,5 +97,0 @@\n-\n-    public Constructor getCons(){\n-        return avaCons;\n-    }\n-\n","filename":"test\/jdk\/sun\/security\/x509\/AVA\/AVAEqualsHashCode.java","additions":7,"deletions":21,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,1 @@\n-        final String proto = protocols.get();\n-\n+        String proto = protocols.get();\n@@ -61,0 +60,1 @@\n+                    break;\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}