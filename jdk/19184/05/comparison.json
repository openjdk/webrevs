{"files":[{"patch":"@@ -101,1 +101,1 @@\n-                    restoreEcho = echo(false);\n+                    setEcho(false);\n@@ -114,2 +114,3 @@\n-                        if (restoreEcho)\n-                            restoreEcho = echo(true);\n+                        if (restoreEcho) {\n+                            setEcho(true);\n+                        }\n@@ -128,1 +129,1 @@\n-                        } catch (IOException x) {\n+                        } catch (IOException _) {\n@@ -153,1 +154,1 @@\n-                                            echo(true);\n+                                            setEcho(true);\n@@ -155,1 +156,1 @@\n-                                    } catch (IOException x) { }\n+                                    } catch (IOException _) { }\n@@ -158,1 +159,1 @@\n-        } catch (IllegalStateException e) {\n+        } catch (IllegalStateException _) {\n@@ -188,1 +189,1 @@\n-    private boolean restoreEcho;\n+    private final boolean restoreEcho;\n@@ -223,3 +224,7 @@\n-    \/*\n-     * Sets the console echo status to {@code on} and returns the previous\n-     * console on\/off status.\n+    \/**\n+     * {@return true if the console echo status is on}\n+     *\/\n+    private static native boolean getEcho() throws IOException;\n+\n+    \/**\n+     * Sets the console echo status to {@code on}\n@@ -228,1 +233,0 @@\n-     * @return true if the previous console echo status is on\n@@ -230,1 +234,1 @@\n-    private static native boolean echo(boolean on) throws IOException;\n+    private static native void setEcho(boolean on) throws IOException;\n@@ -367,0 +371,5 @@\n+        var echo = false;\n+        try {\n+            echo = getEcho();\n+        } catch (IOException _) {}\n+        restoreEcho = echo;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/io\/JdkConsoleImpl.java","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,14 @@\n-Java_jdk_internal_io_JdkConsoleImpl_echo(JNIEnv *env,\n+Java_jdk_internal_io_JdkConsoleImpl_getEcho(JNIEnv *env,\n+                          jclass cls)\n+{\n+    struct termios tio;\n+    int tty = fileno(stdin);\n+    if (tcgetattr(tty, &tio) == -1) {\n+        JNU_ThrowIOExceptionWithLastError(env, \"tcgetattr failed\");\n+        return JNI_FALSE;\n+    }\n+    return (tio.c_lflag & ECHO) != 0;\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_jdk_internal_io_JdkConsoleImpl_setEcho(JNIEnv *env,\n@@ -41,1 +54,0 @@\n-    jboolean old;\n@@ -45,1 +57,1 @@\n-        return !on;\n+        return;\n@@ -47,1 +59,0 @@\n-    old = (tio.c_lflag & ECHO) != 0;\n@@ -56,1 +67,0 @@\n-    return old;\n","filename":"src\/java.base\/unix\/native\/libjava\/JdkConsoleImpl_md.c","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-Java_jdk_internal_io_JdkConsoleImpl_echo(JNIEnv *env, jclass cls, jboolean on)\n+Java_jdk_internal_io_JdkConsoleImpl_getEcho(JNIEnv *env, jclass cls)\n@@ -38,1 +38,0 @@\n-    jboolean old;\n@@ -43,1 +42,14 @@\n-        return !on;\n+        return JNI_FALSE;\n+    }\n+    return (fdwMode & ENABLE_ECHO_INPUT) != 0;\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_jdk_internal_io_JdkConsoleImpl_setEcho(JNIEnv *env, jclass cls, jboolean on)\n+{\n+    DWORD fdwMode;\n+    HANDLE hStdIn = GetStdHandle(STD_INPUT_HANDLE);\n+\n+    if (! GetConsoleMode(hStdIn, &fdwMode)) {\n+        JNU_ThrowIOExceptionWithLastError(env, \"GetConsoleMode failed\");\n+        return;\n@@ -45,1 +57,0 @@\n-    old = (fdwMode & ENABLE_ECHO_INPUT) != 0;\n@@ -54,1 +65,0 @@\n-    return old;\n","filename":"src\/java.base\/windows\/native\/libjava\/JdkConsoleImpl_md.c","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"}]}