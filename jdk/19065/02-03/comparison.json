{"files":[{"patch":"@@ -118,1 +118,1 @@\n-  product(bool, UseZvbb, false, EXPERIMENTAL, \"Use Zvbb instructions\")                         \\\n+  product(bool, UseZvbb, false, EXPERIMENTAL, \"Use Zvbb instructions\")           \\\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3793,3 +3793,3 @@\n-instruct vpopcount_mask(vReg dst_src, vRegMask_V0 v0) %{\n-  match(Set dst_src (PopCountVI dst_src v0));\n-  match(Set dst_src (PopCountVL dst_src v0));\n+instruct vpopcount_mask(vReg dst, vReg src, vRegMask_V0 v0) %{\n+  match(Set dst (PopCountVI src v0));\n+  match(Set dst (PopCountVL src v0));\n@@ -3797,1 +3797,1 @@\n-  format %{ \"vcpop_v $dst_src, $dst_src, $v0\\t# vcpop_v with mask\" %}\n+  format %{ \"vcpop_v $dst, $src, $v0\\t# vcpop_v with mask\" %}\n@@ -3802,1 +3802,1 @@\n-    __ vcpop_v(as_VectorRegister($dst_src$$reg), as_VectorRegister($dst_src$$reg), Assembler::v0_t);\n+    __ vcpop_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg), Assembler::v0_t);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -178,3 +178,0 @@\n-  if (is_set(RISCV_HWPROBE_KEY_IMA_EXT_0, RISCV_HWPROBE_EXT_ZVBB)) {\n-    VM_Version::ext_Zvbb.enable_feature();\n-  }\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/riscv_hwprobe.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}