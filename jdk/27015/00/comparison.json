{"files":[{"patch":"@@ -4572,3 +4572,10 @@\n-                    Symbol sym2 = (sym.flags() & Flags.PRIVATE) != 0 ?\n-                        rs.new AccessError(env, site, sym) :\n-                                sym;\n+                    \/\/ JLS 4.9 specifies the members are derived by inheritance.\n+                    \/\/ We skip inducing a whole class by filtering members that\n+                    \/\/ can never be inherited:\n+                    \/\/ 1. Private members\n+                    \/\/ 2. Interface static methods\n+                    Symbol sym2 = sym.isPrivate()\n+                        ? rs.new AccessError(env, site, sym)\n+                        : (sym.owner.isInterface() && sym.kind == MTH && (sym.flags() & STATIC) != 0)\n+                            ? rs.new SymbolNotFoundError(ABSENT_MTH)\n+                            : sym;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,17 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8365676\n+ * @summary Interface static methods should not be inherited by type variables\n+ * @compile\/fail\/ref=T8365676.out -XDrawDiagnostics T8365676.java\n+ *\/\n+\n+import java.text.Collator;\n+import java.util.Comparator;\n+\n+class T8365676 {\n+    <T extends Comparator<Integer>> void test() {\n+        Comparator.reverseOrder();\n+        Collator.reverseOrder(); \/\/ Fails\n+        T.reverseOrder(); \/\/ Should fail\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/8365676\/T8365676.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+T8365676.java:14:17: compiler.err.cant.resolve.location.args: kindname.method, reverseOrder, , , (compiler.misc.location: kindname.class, java.text.Collator, null)\n+T8365676.java:15:10: compiler.err.cant.resolve.location.args: kindname.method, reverseOrder, , , (compiler.misc.location: kindname.type.variable.bound, T, null)\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/8365676\/T8365676.out","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}