{"files":[{"patch":"@@ -4572,3 +4572,13 @@\n-                    Symbol sym2 = (sym.flags() & Flags.PRIVATE) != 0 ?\n-                        rs.new AccessError(env, site, sym) :\n-                                sym;\n+                    \/\/ JLS 4.9 specifies the members are derived by inheritance.\n+                    \/\/ We skip inducing a whole class by filtering members that\n+                    \/\/ can never be inherited:\n+                    Symbol sym2;\n+                    if (sym.isPrivate()) {\n+                        \/\/ Private members\n+                        sym2 = rs.new AccessError(env, site, sym);\n+                    } else if (sym.owner.isInterface() && sym.kind == MTH && (sym.flags() & STATIC) != 0) {\n+                        \/\/ Interface static methods\n+                        sym2 = rs.new SymbolNotFoundError(ABSENT_MTH);\n+                    } else {\n+                        sym2 = sym;\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,20 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8365676\n+ * @summary Interface static methods should not be inherited by type variables\n+ * @compile\/fail\/ref=T8365676.out -XDrawDiagnostics T8365676.java\n+ *\/\n+\n+import java.text.Collator;\n+import java.util.Comparator;\n+\n+class T8365676 {\n+    \/\/ T and P should have equivalent members\n+    <T extends Comparator<Object>, P extends Object & Comparator<Object>>\n+    void test() {\n+        Comparator.reverseOrder();\n+        Collator.reverseOrder(); \/\/ Fails\n+        P.reverseOrder(); \/\/ Fails\n+        T.reverseOrder(); \/\/ Should fail\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/8365676\/T8365676.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+T8365676.java:16:17: compiler.err.cant.resolve.location.args: kindname.method, reverseOrder, , , (compiler.misc.location: kindname.class, java.text.Collator, null)\n+T8365676.java:17:10: compiler.err.cant.resolve.location.args: kindname.method, reverseOrder, , , (compiler.misc.location: kindname.type.variable.bound, java.lang.Object&java.util.Comparator<java.lang.Object>, null)\n+T8365676.java:18:10: compiler.err.cant.resolve.location.args: kindname.method, reverseOrder, , , (compiler.misc.location: kindname.type.variable.bound, T, null)\n+3 errors\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/8365676\/T8365676.out","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"}]}