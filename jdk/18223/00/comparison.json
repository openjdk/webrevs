{"files":[{"patch":"@@ -110,5 +110,6 @@\n-class HasScavengableOops: public OopClosure {\n-  BoolObjectClosure* _is_scavengable;\n-  bool               _found;\n-public:\n-  HasScavengableOops(BoolObjectClosure* is_scavengable, nmethod* nm) :\n+bool ScavengableNMethods::has_scavengable_oops(nmethod* nm) {\n+  struct HasScavengableOops: public OopClosure {\n+    BoolObjectClosure* _is_scavengable;\n+    bool               _found;\n+\n+    explicit HasScavengableOops(BoolObjectClosure* is_scavengable) :\n@@ -118,4 +119,4 @@\n-  bool found() { return _found; }\n-  virtual void do_oop(oop* p) {\n-    if (!_found && *p != nullptr && _is_scavengable->do_object_b(*p)) {\n-      _found = true;\n+    virtual void do_oop(oop* p) {\n+      if (!_found && *p != nullptr && _is_scavengable->do_object_b(*p)) {\n+        _found = true;\n+      }\n@@ -123,3 +124,2 @@\n-  }\n-  virtual void do_oop(narrowOop* p) { ShouldNotReachHere(); }\n-};\n+    virtual void do_oop(narrowOop* p) { ShouldNotReachHere(); }\n+  } cl {_is_scavengable};\n@@ -127,2 +127,0 @@\n-bool ScavengableNMethods::has_scavengable_oops(nmethod* nm) {\n-  HasScavengableOops cl(_is_scavengable, nm);\n@@ -130,1 +128,1 @@\n-  return cl.found();\n+  return cl._found;\n","filename":"src\/hotspot\/share\/gc\/shared\/scavengableNMethods.cpp","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}