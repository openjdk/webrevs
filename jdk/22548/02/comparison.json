{"files":[{"patch":"@@ -46,1 +46,1 @@\n- *       {@linkplain getPolicy getPolicy} method has been changed to always\n+ *       {@linkplain #getPolicy getPolicy} method has been changed to always\n","filename":"src\/java.base\/share\/classes\/java\/security\/Policy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import jdk.internal.access.JavaSecurityAccess;\n-import jdk.internal.access.SharedSecrets;\n-\n@@ -54,33 +51,0 @@\n-    private static class JavaSecurityAccessImpl implements JavaSecurityAccess {\n-\n-        private JavaSecurityAccessImpl() {\n-        }\n-\n-        @SuppressWarnings(\"removal\")\n-        @Override\n-        public <T> T doIntersectionPrivilege(\n-                PrivilegedAction<T> action,\n-                final AccessControlContext stack,\n-                final AccessControlContext context) {\n-            if (action == null) {\n-                throw new NullPointerException();\n-            }\n-\n-            return AccessController.doPrivileged(action);\n-        }\n-\n-        @SuppressWarnings(\"removal\")\n-        @Override\n-        public <T> T doIntersectionPrivilege(\n-                PrivilegedAction<T> action,\n-                AccessControlContext context) {\n-            return doIntersectionPrivilege(action,\n-                AccessController.getContext(), context);\n-        }\n-    }\n-\n-    static {\n-        \/\/ Set up JavaSecurityAccess in SharedSecrets\n-        SharedSecrets.setJavaSecurityAccess(new JavaSecurityAccessImpl());\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/security\/ProtectionDomain.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.access;\n-\n-import java.security.AccessControlContext;\n-import java.security.PrivilegedAction;\n-\n-public interface JavaSecurityAccess {\n-\n-    <T> T doIntersectionPrivilege(PrivilegedAction<T> action,\n-                                  @SuppressWarnings(\"removal\") AccessControlContext stack,\n-                                  @SuppressWarnings(\"removal\") AccessControlContext context);\n-\n-    <T> T doIntersectionPrivilege(PrivilegedAction<T> action,\n-                                  @SuppressWarnings(\"removal\") AccessControlContext context);\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaSecurityAccess.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -42,2 +42,0 @@\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n@@ -45,1 +43,0 @@\n-import java.security.ProtectionDomain;\n@@ -92,1 +89,0 @@\n-    private static JavaSecurityAccess javaSecurityAccess;\n@@ -316,13 +312,0 @@\n-    public static void setJavaSecurityAccess(JavaSecurityAccess jsa) {\n-        javaSecurityAccess = jsa;\n-    }\n-\n-    public static JavaSecurityAccess getJavaSecurityAccess() {\n-        var access = javaSecurityAccess;\n-        if (access == null) {\n-            ensureClassInitialized(ProtectionDomain.class);\n-            access = javaSecurityAccess;\n-        }\n-        return access;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/SharedSecrets.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"}]}