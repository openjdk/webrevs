{"files":[{"patch":"@@ -235,1 +235,1 @@\n-        } catch (ClassNotFoundException | SecurityException | NullPointerException e) {\n+        } catch (ClassNotFoundException | NullPointerException e) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.util.stream.Stream;\n-\n@@ -73,1 +71,1 @@\n-                return checkFile(createShellFolder(homeDir));\n+                return createShellFolder(homeDir);\n@@ -75,1 +73,1 @@\n-                return checkFile(homeDir);\n+                return homeDir;\n@@ -79,1 +77,1 @@\n-            return checkFiles(File.listRoots());\n+            return File.listRoots();\n@@ -89,1 +87,1 @@\n-            return checkFiles(new File[] { (File)get(\"fileChooserDefaultFolder\") });\n+            return new File[] { (File)get(\"fileChooserDefaultFolder\") };\n@@ -95,32 +93,0 @@\n-    private static File checkFile(File f) {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        return (sm == null || f == null) ? f : checkFile(f, sm);\n-    }\n-\n-    private static File checkFile(File f, @SuppressWarnings(\"removal\") SecurityManager sm) {\n-        try {\n-            sm.checkRead(f.getPath());\n-            if (f instanceof ShellFolder) {\n-                ShellFolder sf = (ShellFolder)f;\n-                if (sf.isLink()) {\n-                    sm.checkRead(sf.getLinkLocation().getPath());\n-                }\n-            }\n-            return f;\n-        } catch (SecurityException | FileNotFoundException e) {\n-            return null;\n-        }\n-    }\n-\n-    private static File[] checkFiles(File[] fs) {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        return (sm == null || fs == null) ? fs : checkFiles(Stream.of(fs), sm);\n-    }\n-\n-    private static File[] checkFiles(Stream<File> fs, @SuppressWarnings(\"removal\") SecurityManager sm) {\n-        return fs.filter(f -> f != null && checkFile(f, sm) != null)\n-                 .toArray(File[]::new);\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolderManager.java","additions":4,"deletions":38,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2122,14 +2122,9 @@\n-        try {\n-            if (f instanceof ShellFolder) {\n-                return f.canWrite();\n-            } else {\n-                if (usesShellFolder(getFileChooser())) {\n-                    try {\n-                        return ShellFolder.getShellFolder(f).canWrite();\n-                    } catch (FileNotFoundException ex) {\n-                        \/\/ File doesn't exist\n-                        return false;\n-                    }\n-                } else {\n-                    \/\/ Ordinary file\n-                    return f.canWrite();\n+        if (f instanceof ShellFolder) {\n+            return f.canWrite();\n+        } else {\n+            if (usesShellFolder(getFileChooser())) {\n+                try {\n+                    return ShellFolder.getShellFolder(f).canWrite();\n+                } catch (FileNotFoundException ex) {\n+                    \/\/ File doesn't exist\n+                    return false;\n@@ -2137,0 +2132,3 @@\n+            } else {\n+                \/\/ Ordinary file\n+                return f.canWrite();\n@@ -2138,2 +2136,0 @@\n-        } catch (SecurityException e) {\n-            return false;\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -669,7 +669,0 @@\n-        if (path != null) {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager security = System.getSecurityManager();\n-            if (security != null) {\n-                security.checkRead(path);\n-            }\n-        }\n@@ -753,5 +746,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkRead(getPath());\n-        }\n@@ -816,1 +804,1 @@\n-            return Win32ShellFolderManager2.checkFiles(files);\n+            return files;\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolder2.java","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import java.util.stream.Stream;\n@@ -170,3 +169,0 @@\n-            } catch (final SecurityException ignored) {\n-                \/\/ Ignore, the message may have sensitive information, not\n-                \/\/ accessible other ways\n@@ -186,3 +182,0 @@\n-            } catch (final SecurityException ignored) {\n-                \/\/ Ignore, the message may have sensitive information, not\n-                \/\/ accessible other ways\n@@ -205,3 +198,0 @@\n-            } catch (final SecurityException ignored) {\n-                \/\/ Ignore, the message may have sensitive information, not\n-                \/\/ accessible other ways\n@@ -221,3 +211,0 @@\n-            } catch (final SecurityException ignored) {\n-                \/\/ Ignore, the message may have sensitive information, not\n-                \/\/ accessible other ways\n@@ -247,3 +234,0 @@\n-            } catch (final SecurityException ignored) {\n-                \/\/ Ignore, the message may have sensitive information, not\n-                \/\/ accessible other ways\n@@ -290,1 +274,1 @@\n-            return checkFile(file);\n+            return file;\n@@ -301,1 +285,1 @@\n-            return checkFiles(roots);\n+            return roots;\n@@ -305,1 +289,1 @@\n-            if (desktop != null && checkFile(desktop) != null) {\n+            if (desktop != null) {\n@@ -316,1 +300,1 @@\n-                File[] secondLevelFolders = checkFiles(desktop.listFiles());\n+                File[] secondLevelFolders = desktop.listFiles();\n@@ -324,1 +308,1 @@\n-                            File[] thirdLevelFolders = checkFiles(folder.listFiles());\n+                            File[] thirdLevelFolders = folder.listFiles();\n@@ -334,1 +318,1 @@\n-                return checkFiles(folders);\n+                return folders.toArray(new File[folders.size()]);\n@@ -377,1 +361,1 @@\n-            return checkFiles(folders);\n+            return folders.toArray(new File[folders.size()]);\n@@ -424,47 +408,0 @@\n-    private static File checkFile(File file) {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        return (sm == null || file == null) ? file : checkFile(file, sm);\n-    }\n-\n-    private static File checkFile(File file, @SuppressWarnings(\"removal\") SecurityManager sm) {\n-        try {\n-            sm.checkRead(file.getPath());\n-\n-            if (file instanceof Win32ShellFolder2) {\n-                Win32ShellFolder2 f = (Win32ShellFolder2)file;\n-                if (f.isLink()) {\n-                    Win32ShellFolder2 link = (Win32ShellFolder2)f.getLinkLocation();\n-                    if (link != null)\n-                        sm.checkRead(link.getPath());\n-                }\n-            }\n-            return file;\n-        } catch (SecurityException se) {\n-            return null;\n-        }\n-    }\n-\n-    static File[] checkFiles(File[] files) {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm == null || files == null || files.length == 0) {\n-            return files;\n-        }\n-        return checkFiles(Arrays.stream(files), sm);\n-    }\n-\n-    private static File[] checkFiles(List<File> files) {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm == null || files.isEmpty()) {\n-            return files.toArray(new File[files.size()]);\n-        }\n-        return checkFiles(files.stream(), sm);\n-    }\n-\n-    private static File[] checkFiles(Stream<File> filesStream, @SuppressWarnings(\"removal\") SecurityManager sm) {\n-        return filesStream.filter((file) -> checkFile(file, sm) != null)\n-                .toArray(File[]::new);\n-    }\n-\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolderManager2.java","additions":7,"deletions":70,"binary":false,"changes":77,"status":"modified"}]}