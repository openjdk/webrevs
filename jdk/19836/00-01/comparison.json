{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.source.tree.LambdaExpressionTree.BodyKind;\n@@ -3893,2 +3894,1 @@\n-        Type expectedRet = types.findDescriptorType(tree.type).getReturnType();\n-        int prevVariableIndex = variableIndex;\n+        Type prevRestype = currentRestype;\n@@ -3896,13 +3896,4 @@\n-            variableIndex = 0;\n-            if (tree.body.hasTag(JCTree.Tag.BLOCK)) {\n-                Type prevRestype = currentRestype;\n-                try {\n-                    currentRestype = expectedRet;\n-                    super.visitLambda(tree);\n-                } finally {\n-                    currentRestype = prevRestype;\n-                }\n-            } else {\n-                tree.body = translate((JCExpression) tree.body, expectedRet);\n-            }\n-            result = tree;\n+            currentRestype = types.findDescriptorType(tree.type).getReturnType();\n+            tree.body = tree.getBodyKind() == BodyKind.EXPRESSION ?\n+                    translate((JCExpression) tree.body, currentRestype) :\n+                    translate(tree.body);\n@@ -3910,1 +3901,1 @@\n-            variableIndex = prevVariableIndex;\n+            currentRestype = prevRestype;\n@@ -3912,0 +3903,1 @@\n+        result = tree;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"}]}