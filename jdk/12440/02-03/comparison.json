{"files":[{"patch":"@@ -132,0 +132,55 @@\n+    \/\/ It would be legal to vectorize this one but it's not currently\n+    @Test\n+    \/\/@IR(counts = { IRNode.LOAD_VECTOR, \">=1\", IRNode.STORE_VECTOR, \">=1\" })\n+    public static void testByteByte2(byte[] dest, byte[] src) {\n+        for (int i = 1; i < src.length \/ 8; i++) {\n+            UNSAFE.putLongUnaligned(dest, UNSAFE.ARRAY_BYTE_BASE_OFFSET + 8 * (i - 1), src[i]);\n+        }\n+    }\n+\n+    @Run(test = \"testByteByte2\")\n+    public static void testByteByte2_runner() {\n+        testByteByte2(byteArray, byteArray);\n+    }\n+\n+    @Test\n+    @IR(failOn = { IRNode.LOAD_VECTOR, IRNode.STORE_VECTOR })\n+    public static void testByteByte3(byte[] dest, byte[] src) {\n+        for (int i = 0; i < src.length \/ 8 - 1; i++) {\n+            UNSAFE.putLongUnaligned(dest, UNSAFE.ARRAY_BYTE_BASE_OFFSET + 8 * (i + 1), src[i]);\n+        }\n+    }\n+\n+    @Run(test = \"testByteByte3\")\n+    public static void testByteByte3_runner() {\n+        testByteByte3(byteArray, byteArray);\n+    }\n+\n+    @Test\n+    @IR(failOn = { IRNode.LOAD_VECTOR, IRNode.STORE_VECTOR })\n+    public static void testByteByte4(byte[] dest, byte[] src, int start, int stop) {\n+        for (int i = start; i < stop; i++) {\n+            UNSAFE.putLongUnaligned(dest, 8 * i + baseOffset, src[i]);\n+        }\n+    }\n+\n+    @Run(test = \"testByteByte4\")\n+    public static void testByteByte4_runner() {\n+        baseOffset = UNSAFE.ARRAY_BYTE_BASE_OFFSET;\n+        testByteByte4(byteArray, byteArray, 1, size);\n+    }\n+\n+    @Test\n+    @IR(failOn = { IRNode.LOAD_VECTOR, IRNode.STORE_VECTOR })\n+    public static void testByteByte5(byte[] dest, byte[] src, int start, int stop) {\n+        for (int i = start; i < stop; i++) {\n+            UNSAFE.putLongUnaligned(dest, UNSAFE.ARRAY_BYTE_BASE_OFFSET + 8 * (i + baseOffset), src[i]);\n+        }\n+    }\n+\n+    @Run(test = \"testByteByte5\")\n+    public static void testByteByte5_runner() {\n+        baseOffset = 1;\n+        testByteByte5(byteArray, byteArray, 0, size-1);\n+    }\n+    \n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizationMismatchedAccess.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}