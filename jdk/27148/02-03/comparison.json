{"files":[{"patch":"@@ -2301,1 +2301,5 @@\n-        \/\/ Add one more digit if n < 0 to reduce the error of computing the root's inverse\n+        \/* If n < 0 and no halfway rounding, the root's inversion gives an error of 1 ulp,\n+         * so we add one more digit to the integer root, so that it has an error of 0.1 ulps,\n+         * and therefore the error of the inverted root is 1+0.1 ulps.\n+         * Same reasoning for halfway rounding yields to half of the error just found.\n+         *\/\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}