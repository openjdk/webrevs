{"files":[{"patch":"@@ -2295,0 +2295,1 @@\n+        \/\/ Compute and round the root\n@@ -2338,4 +2339,0 @@\n-            \/\/ Adjust to requested precision and preferred\n-            \/\/ scale as appropriate.\n-            if (result.scale > preferredScale) \/\/ else can't increase result's precision to fit the preferred scale\n-                result = stripZerosToMatchScale(result.intVal, result.intCompact, result.scale, preferredScale);\n@@ -2351,0 +2348,6 @@\n+\n+            \/\/ Ensure result's precision is exactly resPrec\n+            final int precDiff = resPrec - result.precision();\n+            if (precDiff != 0)\n+                result = result.setScale(checkScaleNonZero((long) result.scale + precDiff));\n+\n@@ -2399,4 +2402,0 @@\n-\n-            \/\/ Adjust to requested precision and preferred\n-            \/\/ scale as appropriate.\n-            result = result.adjustToPreferredScale(preferredScale, mc.precision);\n@@ -2404,0 +2403,4 @@\n+        \/\/ Adjust to requested precision and preferred scale as appropriate.\n+        if (result.scale > preferredScale) \/\/ else can't increase result's precision to fit the preferred scale\n+            result = stripZerosToMatchScale(result.intVal, result.intCompact, result.scale, preferredScale);\n+\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}