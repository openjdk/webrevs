{"files":[{"patch":"@@ -143,2 +143,1 @@\n-            FileUtils.createDirectoryJunction(junction.toString(),\n-                                              dir.toString());\n+            FileUtils.createWinDirectoryJunction(junction, dir);\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/Basic.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -69,0 +69,7 @@\n+    private static void loadNativeLib() {\n+        if (!nativeLibLoaded) {\n+            System.loadLibrary(\"FileUtils\");\n+            nativeLibLoaded = true;\n+        }\n+    }\n+\n@@ -400,5 +407,2 @@\n-            if (!nativeLibLoaded) {\n-                System.loadLibrary(\"FileUtils\");\n-                nativeLibLoaded = true;\n-            }\n-            return getWinProcessHandleCount();\n+            loadNativeLib();\n+            return getWinProcessHandleCount0();\n@@ -448,2 +452,2 @@\n-    \/\/ Create a link from \"junction\" to the real path of \"target\"\n-    public static boolean createDirectoryJunction(String junction, String target)\n+    \/\/ Create a directory junction with the specified target\n+    public static boolean createWinDirectoryJunction(Path junction, Path target)\n@@ -452,0 +456,2 @@\n+        assert IS_WINDOWS;\n+\n@@ -453,1 +459,1 @@\n-        target = new File(target).getAbsolutePath().toString();\n+        target = target.toRealPath();\n@@ -455,11 +461,3 @@\n-        \/\/ Create a directory junction or a symbolic link\n-        if (IS_WINDOWS) {\n-            if (!nativeLibLoaded) {\n-                System.loadLibrary(\"FileUtils\");\n-                nativeLibLoaded = true;\n-            }\n-            return createWinDirectoryJunction(junction, target);\n-        } else {\n-            Files.createSymbolicLink(Path.of(junction), Path.of(target));\n-            return Files.exists(Path.of(junction), LinkOption.NOFOLLOW_LINKS);\n-        }\n+        \/\/ Create a directory junction\n+        loadNativeLib();\n+        return createWinDirectoryJunction0(junction.toString(), target.toString());\n@@ -468,2 +466,2 @@\n-    private static native long getWinProcessHandleCount();\n-    private static native boolean createWinDirectoryJunction(String junction,\n+    private static native long getWinProcessHandleCount0();\n+    private static native boolean createWinDirectoryJunction0(String junction,\n","filename":"test\/lib\/jdk\/test\/lib\/util\/FileUtils.java","additions":19,"deletions":21,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-Java_jdk_test_lib_util_FileUtils_getWinProcessHandleCount\n+Java_jdk_test_lib_util_FileUtils_getWinProcessHandleCount0\n@@ -99,1 +99,1 @@\n-Java_jdk_test_lib_util_FileUtils_createWinDirectoryJunction\n+Java_jdk_test_lib_util_FileUtils_createWinDirectoryJunction0\n","filename":"test\/lib\/jdk\/test\/lib\/util\/libFileUtils.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}