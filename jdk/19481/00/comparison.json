{"files":[{"patch":"@@ -2794,0 +2794,15 @@\n+\/\/ In Matcher::scalable_predicate_reg_slots,\n+\/\/ we assume each predicate register is one-eighth of the size of\n+\/\/ scalable vector register, one mask bit per vector byte.\n+void C2_MacroAssembler::spill_vmask(VectorRegister v, int offset) {\n+  vsetvli_helper(T_BYTE, MaxVectorSize >> 3);\n+  add(t0, sp, offset);\n+  vse8_v(v, t0);\n+}\n+\n+void C2_MacroAssembler::unspill_vmask(VectorRegister v, int offset) {\n+  vsetvli_helper(T_BYTE, MaxVectorSize >> 3);\n+  add(t0, sp, offset);\n+  vle8_v(v, t0);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -254,8 +254,1 @@\n-  \/\/ In Matcher::scalable_predicate_reg_slots,\n-  \/\/ we assume each predicate register is one-eighth of the size of\n-  \/\/ scalable vector register, one mask bit per vector byte.\n-  void spill_vmask(VectorRegister v, int offset){\n-    vsetvli_helper(T_BYTE, MaxVectorSize >> 3);\n-    add(t0, sp, offset);\n-    vse8_v(v, t0);\n-  }\n+  void spill_vmask(VectorRegister v, int offset);\n@@ -263,5 +256,1 @@\n-  void unspill_vmask(VectorRegister v, int offset){\n-    vsetvli_helper(T_BYTE, MaxVectorSize >> 3);\n-    add(t0, sp, offset);\n-    vle8_v(v, t0);\n-  }\n+  void unspill_vmask(VectorRegister v, int offset);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"}]}