{"files":[{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8154364 8365626 8366254\n+ * @bug 8154364 8365626 8366254 8368156\n@@ -67,1 +67,0 @@\n-    private List<Path> allFiles;\n@@ -73,1 +72,2 @@\n-        home = Files.createTempDirectory(\"TestIsSameFile\");\n+        Path cwd = Path.of(System.getProperty(\"user.dir\"));\n+        home = Files.createTempDirectory(cwd, \"TestISameFile\");\n@@ -75,5 +75,4 @@\n-        allFiles = new ArrayList();\n-        allFiles.add(a = home.resolve(\"a\"));\n-        allFiles.add(aa = home.resolve(\"a\"));\n-        allFiles.add(b = home.resolve(\"b\"));\n-        allFiles.add(c = home.resolve(\"c\"));\n+        a = home.resolve(\"a\");\n+        aa = home.resolve(\"a\");\n+        b = home.resolve(\"b\");\n+        c = home.resolve(\"c\");\n@@ -89,1 +88,1 @@\n-        for (Path p : allFiles)\n+        for (Path p : Files.list(home).toList())\n@@ -156,3 +155,5 @@\n-        FileSystem zipfs = FileSystems.newFileSystem(b);\n-        List<Arguments> list = new ArrayList<Arguments>();\n-        list.add(Arguments.of(false, a, zipfs.getPath(b.toString())));\n+        List<Arguments> list;\n+        try (FileSystem zipfs = FileSystems.newFileSystem(b)) {\n+            list = new ArrayList<Arguments>();\n+            list.add(Arguments.of(false, a, zipfs.getPath(b.toString())));\n+        }\n@@ -260,1 +261,0 @@\n-        allFiles.add(target);\n@@ -262,1 +262,1 @@\n-        Path L2 = Path.of(\"link2\");\n+        Path L2 = home.resolve(\"link2\");\n@@ -264,1 +264,0 @@\n-        allFiles.add(L2);\n@@ -266,1 +265,1 @@\n-        Path L1 = Path.of(\"link1\");\n+        Path L1 = home.resolve(\"link1\");\n@@ -268,1 +267,0 @@\n-        allFiles.add(L1);\n@@ -270,1 +268,1 @@\n-        Path L4 = Path.of(\"link4\");\n+        Path L4 = home.resolve(\"link4\");\n@@ -272,1 +270,0 @@\n-        allFiles.add(L4);\n@@ -274,1 +271,1 @@\n-        Path L3 = Path.of(\"link3\");\n+        Path L3 = home.resolve(\"link3\");\n@@ -276,1 +273,0 @@\n-        allFiles.add(L3);\n@@ -299,1 +295,0 @@\n-        allFiles.add(target);\n@@ -301,1 +296,1 @@\n-        Path L2 = Path.of(\"link2\");\n+        Path L2 = home.resolve(\"link2\");\n@@ -303,1 +298,0 @@\n-        allFiles.add(L2);\n@@ -305,1 +299,1 @@\n-        Path L1 = Path.of(\"link1\");\n+        Path L1 = home.resolve(\"link1\");\n@@ -307,1 +301,0 @@\n-        allFiles.add(L1);\n@@ -311,1 +304,0 @@\n-        allFiles.add(cible);\n@@ -313,1 +305,1 @@\n-        Path L4 = Path.of(\"link4\");\n+        Path L4 = home.resolve(\"link4\");\n@@ -315,1 +307,0 @@\n-        allFiles.add(L4);\n@@ -317,1 +308,1 @@\n-        Path L3 = Path.of(\"link3\");\n+        Path L3 = home.resolve(\"link3\");\n@@ -319,1 +310,0 @@\n-        allFiles.add(L3);\n@@ -341,1 +331,1 @@\n-        Path doesNotExist = Path.of(\"doesNotExist\");\n+        Path doesNotExist = home.resolve(\"doesNotExist\");\n@@ -343,1 +333,1 @@\n-        Path L2 = Path.of(\"link2\");\n+        Path L2 = home.resolve(\"link2\");\n@@ -345,1 +335,0 @@\n-        allFiles.add(L2);\n@@ -347,1 +336,1 @@\n-        Path L1 = Path.of(\"link1\");\n+        Path L1 = home.resolve(\"link1\");\n@@ -349,1 +338,0 @@\n-        allFiles.add(L1);\n@@ -351,1 +339,1 @@\n-        Path L4 = Path.of(\"link4\");\n+        Path L4 = home.resolve(\"link4\");\n@@ -353,1 +341,0 @@\n-        allFiles.add(L4);\n@@ -355,1 +342,1 @@\n-        Path L3 = Path.of(\"link3\");\n+        Path L3 = home.resolve(\"link3\");\n@@ -357,1 +344,0 @@\n-        allFiles.add(L3);\n@@ -381,1 +367,0 @@\n-        allFiles.add(target);\n@@ -383,2 +368,1 @@\n-        links[3] = Files.createSymbolicLink(Path.of(\"link4\"), target);\n-        allFiles.add(links[3]);\n+        links[3] = Files.createSymbolicLink(home.resolve(\"link4\"), target);\n@@ -386,2 +370,1 @@\n-            links[i-1] = Files.createSymbolicLink(Path.of(\"link\"+i), links[i]);\n-            allFiles.add(links[i-1]);\n+            links[i-1] = Files.createSymbolicLink(home.resolve(\"link\"+i), links[i]);\n@@ -417,1 +400,0 @@\n-        allFiles.add(target);\n@@ -419,2 +401,1 @@\n-        links[3] = Files.createSymbolicLink(Path.of(\"link4\"), target);\n-        allFiles.add(links[3]);\n+        links[3] = Files.createSymbolicLink(home.resolve(\"link4\"), target);\n@@ -422,1 +403,0 @@\n-        allFiles.remove(target);\n@@ -424,2 +404,1 @@\n-            links[i-1] = Files.createSymbolicLink(Path.of(\"link\"+i), links[i]);\n-            allFiles.add(links[i-1]);\n+            links[i-1] = Files.createSymbolicLink(home.resolve(\"link\"+i), links[i]);\n@@ -457,3 +436,3 @@\n-        allFiles.add(Files.createSymbolicLink(link1, link2));\n-        allFiles.add(Files.createSymbolicLink(link2, link3));\n-        allFiles.add(Files.createSymbolicLink(link3, link1));\n+        Files.createSymbolicLink(link1, link2);\n+        Files.createSymbolicLink(link2, link3);\n+        Files.createSymbolicLink(link3, link1);\n","filename":"test\/jdk\/java\/nio\/file\/Files\/IsSameFile.java","additions":33,"deletions":54,"binary":false,"changes":87,"status":"modified"}]}