{"files":[{"patch":"@@ -118,2 +118,2 @@\n-  uint16_t get_footer() const {\n-    #if INCLUDE_ASAN\n+  #if INCLUDE_ASAN\n+    uint16_t get_footer() const {\n@@ -126,6 +126,1 @@\n-      #else\n-      return build_footer(footer_address()[0], footer_address()[1]);\n-    #endif\n-  }\n-\n-  #if INCLUDE_ASAN\n+    }\n@@ -139,3 +134,2 @@\n-    void set_footer(uint16_t v) {\n-      footer_address()[0] = (uint8_t)(v >> 8); footer_address()[1] = (uint8_t)v;\n-    }\n+    uint16_t get_footer() const { return build_footer(footer_address()[0], footer_address()[1]); }\n+    void set_footer(uint16_t v) { footer_address()[0] = (uint8_t)(v >> 8); footer_address()[1] = (uint8_t)v; }\n@@ -150,2 +144,1 @@\n-  using AltCanarayType = uint32_t;\n-  inline AltCanarayType alt_canary() const {\n+    using AltCanarayType = uint32_t;\n@@ -153,4 +146,13 @@\n-      ASAN_UNPOISON_MEMORY_REGION(&_alt_canary, sizeof(AltCanarayType));\n-      AltCanarayType ac = _alt_canary;\n-      if (_poisoned) {\n-        ASAN_POISON_MEMORY_REGION(&_alt_canary, sizeof(AltCanarayType));\n+      inline AltCanarayType alt_canary() const {\n+        ASAN_UNPOISON_MEMORY_REGION(&_alt_canary, sizeof(AltCanarayType));\n+        AltCanarayType ac = _alt_canary;\n+        if (_poisoned) {\n+          ASAN_POISON_MEMORY_REGION(&_alt_canary, sizeof(AltCanarayType));\n+        }\n+        return ac;\n+      }\n+      inline void set_alt_canary(AltCanarayType value) {\n+        bool poisoned_before = _poisoned;\n+        set_poisoned(false);\n+        _alt_canary = value;\n+        set_poisoned(poisoned_before);\n@@ -158,11 +160,0 @@\n-      return ac;\n-    #else\n-      return _alt_canary;\n-    #endif\n-  }\n-  inline void set_alt_canary(AltCanarayType value) {\n-    #if INCLUDE_ASAN\n-      bool poisoned_before = _poisoned;\n-      set_poisoned(false);\n-      _alt_canary = value;\n-      set_poisoned(poisoned_before);\n@@ -170,4 +161,4 @@\n-      _alt_canary = value;\n-    #endif\n-  }\n-  #endif\n+      inline AltCanarayType alt_canary() const { return _alt_canary; }\n+      inline void set_alt_canary() { return _alt_canary = value; }\n+    #endif \/\/ INCLUDE_ASAN\n+  #endif \/\/ _LP64\n@@ -187,0 +178,1 @@\n+\n@@ -188,0 +180,25 @@\n+\n+    inline size_t size() const {\n+      ASAN_UNPOISON_MEMORY_REGION(&_size, sizeof(_size));\n+      size_t size = _size;\n+      if (_poisoned) {\n+        ASAN_POISON_MEMORY_REGION(&_size, sizeof(_size));\n+      }\n+      return size;\n+    }\n+\n+    inline void set_header_canary(uint16_t value) {\n+      bool poisoned_before = _poisoned;\n+      set_poisoned(false);\n+      _canary = value;\n+      set_poisoned(poisoned_before);\n+    }\n+\n+    inline CanaryType canary() const {\n+      ASAN_UNPOISON_MEMORY_REGION(&_canary, sizeof(CanaryType));\n+      CanaryType canary = _canary;\n+      if (_poisoned) {\n+        ASAN_POISON_MEMORY_REGION(&_canary, sizeof(CanaryType));\n+      }\n+      return canary ;\n+    }\n@@ -191,0 +208,3 @@\n+    inline size_t size() const { return _size; }\n+    inline void set_header_canary(uint16_t value) {_canary = value;}\n+    inline CanaryType canary() const { return _canary; }\n@@ -203,12 +223,0 @@\n-  inline size_t size() const {\n-    #if INCLUDE_ASAN\n-      ASAN_UNPOISON_MEMORY_REGION(&_size, sizeof(_size));\n-      size_t size = _size;\n-      if (_poisoned) {\n-        ASAN_POISON_MEMORY_REGION(&_size, sizeof(_size));\n-      }\n-      return size;\n-    #else\n-      return _size;\n-    #endif\n-  }\n@@ -225,24 +233,0 @@\n-\n-  inline void set_header_canary(uint16_t value) {\n-    #if INCLUDE_ASAN\n-      bool poisoned_before = _poisoned;\n-      set_poisoned(false);\n-      _canary = value;\n-      set_poisoned(poisoned_before);\n-    #else\n-      _canary = value;\n-    #endif\n-  }\n-\n-  inline CanaryType canary() const {\n-    #if INCLUDE_ASAN\n-      ASAN_UNPOISON_MEMORY_REGION(&_canary, sizeof(CanaryType));\n-      CanaryType canary = _canary;\n-      if (_poisoned) {\n-        ASAN_POISON_MEMORY_REGION(&_canary, sizeof(CanaryType));\n-      }\n-      return canary ;\n-    #else\n-      return _canary;\n-    #endif\n-  }\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":52,"deletions":68,"binary":false,"changes":120,"status":"modified"}]}