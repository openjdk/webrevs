{"files":[{"patch":"@@ -91,3 +91,3 @@\n-template<typename T>\n-class AsanPoisoner {\n-  char* _memory;\n+template<typename T, typename U = T>\n+class AsanPoisoningHelper {\n+  U* _memory_region;\n@@ -95,3 +95,5 @@\n-  AsanPoisoner() = delete;\n-  AsanPoisoner(char* addr) : _memory(addr) {\n-    ASAN_UNPOISON_MEMORY_REGION(_memory, sizeof(T));\n+  AsanPoisoningHelper() = delete;\n+  AsanPoisoningHelper(U* addr) : _memory_region(addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_UNPOISON_MEMORY_REGION(_memory_region, sizeof(T));\n+    #endif\n@@ -99,2 +101,4 @@\n-  ~AsanPoisoner() {\n-    ASAN_POISON_MEMORY_REGION(_memory, sizeof(T));\n+  ~AsanPoisoningHelper() {\n+    #if INCLUDE_ASAN\n+      ASAN_POISON_MEMORY_REGION(_memory_region, sizeof(T));\n+    #endif\n@@ -102,2 +106,4 @@\n-  static void register_memory(char* addr) {\n-    ASAN_POISON_MEMORY_REGION(addr, sizeof(T));\n+  static void register_memory(U* addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_POISON_MEMORY_REGION(addr, sizeof(T));\n+    #endif\n@@ -105,2 +111,4 @@\n-  static void unregister_memory(char* addr) {\n-    ASAN_UNPOISON_MEMORY_REGION(addr, sizeof(T));\n+  static void unregister_memory(U* addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_UNPOISON_MEMORY_REGION(addr, sizeof(T));\n+    #endif\n@@ -111,1 +119,1 @@\n-\/\/ the AsanPoisoner instances be compiled to nothing\n+\/\/ the AsanPoisoningHelper instances be compiled to nothing\n@@ -113,1 +121,1 @@\n-class AsanPoisoner<void> {\n+class AsanPoisoningHelper<void> {\n@@ -115,5 +123,5 @@\n-  AsanPoisoner() = delete;\n-  AsanPoisoner(char* addr) { }\n-  static void register_memory(char* addr) { }\n-  static void unregister_memory(char* addr) { }\n-  ~AsanPoisoner() { }\n+  AsanPoisoningHelper() = delete;\n+  AsanPoisoningHelper(void* addr) { }\n+  static void register_memory(void* addr) { }\n+  static void unregister_memory(void* addr) { }\n+  ~AsanPoisoningHelper() { }\n@@ -156,1 +164,1 @@\n-    AsanPoisoner<CanaryType> _temp((char*)footer_address());\n+    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n@@ -161,1 +169,1 @@\n-    AsanPoisoner<CanaryType> _temp((char*)footer_address());\n+    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n@@ -171,1 +179,1 @@\n-    AsanPoisoner<AltCanaryType> _temp((char*)&alt_canary());\n+    AsanPoisoningHelper<AltCanaryType> _temp(reinterpret_cast<CanaryType*>(&_alt_canary));\n@@ -175,1 +183,1 @@\n-    AsanPoisoner<AltCanaryType> _temp((char*)&alt_canary());\n+    AsanPoisoningHelper<AltCanaryType> _temp(reinterpret_cast<CanaryType*>(&_alt_canary));\n@@ -181,4 +189,4 @@\n-      AsanPoisoner<CanaryType>::register_memory((char*)&_canary);\n-      AsanPoisoner<CanaryType>::register_memory((char*)footer_address());\n-      AsanPoisoner<SizeType>::register_memory((char*)&_size);\n-      NOT_LP64(AsanPoisoner<AltCanaryType>::register_memory((char*)&_alt_canary));\n+      AsanPoisoningHelper<CanaryType>::register_memory(&_canary);\n+      AsanPoisoningHelper<CanaryType>::register_memory(reinterpret_cast<CanaryType*>(footer_address()));\n+      AsanPoisoningHelper<SizeType, const SizeType>::register_memory(&_size);\n+      NOT_LP64(AsanPoisoningHelper<AltCanaryType>::register_memory((char*)&_alt_canary));\n@@ -186,4 +194,4 @@\n-      AsanPoisoner<CanaryType>::unregister_memory((char*)&_canary);\n-      AsanPoisoner<CanaryType>::unregister_memory((char*)footer_address());\n-      AsanPoisoner<SizeType>::unregister_memory((char*)&_size);\n-      NOT_LP64(AsanPoisoner<AltCanaryType>::unregister_memory((char*)&_alt_canary));\n+      AsanPoisoningHelper<CanaryType>::unregister_memory(&_canary);\n+      AsanPoisoningHelper<CanaryType>::unregister_memory(reinterpret_cast<CanaryType*>(footer_address()));\n+      AsanPoisoningHelper<SizeType, const SizeType>::unregister_memory(&_size);\n+      NOT_LP64(AsanPoisoningHelper<AltCanaryType>::unregister_memory((char*)&_alt_canary));\n@@ -205,1 +213,1 @@\n-    AsanPoisoner<SizeType> _temp((char*)&_size);\n+    AsanPoisoningHelper<SizeType, const SizeType> _temp(&_size);\n@@ -220,1 +228,1 @@\n-    AsanPoisoner<CanaryType> _temp((char*)&_canary);\n+    AsanPoisoningHelper<CanaryType> _temp(&_canary);\n@@ -224,2 +232,2 @@\n-  inline CanaryType canary() const {\n-    AsanPoisoner<CanaryType> _temp((char*)&_canary);\n+  inline uint16_t canary() const {\n+    AsanPoisoningHelper<CanaryType, const CanaryType> _temp(&_canary);\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":43,"deletions":35,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -191,1 +191,0 @@\n-\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -324,1 +324,1 @@\n-    AsanPoisoner<void> pm((char*)&a);\n+    AsanPoisoningHelper<void> pm((char*)&a);\n@@ -336,1 +336,1 @@\n-    AsanPoisoner<uint16_t> pm((char*)&a);\n+    AsanPoisoningHelper<uint16_t> pm(&a);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_buffer_overflow_detection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}