{"files":[{"patch":"@@ -91,27 +91,0 @@\n-template<typename T, typename U = T>\n-class AsanPoisoningHelper {\n-  U* _memory_region;\n- public:\n-  AsanPoisoningHelper() = delete;\n-  AsanPoisoningHelper(U* addr) : _memory_region(addr) {\n-    #if INCLUDE_ASAN\n-      ASAN_UNPOISON_MEMORY_REGION(_memory_region, sizeof(T));\n-    #endif\n-  }\n-  ~AsanPoisoningHelper() {\n-    #if INCLUDE_ASAN\n-      ASAN_POISON_MEMORY_REGION(_memory_region, sizeof(T));\n-    #endif\n-  }\n-  static void poison_memory(U* addr) {\n-    #if INCLUDE_ASAN\n-      ASAN_POISON_MEMORY_REGION(addr, sizeof(T));\n-    #endif\n-  }\n-  static void unpoison_memory(U* addr) {\n-    #if INCLUDE_ASAN\n-      ASAN_UNPOISON_MEMORY_REGION(addr, sizeof(T));\n-    #endif\n-  }\n-};\n-\n@@ -143,1 +116,1 @@\n-    AsanPoisoningHelper<CanaryType, uint8_t> _temp(footer_address());\n+    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n@@ -148,1 +121,1 @@\n-    AsanPoisoningHelper<CanaryType, uint8_t> _temp(footer_address());\n+    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n@@ -172,2 +145,2 @@\n-      AsanPoisoningHelper<CanaryType, uint8_t>::poison_memory(footer_address());\n-      AsanPoisoningHelper<SizeType, const SizeType>::poison_memory(&_size);\n+      AsanPoisoningHelper<CanaryType>::poison_memory(reinterpret_cast<CanaryType*>(footer_address()));\n+      AsanPoisoningHelper<const SizeType>::poison_memory(&_size);\n@@ -177,2 +150,2 @@\n-      AsanPoisoningHelper<CanaryType, uint8_t>::unpoison_memory(footer_address());\n-      AsanPoisoningHelper<SizeType, const SizeType>::unpoison_memory(&_size);\n+      AsanPoisoningHelper<CanaryType>::unpoison_memory(reinterpret_cast<CanaryType*>(footer_address()));\n+      AsanPoisoningHelper<const SizeType>::unpoison_memory(&_size);\n@@ -195,1 +168,1 @@\n-    AsanPoisoningHelper<SizeType, const SizeType> _temp(&_size);\n+    AsanPoisoningHelper<const SizeType> _temp(&_size);\n@@ -215,1 +188,1 @@\n-    AsanPoisoningHelper<CanaryType, const CanaryType> _temp(&_canary);\n+    AsanPoisoningHelper<const CanaryType> _temp(&_canary);\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":8,"deletions":35,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -78,0 +78,27 @@\n+template<typename T>\n+class AsanPoisoningHelper {\n+  const T* _memory_region;\n+ public:\n+  AsanPoisoningHelper() = delete;\n+  AsanPoisoningHelper(T* addr) : _memory_region(addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_UNPOISON_MEMORY_REGION(_memory_region, sizeof(T));\n+    #endif\n+  }\n+  ~AsanPoisoningHelper() {\n+    #if INCLUDE_ASAN\n+      ASAN_POISON_MEMORY_REGION(_memory_region, sizeof(T));\n+    #endif\n+  }\n+  static void poison_memory(T* addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_POISON_MEMORY_REGION(addr, sizeof(T));\n+    #endif\n+  }\n+  static void unpoison_memory(T* addr) {\n+    #if INCLUDE_ASAN\n+      ASAN_UNPOISON_MEMORY_REGION(addr, sizeof(T));\n+    #endif\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/sanitizers\/address.hpp","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"}]}