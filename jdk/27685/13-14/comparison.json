{"files":[{"patch":"@@ -116,1 +116,1 @@\n-    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n+    AsanPoisoningHelper aph(reinterpret_cast<uint16_t*>(footer_address()));\n@@ -121,1 +121,1 @@\n-    AsanPoisoningHelper<CanaryType> _temp(reinterpret_cast<CanaryType*>(footer_address()));\n+    AsanPoisoningHelper aph(reinterpret_cast<uint16_t*>(footer_address()));\n@@ -128,0 +128,14 @@\n+  void asan_poison_self() {\n+      AsanPoisoningHelper<uint16_t>::poison_memory(&_canary);\n+      AsanPoisoningHelper<uint16_t>::poison_memory(reinterpret_cast<uint16_t*>(footer_address()));\n+      AsanPoisoningHelper<size_t>::poison_memory(&_size);\n+      NOT_LP64(AsanPoisoningHelper<uint32_t>::poison_memory(&_alt_canary));\n+  }\n+\n+  void asan_unpoison_self() {\n+      AsanPoisoningHelper<uint16_t>::unpoison_memory(&_canary);\n+      AsanPoisoningHelper<uint16_t>::unpoison_memory(reinterpret_cast<uint16_t*>(footer_address()));\n+      AsanPoisoningHelper<size_t>::unpoison_memory(&_size);\n+      NOT_LP64(AsanPoisoningHelper<uint32_t>::unpoison_memory(&_alt_canary));\n+  }\n+\n@@ -129,3 +143,0 @@\n-  using CanaryType = uint16_t;\n-  using SizeType = size_t;\n-  NOT_LP64(using AltCanaryType = uint32_t;)\n@@ -134,1 +145,1 @@\n-    AsanPoisoningHelper<AltCanaryType, const AltCanaryType> _temp(&_alt_canary);\n+    AsanPoisoningHelper aph(&_alt_canary);\n@@ -138,1 +149,1 @@\n-    AsanPoisoningHelper<AltCanaryType, const AltCanaryType> _temp(&_alt_canary);\n+    AsanPoisoningHelper aph(&_alt_canary);\n@@ -142,13 +153,0 @@\n-  inline void set_poisoned(bool poison) {\n-    if (poison) {\n-      AsanPoisoningHelper<CanaryType>::poison_memory(&_canary);\n-      AsanPoisoningHelper<CanaryType>::poison_memory(reinterpret_cast<CanaryType*>(footer_address()));\n-      AsanPoisoningHelper<const SizeType>::poison_memory(&_size);\n-      NOT_LP64(AsanPoisoningHelper<AltCanaryType>::poison_memory(&_alt_canary));\n-    } else {\n-      AsanPoisoningHelper<CanaryType>::unpoison_memory(&_canary);\n-      AsanPoisoningHelper<CanaryType>::unpoison_memory(reinterpret_cast<CanaryType*>(footer_address()));\n-      AsanPoisoningHelper<const SizeType>::unpoison_memory(&_size);\n-      NOT_LP64(AsanPoisoningHelper<AltCanaryType>::unpoison_memory(&_alt_canary));\n-    }\n-  }\n@@ -157,0 +155,1 @@\n+\n@@ -168,1 +167,1 @@\n-    AsanPoisoningHelper<const SizeType> _temp(&_size);\n+    AsanPoisoningHelper aph(&_size);\n@@ -183,1 +182,1 @@\n-    AsanPoisoningHelper<CanaryType> _temp(&_canary);\n+    AsanPoisoningHelper aph(&_canary);\n@@ -188,1 +187,1 @@\n-    AsanPoisoningHelper<const CanaryType> _temp(&_canary);\n+    AsanPoisoningHelper aph(&_canary);\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  set_poisoned(true);\n+  asan_poison_self();\n@@ -56,1 +56,1 @@\n-  set_poisoned(true);\n+  asan_poison_self();\n@@ -61,1 +61,1 @@\n-  set_poisoned(false);\n+  asan_unpoison_self();\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-  AsanPoisoningHelper(T* addr) : _memory_region(addr) {\n+  AsanPoisoningHelper(const T* addr) : _memory_region(addr) {\n@@ -93,1 +93,1 @@\n-  static void poison_memory(T* addr) {\n+  static void poison_memory(const T* addr) {\n@@ -98,1 +98,1 @@\n-  static void unpoison_memory(T* addr) {\n+  static void unpoison_memory(const T* addr) {\n","filename":"src\/hotspot\/share\/sanitizers\/address.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}