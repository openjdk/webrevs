{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment the test intentionally passes bad argument to the function to verify the functionality,\n+            it causes false positive from ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment the test intentionally passes bad argument to the function to verify the functionality,\n+            it causes false positive from ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment the test intentionally passes bad argument to the function to verify the functionality,\n+            it causes false positive from ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment the test intentionally passes bad argument to the function to verify the functionality,\n+            it causes false positive from ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,3 @@\n+ * @comment the test intentionally passes bad argument to the function to verify the functionality,\n+            it causes false positive from ASAN lib\n+ * @requires !vm.asan\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait003\/TestDescription.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -240,4 +240,0 @@\n-\n-    if (!NSK_JVMTI_VERIFY(jvmti->DestroyRawMonitor(syncLock)))\n-        nsk_jvmti_setFailStatus();\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002\/em07t002.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}