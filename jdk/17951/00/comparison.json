{"files":[{"patch":"@@ -991,0 +991,1 @@\n+                       !currentNullable &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8291769\n+ * @bug 8291769 8326129\n@@ -34,1 +34,1 @@\n- * @build toolbox.ToolBox toolbox.JavacTask\n+ * @build toolbox.ToolBox toolbox.JavacTask toolbox.JavaTask\n@@ -51,0 +51,1 @@\n+import java.io.File;\n@@ -59,0 +60,1 @@\n+import toolbox.JavaTask;\n@@ -191,0 +193,32 @@\n+    @Test \/\/JDK-8326129\n+    public void testRunWithNull(Path base) throws Exception {\n+        doRunTest(base,\n+                  new String[]{\"\"\"\n+                               package lib;\n+                               public record Box(Object o) {}\n+                               \"\"\"},\n+                  \"\"\"\n+                  import lib.*;\n+                  public class Test {\n+                      public static void main(String... args) {\n+                          System.err.println(new Test().test(new Box(null)));\n+                      }\n+                      private int test(Box b) {\n+                          return switch (b) {\n+                              case Box(Integer i) -> 0;\n+                              case Box(Object o) when check(o) -> 1;\n+                              case Box(Object o) -> 2;\n+                          };\n+                      }\n+                      private static int c;\n+                      private boolean check(Object o) {\n+                          System.err.println(\"check: \" + o);\n+                          if (c++ > 10) throw new IllegalStateException();\n+                          return o != null;\n+                      }\n+                  }\n+                  \"\"\",\n+                  \"check: null\",\n+                  \"2\");\n+    }\n+\n@@ -325,0 +359,47 @@\n+\n+    private void doRunTest(Path base, String[] libraryCode, String testCode,\n+                           String... expectedOutput) throws IOException {\n+        Path current = base.resolve(\".\");\n+        Path libClasses = current.resolve(\"libClasses\");\n+\n+        Files.createDirectories(libClasses);\n+\n+        if (libraryCode.length != 0) {\n+            Path libSrc = current.resolve(\"lib-src\");\n+\n+            for (String code : libraryCode) {\n+                tb.writeJavaFiles(libSrc, code);\n+            }\n+\n+            new JavacTask(tb)\n+                    .outdir(libClasses)\n+                    .files(tb.findJavaFiles(libSrc))\n+                    .run();\n+        }\n+\n+        Path src = current.resolve(\"src\");\n+        tb.writeJavaFiles(src, testCode);\n+\n+        Path classes = current.resolve(\"classes\");\n+\n+        Files.createDirectories(classes);\n+\n+        new JavacTask(tb)\n+            .options(\"-Xlint:-preview\",\n+                     \"--class-path\", libClasses.toString())\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+\n+        List<String> log = new JavaTask(tb)\n+            .classpath(libClasses.toString() + File.pathSeparatorChar + classes.toString())\n+            .classArgs(\"Test\")\n+            .run()\n+            .getOutputLines(Task.OutputKind.STDERR);\n+\n+        if (!List.of(expectedOutput).equals(log)) {\n+            throw new AssertionError(\"Expected: \" + expectedOutput +\n+                                     \"but got: \" + log);\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/TranslationTest.java","additions":83,"deletions":2,"binary":false,"changes":85,"status":"modified"}]}