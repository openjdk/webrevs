{"files":[{"patch":"@@ -328,0 +328,5 @@\n+     * <p>\n+     * The order of catch blocks is significant.  When an exception is thrown\n+     * by the try block, the first catch block whose exception type is {@linkplain\n+     * Class#isAssignableFrom(Class) the same class as or a superclass of} the\n+     * class of exception thrown is branched to (JVMS {@jvms 2.10}).\n@@ -346,0 +351,4 @@\n+         * @apiNote\n+         * If the type of exception to catch is already handled by previous\n+         * catch blocks, this block will never be executed.\n+         *\n@@ -350,3 +359,2 @@\n-         * @throws IllegalArgumentException if an existing catch block catches\n-         *         an exception of the given type or {@code exceptionType}\n-         *         represents a primitive type\n+         * @throws IllegalArgumentException if {@code exceptionType} represents\n+         *         a primitive type\n@@ -370,0 +378,4 @@\n+         * @apiNote\n+         * If every type of exception to catch is already handled by previous\n+         * catch blocks, this block will never be executed.\n+         *\n@@ -374,2 +386,2 @@\n-         * @throws IllegalArgumentException if an existing catch block catches\n-         *         one or more exceptions of the given types\n+         * @throws IllegalArgumentException if any exception type represents a\n+         *         primitive type\n@@ -390,0 +402,4 @@\n+         * @apiNote\n+         * Since this block intercepts all exceptions, all subsequent catch\n+         * blocks will never be executed.\n+         *\n@@ -392,2 +408,0 @@\n-         * @throws IllegalArgumentException if an existing catch block catches\n-         *         all exceptions\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CodeBuilder.java","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -42,2 +42,4 @@\n- * table entries.  Delivered as a {@link CodeElement} when traversing the\n- * contents of a {@link CodeModel}.\n+ * table entries.  The order of exception table entries is significant: when an\n+ * exception is thrown in a method, execution branches to the first matching\n+ * exception handler if such a handler exists (JVMS {@jvms 2.4}). Delivered as\n+ * a {@link CodeElement} when traversing the contents of a {@link CodeModel}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/instruction\/ExceptionCatch.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    final Set<Integer> catchIndices;\n@@ -50,1 +49,0 @@\n-        this.catchIndices = new HashSet<>();\n@@ -66,3 +64,0 @@\n-            if (!catchIndices.add(0)) {\n-                throw new IllegalArgumentException(\"Existing catch block catches exception of all type\");\n-            }\n@@ -73,3 +68,0 @@\n-                if (!catchIndices.add(entry.index())) {\n-                    throw new IllegalArgumentException(\"Existing catch block catches exception of type: \" + exceptionType);\n-                }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CatchBuilderImpl.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,4 +77,4 @@\n-            assertThrows(IllegalArgumentException.class, () -> catchBuilder.catching(CD_NPE, handler));\n-            assertThrows(IllegalArgumentException.class, () -> catchBuilder.catching(null, handler));\n-            assertThrows(IllegalArgumentException.class, () -> catchBuilder.catchingMulti(List.of(), handler));\n-            assertThrows(IllegalArgumentException.class, () -> catchBuilder.catchingMulti(List.of(CD_Exception, CD_IOOBE), handler));\n+            assertDoesNotThrow(() -> catchBuilder.catching(CD_NPE, handler));\n+            assertDoesNotThrow(() -> catchBuilder.catching(null, handler));\n+            assertDoesNotThrow(() -> catchBuilder.catchingMulti(List.of(), handler));\n+            assertDoesNotThrow(() -> catchBuilder.catchingMulti(List.of(CD_Exception, CD_IOOBE), handler));\n@@ -82,1 +82,1 @@\n-            assertThrows(IllegalArgumentException.class, () -> catchBuilder.catchingAll(handler));\n+            assertDoesNotThrow(() -> catchBuilder.catchingAll(handler));\n","filename":"test\/jdk\/jdk\/classfile\/BuilderTryCatchTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}