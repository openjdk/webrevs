{"files":[{"patch":"@@ -259,2 +259,3 @@\n-                SSLLogger.warning(\"Exception thrown while getting an alias \" +\n-                                  alias + \": \" + e);\n+                SSLLogger.warning(\n+                        \"Exception thrown while getting an alias\" +\n+                        \" \" + alias + \": \" + e);\n@@ -298,1 +299,3 @@\n-                            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+                            if (SSLLogger.isOn\n+                                    && SSLLogger\n+                                        .isOn(\"ssl,keymanager\")) {\n@@ -314,1 +317,1 @@\n-            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,keymanager\")) {\n@@ -320,1 +323,1 @@\n-        if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+        if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,keymanager\")) {\n@@ -360,1 +363,1 @@\n-            if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+            if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,keymanager\")) {\n@@ -366,1 +369,1 @@\n-        if (SSLLogger.isOn && SSLLogger.isOn(\"keymanager\")) {\n+        if (SSLLogger.isOn && SSLLogger.isOn(\"ssl,keymanager\")) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @run junit\/othervm -Djavax.net.debug=ssl:keymanager NullCases\n+ * @run junit NullCases\n@@ -51,2 +51,0 @@\n-import java.io.ByteArrayOutputStream;\n-import java.io.PrintStream;\n@@ -66,2 +64,0 @@\n-    private static final String KEY_MGR_EXCEPTION_MESSAGE =\n-            \"Exception thrown while getting an alias\";\n@@ -71,1 +67,0 @@\n-    private final PrintStream initialErrStream = System.err;\n@@ -148,8 +143,0 @@\n-    private ByteArrayOutputStream replaceSystemError() {\n-        final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n-        final PrintStream newErrStream = new PrintStream(outputStream);\n-        System.setErr(newErrStream);\n-\n-        return outputStream;\n-    }\n-\n@@ -162,1 +149,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if the alias is incomplete\");\n@@ -164,1 +151,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if the alias is incomplete\");\n@@ -169,3 +156,0 @@\n-        \/\/ recording logs to the output stream\n-        final ByteArrayOutputStream outputStream = replaceSystemError();\n-\n@@ -176,1 +160,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if builder doesn't exist\");\n@@ -178,8 +162,1 @@\n-                \"Should return null if the alias can't be found\");\n-\n-        System.setErr(initialErrStream);\n-        System.err.println(\" => nonexistentBuilderTest: \\n\" + outputStream);\n-\n-        Asserts.assertFalse(\n-                !outputStream.toString().contains(KEY_MGR_EXCEPTION_MESSAGE),\n-                \"No log triggered\");\n+                \"Should return null if builder doesn't exist\");\n@@ -195,1 +172,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if KS doesn't exist\");\n@@ -197,1 +174,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if KS doesn't exist\");\n@@ -202,2 +179,0 @@\n-        \/\/ recording logs to the output stream\n-        final ByteArrayOutputStream outputStream = replaceSystemError();\n@@ -209,1 +184,1 @@\n-                \"Should return null if the alias can't be found\");\n+                \"Should return null if number format is wrong in alias\");\n@@ -211,9 +186,1 @@\n-                \"Should return null if the alias can't be found\");\n-\n-        System.setErr(initialErrStream);\n-        System.err.println(\" => wrongNumberFormatTest: \\n\" + outputStream);\n-\n-        Asserts.assertFalse(\n-                !outputStream.toString().contains(KEY_MGR_EXCEPTION_MESSAGE),\n-                \"No log triggered\");\n-\n+                \"Should return null if number format is wrong in alias\");\n@@ -223,1 +190,1 @@\n-    @ValueSource(strings = {\"1..\",\".1.\", \"..1\", \".9.123456789\"})\n+    @ValueSource(strings = {\"1..1\", \"1..\",\".1.\", \"..1\", \".9.123456789\"})\n@@ -225,2 +192,0 @@\n-        \/\/ recording logs to the output stream\n-        final ByteArrayOutputStream outputStream = replaceSystemError();\n@@ -231,1 +196,3 @@\n-                \"Should return null if the alias can't be found\");\n+                String.format(\n+                        \"Should return null if the alias is invalid <%s>\",\n+                        alias));\n@@ -233,10 +200,3 @@\n-                \"Should return null if the alias can't be found\");\n-\n-        System.setErr(initialErrStream);\n-        System.err.println(\" => wrongNumberFormatTest alias<\" + alias + \">: \\n\"\n-                           + outputStream);\n-\n-        Asserts.assertFalse(!outputStream.toString()\n-                            .contains(\"Invalid alias format:\"),\n-                \"No log triggered\");\n-\n+                String.format(\n+                        \"Should return null if the alias is invalid <%s>\",\n+                        alias));\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/NullCases.java","additions":16,"deletions":56,"binary":false,"changes":72,"status":"modified"}]}