{"files":[{"patch":"@@ -2556,4 +2556,6 @@\n-      const bool is_remset_tracked = g1h->region_attr(r->bottom()).is_remset_tracked();\n-      assert(r->rem_set()->is_tracked() == is_remset_tracked,\n-             \"Region %u remset tracking status (%s) different to region attribute (%s)\",\n-             r->hrm_index(), BOOL_TO_STR(r->rem_set()->is_tracked()), BOOL_TO_STR(is_remset_tracked));\n+      G1HeapRegionAttr attr = g1h->region_attr(r->bottom());\n+      bool const is_remset_tracked = attr.is_remset_tracked();\n+      assert((r->rem_set()->is_tracked() == is_remset_tracked) ||\n+             (attr.is_new_survivor() && is_remset_tracked),\n+             \"Region %u (%s) remset tracking status (%s) different to region attribute (%s)\",\n+             r->hrm_index(), r->get_type_str(), BOOL_TO_STR(r->rem_set()->is_tracked()), BOOL_TO_STR(is_remset_tracked));\n@@ -3098,3 +3100,2 @@\n-      _policy->remset_tracker()->update_at_allocate(new_alloc_region);\n-      \/\/ Install the group cardset.\n-      young_regions_cset_group()->add(new_alloc_region);\n+\n+      collection_set()->add_eden_region(new_alloc_region);\n@@ -3113,1 +3114,0 @@\n-  collection_set()->add_eden_region(alloc_region);\n@@ -3157,0 +3157,6 @@\n+      \/\/ The remembered set\/group cardset for this region will be installed at the\n+      \/\/ end of GC. Cannot do that right now because we still need the current young\n+      \/\/ gen cardset group.\n+      \/\/ However, register with the attribute table to collect remembered set entries\n+      \/\/ immediately as it is the only source for determining the need for remembered\n+      \/\/ set tracking during GC.\n@@ -3158,2 +3164,0 @@\n-      \/\/ Install the group cardset.\n-      young_regions_cset_group()->add(new_alloc_region);\n@@ -3162,0 +3166,3 @@\n+      \/\/ Update remembered set\/cardset.\n+      _policy->remset_tracker()->update_at_allocate(new_alloc_region);\n+      \/\/ Synchronize with region attribute table.\n@@ -3164,1 +3171,0 @@\n-    _policy->remset_tracker()->update_at_allocate(new_alloc_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -166,0 +166,1 @@\n+  assert(_optional_groups.length() == 0, \"must be\");\n@@ -219,1 +220,5 @@\n-  assert(!hr->in_collection_set(), \"invariant\");\n+  \/\/ Add to remembered set\/cardset group.\n+  _g1h->policy()->remset_tracker()->update_at_allocate(hr);\n+  _g1h->young_regions_cset_group()->add(hr);\n+\n+  \/\/ Synchronize with the region attribute table.\n@@ -236,0 +241,1 @@\n+  assert_at_safepoint_on_vm_thread();\n@@ -241,0 +247,1 @@\n+  assert_heap_locked_or_at_safepoint(true \/* should_be_vm_thread *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+  assert(hr->is_humongous() || !hr->rem_set()->has_cset_group(),\n+         \"Non-humongous regions must not have cset group\");\n@@ -39,5 +41,0 @@\n-  if (!hr->is_humongous()) {\n-    hr->uninstall_cset_group();\n-  }\n-\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCResetMetadataTask.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -154,2 +154,3 @@\n-  assert(region_attr.is_remset_tracked() == hr_obj->rem_set()->is_tracked(),\n-         \"State flag indicating remset tracking disagrees (%s) with actual remembered set (%s) for region %u\",\n+  assert((region_attr.is_remset_tracked() == hr_obj->rem_set()->is_tracked()) ||\n+         (region_attr.is_new_survivor() && region_attr.is_remset_tracked()),\n+         \"State flag indicating remset tracking disagrees (%s) with actual remembered set (%s) for region %u (%s)\",\n@@ -158,1 +159,2 @@\n-         hr_obj->hrm_index());\n+         hr_obj->hrm_index(),\n+         hr_obj->get_type_str());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.inline.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}