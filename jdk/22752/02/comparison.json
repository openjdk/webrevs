{"files":[{"patch":"@@ -67,1 +67,1 @@\n-          __ zero_extend(t1, t1, shift);\n+          __ zext(t1, t1, shift);\n@@ -81,1 +81,1 @@\n-          __ zero_extend(t0, t0, shift);\n+          __ zext(t0, t0, shift);\n@@ -208,1 +208,1 @@\n-            __ zero_extend(t0, t0, shift);\n+            __ zext(t0, t0, shift);\n@@ -227,1 +227,1 @@\n-            __ zero_extend(t1, t1, shift);\n+            __ zext(t1, t1, shift);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_arith_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -955,1 +955,1 @@\n-      __ zero_extend(dest->as_register(), src->as_register(), 16); break;\n+      __ zext(dest->as_register(), src->as_register(), 16); break;\n@@ -957,1 +957,1 @@\n-      __ sign_extend(dest->as_register_lo(), src->as_register(), 32); break;\n+      __ sext(dest->as_register_lo(), src->as_register(), 32); break;\n@@ -959,1 +959,1 @@\n-      __ sign_extend(dest->as_register(), src->as_register(), 16); break;\n+      __ sext(dest->as_register(), src->as_register(), 16); break;\n@@ -961,1 +961,1 @@\n-      __ sign_extend(dest->as_register(), src->as_register(), 8); break;\n+      __ sext(dest->as_register(), src->as_register(), 8); break;\n@@ -963,1 +963,1 @@\n-      __ sign_extend(dest->as_register(), src->as_register_lo(), 32); break;\n+      __ sext(dest->as_register(), src->as_register_lo(), 32); break;\n@@ -1291,1 +1291,1 @@\n-        __ sign_extend(Rdst, Rdst, 32);\n+        __ sext(Rdst, Rdst, 32);\n@@ -1612,1 +1612,1 @@\n-  __ zero_extend(crc, crc, 32);\n+  __ zext(crc, crc, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1030,1 +1030,1 @@\n-    andi(tmp6, tmp6, 0xff); \/\/ pattern[m-4], 0x0000000d\n+    zext(tmp6, tmp6, 8); \/\/ pattern[m-4], 0x0000000d\n@@ -1543,2 +1543,2 @@\n-      andi(tmp1, tmp1, 0xFF);\n-      andi(tmp2, tmp2, 0xFF);\n+      zext(tmp1, tmp1, 8);\n+      zext(tmp2, tmp2, 8);\n@@ -1546,2 +1546,2 @@\n-      andi(tmp1, tmp1, 0xFFFF);\n-      andi(tmp2, tmp2, 0xFFFF);\n+      zext(tmp1, tmp1, 16);\n+      zext(tmp2, tmp2, 16);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  sign_extend(result, result, 8);\n+  sext(result, result, 8);\n@@ -79,1 +79,1 @@\n-  zero_extend(result, result, 16);\n+  zext(result, result, 16);\n@@ -83,1 +83,1 @@\n-  sign_extend(result, result, 16);\n+  sext(result, result, 16);\n@@ -86,1 +86,1 @@\n-  sign_extend(result, result, 32);\n+  sext(result, result, 32);\n@@ -279,1 +279,1 @@\n-  sign_extend(r, r, 32);\n+  sext(r, r, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1539,3 +1539,0 @@\n-static const int64_t right_32_bits = right_n_bits(32);\n-static const int64_t right_8_bits = right_n_bits(8);\n-\n@@ -1558,1 +1555,1 @@\n-  andi(val, val, right_8_bits);\n+  zext(val, val, 8);\n@@ -1588,1 +1585,1 @@\n-  andi(tmp1, v, right_8_bits);\n+  zext(tmp1, v, 8);\n@@ -2089,1 +2086,5 @@\n-  mv(tmp5, right_32_bits);\n+\n+  \/\/ tmp5 = 0xffffffff\n+  notr(tmp5, zr);\n+  srli(tmp5, tmp5, 32);\n+\n@@ -2113,1 +2114,1 @@\n-    andi(tmp2, tmp1, right_8_bits);\n+    zext(tmp2, tmp1, 8);\n@@ -2637,1 +2638,1 @@\n-  sign_extend(Rd, Rd, 32);\n+  sext(Rd, Rd, 32);\n@@ -2642,1 +2643,1 @@\n-  sign_extend(Rd, Rd, 32);\n+  sext(Rd, Rd, 32);\n@@ -2647,1 +2648,1 @@\n-  sign_extend(Rd, Rd, 32);\n+  sext(Rd, Rd, 32);\n@@ -2835,1 +2836,1 @@\n-  andi(tmp1, Rs, 0xFF);\n+  zext(tmp1, Rs, 8);\n@@ -2839,1 +2840,1 @@\n-    andi(tmp2, tmp2, 0xFF);\n+    zext(tmp2, tmp2, 8);\n@@ -2844,1 +2845,1 @@\n-  andi(Rd, Rd, 0xFF);\n+  zext(Rd, Rd, 8);\n@@ -2846,1 +2847,1 @@\n-  sign_extend(Rd, Rd, 32);\n+  sext(Rd, Rd, 32);\n@@ -2858,1 +2859,1 @@\n-  andi(tmp1, Rs, 0xFF);\n+  zext(tmp1, Rs, 8);\n@@ -2862,1 +2863,1 @@\n-    andi(tmp2, tmp2, 0xFF);\n+    zext(tmp2, tmp2, 8);\n@@ -2867,1 +2868,1 @@\n-  andi(Rd, Rd, 0xFF);\n+  zext(Rd, Rd, 8);\n@@ -3240,1 +3241,1 @@\n-    zero_extend(dst, src, 32);\n+    zext(dst, src, 32);\n@@ -3693,1 +3694,1 @@\n-      zero_extend(dst, dst, 32);\n+      zext(dst, dst, 32);\n@@ -3734,1 +3735,1 @@\n-    zero_extend(mask, mask, 16);\n+    zext(mask, mask, 16);\n@@ -3811,1 +3812,1 @@\n-      sign_extend(result, result, 8);\n+      sext(result, result, 8);\n@@ -3814,1 +3815,1 @@\n-      sign_extend(result, result, 16);\n+      sext(result, result, 16);\n@@ -4008,1 +4009,1 @@\n-  zero_extend(prev, prev, 32);                                                       \\\n+  zext(prev, prev, 32);                                                       \\\n@@ -4028,1 +4029,1 @@\n-      zero_extend(prev, prev, 32);\n+      zext(prev, prev, 32);\n@@ -4617,1 +4618,1 @@\n-  zero_extend(dst, dst, 32);\n+  zext(dst, dst, 32);\n@@ -4630,1 +4631,1 @@\n-  zero_extend(dst, dst, 32);\n+  zext(dst, dst, 32);\n@@ -4905,1 +4906,1 @@\n-  zero_extend(k, k, 32);\n+  zext(k, k, 32);\n@@ -5439,1 +5440,1 @@\n-  andi(tmp2, Rs, 0xFF); \/\/ last byte mask at lower word\n+  zext(tmp2, Rs, 8); \/\/ last byte mask at lower word\n@@ -5841,1 +5842,1 @@\n-void MacroAssembler::zero_extend(Register dst, Register src, int bits) {\n+void MacroAssembler::zext(Register dst, Register src, int bits) {\n@@ -5856,5 +5857,2 @@\n-      if (UseZbb) {\n-        zext_b(dst, src);\n-        return;\n-      }\n-      break;\n+      zext_b(dst, src);\n+      return;\n@@ -5864,0 +5862,1 @@\n+\n@@ -5868,1 +5867,1 @@\n-void MacroAssembler::sign_extend(Register dst, Register src, int bits) {\n+void MacroAssembler::sext(Register dst, Register src, int bits) {\n@@ -5888,0 +5887,1 @@\n+\n@@ -5980,1 +5980,1 @@\n-      sign_extend(dst.first()->as_Register(), src.first()->as_Register(), 32);\n+      sext(dst.first()->as_Register(), src.first()->as_Register(), 32);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -1521,1 +1521,1 @@\n-        zero_extend(Rt, Rt, 16);\n+        zext(Rt, Rt, 16);\n@@ -1524,1 +1524,1 @@\n-        sign_extend(Rt, Rt, 8);\n+        sext(Rt, Rt, 8);\n@@ -1527,1 +1527,1 @@\n-        sign_extend(Rt, Rt, 16);\n+        sext(Rt, Rt, 16);\n@@ -1530,1 +1530,1 @@\n-        sign_extend(Rt, Rt, 32);\n+        sext(Rt, Rt, 32);\n@@ -1545,2 +1545,2 @@\n-  void zero_extend(Register dst, Register src, int bits);\n-  void sign_extend(Register dst, Register src, int bits);\n+  void zext(Register dst, Register src, int bits);\n+  void sext(Register dst, Register src, int bits);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1629,1 +1629,1 @@\n-            __ zero_extend(as_Register(Matcher::_regEncode[dst_lo]), as_Register(Matcher::_regEncode[src_lo]), 32);\n+            __ zext(as_Register(Matcher::_regEncode[dst_lo]), as_Register(Matcher::_regEncode[src_lo]), 32);\n@@ -8082,1 +8082,1 @@\n-    __ sign_extend(as_Register($dst$$reg), as_Register($src$$reg), 32);\n+    __ sext(as_Register($dst$$reg), as_Register($src$$reg), 32);\n@@ -8094,1 +8094,1 @@\n-    __ sign_extend(as_Register($dst$$reg), as_Register($src$$reg), 32);\n+    __ sext(as_Register($dst$$reg), as_Register($src$$reg), 32);\n@@ -8106,1 +8106,1 @@\n-  format %{ \"zero_extend $dst, $src, 32\\t# i2ul, #@convI2UL_reg_reg\" %}\n+  format %{ \"zext $dst, $src, 32\\t# i2ul, #@convI2UL_reg_reg\" %}\n@@ -8109,1 +8109,1 @@\n-    __ zero_extend(as_Register($dst$$reg), as_Register($src$$reg), 32);\n+    __ zext(as_Register($dst$$reg), as_Register($src$$reg), 32);\n@@ -8286,1 +8286,1 @@\n-  format %{ \"zero_extend $dst, $src, 32\\t# ptr -> int, #@convP2I\" %}\n+  format %{ \"zext $dst, $src, 32\\t# ptr -> int, #@convP2I\" %}\n@@ -8289,1 +8289,1 @@\n-    __ zero_extend($dst$$Register, $src$$Register, 32);\n+    __ zext($dst$$Register, $src$$Register, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  __ sign_extend(c_rarg1, j_rarg0, 32);\n+  __ sext(c_rarg1, j_rarg0, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/runtime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1646,2 +1646,2 @@\n-    __ zero_extend(src_pos, src_pos, 32);\n-    __ zero_extend(dst_pos, dst_pos, 32);\n+    __ zext(src_pos, src_pos, 32);\n+    __ zext(dst_pos, dst_pos, 32);\n@@ -1770,1 +1770,1 @@\n-    __ sign_extend(t0, src_pos, 32);\n+    __ sext(t0, src_pos, 32);\n@@ -1777,1 +1777,1 @@\n-    __ sign_extend(t0, dst_pos, 32);\n+    __ sext(t0, dst_pos, 32);\n@@ -1786,1 +1786,1 @@\n-    __ sign_extend(scratch_length, length, 32);    \/\/ length (elements count, 32-bits value)\n+    __ sext(scratch_length, length, 32); \/\/ length (elements count, 32-bits value)\n@@ -1882,1 +1882,1 @@\n-    __ sign_extend(count, scratch_length, 32); \/\/ length\n+    __ sext(count, scratch_length, 32); \/\/ length\n@@ -1888,1 +1888,1 @@\n-    __ sign_extend(count, scratch_length, 32); \/\/ length\n+    __ sext(count, scratch_length, 32); \/\/ length\n@@ -1896,1 +1896,1 @@\n-    __ sign_extend(count, scratch_length, 32); \/\/ length\n+    __ sext(count, scratch_length, 32); \/\/ length\n@@ -1905,1 +1905,1 @@\n-      __ sign_extend(lh, lh, 32);\n+      __ sext(lh, lh, 32);\n@@ -1915,1 +1915,1 @@\n-    __ sign_extend(count, scratch_length, 32); \/\/ length\n+    __ sext(count, scratch_length, 32); \/\/ length\n@@ -1935,1 +1935,1 @@\n-    __ sign_extend(count, scratch_length, 32); \/\/ length\n+    __ sext(count, scratch_length, 32); \/\/ length\n@@ -1958,2 +1958,2 @@\n-      __ sign_extend(count, length, 32);      \/\/ length (reloaded)\n-      const Register sco_temp = c_rarg3;      \/\/ this register is free now\n+      __ sext(count, length, 32); \/\/ length (reloaded)\n+      const Register sco_temp = c_rarg3; \/\/ this register is free now\n@@ -2025,1 +2025,1 @@\n-        __ andi(value, value, 0xff);\n+        __ zext(value, value, 8);\n@@ -2042,1 +2042,1 @@\n-        __ andi(value, value, 0xffff);\n+        __ zext(value, value, 16);\n@@ -2102,3 +2102,2 @@\n-    __ andi(value, value, 0xffffffff);\n-    __ mv(tmp_reg, value);\n-    __ slli(tmp_reg, tmp_reg, 32);\n+    __ zext(value, value, 32);\n+    __ slli(tmp_reg, value, 32);\n@@ -2575,2 +2574,2 @@\n-      __ andi(tmp1, tmp1, 0xFFFF);\n-      __ andi(tmp2, tmp2, 0xFFFF);\n+      __ zext(tmp1, tmp1, 16);\n+      __ zext(tmp2, tmp2, 16);\n@@ -2711,2 +2710,2 @@\n-        __ andi(tmp5, tmp5, 0xFF);\n-        __ andi(cnt1, cnt1, 0xFF);\n+        __ zext(tmp5, tmp5, 8);\n+        __ zext(cnt1, cnt1, 8);\n@@ -2714,2 +2713,2 @@\n-        __ andi(tmp5, tmp5, 0xFFFF);\n-        __ andi(cnt1, cnt1, 0xFFFF);\n+        __ zext(tmp5, tmp5, 16);\n+        __ zext(cnt1, cnt1, 16);\n@@ -2724,2 +2723,2 @@\n-        __ andi(tmp1, tmp1, 0xFF);\n-        __ andi(tmp2, tmp2, 0xFF);\n+        __ zext(tmp1, tmp1, 8);\n+        __ zext(tmp2, tmp2, 8);\n@@ -2727,2 +2726,2 @@\n-        __ andi(tmp1, tmp1, 0xFFFF);\n-        __ andi(tmp2, tmp2, 0xFFFF);\n+        __ zext(tmp1, tmp1, 16);\n+        __ zext(tmp2, tmp2, 16);\n@@ -2790,1 +2789,2 @@\n-    __ andi(first, ch1, needle_isL ? 0xFF : 0xFFFF, first);\n+    __ zext(first, ch1, needle_isL ? 8 : 16);\n+\n@@ -2966,1 +2966,1 @@\n-    __ sign_extend(haystack_len, haystack_len, 32);\n+    __ sext(haystack_len, haystack_len, 32);\n@@ -5047,1 +5047,1 @@\n-    __ zero_extend(cur_w, cur_w, 32);\n+    __ zext(cur_w, cur_w, 32);\n@@ -5154,1 +5154,1 @@\n-    __ zero_extend(prev_ab, a, 32);\n+    __ zext(prev_ab, a, 32);\n@@ -5158,1 +5158,1 @@\n-    __ zero_extend(prev_cd, c, 32);\n+    __ zext(prev_cd, c, 32);\n@@ -5288,1 +5288,1 @@\n-    __ zero_extend(a, a, 32);\n+    __ zext(a, a, 32);\n@@ -5292,1 +5292,1 @@\n-    __ zero_extend(c, c, 32);\n+    __ zext(c, c, 32);\n@@ -5966,1 +5966,1 @@\n-    __ zero_extend(s1, adler, 16); \/\/ s1 = (adler & 0xffff)\n+    __ zext(s1, adler, 16); \/\/ s1 = (adler & 0xffff)\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -364,1 +364,1 @@\n-  __ zero_extend(c_rarg2, x11, 32);\n+  __ zext(c_rarg2, x11, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -725,1 +725,1 @@\n-  __ sign_extend(index, index, 32);\n+  __ sext(index, index, 32);\n@@ -743,1 +743,1 @@\n-  __ sign_extend(x10, x10, 32);\n+  __ sext(x10, x10, 32);\n@@ -1548,1 +1548,1 @@\n-      __ sign_extend(x10, x10, 32);\n+      __ sext(x10, x10, 32);\n@@ -1557,1 +1557,1 @@\n-      __ sign_extend(x10, x10, 8);\n+      __ sext(x10, x10, 8);\n@@ -1560,1 +1560,1 @@\n-      __ zero_extend(x10, x10, 16);\n+      __ zext(x10, x10, 16);\n@@ -1563,1 +1563,1 @@\n-      __ sign_extend(x10, x10, 16);\n+      __ sext(x10, x10, 16);\n@@ -1566,1 +1566,1 @@\n-      __ sign_extend(x10, x10, 32);\n+      __ sext(x10, x10, 32);\n@@ -1786,1 +1786,1 @@\n-  __ sign_extend(x10, x10, 32);\n+  __ sext(x10, x10, 32);\n@@ -1820,1 +1820,1 @@\n-  __ sign_extend(x10, x10, 32);\n+  __ sext(x10, x10, 32);\n@@ -2576,1 +2576,1 @@\n-  __ sign_extend(x10, x10, 32);\n+  __ sext(x10, x10, 32);\n@@ -3140,1 +3140,1 @@\n-      __ sign_extend(x10, x10, 32);\n+      __ sext(x10, x10, 32);\n@@ -3186,1 +3186,1 @@\n-      __ sign_extend(x10, x10, 32);\n+      __ sext(x10, x10, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}