{"files":[{"patch":"@@ -765,0 +765,1 @@\n+        Toolkit.getDefaultToolkit().sync();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTextUI.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Robot;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+\/*\n+ * @test\n+ * @bug 8299047\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test to check if the JTextField graphics performance is Good\n+ * for ~250ms especially in Linux using Xrender.\n+ * @run main\/manual CaretBlinkTest\n+ *\/\n+\n+public class CaretBlinkTest {\n+    static JFrame frame;\n+    static JTextField textField;\n+    static JButton button;\n+    static Robot robot;\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    initialize();\n+                } catch (Exception e){\n+                    throw  new RuntimeException(e)\n+                }\n+            }\n+        });\n+        requestFocus(textField);\n+        requestFocus(button);\n+        changeEditable();\n+        requestFocus(textField);\n+        robot.waitForIdle();\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    static void initialize() throws InterruptedException, InvocationTargetException {\n+        \/\/Initialize the components\n+        final String INSTRUCTIONS = \"\"\"\n+                Instructions to Test:\n+                1. The test is intended to verify the TextField's graphics state\n+                is synchronized and TextField is updated without delay.\n+                2. The test verifies it by Caret Blink happens at 250ms\n+                rate for Linux (Xrender).\n+                2. If the Caret Blinks smoothly without stopping the test PASS,\n+                 if caret blink stops then test FAILS.\n+                \"\"\";\n+        passFailJFrame = new PassFailJFrame(\"Test Instructions\", INSTRUCTIONS, 5L, 8, 40);\n+        frame = new JFrame(\"Caret Blink Test\");\n+        textField = new JTextField(\"Caret Blink Test\");\n+        button = new JButton(\"Button\");\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(50);\n+        frame.setLocationRelativeTo(null);\n+        textField.setEditable(false);\n+        textField.getCaret().setBlinkRate(250);\n+        frame.setLayout(new BorderLayout());\n+        frame.add(textField, BorderLayout.NORTH);\n+        frame.add(button, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+\n+        button.requestFocus();\n+    }\n+\n+    static void requestFocus(Component component) throws InterruptedException,\n+            InvocationTargetException {\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            component.requestFocus();\n+        });\n+    }\n+\n+    static void changeEditable() throws InterruptedException, InvocationTargetException {\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(()-> {\n+            textField.setEditable(!textField.isEditable());\n+        });\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextField\/CaretBlinkTest.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"}]}