{"files":[{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -9196,1 +9196,1 @@\n-    Label(loop);\n+    Label loop;\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,1 @@\n-             (abs(_disp) & 0xf0) << 4 | abs(_disp) & 0x0f;\n+             (abs(_disp) & 0xf0) << 4 | (abs(_disp) & 0x0f);\n","filename":"src\/hotspot\/cpu\/arm\/assembler_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2643,2 +2643,2 @@\n-  assert(src->is_double_cpu() && dest->is_address() ||\n-         src->is_address() && dest->is_double_cpu(),\n+  assert((src->is_double_cpu() && dest->is_address()) ||\n+         (src->is_address() && dest->is_double_cpu()),\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-  assert(!ret || ret && cb() == other.cb() && _deopt_state == other._deopt_state, \"inconsistent construction\");\n+  assert(!ret || (cb() == other.cb() && _deopt_state == other._deopt_state), \"inconsistent construction\");\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,1 @@\n-  } else if (oop_addr == nullptr & metadata_addr == nullptr) {\n+  } else if (oop_addr == nullptr && metadata_addr == nullptr) {\n","filename":"src\/hotspot\/cpu\/arm\/nativeInst_arm_32.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -399,1 +399,1 @@\n-         ni->is_movw() && VM_Version::supports_movw(), \"must be\");\n+         (ni->is_movw() && VM_Version::supports_movw()), \"must be\");\n","filename":"src\/hotspot\/cpu\/arm\/nativeInst_arm_32.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}