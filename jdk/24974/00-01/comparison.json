{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.util.OperatingSystem;\n@@ -111,8 +110,3 @@\n-            if (OperatingSystem.isMacOS()) {\n-                FileUtils.copyRecursive(Path.of(item),\n-                    appLayout.contentDirectory().resolve(Path.of(item).getFileName()),\n-                    LinkOption.NOFOLLOW_LINKS);\n-            } else {\n-                FileUtils.copyRecursive(Path.of(item),\n-                    appLayout.contentDirectory().resolve(Path.of(item).getFileName()));\n-            }\n+            FileUtils.copyRecursive(Path.of(item),\n+                appLayout.contentDirectory().resolve(Path.of(item).getFileName()),\n+                LinkOption.NOFOLLOW_LINKS);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractAppImageBuilder.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import static jdk.internal.util.OperatingSystem.LINUX;\n@@ -60,1 +61,1 @@\n-    private static final String TEST_DUKE_LINK = \"dukeplugLink.png\";\n+    private static final String TEST_DUKE_LINK = \"dukeplugLink.txt\";\n@@ -80,1 +81,1 @@\n-    @Parameter(value = {TEST_JAVA, TEST_DUKE_LINK}, ifOS = MACOS)\n+    @Parameter(value = {TEST_JAVA, TEST_DUKE_LINK}, ifOS = {MACOS,LINUX})\n@@ -96,1 +97,0 @@\n-                Path baseDir = getAppContentRoot(cmd);\n@@ -102,1 +102,1 @@\n-                            TKit.assertSymbolicLinkExists(baseDir.resolve(name));\n+                            TKit.assertSymbolicLinkExists(getAppContentPath(cmd, name));\n@@ -104,1 +104,1 @@\n-                            TKit.assertPathExists(baseDir.resolve(name), true);\n+                            TKit.assertPathExists(getAppContentPath(cmd, name), true);\n@@ -108,1 +108,0 @@\n-\n@@ -114,1 +113,1 @@\n-    private static Path getAppContentRoot(JPackageCommand cmd) {\n+    private static Path getAppContentPath(JPackageCommand cmd, Path name) {\n@@ -116,2 +115,3 @@\n-        if (copyInResources) {\n-            return contentDir.resolve(\"Resources\");\n+        \/\/ Links are always created in \"Resources\"\n+        if (copyInResources || name.toString().contains(\"Link\")) {\n+            return contentDir.resolve(\"Resources\").resolve(name);\n@@ -119,1 +119,1 @@\n-            return contentDir;\n+            return contentDir.resolve(name);\n@@ -146,1 +146,1 @@\n-            var appContentArg = TKit.createTempDirectory(\"app-content\").resolve(\"Resources\");\n+            Path appContentArg = TKit.createTempDirectory(\"app-content\").resolve(\"Resources\");\n@@ -153,2 +153,2 @@\n-                Files.createFile(targetPath);\n-                Files.createSymbolicLink(dstPath, targetPath.toAbsolutePath());\n+                Files.write(targetPath, \"foo\".getBytes());\n+                Files.createSymbolicLink(dstPath, targetPath.getFileName());\n@@ -162,1 +162,4 @@\n-            if (copyInResources) {\n+            boolean copy = (copyInResources || appContentPaths.stream()\n+                            .anyMatch(s -> s.toString().contains(\"Link\")));\n+\n+            if (copy) {\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppContentTest.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"}]}