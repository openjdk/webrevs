{"files":[{"patch":"@@ -24,0 +24,11 @@\n+\/*\n+ * @test\n+ * @bug 8345403\n+ * @summary FloatingDecimal parsing methods (use -Dseed=X to set seed)\n+ * @modules java.base\/jdk.internal.math\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.RandomFactory\n+ * @run junit TestRandomFloatingDecimal\n+ * @key randomness\n+ *\/\n+\n@@ -36,10 +47,0 @@\n-\/**\n- * @test\n- * @bug 8345403\n- * @summary FloatingDecimal parsing methods (use -Dseed=X to set seed)\n- * @modules java.base\/jdk.internal.math\n- * @library \/test\/lib\n- * @build jdk.test.lib.RandomFactory\n- * @run junit TestRandomFloatingDecimal\n- * @key randomness\n- *\/\n@@ -129,1 +130,1 @@\n-        if (RANDOM.nextInt(8) != 0) {  \/\/ 87.5% chance for a point\n+        if (RANDOM.nextInt(8) != 0) {  \/\/ 87.5% chance of point presence\n@@ -213,4 +214,1 @@\n-            switch (RANDOM.nextInt(4)) {  \/\/ 50% chance of tacit sign\n-                case 0 -> sb.append('-');\n-                case 1 -> sb.append('+');\n-            }\n+            appendRandomSign(sb);\n@@ -239,3 +237,1 @@\n-        for (; count > 0; --count) {\n-            sb.append('0');\n-        }\n+        sb.repeat('0', count);\n@@ -259,1 +255,1 @@\n-        int c = Character.forDigit(RANDOM.nextInt(min, 0x10), 0x10);\n+        char c = Character.forDigit(RANDOM.nextInt(min, 0x10), 0x10);\n@@ -261,3 +257,1 @@\n-        return (char) (c >= 'a'\n-                        ? RANDOM.nextBoolean() ? c : c - ('a' - 'A')\n-                        : c);\n+        return RANDOM.nextBoolean() ? Character.toLowerCase(c) : Character.toUpperCase(c);\n","filename":"test\/jdk\/jdk\/internal\/math\/FloatingDecimal\/TestRandomFloatingDecimal.java","additions":16,"deletions":22,"binary":false,"changes":38,"status":"modified"}]}