{"files":[{"patch":"@@ -79,1 +79,1 @@\n-    tstw(hdr, KlassFlags::_misc_is_value_based_class);\n+    tst(hdr, KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    tstw(tmp, KlassFlags::_misc_is_value_based_class);\n+    tst(tmp, KlassFlags::_misc_is_value_based_class);\n@@ -247,1 +247,1 @@\n-    tstw(t1, KlassFlags::_misc_is_value_based_class);\n+    tst(t1, KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-      tstw(tmp, KlassFlags::_misc_is_value_based_class);\n+      tst(tmp, KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,2 +75,1 @@\n-    z_lb(tmp, Address(tmp, Klass::misc_flags_offset()));\n-    testbit(tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/s390\/c1_MacroAssembler_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -446,2 +446,1 @@\n-        __ z_lb(klass, Address(klass, Klass::misc_flags_offset()));\n-        __ testbit(klass, exact_log2(KlassFlags::_misc_has_finalizer));\n+        __ z_tm(Address(klass, Klass::misc_flags_offset()), KlassFlags::_misc_has_finalizer);\n","filename":"src\/hotspot\/cpu\/s390\/c1_Runtime1_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1010,2 +1010,1 @@\n-    z_lb(tmp, Address(tmp, Klass::misc_flags_offset()));\n-    testbit(tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3510,2 +3510,1 @@\n-    z_lb(temp, Address(temp, Klass::misc_flags_offset()));\n-    testbit(temp, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    z_tm(Address(temp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n@@ -6156,2 +6155,1 @@\n-    z_lb(tmp1, Address(temp, Klass::misc_flags_offset()));\n-    testbit(tmp1, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    z_tm(Address(tmp1, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2324,2 +2324,1 @@\n-    __ z_lb(Rklass, Address(Rklass, Klass::misc_flags_offset()));\n-    __ testbit(Rklass, exact_log2(KlassFlags::_misc_has_finalizer));\n+    __ z_tm(Address(Rklass, Klass::misc_flags_offset()), KlassFlags::_misc_has_finalizer);\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,2 +61,1 @@\n-    movb(hdr, Address(hdr, Klass::misc_flags_offset()));\n-    testl(hdr, KlassFlags::_misc_is_value_based_class);\n+    testb(Address(hdr, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1169,2 +1169,1 @@\n-        __ movb(t, Address(t, Klass::misc_flags_offset()));\n-        __ testl(t, KlassFlags::_misc_has_finalizer);\n+        __ testb(Address(t, Klass::misc_flags_offset()), KlassFlags::_misc_has_finalizer);\n","filename":"src\/hotspot\/cpu\/x86\/c1_Runtime1_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -280,2 +280,1 @@\n-    movb(tmpReg, Address(tmpReg, Klass::misc_flags_offset()));\n-    testl(tmpReg, KlassFlags::_misc_is_value_based_class);\n+    testb(Address(tmpReg, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n@@ -600,2 +599,1 @@\n-    movb(rax_reg, Address(rax_reg, Klass::misc_flags_offset()));\n-    testl(rax_reg, KlassFlags::_misc_is_value_based_class);\n+    testb(Address(rax_reg, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1178,2 +1178,1 @@\n-      movb(tmp_reg, Address(tmp_reg, Klass::misc_flags_offset()));\n-      testl(tmp_reg, KlassFlags::_misc_is_value_based_class);\n+      testb(Address(tmp_reg, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2582,2 +2582,1 @@\n-    __ movb(rdi, Address(rdi, Klass::misc_flags_offset()));\n-    __ testl(rdi, KlassFlags::_misc_has_finalizer);\n+    __ testb(Address(rdi, Klass::misc_flags_offset()), KlassFlags::_misc_has_finalizer);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-jint ciKlass::misc_flags() {\n+klass_flags_t ciKlass::misc_flags() {\n","filename":"src\/hotspot\/share\/ci\/ciKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-  jint                   misc_flags();\n+  klass_flags_t          misc_flags();\n","filename":"src\/hotspot\/share\/ci\/ciKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -436,1 +436,1 @@\n-  static ByteSize misc_flags_offset()            { return byte_offset_of(Klass, _misc_flags); }\n+  static ByteSize misc_flags_offset()            { return byte_offset_of(Klass, _misc_flags._flags); }\n@@ -708,1 +708,1 @@\n-  u1 misc_flags() const                 { return _misc_flags.value(); }\n+  klass_flags_t misc_flags() const      { return _misc_flags.value(); }\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+using klass_flags_t = u1;\n+\n@@ -56,1 +58,1 @@\n-  u1 _flags;\n+  klass_flags_t _flags;\n@@ -61,1 +63,1 @@\n-  u1 value() const { return _flags; }\n+  klass_flags_t value() const { return _flags; }\n","filename":"src\/hotspot\/share\/oops\/klassFlags.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3757,1 +3757,1 @@\n-Node* LibraryCallKit::generate_access_flags_guard(Node* kls, int modifier_mask, int modifier_bits, RegionNode* region) {\n+Node* LibraryCallKit::generate_mods_flags_guard(Node* mods, int modifier_mask, int modifier_bits, RegionNode* region) {\n@@ -3760,2 +3760,0 @@\n-  Node* modp = basic_plus_adr(kls, in_bytes(Klass::access_flags_offset()));\n-  Node* mods = make_load(nullptr, modp, TypeInt::INT, T_INT, MemNode::unordered);\n@@ -3770,1 +3768,3 @@\n-  return generate_access_flags_guard(kls, JVM_ACC_INTERFACE, 0, region);\n+  Node* modp = basic_plus_adr(kls, in_bytes(Klass::access_flags_offset()));\n+  Node* mods = make_load(nullptr, modp, TypeInt::INT, T_INT, MemNode::unordered);\n+  return generate_mods_flags_guard(mods, JVM_ACC_INTERFACE, 0, region);\n@@ -3777,6 +3777,1 @@\n-  Node* mask = intcon(modifier_mask);\n-  Node* bits = intcon(modifier_bits);\n-  Node* mbit = _gvn.transform(new AndINode(mods, mask));\n-  Node* cmp  = _gvn.transform(new CmpINode(mbit, bits));\n-  Node* bol  = _gvn.transform(new BoolNode(cmp, BoolTest::ne));\n-  return generate_fair_guard(bol, region);\n+  return generate_mods_flags_guard(mods, modifier_mask, modifier_bits, region);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -159,3 +159,3 @@\n-  Node* generate_access_flags_guard(Node* kls,\n-                                    int modifier_mask, int modifier_bits,\n-                                    RegionNode* region);\n+  Node* generate_mods_flags_guard(Node* kls,\n+                                  int modifier_mask, int modifier_bits,\n+                                  RegionNode* region);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -376,2 +376,1 @@\n-        HotSpotVMConfig config = config();\n-        int miscFlags = UNSAFE.getByte(getKlassPointer() + config.klassMiscFlagsOffset);\n+        int miscFlags = UNSAFE.getByte(getKlassPointer() + config().klassMiscFlagsOffset);\n@@ -1115,2 +1114,1 @@\n-        HotSpotVMConfig config = config();\n-        int miscFlags = UNSAFE.getByte(getKlassPointer() + config.klassMiscFlagsOffset);\n+        int miscFlags = UNSAFE.getByte(getKlassPointer() + config().klassMiscFlagsOffset);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedObjectTypeImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}