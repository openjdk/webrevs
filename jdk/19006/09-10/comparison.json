{"files":[{"patch":"@@ -137,1 +137,1 @@\n-                    .findAttribute(Attributes.LINE_NUMBER_TABLE)\n+                    .findAttribute(Attributes.lineNumberTable())\n","filename":"test\/jdk\/java\/lang\/StackWalker\/TestBCI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-        var attr = m.findAttribute(Attributes.RUNTIME_VISIBLE_ANNOTATIONS).orElse(null);\n+        var attr = m.findAttribute(Attributes.runtimeVisibleAnnotations()).orElse(null);\n","filename":"test\/jdk\/jdk\/internal\/reflect\/CallerSensitive\/CallerSensitiveFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-        var attr = m.findAttribute(Attributes.RUNTIME_VISIBLE_ANNOTATIONS).orElse(null);\n+        var attr = m.findAttribute(Attributes.runtimeVisibleAnnotations()).orElse(null);\n@@ -253,1 +253,1 @@\n-        var attr = m.findAttribute(Attributes.RUNTIME_INVISIBLE_ANNOTATIONS).orElse(null);\n+        var attr = m.findAttribute(Attributes.runtimeInvisibleAnnotations()).orElse(null);\n","filename":"test\/jdk\/jdk\/internal\/reflect\/CallerSensitive\/CheckCSMs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.lang.classfile.Attributes;\n@@ -32,0 +31,1 @@\n+import java.lang.classfile.CodeModel;\n@@ -33,1 +33,0 @@\n-import java.lang.classfile.attribute.CodeAttribute;\n@@ -90,1 +89,1 @@\n-                CodeAttribute code = method.findAttribute(Attributes.CODE).orElseThrow();\n+                CodeModel code = method.code().orElseThrow();\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/TestIndyStringConcat.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}