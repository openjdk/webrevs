{"files":[{"patch":"@@ -826,5 +826,0 @@\n-java\/awt\/print\/PrinterJob\/CheckPrivilege.java 8343219 generic-all\n-javax\/print\/PrintSE\/PrintSE.sh 8343219 generic-all\n-java\/awt\/print\/PrinterJob\/SecurityDialogTest.java 8343219 generic-all\n-java\/awt\/Dialog\/PrintToFileTest\/PrintToFileGranted.java 8343219 generic-all\n-java\/awt\/Dialog\/PrintToFileTest\/PrintToFileRevoked.java 8343219 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-import java.awt.Button;\n-import java.awt.FlowLayout;\n-import java.awt.Frame;\n-import java.awt.PrintJob;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-class PrintToFileFrame extends Frame implements ActionListener {\n-    Button nativeDlg = new Button(\"Show print dialog\");\n-\n-    public PrintToFileFrame() {\n-        this.setLayout(new FlowLayout());\n-        add(nativeDlg);\n-        nativeDlg.addActionListener(this);\n-\n-        setSize(300, 300);\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n-    public void actionPerformed(ActionEvent ae) {\n-        if (System.getSecurityManager() == null) {\n-            throw new RuntimeException(\"Security manager isn't installed.\");\n-        }\n-\n-        try {\n-            System.getSecurityManager().checkPrintJobAccess();\n-            System.out.println(\"checkPrintJobAccess - OK\");\n-        } catch (SecurityException e) {\n-            System.out.println(\"checkPrintJobAccess - ERROR \" + e);\n-        }\n-\n-        PrintJob printJob = getToolkit().getPrintJob(this, null, null);\n-\n-        if (printJob != null) {\n-            System.out.println(\"Print Job: \" + printJob);\n-        } else {\n-            System.out.println(\"Print Job is null.\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/PrintToFileTest\/PrintToFileFrame.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.print.PrinterJob;\n-\n-\/*\n- * @test\n- * @bug 6275359\n- * @summary Test to verify system menu of a dialog on win32\n- * @requires (os.family == \"windows\")\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @compile PrintToFileFrame.java\n- * @compile PrintToFileGranted.java\n- * @run main\/manual\/policy=granted\/othervm PrintToFileGranted\n- *\/\n-\n-public class PrintToFileGranted {\n-    public static void main(String[] args) throws Exception {\n-        String INSTRUCTIONS;\n-        if (isPrintSupport()) {\n-            INSTRUCTIONS = \"\"\"\n-                    1. Click on 'Show file dialog' button A print dialog will come up\n-                    2. If checkbox 'Print to file' is enabled then the test passed\n-                       else the test failed\n-                    3. Close the print dialog before pressing PASS or FAIL buttons\n-                    \"\"\";\n-        } else {\n-            INSTRUCTIONS = \"\"\"\n-                    1. The test requires printer installed in your system,\n-                       but there is no printers found\n-                       Please install one and re-run the test\n-                    \"\"\";\n-        }\n-\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(35)\n-                .testUI(new PrintToFileFrame())\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public static boolean isPrintSupport() {\n-        PrinterJob pj = PrinterJob.getPrinterJob();\n-        return pj.getPrintService() != null;\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/PrintToFileTest\/PrintToFileGranted.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.print.PrinterJob;\n-\n-\/*\n- * @test\n- * @bug 6275359\n- * @summary Test to verify Printing ignores Security permissions\n- *          using native dialog\n- * @requires (os.family == \"windows\")\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @compile PrintToFileRevoked.java\n- * @run main\/manual\/policy=revoked\/othervm PrintToFileRevoked\n- *\/\n-\n-public class PrintToFileRevoked {\n-    public static void main(String[] args) throws Exception {\n-        String INSTRUCTIONS;\n-        if (isPrintSupport()) {\n-            INSTRUCTIONS = \"\"\"\n-                    1. Click on 'Show file dialog' button A print dialog will come up\n-                    2. If checkbox 'Print to file' is disabled then the test passed\n-                       else the test failed\n-                    3. Close the print dialog before pressing PASS or FAIL buttons\n-                    \"\"\";\n-        } else {\n-            INSTRUCTIONS = \"\"\"\n-                    1. The test requires printer installed in your system,\n-                       but there is no printers found\n-                       Please install one and re-run the test\n-                    \"\"\";\n-        }\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(35)\n-                .testUI(new PrintToFileFrame())\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public static boolean isPrintSupport() {\n-        PrinterJob pj = PrinterJob.getPrinterJob();\n-        return pj.getPrintService() != null;\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/PrintToFileTest\/PrintToFileRevoked.java","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -1,10 +0,0 @@\n-\/* AUTOMATICALLY GENERATED ON Thu Jan 03 15:48:39 PST 2002*\/\n-\/* DO NOT EDIT *\/\n-\n-grant {\n- permission java.lang.RuntimePermission \"queuePrintJob\";\n- permission java.util.PropertyPermission \"*\", \"read\";\n- permission java.io.FilePermission \"<<ALL FILES>>\", \"read\";\n- permission java.io.FilePermission \"<<ALL FILES>>\", \"write\";\n- permission java.lang.RuntimePermission \"accessClassInPackage.sun.util.locale.provider\";\n-};\n","filename":"test\/jdk\/java\/awt\/Dialog\/PrintToFileTest\/granted","additions":0,"deletions":10,"binary":false,"changes":10,"status":"deleted"},{"patch":"@@ -1,9 +0,0 @@\n-\/* AUTOMATICALLY GENERATED ON Thu Jan 03 15:48:39 PST 2002*\/\n-\/* DO NOT EDIT *\/\n-\n-grant {\n- permission java.lang.RuntimePermission \"queuePrintJob\";\n- permission java.util.PropertyPermission \"*\", \"read\";\n- permission java.lang.RuntimePermission \"accessClassInPackage.sun.util.locale.provider\";\n-};\n-\n","filename":"test\/jdk\/java\/awt\/Dialog\/PrintToFileTest\/revoked","additions":0,"deletions":9,"binary":false,"changes":9,"status":"deleted"},{"patch":"@@ -1,132 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test\n- * @key printer\n- * @bug 4151151\n- * @summary Confirm that low-level print code does doPrivilege.\n- * @author Graham Hamilton\n- * @run main\/othervm -Djava.security.manager=allow CheckPrivilege\n- *\/\n-\n-import java.awt.print.*;\n-\n-public class CheckPrivilege implements Printable {\n-\n-    static boolean verbose;\n-\n-    private static void println(String mess) {\n-        if (verbose) {\n-            System.err.println(mess);\n-        }\n-    }\n-\n-    \/**\n-     * SecurityManager that allows print requests, but\n-     * causes things like \"exec\" to get checked.\n-     *\/\n-    static class PrintLover extends SecurityManager {\n-        public void checkPrintJobAccess() {\n-        }\n-        public void checkPackageAccess(String pkg) {\n-        }\n-        public void checkPropertyAccess(String key) {\n-        }\n-    }\n-\n-    \/**\n-     * Internal exception to boucne us out of the print code\n-     *\/\n-    class Printing extends RuntimeException {\n-    }\n-\n-    public static void main(String argv[]) {\n-\n-        System.out.println( \"-----------------------------------------------------------------------\");\n-        System.out.println( \"INSTRUCTIONS: You should have a printer configured in your system to do this test. Test fails if you get this error message:\");\n-        System.out.println(\"   \\\"Regression: printing causes a NullPointerException\\\"\");\n-    System.out.println( \"-----------------------------------------------------------------------\");\n-\n-        if (argv.length > 0 && argv[0].equals(\"-v\")) {\n-            verbose = true;\n-        }\n-\n-        \/\/ We need to make sure AWT is initialized.  This is bug #4162674\n-        java.awt.Toolkit.getDefaultToolkit();\n-\n-        \/\/ Try to install our own security manager.\n-        try {\n-            SecurityManager sm = new PrintLover();\n-            println(\"Installing PrintLover security manager\");\n-            System.setSecurityManager(sm);\n-            println(\"Installed security manager OK\");\n-\n-        } catch (Throwable th) {\n-            System.err.println(\"Failed to install SecurityManager\");\n-            th.printStackTrace();\n-            throw new RuntimeException(\"Failed to install SecurityManager\");\n-        }\n-\n-        try {\n-            println(\"calling getPrinterJob\");\n-            PrinterJob pj = PrinterJob.getPrinterJob();\n-            if ((pj == null) || (pj.getPrintService() == null)){\n-                return;\n-            }\n-\n-            println(\"PrinterJob class is \" + pj.getClass());\n-            println(\"calling pj.setPrintable\");\n-            pj.setPrintable(new CheckPrivilege());\n-            println(\"calling pj.print\");\n-            pj.print();\n-            println(\"done pj.print\");\n-\n-        } catch (Printing ex) {\n-            \/\/ We get here if the print request started OK.\n-            println(\"Caught \\\"Printing\\\" exception OK\");\n-\n-        } catch (PrinterException ex) {\n-            System.err.println(\"Caught \" + ex);\n-            throw new RuntimeException(\"\" + ex);\n-\n-        } catch (NullPointerException ex) {\n-            \/\/ This is the bug:\n-            System.err.println(\"Caught \" + ex);\n-            System.err.println(\"Regression: printing causes a NullPointerException\");\n-            throw ex;\n-        }\n-\n-        \/\/System.exit(0);\n-\n-    }\n-\n-    \/\/ Back-call from the new print APIs.\n-    \/\/ We always say we have bothing to print.\n-    public int print(java.awt.Graphics g, PageFormat pf, int index) {\n-        println(\"Started printing \" + index);\n-        return Printable.NO_SUCH_PAGE;\n-    }\n-\n-\n-}\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/CheckPrivilege.java","additions":0,"deletions":132,"binary":false,"changes":132,"status":"deleted"},{"patch":"@@ -1,130 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.Frame;\n-import java.awt.print.PageFormat;\n-import java.awt.print.PrinterJob;\n-import java.lang.reflect.InvocationTargetException;\n-\n-import javax.print.PrintService;\n-import javax.print.attribute.HashPrintRequestAttributeSet;\n-import javax.print.attribute.PrintRequestAttributeSet;\n-import javax.swing.BorderFactory;\n-import javax.swing.Box;\n-import javax.swing.JComponent;\n-import javax.swing.JLabel;\n-import javax.swing.SwingUtilities;\n-\n-\/*\n- * @test\n- * @bug 4937672 5100706 6252456\n- * @key printer\n- * @summary Verifies \"Print to file\" option is disable if reading\/writing files\n- *          is not allowed by Security Manager.\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual\/othervm -Djava.security.manager=allow SecurityDialogTest\n- *\/\n-public class SecurityDialogTest {\n-    private static final String INSTRUCTIONS =\n-            \"This test brings up a native and cross-platform page and print dialogs.\\n\" +\n-            \"\\n\" +\n-            \"If the dialog has an option to save to file, the option ought \" +\n-            \"to be disabled.\\n\" +\n-            \"\\n\" +\n-            \"Press the Pass button if the \\\"Print to file\\\" option was disabled in\\n\" +\n-            \"all the dialogs where it was present.\\n\" +\n-            \"Otherwise, press the Fail button.\\n\" +\n-            \"\\n\" +\n-            \"The dialogs should be displayed even when \" +\n-            \"there is no queuePrintJob permission.\";\n-\n-    private static JLabel dialogType;\n-\n-    public static void main(String[] args) throws Exception {\n-        if (PrinterJob.lookupPrintServices().length == 0) {\n-            throw new RuntimeException(\"Printer not configured or available.\");\n-        }\n-\n-        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n-                .instructions(INSTRUCTIONS)\n-                .splitUIBottom(SecurityDialogTest::createTestUI)\n-                .rows((int) INSTRUCTIONS.lines().count() + 1)\n-                .columns(45)\n-                .build();\n-\n-        displayDialogs();\n-\n-        passFailJFrame.awaitAndCheck();\n-    }\n-\n-    private static JComponent createTestUI() {\n-        dialogType = new JLabel(\" \");\n-\n-        Box main = Box.createVerticalBox();\n-        main.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n-        main.add(new JLabel(\"Current Dialog:\"));\n-        main.add(Box.createVerticalStrut(4));\n-        main.add(dialogType);\n-        return main;\n-    }\n-\n-    private static void displayDialogs()\n-            throws InterruptedException, InvocationTargetException {\n-        final PrinterJob pj = PrinterJob.getPrinterJob();\n-\n-        \/\/ Install a security manager which does not allow reading and\n-        \/\/ writing of files.\n-        SecurityManager ptsm = new SecurityManager();\n-        System.setSecurityManager(ptsm);\n-\n-        PrintService[] services = PrinterJob.lookupPrintServices();\n-        for (int i = 0; i < services.length; i++) {\n-            System.out.println(\"SecurityDialogTest service \" + i + \" : \" + services[i]);\n-        }\n-\n-        System.out.println(\"SecurityDialogTest default service : \" + pj.getPrintService());\n-\n-        setDialogType(\"Native Page Dialog\");\n-        pj.pageDialog(new PageFormat());\n-\n-        setDialogType(\"Swing Page Dialog\");\n-        PrintRequestAttributeSet attributes = new HashPrintRequestAttributeSet();\n-        pj.pageDialog(attributes);\n-\n-        \/\/ With the security manager installed, save to file should now\n-        \/\/ be denied.\n-        setDialogType(\"Native Print Dialog\");\n-        pj.printDialog();\n-\n-        setDialogType(\"Swing Print Dialog\");\n-        pj.printDialog(attributes);\n-\n-        setDialogType(\"Test completed\");\n-    }\n-\n-    private static void setDialogType(String type)\n-            throws InterruptedException, InvocationTargetException {\n-        SwingUtilities.invokeAndWait(() -> dialogType.setText(type));\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/SecurityDialogTest.java","additions":0,"deletions":130,"binary":false,"changes":130,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.*;\n-import java.awt.print.*;\n-import javax.print.*;\n-import javax.print.attribute.*;\n-\n-public class PrintSE implements Printable {\n-\n-    public static void main(String[] args) throws Exception {\n-        GraphicsEnvironment.getLocalGraphicsEnvironment();\n-\n-        PrintService service = PrintServiceLookup.lookupDefaultPrintService();\n-        if (service == null) {\n-            System.out.println(\"No print service found.\");\n-            return;\n-        }\n-        SimpleDoc doc =\n-             new SimpleDoc(new PrintSE(),\n-                           DocFlavor.SERVICE_FORMATTED.PRINTABLE,\n-                           new HashDocAttributeSet());\n-        DocPrintJob job = service.createPrintJob();\n-        job.print(doc, new HashPrintRequestAttributeSet());\n-    }\n-\n-    public int print(Graphics g, PageFormat pf, int pg) {\n-       if (pg > 0) return NO_SUCH_PAGE;\n-       g.drawString(\"Test passes.\", 100, 100);\n-       return PAGE_EXISTS;\n-   }\n-}\n","filename":"test\/jdk\/javax\/print\/PrintSE\/PrintSE.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -1,57 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @key printer\n-# @bug 6662775\n-# @summary Tests queuePrintJob is sufficient permission for printing. This test \n-#          prints a page to a printer. If a document printer is installed, a \n-#          popup can appear (to select the file location).\n-# @run clean PrintSE\n-# @run build PrintSE\n-# @run compile PrintSE.java\n-# @run shell\/timeout=300 PrintSE.sh\n-\n-echo -------------------------------------------------------------\n-echo Launching test for `basename $0 .sh`\n-echo -------------------------------------------------------------\n-\n-createJavaPolicyFile()\n-{\n-   cat << EOF > ${TESTCLASSES}\/print.policy\n-grant {\n- permission java.lang.RuntimePermission \"queuePrintJob\";\n-};\n-EOF\n-}\n-\n-createJavaPolicyFile\n-\n-${TESTJAVA}\/bin\/java ${TESTVMOPTS} \\\n-    -Djava.security.manager \\\n-    -Djava.security.policy=${TESTCLASSES}\/print.policy \\\n-    -cp ${TESTCLASSES} PrintSE\n-\n-exit $?\n","filename":"test\/jdk\/javax\/print\/PrintSE\/PrintSE.sh","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"}]}