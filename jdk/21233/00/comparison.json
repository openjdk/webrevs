{"files":[{"patch":"@@ -66,0 +66,1 @@\n+    vm.unlockExperimentalOptions \\\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires ! vm.unlockExperimentalOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeExperimentalUnlockTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires ! vm.unlockExperimentalOptions\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMOptionWarning.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+        map.put(\"vm.unlockExperimentalOptions\", this::vmUnlockExperimentalOptions);\n@@ -255,0 +256,7 @@\n+    \/**\n+     * @return true if VM has experimental options unlocked\n+     *\/\n+    protected String vmUnlockExperimentalOptions() {\n+        return \"\" + WB.getBooleanVMFlag(\"UnlockExperimentalVMOptions\");\n+    }\n+\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}