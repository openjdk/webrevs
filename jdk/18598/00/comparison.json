{"files":[{"patch":"@@ -119,1 +119,1 @@\n-                long comp = Blocker.begin(blocking);\n+                boolean attempted = Blocker.begin(blocking);\n@@ -123,1 +123,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                long comp = Blocker.begin(blocking);\n+                boolean attempted = Blocker.begin(blocking);\n@@ -127,1 +127,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/ch\/KQueueSelectorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.internal.misc.Blocker;\n-\n@@ -72,7 +70,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return clonefile0(srcBuffer.address(), dstBuffer.address(),\n-                                  flags);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return clonefile0(srcBuffer.address(), dstBuffer.address(), flags);\n@@ -93,7 +85,2 @@\n-            long comp = Blocker.begin();\n-            try {\n-                setattrlist0(buffer.address(), commonattr, modTime, accTime,\n-                             createTime, options);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            setattrlist0(buffer.address(), commonattr, modTime, accTime,\n+                         createTime, options);\n@@ -115,7 +102,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            fsetattrlist0(fd, commonattr, modTime, accTime,\n-                          createTime, options);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        fsetattrlist0(fd, commonattr, modTime, accTime, createTime, options);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdNativeDispatcher.java","additions":4,"deletions":23,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-        long comp = Blocker.begin();\n+        boolean attempted = Blocker.begin();\n@@ -214,1 +214,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -213,6 +212,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            open0(name);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        open0(name);\n@@ -231,6 +225,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return read0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return read0();\n@@ -263,6 +252,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return readBytes(b, 0, b.length);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return readBytes(b, 0, b.length);\n@@ -287,6 +271,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return readBytes(b, off, len);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return readBytes(b, off, len);\n@@ -399,6 +378,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return length0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return length0();\n@@ -409,6 +383,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return position0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return position0();\n@@ -444,6 +413,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return skip0(n);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return skip0(n);\n@@ -473,6 +437,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return available0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return available0();\n@@ -569,2 +528,2 @@\n-                    this.channel = fc = FileChannelImpl.open(fd, path, true,\n-                        false, false, this);\n+                    fc = FileChannelImpl.open(fd, path, true, false, false, false, this);\n+                    this.channel = fc;\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileInputStream.java","additions":10,"deletions":51,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -289,6 +288,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            open0(name, append);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        open0(name, append);\n@@ -316,6 +310,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            write(b, append);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        write(b, append);\n@@ -346,6 +335,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            writeBytes(b, 0, b.length, append);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        writeBytes(b, 0, b.length, append);\n@@ -367,6 +351,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            writeBytes(b, off, len, append);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        writeBytes(b, off, len, append);\n@@ -463,2 +442,2 @@\n-                    this.channel = fc = FileChannelImpl.open(fd, path, false,\n-                        true, false, this);\n+                    fc = FileChannelImpl.open(fd, path, false, true, false, false, this);\n+                    this.channel = fc;\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileOutputStream.java","additions":6,"deletions":27,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+    private final boolean sync;  \/\/ O_SYNC or O_DSYNC\n@@ -232,0 +233,1 @@\n+        boolean sync = false;\n@@ -238,1 +240,1 @@\n-                if (mode.equals(\"rws\"))\n+                if (mode.equals(\"rws\")) {\n@@ -240,1 +242,2 @@\n-                else if (mode.equals(\"rwd\"))\n+                    sync = true;\n+                } else if (mode.equals(\"rwd\")) {\n@@ -242,1 +245,2 @@\n-                else\n+                    sync = true;\n+                } else\n@@ -247,0 +251,1 @@\n+        this.sync = sync;\n@@ -311,2 +316,2 @@\n-                    this.channel = fc = FileChannelImpl.open(fd, path, true,\n-                        rw, false, this);\n+                    fc = FileChannelImpl.open(fd, path, true, rw, sync, false, this);\n+                    this.channel = fc;\n@@ -353,6 +358,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            open0(name, mode);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        open0(name, mode);\n@@ -379,6 +379,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return read0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return read0();\n@@ -397,6 +392,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return readBytes0(b, off, len);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return readBytes0(b, off, len);\n@@ -550,1 +540,1 @@\n-        long comp = Blocker.begin();\n+        boolean attempted = Blocker.begin(sync);\n@@ -554,1 +544,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n@@ -569,1 +559,1 @@\n-        long comp = Blocker.begin();\n+        boolean attempted = Blocker.begin(sync);\n@@ -573,1 +563,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n@@ -633,6 +623,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            seek0(pos);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        seek0(pos);\n@@ -650,6 +635,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return length0();\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return length0();\n@@ -687,6 +667,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            setLength0(newLength);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        setLength0(newLength);\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":20,"deletions":45,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -373,1 +373,7 @@\n-        long comp = Blocker.begin();\n+        if (!Thread.currentThread().isVirtual()) {\n+            wait0(timeoutMillis);\n+            return;\n+        }\n+\n+        \/\/ virtual thread waiting\n+        boolean attempted = Blocker.begin();\n@@ -377,3 +383,2 @@\n-            Thread thread = Thread.currentThread();\n-            if (thread.isVirtual())\n-                thread.getAndClearInterrupt();\n+            \/\/ virtual thread's interrupt status needs to be cleared\n+            Thread.currentThread().getAndClearInterrupt();\n@@ -382,1 +387,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import jdk.internal.misc.Blocker;\n@@ -842,0 +843,69 @@\n+\n+        @Override\n+        public int read() throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read();\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public int read(byte[] b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public int read(byte[] b, int off, int len) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read(b, off, len);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * An output stream for a subprocess pipe.\n+     *\/\n+    static class PipeOutputStream extends FileOutputStream {\n+        PipeOutputStream(FileDescriptor fd) {\n+            super(fd);\n+        }\n+\n+        @Override\n+        public void write(int b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public void write(byte[] b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public void write(byte[] b, int off, int len) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b, off, len);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Process.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+import jdk.internal.misc.Blocker;\n@@ -2194,3 +2195,3 @@\n-        FileInputStream fdIn = new FileInputStream(FileDescriptor.in);\n-        FileOutputStream fdOut = new FileOutputStream(FileDescriptor.out);\n-        FileOutputStream fdErr = new FileOutputStream(FileDescriptor.err);\n+        FileInputStream fdIn = new In(FileDescriptor.in);\n+        FileOutputStream fdOut = new Out(FileDescriptor.out);\n+        FileOutputStream fdErr = new Out(FileDescriptor.err);\n@@ -2221,0 +2222,87 @@\n+    \/**\n+     * System.in.\n+     *\/\n+    private static class In extends FileInputStream {\n+        In(FileDescriptor fd) {\n+            super(fd);\n+        }\n+\n+        @Override\n+        public int read() throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read();\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public int read(byte[] b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public int read(byte[] b, int off, int len) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.read(b, off, len);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public long transferTo(OutputStream out) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                return super.transferTo(out);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * System.out\/System.err wrap this output stream.\n+     *\/\n+    private static class Out extends FileOutputStream {\n+        Out(FileDescriptor fd) {\n+            super(fd);\n+        }\n+\n+        public void write(int b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public void write(byte[] b) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+\n+        @Override\n+        public void write(byte[] b, int off, int len) throws IOException {\n+            boolean attempted = Blocker.begin();\n+            try {\n+                super.write(b, off, len);\n+            } finally {\n+                Blocker.end(attempted);\n+            }\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":91,"deletions":3,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -463,0 +463,5 @@\n+        \/\/ re-adjust parallelism if the virtual thread yielded when compensating\n+        if (currentThread() instanceof CarrierThread ct) {\n+            ct.endBlocking();\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1219,1 +1219,1 @@\n-            long comp = Blocker.begin();\n+            boolean attempted = Blocker.begin();\n@@ -1223,1 +1223,1 @@\n-                Blocker.end(comp);\n+                Blocker.end(attempted);\n@@ -1233,1 +1233,1 @@\n-            long comp = Blocker.begin();\n+            boolean attempted = Blocker.begin();\n@@ -1237,1 +1237,1 @@\n-                Blocker.end(comp);\n+                Blocker.end(attempted);\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            long comp = Blocker.begin();\n+            boolean attempted = Blocker.begin();\n@@ -107,1 +107,1 @@\n-                Blocker.end(comp);\n+                Blocker.end(attempted);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/MappedMemoryUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.concurrent.ForkJoinPool;\n@@ -30,1 +29,0 @@\n-import jdk.internal.access.JavaUtilConcurrentFJPAccess;\n@@ -37,1 +35,1 @@\n- *     long comp = Blocker.begin();\n+ *     boolean attempted = Blocker.begin();\n@@ -41,1 +39,1 @@\n- *         Blocker.end(comp);\n+ *         Blocker.end(attempted);\n@@ -65,2 +63,2 @@\n-     * Marks the beginning of a possibly blocking operation.\n-     * @return the return value from the attempt to compensate or -1 if not attempted\n+     * Marks the beginning of a blocking operation.\n+     * @return true if tryCompensate attempted\n@@ -68,1 +66,1 @@\n-    public static long begin() {\n+    public static boolean begin() {\n@@ -70,1 +68,2 @@\n-                && currentCarrierThread() instanceof CarrierThread ct && !ct.inBlocking()) {\n+                && Thread.currentThread().isVirtual()\n+                && currentCarrierThread() instanceof CarrierThread ct) {\n@@ -72,11 +71,1 @@\n-            boolean completed = false;\n-            try {\n-                long comp = ForkJoinPools.beginCompensatedBlock(ct.getPool());\n-                assert currentCarrierThread() == ct;\n-                completed = true;\n-                return comp;\n-            } finally {\n-                if (!completed) {\n-                    ct.endBlocking();\n-                }\n-            }\n+            return true;\n@@ -84,1 +73,1 @@\n-        return -1;\n+        return false;\n@@ -90,2 +79,1 @@\n-     * @return the return value from the attempt to compensate, -1 if not attempted\n-     * or blocking is false\n+     * @return true if tryCompensate attempted\n@@ -93,2 +81,2 @@\n-    public static long begin(boolean blocking) {\n-        return (blocking) ? begin() : -1;\n+    public static boolean begin(boolean blocking) {\n+        return (blocking) ? begin() : false;\n@@ -99,1 +87,1 @@\n-     * @param compensateReturn the value returned by the begin method\n+     * @param attempted if tryCompensate attempted\n@@ -101,3 +89,2 @@\n-    public static void end(long compensateReturn) {\n-        if (compensateReturn >= 0) {\n-            assert currentCarrierThread() instanceof CarrierThread ct && ct.inBlocking();\n+    public static void end(boolean attempted) {\n+        if (attempted) {\n@@ -105,1 +92,0 @@\n-            ForkJoinPools.endCompensatedBlock(ct.getPool(), compensateReturn);\n@@ -109,16 +95,0 @@\n-\n-    \/**\n-     * Defines static methods to invoke non-public ForkJoinPool methods via the\n-     * shared secret support.\n-     *\/\n-    private static class ForkJoinPools {\n-        private static final JavaUtilConcurrentFJPAccess FJP_ACCESS =\n-                SharedSecrets.getJavaUtilConcurrentFJPAccess();\n-        static long beginCompensatedBlock(ForkJoinPool pool) {\n-            return FJP_ACCESS.beginCompensatedBlock(pool);\n-        }\n-        static void endCompensatedBlock(ForkJoinPool pool, long post) {\n-            FJP_ACCESS.endCompensatedBlock(pool, post);\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Blocker.java","additions":16,"deletions":46,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import jdk.internal.access.JavaUtilConcurrentFJPAccess;\n@@ -52,1 +53,6 @@\n-    private boolean blocking;    \/\/ true if in blocking op\n+    \/\/ compensating state\n+    private static final int NOT_COMPENSATING = 0;\n+    private static final int COMPENSATE_IN_PROGRESS = 1;\n+    private static final int COMPENSATING = 2;\n+    private int compensating;\n+    private long compensateValue;   \/\/ FJP value to adjust release counts\n@@ -63,1 +69,1 @@\n-     * For use by {@link Blocker} to test if the thread is in a blocking operation.\n+     * Mark the start of a blocking operation.\n@@ -65,4 +71,4 @@\n-    boolean inBlocking() {\n-        \/\/assert JLA.currentCarrierThread() == this;\n-        return blocking;\n-    }\n+    public void beginBlocking() {\n+        assert Thread.currentThread().isVirtual() && JLA.currentCarrierThread() == this;\n+        if (compensating == NOT_COMPENSATING) {\n+            compensating = COMPENSATE_IN_PROGRESS;\n@@ -70,6 +76,19 @@\n-    \/**\n-     * For use by {@link Blocker} to mark the start of a blocking operation.\n-     *\/\n-    void beginBlocking() {\n-        \/\/assert JLA.currentCarrierThread() == this && !blocking;\n-        blocking = true;\n+            \/\/ FJP.tryCompensate to create or re-activate a spare thread\n+            long value;\n+            try {\n+                value = ForkJoinPools.beginCompensatedBlock(getPool());\n+            } catch (Throwable e) {\n+                if (compensating == COMPENSATE_IN_PROGRESS) {\n+                    compensating = NOT_COMPENSATING;\n+                }\n+                throw e;\n+            }\n+\n+            if (compensating == COMPENSATE_IN_PROGRESS) {\n+                compensateValue = value;\n+                compensating = COMPENSATING;\n+            } else {\n+                \/\/ forced preemption or preempted when attempting to compensate\n+                ForkJoinPools.endCompensatedBlock(getPool(), value);\n+            }\n+        }\n@@ -79,1 +98,1 @@\n-     * For use by {@link Blocker} to mark the end of a blocking operation.\n+     * Mark the end of a blocking operation.\n@@ -81,3 +100,6 @@\n-    void endBlocking() {\n-        \/\/assert JLA.currentCarrierThread() == this && blocking;\n-        blocking = false;\n+    public void endBlocking() {\n+        assert Thread.currentThread() == this || JLA.currentCarrierThread() == this;\n+        if (compensating == COMPENSATING) {\n+            ForkJoinPools.endCompensatedBlock(getPool(), compensateValue);\n+            compensating = NOT_COMPENSATING;\n+        }\n@@ -98,1 +120,1 @@\n-    private static final ThreadGroup carrierThreadGroup() {\n+    private static ThreadGroup carrierThreadGroup() {\n@@ -120,0 +142,15 @@\n+    \/**\n+     * Defines static methods to invoke non-public ForkJoinPool methods via the\n+     * shared secret support.\n+     *\/\n+    private static class ForkJoinPools {\n+        private static final JavaUtilConcurrentFJPAccess FJP_ACCESS =\n+                SharedSecrets.getJavaUtilConcurrentFJPAccess();\n+        static long beginCompensatedBlock(ForkJoinPool pool) {\n+            return FJP_ACCESS.beginCompensatedBlock(pool);\n+        }\n+        static void endCompensatedBlock(ForkJoinPool pool, long post) {\n+            FJP_ACCESS.endCompensatedBlock(pool, post);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CarrierThread.java","additions":55,"deletions":18,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+    private final boolean sync;  \/\/ O_SYNC or O_DSYNC\n@@ -125,1 +126,2 @@\n-                            boolean writable, boolean direct, Closeable parent)\n+                            boolean writable, boolean sync, boolean direct,\n+                            Closeable parent)\n@@ -131,0 +133,1 @@\n+        this.sync = sync;\n@@ -153,1 +156,1 @@\n-                                   boolean direct, Closeable parent)\n+                                   boolean sync, boolean direct, Closeable parent)\n@@ -155,1 +158,1 @@\n-        return new FileChannelImpl(fd, path, readable, writable, direct, parent);\n+        return new FileChannelImpl(fd, path, readable, writable, sync, direct, parent);\n@@ -233,1 +236,1 @@\n-                    long comp = Blocker.begin();\n+                    boolean attempted = Blocker.begin(direct);\n@@ -237,1 +240,1 @@\n-                        Blocker.end(comp);\n+                        Blocker.end(attempted);\n@@ -268,1 +271,1 @@\n-                    long comp = Blocker.begin();\n+                    boolean attempted = Blocker.begin(direct);\n@@ -272,1 +275,1 @@\n-                        Blocker.end(comp);\n+                        Blocker.end(attempted);\n@@ -301,1 +304,1 @@\n-                    long comp = Blocker.begin();\n+                    boolean attempted = Blocker.begin(sync | direct);\n@@ -305,1 +308,1 @@\n-                        Blocker.end(comp);\n+                        Blocker.end(attempted);\n@@ -337,1 +340,1 @@\n-                    long comp = Blocker.begin();\n+                    boolean attempted = Blocker.begin(sync | direct);\n@@ -341,1 +344,1 @@\n-                        Blocker.end(comp);\n+                        Blocker.end(attempted);\n@@ -368,7 +371,2 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        \/\/ in append-mode then position is advanced to end before writing\n-                        p = (append) ? nd.size(fd) : nd.seek(fd, -1);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    \/\/ in append-mode then position is advanced to end before writing\n+                    p = (append) ? nd.size(fd) : nd.seek(fd, -1);\n@@ -399,6 +397,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        p = nd.seek(fd, newPosition);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    p = nd.seek(fd, newPosition);\n@@ -427,6 +420,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        s = nd.size(fd);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    s = nd.size(fd);\n@@ -464,6 +452,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        size = nd.size(fd);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    size = nd.size(fd);\n@@ -476,6 +459,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        p = nd.seek(fd, -1);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    p = nd.seek(fd, -1);\n@@ -490,6 +468,1 @@\n-                        long comp = Blocker.begin();\n-                        try {\n-                            rv = nd.truncate(fd, newSize);\n-                        } finally {\n-                            Blocker.end(comp);\n-                        }\n+                        rv = nd.truncate(fd, newSize);\n@@ -505,6 +478,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        rp = nd.seek(fd, p);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    rp = nd.seek(fd, p);\n@@ -532,1 +500,1 @@\n-                long comp = Blocker.begin();\n+                boolean attempted = Blocker.begin();\n@@ -536,1 +504,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n@@ -627,6 +595,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                n = nd.transferTo(fd, position, count, targetFD, append);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            n = nd.transferTo(fd, position, count, targetFD, append);\n@@ -898,6 +861,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                n = nd.transferFrom(srcFD, fd, position, count, append);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            n = nd.transferFrom(srcFD, fd, position, count, append);\n@@ -1091,1 +1049,1 @@\n-                long comp = Blocker.begin();\n+                boolean attempted = Blocker.begin(direct);\n@@ -1095,1 +1053,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n@@ -1136,1 +1094,1 @@\n-                long comp = Blocker.begin();\n+                boolean attempted = Blocker.begin(sync | direct);\n@@ -1140,1 +1098,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n@@ -1365,6 +1323,1 @@\n-                    long comp = Blocker.begin();\n-                    try {\n-                        filesize = nd.size(fd);\n-                    } finally {\n-                        Blocker.end(comp);\n-                    }\n+                    filesize = nd.size(fd);\n@@ -1382,6 +1335,1 @@\n-                        long comp = Blocker.begin();\n-                        try {\n-                            rv = nd.truncate(fd, position + size);\n-                        } finally {\n-                            Blocker.end(comp);\n-                        }\n+                        rv = nd.truncate(fd, position + size);\n@@ -1578,1 +1526,1 @@\n-                long comp = Blocker.begin();\n+                boolean attempted = Blocker.begin();\n@@ -1582,1 +1530,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":34,"deletions":86,"binary":false,"changes":120,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -164,6 +163,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return canonicalize0(path);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return canonicalize0(path);\n@@ -179,7 +173,1 @@\n-        int rv;\n-        long comp = Blocker.begin();\n-        try {\n-            rv = getBooleanAttributes0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        int rv = getBooleanAttributes0(f);\n@@ -191,7 +179,1 @@\n-        int rv;\n-        long comp = Blocker.begin();\n-        try {\n-            rv = getBooleanAttributes0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        int rv = getBooleanAttributes0(f);\n@@ -210,6 +192,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return checkAccess0(f, access);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return checkAccess0(f, access);\n@@ -221,6 +198,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getLastModifiedTime0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getLastModifiedTime0(f);\n@@ -232,6 +204,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getLength0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getLength0(f);\n@@ -243,6 +210,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setPermission0(f, access, enable, owneronly);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setPermission0(f, access, enable, owneronly);\n@@ -256,6 +218,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return createFileExclusively0(path);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return createFileExclusively0(path);\n@@ -267,6 +224,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return delete0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return delete0(f);\n@@ -278,6 +230,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return list0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return list0(f);\n@@ -289,6 +236,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return createDirectory0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return createDirectory0(f);\n@@ -300,6 +242,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return rename0(f1, f2);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return rename0(f1, f2);\n@@ -311,6 +248,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setLastModifiedTime0(f, time);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setLastModifiedTime0(f, time);\n@@ -322,6 +254,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setReadOnly0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setReadOnly0(f);\n@@ -351,6 +278,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getSpace0(f, t);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getSpace0(f, t);\n","filename":"src\/java.base\/unix\/classes\/java\/io\/UnixFileSystem.java","additions":15,"deletions":93,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-            super(new FileOutputStream(newFileDescriptor(fd)));\n+            super(new PipeOutputStream(newFileDescriptor(fd)));\n","filename":"src\/java.base\/unix\/classes\/java\/lang\/ProcessImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-                long comp = Blocker.begin();\n+                boolean attempted = Blocker.begin(blocking);\n@@ -118,1 +118,1 @@\n-                    Blocker.end(comp);\n+                    Blocker.end(attempted);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/PollSelectorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,2 +134,2 @@\n-        return FileChannelImpl.open(fdObj, path.toString(), flags.read,\n-                flags.write, flags.direct, null);\n+        return FileChannelImpl.open(fdObj, path.toString(), flags.read, flags.write,\n+                (flags.sync || flags.dsync), flags.direct, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixChannelFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -685,1 +684,0 @@\n-                    long comp = Blocker.begin();\n@@ -695,2 +693,0 @@\n-                    } finally {\n-                        Blocker.end(comp);\n@@ -706,1 +702,0 @@\n-                        long comp = Blocker.begin();\n@@ -712,2 +707,0 @@\n-                        } finally {\n-                            Blocker.end(comp);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -70,6 +69,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return open0(buffer.address(), flags, mode);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return open0(buffer.address(), flags, mode);\n@@ -86,6 +80,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return openat0(dfd, buffer.address(), flags, mode);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return openat0(dfd, buffer.address(), flags, mode);\n@@ -141,6 +130,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                link0(existingBuffer.address(), newBuffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            link0(existingBuffer.address(), newBuffer.address());\n@@ -157,6 +141,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                unlink0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            unlink0(buffer.address());\n@@ -172,6 +151,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                unlinkat0(dfd, buffer.address(), flag);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            unlinkat0(dfd, buffer.address(), flag);\n@@ -188,6 +162,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                mknod0(buffer.address(), mode, dev);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            mknod0(buffer.address(), mode, dev);\n@@ -205,6 +174,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                rename0(fromBuffer.address(), toBuffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            rename0(fromBuffer.address(), toBuffer.address());\n@@ -222,6 +186,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                renameat0(fromfd, fromBuffer.address(), tofd, toBuffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            renameat0(fromfd, fromBuffer.address(), tofd, toBuffer.address());\n@@ -238,6 +197,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                mkdir0(buffer.address(), mode);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            mkdir0(buffer.address(), mode);\n@@ -253,6 +207,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                rmdir0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            rmdir0(buffer.address());\n@@ -270,6 +219,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return readlink0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return readlink0(buffer.address());\n@@ -287,6 +231,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return realpath0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return realpath0(buffer.address());\n@@ -303,6 +242,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                symlink0(targetBuffer.address(), linkBuffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            symlink0(targetBuffer.address(), linkBuffer.address());\n@@ -319,8 +253,3 @@\n-            long comp = Blocker.begin();\n-            try {\n-                int errno = stat0(buffer.address(), attrs);\n-                if (errno != 0) {\n-                    throw new UnixException(errno);\n-                }\n-            } finally {\n-                Blocker.end(comp);\n+            int errno = stat0(buffer.address(), attrs);\n+            if (errno != 0) {\n+                throw new UnixException(errno);\n@@ -333,6 +262,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return stat0(buffer.address(), attrs);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return stat0(buffer.address(), attrs);\n@@ -349,6 +273,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                lstat0(buffer.address(), attrs);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            lstat0(buffer.address(), attrs);\n@@ -364,6 +283,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            fstat0(fd, attrs);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        fstat0(fd, attrs);\n@@ -381,6 +295,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                fstatat0(dfd, buffer.address(), flag, attrs);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            fstatat0(dfd, buffer.address(), flag, attrs);\n@@ -397,6 +306,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                chown0(buffer.address(), uid, gid);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            chown0(buffer.address(), uid, gid);\n@@ -413,6 +317,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                lchown0(buffer.address(), uid, gid);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            lchown0(buffer.address(), uid, gid);\n@@ -428,6 +327,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            fchown0(fd, uid, gid);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        fchown0(fd, uid, gid);\n@@ -442,6 +336,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                chmod0(buffer.address(), mode);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            chmod0(buffer.address(), mode);\n@@ -457,6 +346,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            fchmod0(fd, mode);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        fchmod0(fd, mode);\n@@ -473,6 +357,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                utimes0(buffer.address(), times0, times1);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            utimes0(buffer.address(), times0, times1);\n@@ -488,6 +367,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            futimes0(fd, times0, times1);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        futimes0(fd, times0, times1);\n@@ -502,6 +376,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            futimens0(fd, times0, times1);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        futimens0(fd, times0, times1);\n@@ -519,6 +388,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                lutimes0(buffer.address(), times0, times1);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            lutimes0(buffer.address(), times0, times1);\n@@ -535,6 +399,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return opendir0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return opendir0(buffer.address());\n@@ -562,6 +421,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return readdir0(dir);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return readdir0(dir);\n@@ -575,6 +429,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return read0(fildes, buf, nbyte);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return read0(fildes, buf, nbyte);\n@@ -588,6 +437,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return write0(fildes, buf, nbyte);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return write0(fildes, buf, nbyte);\n@@ -602,6 +446,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return access0(buffer.address(), amode);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return access0(buffer.address(), amode);\n@@ -633,6 +472,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return getpwnam0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return getpwnam0(buffer.address());\n@@ -650,6 +484,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return getgrnam0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return getgrnam0(buffer.address());\n@@ -667,6 +496,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                statvfs0(buffer.address(), attrs);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            statvfs0(buffer.address(), attrs);\n@@ -690,6 +514,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return fgetxattr0(filedes, buffer.address(), valueAddress, valueLen);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return fgetxattr0(filedes, buffer.address(), valueAddress, valueLen);\n@@ -709,6 +528,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                fsetxattr0(filedes, buffer.address(), valueAddress, valueLen);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            fsetxattr0(filedes, buffer.address(), valueAddress, valueLen);\n@@ -726,6 +540,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                fremovexattr0(filedes, buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            fremovexattr0(filedes, buffer.address());\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":40,"deletions":231,"binary":false,"changes":271,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -494,6 +493,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return canonicalize0(path);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return canonicalize0(path);\n@@ -510,6 +504,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getBooleanAttributes0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getBooleanAttributes0(f);\n@@ -521,6 +510,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return checkAccess0(f, access);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return checkAccess0(f, access);\n@@ -532,6 +516,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getLastModifiedTime0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getLastModifiedTime0(f);\n@@ -543,6 +522,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return getLength0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return getLength0(f);\n@@ -554,6 +528,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setPermission0(f, access, enable, owneronly);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setPermission0(f, access, enable, owneronly);\n@@ -567,6 +536,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return createFileExclusively0(path);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return createFileExclusively0(path);\n@@ -578,6 +542,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return list0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return list0(f);\n@@ -589,6 +548,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return createDirectory0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return createDirectory0(f);\n@@ -600,6 +554,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setLastModifiedTime0(f, time);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setLastModifiedTime0(f, time);\n@@ -611,6 +560,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return setReadOnly0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return setReadOnly0(f);\n@@ -622,6 +566,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return delete0(f);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return delete0(f);\n@@ -633,6 +572,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return rename0(f1, f2);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return rename0(f1, f2);\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":13,"deletions":79,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -518,1 +518,1 @@\n-                    new FileOutputStream(stdin_fd));\n+                    new PipeOutputStream(stdin_fd));\n@@ -567,1 +567,1 @@\n-        long comp = Blocker.begin();\n+        boolean attempted = Blocker.begin();\n@@ -571,1 +571,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n@@ -596,1 +596,1 @@\n-            long comp = Blocker.begin();\n+            boolean attempted = Blocker.begin();\n@@ -600,1 +600,1 @@\n-                Blocker.end(comp);\n+                Blocker.end(attempted);\n","filename":"src\/java.base\/windows\/classes\/java\/lang\/ProcessImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            long comp = Blocker.begin(blocking);\n+            boolean attempted = Blocker.begin(blocking);\n@@ -116,1 +116,1 @@\n-                Blocker.end(comp);\n+                Blocker.end(attempted);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WEPollSelectorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,2 +169,2 @@\n-        return FileChannelImpl.open(fdObj, pathForWindows, flags.read,\n-                flags.write, flags.direct, null);\n+        return FileChannelImpl.open(fdObj, pathForWindows, flags.read, flags.write,\n+                (flags.sync || flags.dsync), flags.direct, null);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsChannelFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.misc.Blocker;\n@@ -71,11 +70,6 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return CreateFile0(buffer.address(),\n-                                   dwDesiredAccess,\n-                                   dwShareMode,\n-                                   lpSecurityAttributes,\n-                                   dwCreationDisposition,\n-                                   dwFlagsAndAttributes);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return CreateFile0(buffer.address(),\n+                               dwDesiredAccess,\n+                               dwShareMode,\n+                               lpSecurityAttributes,\n+                               dwCreationDisposition,\n+                               dwFlagsAndAttributes);\n@@ -116,6 +110,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                DeleteFile0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            DeleteFile0(buffer.address());\n@@ -135,6 +124,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                CreateDirectory0(buffer.address(), lpSecurityAttributes);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            CreateDirectory0(buffer.address(), lpSecurityAttributes);\n@@ -153,6 +137,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                RemoveDirectory0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            RemoveDirectory0(buffer.address());\n@@ -203,6 +182,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                FindFirstFile0(buffer.address(), data);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            FindFirstFile0(buffer.address(), data);\n@@ -233,6 +207,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return FindFirstFile1(buffer.address(), address);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return FindFirstFile1(buffer.address(), address);\n@@ -253,6 +222,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return FindNextFile0(handle, address);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return FindNextFile0(handle, address);\n@@ -274,6 +238,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                FindFirstStream0(buffer.address(), data);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            FindFirstStream0(buffer.address(), data);\n@@ -303,6 +262,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            return FindNextStream0(handle);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        return FindNextStream0(handle);\n@@ -328,6 +282,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            GetFileInformationByHandle0(handle, address);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        GetFileInformationByHandle0(handle, address);\n@@ -354,7 +303,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                CopyFileEx0(sourceBuffer.address(), targetBuffer.address(), flags,\n-                        addressToPollForCancel);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            CopyFileEx0(sourceBuffer.address(), targetBuffer.address(), flags, addressToPollForCancel);\n@@ -378,6 +321,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                MoveFileEx0(sourceBuffer.address(), targetBuffer.address(), flags);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            MoveFileEx0(sourceBuffer.address(), targetBuffer.address(), flags);\n@@ -396,6 +334,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                return GetFileAttributes0(buffer.address());\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            return GetFileAttributes0(buffer.address());\n@@ -416,6 +349,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                SetFileAttributes0(buffer.address(), dwFileAttributes);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            SetFileAttributes0(buffer.address(), dwFileAttributes);\n@@ -436,6 +364,1 @@\n-            long comp = Blocker.begin();\n-            try {\n-                GetFileAttributesEx0(buffer.address(), address);\n-            } finally {\n-                Blocker.end(comp);\n-            }\n+            GetFileAttributesEx0(buffer.address(), address);\n@@ -458,6 +381,1 @@\n-        long comp = Blocker.begin();\n-        try {\n-            SetFileTime0(handle, createTime, lastAccessTime, lastWriteTime);\n-        } finally {\n-            Blocker.end(comp);\n-        }\n+        SetFileTime0(handle, createTime, lastAccessTime, lastWriteTime);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsNativeDispatcher.java","additions":21,"deletions":103,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -371,1 +371,7 @@\n-        long comp = Blocker.begin();\n+        if (!Thread.currentThread().isVirtual()) {\n+            wait0(timeoutMillis);\n+            return;\n+        }\n+\n+        \/\/ virtual thread waiting\n+        boolean attempted = Blocker.begin();\n@@ -375,3 +381,2 @@\n-            Thread thread = Thread.currentThread();\n-            if (thread.isVirtual())\n-                thread.getAndClearInterrupt();\n+            \/\/ virtual thread's interrupt status needs to be cleared\n+            Thread.currentThread().getAndClearInterrupt();\n@@ -380,1 +385,1 @@\n-            Blocker.end(comp);\n+            Blocker.end(attempted);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI04\/bi04t002\/newclass02\/java.base\/java\/lang\/Object.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}