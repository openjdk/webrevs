{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.util.function.Supplier;\n@@ -105,3 +106,10 @@\n-    private void enter() {\n-        if (nameSimplifier != null || whereClauses != null) {\n-            throw new IllegalStateException();\n+    private String enter(Supplier<String> r) {\n+        ClassNameSimplifier nameSimplifier = this.nameSimplifier;\n+        WhereClauses whereClauses = this.whereClauses;\n+        try {\n+            this.nameSimplifier = new ClassNameSimplifier();\n+            this.whereClauses = new WhereClauses();\n+            return r.get();\n+        } finally {\n+            this.nameSimplifier = nameSimplifier;\n+            this.whereClauses = whereClauses;\n@@ -109,7 +117,0 @@\n-        nameSimplifier = new ClassNameSimplifier();\n-        whereClauses = new WhereClauses();\n-    }\n-\n-    private void exit() {\n-        nameSimplifier = null;\n-        whereClauses = null;\n@@ -139,2 +140,1 @@\n-        enter();\n-        try {\n+        return enter(() -> {\n@@ -156,3 +156,1 @@\n-        } finally {\n-            exit();\n-        }\n+        });\n@@ -163,2 +161,1 @@\n-        enter();\n-        try {\n+        return enter(() -> {\n@@ -167,3 +164,1 @@\n-        } finally {\n-            exit();\n-        }\n+        });\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/RichDiagnosticFormatter.java","additions":15,"deletions":20,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2025, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8356441\n+ * @summary Recursive formatting in RichDiagnosticFormatter\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.main jdk.compiler\/com.sun.tools.javac.api\n+ * @build toolbox.ToolBox toolbox.JavacTask\n+ * @run main RichFormatterWithTypeAnnotationsReentrantTest\n+ *\/\n+import toolbox.JavacTask;\n+import toolbox.Task;\n+import toolbox.TestRunner;\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class RichFormatterWithTypeAnnotationsReentrantTest extends TestRunner {\n+    ToolBox tb;\n+\n+    public RichFormatterWithTypeAnnotationsReentrantTest() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        new RichFormatterWithTypeAnnotationsReentrantTest()\n+                .runTests(m -> new Object[] {Paths.get(m.getName())});\n+    }\n+\n+    @Test\n+    public void test(Path base) throws Exception {\n+        Path libClasses = base.resolve(\"libclasses\");\n+        Files.createDirectories(libClasses);\n+        new JavacTask(tb)\n+                .outdir(libClasses)\n+                .sources(\n+                        \"\"\"\n+                        package lib;\n+                        enum Bar {\n+                          BAZ\n+                        }\n+                        \"\"\",\n+                        \"\"\"\n+                        package lib;\n+                        import java.lang.annotation.ElementType;\n+                        import java.lang.annotation.Retention;\n+                        import java.lang.annotation.RetentionPolicy;\n+                        import java.lang.annotation.Target;\n+\n+                        @Retention(RetentionPolicy.RUNTIME)\n+                        @interface Foo {\n+                          Bar value();\n+                        }\n+                        \"\"\",\n+                        \"\"\"\n+                        package lib;\n+                        import java.lang.annotation.ElementType;\n+                        import java.lang.annotation.Retention;\n+                        import java.lang.annotation.RetentionPolicy;\n+                        import java.lang.annotation.Target;\n+\n+                        @Retention(RetentionPolicy.RUNTIME)\n+                        @Target({ElementType.TYPE_USE, ElementType.PARAMETER})\n+                        @Foo(Bar.BAZ)\n+                        @interface A {}\n+                        \"\"\",\n+                        \"\"\"\n+                        package lib;\n+                        public interface M {\n+                          String f(@A String k, @A String v);\n+                        }\n+                        \"\"\")\n+                .run()\n+                .writeAll();\n+        Files.delete(libClasses.resolve(\"lib\").resolve(\"Bar.class\"));\n+        String code =\n+                \"\"\"\n+                import lib.M;\n+                class T implements M {\n+                }\n+                \"\"\";\n+        \/\/ verify that the compilation fails wtih an error, and does not crash\n+        new JavacTask(tb)\n+                .classpath(libClasses)\n+                .sources(code)\n+                .run(Task.Expect.FAIL);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/RichFormatterWithTypeAnnotationsReentrantTest.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"}]}