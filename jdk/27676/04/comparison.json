{"files":[{"patch":"@@ -2272,1 +2272,1 @@\n-  Label resolved, clinit_barrier_slow;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2287,1 +2287,8 @@\n-  __ br(Assembler::EQ, resolved);\n+  __ br(Assembler::NE, Lclinit_barrier_slow);\n+\n+  \/\/ Class initialization barrier for static methods\n+  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n+    __ ldr(temp, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n+    __ load_method_holder(temp, temp);\n+    __ clinit_barrier(temp, rscratch1, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2291,1 +2298,1 @@\n-  __ bind(clinit_barrier_slow);\n+  __ bind(Lclinit_barrier_slow);\n@@ -2300,8 +2307,1 @@\n-  __ bind(resolved);\n-\n-  \/\/ Class initialization barrier for static methods\n-  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n-    __ ldr(temp, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n-    __ load_method_holder(temp, temp);\n-    __ clinit_barrier(temp, rscratch1, nullptr, &clinit_barrier_slow);\n-  }\n+  __ bind(Ldone);\n@@ -2316,1 +2316,1 @@\n-  Label resolved;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2335,1 +2335,10 @@\n-  __ br(Assembler::EQ, resolved);\n+  __ br(Assembler::NE, Lclinit_barrier_slow);\n+\n+  \/\/ Class initialization barrier for static fields\n+  if (VM_Version::supports_fast_class_init_checks() &&\n+      (bytecode() == Bytecodes::_getstatic || bytecode() == Bytecodes::_putstatic)) {\n+    const Register field_holder = temp;\n+\n+    __ ldr(field_holder, Address(Rcache, in_bytes(ResolvedFieldEntry::field_holder_offset())));\n+    __ clinit_barrier(field_holder, rscratch1, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2338,0 +2347,2 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n@@ -2344,1 +2355,1 @@\n-  __ bind(resolved);\n+  __ bind(Ldone);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":25,"deletions":14,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2182,1 +2182,2 @@\n-  Label Lresolved, Ldone, L_clinit_barrier_slow;\n+\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2186,7 +2187,0 @@\n-  switch (code) {\n-    case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n-    case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n-    default:\n-      break;\n-  }\n-\n@@ -2200,4 +2194,1 @@\n-  __ beq(CR0, Lresolved);\n-\n-  \/\/ Class initialization barrier slow path lands here as well.\n-  __ bind(L_clinit_barrier_slow);\n+  __ bne(CR0, Lclinit_barrier_slow);\n@@ -2205,9 +2196,0 @@\n-  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n-  __ li(R4_ARG2, code);\n-  __ call_VM(noreg, entry, R4_ARG2, true);\n-\n-  \/\/ Update registers with resolved info.\n-  __ load_method_entry(Rcache, Rindex);\n-  __ b(Ldone);\n-\n-  __ bind(Lresolved);\n@@ -2223,1 +2205,1 @@\n-    __ clinit_barrier(klass, R16_thread, nullptr \/*L_fast_path*\/, &L_clinit_barrier_slow);\n+    __ clinit_barrier(klass, R16_thread, &Ldone, \/*L_slow_path*\/ nullptr);\n@@ -2226,0 +2208,8 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ li(R4_ARG2, code);\n+  __ call_VM(noreg, entry, R4_ARG2);\n+\n+  \/\/ Update registers with resolved info.\n+  __ load_method_entry(Rcache, Rindex);\n@@ -2229,3 +2219,1 @@\n-void TemplateTable::resolve_cache_and_index_for_field(int byte_no,\n-                                            Register Rcache,\n-                                            Register index) {\n+void TemplateTable::resolve_cache_and_index_for_field(int byte_no, Register Rcache, Register index) {\n@@ -2234,1 +2222,1 @@\n-  Label resolved;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2249,1 +2237,14 @@\n-  __ beq(CR0, resolved);\n+  __ bne(CR0, Lclinit_barrier_slow);\n+\n+  __ isync(); \/\/ Order load wrt. succeeding loads.\n+\n+  if (VM_Version::supports_fast_class_init_checks() &&\n+      (bytecode() == Bytecodes::_getstatic || bytecode() == Bytecodes::_putstatic)) {\n+    const Register field_holder = R4_ARG2;\n+\n+    \/\/ InterpreterRuntime::resolve_get_put sets field_holder and finally release-stores put_code.\n+    \/\/ We have seen the released put_code above and will read the corresponding field_holder and init_state\n+    \/\/ (ordered by compare-branch-isync).\n+    __ ld(field_holder, ResolvedFieldEntry::field_holder_offset(), Rcache);\n+    __ clinit_barrier(field_holder, R16_thread, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2252,0 +2253,2 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n@@ -2253,1 +2256,1 @@\n-  __ li(R4_ARG2, (int)code);\n+  __ li(R4_ARG2, code);\n@@ -2258,4 +2261,1 @@\n-  __ bind(resolved);\n-\n-  \/\/ Use acquire semantics for the bytecode (see ResolvedFieldEntry::fill_in()).\n-  __ isync(); \/\/ Order load wrt. succeeding loads.\n+  __ bind(Ldone);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2171,1 +2171,1 @@\n-  Label resolved, clinit_barrier_slow;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2188,1 +2188,8 @@\n-  __ beq(temp, t0, resolved);  \/\/ have we resolved this bytecode?\n+  __ bne(temp, t0, Lclinit_barrier_slow);  \/\/ have we resolved this bytecode?\n+\n+  \/\/ Class initialization barrier for static methods\n+  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n+    __ ld(temp, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n+    __ load_method_holder(temp, temp);\n+    __ clinit_barrier(temp, t0, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2192,1 +2199,1 @@\n-  __ bind(clinit_barrier_slow);\n+  __ bind(Lclinit_barrier_slow);\n@@ -2202,8 +2209,1 @@\n-  __ bind(resolved);\n-\n-  \/\/ Class initialization barrier for static methods\n-  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n-    __ ld(temp, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n-    __ load_method_holder(temp, temp);\n-    __ clinit_barrier(temp, t0, nullptr, &clinit_barrier_slow);\n-  }\n+  __ bind(Ldone);\n@@ -2218,1 +2218,1 @@\n-  Label resolved;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2222,3 +2222,3 @@\n-  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n-  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n-  default: break;\n+    case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n+    case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n+    default: break;\n@@ -2238,1 +2238,10 @@\n-  __ beq(temp, t0, resolved);\n+  __ bne(temp, t0, Ldone);\n+\n+  \/\/ Class initialization barrier for static fields\n+  if (VM_Version::supports_fast_class_init_checks() &&\n+      (bytecode() == Bytecodes::_getstatic || bytecode() == Bytecodes::_putstatic)) {\n+    const Register field_holder = temp;\n+\n+    __ ld(field_holder, Address(Rcache, in_bytes(ResolvedFieldEntry::field_holder_offset())));\n+    __ clinit_barrier(field_holder, t0, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2241,0 +2250,2 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n@@ -2247,1 +2258,1 @@\n-  __ bind(resolved);\n+  __ bind(Ldone);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":28,"deletions":17,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2363,1 +2363,1 @@\n-  Label resolved, clinit_barrier_slow;\n+  Label Lresolved, Lclinit_barrier_slow;\n@@ -2378,1 +2378,10 @@\n-  __ z_bre(resolved);\n+  __ z_brne(Lclinit_barrier_slow);\n+\n+  \/\/ Class initialization barrier for static methods\n+  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n+    const Register method = Z_R1_scratch;\n+    const Register klass  = Z_R1_scratch;\n+    __ z_lg(method, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n+    __ load_method_holder(klass, method);\n+    __ clinit_barrier(klass, Z_thread, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2382,1 +2391,1 @@\n-  __ bind(clinit_barrier_slow);\n+  __ bind(Lclinit_barrier_slow);\n@@ -2389,1 +2398,0 @@\n-  __ bind(resolved);\n@@ -2391,8 +2399,1 @@\n-  \/\/ Class initialization barrier for static methods\n-  if (VM_Version::supports_fast_class_init_checks() && bytecode() == Bytecodes::_invokestatic) {\n-    const Register method = Z_R1_scratch;\n-    const Register klass  = Z_R1_scratch;\n-    __ z_lg(method, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n-    __ load_method_holder(klass, method);\n-    __ clinit_barrier(klass, Z_thread, nullptr \/*L_fast_path*\/, &clinit_barrier_slow);\n-  }\n+  __ bind(Ldone);\n@@ -2411,1 +2412,1 @@\n-  NearLabel resolved;\n+  Label Label Lclinit_barrier_slow, Ldone;\n@@ -2425,1 +2426,10 @@\n-  __ z_bre(resolved);\n+  __ z_brne(Lclinit_barrier_slow);\n+\n+  \/\/ Class initialization barrier for static fields\n+  if (VM_Version::supports_fast_class_init_checks() &&\n+      (bytecode() == Bytecodes::_getstatic || bytecode() == Bytecodes::_putstatic)) {\n+    const Register field_holder = index;\n+\n+    __ load_sized_value(field_holder, Address(cache, ResolvedFieldEntry::field_holder_offset()), sizeof(void*), false);\n+    __ clinit_barrier(field_holder, Z_thread, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2428,0 +2438,2 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n@@ -2435,1 +2447,1 @@\n-  __ bind(resolved);\n+  __ bind(Ldone);\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":27,"deletions":15,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2199,2 +2199,1 @@\n-  Label L_clinit_barrier_slow;\n-  Label resolved;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2218,12 +2217,1 @@\n-  __ jcc(Assembler::equal, resolved);\n-\n-  \/\/ resolve first time through\n-  \/\/ Class initialization barrier slow path lands here as well.\n-  __ bind(L_clinit_barrier_slow);\n-  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n-  __ movl(temp, code);\n-  __ call_VM(noreg, entry, temp);\n-  \/\/ Update registers with resolved info\n-  __ load_method_entry(cache, index);\n-\n-  __ bind(resolved);\n+  __ jcc(Assembler::notEqual, Lclinit_barrier_slow);\n@@ -2238,1 +2226,1 @@\n-    __ clinit_barrier(klass, nullptr \/*L_fast_path*\/, &L_clinit_barrier_slow);\n+    __ clinit_barrier(klass, &Ldone, \/*L_slow_path*\/ nullptr);\n@@ -2240,0 +2228,10 @@\n+\n+  \/\/ resolve first time through\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ movl(temp, code);\n+  __ call_VM(noreg, entry, temp);\n+  \/\/ Update registers with resolved info\n+  __ load_method_entry(cache, index);\n+  __ bind(Ldone);\n@@ -2243,2 +2241,2 @@\n-                                            Register cache,\n-                                            Register index) {\n+                                                      Register cache,\n+                                                      Register index) {\n@@ -2248,1 +2246,1 @@\n-  Label resolved;\n+  Label Lclinit_barrier_slow, Ldone;\n@@ -2265,1 +2263,10 @@\n-  __ jcc(Assembler::equal, resolved);\n+  __ jcc(Assembler::notEqual, Lclinit_barrier_slow);\n+\n+  \/\/ Class initialization barrier for static fields\n+  if (VM_Version::supports_fast_class_init_checks() &&\n+      (bytecode() == Bytecodes::_getstatic || bytecode() == Bytecodes::_putstatic)) {\n+    const Register field_holder = temp;\n+\n+    __ movptr(field_holder, Address(cache, in_bytes(ResolvedFieldEntry::field_holder_offset())));\n+    __ clinit_barrier(field_holder, &Ldone, \/*L_slow_path*\/ nullptr);\n+  }\n@@ -2268,0 +2275,2 @@\n+  \/\/ Class initialization barrier slow path lands here as well.\n+  __ bind(Lclinit_barrier_slow);\n@@ -2273,2 +2282,1 @@\n-\n-  __ bind(resolved);\n+  __ bind(Ldone);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":29,"deletions":21,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -706,1 +706,1 @@\n-  if (!uninitialized_static) {\n+  if (!uninitialized_static || VM_Version::supports_fast_class_init_checks()) {\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}