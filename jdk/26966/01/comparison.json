{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,3 +95,5 @@\n-        if (errno() == UnixConstants.ELOOP)\n-            return new FileSystemException(file, other, errorString()\n-                + \" or unable to access attributes of symbolic link\");\n+        if (errno() == UnixConstants.ELOOP) {\n+            String msg = file + \": \" + errorString()\n+                 + \" or unable to access attributes of symbolic link\";\n+            return new FileSystemLoopException(msg);\n+        }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixException.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8154364\n+ * @bug 8154364 8366254\n@@ -36,0 +36,1 @@\n+import java.nio.file.FileSystemLoopException;\n@@ -454,1 +455,1 @@\n-        assertThrows(FileSystemException.class, () -> Files.isSameFile(x, y));\n+        assertThrows(FileSystemLoopException.class, () -> Files.isSameFile(x, y));\n","filename":"test\/jdk\/java\/nio\/file\/Files\/IsSameFile.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}