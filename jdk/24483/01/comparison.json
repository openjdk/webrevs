{"files":[{"patch":"@@ -285,3 +285,23 @@\n-<li><p>On Windows, if using <a href=\"#cygwin\">Cygwin<\/a>, extra care\n-must be taken to make sure the environment is consistent. It is\n-recommended that you follow this procedure:<\/p>\n+<li><p>On Windows, extra care must be taken to have a smooth building\n+experience:<\/p>\n+<ul>\n+<li><p>Make sure that all relevant paths have short names. Short names\n+are used by the build system to create space-free alternative paths.\n+Short name creation is enabled per volume. The default setting can be\n+checked with the command: <code>fsutil 8dot3name query<\/code>. If short\n+name creation was turned off when a directory was created, it will not\n+have a short name. Whether a short name exists can be checked by running\n+<code>dir \/X<\/code> in the containing directory (in cmd.exe). If a short\n+path is present you should see something like 'ASDF~1' being displayed\n+in one of the columns of the ouput. If a directory is missing a short\n+name, the safest way to get one is to enable short names for that\n+particular volume with\n+<code>fsutil 8dot3name set &lt;drive   letter&gt;: 0<\/code> (note that\n+you need to run as administrator for this), and then re-create the\n+particular directory. A short name should be generated automatically\n+then. Another option is to manually assign a short name to the directory\n+using\n+<code>fsutil file setShortName &lt;path&gt; &lt;short name&gt;<\/code>.<\/p><\/li>\n+<li><p>If using <a href=\"#cygwin\">Cygwin<\/a>, you must make sure the\n+file permissions and attributes between Windows and Cygwin are\n+consistent. It is recommended that you follow this procedure:<\/p>\n@@ -297,0 +317,3 @@\n+<\/ul>\n+<p>Failure to follow this procedure might result in hard-to-debug build\n+problems.<\/p><\/li>\n@@ -314,3 +337,1 @@\n-<\/ul>\n-<p>Failure to follow this procedure might result in hard-to-debug build\n-problems.<\/p><\/li>\n+<\/ul><\/li>\n","filename":"doc\/building.html","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -86,13 +86,33 @@\n-* On Windows, if using [Cygwin](#cygwin), extra care must be taken to make sure\n-  the environment is consistent. It is recommended that you follow this\n-  procedure:\n-\n-  * Create the directory that is going to contain the top directory of the JDK\n-    clone by using the `mkdir` command in the Cygwin bash shell. That is, do\n-    *not* create it using Windows Explorer. This will ensure that it will have\n-    proper Cygwin attributes, and that it's children will inherit those\n-    attributes.\n-\n-  * Do not put the JDK clone in a path under your Cygwin home directory. This\n-    is especially important if your user name contains spaces and\/or mixed\n-    upper and lower case letters.\n+* On Windows, extra care must be taken to have a smooth building experience:\n+\n+  * Make sure that all relevant paths have short names. Short names are used by\n+    the build system to create space-free alternative paths. Short name\n+    creation is enabled per volume. The default setting can be checked with the\n+    command: `fsutil 8dot3name query`. If short name creation was turned off\n+    when a directory was created, it will not have a short name. Whether a\n+    short name exists can be checked by running `dir \/X` in the containing\n+    directory (in cmd.exe). If a short path is present you should see something\n+    like 'ASDF~1' being displayed in one of the columns of the ouput. If a\n+    directory is missing a short name, the safest way to get one is to enable\n+    short names for that particular volume with `fsutil 8dot3name set <drive\n+    letter>: 0` (note that you need to run as administrator for this), and then\n+    re-create the particular directory. A short name should be generated\n+    automatically then. Another option is to manually assign a short name to\n+    the directory using `fsutil file setShortName <path> <short name>`.\n+\n+  * If using [Cygwin](#cygwin), you must make sure the file permissions and\n+    attributes between Windows and Cygwin are consistent. It is recommended\n+    that you follow this procedure:\n+\n+    * Create the directory that is going to contain the top directory of the\n+      JDK clone by using the `mkdir` command in the Cygwin bash shell. That is,\n+      do *not* create it using Windows Explorer. This will ensure that it will\n+      have proper Cygwin attributes, and that it's children will inherit those\n+      attributes.\n+\n+    * Do not put the JDK clone in a path under your Cygwin home directory. This\n+      is especially important if your user name contains spaces and\/or mixed\n+      upper and lower case letters.\n+\n+    Failure to follow these procedures might result in hard-to-debug build\n+    problems.\n@@ -116,3 +136,0 @@\n-  Failure to follow this procedure might result in hard-to-debug build\n-  problems.\n-\n","filename":"doc\/building.md","additions":33,"deletions":16,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-but also decreases test’s readability and stability. It is much easier\n+but also decreases test's readability and stability. It is much easier\n@@ -201,1 +201,1 @@\n-localize a defect’s root-cause. One should use <code>ASSERT<\/code> if it\n+localize a defect's root-cause. One should use <code>ASSERT<\/code> if it\n@@ -238,1 +238,1 @@\n-<p><code>EXPECT_EQ<\/code> just compares pointers’ values, which is\n+<p><code>EXPECT_EQ<\/code> just compares pointers' values, which is\n@@ -296,1 +296,1 @@\n-<code>CompilerLogging<\/code>, G1 GC — test group <code>G1GC<\/code>, and\n+<code>CompilerLogging<\/code>, G1 GC - test group <code>G1GC<\/code>, and\n@@ -348,1 +348,1 @@\n-<p>It greatly simplifies understanding of friendship’s purpose and\n+<p>It greatly simplifies understanding of friendship's purpose and\n@@ -438,1 +438,1 @@\n-changing flags’ values. GoogleTest provides two ways to set up\n+changing flags' values. GoogleTest provides two ways to set up\n@@ -447,1 +447,1 @@\n-<li><p>Changing a flag’s value could break the invariants between flags'\n+<li><p>Changing a flag's value could break the invariants between flags'\n","filename":"doc\/hotspot-unit-tests.html","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,1 +162,1 @@\n-  FIXPATH_ARGS=\"-e $PATHTOOL -p $WINENV_PREFIX_ARG -r ${WINENV_ROOT\/\/\\\\\/\\\\\\\\}  -t $WINENV_TEMP_DIR -c $CMD -q\"\n+  FIXPATH_ARGS=\"-e $PATHTOOL -p $WINENV_PREFIX_ARG -r ${WINENV_ROOT\/\/\\\\\/\\\\\\\\}  -t $WINENV_TEMP_DIR -c $CMD\"\n@@ -218,1 +218,1 @@\n-        -c $CMD -q\"\n+        -c $CMD\"\n","filename":"make\/autoconf\/basic_windows.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,2 @@\n-# $2: if NOFAIL, errors will be silently ignored\n+# $2: if NOFAIL, if the path cannot be resolved then errors will not be\n+#     reported and an empty path will be set\n@@ -68,2 +69,12 @@\n-      if test \"x$2\" = \"xNOFAIL\"; then\n-        quiet_option=\"-q\"\n+      imported_path=`$FIXPATH_BASE -q import \"$path\"`\n+      if test $? -ne 0 || test ! -e $imported_path; then\n+        if test \"x$2\" != \"xNOFAIL\"; then\n+          AC_MSG_NOTICE([The path of $1, which is given as \"$path\", can not be properly resolved.])\n+          AC_MSG_NOTICE([Please see the section \"Special Considerations\" in building.md.])\n+          AC_MSG_NOTICE([This is the error message given by fixpath:])\n+          # Rerun fixpath without -q to get an error message\n+          $FIXPATH_BASE import \"$path\"\n+          AC_MSG_ERROR([Cannot continue])\n+        else\n+          imported_path=\"\"\n+        fi\n@@ -71,2 +82,2 @@\n-      imported_path=`$FIXPATH_BASE $quiet_option import \"$path\"`\n-      $FIXPATH_BASE verify \"$imported_path\"\n+\n+      $FIXPATH_BASE -q verify \"$imported_path\"\n@@ -75,1 +86,1 @@\n-          AC_MSG_ERROR([The path of $1, which resolves as \"$path\", could not be imported.])\n+          AC_MSG_ERROR([The path of $1, which resolves as \"$path\", could not be verified.])\n@@ -86,1 +97,1 @@\n-    else\n+    else # non-Windows\n@@ -236,1 +247,1 @@\n-        new_path=`$FIXPATH_BASE import \"$path\"`\n+        new_path=`$FIXPATH_BASE -q import \"$path\"`\n@@ -238,1 +249,1 @@\n-        if test ! -e $new_path; then\n+        if test $? -ne 0 || test ! -e $new_path; then\n@@ -241,4 +252,8 @@\n-          new_path=`$FIXPATH_BASE import \"$input\"`\n-          if test ! -e $new_path; then\n-            AC_MSG_NOTICE([The command for $1, which resolves as \"$input\", can not be found.])\n-            AC_MSG_ERROR([Cannot locate $input])\n+          new_path=`$FIXPATH_BASE -q import \"$input\"`\n+          if test $? -ne 0 || test ! -e $new_path; then\n+            AC_MSG_NOTICE([The command for $1, which is given as \"$input\", can not be properly resolved.])\n+            AC_MSG_NOTICE([Please see the section \"Special Considerations\" in building.md.])\n+            AC_MSG_NOTICE([This is the error message given by fixpath:])\n+            # Rerun fixpath without -q to get an error message\n+            $FIXPATH_BASE import \"$input\"\n+            AC_MSG_ERROR([Cannot continue])\n@@ -356,1 +371,9 @@\n-            AC_MSG_ERROR([User supplied tool $1=\"$tool_command\" does not exist or is not executable])\n+            # Maybe the path had spaces in it; try again with the entire argument\n+            if test ! -x \"$tool_override\" && test ! -x \"${tool_override}.exe\"; then\n+              AC_MSG_ERROR([User supplied tool $1=\"$tool_override\" does not exist or is not executable])\n+            else\n+              # We successfully located the executable assuming the spaces were part of the path.\n+              # We can't combine using paths with spaces and arguments, so assume tool_args is empty.\n+              tool_command=\"$tool_override\"\n+              tool_args=\"\"\n+            fi\n","filename":"make\/autoconf\/util_paths.m4","additions":38,"deletions":15,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-        if [[ ! $winpath =~ ^[-_.:\\\\a-zA-Z0-9]*$ ]] ; then\n+        if [[ ! $winpath =~ ^[-_.:~\\\\a-zA-Z0-9]*$ ]] ; then\n@@ -165,0 +165,10 @@\n+          if [[ ! $shortpath =~ ^[-_.:~\\\\a-zA-Z0-9]*$ ]] ; then\n+            if [[ $QUIET != true ]]; then\n+              echo fixpath: failure: Path \"'\"$path\"'\" could not be converted to short path >&2\n+            fi\n+            if [[ $IGNOREFAILURES != true ]]; then\n+              exit 1\n+            else\n+              shortpath=\"\"\n+            fi\n+          fi\n","filename":"make\/scripts\/fixpath.sh","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}