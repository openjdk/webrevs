{"files":[{"patch":"@@ -31,2 +31,0 @@\n-#include \"runtime\/sharedRuntime.hpp\"\n-#include \"utilities\/macros.hpp\"\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,0 +210,1 @@\n+  int inline_limit = ArrayOperationPartialInlineSize \/ type2aelembytes(type);\n@@ -213,1 +214,0 @@\n-  uint shift  = exact_log2(type2aelembytes(type));\n@@ -220,1 +220,1 @@\n-    const_len = lty->get_con() << shift;\n+    const_len = lty->get_con();\n@@ -226,1 +226,1 @@\n-  if ( const_len > ArrayOperationPartialInlineSize ||\n+  if (const_len > inline_limit ||\n@@ -233,7 +233,1 @@\n-  int inline_limit = ArrayOperationPartialInlineSize \/ type2aelembytes(type);\n-  Node* casted_length = new CastLLNode(*ctrl, length, TypeLong::make(0, inline_limit, Type::WidenMin));\n-  transform_later(casted_length);\n-  Node* copy_bytes = new LShiftXNode(length, intcon(shift));\n-  transform_later(copy_bytes);\n-\n-  Node* cmp_le = new CmpULNode(copy_bytes, longcon(ArrayOperationPartialInlineSize));\n+  Node* cmp_le = new CmpULNode(length, longcon(inline_limit));\n@@ -246,0 +240,2 @@\n+  Node* casted_length = new CastLLNode(inline_block, length, TypeLong::make(0, inline_limit, Type::WidenMin), ConstraintCastNode::RegularDependency);\n+  transform_later(casted_length);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -79,2 +79,0 @@\n-compiler\/c2\/TestVerifyConstraintCasts.java 8355574 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @bug 8251871 8285301\n+ * @bug 8251871 8285301 8355574\n@@ -41,0 +41,3 @@\n+ * @run main\/othervm\/timeout=600 -XX:-TieredCompilation -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:+StressGCM -XX:VerifyConstraintCasts=2\n+ *      -XX:UseAVX=3 -XX:+UnlockDiagnosticVMOptions -XX:ArrayOperationPartialInlineSize=32 -XX:+UnlockDiagnosticVMOptions -XX:MaxVectorSize=32 -XX:+UnlockDiagnosticVMOption\n+ *      compiler.arraycopy.TestArrayCopyConjoint\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyConjoint.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}