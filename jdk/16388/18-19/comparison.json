{"files":[{"patch":"@@ -258,1 +258,2 @@\n-                Lower v = new Lower(m, document, source, replacements, autorefScheme);\n+                var firstTreePos = trees.getFirst().getStartPosition();\n+                Lower v = new Lower(m, document, source, firstTreePos, replacements, autorefScheme);\n@@ -695,0 +696,6 @@\n+        \/**\n+         * The initial position in the enclosing comment of the source\n+         * being transformed.\n+         *\/\n+        private int mainStartPos;\n+\n@@ -731,0 +738,1 @@\n+         * @param sourcePos the position in the enclosing comment of the source to be converted\n@@ -734,1 +742,4 @@\n-        public Lower(DocTreeMaker docTreeMaker, Node document, String source, List<?> replacements,\n+        public Lower(DocTreeMaker docTreeMaker,\n+                     Node document,\n+                     String source, int sourcePos,\n+                     List<?> replacements,\n@@ -747,1 +758,0 @@\n-\n@@ -752,0 +762,1 @@\n+            mainStartPos = sourcePos;\n@@ -850,1 +861,1 @@\n-            return pos == NOPOS ? NOPOS : pos + replaceAdjustPos;\n+            return pos == NOPOS ? NOPOS : mainStartPos + pos + replaceAdjustPos;\n","filename":"src\/jdk.internal.md\/share\/classes\/jdk\/internal\/markdown\/MarkdownTransformer.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -116,1 +116,4 @@\n-            new DocCommentTester(true).run(list);\n+            new DocCommentTester(true, true).run(list);\n+        } else if (!list.isEmpty() && \"-useStandardTransformer\".equals(list.get(0))) {\n+            list.remove(0);\n+            new DocCommentTester(false, false).run(list);\n@@ -118,1 +121,1 @@\n-            new DocCommentTester(false).run(list);\n+            new DocCommentTester(false, true).run(list);\n@@ -125,1 +128,3 @@\n-    public DocCommentTester(boolean useBreakIterator) {\n+    public final boolean useIdentityTransformer;\n+\n+    public DocCommentTester(boolean useBreakIterator, boolean useIdentityTtransformer) {\n@@ -127,0 +132,1 @@\n+        this.useIdentityTransformer = useIdentityTtransformer;\n@@ -143,3 +149,6 @@\n-        \/\/ disable default use of the \"standard\" transformer, so that we can examine\n-        \/\/ the trees as created by DocCommentParser.\n-        trees.setDocCommentTreeTransformer(new JavacTrees.IdentityTransformer());\n+\n+        if (useIdentityTransformer) {\n+            \/\/ disable default use of the \"standard\" transformer, so that we can examine\n+            \/\/ the trees as created by DocCommentParser.\n+            trees.setDocCommentTreeTransformer(new JavacTrees.IdentityTransformer());\n+        }\n","filename":"test\/langtools\/tools\/javac\/doctree\/DocCommentTester.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @run main DocCommentTester -useStandardTransformer MarkdownTest.java\n","filename":"test\/langtools\/tools\/javac\/doctree\/MarkdownTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}