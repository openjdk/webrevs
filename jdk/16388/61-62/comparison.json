{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8307184\n+ * @summary Test basic operation of Elements.getDocCommentKind\n+ * @library \/tools\/lib \/tools\/javac\/lib\n+ * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocCommentKind\n+ * @compile -processor TestGetDocCommentKind -proc:only TestGetDocCommentKind.java\n+ *\/\n+\n+import java.util.*;\n+import javax.annotation.processing.*;\n+import javax.lang.model.element.*;\n+import javax.lang.model.util.*;\n+import javax.lang.model.util.Elements.DocCommentKind;\n+\n+public class TestGetDocCommentKind extends JavacTestingAbstractProcessor {\n+    final Elements vacuousElements = new VacuousElements();\n+\n+    public boolean process(Set<? extends TypeElement> annotations,\n+                           RoundEnvironment roundEnv) {\n+        if (!roundEnv.processingOver()) {\n+            boolean elementSeen = false;\n+\n+            for (TypeElement typeRoot : ElementFilter.typesIn(roundEnv.getRootElements()) ) {\n+                for (Element element : typeRoot.getEnclosedElements()) {\n+                    ExpectedKind expectedKind = element.getAnnotation(ExpectedKind.class);\n+                    if (expectedKind != null ) {\n+                        elementSeen = true;\n+\n+                        checkKind(element, elements, expectedKind.value());\n+                        checkKind(element, vacuousElements, null);\n+                    }\n+                }\n+\n+                if (!elementSeen) {\n+                    throw new RuntimeException(\"No elements seen.\");\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+    void checkKind(Element e, Elements elementUtils, DocCommentKind expectedKind) {\n+        var actualKind = elementUtils.getDocCommentKind(e);\n+        if (actualKind != expectedKind) {\n+            messager.printError(\"Unexpected doc comment kind found: \" + actualKind\n+                    + \"expected: \" + expectedKind, e);\n+        }\n+    }\n+\n+    @interface ExpectedKind {\n+        DocCommentKind value();\n+    }\n+\n+    \/**\n+     * Traditional comment.\n+     *\/\n+    @ExpectedKind(DocCommentKind.TRADITIONAL)\n+    public void traditionalComment() { }\n+\n+    \/\/\/ End-of-line comment.\n+    @ExpectedKind(DocCommentKind.END_OF_LINE)\n+    public void endOfLineComment() { }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocCommentKind.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Test basic operation of Elements.getDocComments\n+ * @summary Test basic operation of Elements.getDocComment\n@@ -29,2 +29,2 @@\n- * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocComments\n- * @compile -processor TestGetDocComments -proc:only TestGetDocComments.java\n+ * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocComment_Block\n+ * @compile -processor TestGetDocComment_Block -proc:only TestGetDocComment_Block.java\n@@ -36,1 +36,0 @@\n-import javax.lang.model.util.Elements.DocCommentKind;\n@@ -41,1 +40,1 @@\n- * Test basic workings of Elements.getDocComments for block comments\n+ * Test basic operation of Elements.getDocComment for block comments\n@@ -43,1 +42,1 @@\n-public class TestGetDocComments extends JavacTestingAbstractProcessor {\n+public class TestGetDocComment_Block extends JavacTestingAbstractProcessor {\n@@ -62,6 +61,0 @@\n-\n-                        DocCommentKind expectedDocCommentKind = DocCommentKind.TRADITIONAL;\n-                        DocCommentKind actualDocCommentKind = elements.getDocCommentKind(element);\n-                        if (expectedDocCommentKind != actualDocCommentKind) {\n-                            messager.printError(\"Unexpected doc comment kind found: \" + actualDocCommentKind, element);\n-                        }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComment_Block.java","additions":5,"deletions":12,"binary":false,"changes":17,"previous_filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComments.java","status":"renamed"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Test basic operation of Elements.getDocComments\n+ * @summary Test basic operation of Elements.getDocComment\n@@ -29,2 +29,2 @@\n- * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocCommentsLine\n- * @compile -processor TestGetDocCommentsLine -proc:only TestGetDocCommentsLine.java\n+ * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocComment_Line\n+ * @compile -processor TestGetDocComment_Line -proc:only TestGetDocComment_Line.java\n@@ -39,1 +39,0 @@\n-import javax.lang.model.util.Elements.DocCommentKind;\n@@ -44,1 +43,1 @@\n- * Test basic workings of Elements.getDocComments for line comments\n+ * Test basic operation of Elements.getDocComment for line comments\n@@ -46,1 +45,1 @@\n-public class TestGetDocCommentsLine extends JavacTestingAbstractProcessor {\n+public class TestGetDocComment_Line extends JavacTestingAbstractProcessor {\n@@ -67,6 +66,0 @@\n-\n-                        DocCommentKind expectedDocCommentKind = DocCommentKind.END_OF_LINE;\n-                        DocCommentKind actualDocCommentKind = elements.getDocCommentKind(element);\n-                        if (expectedDocCommentKind != actualDocCommentKind) {\n-                            messager.printError(\"Unexpected doc comment kind found: \" + actualDocCommentKind, element);\n-                        }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComment_Line.java","additions":5,"deletions":12,"binary":false,"changes":17,"previous_filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocCommentsLine.java","status":"renamed"}]}