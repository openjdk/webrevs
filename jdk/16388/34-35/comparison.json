{"files":[{"patch":"@@ -223,1 +223,1 @@\n-     * @param generating whether to write a \"Geneterating ...\" message to the console\n+     * @param generating whether to write a \"Generating ...\" message to the console\n@@ -1565,0 +1565,18 @@\n+\n+                if (includeHeadingInTableOfContents(htag)) {\n+                    StringBuilder headingContent = new StringBuilder();\n+                    new AbstractVisitor() {\n+                        @Override\n+                        public void visit(jdk.internal.org.commonmark.node.Code code) {\n+                            headingContent.append(code.getLiteral());\n+                            super.visit(code);\n+                        }\n+\n+                        @Override\n+                        public void visit(jdk.internal.org.commonmark.node.Text text) {\n+                            headingContent.append(text.getLiteral());\n+                            super.visit(text);\n+                        }\n+                    }.visit(heading);\n+                    tableOfContents.addLink(id, Text.of(headingContent));\n+                }\n@@ -1887,2 +1905,1 @@\n-        \/\/ Record second-level headings for use in table of contents\n-        if (tableOfContents != null && node.getName().toString().equalsIgnoreCase(\"h2\")) {\n+        if (includeHeadingInTableOfContents(node.getName())) {\n@@ -1893,0 +1910,7 @@\n+    private boolean includeHeadingInTableOfContents(CharSequence tag) {\n+        \/\/ Record second-level headings for use in table of contents\n+        \/\/ TODO: maybe extend this to all headings up to a given level\n+        return tableOfContents != null\n+                && tag.toString().equalsIgnoreCase(\"h2\");\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -793,0 +793,74 @@\n+    @Test\n+    public void testHeading_TOC(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+\n+        \/\/ in the following, note that the @ following the backtick\n+        \/\/ is just a literal character and not part of any tag\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    package p;\n+                    \/\/\/ First sentence.\n+                    \/\/\/\n+                    \/\/\/ # ATX heading `code` _underline_ text\n+                    \/\/\/\n+                    \/\/\/ Lorem ipsum\n+                    \/\/\/\n+                    \/\/\/ ## ATX Subheading\n+                    \/\/\/\n+                    \/\/\/ Lorem ipsum\n+                    \/\/\/\n+                    \/\/\/ Setext heading\n+                    \/\/\/ ==============\n+                    \/\/\/\n+                    \/\/\/ Lorem ipsum\n+                    \/\/\/\n+                    \/\/\/ Setext subheading\n+                    \/\/\/ ------------------\n+                    \/\/\/\n+                    \/\/\/ Lorem ipsum\n+                    public class C {\n+                        \/\/\/ Method m.\n+                        \/\/\/ # subheading in m()\n+                        \/\/\/\n+                        \/\/\/ Lorem ipsum\n+                        public void m() { }\n+                    }\"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-Xdoclint:none\",\n+                \"--no-platform-links\",\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \/\/ note only the level 1 headings in the class description\n+                \"\"\"\n+                    <div class=\"toc-header\">Contents&nbsp;\n+                    <input type=\"text\" class=\"filter-input\" disabled placeholder=\"Filter\" aria-label=\"Filter table of contents\" autocomplete=\"off\" autocapitalize=\"off\">\n+                    <input type=\"reset\" class=\"reset-filter\" disabled value=\"Reset\">\n+                    <\/div>\n+                    <button class=\"hide-sidebar\"><span>Hide sidebar&nbsp;<\/span>&#10094;<\/button><button class=\"show-sidebar\">&#10095;<span>&nbsp;Show sidebar<\/span><\/button>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#\" tabindex=\"0\">Description<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#atx-heading-code-underline-text-heading\" tabindex=\"0\">ATX heading code underline text<\/a><\/li>\n+                    <li><a href=\"#setext-heading-heading\" tabindex=\"0\">Setext heading<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#constructor-summary\" tabindex=\"0\">Constructor Summary<\/a><\/li>\n+                    <li><a href=\"#method-summary\" tabindex=\"0\">Method Summary<\/a><\/li>\n+                    <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#%3Cinit%3E()\" tabindex=\"0\">C()<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#m()\" tabindex=\"0\">m()<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <\/ol>\n+                    \"\"\");\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMarkdown\/TestMarkdown.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"modified"}]}