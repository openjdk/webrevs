{"files":[{"patch":"@@ -100,1 +100,1 @@\n-    private static final DocTreeVisitor<Boolean, Void> isMarkdownVisitor = new DocTreeScanner<Boolean,Void>() {\n+    private static final DocTreeVisitor<Boolean, Void> isMarkdownVisitor = new DocTreeScanner<>() {\n@@ -104,1 +104,0 @@\n-                boolean first = true;\n@@ -132,0 +131,4 @@\n+        \/\/ a dynamically generated scheme for the URLs of automatically generated references;\n+        \/\/ to allow user-generated code URLs, change this to just \"code:\"\n+        private final String autorefScheme = \"code-\" + Integer.toHexString(hashCode()) + \":\";\n+\n@@ -242,1 +245,1 @@\n-                        .inlineParserFactory(new AutoRefInlineParserFactory(refParser))\n+                        .inlineParserFactory(new AutoRefInlineParserFactory(refParser, autorefScheme))\n@@ -253,1 +256,1 @@\n-                Lower v = new Lower(m, document, source, replacements);\n+                Lower v = new Lower(m, document, source, replacements, autorefScheme);\n@@ -485,2 +488,0 @@\n-    private static final String AUTOREF_PREFIX = \"code:\";\n-\n@@ -506,0 +507,1 @@\n+        private final String autorefScheme;\n@@ -507,1 +509,2 @@\n-        AutoRefInlineParserFactory(ReferenceParser refParser) {\n+        AutoRefInlineParserFactory(ReferenceParser refParser,\n+                                   String autorefScheme) {\n@@ -509,0 +512,1 @@\n+            this.autorefScheme = autorefScheme;\n@@ -534,1 +538,1 @@\n-                 * is returned, with the label prefixed by {@code code:}.\n+                 * is returned, with the label prefixed by the {@code autorefScheme}.\n@@ -544,1 +548,1 @@\n-                            ? new LinkReferenceDefinition(\"\", AUTOREF_PREFIX + l, \"\")\n+                            ? new LinkReferenceDefinition(\"\", autorefScheme + l, \"\")\n@@ -636,0 +640,1 @@\n+        private final String autorefScheme;\n@@ -718,0 +723,1 @@\n+         * @param autorefScheme the scheme used for auto-generated references\n@@ -719,1 +725,2 @@\n-        public Lower(DocTreeMaker docTreeMaker, Node document, String source, List<?> replacements) {\n+        public Lower(DocTreeMaker docTreeMaker, Node document, String source, List<?> replacements,\n+                     String autorefScheme) {\n@@ -723,0 +730,1 @@\n+            this.autorefScheme = autorefScheme;\n@@ -750,1 +758,1 @@\n-         * If the destination for the link begins with {@code code:}\n+         * If the destination for the link begins with the {@code autorefScheme}\n@@ -765,1 +773,1 @@\n-            if (dest.startsWith(AUTOREF_PREFIX)) {\n+            if (dest.startsWith(autorefScheme)) {\n@@ -778,1 +786,1 @@\n-                    String ref = dest.substring(AUTOREF_PREFIX.length());\n+                    String ref = dest.substring(autorefScheme.length());\n","filename":"src\/jdk.internal.md\/share\/classes\/jdk\/internal\/markdown\/MarkdownTransformer.java","additions":21,"deletions":13,"binary":false,"changes":34,"status":"modified"}]}