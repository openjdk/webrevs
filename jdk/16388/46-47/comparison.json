{"files":[{"patch":"@@ -682,2 +682,4 @@\n-            String s2 = normalize(kind, s);\n-            if (s2.length() != s.length()) throw new AssertionError(\"normalize\"); \/\/ DEBUG\n+            \/\/ If there is a paragraph break in a run of Markdown text, restrict the\n+            \/\/ search to the first paragraph, to avoid beginning-of-line Markdown constructs\n+            \/\/ confusing the sentence breaker.\n+            String s2 = normalize(kind, kind == Kind.MARKDOWN ? firstParaText(s) : s);\n@@ -696,2 +698,3 @@\n-            \/\/ This is the last doctree, found the droid we are looking for\n-            if (nextTree == null) {\n+            \/\/ If this is the last doctree, or if there was a paragraph break in a run\n+            \/\/ of Markdown text, then we found the droid we are looking for\n+            if (nextTree == null || kind == Kind.MARKDOWN && s2.length() < s.length()) {\n@@ -790,1 +793,2 @@\n-        private static final Pattern endPara = Pattern.compile(\"\\n(([ \\t]*\\n)|( {0,3}[-+*#=_]))\");\n+        \/\/ >     is for block quotes\n+        private static final Pattern endPara = Pattern.compile(\"\\n(([ \\t]*\\n)|( {0,3}[-+*#=_>]))\");\n@@ -797,0 +801,5 @@\n+        private static String firstParaText(String s) {\n+            int endParaPos = endParaPos(s);\n+            return endParaPos == -1 ? s : s.substring(0, endParaPos);\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/DocTreeMaker.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -238,0 +238,36 @@\n+\n+    @Test\n+    public void testExtraPara(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    package p;\n+                    \/\/\/ This is the class description.\n+                    \/\/\/\n+                    \/\/\/ # Heading\n+                    \/\/\/ Lorem ipsum\n+                    public class C { }\n+                    \"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"--no-platform-links\",\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+\n+        checkOutput(\"p\/package-summary.html\", true,\n+                \"\"\"\n+                    <div class=\"col-first even-row-color class-summary class-summary-tab2\"><a href=\"C.html\" title=\"clas\\\n+                    s in p\">C<\/a><\/div>\n+                    <div class=\"col-last even-row-color class-summary class-summary-tab2\">\n+                    <div class=\"block\">This is the class description.<\/div>\n+                    <\/div>\"\"\");\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                        <span class=\"element-name type-name-label\">C<\/span>\n+                        <span class=\"extends-implements\">extends java.lang.Object<\/span><\/div>\n+                        <div class=\"block\"><p>This is the class description.<\/p>\n+                        <h2 id=\"heading-heading\">Heading<\/h2>\n+                        <p>Lorem ipsum<\/p>\n+                        <\/div>\"\"\");\n+\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMarkdown\/TestMarkdownFirstSentence.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}