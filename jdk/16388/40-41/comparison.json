{"files":[{"patch":"@@ -443,1 +443,2 @@\n-                            if (ch == '`' || ch == '~' && markdown.isCodeFence()) {\n+                            var isCodeFence = markdown.isCodeFence();\n+                            if (ch == '`' || ch == '~' && isCodeFence) {\n@@ -446,3 +447,12 @@\n-                                    bp = lastNonWhite;\n-                                    newline = saveNewline;\n-                                    nextChar();\n+                                    \/\/ if a match for the opening sequence of characters was not found:\n+                                    \/\/ - if the characters were a fence, the code block extends to the end of file\n+                                    \/\/ - if the characters were inline, the opening characters are treated literally\n+                                    \/\/ TODO: a fenced code block in a list item or block quote can be terminated\n+                                    \/\/       by end of that block\n+                                    if (isCodeFence) {\n+                                        lastNonWhite = buflen - 1;\n+                                    } else {\n+                                        bp = lastNonWhite;\n+                                        newline = saveNewline;\n+                                        nextChar();\n+                                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/DocCommentParser.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -111,0 +111,36 @@\n+\n+            INDENT_TABS(\n+                    \"\"\"\n+\n+                        \\ttab\n+                         \\t1-space tab\n+                          \\t2-space tab\n+                           \\t3-space tab\n+                            \\t4-space tab\n+                        \\t\\t2-tab\n+\n+                        end\n+                        \"\"\",\n+                    \"\"\"\n+                        <pre><code>tab\n+                        1-space tab\n+                        2-space tab\n+                        3-space tab\n+                        \\t4-space tab\n+                        \\t2-tab\n+                        <\/code><\/pre>\n+                        <p>end<\/p>\"\"\"\n+            ),\n+\n+            UNCLOSED_FENCE(\n+                    \"\"\"\n+                        ```\n+                        {@code}\n+                        @Anno\n+                        \"\"\",\n+                    \"\"\"\n+                        <pre><code>{@code}\n+                        @Anno\n+                        <\/code><\/pre>\"\"\"\n+            ),\n+\n@@ -315,0 +351,89 @@\n+\n+    @Test\n+    public void testTypical(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    package p;\n+                    \/\/\/ stand-in for the standard class, to avoid platform links\n+                    public class NullPointerException extends RuntimeException  { }\n+                    \"\"\",\n+                \"\"\"\n+                    package p;\n+                    \/\/\/ A class containing examples of \"typical\" usages.\n+                    public class C {\n+                        \/\/\/\n+                        \/\/\/ Here is an example:\n+                        \/\/\/\n+                        \/\/\/     @Deprecated\n+                        \/\/\/     public class Old { }\n+                        \/\/\/\n+                        \/\/\/ Here are some more examples:\n+                        \/\/\/\n+                        \/\/\/ 1.  ```\n+                        \/\/\/     @Deprecated(forRemoval=true)\n+                        \/\/\/     public class VeryOld { }\n+                        \/\/\/     ```\n+                        \/\/\/ 2.  ```\n+                        \/\/\/     public class C {\n+                        \/\/\/         @Override\n+                        \/\/\/         public boolean equals(Object other) {\n+                        \/\/\/             return false;\n+                        \/\/\/         }\n+                        \/\/\/         @Override\n+                        \/\/\/         public int hashCode() {\n+                        \/\/\/             return 0;\n+                        \/\/\/         }\n+                        \/\/\/     }\n+                        \/\/\/     ```\n+                        \/\/\/\n+                        \/\/\/ @param other another instance\n+                        \/\/\/ @throws NullPointerException if other is {@code null}\n+                        public C(C other) { }\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"--no-platform-links\",\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <p>Here is an example:<\/p>\n+                    <pre><code>@Deprecated\n+                    public class Old { }\n+                    <\/code><\/pre>\"\"\",\n+\n+                \"\"\"\n+                    <p>Here are some more examples:<\/p>\n+                    <ol>\n+                    <li>\n+                    <pre><code>@Deprecated(forRemoval=true)\n+                    public class VeryOld { }\n+                    <\/code><\/pre>\n+                    <\/li>\n+                    <li>\n+                    <pre><code>public class C {\n+                        @Override\n+                        public boolean equals(Object other) {\n+                            return false;\n+                        }\n+                        @Override\n+                        public int hashCode() {\n+                            return 0;\n+                        }\n+                    }\n+                    <\/code><\/pre>\n+                    <\/li>\n+                    <\/ol>\"\"\",\n+\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>other<\/code> - another instance<\/dd>\n+                    <dt>Throws:<\/dt>\n+                    <dd><code><a href=\"NullPointerException.html\" title=\"class in p\">NullPointerException<\/a><\/code> - if other is <code>null<\/code><\/dd>\n+                    <\/dl>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMarkdown\/TestMarkdownCodeBlocks.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -290,4 +290,2 @@\n-  body: 3\n-    RawText[MARKDOWN, pos:5, ```|]\n-    Literal[CODE, pos:9, ...]\n-    RawText[MARKDOWN, pos:20, |~~~|456.]\n+  body: 1\n+    RawText[MARKDOWN, pos:5, ```|{@code_...}|~~~|456.]\n","filename":"test\/langtools\/tools\/javac\/doctree\/MarkdownTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}