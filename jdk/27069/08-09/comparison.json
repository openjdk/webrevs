{"files":[{"patch":"@@ -117,0 +117,1 @@\n+        sendInterimResponseIfNeeded();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ChunkedInputStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    boolean send100;\n@@ -97,0 +98,1 @@\n+        this.send100 = \"100-continue\".equals(reqHdrs.getFirst(\"Expect\"));\n@@ -256,1 +258,1 @@\n-                \/\/ no body for informational responses\n+                send100 = false;\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+        sendInterimResponseIfNeeded();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/FixedLengthInputStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import com.sun.net.httpserver.*;\n-import com.sun.net.httpserver.spi.*;\n@@ -129,0 +127,10 @@\n+    \/* check if client sent an Expect 100 Continue.\n+     * In that case, need to send an interim response.\n+     *\/\n+    protected void sendInterimResponseIfNeeded() throws IOException {\n+        if (t.send100 && t.rcode == -1) {\n+            t.send100 = false;\n+            t.sendResponseHeaders(100, -1);\n+        }\n+    }\n+\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/LeftOverInputStream.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -860,12 +860,0 @@\n-                \/* check if client sent an Expect 100 Continue.\n-                 * In that case, need to send an interim response.\n-                 * In future API may be modified to allow app to\n-                 * be involved in this process.\n-                 *\/\n-                String exp = headers.getFirst(\"Expect\");\n-                if (exp != null && exp.equalsIgnoreCase (\"100-continue\")) {\n-                    logReply (100, requestLine, null);\n-                    sendReply (\n-                        Code.HTTP_CONTINUE, false, null\n-                    );\n-                }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    private static final String someContext = \"\/context\";\n@@ -62,1 +63,1 @@\n-    public static void testContinue() throws Exception {\n+    public void testAutoContinue() throws Exception {\n@@ -77,0 +78,32 @@\n+                    } finally {\n+                        System.err.println(\"Request handled: \" + msg.getRequestURI());\n+                    }\n+                });\n+            server.start();\n+            System.out.println(\"Server started at port \" + server.getAddress().getPort());\n+\n+            runRawSocketHttpClient(loopback, server.getAddress().getPort(), 0);\n+        } finally {\n+            System.out.println(\"shutting server down\");\n+            server.stop(0);\n+        }\n+        System.out.println(\"Server finished.\");\n+    }\n+\n+    @Test\n+    public void testManualContinue() throws Exception {\n+        System.out.println(\"testAutoContinue()\");\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        HttpServer server = HttpServer.create(new InetSocketAddress(loopback, 0), 0);\n+        try {\n+            server.createContext(\n+                someContext,\n+                msg -> {\n+                    System.err.println(\"Handling request: \" + msg.getRequestURI());\n+                    byte[] reply = \"Here is my reply!\".getBytes(UTF_8);\n+                    try {\n+                        msg.sendResponseHeaders(100, -1);\n+                        msg.getRequestBody().readAllBytes();\n+                        msg.sendResponseHeaders(200, reply.length);\n+                        msg.getResponseBody().write(reply);\n+                        msg.getResponseBody().close();\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/InputRead100Test.java","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"}]}