{"files":[{"patch":"@@ -117,1 +117,0 @@\n-        sendInterimResponseIfNeeded();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ChunkedInputStream.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-    boolean send100;\n@@ -98,1 +97,0 @@\n-        this.send100 = \"100-continue\".equals(reqHdrs.getFirst(\"Expect\"));\n@@ -258,1 +256,1 @@\n-                send100 = false;\n+                \/\/ no body for informational responses\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-        sendInterimResponseIfNeeded();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/FixedLengthInputStream.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import com.sun.net.httpserver.*;\n+import com.sun.net.httpserver.spi.*;\n@@ -127,10 +129,0 @@\n-    \/* check if client sent an Expect 100 Continue.\n-     * In that case, need to send an interim response.\n-     *\/\n-    protected void sendInterimResponseIfNeeded() throws IOException {\n-        if (t.send100 && t.rcode == -1) {\n-            t.send100 = false;\n-            t.sendResponseHeaders(100, -1);\n-        }\n-    }\n-\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/LeftOverInputStream.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -860,0 +860,12 @@\n+                \/* check if client sent an Expect 100 Continue.\n+                 * In that case, need to send an interim response.\n+                 * In future API may be modified to allow app to\n+                 * be involved in this process.\n+                 *\/\n+                String exp = headers.getFirst(\"Expect\");\n+                if (exp != null && exp.equalsIgnoreCase (\"100-continue\")) {\n+                    logReply (100, requestLine, null);\n+                    sendReply (\n+                        Code.HTTP_CONTINUE, false, null\n+                    );\n+                }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-    private static final String someContext = \"\/context\";\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/InputRead100Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}