{"files":[{"patch":"@@ -36,0 +36,3 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n@@ -44,0 +47,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -47,2 +52,0 @@\n-import com.sun.net.httpserver.HttpServer;\n-\n@@ -51,1 +54,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import com.sun.net.httpserver.HttpServer;\n+\n@@ -62,1 +66,1 @@\n-        System.out.println(\"testContinue()\");\n+        System.out.println(\"testAutoContinue()\");\n@@ -65,0 +69,1 @@\n+        String replyMsg = \"Here is my reply!\";\n@@ -70,1 +75,1 @@\n-                    byte[] reply = \"Here is my reply!\".getBytes(UTF_8);\n+                    byte[] reply = replyMsg.getBytes(UTF_8);\n@@ -73,2 +78,0 @@\n-                        msg.sendResponseHeaders(100, -1);\n-                        msg.sendResponseHeaders(100, -1);\n@@ -85,1 +88,1 @@\n-            runRawSocketHttpClient(loopback, server.getAddress().getPort(), 0);\n+            runRawSocketHttpClient(loopback, server.getAddress().getPort(), true, replyMsg, 100, 100, 200);\n@@ -98,0 +101,1 @@\n+        String replyMsg = \"Here is my reply!\";\n@@ -103,1 +107,1 @@\n-                    byte[] reply = \"Here is my reply!\".getBytes(UTF_8);\n+                    byte[] reply = replyMsg.getBytes(UTF_8);\n@@ -119,1 +123,36 @@\n-            runRawSocketHttpClient(loopback, server.getAddress().getPort(), 0);\n+            runRawSocketHttpClient(loopback, server.getAddress().getPort(), true, replyMsg, 100, 100, 100, 100, 200);\n+        } finally {\n+            System.out.println(\"shutting server down\");\n+            server.stop(0);\n+        }\n+        System.out.println(\"Server finished.\");\n+    }\n+\n+    @Test\n+    public void testSending123() throws Exception {\n+        System.out.println(\"testSending123()\");\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        HttpServer server = HttpServer.create(new InetSocketAddress(loopback, 0), 0);\n+        String replyMsg = \"Here is my reply!\";\n+        try {\n+            server.createContext(\n+                someContext,\n+                msg -> {\n+                    System.err.println(\"Handling request: \" + msg.getRequestURI());\n+                    byte[] reply = replyMsg.getBytes(UTF_8);\n+                    try {\n+                        msg.sendResponseHeaders(123, -1);\n+                        msg.sendResponseHeaders(123, -1);\n+                        msg.sendResponseHeaders(123, -1);\n+                        msg.getRequestBody().readAllBytes();\n+                        msg.sendResponseHeaders(200, reply.length);\n+                        msg.getResponseBody().write(reply);\n+                        msg.getResponseBody().close();\n+                    } finally {\n+                        System.err.println(\"Request handled: \" + msg.getRequestURI());\n+                    }\n+                });\n+            server.start();\n+            System.out.println(\"Server started at port \" + server.getAddress().getPort());\n+\n+            runRawSocketHttpClient(loopback, server.getAddress().getPort(), false, replyMsg, 123, 123, 123, 200);\n@@ -127,1 +166,1 @@\n-    static void runRawSocketHttpClient(InetAddress address, int port, int contentLength)\n+    static void runRawSocketHttpClient(InetAddress address, int port, boolean expectContinue, String expectedReply, int... expectedStatusCodes)\n@@ -132,3 +171,0 @@\n-        boolean foundContinue = false;\n-        boolean foundSecondContinue = false;\n-        boolean foundThirdContinue = false;\n@@ -142,1 +178,1 @@\n-            if (contentLength <= 0) contentLength = body.getBytes(UTF_8).length;\n+            var contentLength = body.getBytes(UTF_8).length;\n@@ -150,1 +186,3 @@\n-            writer.print(\"Expect: 100-continue\" + CRLF);\n+            if (expectContinue) {\n+                writer.print(\"Expect: 100-continue\" + CRLF);\n+            }\n@@ -160,0 +198,1 @@\n+            List<String> statusCodes = new ArrayList<>();\n@@ -161,1 +200,1 @@\n-                if (line.isEmpty() && foundThirdContinue) {\n+                if (line.isEmpty() && statusCodes.size() == expectedStatusCodes.length) {\n@@ -164,9 +203,5 @@\n-                System.out.println(\"interim response \\\"\" + line + \"\\\"\");\n-                if (foundSecondContinue && line.startsWith(\"HTTP\/1.1 100\")) {\n-                    foundThirdContinue = true;\n-                }\n-                else if (foundContinue && line.startsWith(\"HTTP\/1.1 100\")) {\n-                    foundSecondContinue = true;\n-                }\n-                else if (line.startsWith(\"HTTP\/1.1 100\")) {\n-                    foundContinue = true;\n+                if (line.startsWith(\"HTTP\/1.1\")) {\n+                    String[] parts = line.split(\" \");\n+                    if (parts.length > 1) {\n+                        statusCodes.add(parts[1]);\n+                    }\n@@ -175,3 +210,1 @@\n-            if (!foundThirdContinue) {\n-                throw new IOException(\"Did not receive three 100 continue from server\");\n-            }\n+            System.out.println(\"Received status codes: \" + statusCodes);\n@@ -182,3 +215,1 @@\n-                if (line.isEmpty()) {\n-                    break;\n-                }\n+                assertEquals(line, expectedReply);\n@@ -188,0 +219,10 @@\n+            \/\/ Assert that the received status codes match the expected ones\n+            if (statusCodes.size() != expectedStatusCodes.length) {\n+                throw new IOException(\"Expected \" + expectedStatusCodes.length + \" status codes, but got \" + statusCodes.size());\n+            }\n+            for (int i = 0; i < expectedStatusCodes.length; i++) {\n+                if (!statusCodes.get(i).equals(String.valueOf(expectedStatusCodes[i]))) {\n+                    throw new IOException(\"Expected status code \" + expectedStatusCodes[i] + \" at position \" + i +\n+                        \", but got \" + statusCodes.get(i));\n+                }\n+            }\n@@ -196,3 +237,0 @@\n-            \/\/ give time to the server to trigger its assertion\n-            \/\/ error before closing the connection\n-            Thread.sleep(500);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/Send1xxResponsesTest.java","additions":73,"deletions":35,"binary":false,"changes":108,"status":"modified"}]}