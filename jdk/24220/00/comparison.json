{"files":[{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4140643\n+ * @summary Tests that Motif menus open with both Alt-key and Meta-key\n+ * @key headful\n+ * @run main bug4140643\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class bug4140643 {\n+    private static JFrame frame;\n+    private static JMenu menu;\n+    private static volatile boolean isPopMenuVisible;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                try {\n+                    UIManager.setLookAndFeel(\n+                        \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+                } catch (ClassNotFoundException | InstantiationException\n+                        | UnsupportedLookAndFeelException\n+                        | IllegalAccessException e) {\n+                    throw new RuntimeException(e);\n+                }\n+                frame = new JFrame(\"bug4140643\");\n+\n+                menu = new JMenu(\"File\");\n+                menu.setMnemonic(KeyEvent.VK_F);\n+                menu.add(new JMenuItem(\"Open...\"));\n+                menu.add(new JMenuItem(\"Save\"));\n+\n+                JMenuBar mbar = new JMenuBar();\n+                mbar.add(menu);\n+                frame.setJMenuBar(mbar);\n+\n+                frame.add(new JButton(\"Click Here\"));\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            if (System.getProperty(\"os.name\").contains(\"OS X\")) {\n+                robot.keyPress(KeyEvent.VK_CONTROL);\n+                robot.keyPress(KeyEvent.VK_ALT);\n+                robot.keyPress(KeyEvent.VK_F);\n+                robot.keyRelease(KeyEvent.VK_F);\n+                robot.keyRelease(KeyEvent.VK_ALT);\n+                robot.keyRelease(KeyEvent.VK_CONTROL);\n+            } else {\n+                robot.keyPress(KeyEvent.VK_ALT);\n+                robot.keyPress(KeyEvent.VK_F);\n+                robot.keyRelease(KeyEvent.VK_F);\n+                robot.keyRelease(KeyEvent.VK_ALT);\n+            }\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                isPopMenuVisible = menu.isPopupMenuVisible();\n+            });\n+            if (!isPopMenuVisible) {\n+                throw new RuntimeException(\"Menu popup is not shown\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4140643.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4146588\n+ * @summary JMenu.setMenuLocation has no effect\n+ * @key headful\n+ * @run main bug4146588\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4146588  {\n+\n+    private static JFrame fr;\n+    private static JMenu menu;\n+    private static volatile Point loc;\n+    private static volatile Point popupLoc;\n+    private static volatile Point menuLoc;\n+    private static volatile Rectangle frameBounds;\n+    private static volatile Rectangle popupBounds;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4146588 frame\");\n+\n+                JMenuBar menubar = new JMenuBar();\n+                menu = new JMenu(\"Menu\");\n+                menu.add(\"Item 1\");\n+                menu.add(\"Item 2\");\n+                menu.add(\"Item 3\");\n+                menu.setMenuLocation(150, 150);\n+                menubar.add(menu);\n+                fr.setJMenuBar(menubar);\n+\n+                fr.setSize(400, 400);\n+                fr.setLocationRelativeTo(null);\n+                fr.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                menu.doClick(0);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(200);\n+            SwingUtilities.invokeAndWait(() -> {\n+                popupLoc = menu.getPopupMenu().getLocationOnScreen();\n+                menuLoc = menu.getLocationOnScreen();\n+                frameBounds = fr.getBounds();\n+                popupBounds = menu.getPopupMenu().getBounds();\n+            });\n+            System.out.println(popupLoc);\n+            System.out.println(popupBounds);\n+            System.out.println(frameBounds);\n+            System.out.println(menuLoc);\n+            if (!(popupLoc.getX()\n+                 > ((frameBounds.getX() + frameBounds.getWidth() \/ 2) - popupBounds.getWidth()))\n+                && (popupLoc.getY()\n+                 > ((frameBounds.getY() + frameBounds.getHeight() \/ 2) - popupBounds.getHeight()))) {\n+                throw new RuntimeException(\"popup is not at center of frame\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4146588.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4342646\n+ * @summary Tests that very long menus are properly placed on the screen.\n+ * @key headful\n+ * @run main bug4342646\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4342646 {\n+\n+    private static JFrame frame;\n+    private static JMenu menu;\n+    private static volatile Point popupLoc;\n+    private static volatile Point menuLoc;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                JMenuBar mbar = new JMenuBar();\n+                menu = new JMenu(\"Menu\");\n+                menu.add(new JMenuItem(\n+                         \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n+                         \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n+                         \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n+                         \"AAAAAAAAAAAAAAAAAAAAAAA\"));\n+                mbar.add(menu);\n+\n+                frame = new JFrame(\"4342646\");\n+                frame.setJMenuBar(mbar);\n+                frame.setBounds(10, 10, 200, 100);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                menu.doClick();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(200);\n+            SwingUtilities.invokeAndWait(() -> {\n+                popupLoc = menu.getPopupMenu().getLocationOnScreen();\n+                menuLoc = menu.getLocationOnScreen();\n+            });\n+            System.out.println(menuLoc);\n+            System.out.println(popupLoc);\n+            if (popupLoc.getX() < menuLoc.getX()) {\n+                throw new RuntimeException(\"PopupMenu is incorrectly placed at left of menu\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4342646.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"}]}