{"files":[{"patch":"@@ -110,1 +110,1 @@\n-  typedef LinkedListImpl<ReservedMemoryRegion, AnyObj::C_HEAP, mtNMT,\n+  typedef LinkedListImpl<VirtualMemoryRegion, AnyObj::C_HEAP, mtNMT,\n@@ -119,1 +119,1 @@\n-  bool do_allocation_site(const ReservedMemoryRegion* rgn)  {\n+  bool do_allocation_site(const VirtualMemoryRegion* rgn)  {\n@@ -134,1 +134,1 @@\n-  LinkedList<ReservedMemoryRegion>* virtual_memory_allocations() {\n+  LinkedList<VirtualMemoryRegion>* virtual_memory_allocations() {\n@@ -206,1 +206,1 @@\n-  const ReservedMemoryRegion* rgn;\n+  const VirtualMemoryRegion* rgn;\n@@ -209,1 +209,1 @@\n-    VirtualMemoryAllocationSite tmp(*rgn->call_stack(), rgn->mem_tag());\n+    VirtualMemoryAllocationSite tmp(*rgn->reserved_call_stack(), rgn->mem_tag());\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-typedef LinkedListIterator<ReservedMemoryRegion>         VirtualMemoryAllocationIterator;\n+typedef LinkedListIterator<VirtualMemoryRegion>         VirtualMemoryAllocationIterator;\n@@ -74,1 +74,1 @@\n-  LinkedListImpl<ReservedMemoryRegion>        _virtual_memory_allocations;\n+  LinkedListImpl<VirtualMemoryRegion>        _virtual_memory_allocations;\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-  bool do_allocation_site(const ReservedMemoryRegion* rgn) override {\n+  bool do_allocation_site(const VirtualMemoryRegion* rgn) override {\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-  const ReservedMemoryRegion* rgn;\n+  const VirtualMemoryRegion* rgn;\n@@ -407,1 +407,1 @@\n-void MemDetailReporter::report_virtual_memory_region(const ReservedMemoryRegion* reserved_rgn) {\n+void MemDetailReporter::report_virtual_memory_region(const VirtualMemoryRegion* reserved_rgn) {\n@@ -424,1 +424,1 @@\n-  const NativeCallStack*  stack = reserved_rgn->call_stack();\n+  const NativeCallStack*  stack = reserved_rgn->reserved_call_stack();\n@@ -440,1 +440,1 @@\n-                                                                  [&](CommittedMemoryRegion& committed_rgn) {\n+                                                                  [&](VirtualMemoryRegion& committed_rgn) {\n@@ -456,1 +456,1 @@\n-  auto print_committed_rgn = [&](const CommittedMemoryRegion& crgn) {\n+  auto print_committed_rgn = [&](const VirtualMemoryRegion& crgn) {\n@@ -459,1 +459,1 @@\n-    stack = crgn.call_stack();\n+    stack = crgn.committed_call_stack();\n@@ -473,1 +473,1 @@\n-                                                                  [&](CommittedMemoryRegion& crgn) {\n+                                                                  [&](VirtualMemoryRegion& crgn) {\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-  void report_virtual_memory_region(const ReservedMemoryRegion* rgn);\n+  void report_virtual_memory_region(const VirtualMemoryRegion* rgn);\n","filename":"src\/hotspot\/share\/nmt\/memReporter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,1 @@\n-class ReservedMemoryRegion;\n-class CommittedMemoryRegion;\n+class VirtualMemoryRegion;\n@@ -43,1 +42,1 @@\n-  ReservedMemoryRegion find_reserved_region(address addr);\n+  VirtualMemoryRegion find_reserved_region(address addr);\n@@ -78,1 +77,1 @@\n-  void visit_committed_regions(const ReservedMemoryRegion& rgn, F func);\n+  void visit_committed_regions(const VirtualMemoryRegion& rgn, F func);\n","filename":"src\/hotspot\/share\/nmt\/regionsTree.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-void RegionsTree::visit_committed_regions(const ReservedMemoryRegion& rgn, F func) {\n+void RegionsTree::visit_committed_regions(const VirtualMemoryRegion& rgn, F func) {\n@@ -40,1 +40,1 @@\n-      CommittedMemoryRegion cmr((address)prev.position(), curr.distance_from(prev), stack(prev));\n+      VirtualMemoryRegion cmr((address)prev.position(), curr.distance_from(prev), stack(prev), true \/*committed*\/);\n@@ -70,1 +70,1 @@\n-      ReservedMemoryRegion rmr((address)begin_node.position(), rgn_size, st, begin_node.out_tag());\n+      VirtualMemoryRegion rmr((address)begin_node.position(), rgn_size, st, begin_node.out_tag());\n","filename":"src\/hotspot\/share\/nmt\/regionsTree.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -193,2 +193,2 @@\n-  ReservedMemoryRegion rmr = tree()->find_reserved_region((address)p);\n-  if (!rmr.contain_address((address)p)) {\n+  VirtualMemoryRegion rmr = tree()->find_reserved_region((address)p);\n+  if (!rmr.is_valid() || !rmr.contain_address((address)p)) {\n@@ -200,1 +200,1 @@\n-    rmr.call_stack()->print_on(st);\n+    rmr.reserved_call_stack()->print_on(st);\n@@ -213,1 +213,1 @@\n-  tree()->visit_reserved_regions([&](ReservedMemoryRegion& rgn) {\n+  tree()->visit_reserved_regions([&](VirtualMemoryRegion& rgn) {\n@@ -222,1 +222,1 @@\n-size_t VirtualMemoryTracker::committed_size(const ReservedMemoryRegion* rmr) {\n+size_t VirtualMemoryTracker::committed_size(const VirtualMemoryRegion* rmr) {\n@@ -224,1 +224,1 @@\n-  tree()->visit_committed_regions(*rmr, [&](CommittedMemoryRegion& crgn) {\n+  tree()->visit_committed_regions(*rmr, [&](VirtualMemoryRegion& crgn) {\n@@ -231,1 +231,1 @@\n-size_t VirtualMemoryTracker::Instance::committed_size(const ReservedMemoryRegion* rmr) {\n+size_t VirtualMemoryTracker::Instance::committed_size(const VirtualMemoryRegion* rmr) {\n@@ -236,1 +236,1 @@\n-address VirtualMemoryTracker::Instance::thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr) {\n+address VirtualMemoryTracker::Instance::thread_stack_uncommitted_bottom(const VirtualMemoryRegion* rmr) {\n@@ -241,1 +241,1 @@\n-address VirtualMemoryTracker::thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr) {\n+address VirtualMemoryTracker::thread_stack_uncommitted_bottom(const VirtualMemoryRegion* rmr) {\n@@ -244,1 +244,1 @@\n-    tree()->visit_committed_regions(*rmr, [&](CommittedMemoryRegion& crgn) {\n+    tree()->visit_committed_regions(*rmr, [&](VirtualMemoryRegion& crgn) {\n@@ -298,1 +298,1 @@\n-  bool do_allocation_site(const ReservedMemoryRegion* rgn) {\n+  bool do_allocation_site(const VirtualMemoryRegion* rgn) {\n@@ -339,3 +339,3 @@\n-ReservedMemoryRegion RegionsTree::find_reserved_region(address addr) {\n-    ReservedMemoryRegion rmr;\n-    auto contain_region = [&](ReservedMemoryRegion& region_in_tree) {\n+VirtualMemoryRegion RegionsTree::find_reserved_region(address addr) {\n+    VirtualMemoryRegion rmr;\n+    auto contain_region = [&](VirtualMemoryRegion& region_in_tree) {\n@@ -352,2 +352,2 @@\n-bool CommittedMemoryRegion::equals(const ReservedMemoryRegion& rmr) const {\n-  return size() == rmr.size() && call_stack()->equals(*(rmr.call_stack()));\n+bool VirtualMemoryRegion::equals_including_stacks(const VirtualMemoryRegion& rmr) const {\n+  return size() == rmr.size() && committed_call_stack()->equals(*(rmr.reserved_call_stack()));\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -197,2 +197,4 @@\n-  address      _base_address;\n-  size_t       _size;\n+  address         _base_address;\n+  size_t          _size;\n+  MemTag          _mem_tag;\n+  NativeCallStack _reserved_stack, _committed_stack;\n@@ -201,0 +203,5 @@\n+  VirtualMemoryRegion() :\n+    _base_address(0), _size(0), _mem_tag(mtNone),\n+    _reserved_stack(NativeCallStack::empty_stack()) ,\n+    _committed_stack(NativeCallStack::empty_stack()) {}\n+\n@@ -202,1 +209,11 @@\n-    _base_address(addr), _size(size) {\n+    _base_address(addr), _size(size), _mem_tag(mtNone),\n+    _reserved_stack(NativeCallStack::empty_stack()) ,\n+    _committed_stack(NativeCallStack::empty_stack()) {\n+     assert(addr != nullptr, \"Invalid address\");\n+     assert(size > 0, \"Invalid size\");\n+  }\n+\n+  VirtualMemoryRegion(address addr, size_t size, const NativeCallStack& stack, bool committed) :\n+    _base_address(addr), _size(size), _mem_tag(mtNone),\n+    _reserved_stack(NativeCallStack::empty_stack()) ,\n+    _committed_stack(stack) {\n@@ -205,1 +222,6 @@\n-   }\n+  }\n+\n+  VirtualMemoryRegion(address addr, size_t size, const NativeCallStack& stack, MemTag mem_tag = mtNone)\n+    : _base_address(addr), _size(size), _mem_tag(mem_tag),\n+     _reserved_stack(stack),\n+    _committed_stack(NativeCallStack::empty_stack()) {}\n@@ -214,0 +236,1 @@\n+    assert(is_valid(), \"snaity\");\n@@ -217,10 +240,1 @@\n-\n-  inline bool contain_region(address addr, size_t size) const {\n-    return contain_address(addr) && contain_address(addr + size - 1);\n-  }\n-\n-  inline bool same_region(address addr, size_t sz) const {\n-    return (addr == base() && sz == size());\n-  }\n-\n-\n+ private:\n@@ -230,0 +244,1 @@\n+    assert(is_valid(), \"snaity\");\n@@ -233,23 +248,0 @@\n-  inline bool adjacent_to(address addr, size_t sz) const {\n-    return (addr == end() || (addr + sz) == base());\n-  }\n-\n-  void exclude_region(address addr, size_t sz) {\n-    assert(contain_region(addr, sz), \"Not containment\");\n-    assert(addr == base() || addr + sz == end(), \"Can not exclude from middle\");\n-    size_t new_size = size() - sz;\n-\n-    if (addr == base()) {\n-      set_base(addr + sz);\n-    }\n-    set_size(new_size);\n-  }\n-\n-  void expand_region(address addr, size_t sz) {\n-    assert(adjacent_to(addr, sz), \"Not adjacent regions\");\n-    if (base() == addr + sz) {\n-      set_base(addr);\n-    }\n-    set_size(size() + sz);\n-  }\n-\n@@ -269,0 +261,1 @@\n+ public:\n@@ -274,0 +267,13 @@\n+  bool equals_including_stacks(const VirtualMemoryRegion& other) const;\n+  inline void set_committed_call_stack(const NativeCallStack& stack) { _committed_stack = stack; }\n+  inline const NativeCallStack* committed_call_stack() const         { return &_committed_stack; }\n+\n+  bool is_valid() const { return base() != nullptr && size() != 0;}\n+\n+  inline void  set_reserved_call_stack(const NativeCallStack& stack) { _reserved_stack = stack; }\n+  inline const NativeCallStack* reserved_call_stack() const          { return &_reserved_stack;  }\n+\n+  inline MemTag mem_tag() const { return _mem_tag;  }\n+\n+  const char* tag_name() const { return NMTUtil::tag_to_name(_mem_tag); }\n+\n@@ -286,60 +292,0 @@\n-\n-class CommittedMemoryRegion : public VirtualMemoryRegion {\n- private:\n-  NativeCallStack  _stack;\n-\n- public:\n-  CommittedMemoryRegion()\n-    : VirtualMemoryRegion((address)1, 1), _stack(NativeCallStack::empty_stack()) { }\n-\n-  CommittedMemoryRegion(address addr, size_t size, const NativeCallStack& stack)\n-    : VirtualMemoryRegion(addr, size), _stack(stack) { }\n-\n-  inline void set_call_stack(const NativeCallStack& stack) { _stack = stack; }\n-  inline const NativeCallStack* call_stack() const         { return &_stack; }\n-  bool equals(const ReservedMemoryRegion& other) const;\n-};\n-\n-class ReservedMemoryRegion : public VirtualMemoryRegion {\n- private:\n-  NativeCallStack  _stack;\n-  MemTag         _mem_tag;\n-\n- public:\n-  bool is_valid() { return base() != (address)1 && size() != 1;}\n-\n-  ReservedMemoryRegion()\n-    : VirtualMemoryRegion((address)1, 1), _stack(NativeCallStack::empty_stack()), _mem_tag(mtNone) { }\n-\n-  ReservedMemoryRegion(address base, size_t size, const NativeCallStack& stack,\n-    MemTag mem_tag = mtNone)\n-    : VirtualMemoryRegion(base, size), _stack(stack), _mem_tag(mem_tag) { }\n-\n-\n-  ReservedMemoryRegion(address base, size_t size)\n-    : VirtualMemoryRegion(base, size), _stack(NativeCallStack::empty_stack()), _mem_tag(mtNone) { }\n-\n-  \/\/ Copy constructor\n-  ReservedMemoryRegion(const ReservedMemoryRegion& rr)\n-    : VirtualMemoryRegion(rr.base(), rr.size()) {\n-    *this = rr;\n-  }\n-\n-  inline void  set_call_stack(const NativeCallStack& stack) { _stack = stack; }\n-  inline const NativeCallStack* call_stack() const          { return &_stack;  }\n-\n-  inline MemTag mem_tag() const            { return _mem_tag;  }\n-\n-  ReservedMemoryRegion& operator= (const ReservedMemoryRegion& other) {\n-    set_base(other.base());\n-    set_size(other.size());\n-\n-    _stack = *other.call_stack();\n-    _mem_tag = other.mem_tag();\n-\n-    return *this;\n-  }\n-\n-  const char* tag_name() const { return NMTUtil::tag_to_name(_mem_tag); }\n-};\n-\n@@ -348,1 +294,1 @@\n-   virtual bool do_allocation_site(const ReservedMemoryRegion* rgn) { return false; }\n+   virtual bool do_allocation_site(const VirtualMemoryRegion* rgn) { return false; }\n@@ -379,2 +325,2 @@\n-  size_t committed_size(const ReservedMemoryRegion* rmr);\n-  address thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr);\n+  size_t committed_size(const VirtualMemoryRegion* rmr);\n+  address thread_stack_uncommitted_bottom(const VirtualMemoryRegion* rmr);\n@@ -404,1 +350,1 @@\n-    static size_t committed_size(const ReservedMemoryRegion* rmr);\n+    static size_t committed_size(const VirtualMemoryRegion* rmr);\n@@ -406,1 +352,1 @@\n-    static address thread_stack_uncommitted_bottom(const ReservedMemoryRegion* rmr);\n+    static address thread_stack_uncommitted_bottom(const VirtualMemoryRegion* rmr);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.hpp","additions":48,"deletions":102,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  ReservedMemoryRegion rmr;\n+  VirtualMemoryRegion rmr;\n@@ -103,1 +103,1 @@\n-  rt.visit_reserved_regions([&](const ReservedMemoryRegion& rgn) {\n+  rt.visit_reserved_regions([&](const VirtualMemoryRegion& rgn) {\n@@ -122,1 +122,1 @@\n-  ReservedMemoryRegion rmr((address)1000, 50);\n+  VirtualMemoryRegion rmr((address)1000, 50);\n@@ -124,1 +124,1 @@\n-  rt.visit_committed_regions(rmr, [&](CommittedMemoryRegion& crgn) {\n+  rt.visit_committed_regions(rmr, [&](VirtualMemoryRegion& crgn) {\n","filename":"test\/hotspot\/gtest\/nmt\/test_regions_tree.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    ReservedMemoryRegion rmr_found;\n+    VirtualMemoryRegion rmr_found;\n@@ -65,1 +65,1 @@\n-      VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const CommittedMemoryRegion& cmr) {\n+      VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const VirtualMemoryRegion& cmr) {\n@@ -111,1 +111,1 @@\n-    ReservedMemoryRegion rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n+    VirtualMemoryRegion rmr_found = VirtualMemoryTracker::Instance::tree()->find_reserved_region((address)base);\n@@ -117,1 +117,1 @@\n-    VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const CommittedMemoryRegion& cmr){\n+    VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr_found, [&](const VirtualMemoryRegion& cmr){\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-static void diagnostic_print(VirtualMemoryTracker& vmt, const ReservedMemoryRegion& rmr) {\n+static void diagnostic_print(VirtualMemoryTracker& vmt, const VirtualMemoryRegion& rmr) {\n@@ -62,1 +62,1 @@\n-  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n+  VirtualMemoryTracker::Instance::tree()->visit_committed_regions(rmr, [&](VirtualMemoryRegion& region) {\n@@ -68,1 +68,1 @@\n-static void check_inner(VirtualMemoryTracker& vmt, const ReservedMemoryRegion& rmr, R* regions, size_t regions_size, const char* file, int line) {\n+static void check_inner(VirtualMemoryTracker& vmt, const VirtualMemoryRegion& rmr, R* regions, size_t regions_size, const char* file, int line) {\n@@ -77,1 +77,1 @@\n-  vmt.tree()->visit_committed_regions(rmr, [&](CommittedMemoryRegion& region) {\n+  vmt.tree()->visit_committed_regions(rmr, [&](VirtualMemoryRegion& region) {\n@@ -107,1 +107,1 @@\n-    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n+    VirtualMemoryRegion rmr = rtree->find_reserved_region(addr);\n@@ -182,1 +182,1 @@\n-    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n+    VirtualMemoryRegion rmr = rtree->find_reserved_region(addr);\n@@ -270,1 +270,1 @@\n-    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n+    VirtualMemoryRegion rmr = rtree->find_reserved_region(addr);\n@@ -445,1 +445,1 @@\n-    ReservedMemoryRegion rmr = rtree->find_reserved_region(addr);\n+    VirtualMemoryRegion rmr = rtree->find_reserved_region(addr);\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}