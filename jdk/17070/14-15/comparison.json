{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,14 @@\n+    \/\/ record R10 is defined in an accompaning jcod file\n+\n+    record R11(int i, List<String> ls) {\n+        R11 {} \/\/ compact constructor, will contain mandated parameters\n+    }\n+\n+    record R12(List<String> ls, int i) {\n+        R12 {} \/\/ compact constructor, will contain mandated parameters\n+    }\n+\n+    record R13(List<String> ls1, int i, List<String> ls2) {\n+        R13 {} \/\/ compact constructor, will contain mandated parameters\n+    }\n+\n@@ -76,2 +90,5 @@\n-                       R10.class)\n-                   .stream().map(c -> new Object[] {c}).toArray(Object[][]::new);\n+                       R10.class,\n+                       R11.class,\n+                       R12.class,\n+                       R13.class\n+        ).stream().map(c -> new Object[] {c}).toArray(Object[][]::new);\n@@ -147,0 +164,15 @@\n+            new Object[] { new R11(1, List.of(\"1\")),\n+                        2,\n+                        new Object[]{ 1, List.of(\"1\") },\n+                        new String[]{ \"i\", \"ls\" },\n+                        new String[]{ \"int\", \"java.util.List<java.lang.String>\"} },\n+            new Object[] { new R12(List.of(\"1\"), 1),\n+                        2,\n+                        new Object[]{ List.of(\"1\"), 1 },\n+                        new String[]{ \"ls\", \"i\" },\n+                        new String[]{ \"java.util.List<java.lang.String>\", \"int\"} },\n+            new Object[] { new R13(List.of(\"1\"), 1, List.of(\"2\")),\n+                        3,\n+                        new Object[]{ List.of(\"1\"), 1, List.of(\"2\") },\n+                        new String[]{ \"ls1\", \"i\", \"ls2\" },\n+                        new String[]{ \"java.util.List<java.lang.String>\", \"int\", \"java.util.List<java.lang.String>\"} },\n@@ -241,1 +273,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/records\/RecordReflectionTest.java","additions":35,"deletions":4,"binary":false,"changes":39,"status":"modified"}]}