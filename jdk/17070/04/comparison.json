{"files":[{"patch":"@@ -259,1 +259,2 @@\n-     * explicitly declared ones.\n+     * explicitly declared ones.  Also note that compact constructors\n+     * of a record class may have implicitly declared parameters.\n@@ -283,2 +284,3 @@\n-     * Also note that as a <a\n-     * href=\"{@docRoot}\/java.base\/java\/lang\/reflect\/package-summary.html#LanguageJvmModel\">modeling\n+     * Also note that compact constructors of a record class may have\n+     * implicitly declared parameters.\n+     * Finally note that as a <a href=\"{@docRoot}\/java.base\/java\/lang\/reflect\/package-summary.html#LanguageJvmModel\">modeling\n@@ -287,4 +289,4 @@\n-     * generic information is present, only parameters explicitly\n-     * present in the source will be returned; if generic information\n-     * is not present, implicit and synthetic parameters may be\n-     * returned as well.\n+     * generic information is present, only parameters implicitly or\n+     * explicitly present in the source will be returned; if generic\n+     * information is not present, synthetic parameters may be returned\n+     * as well.\n@@ -294,1 +296,2 @@\n-     * the actual type arguments used in the source code.\n+     * the actual type arguments used, implicitly or explicitly, in the\n+     * source code.\n@@ -340,2 +343,2 @@\n-                int fromidx = 0;\n-                for (int i = 0; i < out.length; i++) {\n+                int fromidx = genericParamTypes.length - 1;\n+                for (int i = out.length - 1; i >= 0; i--) {\n@@ -343,2 +346,2 @@\n-                    if (param.isSynthetic() || param.isImplicit()) {\n-                        \/\/ If we hit a synthetic or mandated parameter,\n+                    if (param.isSynthetic()) {\n+                        \/\/ If we hit a synthetic parameter,\n@@ -347,0 +350,7 @@\n+                    } else if (param.isImplicit()) { \/\/ mandated\n+                        if (fromidx >= 0) {\n+                            out[i] = genericParamTypes[fromidx];\n+                            fromidx--;\n+                        } else {\n+                            out[i] = nonGenericParamTypes[i];\n+                        }\n@@ -350,1 +360,1 @@\n-                        fromidx++;\n+                        fromidx--;\n@@ -752,1 +762,2 @@\n-     * explicitly declared ones.\n+     * explicitly declared ones.  Also note that compact constructors of a\n+     * record class may have implicitly declared parameters.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Executable.java","additions":25,"deletions":14,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8235369 8235550 8247444\n+ * @bug 8235369 8235550 8247444 8320575\n@@ -60,0 +60,4 @@\n+    record R9(List<String> ls) {\n+        R9 {} \/\/ compact constructor, will contain a mandated parameter\n+    }\n+\n@@ -69,1 +73,2 @@\n-                       R8.class)\n+                       R8.class,\n+                       R9.class)\n@@ -127,0 +132,5 @@\n+            new Object[] { new R9(List.of(\"1\")),\n+                        1,\n+                        new Object[]{ List.of(\"1\") },\n+                        new String[]{ \"ls\" },\n+                        new String[]{ \"java.util.List<java.lang.String>\"} },\n@@ -152,0 +162,9 @@\n+        \/\/ now let's check constructors\n+        var constructor = recordClass.getDeclaredConstructors()[0];\n+        i = 0;\n+        for(var p: constructor.getParameters()) {\n+            assertEquals(p.getParameterizedType().toString(), signatures[i],\n+                    String.format(\"signature of method \\\"%s\\\" different from expected signature \\\"%s\\\"\",\n+                            p.getType().toString(), signatures[i]));\n+            i++;\n+        }\n","filename":"test\/jdk\/java\/lang\/reflect\/records\/RecordReflectionTest.java","additions":22,"deletions":3,"binary":false,"changes":25,"status":"modified"}]}