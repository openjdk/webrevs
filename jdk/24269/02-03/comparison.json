{"files":[{"patch":"@@ -1751,0 +1751,13 @@\n+\n+\/*\n+ * The JVMTI Suspend\/Resume support includes suspend_thread and resume_thread internal functions.\n+ * A synchronization is needed between suspend_thread and resume_thread as they have to update\n+ * same context atomically which includes virtual thread suspension registration and a couple of\n+ * JavaThread flags, e.g. is_suspended and is_carrier_thread_suspended.\n+ * In most common case this synchronization is provided by JvmtiVTMSTransitionDisabler.\n+ * But a JvmtiVTMSTransitionDisabler can not be held in a case of self suspension.\n+ * To support such a case the resume_thread function is executed in a context of ResumeThreadClosure.\n+ * In contrast, the suspend_thread function is executed normally. To be thread safe these functions\n+ * should not trigger safepoints while the suspension state is inconsistent.\n+ *\/\n+\n@@ -1822,0 +1835,3 @@\n+\/\/ Synchronization is needed between suspend_thread and resume_thread\n+\/\/ This function is executed in context of ResumeThreadClosure. In contrast, the suspend_thread\n+\/\/ is executed normally without any HandshakeClosure.\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-      thread_oop == current->threadObj() ||\n+      (!_is_virtual && thread_oop == current->threadObj()) ||\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-  bool _is_self;                                         \/\/ JvmtiVTMSTransitionDisabler is a no-op for current  platform, carrier or virtual thread\n+  bool _is_self;                                         \/\/ JvmtiVTMSTransitionDisabler is a no-op for current platform, carrier or virtual thread\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}