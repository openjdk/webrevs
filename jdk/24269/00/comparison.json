{"files":[{"patch":"@@ -1077,12 +1077,4 @@\n-  JvmtiVTMSTransitionDisabler disabler(true);\n-  JavaThread* current = JavaThread::current();\n-  ThreadsListHandle tlh(current);\n-\n-  JavaThread* java_thread = nullptr;\n-  oop thread_oop = nullptr;\n-  jvmtiError err = get_threadOop_and_JavaThread(tlh.list(), thread, current, &java_thread, &thread_oop);\n-  if (err != JVMTI_ERROR_NONE) {\n-    return err;\n-  }\n-  err = resume_thread(thread_oop, java_thread, \/* single_resume *\/ true);\n-  return err;\n+  \/\/ resume thread with handshake\n+  ResumeThreadClosure op(\/* single_resume *\/ true);\n+  JvmtiHandshake::execute(&op, thread);\n+  return op.result();\n@@ -1097,5 +1089,0 @@\n-  oop thread_oop = nullptr;\n-  JavaThread* java_thread = nullptr;\n-  JvmtiVTMSTransitionDisabler disabler(true);\n-  ThreadsListHandle tlh;\n-\n@@ -1104,1 +1091,1 @@\n-    jvmtiError err = JvmtiExport::cv_external_thread_to_JavaThread(tlh.list(), thread, &java_thread, &thread_oop);\n+    oop thread_oop = JNIHandles::resolve_external_guard(thread);\n@@ -1106,12 +1093,3 @@\n-    if (thread_oop != nullptr &&\n-        java_lang_VirtualThread::is_instance(thread_oop) &&\n-        !JvmtiEnvBase::is_vthread_alive(thread_oop)) {\n-      err = JVMTI_ERROR_THREAD_NOT_ALIVE;\n-    }\n-    if (err != JVMTI_ERROR_NONE) {\n-      if (thread_oop == nullptr || err != JVMTI_ERROR_INVALID_THREAD) {\n-        results[i] = err;\n-        continue;\n-      }\n-    }\n-    results[i] = resume_thread(thread_oop, java_thread, \/* single_resume *\/ true);\n+    ResumeThreadClosure op(\/* single_resume *\/ true);\n+    JvmtiHandshake::execute(&op, thread);\n+    results[i] = op.result();\n@@ -1133,0 +1111,2 @@\n+  JavaThread* current = JavaThread::current();\n+  HandleMark hm(current);\n@@ -1135,0 +1115,1 @@\n+  ThreadsListHandle tlh(current);\n@@ -1159,1 +1140,2 @@\n-      resume_thread(vt_oop, java_thread, \/* single_resume *\/ false);\n+      ResumeThreadClosure op(\/* single_resume *\/ false);\n+      JvmtiHandshake::execute(&op, &tlh, java_thread, Handle(current, vt_oop));\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":13,"deletions":31,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -1759,0 +1759,1 @@\n+  bool is_thread_carrying = is_thread_carrying_vthread(java_thread, thread_h());\n@@ -1785,1 +1786,0 @@\n-  bool is_thread_carrying = is_thread_carrying_vthread(java_thread, thread_h());\n@@ -1825,1 +1825,2 @@\n-  JavaThread* current = JavaThread::current();\n+  \/\/ current thread can be VMThread which is a NonJavaThread\n+  Thread* current = Thread::current();\n@@ -1828,0 +1829,1 @@\n+  ThreadsListHandle tlh(current);\n@@ -1829,0 +1831,1 @@\n+  NoSafepointVerifier nsv;\n@@ -2059,0 +2062,1 @@\n+  hs_cl->set_target_h(target_h);\n@@ -2615,0 +2619,10 @@\n+void\n+ResumeThreadClosure::do_thread(Thread *target) {\n+  set_result(JvmtiEnvBase::resume_thread(_target_h(), _target_jt, _single_resume));\n+}\n+\n+void\n+ResumeThreadClosure::do_vthread(Handle thread_h) {\n+  set_result(JvmtiEnvBase::resume_thread(_target_h(), _target_jt, _single_resume));\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -465,0 +465,1 @@\n+  Handle _target_h;\n@@ -477,0 +478,1 @@\n+  void set_target_h(Handle target_h) { _target_h = target_h; }\n@@ -641,0 +643,16 @@\n+\n+\/\/ HandshakeClosure to resume thread.\n+class ResumeThreadClosure : public JvmtiUnitedHandshakeClosure {\n+ private:\n+  bool _single_resume;\n+\n+ public:\n+  ResumeThreadClosure(bool single_resume)\n+      : JvmtiUnitedHandshakeClosure(\"ResumeThread\"),\n+        _single_resume(single_resume) {}\n+\n+  void do_thread(Thread *target);\n+  void do_vthread(Handle thread_h);\n+};\n+\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -257,1 +257,4 @@\n-  : _is_SR(false), _thread(thread)\n+  : _is_SR(false),\n+    _is_virtual(false),\n+    _is_self(false),\n+    _thread(thread)\n@@ -259,0 +262,1 @@\n+#if 0\n@@ -262,0 +266,1 @@\n+#endif\n@@ -265,0 +270,10 @@\n+  JavaThread* current = JavaThread::current();\n+  oop thread_oop = JNIHandles::resolve_external_guard(thread);\n+  _is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n+\n+  if (thread == nullptr ||\n+      thread_oop == current->threadObj() ||\n+      (_is_virtual && thread_oop == current->vthread())) {\n+    _is_self = true;\n+    return; \/\/ no need for current thread to disable and enable transitions for itself\n+  }\n@@ -268,1 +283,0 @@\n-  oop thread_oop = JNIHandles::resolve_external_guard(thread);\n@@ -275,5 +289,1 @@\n-  if (!java_lang_VirtualThread::is_instance(thread_oop)) {\n-    _thread = nullptr; \/\/ target is a platform thread, switch to disabling VTMS transitions for all threads\n-  }\n-\n-  if (_thread != nullptr) {\n+  if (_is_virtual) {\n@@ -288,1 +298,4 @@\n-  : _is_SR(is_SR), _thread(nullptr)\n+  : _is_SR(is_SR),\n+    _is_virtual(false),\n+    _is_self(false),\n+    _thread(nullptr)\n@@ -290,0 +303,1 @@\n+#if 0\n@@ -293,0 +307,1 @@\n+#endif\n@@ -306,0 +321,1 @@\n+#if 0\n@@ -309,0 +325,1 @@\n+#endif\n@@ -312,1 +329,4 @@\n-  if (_thread != nullptr) {\n+  if (_is_self) {\n+    return; \/\/ no need for current thread to disable and enable transitions for itself\n+  }\n+  if (_is_virtual) {\n@@ -687,1 +707,1 @@\n-  MonitorLocker ml(JvmtiVTMSTransition_lock);\n+  MutexLocker ml(JvmtiVThreadSuspend_lock, Mutex::_no_safepoint_check_flag);\n@@ -696,1 +716,1 @@\n-  MonitorLocker ml(JvmtiVTMSTransition_lock);\n+  MutexLocker ml(JvmtiVThreadSuspend_lock, Mutex::_no_safepoint_check_flag);\n@@ -706,1 +726,1 @@\n-  MonitorLocker ml(JvmtiVTMSTransition_lock);\n+  MutexLocker ml(JvmtiVThreadSuspend_lock, Mutex::_no_safepoint_check_flag);\n@@ -723,1 +743,1 @@\n-  MonitorLocker ml(JvmtiVTMSTransition_lock);\n+  MutexLocker ml(JvmtiVThreadSuspend_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":33,"deletions":13,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -89,0 +89,2 @@\n+  bool _is_virtual;                                      \/\/ target thread is virtual\n+  bool _is_self;                                         \/\/ JvmtiVTMSTransitionDisabler is a no-op for current  platform, carrier or virtual thread\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -781,1 +781,2 @@\n-    ThreadBlockInVM tbivm(self);\n+    JavaThreadState jts = self->thread_state();\n+    self->set_thread_state(_thread_blocked);\n@@ -785,0 +786,1 @@\n+    self->set_thread_state(jts);\n@@ -794,4 +796,0 @@\n-  if (!is_suspended()) {\n-    return false;\n-  }\n-  MutexLocker ml(&_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+Mutex*   JvmtiVThreadSuspend_lock     = nullptr;\n@@ -259,0 +260,1 @@\n+  MUTEX_DEFN(JvmtiVThreadSuspend_lock        , PaddedMutex,   nosafepoint-1);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+extern Mutex*   JvmtiVThreadSuspend_lock;        \/\/ a lock for virtual threads suspension\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -107,1 +107,0 @@\n-runtime\/handshake\/HandshakeSuspendExitTest.java 8294313 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}