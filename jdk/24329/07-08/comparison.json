{"files":[{"patch":"@@ -1100,0 +1100,1 @@\n+  size_t buf_iter = cpu_info_size;\n@@ -1101,2 +1102,2 @@\n-    insert_features_names(dynamic_features_vector_elem(i), buf + cpu_info_size, sizeof(buf) - cpu_info_size, _features_names, 64 * i);\n-    cpu_info_size = strlen(buf);\n+    insert_features_names(dynamic_features_vector_elem(i), buf + buf_iter, sizeof(buf) - buf_iter, _features_names, 64 * i);\n+    buf_iter = strlen(buf);\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -422,0 +422,31 @@\n+\n+\n+void VM_Features::init_vm_features(uint32_t size, uint32_t elem_shift_count) {\n+  _dynamic_features_vector_size = size;\n+  _dynamic_features_element_shift_count = elem_shift_count;\n+\n+  uint64_t* features_memory = NEW_C_HEAP_ARRAY(uint64_t, size, mtInternal);\n+  memset(features_memory, 0, sizeof(uint64_t*) * size);\n+  _dynamic_features_vector = features_memory;\n+  }\n+\n+void VM_Features::set_feature(uint32_t feature) {\n+  uint32_t index = feature >> _dynamic_features_element_shift_count;\n+  uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n+  assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n+  _dynamic_features_vector[index] |= (1ULL << (feature & index_mask));\n+}\n+\n+void VM_Features::clear_feature(uint32_t feature) {\n+  uint32_t index = feature >> _dynamic_features_element_shift_count;\n+  uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n+  assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n+  _dynamic_features_vector[index] &= ~(1ULL << (feature & index_mask));\n+}\n+\n+bool VM_Features::supports_feature(uint32_t feature) {\n+  uint32_t index = feature >> _dynamic_features_element_shift_count;\n+  uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n+  assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n+  return (_dynamic_features_vector[index] & (1ULL << (feature & index_mask))) != 0;\n+}\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -55,29 +55,7 @@\n-  void init_vm_features(uint32_t size, uint32_t elem_shift_count) {\n-    _dynamic_features_vector_size = size;\n-    _dynamic_features_element_shift_count = elem_shift_count;\n-\n-    uint64_t* features_memory = NEW_C_HEAP_ARRAY(uint64_t, size, mtInternal);\n-    memset(features_memory, 0, sizeof(uint64_t*) * size);\n-    _dynamic_features_vector = features_memory;\n-  }\n-\n-  void set_feature(uint32_t feature) {\n-    uint32_t index = feature >> _dynamic_features_element_shift_count;\n-    uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n-    assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n-    _dynamic_features_vector[index] |= (1ULL << (feature & index_mask));\n-  }\n-\n-  void clear_feature(uint32_t feature) {\n-    uint32_t index = feature >> _dynamic_features_element_shift_count;\n-    uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n-    assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n-    _dynamic_features_vector[index] &= ~(1ULL << (feature & index_mask));\n-  }\n-\n-  bool supports_feature(uint32_t feature) {\n-    uint32_t index = feature >> _dynamic_features_element_shift_count;\n-    uint32_t index_mask = (1 << _dynamic_features_element_shift_count) - 1;\n-    assert(index < _dynamic_features_vector_size, \"Features array index out of bounds\");\n-    return (_dynamic_features_vector[index] & (1ULL << (feature & index_mask))) != 0;\n-  }\n+  void init_vm_features(uint32_t size, uint32_t elem_shift_count);\n+\n+  void set_feature(uint32_t feature);\n+\n+  void clear_feature(uint32_t feature);\n+\n+  bool supports_feature(uint32_t feature);\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.hpp","additions":7,"deletions":29,"binary":false,"changes":36,"status":"modified"}]}