{"files":[{"patch":"@@ -70,2 +70,3 @@\n- * external file attributes. Additionally, {@code ZipInputStream} might read\n- * entries that are not in the Central directory or contain information that is\n+ * external file attributes. Consequently, {@code ZipInputStream} that reads\n+ * from a ZIP file may read ZIP file entries that are not in the ZIP file's\n+ * central directory or contain information that is\n@@ -73,2 +74,0 @@\n- * This class might also fail to properly parse ZIP archives that have\n- * prepended data.\n@@ -77,1 +76,1 @@\n- * archives since it correctly reads data from the central directory.\n+ * files since it reads data from the central directory.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -296,16 +296,0 @@\n- *\n- * @implNote\n- * While the\n- * <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">ZIP specification<\/a>\n- * has no restrictions on ZIP entries with duplicate names, the\n- * {@link ZipOutputStream} class doesn't allow creation of ZIP archives with\n- * duplicate entry names. Therefore, when parsing archives containing duplicate\n- * names, unexpected behavior may occur such as metadata or content from the\n- * later entry being returned due to internal caching.\n- *\n- * Additionally, for compatibility with earlier versions of the JDK, files and\n- * directories with the same name (such as \"foobar\" and \"foobar\/\") are\n- * considered duplicates, which can result in unexpected behavior such as wrong\n- * metadata or content being returned when parsing archives containing\n- * duplicate names.\n- *\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"}]}