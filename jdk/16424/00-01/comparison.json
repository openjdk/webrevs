{"files":[{"patch":"@@ -127,3 +127,4 @@\n- * JAR files retrieved by this class might get cached for performance reasons which can result\n- * in unexpected behavior if the JAR files are modified while being read using this class.\n- * If such behavior is undesirable, please use the {@link URLConnection#setUseCaches(boolean)} method to disable caching.\n+ * JAR files retrieved by this class might get cached for performance reasons\n+ * which can result in unexpected behavior if the JAR files are modified while\n+ * being read using this class. If such behavior is undesirable, please use\n+ * the {@link URLConnection#setUseCaches(boolean)} method to disable caching.\n","filename":"src\/java.base\/share\/classes\/java\/net\/JarURLConnection.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -136,2 +136,3 @@\n- * This class uses a cache for ZIP entry metadata, and doesn't handle duplicate entries,\n- * which can result in unpredictable behavior or crashes (@see java.util.zip.ZipFile).\n+ * This class uses a cache for ZIP entry metadata, and doesn't handle duplicate\n+ * entries, which can result in unpredictable behavior or crashes\n+ * (@see java.util.zip.ZipFile).\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -94,3 +94,4 @@\n- * This class uses a cache for ZIP entry metadata (but not content) keyed off pathname,\n- * last modified time and file key. If a ZIP file is modified while being read with this class,\n- * it can result in unpredictable behavior or crashes.\n+ * This class uses a cache for ZIP entry metadata (but not content) keyed off\n+ * pathname, last modified time and file key. If a ZIP file is modified while\n+ * being read with this class, it can result in unpredictable behavior or\n+ * crashes.\n@@ -98,5 +99,8 @@\n- * Furthermore, while the <a href=\"https:\/\/pkware.cachefly.net\/webdocs\/casestudies\/APPNOTE.TXT\">PKWARE ZIP File Format Specification<\/a>\n- * has no restrictions on ZIP entries with duplicate names, the {@link ZipOutputStream} class doesn't allow creation of\n- * ZIP archives with duplicate entry names. Therefore, when parsing archives containing duplicate names, unexpected behavior\n- * may occur such as metadata from the later entry or content from the first entry\n- * being returned due to internal caching.\n+ * Furthermore, while the\n+ * <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">ZIP specification<\/a>\n+ * has no restrictions on ZIP entries with duplicate names,\n+ * the {@link ZipOutputStream} class doesn't allow creation of ZIP archives\n+ * with duplicate entry names. Therefore, when parsing archives containing\n+ * duplicate names, unexpected behavior may occur such as metadata from the\n+ * later entry or content from the first entry being returned due to internal\n+ * caching.\n@@ -104,3 +108,5 @@\n- * Additionally, for compatibility with earlier versions of the JDK, files and directories with the same name (such as \"foobar\" and \"foobar\/\")\n- * are considered duplicates, which can result in unexpected behavior such as wrong metadata or content being returned\n- * when parsing archives containing duplicate names.\n+ * Additionally, for compatibility with earlier versions of the JDK, files and\n+ * directories with the same name (such as \"foobar\" and \"foobar\/\")\n+ * are considered duplicates, which can result in unexpected behavior such as\n+ * wrong metadata or content being returned when parsing archives containing\n+ * duplicate names.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -67,6 +67,8 @@\n- * The LOC header contains metadata about the Zip file entry. {@code ZipInputStream}\n- * does not read the Central directory (CEN) header for the entry and therefore\n- * will not have access to its metadata such as the external file attributes. Additionally,\n- * {@code ZipInputStream} might read entries that are not in the Central directory or contain\n- * information that is different than in the Central directory (CEN) header for the same entry.\n- * This class might also fail to properly parse ZIP archives that have prepended data.\n+ * The LOC header contains metadata about the Zip file entry.\n+ * {@code ZipInputStream} does not read the Central directory (CEN) header for\n+ * the entry and therefore will not have access to its metadata such as the\n+ * external file attributes. Additionally, {@code ZipInputStream} might read\n+ * entries that are not in the Central directory or contain information that is\n+ * different than in the Central directory (CEN) header for the same entry.\n+ * This class might also fail to properly parse ZIP archives that have\n+ * prepended data.\n@@ -74,2 +76,2 @@\n- * Whenever possible, {@linkplain ZipFile} should be used for parsing ZIP archives\n- * since it correctly reads data from the central directory.\n+ * Whenever possible, {@linkplain ZipFile} should be used for parsing ZIP\n+ * archives since it correctly reads data from the central directory.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -298,4 +298,7 @@\n- * While the <a href=\"https:\/\/pkware.cachefly.net\/webdocs\/casestudies\/APPNOTE.TXT\">PKWARE ZIP File Format Specification<\/a>\n- * has no restrictions on ZIP entries with duplicate names, the {@link ZipOutputStream} class doesn't allow creation of\n- * ZIP archives with duplicate entry names. Therefore, when parsing archives containing duplicate names, unexpected behavior\n- * may occur such as metadata or content from the later entry being returned due to internal caching.\n+ * While the\n+ * <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">ZIP specification<\/a>\n+ * has no restrictions on ZIP entries with duplicate names, the\n+ * {@link ZipOutputStream} class doesn't allow creation of ZIP archives with\n+ * duplicate entry names. Therefore, when parsing archives containing duplicate\n+ * names, unexpected behavior may occur such as metadata or content from the\n+ * later entry being returned due to internal caching.\n@@ -303,3 +306,5 @@\n- * Additionally, for compatibility with earlier versions of the JDK, files and directories with the same name (such as \"foobar\" and \"foobar\/\")\n- * are considered duplicates, which can result in unexpected behavior such as wrong metadata or content being returned\n- * when parsing archives containing duplicate names.\n+ * Additionally, for compatibility with earlier versions of the JDK, files and\n+ * directories with the same name (such as \"foobar\" and \"foobar\/\") are\n+ * considered duplicates, which can result in unexpected behavior such as wrong\n+ * metadata or content being returned when parsing archives containing\n+ * duplicate names.\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}