{"files":[{"patch":"@@ -2567,7 +2567,0 @@\n-void G1CollectedHeap::do_collection_pause_at_safepoint(size_t allocation_word_size) {\n-  assert_at_safepoint_on_vm_thread();\n-  guarantee(!is_stw_gc_active(), \"collection is not reentrant\");\n-\n-  do_collection_pause_at_safepoint_helper(allocation_word_size);\n-}\n-\n@@ -2635,1 +2628,4 @@\n-void G1CollectedHeap::do_collection_pause_at_safepoint_helper(size_t allocation_word_size) {\n+void G1CollectedHeap::do_collection_pause_at_safepoint(size_t allocation_word_size) {\n+  assert_at_safepoint_on_vm_thread();\n+  guarantee(!is_stw_gc_active(), \"collection is not reentrant\");\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -772,4 +772,0 @@\n-  \/\/ Helper for do_collection_pause_at_safepoint, containing the guts\n-  \/\/ of the incremental collection pause, executed by the vm thread.\n-  void do_collection_pause_at_safepoint_helper(size_t allocation_word_size);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}