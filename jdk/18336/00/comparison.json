{"files":[{"patch":"@@ -24,7 +24,0 @@\n-import java.awt.event.ItemEvent;\n-import javax.swing.BorderFactory;\n-import javax.swing.Box;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComponent;\n-import javax.swing.JLabel;\n-\n@@ -35,3 +28,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual Test4129681\n+ * @run main Test4129681\n@@ -40,0 +31,12 @@\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Point;\n+import javax.swing.BorderFactory;\n+import javax.swing.JLabel;\n+import javax.swing.UIManager;\n+\n+import javax.imageio.ImageIO;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+\n@@ -41,0 +44,6 @@\n+    private static JLabel label;\n+    private static final Color labelDisableColor = Color.RED;\n+    private static final Dimension SIZE = new Dimension(100, 40);\n+    private static final Point startPoint = new Point(8, 4);\n+    private static final Point endPoint = new Point(18, 14);\n+\n@@ -42,5 +51,3 @@\n-        String testInstructions = \"\"\"\n-                Click the checkbox to disable the label.\n-                The test passes if the title of the border\n-                is disabled as well as the label.\n-                \"\"\";\n+        int correctColoredPixels = 0;\n+        int totalPixels = 0;\n+        int tolerance = 20;\n@@ -48,9 +55,14 @@\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions\")\n-                .instructions(testInstructions)\n-                .rows(4)\n-                .columns(25)\n-                .splitUI(Test4129681::init)\n-                .build()\n-                .awaitAndCheck();\n-    }\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        System.setProperty(\"sun.java2d.uiScale\", \"1.0\");\n+        label = new JLabel(\"Label\");\n+        label.setBorder(BorderFactory.createTitledBorder(\"\\u2588\".repeat(5)));\n+        UIManager.getDefaults().put(\"Label.disabledForeground\", labelDisableColor);\n+        label.setSize(SIZE);\n+        label.setEnabled(false);\n+        BufferedImage image = new BufferedImage((int) Math.ceil(label.getWidth()),\n+                (int) Math.ceil(label.getHeight()),\n+                BufferedImage.TYPE_INT_ARGB);\n+\n+        Graphics2D g2d = image.createGraphics();\n+        label.paint(g2d);\n+        g2d.dispose();\n@@ -58,7 +70,8 @@\n-    public static JComponent init() {\n-        JLabel label = new JLabel(\"message\");\n-        JCheckBox check = new JCheckBox(\"Enable\/Disable\");\n-        check.addItemListener(event ->\n-                label.setEnabled(ItemEvent.DESELECTED == event.getStateChange()));\n-        label.setBorder(BorderFactory.createTitledBorder(\"label\"));\n-        label.setEnabled(!check.isSelected());\n+        for (int x = startPoint.x; x < endPoint.x; x++) {\n+            for (int y = startPoint.y; y < endPoint.y; y++) {\n+                if (image.getRGB(x, y) == labelDisableColor.getRGB()) {\n+                    correctColoredPixels++;\n+                }\n+                totalPixels++;\n+            }\n+        }\n@@ -66,5 +79,5 @@\n-        Box main = Box.createVerticalBox();\n-        main.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n-        main.add(check);\n-        main.add(label);\n-        return main;\n+        if (((double)correctColoredPixels\/totalPixels*100) <= tolerance) {\n+            ImageIO.write(image, \"png\", new File(\"failureImage.png\"));\n+            throw new RuntimeException(\"Label with border is not disabled\");\n+        }\n+        System.out.println(\"Test Passed\");\n","filename":"test\/jdk\/javax\/swing\/border\/Test4129681.java","additions":49,"deletions":36,"binary":false,"changes":85,"status":"modified"}]}