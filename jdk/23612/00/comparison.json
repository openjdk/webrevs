{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,0 +261,4 @@\n+        if (toolset.needFipsParameter()) {\n+            cmdline.add(\"-fips\");\n+        }\n+\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,8 @@\n-    static final class ToolInfo {\n+    interface ToolInfo {\n+        Path path();\n+        DottedVersion version();\n+    }\n+\n+    interface CandleInfo extends ToolInfo {\n+        boolean fips();\n+    }\n@@ -61,3 +68,4 @@\n-        ToolInfo(Path path, String version) {\n-            this.path = path;\n-            this.version = DottedVersion.lazy(version);\n+    private record DefaultToolInfo(Path path, DottedVersion version) implements ToolInfo {\n+        DefaultToolInfo {\n+            Objects.requireNonNull(path);\n+            Objects.requireNonNull(version);\n@@ -66,2 +74,14 @@\n-        final Path path;\n-        final DottedVersion version;\n+        DefaultToolInfo(Path path, String version) {\n+            this(path, DottedVersion.lazy(version));\n+        }\n+    }\n+\n+    private record DefaultCandleInfo(Path path, DottedVersion version, boolean fips) implements CandleInfo {\n+        DefaultCandleInfo {\n+            Objects.requireNonNull(path);\n+            Objects.requireNonNull(version);\n+        }\n+\n+        DefaultCandleInfo(ToolInfo info, boolean fips) {\n+            this(info.path(), info.version(), fips);\n+        }\n@@ -74,1 +94,1 @@\n-                return lookupResult.getInfo().version.toString();\n+                return lookupResult.info().version().toString();\n@@ -77,1 +97,1 @@\n-                        ToolLookupResult::getTool).collect(Collectors.toSet());\n+                        ToolLookupResult::tool).collect(Collectors.toSet());\n@@ -85,2 +105,2 @@\n-            }).flatMap(List::stream).collect(Collectors.toMap(ToolLookupResult::getTool,\n-                    ToolLookupResult::getInfo, (ToolInfo x, ToolInfo y) -> {\n+            }).flatMap(List::stream).collect(Collectors.toMap(ToolLookupResult::tool,\n+                    ToolLookupResult::info, (ToolInfo x, ToolInfo y) -> {\n@@ -88,1 +108,1 @@\n-                            return toolInfo.version.toComponentsString();\n+                            return toolInfo.version().toComponentsString();\n@@ -102,2 +122,2 @@\n-            return new ToolLookupResult(tool, null);\n-        }).toList();\n+            return ToolLookupResult.lookup(tool, Optional.empty());\n+        }).filter(Optional::isPresent).map(Optional::get).toList();\n@@ -114,1 +134,1 @@\n-                return new ToolLookupResult(tool, dir);\n+                return ToolLookupResult.lookup(tool, Optional.of(dir));\n@@ -116,1 +136,1 @@\n-        }).flatMap(Function.identity()).toList();\n+        }).flatMap(Function.identity()).filter(Optional::isPresent).map(Optional::get).toList();\n@@ -131,2 +151,2 @@\n-                            \"message.wrong-tool-version\"), lookupResult.getInfo().path,\n-                            lookupResult.getInfo().version, lookupResult.getTool().minimalVersion),\n+                            \"message.wrong-tool-version\"), lookupResult.info().path(),\n+                            lookupResult.info().version(), lookupResult.tool().minimalVersion),\n@@ -147,1 +167,6 @@\n-    private static class ToolLookupResult {\n+    private record ToolLookupResult(WixTool tool, ToolInfo info, boolean versionTooOld) {\n+\n+        ToolLookupResult {\n+            Objects.requireNonNull(tool);\n+            Objects.requireNonNull(info);\n+        }\n@@ -149,1 +174,3 @@\n-        ToolLookupResult(WixTool tool, Path lookupDir) {\n+        static Optional<ToolLookupResult> lookup(WixTool tool, Optional<Path> lookupDir) {\n+            Objects.requireNonNull(tool);\n+            Objects.requireNonNull(lookupDir);\n@@ -151,1 +178,1 @@\n-            final Path toolPath = Optional.ofNullable(lookupDir).map(p -> p.resolve(\n+            final Path toolPath = lookupDir.map(p -> p.resolve(\n@@ -168,1 +195,13 @@\n-                validator.setCommandLine(\"\/?\");\n+                final String printVersionArg;\n+                if (tool == Candle3) {\n+                    \/\/ Add '-fips' to make \"candle.exe\" print help message and return\n+                    \/\/ 0 exit code instead of returning error exit code and printing\n+                    \/\/ \"error CNDL0308 : The Federal Information Processing Standard (FIPS) appears to be enabled on the machine...\"\n+                    \/\/ error message if FIPS is enabled.\n+                    \/\/ If FIPS is disabled, passing '-fips' parameter still makes\n+                    \/\/ \"candle.exe\" print help message and return 0 exit code.\n+                    printVersionArg = \"-fips\";\n+                } else {\n+                    printVersionArg = \"-?\";\n+                }\n+                validator.setCommandLine(printVersionArg);\n@@ -189,1 +228,0 @@\n-            this.tool = tool;\n@@ -192,2 +230,19 @@\n-                this.versionTooOld = tooOld[0];\n-                this.info = new ToolInfo(toolPath, parsedVersion[0]);\n+                ToolInfo info = new DefaultToolInfo(toolPath, parsedVersion[0]);\n+                if (tool == Candle3) {\n+                    \/\/ Detect FIPS mode\n+                    var fips = false;\n+                    try {\n+                        final var exec = Executor.of(toolPath.toString(), \"-?\").setQuiet(true).saveOutput(true);\n+                        final var exitCode = exec.execute();\n+                        if (exitCode != 0 \/* 308 *\/) {\n+                            final var output = exec.getOutput();\n+                            if (!output.isEmpty() && output.get(0).contains(\"error CNDL0308\")) {\n+                                fips = true;\n+                            }\n+                        }\n+                    } catch (IOException ex) {\n+                        Log.verbose(ex);\n+                    }\n+                    info = new DefaultCandleInfo(info, fips);\n+                }\n+                return Optional.of(new ToolLookupResult(tool, info, tooOld[0]));\n@@ -195,2 +250,1 @@\n-                this.versionTooOld = false;\n-                this.info = null;\n+                return Optional.empty();\n@@ -200,8 +254,0 @@\n-        WixTool getTool() {\n-            return tool;\n-        }\n-\n-        ToolInfo getInfo() {\n-            return info;\n-        }\n-\n@@ -209,1 +255,1 @@\n-            return info != null && !versionTooOld;\n+            return !versionTooOld;\n@@ -211,8 +257,0 @@\n-\n-        boolean isVersionTooOld() {\n-            return versionTooOld;\n-        }\n-\n-        private final WixTool tool;\n-        private final ToolInfo info;\n-        private final boolean versionTooOld;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixTool.java","additions":82,"deletions":44,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        return tools.get(tool).path;\n+        return tools.get(tool).path();\n@@ -67,1 +67,8 @@\n-        return tools.values().iterator().next().version;\n+        return tools.values().iterator().next().version();\n+    }\n+\n+    boolean needFipsParameter() {\n+        return tools.values().stream()\n+                .filter(WixTool.CandleInfo.class::isInstance)\n+                .map(WixTool.CandleInfo.class::cast)\n+                .anyMatch(WixTool.CandleInfo::fips);\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixToolset.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}