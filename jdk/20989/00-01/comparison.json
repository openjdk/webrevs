{"files":[{"patch":"@@ -96,12 +96,8 @@\n-            try {\n-                if (files.memory() != null) {\n-                    Files.delete(files.memory());\n-                }\n-                if (files.cpu() != null) {\n-                    Files.delete(files.cpu());\n-                }\n-                if (files.sliceDotDDir() != null) {\n-                    FileUtils.deleteFileTreeUnchecked(files.sliceDotDDir());\n-                }\n-            } catch (NoSuchFileException e) {\n-                \/\/ ignore\n+            cleanupFiles(files);\n+        }\n+    }\n+\n+    private static void cleanupFiles(ResultFiles files) throws IOException {\n+        try {\n+            if (files.memory() != null) {\n+                Files.delete(files.memory());\n@@ -109,0 +105,8 @@\n+            if (files.cpu() != null) {\n+                Files.delete(files.cpu());\n+            }\n+            if (files.sliceDotDDir() != null) {\n+                FileUtils.deleteFileTreeUnchecked(files.sliceDotDDir());\n+            }\n+        } catch (NoSuchFileException e) {\n+            \/\/ ignore\n@@ -147,1 +151,2 @@\n-                                  StandardOpenOption.TRUNCATE_EXISTING);\n+                                  StandardOpenOption.TRUNCATE_EXISTING,\n+                                  StandardOpenOption.CREATE);\n@@ -153,1 +158,2 @@\n-                                  StandardOpenOption.TRUNCATE_EXISTING);\n+                                  StandardOpenOption.TRUNCATE_EXISTING,\n+                                  StandardOpenOption.CREATE);\n@@ -169,1 +175,1 @@\n-        systemdDaemonReload(cpu);\n+        systemdDaemonReload(cpu, memory, sliceDotDDir);\n@@ -185,1 +191,1 @@\n-    private static void systemdDaemonReload(Path cpu) throws Exception {\n+    private static void systemdDaemonReload(Path cpu, Path memory, Path sliceDdir) throws Exception {\n@@ -190,1 +196,14 @@\n-            throw new AssertionError(\"Failed to reload systemd daemon\");\n+            if (RUN_AS_USER) {\n+                cleanupFiles(new ResultFiles(cpu, memory, sliceDdir));\n+                \/\/ When run as user the systemd user manager needs to be\n+                \/\/ accessible and working. This is usually the case when\n+                \/\/ connected via SSH or user login, but may not work for\n+                \/\/ sessions set up via 'su <user>' or similar.\n+                \/\/ In that case, 'systemctl --user status' usually doesn't\n+                \/\/ work. There is no other option than skip the test.\n+                String msg = \"Service user@.service not properly configured. \" +\n+                             \"Skipping the test!\";\n+                throw new SkippedException(msg);\n+            } else {\n+                throw new AssertionError(\"Failed to reload systemd daemon\");\n+            }\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/systemd\/SystemdTestUtils.java","additions":36,"deletions":17,"binary":false,"changes":53,"status":"modified"}]}