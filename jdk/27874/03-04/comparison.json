{"files":[{"patch":"@@ -24,1 +24,1 @@\n-import jdk.httpclient.test.lib.common.HttpServerAdapters;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestEchoHandler;\n@@ -43,0 +43,1 @@\n+import static jdk.httpclient.test.lib.common.HttpServerAdapters.createClientBuilderFor;\n@@ -79,1 +80,1 @@\n-            server.addHandler(new BodyEchoingHandler(), serverHandlerPath);\n+            server.addHandler(new HttpTestEchoHandler(), serverHandlerPath);\n@@ -101,2 +102,1 @@\n-        var clientBuilder = HttpServerAdapters\n-                .createClientBuilderFor(version)\n+        var clientBuilder = createClientBuilderFor(version)\n@@ -111,1 +111,6 @@\n-    private static HttpRequest createRequest(SSLContext sslContext, HttpTestServer server, String serverHandlerPath, Version version, byte[] requestBodyBytes) {\n+    private static HttpRequest createRequest(\n+            SSLContext sslContext,\n+            HttpTestServer server,\n+            String serverHandlerPath,\n+            Version version,\n+            byte[] requestBodyBytes) {\n@@ -143,18 +148,0 @@\n-    private static final class BodyEchoingHandler implements HttpServerAdapters.HttpTestHandler {\n-\n-        @Override\n-        public void handle(HttpServerAdapters.HttpTestExchange exchange) throws IOException {\n-            try (exchange) {\n-                byte[] body;\n-                try (var requestBodyStream = exchange.getRequestBody()) {\n-                    body = requestBodyStream.readAllBytes();\n-                }\n-                exchange.sendResponseHeaders(200, body.length);\n-                try (var responseBodyStream = exchange.getResponseBody()) {\n-                    responseBodyStream.write(body);\n-                }\n-            }\n-        }\n-\n-    }\n-\n","filename":"test\/jdk\/java\/net\/httpclient\/BufferSize1Test.java","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"}]}