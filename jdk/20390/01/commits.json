[{"commit":{"message":"Include atomic.hpp"},"files":[{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/copy_windows_aarch64.hpp"}],"sha":"5624c1042579fb26546b9528d2dbb67b3ef84821"},{"commit":{"message":"Fix code duplication"},"files":[{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/copy_windows_aarch64.hpp"}],"sha":"a3f412afd4f3ff9d9e89514f2f0e530a53e676a2"},{"commit":{"message":"Directly copy jlongs on Windows AArch64\n\nThe implementation of the pd_conjoint_jlongs_atomic function in the Windows AArch64 port calls pd_conjoint_oops_atomic to copy jlongs from the source to the destination. However, when CHECK_UNHANDLED_OOPS is defined, the copying of each jlong in pd_conjoint_oops_atomic calls oop::operator= instead of just copying the jlong.\noop::operator= then treats the value to be copied as a pointer, causing the assertion failure in JDK-8334475. The fix is to directly copy the jlongs from the source to the destination."},"files":[{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/copy_windows_aarch64.hpp"}],"sha":"9cbb182e5e77771396b6f6cc85447721834363c7"}]