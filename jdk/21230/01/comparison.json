{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -260,1 +260,14 @@\n-                        StatusInfo info = task.get();\n+                        StatusInfo info;\n+                        try {\n+                            info = task.get();\n+                        } catch (ExecutionException exc) {\n+                            \/\/ Check for an underlying cause available and log\n+                            \/\/ that, otherwise just log the ExecutionException\n+                            Throwable cause = Optional.ofNullable(\n+                                    exc.getCause()).orElse(exc);\n+                            if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n+                                SSLLogger.fine(\"Exception during OCSP fetch: \" +\n+                                        cause);\n+                            }\n+                            continue;\n+                        }\n@@ -275,2 +288,3 @@\n-            } catch (InterruptedException | ExecutionException exc) {\n-                \/\/ Not sure what else to do here\n+            } catch (InterruptedException intex) {\n+                \/\/ Log and reset the interrupt state\n+                Thread.currentThread().interrupt();\n@@ -278,1 +292,2 @@\n-                    SSLLogger.fine(\"Exception when getting data: \", exc);\n+                    SSLLogger.fine(\"Interrupt occurred while fetching: \" +\n+                            intex);\n@@ -585,2 +600,1 @@\n-    static final StaplingParameters processStapling(\n-            ServerHandshakeContext shc) {\n+    static StaplingParameters processStapling(ServerHandshakeContext shc) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/StatusResponseManager.java","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8046321\n+ * @bug 8046321 8339403\n","filename":"test\/jdk\/sun\/security\/ssl\/Stapling\/StatusResponseManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,1 @@\n+            put(\"Test Interrupt while fetching\", forceInterruptMainThread);\n@@ -265,0 +266,32 @@\n+    public static final TestCase forceInterruptMainThread = new TestCase() {\n+        @Override\n+        public Map.Entry<Boolean, String> runTest() {\n+            StatusResponseManager srm = new StatusResponseManager();\n+            Boolean pass = Boolean.FALSE;\n+            String message = null;\n+            CertStatusRequest oReq = OCSPStatusRequest.EMPTY_OCSP;\n+\n+            try {\n+                \/\/ Force the interrupt flag to be set on the thread that\n+                \/\/ performs the invokeAll in the SRM.\n+                Thread.currentThread().interrupt();\n+\n+                \/\/ Get OCSP responses for non-root certs in the chain\n+                Map<X509Certificate, byte[]> responseMap = srm.get(\n+                        CertStatusRequestType.OCSP, oReq, chain, 5000,\n+                        TimeUnit.MILLISECONDS);\n+                if (Thread.currentThread().isInterrupted()) {\n+                    pass = Boolean.TRUE;\n+                    message = \"Thread is in expected interrupted state.\";\n+                } else {\n+                    message = \"Missing expectedInterruptedException.\";\n+                }\n+                message += \" Number of SRM entries: \" + responseMap.size();\n+            } catch (Exception exc) {\n+                message = \"Unexpected exception: \" + exc;\n+            }\n+\n+            return new AbstractMap.SimpleEntry<>(pass, message);\n+        }\n+    };\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/Stapling\/java.base\/sun\/security\/ssl\/StatusResponseManagerTests.java","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"}]}