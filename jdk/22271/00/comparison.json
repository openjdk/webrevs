{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.security.AccessController;\n@@ -52,2 +51,0 @@\n-    private InputStream cmdIn = null;\n-    private OutputStream cmdOut = null;\n@@ -78,26 +75,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private synchronized void privilegedConnect(final String host,\n-                                              final int port,\n-                                              final int timeout)\n-        throws IOException\n-    {\n-        try {\n-            AccessController.doPrivileged(\n-                new java.security.PrivilegedExceptionAction<>() {\n-                    public Void run() throws IOException {\n-                              superConnectServer(host, port, timeout);\n-                              cmdIn = getInputStream();\n-                              cmdOut = getOutputStream();\n-                              return null;\n-                          }\n-                      });\n-        } catch (java.security.PrivilegedActionException pae) {\n-            throw (IOException) pae.getException();\n-        }\n-    }\n-\n-    private void superConnectServer(String host, int port,\n-                                    int timeout) throws IOException {\n-        delegate.connect(new InetSocketAddress(host, port), timeout);\n-    }\n-\n@@ -154,9 +125,2 @@\n-            @SuppressWarnings(\"removal\")\n-            PasswordAuthentication pw =\n-                java.security.AccessController.doPrivileged(\n-                    new java.security.PrivilegedAction<>() {\n-                        public PasswordAuthentication run() {\n-                                return Authenticator.requestPasswordAuthentication(\n-                                       server, addr, serverPort, \"SOCKS5\", \"SOCKS authentication\", null);\n-                            }\n-                        });\n+            PasswordAuthentication pw = Authenticator.requestPasswordAuthentication(\n+                    server, addr, serverPort, \"SOCKS5\", \"SOCKS authentication\", null);\n@@ -253,2 +217,0 @@\n-     * @throws  SecurityException if there is a security manager and it\n-     *                          doesn't allow the connection\n@@ -269,2 +231,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n@@ -273,8 +233,1 @@\n-        if (security != null) {\n-            if (epoint.isUnresolved())\n-                security.checkConnect(epoint.getHostName(),\n-                                      epoint.getPort());\n-            else\n-                security.checkConnect(epoint.getAddress().getHostAddress(),\n-                                      epoint.getPort());\n-        }\n+\n@@ -286,6 +239,1 @@\n-            ProxySelector sel = java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<>() {\n-                    public ProxySelector run() {\n-                            return ProxySelector.getDefault();\n-                        }\n-                    });\n+            ProxySelector sel = ProxySelector.getDefault();\n@@ -340,1 +288,1 @@\n-                    privilegedConnect(server, serverPort, remainingMillis(deadlineMillis));\n+                    delegate.connect(new InetSocketAddress(server, serverPort), remainingMillis(deadlineMillis));\n@@ -364,1 +312,1 @@\n-                privilegedConnect(server, serverPort, remainingMillis(deadlineMillis));\n+                delegate.connect(new InetSocketAddress(server, serverPort), remainingMillis(deadlineMillis));\n@@ -370,3 +318,2 @@\n-        \/\/ cmdIn & cmdOut were initialized during the privilegedConnect() call\n-        BufferedOutputStream out = new BufferedOutputStream(cmdOut, 512);\n-        InputStream in = cmdIn;\n+        BufferedOutputStream out = new BufferedOutputStream(getOutputStream(), 512);\n+        InputStream in = getInputStream();\n","filename":"src\/java.base\/share\/classes\/java\/net\/SocksSocketImpl.java","additions":8,"deletions":61,"binary":false,"changes":69,"status":"modified"}]}