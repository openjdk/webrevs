{"files":[{"patch":"@@ -1501,15 +1501,15 @@\n-\/\/ static bool monitors_on_stack(JavaThread* thread) {\n-\/\/   ContinuationEntry* ce = thread->last_continuation();\n-\/\/   RegisterMap map(thread,\n-\/\/                   RegisterMap::UpdateMap::include,\n-\/\/                   RegisterMap::ProcessFrames::include,\n-\/\/                   RegisterMap::WalkContinuation::skip);\n-\/\/   map.set_include_argument_oops(false);\n-\/\/   for (frame f = thread->last_frame(); Continuation::is_frame_in_continuation(ce, f); f = f.sender(&map)) {\n-\/\/     if ((f.is_interpreted_frame() && ContinuationHelper::InterpretedFrame::is_owning_locks(f)) ||\n-\/\/         (f.is_compiled_frame() && ContinuationHelper::CompiledFrame::is_owning_locks(map.thread(), &map, f))) {\n-\/\/       return true;\n-\/\/     }\n-\/\/   }\n-\/\/   return false;\n-\/\/ }\n+static bool monitors_on_stack(JavaThread* thread) {\n+  ContinuationEntry* ce = thread->last_continuation();\n+  RegisterMap map(thread,\n+                  RegisterMap::UpdateMap::include,\n+                  RegisterMap::ProcessFrames::include,\n+                  RegisterMap::WalkContinuation::skip);\n+  map.set_include_argument_oops(false);\n+  for (frame f = thread->last_frame(); Continuation::is_frame_in_continuation(ce, f); f = f.sender(&map)) {\n+    if ((f.is_interpreted_frame() && ContinuationHelper::InterpretedFrame::is_owning_locks(f)) ||\n+        (f.is_compiled_frame() && ContinuationHelper::CompiledFrame::is_owning_locks(map.thread(), &map, f))) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n@@ -1578,2 +1578,2 @@\n-  \/\/ assert(monitors_on_stack(current) == ((current->held_monitor_count() - current->jni_monitor_count()) > 0),\n-  \/\/        \"Held monitor count and locks on stack invariant: \" INT64_FORMAT \" JNI: \" INT64_FORMAT, (int64_t)current->held_monitor_count(), (int64_t)current->jni_monitor_count());\n+  assert(monitors_on_stack(current) == ((current->held_monitor_count() - current->jni_monitor_count()) > 0),\n+         \"Held monitor count and locks on stack invariant: \" INT64_FORMAT \" JNI: \" INT64_FORMAT, (int64_t)current->held_monitor_count(), (int64_t)current->jni_monitor_count());\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}