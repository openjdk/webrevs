{"files":[{"patch":"@@ -38,1 +38,1 @@\n- * @compile test-classes\/CustomLoadee.java\n+ * @compile test-classes\/ClassFromClasspathApp.java test-classes\/CustomLoadee3.java test-classes\/CustomLoadee3Child.java\n@@ -43,1 +43,2 @@\n-        Files.copy(Path.of(System.getProperty(\"test.classes\"), \"CustomLoadee.class\"), Path.of(\"CustomLoadee.class\"));\n+        final String appJar = JarBuilder.build(\"app\", \"ClassFromClasspathApp\", \"CustomLoadee3\", \"CustomLoadee3Child\");\n+\n@@ -46,1 +47,3 @@\n-            \"CustomLoadee id: 1 super: 0 source: .\",\n+            \"CustomLoadee3 id: 1\",\n+            \"CustomLoadee3 id: 2 super: 0 source: \" + appJar,\n+            \"CustomLoadee3Child id: 3 super: 2 source: \" + appJar\n@@ -50,2 +53,11 @@\n-        final OutputAnalyzer out = TestCommon.testDump(null, classlist, \"-Xlog:cds+class=debug\");\n-        out.shouldContain(\"unreg CustomLoadee\");\n+        TestCommon.testDump(appJar, classlist, \"-Xlog:cds+class=debug\")\n+            .shouldContain(\"app   CustomLoadee3\\n\")\n+            .shouldContain(\"unreg CustomLoadee3\\n\")\n+            .shouldContain(\"unreg CustomLoadee3Child\\n\");\n+\n+        final OutputAnalyzer out = TestCommon.exec(appJar, \"-Xlog:class+load\", \"ClassFromClasspathApp\");\n+        TestCommon.checkExec(\n+            out,\n+            \"CustomLoadee3 source: shared objects file\",\n+            \"CustomLoadee3Child source: shared objects file\"\n+        );\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/ClassFromClasspath.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.nio.file.FileSystems;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+\n+\/**\n+ * See ..\/ClassFromClasspathTest.java for details.\n+ *\/\n+public class ClassFromClasspathApp {\n+    public static void main(String args[]) throws Exception {\n+        Path app = FileSystems.getDefault().getPath(\"app.jar\");\n+        URL[] urls = new URL[] { app.toUri().toURL() };\n+        URLClassLoader cl = new URLClassLoader(urls, \/* parent = *\/ null);\n+\n+        Class<?> cls = cl.loadClass(\"CustomLoadee3Child\");\n+        ClassLoader realCl = cls.getClassLoader();\n+        if (realCl != cl) {\n+            throw new RuntimeException(cls + \" has wrong loader: expected \" + cl + \", got \" + realCl);\n+        }\n+\n+        Class<?> superCls = cls.getSuperclass();\n+        ClassLoader superCl = superCls.getClassLoader();\n+        if (superCl != cl) {\n+            throw new RuntimeException(superCls + \" has wrong loader: expected \" + cl + \", got \" + superCl);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/ClassFromClasspathApp.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -33,8 +33,8 @@\n-  public static void main(String args[]) throws Exception {\n-    Path base = FileSystems.getDefault().getPath(\"base.jar\");\n-    Path sub = FileSystems.getDefault().getPath(\"sub.jar\");\n-    URL[] urls = new URL[] { base.toUri().toURL(), sub.toUri().toURL() };\n-    URLClassLoader cl = new URLClassLoader(urls, \/* parent = *\/ null);\n-    Class<?> cls = cl.loadClass(\"CustomLoadee5Child\");\n-    System.out.println(cls.getName());\n-  }\n+    public static void main(String args[]) throws Exception {\n+        Path base = FileSystems.getDefault().getPath(\"base.jar\");\n+        Path sub = FileSystems.getDefault().getPath(\"sub.jar\");\n+        URL[] urls = new URL[] { base.toUri().toURL(), sub.toUri().toURL() };\n+        URLClassLoader cl = new URLClassLoader(urls, \/* parent = *\/ null);\n+        Class<?> cls = cl.loadClass(\"CustomLoadee5Child\");\n+        System.out.println(cls.getName());\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/DifferentSourcesApp.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}