{"files":[{"patch":"@@ -550,0 +550,2 @@\n+  \/\/ Overshadowing must be checked before the class loading attempt because it\n+  \/\/ may cause class loading errors (JVMS 5.3.5.3-5.3.5.4)\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -450,0 +450,3 @@\n+         * <p>\n+         * If the named class has a registered super class or interface named N there should be no\n+         * unregistered class or interface named N loaded yet.\n@@ -458,1 +461,2 @@\n-            \/\/ 'defineClass()' may cause loading of supertypes of this unregistered class.\n+            \/\/ 'defineClass()' may cause loading of supertypes of this unregistered class by VM\n+            \/\/ calling 'this.loadClass()'.\n@@ -460,2 +464,2 @@\n-            \/\/ For any supertype S named SN the following is ensured by the order of classes in the\n-            \/\/ classlist:\n+            \/\/ For any supertype S named SN specified in the classlist the following is ensured by\n+            \/\/ the CDS implementation:\n@@ -464,3 +468,5 @@\n-            \/\/ - if S is not an unregistered class S must have already been loaded by the system\n-            \/\/   class loader (as an initiating loader) and thus can be found by delegating to it by\n-            \/\/   calling 'this.getParent().loadClass(SN, false)'.\n+            \/\/ - if S is not an unregistered class there should be no unregistered class named SN\n+            \/\/   loaded yet so either S has previously been (indirectly) loaded by this class loader\n+            \/\/   and thus it will be found when calling 'this.findLoadedClass(SN)' or it will be\n+            \/\/   found when delegating to the system class loader, which must have already loaded S,\n+            \/\/   by calling 'this.getParent().loadClass(SN, false)'.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -71,2 +71,3 @@\n-        out.shouldContain(\"app   CustomLoadee3\\n\");\n-        out.shouldContain(\"unreg CustomLoadee3\\n\");\n+        out.shouldContain(\"app   CustomLoadee3\"); \/\/ Not using \\n as below because it'll be \"app   CustomLoadee3 aot-linked\" with AOTClassLinking\n+        out.shouldNotContain(\"app   CustomLoadee3Child\");\n+        out.shouldContain(\"unreg CustomLoadee3\\n\"); \/\/ Accepts \"unreg CustomLoadee3\" but not \"unreg CustomLoadee3Child\"\n@@ -74,1 +75,1 @@\n-            out.shouldNotContain(\"unreg CustomLoadee3Child\\n\");\n+            out.shouldNotContain(\"unreg CustomLoadee3Child\");\n@@ -77,1 +78,1 @@\n-            out.shouldContain(\"unreg CustomLoadee3Child\\n\");\n+            out.shouldContain(\"unreg CustomLoadee3Child\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/RegUnregSuperTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}