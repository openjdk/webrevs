{"files":[{"patch":"@@ -76,0 +76,2 @@\n+    _gc_cpu_time_pause_end_ms(),\n+    _concurrent_gc_cpu_time_ms(),\n@@ -167,1 +169,9 @@\n-  _short_term_pause_time_ratio = pause_time_ms \/ short_interval_ms;\n+\n+  \/\/ This estimates the wall-clock time \"lost\" by application mutator threads due to concurrent GC\n+  \/\/ activity. We do not account for contention on other shared resources such as memory bandwidth and\n+  \/\/ caches, therefore underestimate the impact of the concurrent GC activity on mutator threads.\n+  uint num_cpus = (uint)os::active_processor_count();\n+  num_cpus = MIN2(num_cpus, MAX2(ConcGCThreads, ParallelGCThreads));\n+  double concurrent_gc_impact_time = _concurrent_gc_cpu_time_ms \/ num_cpus;\n+\n+  _short_term_pause_time_ratio = (pause_time_ms + concurrent_gc_impact_time) \/ short_interval_ms;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,3 @@\n-  double        _prev_collection_pause_end_ms;\n+  double       _prev_collection_pause_end_ms;\n+  double       _gc_cpu_time_pause_end_ms;\n+  double       _concurrent_gc_cpu_time_ms;\n@@ -125,0 +127,16 @@\n+  void set_gc_cpu_time_pause_end_ms(double ms) {\n+    _gc_cpu_time_pause_end_ms = ms;\n+  }\n+\n+  double gc_cpu_time_pause_end_ms() const {\n+    return _gc_cpu_time_pause_end_ms;\n+  }\n+\n+  void set_concurrent_gc_cpu_time_ms(double ms) {\n+    _concurrent_gc_cpu_time_ms = ms;\n+  }\n+\n+  double concurrent_gc_cpu_time_ms() const {\n+    return _concurrent_gc_cpu_time_ms;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -674,0 +674,6 @@\n+\n+  double prev_gc_cpu_pause_end_ms = _analytics->gc_cpu_time_pause_end_ms();\n+  double cur_gc_cpu_time_ms = _g1h->elapsed_gc_cpu_time() * MILLIUNITS;\n+\n+  double concurrent_gc_cpu_time_ms = cur_gc_cpu_time_ms - prev_gc_cpu_pause_end_ms;\n+  _analytics->set_concurrent_gc_cpu_time_ms(concurrent_gc_cpu_time_ms);\n@@ -1368,0 +1374,3 @@\n+\n+  double elapsed_gc_cpu_time = _g1h->elapsed_gc_cpu_time() * MILLIUNITS;\n+  _analytics->set_gc_cpu_time_pause_end_ms(elapsed_gc_cpu_time);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}