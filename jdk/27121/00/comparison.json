{"files":[{"patch":"@@ -304,1 +304,1 @@\n-\t    $(JDK_MACOSX_BUNDLE_DIR_SIGNED)\/$(JDK_MACOSX_BUNDLE_TOP_DIR) $(LOG_DEBUG)\n+\t    $(JDK_MACOSX_BUNDLE_DIR_SIGNED)\/$(JDK_MACOSX_BUNDLE_TOP_SUBDIR) $(LOG_DEBUG)\n@@ -333,1 +333,1 @@\n-\t    $(JRE_MACOSX_BUNDLE_DIR_SIGNED)\/$(JRE_MACOSX_BUNDLE_TOP_DIR) $(LOG_DEBUG)\n+\t    $(JRE_MACOSX_BUNDLE_DIR_SIGNED)\/$(JRE_MACOSX_BUNDLE_TOP_SUBDIR) $(LOG_DEBUG)\n","filename":"make\/Bundles.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -901,4 +901,4 @@\n-JDK_MACOSX_BUNDLE_TOP_DIR = jdk-$(VERSION_NUMBER).jdk\n-JRE_MACOSX_BUNDLE_TOP_DIR = jre-$(VERSION_NUMBER).jre\n-JDK_MACOSX_CONTENTS_SUBDIR = $(JDK_MACOSX_BUNDLE_TOP_DIR)\/Contents\n-JRE_MACOSX_CONTENTS_SUBDIR = $(JRE_MACOSX_BUNDLE_TOP_DIR)\/Contents\n+JDK_MACOSX_BUNDLE_TOP_SUBDIR = jdk-$(VERSION_NUMBER).jdk\n+JRE_MACOSX_BUNDLE_TOP_SUBDIR = jre-$(VERSION_NUMBER).jre\n+JDK_MACOSX_CONTENTS_SUBDIR = $(JDK_MACOSX_BUNDLE_TOP_SUBDIR)\/Contents\n+JRE_MACOSX_CONTENTS_SUBDIR = $(JRE_MACOSX_BUNDLE_TOP_SUBDIR)\/Contents\n@@ -907,0 +907,2 @@\n+JDK_MACOSX_BUNDLE_TOP_DIR = $(JDK_MACOSX_BUNDLE_DIR)\/$(JDK_MACOSX_BUNDLE_TOP_SUBDIR)\n+JRE_MACOSX_BUNDLE_TOP_DIR = $(JRE_MACOSX_BUNDLE_DIR)\/$(JRE_MACOSX_BUNDLE_TOP_SUBDIR)\n","filename":"make\/autoconf\/spec.gmk.template","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+#   DRYRUN      : Set to true to perform everything but executing the command \\\n+#                 (defaults to false, primarily intended for debugging)\n@@ -164,2 +166,7 @@\n-\t$$(call ExecuteWithLog, $$($1_BASE)_exec, \\\n-\t    cd $$($1_WORKING_DIR) && $$($1_COMMAND))\n+        ifneq ($$($1_DRYRUN), true)\n+\t  $$(call ExecuteWithLog, $$($1_BASE)_exec, \\\n+\t      cd $$($1_WORKING_DIR) && $$($1_COMMAND))\n+        else\n+\t  $$(call LogWarn, DRYRUN enabled for $1, not actually running command)\n+\t  $$(TOUCH) $$@\n+        endif\n@@ -180,2 +187,7 @@\n-\t$$(call ExecuteWithLog, $$($1_BASE)_exec, \\\n-\t    cd $$($1_WORKING_DIR) && $$($1_COMMAND))\n+        ifneq ($$($1_DRYRUN), true)\n+\t  $$(call ExecuteWithLog, $$($1_BASE)_exec, \\\n+\t      cd $$($1_WORKING_DIR) && $$($1_COMMAND))\n+        else\n+\t  $$(call LogWarn, DRYRUN enabled for $1, not actually running command)\n+\t  $$(TOUCH) $$@\n+        endif\n","filename":"make\/common\/Execute.gmk","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -63,0 +63,20 @@\n+$(eval $(call SetupExecute, EXEC_3, \\\n+    INFO := Testing that SetupExecute with DRYRUN does nothing, \\\n+    OUTPUT_DIR := $(OUTPUT_DIR)\/exec_3, \\\n+    DRYRUN := true, \\\n+    COMMAND := $(ECHO) \"This should not happen\" > $(OUTPUT_DIR)\/exec_3\/dryrunfile, \\\n+))\n+\n+run-test3: $(EXEC_3)\n+\ttest ! -f $(OUTPUT_DIR)\/exec_3\/dryrunfile\n+\n+$(eval $(call SetupExecute, EXEC_4, \\\n+    INFO := Testing that SetupExecute with DRYRUN does nothing but touches output file, \\\n+    OUTPUT_FILE := $(OUTPUT_DIR)\/exec_4\/output, \\\n+    DRYRUN := true, \\\n+    COMMAND := $(ECHO) \"This should not happen\" > $(OUTPUT_DIR)\/exec_4\/dryrunfile, \\\n+))\n+\n+run-test4: $(EXEC_4)\n+\ttest ! -f $(OUTPUT_DIR)\/exec_4\/dryrunfile\n+\ttest -f $(OUTPUT_DIR)\/exec_4\/output\n@@ -64,1 +84,1 @@\n-TEST_TARGETS += run-test1 run-test2\n+TEST_TARGETS += run-test1 run-test2 run-test3 run-test4\n@@ -66,1 +86,1 @@\n-.PHONY: run-test1 run-test2\n+.PHONY: run-test1 run-test2 run-test3 run-test4\n","filename":"test\/make\/TestExecute.gmk","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"}]}