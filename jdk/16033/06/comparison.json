{"files":[{"patch":"@@ -57,0 +57,2 @@\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n@@ -59,0 +61,1 @@\n+import java.time.ZonedDateTime;\n@@ -2053,0 +2056,5 @@\n+    \/\/ Use minus sign from cached DecimalFormatSymbols.\n+    private static char getMinusSign(Locale locale) {\n+        return locale == null ? '-' : getDecimalFormatSymbols(locale).getMinusSign();\n+    }\n+\n@@ -4493,1 +4501,14 @@\n-                    print(fmt, sb, t, DateTime.YEAR_4, l).append(sep);\n+                    ChronoField yearField;\n+                    if (t instanceof ZonedDateTime || t instanceof LocalDateTime || t instanceof LocalDate) {\n+                        yearField = ChronoField.YEAR;\n+                    } else {\n+                        yearField = ChronoField.YEAR_OF_ERA;\n+                    }\n+                    int year = t.get(yearField);\n+                    if (year < 0) {\n+                        sb.append(getMinusSign(l));\n+                        year = -year;\n+                    } else if (year > 9999) {\n+                        sb.append('+');\n+                    }\n+                    sb.append(localizedMagnitude(fmt, null, year, Flags.ZERO_PAD, 4, l)).append(sep);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -37,0 +37,4 @@\n+import java.text.DecimalFormatSymbols;\n+import java.time.LocalDate;\n+import java.time.chrono.*;\n+import java.time.temporal.ChronoField;\n@@ -453,0 +457,37 @@\n+\n+        \/\/ %tF LocalDate\n+        test(\"%tF\", \"2023-01-13\", LocalDate.of(2023, 1, 13));\n+        test(\"%tF\", \"2023-10-03\", LocalDate.of(2023, 10, 3));\n+        test(\"%tF\", \"0001-10-03\", LocalDate.of(1, 10, 3));\n+        test(\"%tF\", \"0012-10-03\", LocalDate.of(12, 10, 3));\n+        test(\"%tF\", \"0123-10-03\", LocalDate.of(123, 10, 3));\n+        test(\"%tF\", \"+12345-10-03\", LocalDate.of(12345, 10, 3));\n+        test(\"%tF\", \"-0001-10-03\", LocalDate.of(-1, 10, 3));\n+        test(\"%tF\", \"-0012-10-03\", LocalDate.of(-12, 10, 3));\n+        test(\"%tF\", \"-0123-10-03\", LocalDate.of(-123, 10, 3));\n+        test(\"%tF\", \"-1234-10-03\", LocalDate.of(-1234, 10, 3));\n+        test(\"%tF\", \"-12345-10-03\", LocalDate.of(-12345, 10, 3));\n+\n+        \/\/ check minusSign\n+        int year = 2023, month = 1, dayOfMonth = 13;\n+        String specifier = \"%tF\";\n+        for (Locale locale : Locale.getAvailableLocales()) {\n+            char minusSign = DecimalFormatSymbols.getInstance(locale).getMinusSign();\n+            String str = new Formatter(new StringBuilder(), locale)\n+                    .format(specifier, LocalDate.of(year, month, dayOfMonth))\n+                    .toString();\n+            test(locale, specifier, minusSign + str, LocalDate.of(-year, month, dayOfMonth));\n+        }\n+\n+        \/\/ ja-JP-u-ca-japanese\n+        ChronoLocalDate jpDate = Chronology\n+                .ofLocale(Locale.forLanguageTag(\"ja-JP-u-ca-japanese\"))\n+                .dateNow();\n+        test(Locale.JAPANESE,\n+                \"%tF\",\n+                String.format(\n+                        \"%04d-%02d-%02d\",\n+                        jpDate.get(ChronoField.YEAR_OF_ERA),\n+                        jpDate.get(ChronoField.MONTH_OF_YEAR),\n+                        jpDate.get(ChronoField.DAY_OF_MONTH)),\n+                now);\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDateTime.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"}]}