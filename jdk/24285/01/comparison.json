{"files":[{"patch":"@@ -784,0 +784,1 @@\n+javax\/swing\/JInternalFrame\/bug4134077.java 8184985 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4130806\n+ * @summary JInternalFrame's setIcon(true) works correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4130806\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import java.beans.PropertyVetoException;\n+\n+public class bug4130806 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        If an icon is visible for the iconified internalframe, the test passes.\n+        Otherwise, the test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4130806 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4130806::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4130806\");\n+        JDesktopPane mDesktop = new JDesktopPane();\n+        frame.add(mDesktop);\n+        frame.pack();\n+        JInternalFrame jif = new JInternalFrame(\"My Frame\");\n+        jif.setIconifiable(true);\n+        mDesktop.add(jif);\n+        jif.setBounds(50,50,100,100);\n+        try {\n+            jif.setIcon(true);\n+        } catch (PropertyVetoException e) {\n+            throw new RuntimeException(\"PropertyVetoException received\");\n+        }\n+        jif.setVisible(true);\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4130806.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4134077\n+ * @requires (os.family == \"windows\")\n+ * @summary Metal,Window:If JInternalFrame's title text is long last must be ellipsis\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4134077\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.ComponentOrientation;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import javax.swing.JButton;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class bug4134077 {\n+\n+    private static JFrame frame;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Try to resize internal frame with diferrent combinations of\n+        LookAndFeels and title pane's buttons and orientation.\n+\n+        The internal frame's title should clip if its too long to\n+        be entierly visible (ends by \"...\")\n+        and window can never be\n+        smaller than the width of the first two letters of the title\n+        plus \"...\".\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4134077 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4134077::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static void setLF(ActionEvent e) {\n+        try {\n+            UIManager.setLookAndFeel(((JButton)e.getSource()).getActionCommand());\n+            SwingUtilities.updateComponentTreeUI(frame);\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | UnsupportedLookAndFeelException\n+                 | IllegalAccessException ex) {\n+             throw new RuntimeException(ex);\n+        }\n+    }\n+\n+    private static JFrame createTestUI() {\n+        frame = new JFrame(\"bug4134077\");\n+        JDesktopPane jdp = new JDesktopPane();\n+        frame.add(jdp);\n+\n+        final JInternalFrame jif =\n+                new JInternalFrame(\"Very Long Title For Internal Frame\", true);\n+        jdp.add(jif);\n+        jif.setSize(150,150);\n+        jif.setLocation(150, 50);\n+        jif.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        jif.setVisible(true);\n+\n+        JPanel p = new JPanel();\n+\n+        JButton metal = new JButton(\"Metal\");\n+        metal.setActionCommand(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        metal.addActionListener((ActionEvent e) -> setLF(e));\n+        p.add(metal);\n+\n+        JButton windows = new JButton(\"Windows\");\n+        windows.setActionCommand(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        windows.addActionListener((ActionEvent e) -> setLF(e));\n+        p.add(windows);\n+\n+        JButton orientation = new JButton(\"Change orientation\");\n+        orientation.addActionListener(e -> {\n+            jif.setComponentOrientation(\n+                jif.getComponentOrientation() == ComponentOrientation.LEFT_TO_RIGHT\n+                    ? ComponentOrientation.RIGHT_TO_LEFT\n+                    : ComponentOrientation.LEFT_TO_RIGHT);\n+        });\n+        p.add(orientation);\n+\n+        JButton clo = new JButton(\"Closable\");\n+        clo.addActionListener(e -> jif.setClosable(!jif.isClosable()));\n+        p.add(clo);\n+\n+        JButton ico = new JButton(\"Iconifiable\");\n+        ico.addActionListener(e -> jif.setIconifiable(!jif.isIconifiable()));\n+        p.add(ico);\n+\n+        JButton max = new JButton(\"Maximizable\");\n+        max.addActionListener(e -> jif.setMaximizable(!jif.isMaximizable()));\n+        p.add(max);\n+\n+        frame.add(p, BorderLayout.SOUTH);\n+        frame.setSize(700, 300);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4134077.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4193070\n+ * @summary Tests correct mouse pointer shape\n+ * @requires (os.family != \"mac\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4193070\n+ *\/\n+\n+import java.awt.Dimension;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+\n+public class bug4193070 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Two internal frame will be shown. Select any internal frame;\n+        Move mouse pointer inside the selected internal frame,\n+            then to border of internal frame.\n+        Mouse pointer should take the shape of resize cursor.\n+        Now slowly move the mouse back inside the internal frame.\n+        If mouse pointer shape does not change back to\n+            normal shape of mouse pointer, then test failed.\n+        Now try fast resizing an internal frame.\n+        Check that mouse pointer always has resize shape,\n+            even when it goes over other internal frame.\n+        If during resizing mouse pointer shape changes,\n+            then test failed. Otherwise test succeded.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4193070 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4193070::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame f = new JFrame(\"bug4193070\");\n+        JDesktopPane dp = new JDesktopPane();\n+\n+        JInternalFrame intFrm1 = new JInternalFrame();\n+        intFrm1.setResizable(true);\n+        dp.add(intFrm1);\n+\n+        JInternalFrame intFrm2 = new JInternalFrame();\n+        intFrm2.setResizable(true);\n+        dp.add(intFrm2);\n+\n+        f.setContentPane(dp);\n+        f.setSize(new Dimension(500, 275));\n+\n+        intFrm1.setBounds(25, 25, 200, 200);\n+        intFrm1.show();\n+\n+        intFrm2.setBounds(275, 25, 200, 200);\n+        intFrm2.show();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4193070.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4225701\n+ * @summary Verifies MetalInternalFrameUI.installKeyboardActions\n+ *          doesn't install listener\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4225701\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+\n+public class bug4225701 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Give a focus to the internal frame \"Frame 4\" and press Ctrl-F4.\n+        The \"Frame 4\" should be closed. Give a focus to the internal\n+        frame \"Frame 1\" and press Ctrl-F4.\n+        If \"Frame 4\" and \"Frame 1\" is not closed, then press Fail else press Pass.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+         PassFailJFrame.builder()\n+                .title(\"bug4225701 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4225701::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        JFrame frame = new JFrame(\"bug4225701\");\n+        JInternalFrame jif1 = new JInternalFrame(\"Frame 1\", true, true, true, true);\n+        JInternalFrame jif2 = new JInternalFrame(\"Frame 2\", false);\n+        JInternalFrame jif3 = new JInternalFrame(\"Frame 3\", false);\n+        JInternalFrame jif4 = new JInternalFrame(\"Frame 4\", true, true, true, true);\n+        JDesktopPane jdp = new JDesktopPane();\n+\n+        frame.setContentPane(jdp);\n+\n+        jdp.add(jif1);\n+        jif1.setBounds(0, 150, 150, 150);\n+        jif1.setVisible(true);\n+\n+        jdp.add(jif2);\n+        jif2.setBounds(100, 100, 150, 150);\n+        jif2.setVisible(true);\n+\n+        jdp.add(jif3);\n+        jif3.setBounds(200, 50, 150, 150);\n+        jif3.setVisible(true);\n+\n+        jdp.add(jif4);\n+        jif4.setBounds(300, 0, 150, 150);\n+        jif4.setVisible(true);\n+\n+        frame.setSize(500, 500);\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4225701.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"}]}