{"files":[{"patch":"@@ -211,0 +211,6 @@\n+#ifdef NOT_PRODUCT\n+          ShenandoahEvacuationTracker* evac_tracker = heap->evac_tracker();\n+          ShenandoahCycleStats         evac_stats   = evac_tracker->flush_cycle_to_global();\n+          evac_tracker->print_evacuations_on(&ls, &evac_stats.workers,\n+                                                  &evac_stats.mutators);\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,0 +33,14 @@\n+ShenandoahEvacuationStats::ShenandoahEvacuations* ShenandoahEvacuationStats::get_category(\n+  ShenandoahAffiliation from,\n+  ShenandoahAffiliation to) {\n+  if (from == YOUNG_GENERATION) {\n+    if (to == YOUNG_GENERATION) {\n+      return &_young;\n+    }\n+    assert(to == OLD_GENERATION, \"If not evacuating to young, must be promotion to old\");\n+    return &_promotion;\n+  }\n+  assert(from == OLD_GENERATION, \"If not evacuating from young, then must be from old\");\n+  return &_old;\n+}\n+\n@@ -34,3 +48,1 @@\n-  : _evacuations_completed(0), _bytes_completed(0),\n-    _evacuations_attempted(0), _bytes_attempted(0),\n-    _use_age_table(ShenandoahGenerationalCensusAtEvac || !ShenandoahGenerationalAdaptiveTenuring),\n+  : _use_age_table(ShenandoahGenerationalCensusAtEvac || !ShenandoahGenerationalAdaptiveTenuring),\n@@ -48,3 +60,5 @@\n-void ShenandoahEvacuationStats::begin_evacuation(size_t bytes) {\n-  ++_evacuations_attempted;\n-  _bytes_attempted += bytes;\n+void ShenandoahEvacuationStats::begin_evacuation(size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+  ShenandoahEvacuations* category = get_category(from, to);\n+  category->_evacuations_attempted++;\n+  category->_bytes_attempted += bytes;\n+\n@@ -53,3 +67,4 @@\n-void ShenandoahEvacuationStats::end_evacuation(size_t bytes) {\n-  ++_evacuations_completed;\n-  _bytes_completed += bytes;\n+void ShenandoahEvacuationStats::end_evacuation(size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+  ShenandoahEvacuations* category = get_category(from, to);\n+  category->_evacuations_completed++;\n+  category->_bytes_completed += bytes;\n@@ -66,4 +81,4 @@\n-  _evacuations_completed += other->_evacuations_completed;\n-  _bytes_completed += other->_bytes_completed;\n-  _evacuations_attempted += other->_evacuations_attempted;\n-  _bytes_attempted += other->_bytes_attempted;\n+  _young.accumulate(other->_young);\n+  _old.accumulate(other->_old);\n+  _promotion.accumulate(other->_promotion);\n+\n@@ -76,2 +91,4 @@\n-  _evacuations_completed = _evacuations_attempted = 0;\n-  _bytes_completed = _bytes_attempted = 0;\n+  _young.reset();\n+  _old.reset();\n+  _promotion.reset();\n+\n@@ -83,2 +100,1 @@\n-void ShenandoahEvacuationStats::print_on(outputStream* st) {\n-#ifndef PRODUCT\n+void ShenandoahEvacuationStats::ShenandoahEvacuations::print_on(outputStream* st) const {\n@@ -87,7 +103,11 @@\n-  st->print_cr(\"Evacuated %zu%s across %zu objects, \"\n-            \"abandoned %zu%s across %zu objects.\",\n-            byte_size_in_proper_unit(_bytes_completed), proper_unit_for_byte_size(_bytes_completed),\n-            _evacuations_completed,\n-            byte_size_in_proper_unit(abandoned_size),   proper_unit_for_byte_size(abandoned_size),\n-            abandoned_count);\n-#endif\n+  st->print_cr(\"Evacuated \" PROPERFMT\" across %zu objects, \"\n+            \"abandoned \" PROPERFMT \" across %zu objects.\",\n+            PROPERFMTARGS(_bytes_completed), _evacuations_completed,\n+            PROPERFMTARGS(abandoned_size), abandoned_count);\n+}\n+\n+void ShenandoahEvacuationStats::print_on(outputStream* st) const {\n+  st->print(\"Young: \"); _young.print_on(st);\n+  st->print(\"Promotion: \"); _promotion.print_on(st);\n+  st->print(\"Old: \"); _old.print_on(st);\n+\n@@ -106,1 +126,1 @@\n-  st->print(\"Workers: \");\n+  st->print_cr(\"Workers: \");\n@@ -109,1 +129,1 @@\n-  st->print(\"Mutators: \");\n+  st->print_cr(\"Mutators: \");\n@@ -163,2 +183,2 @@\n-void ShenandoahEvacuationTracker::begin_evacuation(Thread* thread, size_t bytes) {\n-  ShenandoahThreadLocalData::begin_evacuation(thread, bytes);\n+void ShenandoahEvacuationTracker::begin_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+  ShenandoahThreadLocalData::begin_evacuation(thread, bytes, from, to);\n@@ -167,2 +187,2 @@\n-void ShenandoahEvacuationTracker::end_evacuation(Thread* thread, size_t bytes) {\n-  ShenandoahThreadLocalData::end_evacuation(thread, bytes);\n+void ShenandoahEvacuationTracker::end_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+  ShenandoahThreadLocalData::end_evacuation(thread, bytes, from, to);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacTracker.cpp","additions":50,"deletions":30,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shenandoah\/shenandoahAffiliation.hpp\"\n@@ -33,4 +34,34 @@\n-  size_t _evacuations_completed;\n-  size_t _bytes_completed;\n-  size_t _evacuations_attempted;\n-  size_t _bytes_attempted;\n+  struct ShenandoahEvacuations {\n+    size_t _evacuations_completed;\n+    size_t _bytes_completed;\n+    size_t _evacuations_attempted;\n+    size_t _bytes_attempted;\n+    ShenandoahEvacuations()\n+      : _evacuations_completed(0)\n+      , _bytes_completed(0)\n+      , _evacuations_attempted(0)\n+      , _bytes_attempted(0) {\n+    }\n+\n+    void accumulate(const ShenandoahEvacuations& other) {\n+      _evacuations_completed += other._evacuations_completed;\n+      _bytes_completed += other._bytes_completed;\n+      _evacuations_attempted += other._evacuations_attempted;\n+      _bytes_attempted += other._bytes_attempted;\n+    }\n+\n+    void reset() {\n+      _evacuations_completed = 0;\n+      _bytes_completed = 0;\n+      _evacuations_attempted = 0;\n+      _bytes_attempted = 0;\n+    }\n+\n+    void print_on(outputStream* st) const;\n+  };\n+\n+  ShenandoahEvacuations* get_category(ShenandoahAffiliation from, ShenandoahAffiliation to);\n+\n+  ShenandoahEvacuations _young;\n+  ShenandoahEvacuations _old;\n+  ShenandoahEvacuations _promotion;\n@@ -46,2 +77,5 @@\n-  void begin_evacuation(size_t bytes);\n-  void end_evacuation(size_t bytes);\n+  \/\/ Record that the current thread is attempting to copy this many bytes.\n+  void begin_evacuation(size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to);\n+\n+  \/\/ Record that the current thread has completed copying this many bytes.\n+  void end_evacuation(size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to);\n@@ -50,1 +84,1 @@\n-  void print_on(outputStream* st);\n+  void print_on(outputStream* st) const;\n@@ -69,2 +103,6 @@\n-  void begin_evacuation(Thread* thread, size_t bytes);\n-  void end_evacuation(Thread* thread, size_t bytes);\n+  \/\/ Record that the given thread has begun to evacuate an object of this size.\n+  void begin_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to);\n+\n+  \/\/ Multiple threads may attempt to evacuate the same object, but only the succeeding thread will end the evacuation.\n+  \/\/ Evacuations that were begun, but not ended are considered 'abandoned'.\n+  void end_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacTracker.hpp","additions":47,"deletions":9,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-  _evac_tracker(new ShenandoahEvacuationTracker()),\n@@ -103,12 +102,0 @@\n-void ShenandoahGenerationalHeap::print_tracing_info() const {\n-  ShenandoahHeap::print_tracing_info();\n-\n-  LogTarget(Info, gc, stats) lt;\n-  if (lt.is_enabled()) {\n-    LogStream ls(lt);\n-    ls.cr();\n-    ls.cr();\n-    evac_tracker()->print_global_on(&ls);\n-  }\n-}\n-\n@@ -341,1 +328,1 @@\n-  NOT_PRODUCT(evac_tracker()->begin_evacuation(thread, size * HeapWordSize));\n+  NOT_PRODUCT(evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n@@ -363,1 +350,1 @@\n-    NOT_PRODUCT(evac_tracker()->end_evacuation(thread, size * HeapWordSize));\n+    NOT_PRODUCT(evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  void print_tracing_info() const override;\n@@ -69,2 +68,0 @@\n-  \/\/ Used primarily to look for failed evacuation attempts.\n-  ShenandoahEvacuationTracker*  _evac_tracker;\n@@ -86,3 +83,0 @@\n-  ShenandoahEvacuationTracker* evac_tracker() const {\n-    return _evac_tracker;\n-  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -570,1 +570,2 @@\n-  _collection_set(nullptr)\n+  _collection_set(nullptr),\n+  _evac_tracker(new ShenandoahEvacuationTracker())\n@@ -1355,0 +1356,1 @@\n+  NOT_PRODUCT(evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n@@ -1364,0 +1366,1 @@\n+    NOT_PRODUCT(evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n@@ -1593,0 +1596,7 @@\n+#ifdef NOT_PRODUCT\n+    evac_tracker()->print_global_on(&ls);\n+\n+    ls.cr();\n+    ls.cr();\n+#endif\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -560,0 +560,4 @@\n+  ShenandoahEvacuationTracker* evac_tracker() const {\n+    return _evac_tracker;\n+  }\n+\n@@ -792,0 +796,4 @@\n+protected:\n+  \/\/ Used primarily to look for failed evacuation attempts.\n+  ShenandoahEvacuationTracker*  _evac_tracker;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,4 +47,1 @@\n-  _evacuation_stats(nullptr) {\n-  if (ShenandoahHeap::heap()->mode()->is_generational()) {\n-    _evacuation_stats = new ShenandoahEvacuationStats();\n-  }\n+  _evacuation_stats(new ShenandoahEvacuationStats()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahThreadLocalData.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/shenandoah\/shenandoahAffiliation.hpp\"\n@@ -162,2 +163,2 @@\n-  static void begin_evacuation(Thread* thread, size_t bytes) {\n-    data(thread)->_evacuation_stats->begin_evacuation(bytes);\n+  static void begin_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+    data(thread)->_evacuation_stats->begin_evacuation(bytes, from, to);\n@@ -166,2 +167,2 @@\n-  static void end_evacuation(Thread* thread, size_t bytes) {\n-    data(thread)->_evacuation_stats->end_evacuation(bytes);\n+  static void end_evacuation(Thread* thread, size_t bytes, ShenandoahAffiliation from, ShenandoahAffiliation to) {\n+    data(thread)->_evacuation_stats->end_evacuation(bytes, from, to);\n@@ -175,1 +176,0 @@\n-    shenandoah_assert_generational();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahThreadLocalData.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}