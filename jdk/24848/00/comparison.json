{"files":[{"patch":"@@ -1575,1 +1575,1 @@\n-\/\/ merge_cp_p. The number of entries in *merge_cp_p is returned via\n+\/\/ merge_cp_p. The number of entries in merge_cp_p is returned via\n@@ -1577,2 +1577,2 @@\n-\/\/ in *merge_cp_p. Also creates a map of indices from entries in\n-\/\/ scratch_cp to the corresponding entry in *merge_cp_p. Index map\n+\/\/ in merge_cp_p. Also creates a map of indices from entries in\n+\/\/ scratch_cp to the corresponding entry in merge_cp_p. Index map\n@@ -1580,1 +1580,1 @@\n-\/\/ different location in *merged_cp_p.\n+\/\/ different location in merged_cp_p.\n@@ -1582,2 +1582,2 @@\n-       const constantPoolHandle& scratch_cp, constantPoolHandle *merge_cp_p,\n-       int *merge_cp_length_p, TRAPS) {\n+       const constantPoolHandle& scratch_cp, constantPoolHandle& merge_cp_p,\n+       int& merge_cp_length_p, TRAPS) {\n@@ -1585,8 +1585,0 @@\n-  if (merge_cp_p == nullptr) {\n-    assert(false, \"caller must provide scratch constantPool\");\n-    return false; \/\/ robustness\n-  }\n-  if (merge_cp_length_p == nullptr) {\n-    assert(false, \"caller must provide scratch CP length\");\n-    return false; \/\/ robustness\n-  }\n@@ -1596,1 +1588,1 @@\n-  if ((*merge_cp_p)->length() < old_cp->length()) {\n+  if (merge_cp_p->length() < old_cp->length()) {\n@@ -1624,1 +1616,1 @@\n-        (*merge_cp_p)->temp_unresolved_klass_at_put(old_i,\n+        merge_cp_p->temp_unresolved_klass_at_put(old_i,\n@@ -1630,1 +1622,1 @@\n-        \/\/ just copy the entry to *merge_cp_p, but double and long take\n+        \/\/ just copy the entry to merge_cp_p, but double and long take\n@@ -1632,1 +1624,1 @@\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n+        ConstantPool::copy_entry_to(old_cp, old_i, merge_cp_p, old_i);\n@@ -1637,2 +1629,2 @@\n-        \/\/ just copy the entry to *merge_cp_p\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n+        \/\/ just copy the entry to merge_cp_p\n+        ConstantPool::copy_entry_to(old_cp, old_i, merge_cp_p, old_i);\n@@ -1643,2 +1635,2 @@\n-    ConstantPool::copy_operands(old_cp, *merge_cp_p, CHECK_false);\n-    (*merge_cp_p)->extend_operands(scratch_cp, CHECK_false);\n+    ConstantPool::copy_operands(old_cp, merge_cp_p, CHECK_false);\n+    merge_cp_p->extend_operands(scratch_cp, CHECK_false);\n@@ -1648,1 +1640,1 @@\n-    (*merge_cp_length_p) = old_i;\n+    merge_cp_length_p = old_i;\n@@ -1653,1 +1645,1 @@\n-  log_debug(redefine, class, constantpool)(\"after pass 0: merge_cp_len=%d\", *merge_cp_length_p);\n+  log_debug(redefine, class, constantpool)(\"after pass 0: merge_cp_len=%d\", merge_cp_length_p);\n@@ -1677,1 +1669,1 @@\n-      bool match = scratch_cp->compare_entry_to(scratch_i, *merge_cp_p, scratch_i);\n+      bool match = scratch_cp->compare_entry_to(scratch_i, merge_cp_p, scratch_i);\n@@ -1683,1 +1675,1 @@\n-      int found_i = scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n+      int found_i = scratch_cp->find_matching_entry(scratch_i, merge_cp_p);\n@@ -1695,2 +1687,2 @@\n-      \/\/ referenced entries to *merge_cp_p.\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n+      \/\/ referenced entries to merge_cp_p.\n+      append_entry(scratch_cp, scratch_i, &merge_cp_p, &merge_cp_length_p);\n@@ -1702,1 +1694,1 @@\n-     *merge_cp_length_p, scratch_i, _index_map_count);\n+     merge_cp_length_p, scratch_i, _index_map_count);\n@@ -1724,1 +1716,1 @@\n-        scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n+        scratch_cp->find_matching_entry(scratch_i, merge_cp_p);\n@@ -1726,1 +1718,1 @@\n-        \/\/ Found a matching entry somewhere else in *merge_cp_p so\n+        \/\/ Found a matching entry somewhere else in merge_cp_p so\n@@ -1733,2 +1725,2 @@\n-      \/\/ referenced entries to *merge_cp_p.\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n+      \/\/ referenced entries to merge_cp_p.\n+      append_entry(scratch_cp, scratch_i, &merge_cp_p, &merge_cp_length_p);\n@@ -1739,1 +1731,1 @@\n-       *merge_cp_length_p, scratch_i, _index_map_count);\n+       merge_cp_length_p, scratch_i, _index_map_count);\n@@ -1741,1 +1733,1 @@\n-  finalize_operands_merge(*merge_cp_p, CHECK_false);\n+  finalize_operands_merge(merge_cp_p, CHECK_false);\n@@ -1818,2 +1810,2 @@\n-  bool result = merge_constant_pools(old_cp, scratch_cp, &merge_cp,\n-                  &merge_cp_length, THREAD);\n+  bool result = merge_constant_pools(old_cp, scratch_cp, merge_cp,\n+                  merge_cp_length, THREAD);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":29,"deletions":37,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -444,2 +444,2 @@\n-    const constantPoolHandle& scratch_cp, constantPoolHandle *merge_cp_p,\n-    int *merge_cp_length_p, TRAPS);\n+    const constantPoolHandle& scratch_cp, constantPoolHandle& merge_cp_p,\n+    int& merge_cp_length_p, TRAPS);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}