{"files":[{"patch":"@@ -99,1 +99,0 @@\n-    private final Log log;\n@@ -153,1 +152,0 @@\n-        log = Log.instance(context);\n@@ -160,1 +158,0 @@\n-        this.log = other.log;\n@@ -397,1 +394,1 @@\n-    public void logIfEnabled(DiagnosticPosition pos, LintWarning warning) {\n+    public void logIfEnabled(Log log, DiagnosticPosition pos, LintWarning warning) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1943,1 +1943,1 @@\n-            env.info.lint.logIfEnabled(tree.pos(), LintWarnings.AttemptToSynchronizeOnInstanceOfValueBasedClass);\n+            env.info.lint.logIfEnabled(log, tree.pos(), LintWarnings.AttemptToSynchronizeOnInstanceOfValueBasedClass);\n@@ -2050,1 +2050,1 @@\n-                env.info.lint.logIfEnabled(pos, LintWarnings.TryResourceThrowsInterruptedExc(resource));\n+                env.info.lint.logIfEnabled(log, pos, LintWarnings.TryResourceThrowsInterruptedExc(resource));\n@@ -4445,1 +4445,1 @@\n-            env.info.lint.logIfEnabled(tree, LintWarnings.TryExplicitCloseCall);\n+            env.info.lint.logIfEnabled(log, tree, LintWarnings.TryExplicitCloseCall);\n@@ -4472,1 +4472,1 @@\n-                chk.lint.logIfEnabled(tree, LintWarnings.StaticNotQualifiedByType(sym.kind.kindName(), sym.owner));\n+                chk.lint.logIfEnabled(log, tree, LintWarnings.StaticNotQualifiedByType(sym.kind.kindName(), sym.owner));\n@@ -4474,1 +4474,1 @@\n-                chk.lint.logIfEnabled(tree, LintWarnings.StaticNotQualifiedByType2(sym.kind.kindName()));\n+                chk.lint.logIfEnabled(log, tree, LintWarnings.StaticNotQualifiedByType2(sym.kind.kindName()));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-import com.sun.tools.javac.util.JCDiagnostic.Warning;\n@@ -289,1 +288,1 @@\n-        lint.logIfEnabled(pos, LintWarnings.RestrictedMethod(sym.enclClass(), sym));\n+        lint.logIfEnabled(log, pos, LintWarnings.RestrictedMethod(sym.enclClass(), sym));\n@@ -653,1 +652,1 @@\n-                lint.logIfEnabled(tree.pos(), LintWarnings.RedundantCast(tree.clazz.type));\n+                lint.logIfEnabled(log, tree.pos(), LintWarnings.RedundantCast(tree.clazz.type));\n@@ -958,1 +957,1 @@\n-            lint.logIfEnabled(tree, LintWarnings.VarargsRedundantTrustmeAnno(\n+            lint.logIfEnabled(log, tree, LintWarnings.VarargsRedundantTrustmeAnno(\n@@ -1327,3 +1326,1 @@\n-            deferredLintHandler.report(_ -> {\n-                                           lint.logIfEnabled(pos, LintWarnings.Strictfp);\n-                                       });\n+            deferredLintHandler.report(_ -> lint.logIfEnabled(log, pos, LintWarnings.Strictfp));\n@@ -1548,1 +1545,1 @@\n-            lint.logIfEnabled(tree.pos(), LintWarnings.RawClassUse(tree.type, tree.type.tsym.type));\n+            lint.logIfEnabled(log, tree.pos(), LintWarnings.RawClassUse(tree.type, tree.type.tsym.type));\n@@ -1872,1 +1869,1 @@\n-            lint.logIfEnabled(TreeInfo.diagnosticPositionFor(m, tree),\n+            lint.logIfEnabled(log, TreeInfo.diagnosticPositionFor(m, tree),\n@@ -4096,1 +4093,1 @@\n-                deferredLintHandler.report(_ -> lint.logIfEnabled(pos, LintWarnings.DivZero));\n+                deferredLintHandler.report(_ -> lint.logIfEnabled(log, pos, LintWarnings.DivZero));\n@@ -4109,3 +4106,2 @@\n-            deferredLintHandler.report(_ -> {\n-                lint.logIfEnabled(pos, LintWarnings.PossibleLossOfPrecision(found, req));\n-            });\n+            deferredLintHandler.report(_ ->\n+                lint.logIfEnabled(log, pos, LintWarnings.PossibleLossOfPrecision(found, req)));\n@@ -4120,1 +4116,1 @@\n-            lint.logIfEnabled(tree.thenpart.pos(), LintWarnings.EmptyIf);\n+            lint.logIfEnabled(log, tree.thenpart.pos(), LintWarnings.EmptyIf);\n@@ -4267,1 +4263,1 @@\n-            lint.logIfEnabled(pos,\n+            lint.logIfEnabled(log, pos,\n@@ -4310,3 +4306,2 @@\n-                            deferredLintHandler.report(_ -> {\n-                                lint.logIfEnabled(pos, LintWarnings.MissingExplicitCtor(c, pkg, modle));\n-                            });\n+                            deferredLintHandler.report(_ ->\n+                                lint.logIfEnabled(log, pos, LintWarnings.MissingExplicitCtor(c, pkg, modle)));\n@@ -4348,1 +4343,1 @@\n-                        Check.this.lint.logIfEnabled(pos(), LintWarnings.VarargsUnsafeUseVarargsParam(method.params.last()));\n+                        Check.this.lint.logIfEnabled(log, pos(), LintWarnings.VarargsUnsafeUseVarargsParam(method.params.last()));\n@@ -4646,3 +4641,2 @@\n-            deferredLintHandler.report(_ -> {\n-                lint.logIfEnabled(pos, LintWarnings.ModuleNotFound(msym));\n-            });\n+            deferredLintHandler.report(_ ->\n+                lint.logIfEnabled(log, pos, LintWarnings.ModuleNotFound(msym)));\n@@ -4655,3 +4649,2 @@\n-            deferredLintHandler.report(_ -> {\n-                lint.logIfEnabled(pos, LintWarnings.PackageEmptyOrNotFound(packge));\n-            });\n+            deferredLintHandler.report(_ ->\n+                lint.logIfEnabled(log, pos, LintWarnings.PackageEmptyOrNotFound(packge)));\n@@ -4667,1 +4660,1 @@\n-                    lint.logIfEnabled(pos, LintWarnings.RequiresAutomatic);\n+                    lint.logIfEnabled(log, pos, LintWarnings.RequiresAutomatic);\n@@ -4965,1 +4958,1 @@\n-                log.warning(p.pos(), Warnings.MissingSVUID(c));\n+                log.warning(p.pos(), LintWarnings.MissingSVUID(c));\n@@ -4994,1 +4987,1 @@\n-                                                Warnings.NonSerializableInstanceField);\n+                                                LintWarnings.NonSerializableInstanceField);\n@@ -5005,1 +4998,1 @@\n-                                                    Warnings.NonSerializableInstanceFieldArray(elementType));\n+                                                    LintWarnings.NonSerializableInstanceFieldArray(elementType));\n@@ -5089,1 +5082,1 @@\n-                            Warnings.ExternalizableMissingPublicNoArgCtor);\n+                            LintWarnings.ExternalizableMissingPublicNoArgCtor);\n@@ -5117,1 +5110,1 @@\n-                                                Warnings.SerializableMissingAccessNoArgCtor(supertype.getQualifiedName()));\n+                                                LintWarnings.SerializableMissingAccessNoArgCtor(supertype.getQualifiedName()));\n@@ -5137,1 +5130,1 @@\n-                             Warnings.ImproperSVUID((Symbol)e));\n+                             LintWarnings.ImproperSVUID((Symbol)e));\n@@ -5144,1 +5137,1 @@\n-                             Warnings.LongSVUID((Symbol)e));\n+                             LintWarnings.LongSVUID((Symbol)e));\n@@ -5150,1 +5143,1 @@\n-                             Warnings.ConstantSVUID((Symbol)e));\n+                             LintWarnings.ConstantSVUID((Symbol)e));\n@@ -5159,1 +5152,1 @@\n-                             Warnings.ImproperSPF);\n+                             LintWarnings.ImproperSPF);\n@@ -5165,1 +5158,1 @@\n-                             Warnings.OSFArraySPF);\n+                             LintWarnings.OSFArraySPF);\n@@ -5171,1 +5164,1 @@\n-                            Warnings.IneffectualSerialFieldExternalizable);\n+                            LintWarnings.IneffectualSerialFieldExternalizable);\n@@ -5182,1 +5175,1 @@\n-                                 Warnings.SPFNullInit);\n+                                 LintWarnings.SPFNullInit);\n@@ -5262,1 +5255,1 @@\n-                            Warnings.IneffectualExternalizableMethodRecord(method.getSimpleName().toString()));\n+                            LintWarnings.IneffectualExternalizableMethodRecord(method.getSimpleName().toString()));\n@@ -5302,1 +5295,1 @@\n-                                        Warnings.IneffectualSerialFieldEnum(name));\n+                                        LintWarnings.IneffectualSerialFieldEnum(name));\n@@ -5311,1 +5304,1 @@\n-                                        Warnings.IneffectualSerialMethodEnum(name));\n+                                        LintWarnings.IneffectualSerialMethodEnum(name));\n@@ -5351,1 +5344,1 @@\n-                            Warnings.IneffectualExternMethodEnum(method.getSimpleName().toString()));\n+                            LintWarnings.IneffectualExternMethodEnum(method.getSimpleName().toString()));\n@@ -5383,1 +5376,1 @@\n-                                        Warnings.IneffectualSerialFieldInterface);\n+                                        LintWarnings.IneffectualSerialFieldInterface);\n@@ -5423,1 +5416,1 @@\n-                            Warnings.NonPrivateMethodWeakerAccess);\n+                            LintWarnings.NonPrivateMethodWeakerAccess);\n@@ -5433,1 +5426,1 @@\n-                            Warnings.DefaultIneffective);\n+                            LintWarnings.DefaultIneffective);\n@@ -5480,1 +5473,1 @@\n-                                        Warnings.IneffectualSerialFieldRecord);\n+                                        LintWarnings.IneffectualSerialFieldRecord);\n@@ -5504,1 +5497,1 @@\n-                                            Warnings.IneffectualSerialMethodRecord(name));\n+                                            LintWarnings.IneffectualSerialMethodRecord(name));\n@@ -5589,1 +5582,1 @@\n-                            Warnings.IneffectualSerialMethodExternalizable(method.getSimpleName()));\n+                            LintWarnings.IneffectualSerialMethodExternalizable(method.getSimpleName()));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":41,"deletions":48,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -728,1 +728,1 @@\n-                    lint.logIfEnabled(l.tail.head.pos(),\n+                    lint.logIfEnabled(log, l.tail.head.pos(),\n@@ -1236,1 +1236,1 @@\n-                    lint.logIfEnabled(TreeInfo.diagEndPos(tree.finalizer),\n+                    lint.logIfEnabled(log, TreeInfo.diagEndPos(tree.finalizer),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -528,1 +528,1 @@\n-            log.warning(LintWarnings.OutputFileClash(path)); \/\/ @@@: shouldn't we check for suppression?\n+            log.warning(LintWarnings.OutputFileClash(path));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/BaseFileManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1882,0 +1882,1 @@\n+# lint: serial\n@@ -1971,0 +1972,1 @@\n+# lint: serial\n@@ -1974,0 +1976,1 @@\n+# lint: serial\n@@ -1977,0 +1980,1 @@\n+# lint: serial\n@@ -1999,0 +2003,1 @@\n+# lint: serial\n@@ -2002,0 +2007,1 @@\n+# lint: serial\n@@ -2006,0 +2012,1 @@\n+# lint: serial\n@@ -2010,0 +2017,1 @@\n+# lint: serial\n@@ -2054,0 +2062,1 @@\n+# lint: serial\n@@ -2058,0 +2067,1 @@\n+# lint: serial\n@@ -2062,0 +2072,1 @@\n+# lint: serial\n@@ -2066,0 +2077,1 @@\n+# lint: serial\n@@ -2069,0 +2081,1 @@\n+# lint: serial\n@@ -2073,0 +2086,1 @@\n+# lint: serial\n@@ -2077,0 +2091,1 @@\n+# lint: serial\n@@ -2081,0 +2096,1 @@\n+# lint: serial\n@@ -2084,0 +2100,1 @@\n+# lint: serial\n@@ -2087,0 +2104,1 @@\n+# lint: serial\n@@ -2090,0 +2108,1 @@\n+# lint: serial\n@@ -2094,0 +2113,1 @@\n+# lint: serial\n@@ -2097,0 +2117,1 @@\n+# lint: serial\n@@ -2101,0 +2122,1 @@\n+# lint: serial\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}