{"files":[{"patch":"@@ -816,2 +816,1 @@\n-      if (_nmethod_entry_patch_offset != -1) {\n-        BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n+      BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n@@ -819,5 +818,4 @@\n-        \/\/ an empty error buffer for use by the verify_barrier code\n-        err_msg msg(\"\");\n-        if (!bs_nm->verify_barrier(nm, msg)) {\n-          JVMCI_THROW_MSG_(IllegalArgumentException, err_msg(\"nmethod entry barrier is malformed: %s\", msg.buffer()), JVMCI::ok);\n-        }\n+      \/\/ an empty error buffer for use by the verify_barrier code\n+      err_msg msg(\"\");\n+      if (!bs_nm->verify_barrier(nm, msg)) {\n+        JVMCI_THROW_MSG_(IllegalArgumentException, err_msg(\"nmethod entry barrier is malformed: %s\", msg.buffer()), JVMCI::ok);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -508,1 +508,1 @@\n-        Register target = emitLoadLong(addr);\n+        Register target = emitLoadLong(AMD64.rax, addr);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/amd64\/AMD64TestAssembler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}