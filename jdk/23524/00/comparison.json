{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Feb 2025\n@@ -673,1 +673,4 @@\n-            throw new EOFException();\n+            fErrorReporter.reportError(XMLMessageFormatter.XML_DOMAIN,\n+                    \"PrematureEOF\",\n+                    new Object[]{ name },\n+                    XMLErrorReporter.SEVERITY_FATAL_ERROR);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLDTDScannerImpl.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Feb 2025\n@@ -1228,1 +1228,0 @@\n-                e.printStackTrace();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLDocumentScannerImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package stream.XMLStreamReaderTest;\n+\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.StringReader;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+\/*\n+ * @test\n+ * @bug 8327378\n+ * @summary Verifies exception handling\n+ * @library \/javax\/xml\/jaxp\/libs \/javax\/xml\/jaxp\/unittest\n+ * @run junit stream.XMLStreamReaderTest.ExceptionTest\n+ *\/\n+public class ExceptionTest {\n+\n+    \/**\n+     * Verifies that the XMLStreamReader throws XMLStreamException instead of EOFException.\n+     * The specification for the XMLStreamReader's next method:\n+     * Throws: XMLStreamException - if there is an error processing the underlying XML source\n+     * @throws Exception if the test fails\n+     *\/\n+    @Test\n+    public void testExpectedException() throws Exception {\n+        XMLInputFactory xmlInputFactory = XMLInputFactory.newDefaultFactory();\n+        XMLStreamReader xmlStreamReader = xmlInputFactory.createXMLStreamReader(\n+                new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY\"));\n+\n+        assertThrows(XMLStreamException.class, () -> {\n+            while (xmlStreamReader.hasNext()) {\n+                int event = xmlStreamReader.next();\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/stream\/XMLStreamReaderTest\/ExceptionTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}