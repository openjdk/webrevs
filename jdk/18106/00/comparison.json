{"files":[{"patch":"@@ -94,0 +94,47 @@\n+\n+NATIVE_ACCESS_MODULES= \\\n+    java.base \\\n+    java.datatransfer \\\n+    java.desktop \\\n+    java.instrument \\\n+    java.logging \\\n+    java.management \\\n+    java.management.rmi \\\n+    java.naming \\\n+    java.net.http \\\n+    java.prefs \\\n+    java.rmi \\\n+    java.scripting \\\n+    java.se \\\n+    java.security.jgss \\\n+    java.security.sasl \\\n+    java.smartcardio \\\n+    java.sql \\\n+    java.sql.rowset \\\n+    java.transaction.xa \\\n+    java.xml \\\n+    java.xml.crypto \\\n+    jdk.accessibility \\\n+    jdk.charsets \\\n+    jdk.crypto.cryptoki \\\n+    jdk.dynalink \\\n+    jdk.httpserver \\\n+    jdk.incubator.vector \\\n+    jdk.internal.vm.ci \\\n+    jdk.jfr \\\n+    jdk.jsobject \\\n+    jdk.localedata \\\n+    jdk.management \\\n+    jdk.management.agent \\\n+    jdk.management.jfr \\\n+    jdk.naming.dns \\\n+    jdk.naming.rmi \\\n+    jdk.net \\\n+    jdk.nio.mapmode \\\n+    jdk.sctp \\\n+    jdk.security.auth \\\n+    jdk.security.jgss \\\n+    jdk.unsupported \\\n+    jdk.xml.dom \\\n+    jdk.zipfs \\\n+    #\n","filename":"make\/conf\/module-loader-map.conf","additions":47,"deletions":0,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+        Stream<String> nativeAccessModules = Stream.empty();\n@@ -63,0 +64,3 @@\n+                } else if (option.equals(\"-native-access\")) {\n+                    String[] mns = arg.split(\",\");\n+                    nativeAccessModules = Stream.concat(nativeAccessModules, Arrays.stream(mns));\n@@ -87,0 +91,2 @@\n+                } else if (line.contains(\"@@NATIVE_ACCESS_MODULE_NAMES@@\")) {\n+                    line = patch(line, \"@@NATIVE_ACCESS_MODULE_NAMES@@\", nativeAccessModules);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/module\/GenModuleLoaderMap.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+NATIVE_ACCESS_MODULES_LIST := $(call SubstComma, $(NATIVE_ACCESS_MODULES))\n@@ -41,1 +42,1 @@\n-VARDEPS_VALUE := $(BOOT_MODULES_LIST) $(PLATFORM_MODULES_LIST)\n+VARDEPS_VALUE := $(BOOT_MODULES_LIST) $(PLATFORM_MODULES_LIST) $(NATIVE_ACCESS_MODULES_LIST)\n@@ -52,1 +53,3 @@\n-\t     -platform $(PLATFORM_MODULES_LIST) -o $@.tmp $<\n+\t     -platform $(PLATFORM_MODULES_LIST) \\\n+\t     -native-access $(NATIVE_ACCESS_MODULES_LIST) \\\n+\t     -o $@.tmp $<\n","filename":"make\/modules\/java.base\/gensrc\/GensrcModuleLoaderMap.gmk","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -146,4 +146,0 @@\n-        if (loader == null || loader == ClassLoaders.platformClassLoader()) {\n-            \/\/ boot\/builtin modules are always native\n-            implAddEnableNativeAccess();\n-        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -884,0 +884,13 @@\n+    \/**\n+     * Returns the module with the given name in this later only.\n+     *\n+     * @param  name\n+     *         The name of the module to find\n+     *\n+     * @return The module with the given name or {@code null}\n+     *         if there isn't a module with this name in this layer\n+     *\/\n+    Module findModuleInThisLayer(String name) {\n+        return nameToModule.get(name);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ModuleLayer.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2462,0 +2462,9 @@\n+            public boolean addEnableNativeAccess(ModuleLayer layer, String name) {\n+                Module m = layer.findModuleInThisLayer(name);\n+                if (m != null) {\n+                    m.implAddEnableNativeAccess();\n+                    return true;\n+                } else {\n+                    return false;\n+                }\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -272,0 +272,6 @@\n+    \/**\n+     * Updates module named name in layer layer to allow access to restricted methods.\n+     * Returns true iff the given module exists in the given layer.\n+     *\/\n+    boolean addEnableNativeAccess(ModuleLayer layer, String name);\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -791,1 +791,2 @@\n-    private static final Set<String> NATIVE_ACCESS_MODULES;\n+    private static final Set<String> USER_NATIVE_ACCESS_MODULES;\n+    private static final Set<String> JDK_NATIVE_ACCESS_MODULES;\n@@ -798,2 +799,3 @@\n-        NATIVE_ACCESS_MODULES = decodeEnableNativeAccess();\n-        HAS_ENABLE_NATIVE_ACCESS_FLAG = !NATIVE_ACCESS_MODULES.isEmpty();\n+        USER_NATIVE_ACCESS_MODULES = decodeEnableNativeAccess();\n+        HAS_ENABLE_NATIVE_ACCESS_FLAG = !USER_NATIVE_ACCESS_MODULES.isEmpty();\n+        JDK_NATIVE_ACCESS_MODULES = ModuleLoaderMap.nativeAccessModules();\n@@ -804,0 +806,1 @@\n+     * Also add Enable native access from JDK modules.\n@@ -806,1 +809,6 @@\n-        for (String name : NATIVE_ACCESS_MODULES) {\n+        addEnableNativeAccess(layer, USER_NATIVE_ACCESS_MODULES, true);\n+        addEnableNativeAccess(layer, JDK_NATIVE_ACCESS_MODULES, false);\n+    }\n+\n+    private static void addEnableNativeAccess(ModuleLayer layer, Set<String> moduleNames, boolean shouldWarn) {\n+        for (String name : moduleNames) {\n@@ -809,7 +817,2 @@\n-            } else {\n-                Optional<Module> module = layer.findModule(name);\n-                if (module.isPresent()) {\n-                    JLA.addEnableNativeAccess(module.get());\n-                } else {\n-                    warnUnknownModule(ENABLE_NATIVE_ACCESS, name);\n-                }\n+            } else if (!JLA.addEnableNativeAccess(layer, name) && shouldWarn) {\n+                warnUnknownModule(ENABLE_NATIVE_ACCESS, name);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleBootstrap.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -113,0 +113,7 @@\n+    \/**\n+     * Returns the names of the modules defined to the application loader which perform native access.\n+     *\/\n+    public static Set<String> nativeAccessModules() {\n+        return Modules.nativeAccessModules;\n+    }\n+\n@@ -121,0 +128,4 @@\n+\n+        \/\/ list of jdk modules is generated at build time.\n+        private static final Set<String> nativeAccessModules =\n+                Set.of(new String[] { \"@@NATIVE_ACCESS_MODULE_NAMES@@\" });\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleLoaderMap.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}