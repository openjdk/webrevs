{"files":[{"patch":"@@ -387,10 +387,1 @@\n-    private static final Supplier<ThreadTracker> TRACKER = StableValue.supplier(\n-            new Supplier<>() { public ThreadTracker get() { return new ThreadTracker(); }});\n-\n-    private static Object tryBeginLookup() {\n-        return TRACKER.get().tryBegin();\n-    }\n-\n-    private static void endLookup(Object key) {\n-        TRACKER.get().end(key);\n-    }\n+    private static final ScopedValue<Boolean> IN_LOOKUP = ScopedValue.newInstance();\n@@ -411,2 +402,1 @@\n-        Object key = tryBeginLookup();\n-        if (key == null) {\n+        if (IN_LOOKUP.isBound()) {\n@@ -417,9 +407,17 @@\n-            for (Iterator<CharsetProvider> i = providers(); i.hasNext();) {\n-                CharsetProvider cp = i.next();\n-                Charset cs = cp.charsetForName(charsetName);\n-                if (cs != null)\n-                    return cs;\n-            }\n-            return null;\n-        } finally {\n-            endLookup(key);\n+            return ScopedValue.where(IN_LOOKUP, true).call(\n+                    new ScopedValue.CallableOp<Charset, Exception>() {\n+                        @Override\n+                        public Charset call() {\n+                            for (Iterator<CharsetProvider> i = providers(); i.hasNext(); ) {\n+                                CharsetProvider cp = i.next();\n+                                Charset cs = cp.charsetForName(charsetName);\n+                                if (cs != null)\n+                                    return cs;\n+                            }\n+                            return null;\n+                        }\n+                    }\n+            );\n+        } catch (Exception t) {\n+            \/\/ Should not happen\n+            throw new RuntimeException(t);\n@@ -427,0 +425,1 @@\n+\n@@ -625,3 +624,5 @@\n-        return Objects.requireNonNullElse(\n-                standardProvider.charsetForName(StaticProperty.fileEncoding()),\n-                sun.nio.cs.UTF_8.INSTANCE);\n+        \/\/ do not look for providers other than the standard one\n+        final Charset cs = standardProvider.charsetForName(StaticProperty.fileEncoding());\n+        return (cs == null)\n+                ? sun.nio.cs.UTF_8.INSTANCE\n+                : cs;\n@@ -656,1 +657,1 @@\n-    private final String name;          \/\/ tickles a bug in oldjavac\n+    private final String name;\n@@ -658,1 +659,1 @@\n-    private final String[] aliases;     \/\/ tickles a bug in oldjavac\n+    private final String[] aliases;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":27,"deletions":26,"binary":false,"changes":53,"status":"modified"}]}