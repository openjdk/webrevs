{"files":[{"patch":"@@ -31,1 +31,0 @@\n-import java.io.InputStream;\n@@ -35,2 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -52,6 +49,2 @@\n-        try (@SuppressWarnings(\"removal\") DataInputStream dis = new DataInputStream(new InflaterInputStream(\n-            AccessController.doPrivileged(new PrivilegedAction<>() {\n-                public InputStream run() {\n-                    return getClass().getResourceAsStream(\"uniName.dat\");\n-                }\n-            })))) {\n+        try (DataInputStream dis = new DataInputStream(\n+                new InflaterInputStream(getClass().getResourceAsStream(\"uniName.dat\")))) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/CharacterName.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.PrivilegedAction;\n-import java.security.AccessController;\n@@ -121,16 +119,11 @@\n-        AccessController.doPrivileged(\n-            new PrivilegedAction<>() {\n-                public Void run() {\n-                    ThreadGroup tg = Thread.currentThread().getThreadGroup();\n-                    for (ThreadGroup tgn = tg;\n-                         tgn != null;\n-                         tg = tgn, tgn = tg.getParent());\n-                    Thread sft = new Thread(tg, proc, \"Secondary finalizer\", 0, false);\n-                    sft.start();\n-                    try {\n-                        sft.join();\n-                    } catch (InterruptedException x) {\n-                        Thread.currentThread().interrupt();\n-                    }\n-                    return null;\n-                }});\n+        ThreadGroup tg = Thread.currentThread().getThreadGroup();\n+        for (ThreadGroup tgn = tg;\n+             tgn != null;\n+             tg = tgn, tgn = tg.getParent());\n+        Thread sft = new Thread(tg, proc, \"Secondary finalizer\", 0, false);\n+        sft.start();\n+        try {\n+            sft.join();\n+        } catch (InterruptedException x) {\n+            Thread.currentThread().interrupt();\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Finalizer.java","additions":11,"deletions":18,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -84,5 +82,1 @@\n-        try (@SuppressWarnings(\"removal\") InputStream is = AccessController.doPrivileged(new PrivilegedAction<InputStream>() {\n-                public InputStream run() {\n-                    return root.getResourceAsStream(itemPath);\n-                }\n-            })) {\n+        try (InputStream is = root.getResourceAsStream(itemPath)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/ICUBinary.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,1 @@\n-            PrivilegedExceptionAction<Lookup> pae = () ->\n-                MethodHandles.privateLookupIn(MapMode.class, MethodHandles.lookup());\n-            @SuppressWarnings(\"removal\")\n-            Lookup lookup = AccessController.doPrivileged(pae);\n+            Lookup lookup = MethodHandles.privateLookupIn(MapMode.class, MethodHandles.lookup());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/ExtendedMapMode.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}