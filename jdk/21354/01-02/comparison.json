{"files":[{"patch":"@@ -238,1 +238,1 @@\n-      return b >= Tier3BackEdgeThreshold * scale;\n+      return b >= (double)Tier3BackEdgeThreshold * scale;\n@@ -240,1 +240,1 @@\n-      return b >= Tier4BackEdgeThreshold * scale;\n+      return b >= (double)Tier4BackEdgeThreshold * scale;\n@@ -276,2 +276,2 @@\n-      return (i >= Tier3InvocationThreshold * scale) ||\n-             (i >= Tier3MinInvocationThreshold * scale && i + b >= Tier3CompileThreshold * scale);\n+      return (i >= (double)Tier3InvocationThreshold * scale) ||\n+             (i >= (double)Tier3MinInvocationThreshold * scale && i + b >= (double)Tier3CompileThreshold * scale);\n@@ -279,2 +279,2 @@\n-      return (i >= Tier4InvocationThreshold * scale) ||\n-             (i >= Tier4MinInvocationThreshold * scale && i + b >= Tier4CompileThreshold * scale);\n+      return (i >= (double)Tier4InvocationThreshold * scale) ||\n+             (i >= (double)Tier4MinInvocationThreshold * scale && i + b >= (double)Tier4CompileThreshold * scale);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  static double min_invocations() { return Tier4MinInvocationThreshold; }\n+  static int min_invocations() { return Tier4MinInvocationThreshold; }\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-  product(double, Tier2CompileThreshold, 0,                                 \\\n+  product(intx, Tier2CompileThreshold, 0,                                   \\\n@@ -174,1 +174,1 @@\n-  product(double, Tier2BackEdgeThreshold, 0,                                \\\n+  product(intx, Tier2BackEdgeThreshold, 0,                                  \\\n@@ -178,1 +178,1 @@\n-  product(double, Tier3InvocationThreshold, 200,                            \\\n+  product(intx, Tier3InvocationThreshold, 200,                              \\\n@@ -183,1 +183,1 @@\n-  product(double, Tier3MinInvocationThreshold, 100,                         \\\n+  product(intx, Tier3MinInvocationThreshold, 100,                           \\\n@@ -187,1 +187,1 @@\n-  product(double, Tier3CompileThreshold, 2000,                              \\\n+  product(intx, Tier3CompileThreshold, 2000,                                \\\n@@ -192,1 +192,1 @@\n-  product(double, Tier3BackEdgeThreshold,  60000,                           \\\n+  product(intx, Tier3BackEdgeThreshold,  60000,                             \\\n@@ -196,1 +196,1 @@\n-  product(double, Tier4InvocationThreshold, 5000,                           \\\n+  product(intx, Tier4InvocationThreshold, 5000,                             \\\n@@ -201,1 +201,1 @@\n-  product(double, Tier4MinInvocationThreshold, 600,                         \\\n+  product(intx, Tier4MinInvocationThreshold, 600,                           \\\n@@ -205,1 +205,1 @@\n-  product(double, Tier4CompileThreshold, 15000,                             \\\n+  product(intx, Tier4CompileThreshold, 15000,                               \\\n@@ -210,1 +210,1 @@\n-  product(double, Tier4BackEdgeThreshold, 40000,                            \\\n+  product(intx, Tier4BackEdgeThreshold, 40000,                              \\\n","filename":"src\/hotspot\/share\/compiler\/compiler_globals.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-      assert(invoke_count >= 0, \"require invocation count greater than zero\");\n+      assert(invoke_count > 0, \"require invocation count greater than zero\");\n@@ -319,1 +319,1 @@\n-      double cp_min_inv = MAX2(1.0, CompilationPolicy::min_invocations());\n+      int cp_min_inv = MAX2(1, CompilationPolicy::min_invocations());\n","filename":"src\/hotspot\/share\/opto\/bytecodeInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}