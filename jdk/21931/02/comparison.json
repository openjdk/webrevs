{"files":[{"patch":"@@ -156,1 +156,0 @@\n-  _last_verified_top(nullptr),\n@@ -158,1 +157,0 @@\n-  _other_region_used_bytes(0),\n@@ -175,3 +173,1 @@\n-  _total_heap_region_size(0),\n-  _estimated_metaspaceobj_bytes(0),\n-  _estimated_hashtable_bytes(0)\n+  _total_heap_region_size(0)\n@@ -239,4 +235,0 @@\n-    \/\/ See RunTimeClassInfo::get_for(): make sure we have enough space for both maximum\n-    \/\/ Klass alignment as well as the RuntimeInfo* pointer we will embed in front of a Klass.\n-    _estimated_metaspaceobj_bytes += align_up(BytesPerWord, CompressedKlassPointers::klass_alignment_in_bytes()) +\n-        align_up(sizeof(void*), SharedSpaceObjectAlignment);\n@@ -250,3 +242,0 @@\n-  int bytes = ref->size() * BytesPerWord;\n-  _estimated_metaspaceobj_bytes += align_up(bytes, SharedSpaceObjectAlignment);\n-\n@@ -291,4 +280,0 @@\n-\n-    \/\/ TODO -- we need a proper estimate for the archived modules, etc,\n-    \/\/ but this should be enough for now\n-    _estimated_metaspaceobj_bytes += 200 * 1024 * 1024;\n@@ -318,31 +303,0 @@\n-size_t ArchiveBuilder::estimate_archive_size() {\n-  \/\/ size of the symbol table and two dictionaries, plus the RunTimeClassInfo's\n-  size_t symbol_table_est = SymbolTable::estimate_size_for_archive();\n-  size_t dictionary_est = SystemDictionaryShared::estimate_size_for_archive();\n-  _estimated_hashtable_bytes = symbol_table_est + dictionary_est;\n-\n-  if (CDSConfig::is_dumping_aot_linked_classes()) {\n-    \/\/ This is difficult to estimate when dumping the dynamic archive, as the\n-    \/\/ AOTLinkedClassTable may need to contain classes in the static archive as well.\n-    \/\/\n-    \/\/ Just give a generous estimate for now. We will remove estimate_archive_size()\n-    \/\/ in JDK-8340416\n-    _estimated_hashtable_bytes += 20 * 1024 * 1024;\n-  }\n-\n-  size_t total = 0;\n-\n-  total += _estimated_metaspaceobj_bytes;\n-  total += _estimated_hashtable_bytes;\n-\n-  \/\/ allow fragmentation at the end of each dump region\n-  total += _total_dump_regions * MetaspaceShared::core_region_alignment();\n-\n-  log_info(cds)(\"_estimated_hashtable_bytes = \" SIZE_FORMAT \" + \" SIZE_FORMAT \" = \" SIZE_FORMAT,\n-                symbol_table_est, dictionary_est, _estimated_hashtable_bytes);\n-  log_info(cds)(\"_estimated_metaspaceobj_bytes = \" SIZE_FORMAT, _estimated_metaspaceobj_bytes);\n-  log_info(cds)(\"total estimate bytes = \" SIZE_FORMAT, total);\n-\n-  return align_up(total, MetaspaceShared::core_region_alignment());\n-}\n-\n@@ -350,1 +304,1 @@\n-  size_t buffer_size = estimate_archive_size();\n+  size_t buffer_size = LP64_ONLY(CompressedClassSpaceSize) NOT_LP64(256 * M);\n@@ -367,1 +321,0 @@\n-  _last_verified_top = buffer_bottom;\n@@ -370,1 +323,0 @@\n-  _other_region_used_bytes = 0;\n@@ -589,4 +541,0 @@\n-  address bottom = _last_verified_top;\n-  address top = (address)(current_dump_region()->top());\n-  _other_region_used_bytes += size_t(top - bottom);\n-\n@@ -596,15 +544,0 @@\n-\n-  _last_verified_top = (address)(current_dump_region()->top());\n-}\n-\n-void ArchiveBuilder::verify_estimate_size(size_t estimate, const char* which) {\n-  address bottom = _last_verified_top;\n-  address top = (address)(current_dump_region()->top());\n-  size_t used = size_t(top - bottom) + _other_region_used_bytes;\n-  int diff = int(estimate) - int(used);\n-\n-  log_info(cds)(\"%s estimate = \" SIZE_FORMAT \" used = \" SIZE_FORMAT \"; diff = %d bytes\", which, estimate, used, diff);\n-  assert(diff >= 0, \"Estimate is too small\");\n-\n-  _last_verified_top = top;\n-  _other_region_used_bytes = 0;\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":2,"deletions":69,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-  address _last_verified_top;\n@@ -101,1 +100,0 @@\n-  size_t _other_region_used_bytes;\n@@ -276,4 +274,0 @@\n-  \/\/ Conservative estimate for number of bytes needed for:\n-  size_t _estimated_metaspaceobj_bytes;   \/\/ all archived MetaspaceObj's.\n-  size_t _estimated_hashtable_bytes;     \/\/ symbol table and dictionaries\n-\n@@ -282,2 +276,0 @@\n-  size_t estimate_archive_size();\n-\n@@ -285,1 +277,0 @@\n-  void verify_estimate_size(size_t estimate, const char* which);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -136,2 +136,0 @@\n-    verify_estimate_size(_estimated_metaspaceobj_bytes, \"MetaspaceObjs\");\n-\n@@ -162,2 +160,0 @@\n-    verify_estimate_size(_estimated_hashtable_bytes, \"Hashtables\");\n-\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}