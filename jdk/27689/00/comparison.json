{"files":[{"patch":"@@ -60,0 +60,1 @@\n+#include \"gc\/shared\/parallelCleaning.hpp\"\n@@ -1159,0 +1160,33 @@\n+class PSParallelCleaningTask : public WorkerTask {\n+  bool                    _unloading_occurred;\n+  CodeCacheUnloadingTask  _code_cache_task;\n+  \/\/ Prune dead klasses from subklass\/sibling\/implementor lists.\n+  KlassCleaningTask       _klass_cleaning_task;\n+\n+public:\n+  PSParallelCleaningTask(uint num_workers,\n+                         bool unloading_occurred) :\n+    WorkerTask(\"PS Parallel Cleaning\"),\n+    _unloading_occurred(unloading_occurred),\n+    _code_cache_task(unloading_occurred),\n+    _klass_cleaning_task() {}\n+\n+  void work(uint worker_id) {\n+    if (worker_id == 0) {\n+      \/\/ Serial work; only first worker.\n+      \/\/ Clean JVMCI metadata handles.\n+      JVMCI_ONLY(JVMCI::do_unloading(_unloading_occurred));\n+    }\n+\n+    \/\/ Do first pass of code cache cleaning.\n+    _code_cache_task.work(worker_id);\n+\n+    \/\/ Clean all klasses that were not unloaded.\n+    \/\/ The weak metadata in klass doesn't need to be\n+    \/\/ processed if there was no unloading.\n+    if (_unloading_occurred) {\n+      _klass_cleaning_task.work();\n+    }\n+  }\n+};\n+\n@@ -1207,1 +1241,1 @@\n-    ClassUnloadingContext ctx(1 \/* num_nmethod_unlink_workers *\/,\n+    ClassUnloadingContext ctx(active_gc_threads \/* num_nmethod_unlink_workers *\/,\n@@ -1211,1 +1245,0 @@\n-    bool unloading_occurred;\n@@ -1216,1 +1249,1 @@\n-      unloading_occurred = SystemDictionary::do_unloading(&_gc_timer);\n+      bool unloading_occurred = SystemDictionary::do_unloading(&_gc_timer);\n@@ -1218,2 +1251,2 @@\n-      \/\/ Unload nmethods.\n-      CodeCache::do_unloading(unloading_occurred);\n+      PSParallelCleaningTask task{active_gc_threads, unloading_occurred};\n+      ParallelScavengeHeap::heap()->workers().run_task(&task);\n@@ -1235,6 +1268,0 @@\n-\n-    \/\/ Prune dead klasses from subklass\/sibling\/implementor lists.\n-    Klass::clean_weak_klass_links(unloading_occurred);\n-\n-    \/\/ Clean JVMCI metadata handles.\n-    JVMCI_ONLY(JVMCI::do_unloading(unloading_occurred));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":38,"deletions":11,"binary":false,"changes":49,"status":"modified"}]}