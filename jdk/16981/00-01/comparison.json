{"files":[{"patch":"@@ -504,1 +504,5 @@\n-    static class KlassWeakReference extends WeakReference<ResolvedJavaType> {\n+    \/**\n+     * A weak reference that also tracks the key used to insert the value into {@link #resolvedJavaTypes} so that\n+     * it can be removed when the referent is cleared.\n+     *\/\n+    static class KlassWeakReference extends WeakReference<HotSpotResolvedObjectTypeImpl> {\n@@ -508,1 +512,1 @@\n-        public KlassWeakReference(Long klassPointer, ResolvedJavaType referent, ReferenceQueue<ResolvedJavaType>q) {\n+        public KlassWeakReference(Long klassPointer, HotSpotResolvedObjectTypeImpl referent, ReferenceQueue<HotSpotResolvedObjectTypeImpl> q) {\n@@ -514,0 +518,4 @@\n+    \/**\n+     * A mapping from the {@code Klass*} to the corresponding {@link HotSpotResolvedObjectTypeImpl}.  The value is\n+     * held weakly through a {@link KlassWeakReference} so that unused types can be unloaded when the compiler no longer needs them.\n+     *\/\n@@ -516,1 +524,5 @@\n-    @NativeImageReinitialize private ReferenceQueue<ResolvedJavaType> resolvedJavaTypesQueue;\n+    \/**\n+     * A {@link ReferenceQueue} to track when {@link KlassWeakReference}s have been freed so that the corresponding\n+     * entry in {@link #resolvedJavaTypes} can be cleared.\n+     *\/\n+    @NativeImageReinitialize private ReferenceQueue<HotSpotResolvedObjectTypeImpl> resolvedJavaTypesQueue;\n@@ -685,1 +697,1 @@\n-        WeakReference<ResolvedJavaType> klassReference = resolvedJavaTypes.get(klassPointer);\n+        KlassWeakReference klassReference = resolvedJavaTypes.get(klassPointer);\n@@ -688,1 +700,1 @@\n-            javaType = (HotSpotResolvedObjectTypeImpl) klassReference.get();\n+            javaType = klassReference.get();\n@@ -695,1 +707,1 @@\n-        expungeStaleEntries();\n+        expungeStaleKlassEntries();\n@@ -701,1 +713,1 @@\n-     * Clean up WeakReferences whose referents have been cleared.\n+     * Clean up WeakReferences whose referents have been cleared.  This should be called from a synchronized context.\n@@ -703,1 +715,1 @@\n-    private void expungeStaleEntries() {\n+    private void expungeStaleKlassEntries() {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCIRuntime.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"}]}