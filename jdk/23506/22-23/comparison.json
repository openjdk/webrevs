{"files":[{"patch":"@@ -521,2 +521,3 @@\n-\/\/ Match `n` for patterns: a * CON\n-\/\/ Note that `CON` will always be the second input node of a Mul node canonicalized by Ideal().\n+\/\/ Match `n` for patterns:\n+\/\/     - (1) CON * a\n+\/\/     - (2) a * CON\n@@ -524,1 +525,5 @@\n-  assert(!(n->Opcode() == Op_Mul(bt) && n->in(1)->is_Con()), \"mul node not canonicalized\");\n+  \/\/ This optimization technically only produces MulNode(CON, a), but we also match MulNode(a, CON) to cover more cases.\n+  if (n->Opcode() == Op_Mul(bt) && (n->in(1)->is_Con() || n->in(2)->is_Con())) {\n+    \/\/ Pattern (1)\n+    Node* con = n->in(1);\n+    Node* base = n->in(2);\n@@ -526,3 +531,5 @@\n-  if (n->Opcode() == Op_Mul(bt) && n->in(2)->is_Con()) {\n-    Node* con = n->in(2);\n-    Node* base = n->in(1);\n+    \/\/ Pattern (2)\n+    if (!con->is_Con()) {\n+      \/\/ swap ConNode to lhs for easier matching\n+      swap(con, base);\n+    }\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"}]}