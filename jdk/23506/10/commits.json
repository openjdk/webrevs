[{"commit":{"message":"include simple addition as a case of power of two additions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/mulnode.cpp"}],"sha":"4ac08cb921cb1b6e6617360828c721c650f1e2b1"},{"commit":{"message":"reviewer suggested changes"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/mulnode.cpp"}],"sha":"c840e490f87da74367d8d412482f944268767c64"},{"commit":{"message":"fix ((x<<y) << z) + (x<<y) patterns"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d5c6013d38732324eae2ea4818e93a986ea7c034"},{"commit":{"message":"implement @eme64's suggestions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"f71a1dc0877e01eab247b0de90ef6f2fb117006b"},{"commit":{"message":"add micro benchmark"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SerialAdditions.java"}],"sha":"851bfb2fcb4d0c32ba6e48dc552fe3498b460503"},{"commit":{"message":"add randomized power of two addition tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"5b972e9a1ef9a684b66fc33f589c98ae22f6aaec"},{"commit":{"message":"remove tri-conditionals"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"358bcbaccac0bd6f01e2b46fdf8c1fb84e32f2ad"},{"commit":{"message":"update license header year"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"f570024da459f1bf8f786362f41519228601b013"},{"commit":{"message":"Merge branch 'master' into arithmetic-canonicalization"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp"}],"sha":"0ffae804c7fb41306adee152ea0fa2e26be2c4ec"},{"commit":{"message":"added bit shift operations accept an explicit BasicType"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp"},{"filename":"test\/hotspot\/gtest\/utilities\/test_java_arithmetic.cpp"}],"sha":"ae166e7729732b5433fe26002a674f847f330457"},{"commit":{"message":"use explicit argument types for overloaded java_shift_left()"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"92411fbef20de2fb001cdab71b5d677803d105b4"},{"commit":{"message":"use java_shift_left()"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"189aa1e502d8404db5ab3f6a496945bdf8aec4ff"},{"commit":{"message":"remove UseNewCode"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"9210099141b0333afb40a59a112ddd719d524a55"},{"commit":{"message":"Merge branch 'master' into arithmetic-canonicalization"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"a55d6c9720ba4b2b1ebdc245aba900e6459e9d4b"},{"commit":{"message":"fix serial addition regression"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"be7dfdcdb3a88c802c0d9c0d3de5d1a760de0b59"},{"commit":{"message":"remove trailing empty comments"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"b5bc4f92d60b07bfe7408aca4bf92de92e05f9a8"},{"commit":{"message":"fix comment grammar\n\nCo-authored-by: Christian Hagedorn <christian.hagedorn@oracle.com>"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"f5d140aba8396130fee9d405dde60900771b245d"},{"commit":{"message":"remove matching power-of-2 subtractions since it's already handled by Identity()"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"ecee68cead9c981b964b46ce47a76a192165c206"},{"commit":{"message":"verify results with custom test methods"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"8a2c9bd4c2c88e9d173c14d34f068aaa45d875a7"},{"commit":{"message":"update comments to be more descriptive, remove unused can_reshape argument"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"d619160f316efaa73c091a71145628a2bd40c28d"},{"commit":{"message":"update comments, use explicit opcode comparisons for LShift nodes"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"af6f808472bc34eedbd095b3f1e2c5957f0c1694"},{"commit":{"message":"extract pattern matching to separate functions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"6e65e13f27e1eaa96d6a4eb0169048ec3d13a273"},{"commit":{"message":"WIP: extract pattern matching to separate functions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"fc497792cbed879c61c1c33f274501b0bb5471c3"},{"commit":{"message":"WIP: refactor as suggested by review"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"57e594bfd16b3b9ad64fe45d2aaaba7983e0d603"},{"commit":{"message":"resolve conflicts"},"files":[],"sha":"0de4feea73a058ab9b334dbca2c2071bc5fcc9ea"},{"commit":{"message":"resolve conflicts"},"files":[],"sha":"5518e4981805689dc9b4978a5bf234aad5e22c39"},{"commit":{"message":"Arithmetic canonicalization v3 (#3)\n\n* 8340144: C1: remove unused Compilation::_max_spills\r\n\r\nReviewed-by: thartmann, shade\r\n\r\n* 8340176: Replace usage of -noclassgc with -Xnoclassgc in test\/jdk\/java\/lang\/management\/MemoryMXBean\/LowMemoryTest2.java\r\n\r\nReviewed-by: kevinw, lmesnik\r\n\r\n* 8339793: Fix incorrect APX feature enabling with -XX:-UseAPX\r\n\r\nReviewed-by: kvn, thartmann, sviswanathan\r\n\r\n* 8340184: Bug in CompressedKlassPointers::is_in_encodable_range\r\n\r\nReviewed-by: coleenp, rkennke, jsjolen\r\n\r\n* 8332442: C2: refactor Mod cases in Compile::final_graph_reshaping_main_switch()\r\n\r\nReviewed-by: roland, chagedorn, jkarthikeyan\r\n\r\n* 8340119: Remove oopDesc::size_might_change()\r\n\r\nReviewed-by: stefank, iwalulya\r\n\r\n* 8340009: Improve the output from assert_different_registers\r\n\r\nReviewed-by: aboldtch, dholmes, shade, mli\r\n\r\n* 8340273: Remove CounterHalfLifeTime\r\n\r\nReviewed-by: chagedorn, dholmes\r\n\r\n* 8338566: Lazy creation of exception instances is not thread safe\r\n\r\nReviewed-by: shade, kvn, dlong\r\n\r\n* 8339648: ZGC: Division by zero in rule_major_allocation_rate\r\n\r\nReviewed-by: aboldtch, lucy, tschatzl\r\n\r\n* 8329816: Add SLEEF version 3.6.1\r\n\r\nReviewed-by: erikj, mli, luhenry\r\n\r\n* 8315273: (fs) Path.toRealPath(LinkOption.NOFOLLOW_LINKS) fails when \"..\/..\/\" follows a link (win)\r\n\r\nReviewed-by: djelinski\r\n\r\n* 8339574: Behavior of File.is{Directory,File,Hidden} is not documented with respect to symlinks\r\n\r\nReviewed-by: djelinski, alanb\r\n\r\n* 8340200: Misspelled constant `AttributesProcessingOption.DROP_UNSTABLE_ATRIBUTES`\r\n\r\nReviewed-by: liach\r\n\r\n* 8339934: Simplify Math.scalb(double) method\r\n\r\nReviewed-by: darcy\r\n\r\n* 8339790: Support Intel APX setzucc instruction\r\n\r\nReviewed-by: sviswanathan, jkarthikeyan, kvn\r\n\r\n* 8340323: Test jdk\/classfile\/OptionsTest.java fails after JDK-8340200\r\n\r\nReviewed-by: alanb\r\n\r\n* 8338686: App classpath mismatch if a jar from the Class-Path attribute is on the classpath\r\n\r\nReviewed-by: dholmes, iklam\r\n\r\n* 8337563: NMT: rename MEMFLAGS to MemTag\r\n\r\nReviewed-by: dholmes, coleenp, jsjolen\r\n\r\n* 8340210: Add positionTestUI() to PassFailJFrame.Builder\r\n\r\nCo-authored-by: Alexey Ivanov <aivanov@openjdk.org>\r\nReviewed-by: aivanov, azvegint\r\n\r\n* 8340132: Remove internal CpException for reading malformed utf8\r\n\r\nReviewed-by: asotona\r\n\r\n* 8340213: jcmd VM.events ignores max argument\r\n\r\nReviewed-by: szaldana, cjplummer, amenkov, mli\r\n\r\n* 8340015: Open source several AWT focus tests - series 7\r\n\r\nReviewed-by: honkar\r\n\r\n* 8340280: Avoid calling MT.invokerType() when creating LambdaForms\r\n\r\nReviewed-by: liach, jvernee\r\n\r\n* 8333258: C2: high memory usage in PhaseCFG::insert_anti_dependences()\r\n\r\nReviewed-by: kvn, epeter\r\n\r\n* 8340230: Tests crash: assert(is_in_encoding_range || k->is_interface() || k->is_abstract()) failed: sanity\r\n\r\nReviewed-by: thartmann, kvn\r\n\r\n* 8319873: Add windows implementation for jcmd System.map and System.dump_map\r\n\r\nCo-authored-by: Simon Tooke <stooke@openjdk.org>\r\nReviewed-by: stuefe, kevinw, szaldana\r\n\r\n* 8339845: Update color.org and wapforum.org links to use HTTPS instead of HTTP\r\n\r\nReviewed-by: prr, honkar, aivanov\r\n\r\n* 8340113: Remove JULONG as a Diagnostic Command argument type (jcmd JFR.view)\r\n\r\nReviewed-by: lmesnik, egahlin\r\n\r\n* 8340272: C2 SuperWord: JMH benchmark for Reduction vectorization\r\n\r\nReviewed-by: kvn, jkarthikeyan\r\n\r\n* 8337302: Undefined type variable results in null\r\n\r\nReviewed-by: liach\r\n\r\n* 8339738: RISC-V: Vectorize crc32 intrinsic\r\n\r\nReviewed-by: fyang, luhenry\r\n\r\n* 8340368: windows-x64-slowdebug build fails after JDK-8319873\r\n\r\nReviewed-by: jpai, kevinw, aboldtch, eosterlund\r\n\r\n* 8339992: RISC-V: some minor improvements of base64_vector_decode_round\r\n\r\nReviewed-by: fyang, luhenry\r\n\r\n* 8340233: Missed ThreadWXEnable in jfrNativeLibraryLoadEvent.cpp\r\n\r\nReviewed-by: mgronlun\r\n\r\n* 8340391: Windows jcmd System.map and System.dump_map tests failing\r\n\r\nReviewed-by: cjplummer\r\n\r\n* 8339962: Open source AWT TextField tests - Set1\r\n\r\nReviewed-by: jdv, dnguyen, prr\r\n\r\n* 8340078: Open source several 2D tests\r\n\r\nReviewed-by: honkar\r\n\r\n* 8340360: Update -mx to -Xmx in UnninstallUIMemoryLeaks test\r\n\r\nReviewed-by: serb, prr\r\n\r\n* 8339980: [s390x] ProblemList jdk\/java\/util\/zip\/CloseInflaterDeflaterTest.java\r\n\r\nReviewed-by: lucy\r\n\r\n* 8339416: [s390x] Provide implementation for resolve_global_jobject\r\n\r\nReviewed-by: mdoerr, lucy\r\n\r\n* 8286851: Deprecate for removal several of the undocumented java launcher options\r\n\r\nReviewed-by: dholmes\r\n\r\n* 8340276: Test java\/lang\/management\/ThreadMXBean\/Locks.java failed with NullPointerException\r\n\r\nReviewed-by: cjplummer, lmesnik\r\n\r\n* 8338759: Add extra diagnostic to java\/net\/InetAddress\/ptr\/Lookup.java\r\n\r\nReviewed-by: dfuchs, shade\r\n\r\n* 8337674: ZGC: Consistent style for naming private static constants\r\n\r\nReviewed-by: stefank, aboldtch, mli\r\n\r\n* 8340007: Refactor KeyEvent\/FunctionKeyTest.java\r\n\r\nReviewed-by: azvegint\r\n\r\n* 8340306: Add border around instructions in PassFailJFrame\r\n\r\nReviewed-by: honkar, prr\r\n\r\n* 8339787: Add some additional diagnostic output to java\/net\/ipv6tests\/UdpTest.java\r\n\r\nReviewed-by: dfuchs\r\n\r\n* 8338995: New Object to ObjectMonitor mapping: PPC64 implementation\r\n\r\nReviewed-by: rrich, lucy\r\n\r\n* 8331391: Enhance the keytool code by invoking the buildTrustedCerts method for essential options\r\n\r\nReviewed-by: coffeys, mullan\r\n\r\n* 8298614: Support CDS heap dumping for SerialGC and ParallelGC\r\n\r\nReviewed-by: dholmes, lmesnik, iklam\r\n\r\n* 8338693: assert(Atomic::add(&ik->_shared_class_load_count, 1) == 1) failed: shared class loaded more than once\r\n\r\nReviewed-by: iklam, dholmes\r\n\r\n* 8340329: (fs) Message of NotLinkException thrown by FIles.readSymbolicLink does not include file name (win)\r\n\r\nReviewed-by: alanb\r\n\r\n* 8339735: Remove references to Applet in core-libs\/security APIs\r\n\r\nReviewed-by: coffeys, naoto, iris, rriggs, lancea, mullan\r\n\r\n* 8340271: Open source several AWT Robot tests\r\n\r\nReviewed-by: abhiscxk, honkar\r\n\r\n* 8340308: PassFailJFrame: Make rows default to number of lines in instructions\r\n\r\nReviewed-by: honkar, azvegint\r\n\r\n* 8340399: Update comment in SourceVersion for language evolution history\r\n\r\nReviewed-by: iris\r\n\r\n* 8340166: [REDO] CDS: Trim down minimum GC region alignment\r\n\r\nReviewed-by: ccheung, iklam\r\n\r\n* 8340400: Shenandoah: Whitebox breakpoint GC requests may cause assertions\r\n\r\nReviewed-by: shade\r\n\r\n* 8339902: Open source couple TextField related tests\r\n\r\nReviewed-by: honkar\r\n\r\n* 8340353: Remove CompressedOops::ptrs_base\r\n\r\nReviewed-by: stefank, coleenp, shade, mli\r\n\r\n* 8340480: Bad copyright notices in changes from JDK-8339902\r\n\r\nReviewed-by: kcr, bpb, kizune\r\n\r\n* 8339192: Native annotation parsing code of deprecated annotations causes crash\r\n\r\nReviewed-by: jrose, mgronlun\r\n\r\n* 8339895: Open source several AWT focus tests - series 3\r\n\r\nReviewed-by: prr\r\n\r\n* 8340436: Remove unused CompressedOops::AnyNarrowOopMode\r\n\r\nReviewed-by: haosun, dholmes\r\n\r\n* 8339984: Open source AWT MenuItem related tests\r\n\r\nReviewed-by: aivanov\r\n\r\n* 8339906: Open source several AWT focus tests - series 4\r\n\r\nReviewed-by: abhiscxk, prr\r\n\r\n* 8340418: GHA: MacOS AArch64 bundles can be removed prematurely\r\n\r\nReviewed-by: erikj\r\n\r\n* 8340439: AArch64: Extra entry declaration for assember test\r\n\r\nReviewed-by: haosun, lmesnik, mli\r\n\r\n* 8340456: Reduce overhead of proxying Object methods in ProxyGenerator\r\n\r\nReviewed-by: liach\r\n\r\n* 8340438: RISC-V: minor improvement in base64\r\n\r\nReviewed-by: fyang\r\n\r\n* 8340008: KeyEvent\/KeyTyped\/Numpad1KeyTyped.java has 15 seconds timeout\r\n\r\nReviewed-by: azvegint, prr\r\n\r\n* 8339972: Make a few fields in SortingFocusTraversalPolicy static\r\n\r\nReviewed-by: azvegint, aivanov\r\n\r\n* 8340540: Problemlist DcmdMBeanPermissionsTest.java and SystemDumpMapTest.java\r\n\r\nReviewed-by: kevinw\r\n\r\n* 8338658: New Object to ObjectMonitor mapping: s390x implementation\r\n\r\nReviewed-by: lucy, mdoerr\r\n\r\n* 8340269: [s390x] TestLargeStub.java failure after 8338123\r\n\r\nReviewed-by: mdoerr, lucy\r\n\r\n* 8340537: Typo in javadoc of java.util.jar.JarFile\r\n\r\nReviewed-by: mullan, lancea, iris\r\n\r\n* 8339198: Remove tag field from AbstractPoolEntry\r\n\r\nReviewed-by: asotona, redestad\r\n\r\n* 8340232: Optimize DataInputStream::readUTF\r\n\r\nReviewed-by: liach, bpb\r\n\r\n* 8338471: Assert deleted methods not returned by CallInfo\r\n\r\nReviewed-by: shade, jwaters, dholmes\r\n\r\n* 8340092: [Linux] containers\/systemd\/SystemdMemoryAwarenessTest.java failing on some systems\r\n\r\nReviewed-by: mbaesken\r\n\r\n* 8339781: Better use of Javadoc tags in javax.lang.model\r\n\r\nReviewed-by: jjg\r\n\r\n* 8339217: Optimize ClassFile API loadConstant\r\n\r\nReviewed-by: liach, redestad, asotona\r\n\r\n* 8340544: Optimize setLocalsFromArg\r\n\r\nReviewed-by: redestad, liach\r\n\r\n* 8340524: Remove NarrowPtrStruct\r\n\r\nReviewed-by: shade, jwaters\r\n\r\n* 8340387: Update OS detection code to recognize Windows Server 2025\r\n\r\nReviewed-by: mdoerr, jwaters, dholmes\r\n\r\n* 8340171: CDS: Enhance bitmap truncation\r\n\r\nReviewed-by: matsaave, iklam\r\n\r\n* 8340392: Handle OopStorage in location decoder\r\n\r\nReviewed-by: kbarrett, dholmes\r\n\r\n* 8340573: Remove unused G1ParScanThreadState::_partial_objarray_chunk_size\r\n\r\nReviewed-by: tschatzl\r\n\r\n* 8340084: Open source AWT Frame related tests\r\n\r\nReviewed-by: psadhukhan, honkar\r\n\r\n* 8339852: Fix typos in java.compiler documentation\r\n\r\nReviewed-by: liach, darcy\r\n\r\n* 8325949: Create an internal utility method for creating VarHandle instances\r\n\r\nReviewed-by: rriggs\r\n\r\n* 8339161: ZGC: Remove unused remembered sets\r\n\r\nReviewed-by: aboldtch, stefank\r\n\r\n* 8335334: Stress mode to randomly execute unstable if traps\r\n\r\nReviewed-by: chagedorn, kvn\r\n\r\n* 8340393: Open source closed choice tests #2\r\n\r\nReviewed-by: psadhukhan\r\n\r\n* 8340183: Shenandoah: Incorrect match for clone barrier in is_gc_barrier_node\r\n\r\nReviewed-by: roland, rkennke\r\n\r\n* 8336025: Improve ZipOutputSream validation of MAX CEN Header field limits\r\n\r\nReviewed-by: alanb\r\n\r\n* 8319332: Security properties files inclusion\r\n\r\nCo-authored-by: Francisco Ferrari Bihurriet <fferrari@openjdk.org>\r\nCo-authored-by: Martin Balao <mbalao@openjdk.org>\r\nReviewed-by: weijun, mullan, kdriver\r\n\r\n* 8340461: Amend description for logArea\r\n\r\nReviewed-by: azvegint, prr\r\n\r\n* 8340411: open source several 2D imaging tests\r\n\r\nReviewed-by: azvegint\r\n\r\n* 8340365: Position the first window of a window list\r\n\r\nReviewed-by: azvegint, prr\r\n\r\n* WIP: v3\r\n\r\n* 8338918: Remove non translated file name from WinResources resource bundle\r\n\r\nReviewed-by: jlu, almatvee\r\n\r\n* 8340707: ProblemList applications\/ctw\/modules\/java_base.java due to JDK-8340683\r\n\r\nReviewed-by: darcy\r\n\r\n* 8340114: Remove outdated SelectVersion() function from the launcher and update the code comments explaining the code flow\r\n\r\nReviewed-by: dholmes, alanb\r\n\r\n* 8339995: Open source several AWT focus tests - series 6\r\n\r\nReviewed-by: prr\r\n\r\n* 8340596: Remove dead code from RequiresSetenv function in java.base\/unix\/native\/libjli\/java_md.c\r\n\r\nReviewed-by: dholmes\r\n\r\n* 8340367: Opensource few AWT image tests\r\n\r\nReviewed-by: prr\r\n\r\n* 8340146: ZGC: TestAllocateHeapAt.java should not run with UseLargePages\r\n\r\nReviewed-by: tschatzl, stefank\r\n\r\n* 8323688: C2: Fix UB of jlong overflow in PhaseIdealLoop::is_counted_loop()\r\n\r\nReviewed-by: thartmann, kvn\r\n\r\n* 8340590: RISC-V: C2: Small improvement to vector gather load and scatter store\r\n\r\nReviewed-by: fyang, dzhang\r\n\r\n* 8340623: Remove outdated PROCESSOR_ARCHITECTURE_IA64 from Windows coding\r\n\r\nReviewed-by: alanb, dholmes\r\n\r\n* 8335167: Test runtime\/Thread\/TestAlwaysPreTouchStacks.java failed with Expected a higher ratio between stack committed and reserved\r\n\r\nReviewed-by: stuefe, dholmes, gziemski\r\n\r\n* 8340585: [JVMCI] compiler\/unsafe\/UnsafeGetStableArrayElement.java fails with -XX:-UseCompressedClassPointers\r\n\r\nReviewed-by: dnsimon\r\n\r\n* 8340398: [JVMCI] Unintuitive behavior of UseJVMCICompiler option\r\n\r\nReviewed-by: dnsimon\r\n\r\n* 8340680: Fix typos in javax.lang.model.SourceVersion\r\n\r\nReviewed-by: darcy, iris\r\n\r\n* 8339299: C1 will miss type profile when inline final method\r\n\r\nReviewed-by: lmesnik, vlivanov\r\n\r\n* 8340657: [PPC64] SA determines wrong unextendedSP\r\n\r\nReviewed-by: ysuenaga, mbaesken\r\n\r\n* 8340383: VM issues warning failure to find kernel32.dll on Windows nanoserver\r\n\r\nReviewed-by: dholmes, jwaters\r\n\r\n* 8340408: Shenandoah: Remove redundant task stats printing code in ShenandoahTaskQueue\r\n\r\nReviewed-by: shade, wkemper\r\n\r\n* 8338546: Speed up ConstantPoolBuilder::classEntry(ClassDesc)\r\n\r\nReviewed-by: asotona, redestad\r\n\r\n* 8338405: JFR: Use FILE type for dcmds\r\n\r\nReviewed-by: egahlin, lmesnik\r\n\r\n* 8340793: Fix client builds after JDK-8337987\r\n\r\nReviewed-by: shade, fyang\r\n\r\n* 8338694: x86_64 intrinsic for tanh using libm\r\n\r\nReviewed-by: kvn, jbhateja, sgibbons, sviswanathan\r\n\r\n* 8340143: Open source several Java2D rendering loop tests.\r\n\r\nReviewed-by: psadhukhan\r\n\r\n* 8340433: Open source closed choice tests #3\r\n\r\nReviewed-by: honkar, prr\r\n\r\n* 8340670: Policy.UNSUPPORTED_EMPTY_COLLECTION.isReadOnly does not return true\r\n\r\nReviewed-by: mullan\r\n\r\n* 8340804: doc\/building.md update Xcode instructions to note that full install is required\r\n\r\nReviewed-by: erikj, jwaters\r\n\r\n* 8338525: Leading and trailing code blocks by indentation\r\n\r\nReviewed-by: hannesw, prappo\r\n\r\n* 8340717: Remove unused function declarations from java.c\/java.h of the launcher\r\n\r\nReviewed-by: alanb, dholmes, shade, jwaters\r\n\r\n* 8340643: RISC-V: Small refactoring for sub\/subw macro-assembler routines\r\n\r\nReviewed-by: fyang, luhenry\r\n\r\n* 8340708: Optimize StackMapGenerator::processMethod\r\n\r\nReviewed-by: liach\r\n\r\n* 8340587: Optimize StackMapGenerator$Frame::checkAssignableTo\r\n\r\nReviewed-by: liach\r\n\r\n* 8340710: Optimize DirectClassBuilder::build\r\n\r\nReviewed-by: liach\r\n\r\n* 8339935: Open source several AWT focus tests - series 5\r\n\r\nReviewed-by: prr\r\n\r\n* 8339771: RISC-V: Reduce icache flushes\r\n\r\nReviewed-by: fyang, mli, luhenry\r\n\r\n* 8340808: RISC-V: Client build fails after JDK-8339738\r\n\r\nReviewed-by: fyang\r\n\r\n* 8340843: [PPC64\/s390x] Error: ShouldNotReachHere() in TemplateInterpreterGenerator::generate_math_entry after 8338694\r\n\r\nReviewed-by: mbaesken, amitkumar\r\n\r\n* 8339541: CSS rule is not specific enough\r\n\r\nReviewed-by: jjg\r\n\r\n* 8340885: Desugar ZipCoder.Comparison\r\n\r\nReviewed-by: lancea, eirbjo\r\n\r\n* 8340568: Incorrect escaping of single quotes when pretty-printing character literals\r\n\r\nReviewed-by: mcimadamore\r\n\r\n* 8338583: NMT: Malloc overhead is calculated incorrectly\r\n\r\nReviewed-by: azafari, yan, gziemski\r\n\r\n* WIP: use UseNewCode\r\n\r\n* 8340815: Add SECURITY.md file\r\n\r\nReviewed-by: mr, jwaters, erikj\r\n\r\n* 8340946: Add vmTestbase\/gc\/memory\/Nio\/Nio.java and java\/nio\/Buffer\/LimitDirectMemory.java to problem list\r\n\r\nReviewed-by: liach, dcubed, alanb\r\n\r\n* 8340684: Reading from an input stream backed by a closed ZipFile has no test coverage\r\n\r\nReviewed-by: lancea\r\n\r\n* 8340228: Open source couple more miscellaneous AWT tests\r\n\r\nReviewed-by: prr\r\n\r\n* 8340956: ProblemList 4 java\/nio\/channels\/DatagramChannel tests on macosx-all\r\n\r\nReviewed-by: liach, alanb, darcy, dfuchs\r\n\r\n* 8340838: Clean up MutableCallSite to use explicit release fence instead of AtomicInteger\r\n\r\nReviewed-by: jrose, redestad, shade\r\n\r\n* 8340831: Simplify simple validation for class definition in MethodHandles.Lookup\r\n\r\nReviewed-by: redestad\r\n\r\n* 8340864: Remove unused lines related to vmClasses\r\n\r\nReviewed-by: shade, kvn\r\n\r\n* WIP: fixed lshift base term matching\r\n\r\n* WIP: removed UseNewCode\r\n\r\n* 8339271: giflib attribution correction\r\n\r\nReviewed-by: dnguyen, prr\r\n\r\n* 8340812: LambdaForm customization via MethodHandle::updateForm is not thread safe\r\n\r\nReviewed-by: liach, shade, jvernee\r\n\r\n* 8339260: Move rarely used constants out of ClassFile\r\n\r\nReviewed-by: asotona\r\n\r\n* 8340923: The class LogSelection copies uninitialized memory\r\n\r\nReviewed-by: mbaesken, jwaters, stefank\r\n\r\n* 8340899: Remove wildcard bound in PositionWindows.positionTestWindows\r\n\r\nReviewed-by: azvegint, prr\r\n\r\n* 8340466: Add description for PassFailJFrame constructors\r\n\r\nReviewed-by: prr, honkar\r\n\r\n* 8339542: compiler\/codecache\/CheckSegmentedCodeCache.java fails\r\n\r\nReviewed-by: mdoerr, shade\r\n\r\n* 8340687: Open source closed frame tests #1\r\n\r\nReviewed-by: aivanov\r\n\r\n* 8339560: Unaddressed comments during code review of JDK-8337664\r\n\r\nReviewed-by: mullan\r\n\r\n* 8336942: Improve test coverage for class loading elements with annotations of different retentions\r\n\r\nReviewed-by: vromero\r\n\r\n* 8336468: Reflection and MethodHandles should use more precise initializer checks\r\n\r\nReviewed-by: liach, coleenp\r\n\r\n* 8336895: BufferedReader doesn't read full \\r\\n line ending when it doesn't fit in buffer\r\n\r\nReviewed-by: jpai, alanb\r\n\r\n* 8339460: CDS error when module is located in a directory with space in the name\r\n\r\nReviewed-by: ccheung, iklam\r\n\r\n* 8340981: Update citations to \"Hacker's Delight\"\r\n\r\nReviewed-by: bpb, iris, liach, jwaters\r\n\r\n* 8340983: Use index and definition tags in Object and Double\r\n\r\nReviewed-by: bpb, liach\r\n\r\n* 8333403: Write a test to check various components events are triggered properly\r\n\r\nReviewed-by: aivanov\r\n\r\n* revert changing AddI\/LNodeIdealizationTests\r\n\r\n* 8339261: Logs truncated in test javax\/net\/ssl\/DTLS\/DTLSRehandshakeTest.java\r\n\r\nReviewed-by: rhalade, hchao\r\n\r\n* fixed power-of-2 multiplication detection\r\n\r\n* fixed power-of-2 multiplication detection\r\n\r\n* refactor lshift multiplier calculation. updated comments\r\n\r\n---------\r\n\r\nCo-authored-by: Denghui Dong <ddong@openjdk.org>\r\nCo-authored-by: Jaikiran Pai <jpai@openjdk.org>\r\nCo-authored-by: Jatin Bhateja <jbhateja@openjdk.org>\r\nCo-authored-by: Thomas Stuefe <stuefe@openjdk.org>\r\nCo-authored-by: Thomas Schatzl <tschatzl@openjdk.org>\r\nCo-authored-by: Stefan Karlsson <stefank@openjdk.org>\r\nCo-authored-by: Daniel Lundén <dlunden@openjdk.org>\r\nCo-authored-by: Tobias Hartmann <thartmann@openjdk.org>\r\nCo-authored-by: Matthias Baesken <mbaesken@openjdk.org>\r\nCo-authored-by: Magnus Ihse Bursie <ihse@openjdk.org>\r\nCo-authored-by: Brian Burkhalter <bpb@openjdk.org>\r\nCo-authored-by: David M. Lloyd <david.lloyd@redhat.com>\r\nCo-authored-by: Raffaello Giulietti <rgiulietti@openjdk.org>\r\nCo-authored-by: Chen Liang <liach@openjdk.org>\r\nCo-authored-by: Calvin Cheung <ccheung@openjdk.org>\r\nCo-authored-by: Gerard Ziemski <gziemski@openjdk.org>\r\nCo-authored-by: Harshitha Onkar <honkar@openjdk.org>\r\nCo-authored-by: Alexey Ivanov <aivanov@openjdk.org>\r\nCo-authored-by: Leonid Mesnik <lmesnik@openjdk.org>\r\nCo-authored-by: Prasanta Sadhukhan <psadhukhan@openjdk.org>\r\nCo-authored-by: Claes Redestad <redestad@openjdk.org>\r\nCo-authored-by: Roland Westrelin <roland@openjdk.org>\r\nCo-authored-by: Martin Doerr <mdoerr@openjdk.org>\r\nCo-authored-by: Simon Tooke <stooke@openjdk.org>\r\nCo-authored-by: Nizar Benalla <nbenalla@openjdk.org>\r\nCo-authored-by: Kevin Walls <kevinw@openjdk.org>\r\nCo-authored-by: Emanuel Peter <epeter@openjdk.org>\r\nCo-authored-by: Rafael Winterhalter <winterhalter@openjdk.org>\r\nCo-authored-by: Hamlin Li <mli@openjdk.org>\r\nCo-authored-by: Phil Race <prr@openjdk.org>\r\nCo-authored-by: Amit Kumar <amitkumar@openjdk.org>\r\nCo-authored-by: Serhiy Sachkov <serhiy.sachkov@oracle.com>\r\nCo-authored-by: Joel Sikström <joel.sikstrom@oracle.com>\r\nCo-authored-by: Prasadrao Koppula <pkoppula@openjdk.org>\r\nCo-authored-by: Matias Saavedra Silva <matsaave@openjdk.org>\r\nCo-authored-by: Justin Lu <jlu@openjdk.org>\r\nCo-authored-by: Joe Darcy <darcy@openjdk.org>\r\nCo-authored-by: Aleksey Shipilev <shade@openjdk.org>\r\nCo-authored-by: William Kemper <wkemper@openjdk.org>\r\nCo-authored-by: Alexander Zuev <kizune@openjdk.org>\r\nCo-authored-by: Kim Barrett <kbarrett@openjdk.org>\r\nCo-authored-by: David Holmes <dholmes@openjdk.org>\r\nCo-authored-by: Abhishek Kumar <abhiscxk@openjdk.org>\r\nCo-authored-by: SendaoYan <syan@openjdk.org>\r\nCo-authored-by: Andrey Turbanov <aturbanov@openjdk.org>\r\nCo-authored-by: Shaojin Wen <swen@openjdk.org>\r\nCo-authored-by: Coleen Phillimore <coleenp@openjdk.org>\r\nCo-authored-by: Severin Gehwolf <sgehwolf@openjdk.org>\r\nCo-authored-by: Pavel Rappo <prappo@openjdk.org>\r\nCo-authored-by: Per Minborg <pminborg@openjdk.org>\r\nCo-authored-by: Alexander Zvegintsev <azvegint@openjdk.org>\r\nCo-authored-by: Lance Andersen <lancea@openjdk.org>\r\nCo-authored-by: Francisco Ferrari Bihurriet <fferrari@openjdk.org>\r\nCo-authored-by: Martin Balao <mbalao@openjdk.org>\r\nCo-authored-by: Alexey Semenyuk <asemenyuk@openjdk.org>\r\nCo-authored-by: Axel Boldt-Christmas <aboldtch@openjdk.org>\r\nCo-authored-by: Christian Hagedorn <chagedorn@openjdk.org>\r\nCo-authored-by: Gui Cao <gcao@openjdk.org>\r\nCo-authored-by: Afshin Zafari <azafari@openjdk.org>\r\nCo-authored-by: Yudi Zheng <yzheng@openjdk.org>\r\nCo-authored-by: Tomas Zezula <tzezula@openjdk.org>\r\nCo-authored-by: Kuai Wei <kuaiwei.kw@alibaba-inc.com>\r\nCo-authored-by: George Adams <gdams@openjdk.org>\r\nCo-authored-by: Zhengyu Gu <zgu@openjdk.org>\r\nCo-authored-by: Sonia Zaldana Calles <szaldana@openjdk.org>\r\nCo-authored-by: Andrew Dinn <adinn@openjdk.org>\r\nCo-authored-by: vamsi-parasa <srinivas.vamsi.parasa@intel.com>\r\nCo-authored-by: Artur Barashev <artur.barashev@oracle.com>\r\nCo-authored-by: Jonathan Gibbons <jjg@openjdk.org>\r\nCo-authored-by: Robbin Ehn <rehn@openjdk.org>\r\nCo-authored-by: Hannes Wallnöfer <hannesw@openjdk.org>\r\nCo-authored-by: Liam Miller-Cushon <cushon@openjdk.org>\r\nCo-authored-by: Leonov Kirill <91743110+kirleo2@users.noreply.github.com>\r\nCo-authored-by: Eirik Bjørsnøs <eirbjo@openjdk.org>\r\nCo-authored-by: Daniel D. Daugherty <dcubed@openjdk.org>\r\nCo-authored-by: Ioi Lam <iklam@openjdk.org>\r\nCo-authored-by: Alisen Chung <achung@openjdk.org>\r\nCo-authored-by: Johan Sjölen <jsjolen@openjdk.org>\r\nCo-authored-by: Lutz Schmidt <lucy@openjdk.org>\r\nCo-authored-by: Fernando Guallini <fguallini@openjdk.org>\r\nCo-authored-by: Maxim Kartashev <mkartashev@openjdk.org>\r\nCo-authored-by: Ravi Gupta <rgupta@openjdk.org>"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"b767a7721da8c7b9c78538e8a566e1654765759e"},{"commit":{"message":"WIP: v3"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"fc7d4a22fbc20689265a04067ece81d1fb4d05b5"},{"commit":{"message":"add comments about intentional type narrowing"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"f9ca1124ac523a2fd30f830409bd8c72268e6ca9"},{"commit":{"message":"Merge pull request #2 from tabjy\/arithmetic-canonicalization-v2\n\nArithmetic canonicalization v2"},"files":[],"sha":"30f119c553e08603cc7d509b068062f624d95ceb"},{"commit":{"message":"remove unused variables"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"14939c6fd652177e6208e37ece0b1c0fa5e7405e"},{"commit":{"message":"remove debug printfs"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"e048c6f732208dfcaafda83509ac31fc71fed8db"},{"commit":{"message":"fix detecting optimized power-of-2 multiplication"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"c5cabee68cc88857a84f2ce8bbd6c233507a7a6e"},{"commit":{"message":"revert usage of integercon(): truncation during jlong to jint is intended"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"f09d6f6a273a701d194d1976a2cc9e850206dddf"},{"commit":{"message":"implement rwestrel's changes, passing TestDigest"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"fa3be36bcf573e4268306e9b31f2bdce4a31d6e7"},{"commit":{"message":"Merge branch 'openjdk:master' into arithmetic-canonicalization"},"files":[],"sha":"c8fdb74cb7c308cbf8e55585eb46c3214168b417"},{"commit":{"message":"Merge pull request #1 from tabjy\/arithmetic-canonicalization-v2\n\nArithmetic canonicalization v2"},"files":[],"sha":"6eb0e21b27271919bf6802d527fde55553069bcb"},{"commit":{"message":"remove dead code"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"1555372ece384c4ef80aae34191b2bd9066259bd"},{"commit":{"message":"fix potential void type const nodes"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d59340de20f96ea940628fb65dfd971d59154626"},{"commit":{"message":"refactor and cleanup"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"57db59d5011f2105ff606f3905ce966dd5aa225b"},{"commit":{"message":"add more test cases"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"c2710b12c4e0cd143b705d32f8fc9dd1d851639e"},{"commit":{"message":"re-implement depth limit on recursion"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d2a62b7b93e77e58c51f480b6f8fa73bb8248b94"},{"commit":{"message":"passes TestIRLShiftIdeal_XPlusX_LShiftC"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"db647c47e83b23180134f55c3964eb1b0b29c8c5"},{"commit":{"message":"passes AddI[L]NodeIdealizationTests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"1c4294c37c00d9697b6deae25f4dcefcc9dffab9"},{"commit":{"message":"revert depth limits"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"02c4c01bb4c688312346cfc843c76d6223cfa70f"},{"commit":{"message":"clean up the code a little"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"393d8cefef3bf32383ea9103d177131984497f69"},{"commit":{"message":"WIP: debug outputs"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"b28e27dc59e9d63b044f658d58e8e6edfabe4d21"},{"commit":{"message":"WIP: v2 passes unit tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"e8ac921b6c813946c5cfc6f06217349c834ffcc5"},{"commit":{"message":"add more IR tests"},"files":[],"sha":"5923f361e6e8bca47f8e0e7fd3f33d5b726861e5"},{"commit":{"message":"update comments of existing tests"},"files":[],"sha":"7c5c772790ee125158598dbeec6d2e595245d7be"},{"commit":{"message":"Merge branch 'master' into arithmetic-canonicalization"},"files":[],"sha":"1bacf3d5a05ae81f3498000de8a4fa5e3eb344bd"},{"commit":{"message":"add more IR tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"1317d03f236ccf2d519a88d663c0c0944d497782"},{"commit":{"message":"add more IR tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"5d36b0dd772f1f863e5b02a425404251bd5645f2"},{"commit":{"message":"distinguish AndNode from MulNode"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"5ad98b1789718d4bae3a502745a27a901567e2bf"},{"commit":{"message":"add initial IR unit tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"85bcdd3806f424419520a6fa86584f36cf9a6035"},{"commit":{"message":"passes all hotspot-compiler tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"e7fb4868e45c8f91d4b2046fec9e5a1ec6d0086f"},{"commit":{"message":"implement arithmetic canonicalization for additions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"9b431a9a99456724dc3f679d355cc007fe29b137"}]