{"files":[{"patch":"@@ -98,0 +98,2 @@\n+    \/\/ Hash code of this object\n+    private int                 hash;\n@@ -384,1 +386,7 @@\n-        return getDeclaringClass().getName().hashCode() ^ getName().hashCode();\n+        int hc = hash;\n+\n+        if (hc == 0) {\n+            hc = hash = getDeclaringClass().getName().hashCode() ^ getName()\n+                .hashCode();\n+        }\n+        return hc;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,2 +39,3 @@\n- * Benchmark measuring the speed of Method\/Method.getExceptionTypes() and\n- * getParameterTypes(), in cases where the result array is length zero.\n+ * Benchmark measuring the speed of Method\/Method.getExceptionTypes(),\n+ * getParameterTypes() in cases where the result array is length zero,\n+ * and hashCode().\n@@ -53,0 +54,1 @@\n+    Method hashCodeMethod;\n@@ -61,0 +63,2 @@\n+\n+            hashCodeMethod = String.class.getDeclaredMethod(\"toString\");\n@@ -85,0 +89,5 @@\n+\n+    @Benchmark\n+    public int getMethodHashCode() {\n+        return hashCodeMethod.hashCode();\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/MethodBenchmark.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}