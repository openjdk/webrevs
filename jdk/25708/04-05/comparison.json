{"files":[{"patch":"@@ -27,1 +27,3 @@\n- * @summary Verifies that setting CodeCacheSegmentSize to a non-power-of-two value does not crash the JVM and shows expected error.\n+ * @summary Verifies that CodeCacheSegmentSize enforces power-of-two constraint:\n+ *          - fails gracefully for invalid value\n+ *          - succeeds for valid value\n@@ -38,1 +40,5 @@\n-        String codeCacheSegmentSize = (Platform.isS390x() ? \"67\" : \"36\"); \/\/ invalid value (not power of two)\n+        testInvalidValue();\n+        testValidValue();\n+    }\n+\n+    private static void testInvalidValue() throws Exception {\n@@ -41,1 +47,1 @@\n-            \"-XX:CodeCacheSegmentSize=\" + codeCacheSegmentSize,\n+            \"-XX:CodeCacheSegmentSize=65\", \/\/ invalid value (not power of two)\n@@ -51,1 +57,1 @@\n-        output.shouldContain(\"CodeCacheSegmentSize (\" + codeCacheSegmentSize + \") must be a power of two\");\n+        output.shouldContain(\"CodeCacheSegmentSize (65) must be a power of two\");\n@@ -58,0 +64,14 @@\n+\n+    private static void testValidValue() throws Exception {\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:+UnlockExperimentalVMOptions\",\n+            \"-XX:CodeCacheSegmentSize=64\", \/\/ a valid power of 2\n+            \"-version\"\n+        );\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+\n+        output.shouldContain(\"openjdk version\"); \/\/ typical first line\n+        output.shouldContain(\"OpenJDK Runtime Environment\");\n+        output.shouldHaveExitValue(0);\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CodeCacheSegmentSizeTest.java","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"}]}