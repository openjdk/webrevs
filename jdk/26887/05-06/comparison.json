{"files":[{"patch":"@@ -24,13 +24,0 @@\n-\/*\n- * @test\n- * @bug 8365820\n- * @summary Apply certificate scope constraints to algorithms in\n- *          \"signature_algorithms\" extension when\n- *          \"signature_algorithms_cert\" extension is not being sent.\n- * @modules java.base\/sun.security.x509\n- *          java.base\/sun.security.util\n- * @library \/javax\/net\/ssl\/templates\n- *          \/test\/lib\n- * @run main\/othervm DisableCertSignAlgsExtForServerTLS13\n- *\/\n-\n@@ -69,0 +56,14 @@\n+\/*\n+ * @test\n+ * @bug 8365820\n+ * @summary Apply certificate scope constraints to algorithms in\n+ *          \"signature_algorithms\" extension when\n+ *          \"signature_algorithms_cert\" extension is not being sent.\n+ * @modules java.base\/sun.security.x509\n+ *          java.base\/sun.security.util\n+ * @library \/javax\/net\/ssl\/templates\n+ *          \/test\/lib\n+ * @run main\/othervm DisableCertSignAlgsExtForServerTLS13 true\n+ * @run main\/othervm DisableCertSignAlgsExtForServerTLS13 false\n+ *\/\n+\n@@ -84,3 +85,4 @@\n-    \/\/ SHA256withRSA signature algorithm is not allowed for certificate\n-    \/\/ signatures per TLSv1.3 spec. This is regardless of\n-    \/\/ jdk.tls.disabledAlgorithms configuration.\n+    \/\/ SHA256withRSA signature algorithm is not allowed for handshake\n+    \/\/ signatures in TLSv1.3, but it's allowed for certificate\n+    \/\/ signatures. This is regardless of jdk.tls.disabledAlgorithms\n+    \/\/ configuration. We use this difference to construct our test.\n@@ -105,0 +107,6 @@\n+        if (args.length != 1) {\n+            throw new RuntimeException(\"Wrong number of arguments\");\n+        }\n+\n+        boolean disabled = Boolean.parseBoolean(args[0]);\n+\n@@ -106,2 +114,4 @@\n-        System.setProperty(\"jdk.tls.server.disableExtensions\",\n-                \"signature_algorithms_cert\");\n+        if (disabled) {\n+            System.setProperty(\"jdk.tls.server.disableExtensions\",\n+                    \"signature_algorithms_cert\");\n+        }\n@@ -109,2 +119,3 @@\n-        \/\/ Should run fine on TLSv1.2 because SHA256withRSA signature algorithm\n-        \/\/ is allowed for certificates in TLSv1.2.\n+        \/\/ Should always run fine on TLSv1.2 because SHA256withRSA signature\n+        \/\/ algorithm is allowed for both handshake and certificates signatures\n+        \/\/ in TLSv1.2.\n@@ -113,4 +124,7 @@\n-        \/\/ Should fail for \"TLSv1.3\" and \"TLS\". It fails for \"TLS\" because the\n-        \/\/ protocol is already negotiated when server sends CertificateRequest\n-        \/\/ message.\n-        for (String protocol : new String[]{\"TLS\", \"TLSv1.3\"}) {\n+        var tls13Test = new DisableCertSignAlgsExtForServerTLS13(\"TLSv1.3\");\n+\n+        if (disabled) {\n+            \/\/ Fails with \"signature_algorithms_cert\" extension disabled\n+            \/\/ because in such case we use of an intersection of signature\n+            \/\/ schemes allowed for handshake signatures and for the certificate\n+            \/\/ signatures for \"signature_algorithms\" extension.\n@@ -118,2 +132,1 @@\n-                    () -> new DisableCertSignAlgsExtForServerTLS13(\n-                            protocol).run(),\n+                    tls13Test::run,\n@@ -133,0 +146,3 @@\n+        } else {\n+            \/\/ Runs fine with \"signature_algorithms_cert\" extension present.\n+            tls13Test.run();\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableCertSignAlgsExtForServerTLS13.java","additions":42,"deletions":26,"binary":false,"changes":68,"status":"modified"}]}