{"files":[{"patch":"@@ -5877,1 +5877,1 @@\n-\/\/ you want to use it elsewhere, note that cnt must be >= CacheLineSize.\n+\/\/ you want to use it elsewhere, note that cnt must be >= zicboz_block_size.\n@@ -5879,0 +5879,1 @@\n+  int zicboz_blk_size = VM_Version::zicboz_block_size.value();\n@@ -5883,1 +5884,1 @@\n-  andi(tmp1, tmp1, CacheLineSize - 1);\n+  andi(tmp1, tmp1, zicboz_blk_size - 1);\n@@ -5893,1 +5894,1 @@\n-  for (int i = -CacheLineSize + wordSize; i < 0; i += wordSize) {\n+  for (int i = -zicboz_blk_size + wordSize; i < 0; i += wordSize) {\n@@ -5898,1 +5899,1 @@\n-  mv(tmp1, CacheLineSize \/ wordSize);\n+  mv(tmp1, zicboz_blk_size \/ wordSize);\n@@ -5902,1 +5903,1 @@\n-  addi(base, base, CacheLineSize);\n+  addi(base, base, zicboz_blk_size);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -184,1 +184,2 @@\n-  if (UseZicboz) {\n+  if (UseZicboz && zicboz_block_size.enabled() && zicboz_block_size.value() > 0) {\n+    assert(is_power_of_2(zicboz_block_size.value()), \"Sanity\");\n@@ -189,1 +190,1 @@\n-      FLAG_SET_DEFAULT(BlockZeroingLowLimit, 2 * CacheLineSize);\n+      FLAG_SET_DEFAULT(BlockZeroingLowLimit, 2 * zicboz_block_size.value());\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -163,39 +163,40 @@\n-  #define RV_FEATURE_FLAGS(decl)                                                                    \\\n-  decl(ext_I           , \"i\"           ,    ('I' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_M           , \"m\"           ,    ('M' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_A           , \"a\"           ,    ('A' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_F           , \"f\"           ,    ('F' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_D           , \"d\"           ,    ('D' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_C           , \"c\"           ,    ('C' - 'A'), true , UPDATE_DEFAULT(UseRVC))             \\\n-  decl(ext_Q           , \"q\"           ,    ('Q' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_H           , \"h\"           ,    ('H' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_V           , \"v\"           ,    ('V' - 'A'), true , UPDATE_DEFAULT(UseRVV))             \\\n-  decl(ext_Zicbom      , \"Zicbom\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbom))          \\\n-  decl(ext_Zicboz      , \"Zicboz\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicboz))          \\\n-  decl(ext_Zicbop      , \"Zicbop\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbop))          \\\n-  decl(ext_Zba         , \"Zba\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZba))             \\\n-  decl(ext_Zbb         , \"Zbb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbb))             \\\n-  decl(ext_Zbc         , \"Zbc\"         , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zbs         , \"Zbs\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbs))             \\\n-  decl(ext_Zbkb        , \"Zbkb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbkb))            \\\n-  decl(ext_Zcb         , \"Zcb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZcb))             \\\n-  decl(ext_Zfa         , \"Zfa\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfa))             \\\n-  decl(ext_Zfh         , \"Zfh\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfh))             \\\n-  decl(ext_Zfhmin      , \"Zfhmin\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfhmin))          \\\n-  decl(ext_Zicsr       , \"Zicsr\"       , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zicntr      , \"Zicntr\"      , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zifencei    , \"Zifencei\"    , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zic64b      , \"Zic64b\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZic64b))          \\\n-  decl(ext_Ztso        , \"Ztso\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZtso))            \\\n-  decl(ext_Zihintpause , \"Zihintpause\" , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZihintpause))     \\\n-  decl(ext_Zacas       , \"Zacas\"       , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZacas))           \\\n-  decl(ext_Zvbb        , \"Zvbb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbb, ext_V)) \\\n-  decl(ext_Zvbc        , \"Zvbc\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbc, ext_V)) \\\n-  decl(ext_Zvfh        , \"Zvfh\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvfh, ext_V)) \\\n-  decl(ext_Zvkn        , \"Zvkn\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvkn, ext_V)) \\\n-  decl(ext_Zicond      , \"Zicond\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicond))          \\\n-  decl(mvendorid       , \"VendorId\"    , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n-  decl(marchid         , \"ArchId\"      , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n-  decl(mimpid          , \"ImpId\"       , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n-  decl(unaligned_access, \"Unaligned\"   , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n-  decl(satp_mode       , \"SATP\"        , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  #define RV_FEATURE_FLAGS(decl)                                                                        \\\n+  decl(ext_I            , \"i\"              ,    ('I' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_M            , \"m\"              ,    ('M' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_A            , \"a\"              ,    ('A' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_F            , \"f\"              ,    ('F' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_D            , \"d\"              ,    ('D' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_C            , \"c\"              ,    ('C' - 'A'), true , UPDATE_DEFAULT(UseRVC))             \\\n+  decl(ext_Q            , \"q\"              ,    ('Q' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_H            , \"h\"              ,    ('H' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_V            , \"v\"              ,    ('V' - 'A'), true , UPDATE_DEFAULT(UseRVV))             \\\n+  decl(ext_Zicbom       , \"Zicbom\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbom))          \\\n+  decl(ext_Zicboz       , \"Zicboz\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicboz))          \\\n+  decl(ext_Zicbop       , \"Zicbop\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbop))          \\\n+  decl(ext_Zba          , \"Zba\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZba))             \\\n+  decl(ext_Zbb          , \"Zbb\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbb))             \\\n+  decl(ext_Zbc          , \"Zbc\"            , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zbs          , \"Zbs\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbs))             \\\n+  decl(ext_Zbkb         , \"Zbkb\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbkb))            \\\n+  decl(ext_Zcb          , \"Zcb\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZcb))             \\\n+  decl(ext_Zfa          , \"Zfa\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfa))             \\\n+  decl(ext_Zfh          , \"Zfh\"            , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfh))             \\\n+  decl(ext_Zfhmin       , \"Zfhmin\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfhmin))          \\\n+  decl(ext_Zicsr        , \"Zicsr\"          , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zicntr       , \"Zicntr\"         , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zifencei     , \"Zifencei\"       , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zic64b       , \"Zic64b\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZic64b))          \\\n+  decl(ext_Ztso         , \"Ztso\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZtso))            \\\n+  decl(ext_Zihintpause  , \"Zihintpause\"    , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZihintpause))     \\\n+  decl(ext_Zacas        , \"Zacas\"          , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZacas))           \\\n+  decl(ext_Zvbb         , \"Zvbb\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbb, ext_V)) \\\n+  decl(ext_Zvbc         , \"Zvbc\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbc, ext_V)) \\\n+  decl(ext_Zvfh         , \"Zvfh\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvfh, ext_V)) \\\n+  decl(ext_Zvkn         , \"Zvkn\"           , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvkn, ext_V)) \\\n+  decl(ext_Zicond       , \"Zicond\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicond))          \\\n+  decl(mvendorid        , \"VendorId\"       , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(marchid          , \"ArchId\"         , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(mimpid           , \"ImpId\"          , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(unaligned_access , \"Unaligned\"      , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(satp_mode        , \"SATP\"           , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(zicboz_block_size, \"ZicbozBlockSize\", RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":40,"deletions":39,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -92,0 +92,2 @@\n+#define RISCV_HWPROBE_KEY_ZICBOZ_BLOCK_SIZE 6\n+\n@@ -117,1 +119,2 @@\n-                                       {RISCV_HWPROBE_KEY_CPUPERF_0,     0}};\n+                                       {RISCV_HWPROBE_KEY_CPUPERF_0,     0},\n+                                       {RISCV_HWPROBE_KEY_ZICBOZ_BLOCK_SIZE, 0}};\n@@ -247,0 +250,3 @@\n+  if (is_valid(RISCV_HWPROBE_KEY_ZICBOZ_BLOCK_SIZE)) {\n+    VM_Version::zicboz_block_size.enable_feature(query[RISCV_HWPROBE_KEY_ZICBOZ_BLOCK_SIZE].value);\n+  }\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/riscv_hwprobe.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}