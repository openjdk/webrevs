{"files":[{"patch":"@@ -1416,1 +1416,0 @@\n-  const int MOVPTR_INSTRUCTIONS_NUM = 6;                                        \/\/ lui + addi + slli + addi + slli + addi\/jalr\/load\n@@ -1423,1 +1422,1 @@\n-  return MOVPTR_INSTRUCTIONS_NUM * NativeInstruction::instruction_size;\n+  return NativeMovConstReg::movptr1_instruction_size;\n@@ -1443,1 +1442,1 @@\n-  return 5 * NativeInstruction::instruction_size;                                                                 \/\/ lui + lui + slli + add + addi\/jalr\/load\n+  return NativeMovConstReg::movptr2_instruction_size;\n@@ -1517,1 +1516,1 @@\n-static address get_target_of_movptr(address insn_addr) {\n+static address get_target_of_movptr1(address insn_addr) {\n@@ -1565,1 +1564,1 @@\n-  } else if (NativeInstruction::is_movptr1_at(instruction_address)) {              \/\/ movptr\n+  } else if (NativeInstruction::is_movptr1_at(instruction_address)) {              \/\/ movptr1\n@@ -1597,2 +1596,2 @@\n-  } else if (NativeInstruction::is_movptr1_at(insn_addr)) {          \/\/ movptr\n-    return get_target_of_movptr(insn_addr);\n+  } else if (NativeInstruction::is_movptr1_at(insn_addr)) {          \/\/ movptr1\n+    return get_target_of_movptr1(insn_addr);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -380,2 +380,2 @@\n-    movptr1_instruction_size            =    6 * NativeInstruction::instruction_size, \/\/ lui, addi, slli, addi, slli, addi.  See movptr().\n-    movptr2_instruction_size            =    5 * NativeInstruction::instruction_size, \/\/ lui, lui, slli, add, addi.  See movptr2_imp().\n+    movptr1_instruction_size            =    6 * NativeInstruction::instruction_size, \/\/ lui, addi, slli, addi, slli, addi.  See movptr1().\n+    movptr2_instruction_size            =    5 * NativeInstruction::instruction_size, \/\/ lui, lui, slli, add, addi.  See movptr2().\n@@ -400,3 +400,0 @@\n-    } else if (is_load_pc_relative_at(instruction_address())) {\n-      \/\/ Assume: auipc, ld\n-      return addr_at(load_pc_relative_instruction_size);\n@@ -411,0 +408,3 @@\n+    } else if (is_load_pc_relative_at(instruction_address())) {\n+      \/\/ Assume: auipc, ld\n+      return addr_at(load_pc_relative_instruction_size);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1290,1 +1290,1 @@\n-  \/\/ Though movptr() has already 4-byte aligned with or without RVC,\n+  \/\/ Though movptr2() has already 4-byte aligned with or without RVC,\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}