{"files":[{"patch":"@@ -1721,1 +1721,1 @@\n-     * <li>Return the original value if {@code alwaysQuote} is\n+     * <li>Return the original value if {@code alwaysDelimit} is\n@@ -1723,1 +1723,1 @@\n-     * <li>Return a delimited identifier if {@code alwaysQuote} is\n+     * <li>Return a delimited identifier if {@code alwaysDelimit} is\n@@ -1761,1 +1761,1 @@\n-     * <th scope=\"col\">alwaysQuote<\/th>\n+     * <th scope=\"col\">alwaysDelimit<\/th>\n@@ -1813,2 +1813,2 @@\n-     * @param alwaysQuote indicates if a simple SQL identifier should be\n-     * returned as a quoted identifier\n+     * @param alwaysDelimit indicates if a simple SQL identifier should be\n+     * returned as a delmited identifier\n@@ -1823,2 +1823,2 @@\n-    default String enquoteIdentifier(String identifier, boolean alwaysQuote) throws SQLException {\n-        return SQLUtils.enquoteIdentifier(identifier, alwaysQuote);\n+    default String enquoteIdentifier(String identifier, boolean alwaysDelimit) throws SQLException {\n+        return SQLUtils.enquoteIdentifier(identifier, alwaysDelimit);\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Connection.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-     * <li>Return the original value if {@code alwaysQuote} is\n+     * <li>Return the original value if {@code alwaysDelimit} is\n@@ -81,1 +81,1 @@\n-     * <li>Return a delimited identifier if {@code alwaysQuote} is\n+     * <li>Return a delimited identifier if {@code alwaysDelimit} is\n@@ -98,1 +98,1 @@\n-     * @param alwaysQuote indicates if a simple SQL identifier should be\n+     * @param alwaysDelimit indicates if a simple SQL identifier should be\n@@ -126,1 +126,1 @@\n-     * <th scope=\"col\">alwaysQuote<\/th>\n+     * <th scope=\"col\">alwaysDelimit<\/th>\n@@ -177,1 +177,1 @@\n-    static String enquoteIdentifier(String identifier, boolean alwaysQuote) throws SQLException {\n+    static String enquoteIdentifier(String identifier, boolean alwaysDelimit) throws SQLException {\n@@ -183,1 +183,1 @@\n-            return alwaysQuote ? \"\\\"\" + identifier + \"\\\"\" : identifier;\n+            return alwaysDelimit ? \"\\\"\" + identifier + \"\\\"\" : identifier;\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLUtils.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1414,1 +1414,1 @@\n-     * <li>Return the original value if {@code alwaysQuote} is\n+     * <li>Return the original value if {@code alwaysDelimit} is\n@@ -1416,1 +1416,1 @@\n-     * <li>Return a delimited identifier if {@code alwaysQuote} is\n+     * <li>Return a delimited identifier if {@code alwaysDelimit} is\n@@ -1454,1 +1454,1 @@\n-     * <th scope=\"col\">alwaysQuote<\/th>\n+     * <th scope=\"col\">alwaysDelimit<\/th>\n@@ -1506,2 +1506,2 @@\n-     * @param alwaysQuote indicates if a simple SQL identifier should be\n-     * returned as a quoted identifier\n+     * @param alwaysDelimit indicates if a simple SQL identifier should be\n+     * returned as a delimited identifier\n@@ -1516,2 +1516,2 @@\n-    default String enquoteIdentifier(String identifier, boolean alwaysQuote) throws SQLException {\n-        return SQLUtils.enquoteIdentifier(identifier, alwaysQuote);\n+    default String enquoteIdentifier(String identifier, boolean alwaysDelimit) throws SQLException {\n+        return SQLUtils.enquoteIdentifier(identifier, alwaysDelimit);\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Statement.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}