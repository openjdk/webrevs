{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import jdk.test.lib.Platform;\n@@ -43,9 +44,19 @@\n-        Recording recording = new Recording();\n-        recording.enable(EVENT_NAME);\n-        recording.start();\n-        recording.stop();\n-        List<RecordedEvent> events = Events.fromRecording(recording);\n-        Events.hasEvents(events);\n-        for (RecordedEvent event : events) {\n-            System.out.println(\"Event: \" + event);\n-            Events.assertField(event, \"switchRate\").atLeast(0.0f);\n+        while (true) {\n+            try (Recording recording = new Recording()) {\n+                recording.enable(EVENT_NAME);\n+                recording.start();\n+                recording.stop();\n+                List<RecordedEvent> events = Events.fromRecording(recording);\n+                if (!events.isEmpty()) {\n+                    for (RecordedEvent event : events) {\n+                        System.out.println(\"Event: \" + event);\n+                        Events.assertField(event, \"switchRate\").atLeast(0.0f);\n+                    }\n+                    return;\n+                }\n+                \/\/ Thread context switch rate is unreliable on Windows because\n+                \/\/ the way processes are identified with performance counters.\n+                if (!Platform.isWindows()) {\n+                    Events.hasEvents(events);\n+                }\n+            }\n","filename":"test\/jdk\/jdk\/jfr\/event\/os\/TestThreadContextSwitches.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"}]}