{"files":[{"patch":"@@ -566,1 +566,1 @@\n-    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -utf-8 -Zc:wchar_t-\"\n+    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -permissive- -utf-8 -Zc:wchar_t-\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-void D3DGlyphCache_FlushGlyphVertexCache();\n+static void D3DGlyphCache_FlushGlyphVertexCache();\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DGlyphCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,3 +205,2 @@\n-void AwtCanvas::_SetEraseBackground(void *param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtCanvas::_SetEraseBackground(void *param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -209,1 +208,1 @@\n-    SetEraseBackgroundStruct *sebs = (SetEraseBackgroundStruct *)param;\n+    SetEraseBackgroundStruct *sebs = static_cast<SetEraseBackgroundStruct *>(param);\n@@ -215,1 +214,14 @@\n-    JNI_CHECK_PEER_GOTO(canvas, ret);\n+    if (canvas == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"canvas\");\n+        delete sebs;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(canvas);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(canvas);\n+            env->DeleteGlobalRef(canvas);\n+            delete sebs;\n+            return;\n+        }\n+    }\n@@ -217,1 +229,1 @@\n-    AwtCanvas *c = (AwtCanvas*)pData;\n+    AwtCanvas *c = (AwtCanvas*) pData;\n@@ -221,1 +233,0 @@\n-ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Canvas.cpp","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -6359,2 +6359,1 @@\n-void AwtComponent::_SetParent(void * param)\n-{\n+void AwtComponent::_SetParent(void * param) {\n@@ -6362,2 +6361,2 @@\n-        JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n-        SetParentStruct *data = (SetParentStruct*) param;\n+        JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+        SetParentStruct *data = static_cast<SetParentStruct*>(param);\n@@ -6367,2 +6366,2 @@\n-        AwtComponent *awtComponent = NULL;\n-        AwtComponent *awtParent = NULL;\n+        AwtComponent *awtComponent = nullptr;\n+        AwtComponent *awtParent = nullptr;\n@@ -6371,4 +6370,34 @@\n-        JNI_CHECK_PEER_GOTO(self, ret);\n-        awtComponent = (AwtComponent *)pData;\n-        JNI_CHECK_PEER_GOTO(parent, ret);\n-        awtParent = (AwtComponent *)pData;\n+        if (self == NULL) {\n+            env->ExceptionClear();\n+            JNU_ThrowNullPointerException(env, \"peer\");\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        awtComponent = (AwtComponent *) pData;\n+        if (parent == NULL) {\n+            env->ExceptionClear();\n+            JNU_ThrowNullPointerException(env, \"peer\");\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        pData = JNI_GET_PDATA(parent);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(parent);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        awtParent = (AwtComponent *) pData;\n@@ -6383,1 +6412,1 @@\n-ret:\n+\n@@ -6538,2 +6567,1 @@\n-static void _GetInsets(void* param)\n-{\n+static void _GetInsets(void* param) {\n@@ -6542,1 +6570,1 @@\n-    GetInsetsStruct *gis = (GetInsetsStruct *)param;\n+    GetInsetsStruct *gis = static_cast<GetInsetsStruct *>(param);\n@@ -6549,2 +6577,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtComponent *component = (AwtComponent *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete gis;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete gis;\n+            return;\n+        }\n+    }\n+    AwtComponent *component = (AwtComponent *) pData;\n@@ -6554,1 +6595,0 @@\n-  ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":57,"deletions":17,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-#include <awt.h>\n@@ -45,0 +44,4 @@\n+\/\/ Don't want to pull in the redefined allocation functions\n+#include \"awt_ole.h\"\n+#include \"awt_DCHolder.h\"\n+\n@@ -46,0 +49,1 @@\n+#include \"awt.h\"\n@@ -57,3 +61,0 @@\n-#include \"awt_ole.h\"\n-#include \"awt_DCHolder.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDS.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+\/\/ Don't want to pull in the redefined allocation functions\n+#include \"awt_ole.h\"\n@@ -34,1 +36,0 @@\n-#include \"awt_ole.h\"\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDT.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1339,3 +1339,2 @@\n-void AwtFrame::_SetState(void *param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtFrame::_SetState(void *param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -1343,1 +1342,1 @@\n-    SetStateStruct *sss = (SetStateStruct *)param;\n+    SetStateStruct *sss = static_cast<SetStateStruct *>(param);\n@@ -1347,1 +1346,1 @@\n-    AwtFrame *f = NULL;\n+    AwtFrame *f = nullptr;\n@@ -1350,2 +1349,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    f = (AwtFrame *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete sss;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete sss;\n+            return;\n+        }\n+    }\n+    f = (AwtFrame *) pData;\n@@ -1353,2 +1365,1 @@\n-    if (::IsWindow(hwnd))\n-    {\n+    if (::IsWindow(hwnd)) {\n@@ -1408,1 +1419,1 @@\n-ret:\n+\n@@ -1570,1 +1581,1 @@\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -1572,1 +1583,1 @@\n-    NotifyModalBlockedStruct *nmbs = (NotifyModalBlockedStruct *)param;\n+    NotifyModalBlockedStruct *nmbs = static_cast<NotifyModalBlockedStruct *>(param);\n@@ -1580,2 +1591,21 @@\n-    JNI_CHECK_PEER_GOTO(peer, ret);\n-    AwtFrame *f = (AwtFrame *)pData;\n+    if (peer == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"peer\");\n+        env->DeleteGlobalRef(self);\n+        env->DeleteGlobalRef(blockerPeer);\n+\n+        delete nmbs;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(peer);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(peer);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(peer);\n+            env->DeleteGlobalRef(blockerPeer);\n+\n+            delete nmbs;\n+            return;\n+        }\n+    }\n+    AwtFrame *f = (AwtFrame *) pData;\n@@ -1585,2 +1615,5 @@\n-    JNI_CHECK_PEER_GOTO(blockerPeer, ret);\n-    AwtDialog *d = (AwtDialog *)pData;\n+    if (blockerPeer == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"blockerPeer\");\n+        env->DeleteGlobalRef(self);\n+        env->DeleteGlobalRef(peer);\n@@ -1588,2 +1621,17 @@\n-    if ((f != NULL) && ::IsWindow(f->GetHWnd()))\n-    {\n+        delete nmbs;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(blockerPeer);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(blockerPeer);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(peer);\n+            env->DeleteGlobalRef(blockerPeer);\n+\n+            delete nmbs;\n+            return;\n+        }\n+    }\n+    AwtDialog *dialog = (AwtDialog *) pData;\n+\n+    if ((f != NULL) && ::IsWindow(f->GetHWnd())) {\n@@ -1606,1 +1654,1 @@\n-                BlockedThreadStruct *blockedThread = (BlockedThreadStruct *)sm_BlockedThreads.get((void *)((intptr_t)fThread));\n+                BlockedThreadStruct *blockedThread = (BlockedThreadStruct *) sm_BlockedThreads.get((void *)((intptr_t)fThread));\n@@ -1637,1 +1685,1 @@\n-ret:\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Frame.cpp","additions":68,"deletions":20,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -38,4 +38,4 @@\n-    static jfieldID AwtPrintDialog::controlID;\n-    static jfieldID AwtPrintDialog::parentID;\n-    static jfieldID AwtPrintDialog::pageID;\n-    static jmethodID AwtPrintDialog::setHWndMID;\n+    static jfieldID controlID;\n+    static jfieldID parentID;\n+    static jfieldID pageID;\n+    static jmethodID setHWndMID;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintDialog.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+jfieldID AwtPrintDialog::pageID;\n+\n@@ -212,1 +214,0 @@\n-jfieldID AwtPrintDialog::pageID;\n@@ -504,2 +505,1 @@\n-Java_sun_awt_windows_WPageDialogPeer__1show(JNIEnv *env, jobject peer)\n-{\n+Java_sun_awt_windows_WPageDialogPeer__1show(JNIEnv *env, jobject peer) {\n@@ -543,2 +543,1 @@\n-    else if (awtParent != NULL)\n-    {\n+    else if (awtParent != NULL) {\n@@ -546,3 +545,1 @@\n-    }\n-    else\n-    {\n+    } else {\n@@ -575,1 +572,1 @@\n-        (void)::PageSetupDlg(&setup);\n+        static_cast<void>(::PageSetupDlg(&setup));\n@@ -581,1 +578,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -587,1 +594,1 @@\n-          LPTSTR str = (LPTSTR)SAFE_SIZE_ARRAY_ALLOC(safe_Malloc, sizeof(TCHAR), sz);\n+          LPTSTR str = (LPTSTR) SAFE_SIZE_ARRAY_ALLOC(safe_Malloc, sizeof(TCHAR), sz);\n@@ -609,1 +616,11 @@\n-        goto done;\n+        env->DeleteGlobalRef(peerGlobalRef);\n+        if (target != NULL) {\n+            env->DeleteLocalRef(target);\n+        }\n+        if (parent != NULL) {\n+            env->DeleteLocalRef(parent);\n+        }\n+        env->DeleteLocalRef(page);\n+        env->DeleteLocalRef(self);\n+\n+        return doIt;\n@@ -617,2 +634,2 @@\n-    BOOL ret = ::PageSetupDlg(&setup);\n-    if (ret) {\n+    BOOL result = ::PageSetupDlg(&setup);\n+    if (result) {\n@@ -623,1 +640,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -663,3 +690,13 @@\n-         if (env->ExceptionCheck()) {\n-             doIt = JNI_FALSE;\n-             goto done;\n+        if (env->ExceptionCheck()) {\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -673,2 +710,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -678,2 +725,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -688,1 +745,11 @@\n-                        goto done;\n+                        env->DeleteGlobalRef(peerGlobalRef);\n+                        if (target != NULL) {\n+                            env->DeleteLocalRef(target);\n+                        }\n+                        if (parent != NULL) {\n+                            env->DeleteLocalRef(parent);\n+                        }\n+                        env->DeleteLocalRef(page);\n+                        env->DeleteLocalRef(self);\n+\n+                        return doIt;\n@@ -711,1 +778,1 @@\n-done:\n+\n@@ -922,1 +989,18 @@\n-    JNI_CHECK_NULL_GOTO(printDC, \"Invalid printDC\", done);\n+    if (printDC == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"Invalid printDC\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -943,1 +1027,18 @@\n-    JNI_CHECK_NULL_GOTO(paperClass, \"paper class not found\", done);\n+    if (paperClass == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"paper class not found\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -945,1 +1046,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getWidth method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getWidth method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -948,1 +1066,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getHeight method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getHeight method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -951,1 +1086,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getX method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getX method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -954,1 +1106,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getY method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getY method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -957,1 +1126,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getW method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getW method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -960,1 +1146,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getH method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getH method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -1008,4 +1211,4 @@\n-    jdouble imgX = (jdouble)((xPixelOrg * 72)\/(jdouble)xPixelRes);\n-    jdouble imgY = (jdouble)((yPixelOrg * 72)\/(jdouble)yPixelRes);\n-    jdouble imgWid = (jdouble)((imgPixelWid * 72)\/(jdouble)xPixelRes);\n-    jdouble imgHgt = (jdouble)((imgPixelHgt * 72)\/(jdouble)yPixelRes);\n+    jdouble imgX = (jdouble) ((xPixelOrg * 72)\/(jdouble) xPixelRes);\n+    jdouble imgY = (jdouble) ((yPixelOrg * 72)\/(jdouble) yPixelRes);\n+    jdouble imgWid = (jdouble) ((imgPixelWid * 72)\/(jdouble) xPixelRes);\n+    jdouble imgHgt = (jdouble) ((imgPixelHgt * 72)\/(jdouble) yPixelRes);\n@@ -1054,0 +1257,18 @@\n+    if (setSizeID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setSize method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -1057,1 +1278,19 @@\n-    JNI_CHECK_NULL_GOTO(setImageableID, \"no setImageable method\", done);\n+    if (setImageableID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setImageable method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n+\n@@ -1062,1 +1301,1 @@\n-done:\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":277,"deletions":38,"binary":false,"changes":315,"status":"modified"},{"patch":"@@ -56,0 +56,4 @@\n+jmethodID AwtTextComponent::canAccessClipboardMID;\n+AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n+WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n+\n@@ -60,2 +64,0 @@\n-jmethodID AwtTextComponent::canAccessClipboardMID;\n-\n@@ -914,2 +916,0 @@\n-AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n-\n@@ -1043,2 +1043,0 @@\n-WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_TextComponent.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1017,3 +1017,2 @@\n-void AwtWindow::_RepositionSecurityWarning(void* param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_RepositionSecurityWarning(void* param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -1022,1 +1021,1 @@\n-        (RepositionSecurityWarningStruct *)param;\n+        static_cast<RepositionSecurityWarningStruct *>(param);\n@@ -1026,2 +1025,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete rsws;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete rsws;\n+            return;\n+        }\n+    }\n+    AwtWindow *window = (AwtWindow *) pData;\n@@ -1031,1 +1043,0 @@\n-  ret:\n@@ -3115,3 +3126,2 @@\n-void AwtWindow::_ModalDisable(void *param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_ModalDisable(void *param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -3119,1 +3129,1 @@\n-    ModalDisableStruct *mds = (ModalDisableStruct *)param;\n+    ModalDisableStruct *mds = static_cast<ModalDisableStruct *>(param);\n@@ -3126,4 +3136,3 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n-    PDATA pData = JNI_GET_PDATA(self);\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n@@ -3132,0 +3141,7 @@\n+    } else {\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            delete mds;\n+            return;\n+        }\n@@ -3134,1 +3150,1 @@\n-    window = (AwtWindow *)pData;\n+    window = (AwtWindow *) pData;\n@@ -3140,1 +3156,0 @@\n-ret:\n@@ -3146,3 +3161,2 @@\n-void AwtWindow::_ModalEnable(void *param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_ModalEnable(void *param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -3150,1 +3164,1 @@\n-    jobject self = (jobject)param;\n+    jobject self = static_cast<jobject>(param);\n@@ -3155,4 +3169,3 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n-    PDATA pData = JNI_GET_PDATA(self);\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n@@ -3160,0 +3173,6 @@\n+    } else {\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            return;\n+        }\n@@ -3168,1 +3187,0 @@\n-  ret:\n@@ -3172,3 +3190,2 @@\n-void AwtWindow::_SetOpacity(void* param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_SetOpacity(void* param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -3176,1 +3193,1 @@\n-    OpacityStruct *os = (OpacityStruct *)param;\n+    OpacityStruct *os = static_cast<OpacityStruct *>(param);\n@@ -3178,1 +3195,1 @@\n-    BYTE iOpacity = (BYTE)os->iOpacity;\n+    BYTE iOpacity = (BYTE) os->iOpacity;\n@@ -3181,1 +3198,14 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete os;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete os;\n+            return;\n+        }\n+    }\n@@ -3186,1 +3216,0 @@\n-  ret:\n@@ -3191,3 +3220,2 @@\n-void AwtWindow::_SetOpaque(void* param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_SetOpaque(void* param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -3195,1 +3223,1 @@\n-    OpaqueStruct *os = (OpaqueStruct *)param;\n+    OpaqueStruct *os = static_cast<OpaqueStruct *>(param);\n@@ -3200,2 +3228,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete os;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete os;\n+            return;\n+        }\n+    }\n+    AwtWindow *window = (AwtWindow *) pData;\n@@ -3205,1 +3246,0 @@\n-  ret:\n@@ -3210,3 +3250,2 @@\n-void AwtWindow::_UpdateWindow(void* param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtWindow::_UpdateWindow(void* param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n@@ -3214,1 +3253,1 @@\n-    UpdateWindowStruct *uws = (UpdateWindowStruct *)param;\n+    UpdateWindowStruct *uws = static_cast<UpdateWindowStruct *>(param);\n@@ -3219,2 +3258,21 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        if (data != NULL) {\n+            env->DeleteGlobalRef(data);\n+        }\n+        delete uws;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            if (data != NULL) {\n+                env->DeleteGlobalRef(data);\n+            }\n+            delete uws;\n+            return;\n+        }\n+    }\n+    AwtWindow *window = (AwtWindow *) pData;\n@@ -3222,1 +3280,1 @@\n-    window->UpdateWindow(env, data, (int)uws->width, (int)uws->height,\n+    window->UpdateWindow(env, data, (int) uws->width, (int) uws->height,\n@@ -3225,1 +3283,0 @@\n-  ret:\n@@ -3244,0 +3301,14 @@\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete data;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete data;\n+            return;\n+        }\n+    }\n@@ -3248,1 +3319,0 @@\n-  ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Window.cpp","additions":119,"deletions":49,"binary":false,"changes":168,"status":"modified"},{"patch":"@@ -1028,1 +1028,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1098,1 +1098,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1155,1 +1155,1 @@\n-        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1164,1 +1164,1 @@\n-        return (AccessibleContext)0;\n+        return reinterpret_cast<jobject>((AccessibleContext) 0);\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeJavaEntryPoints.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}