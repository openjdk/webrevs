{"files":[{"patch":"@@ -505,2 +505,1 @@\n-Java_sun_awt_windows_WPageDialogPeer__1show(JNIEnv *env, jobject peer)\n-{\n+Java_sun_awt_windows_WPageDialogPeer__1show(JNIEnv *env, jobject peer) {\n@@ -579,1 +578,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -585,1 +594,1 @@\n-          LPTSTR str = (LPTSTR)SAFE_SIZE_ARRAY_ALLOC(safe_Malloc, sizeof(TCHAR), sz);\n+          LPTSTR str = (LPTSTR) SAFE_SIZE_ARRAY_ALLOC(safe_Malloc, sizeof(TCHAR), sz);\n@@ -607,1 +616,11 @@\n-        goto done;\n+        env->DeleteGlobalRef(peerGlobalRef);\n+        if (target != NULL) {\n+            env->DeleteLocalRef(target);\n+        }\n+        if (parent != NULL) {\n+            env->DeleteLocalRef(parent);\n+        }\n+        env->DeleteLocalRef(page);\n+        env->DeleteLocalRef(self);\n+\n+        return doIt;\n@@ -615,2 +634,1 @@\n-    BOOL result;\n-    result = ::PageSetupDlg(&setup);\n+    BOOL result = ::PageSetupDlg(&setup);\n@@ -622,1 +640,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -662,3 +690,13 @@\n-         if (env->ExceptionCheck()) {\n-             doIt = JNI_FALSE;\n-             goto done;\n+        if (env->ExceptionCheck()) {\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -672,2 +710,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -677,2 +725,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -687,1 +745,11 @@\n-                        goto done;\n+                        env->DeleteGlobalRef(peerGlobalRef);\n+                        if (target != NULL) {\n+                            env->DeleteLocalRef(target);\n+                        }\n+                        if (parent != NULL) {\n+                            env->DeleteLocalRef(parent);\n+                        }\n+                        env->DeleteLocalRef(page);\n+                        env->DeleteLocalRef(self);\n+\n+                        return doIt;\n@@ -700,2 +768,1 @@\n-    HGLOBAL oldG;\n-    oldG = AwtPrintControl::getPrintHDMode(env, self);\n+    HGLOBAL oldG = AwtPrintControl::getPrintHDMode(env, self);\n@@ -711,1 +778,1 @@\n-done:\n+\n@@ -922,0 +989,19 @@\n+    if (printDC == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"Invalid printDC\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n+\n@@ -930,2 +1016,0 @@\n-    JNI_CHECK_NULL_GOTO(printDC, \"Invalid printDC\", done);\n-\n@@ -934,2 +1018,1 @@\n-    WORD dmPaperSize;\n-    dmPaperSize = getPrintPaperSize(env, &err, self);\n+    WORD dmPaperSize = getPrintPaperSize(env, &err, self);\n@@ -943,3 +1026,19 @@\n-    jclass paperClass;\n-    paperClass = env->GetObjectClass(origPaper);\n-    JNI_CHECK_NULL_GOTO(paperClass, \"paper class not found\", done);\n+    jclass paperClass = env->GetObjectClass(origPaper);\n+    if (paperClass == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"paper class not found\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -947,1 +1046,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getWidth method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getWidth method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -950,1 +1066,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getHeight method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getHeight method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -953,1 +1086,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getX method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getX method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -956,1 +1106,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getY method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getY method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -959,1 +1126,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getW method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getW method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -962,1 +1146,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getH method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getH method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -971,2 +1172,2 @@\n-    jint xPixelRes;\n-    jint yPixelRes;\n+    jint xPixelRes = GetDeviceCaps(printDC, LOGPIXELSX);\n+    jint yPixelRes = GetDeviceCaps(printDC, LOGPIXELSY);\n@@ -975,2 +1176,2 @@\n-    jint xPixelOrg;\n-    jint yPixelOrg;\n+    jint xPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETX);\n+    jint yPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETY);\n@@ -979,11 +1180,2 @@\n-    jint imgPixelWid;\n-    jint imgPixelHgt;\n-\n-    xPixelRes = GetDeviceCaps(printDC, LOGPIXELSX);\n-    yPixelRes = GetDeviceCaps(printDC, LOGPIXELSY);\n-\n-    xPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETX);\n-    yPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETY);\n-\n-    imgPixelWid = GetDeviceCaps(printDC, HORZRES);\n-    imgPixelHgt = GetDeviceCaps(printDC, VERTRES);\n+    jint imgPixelWid = GetDeviceCaps(printDC, HORZRES);\n+    jint imgPixelHgt = GetDeviceCaps(printDC, VERTRES);\n@@ -1019,9 +1211,4 @@\n-    jdouble imgX;\n-    jdouble imgY;\n-    jdouble imgWid;\n-    jdouble imgHgt;\n-\n-    imgX = (jdouble)((xPixelOrg * 72)\/(jdouble)xPixelRes);\n-    imgY = (jdouble)((yPixelOrg * 72)\/(jdouble)yPixelRes);\n-    imgWid = (jdouble)((imgPixelWid * 72)\/(jdouble)xPixelRes);\n-    imgHgt = (jdouble)((imgPixelHgt * 72)\/(jdouble)yPixelRes);\n+    jdouble imgX = (jdouble) ((xPixelOrg * 72)\/(jdouble) xPixelRes);\n+    jdouble imgY = (jdouble) ((yPixelOrg * 72)\/(jdouble) yPixelRes);\n+    jdouble imgWid = (jdouble) ((imgPixelWid * 72)\/(jdouble) xPixelRes);\n+    jdouble imgHgt = (jdouble) ((imgPixelHgt * 72)\/(jdouble) yPixelRes);\n@@ -1067,3 +1254,2 @@\n-    jmethodID setSizeID;\n-    setSizeID = env->GetMethodID(paperClass,\n-                              SETSIZE_STR, SETSIZE_SIG);\n+    jmethodID setSizeID = env->GetMethodID(paperClass,\n+                                        SETSIZE_STR, SETSIZE_SIG);\n@@ -1071,0 +1257,39 @@\n+    if (setSizeID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setSize method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n+\n+    jmethodID setImageableID = env->GetMethodID(paperClass,\n+                                        SETIMAGEABLE_STR, SETIMAGEABLE_SIG);\n+    if (setImageableID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setImageable method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -1072,4 +1297,0 @@\n-    jmethodID setImageableID;\n-    setImageableID = env->GetMethodID(paperClass,\n-                              SETIMAGEABLE_STR, SETIMAGEABLE_SIG);\n-    JNI_CHECK_NULL_GOTO(setImageableID, \"no setImageable method\", done);\n@@ -1080,1 +1301,1 @@\n-done:\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":285,"deletions":64,"binary":false,"changes":349,"status":"modified"}]}