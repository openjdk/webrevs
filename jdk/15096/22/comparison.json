{"files":[{"patch":"@@ -566,1 +566,1 @@\n-    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -utf-8 -Zc:wchar_t-\"\n+    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -permissive- -utf-8 -Zc:wchar_t-\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-void D3DGlyphCache_FlushGlyphVertexCache();\n+static void D3DGlyphCache_FlushGlyphVertexCache();\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DGlyphCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,3 +205,7 @@\n-void AwtCanvas::_SetEraseBackground(void *param)\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+void AwtCanvas::_SetEraseBackground(void *param) {\n+    JNIEnv *env = (JNIEnv *) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+\n+    class ResourceGuard final {\n+        JNIEnv* env;\n+        SetEraseBackgroundStruct* background;\n+        jobject canvas;\n@@ -209,1 +213,12 @@\n-    SetEraseBackgroundStruct *sebs = (SetEraseBackgroundStruct *)param;\n+    public:\n+        ResourceGuard(JNIEnv* env, SetEraseBackgroundStruct* background, jobject canvas)\n+            : env(env), background(background), canvas(canvas) {\n+\n+        }\n+        ~ResourceGuard() {\n+            env->DeleteGlobalRef(canvas);\n+            delete background;\n+        }\n+    };\n+\n+    SetEraseBackgroundStruct *sebs = static_cast<SetEraseBackgroundStruct *>(param);\n@@ -214,0 +229,2 @@\n+    ResourceGuard guard(env, sebs, canvas);\n+\n@@ -215,1 +232,1 @@\n-    JNI_CHECK_PEER_GOTO(canvas, ret);\n+    JNI_CHECK_PEER_RETURN(canvas);\n@@ -217,1 +234,1 @@\n-    AwtCanvas *c = (AwtCanvas*)pData;\n+    AwtCanvas *c = (AwtCanvas*) pData;\n@@ -220,4 +237,0 @@\n-\n-ret:\n-    env->DeleteGlobalRef(canvas);\n-    delete sebs;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Canvas.cpp","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -6376,2 +6376,4 @@\n-        HWND selfWnd = awtComponent->GetHWnd();\n-        HWND parentWnd = awtParent->GetHWnd();\n+        HWND selfWnd;\n+        HWND parentWnd;\n+        selfWnd = awtComponent->GetHWnd();\n+        parentWnd = awtParent->GetHWnd();\n@@ -6550,1 +6552,2 @@\n-    AwtComponent *component = (AwtComponent *)pData;\n+    AwtComponent *component;\n+    component = (AwtComponent *) pData;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-#include <awt.h>\n@@ -45,0 +44,4 @@\n+\/\/ Moved here as we don't want to pull in the redefined allocation functions\n+#include \"awt_ole.h\"\n+#include \"awt_DCHolder.h\"\n+\n@@ -46,0 +49,1 @@\n+#include \"awt.h\"\n@@ -57,3 +61,0 @@\n-#include \"awt_ole.h\"\n-#include \"awt_DCHolder.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDS.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"awt_ole.h\"\n@@ -34,1 +35,0 @@\n-#include \"awt_ole.h\"\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDT.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1352,3 +1352,3 @@\n-    HWND hwnd = f->GetHWnd();\n-    if (::IsWindow(hwnd))\n-    {\n+    HWND hwnd;\n+    hwnd = f->GetHWnd();\n+    if (::IsWindow(hwnd)) {\n@@ -1581,1 +1581,2 @@\n-    AwtFrame *f = (AwtFrame *)pData;\n+    AwtFrame *f;\n+    f = (AwtFrame *) pData;\n@@ -1586,1 +1587,2 @@\n-    AwtDialog *d = (AwtDialog *)pData;\n+    AwtDialog *dialog;\n+    dialog = (AwtDialog *) pData;\n@@ -1588,2 +1590,1 @@\n-    if ((f != NULL) && ::IsWindow(f->GetHWnd()))\n-    {\n+    if ((f != NULL) && ::IsWindow(f->GetHWnd())) {\n@@ -1606,1 +1607,1 @@\n-                BlockedThreadStruct *blockedThread = (BlockedThreadStruct *)sm_BlockedThreads.get((void *)((intptr_t)fThread));\n+                BlockedThreadStruct *blockedThread = (BlockedThreadStruct *) sm_BlockedThreads.get((void *)((intptr_t)fThread));\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Frame.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -38,4 +38,4 @@\n-    static jfieldID AwtPrintDialog::controlID;\n-    static jfieldID AwtPrintDialog::parentID;\n-    static jfieldID AwtPrintDialog::pageID;\n-    static jmethodID AwtPrintDialog::setHWndMID;\n+    static jfieldID controlID;\n+    static jfieldID parentID;\n+    static jfieldID pageID;\n+    static jmethodID setHWndMID;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintDialog.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+jfieldID AwtPrintDialog::pageID;\n+\n@@ -212,1 +214,0 @@\n-jfieldID AwtPrintDialog::pageID;\n@@ -543,2 +544,1 @@\n-    else if (awtParent != NULL)\n-    {\n+    else if (awtParent != NULL) {\n@@ -546,3 +546,1 @@\n-    }\n-    else\n-    {\n+    } else {\n@@ -575,1 +573,1 @@\n-        (void)::PageSetupDlg(&setup);\n+        static_cast<void>(::PageSetupDlg(&setup));\n@@ -617,2 +615,3 @@\n-    BOOL ret = ::PageSetupDlg(&setup);\n-    if (ret) {\n+    BOOL result;\n+    result = ::PageSetupDlg(&setup);\n+    if (result) {\n@@ -701,1 +700,2 @@\n-    HGLOBAL oldG = AwtPrintControl::getPrintHDMode(env, self);\n+    HGLOBAL oldG;\n+    oldG = AwtPrintControl::getPrintHDMode(env, self);\n@@ -922,2 +922,0 @@\n-    JNI_CHECK_NULL_GOTO(printDC, \"Invalid printDC\", done);\n-\n@@ -932,0 +930,2 @@\n+    JNI_CHECK_NULL_GOTO(printDC, \"Invalid printDC\", done);\n+\n@@ -934,1 +934,2 @@\n-    WORD dmPaperSize = getPrintPaperSize(env, &err, self);\n+    WORD dmPaperSize;\n+    dmPaperSize = getPrintPaperSize(env, &err, self);\n@@ -942,1 +943,2 @@\n-    jclass paperClass = env->GetObjectClass(origPaper);\n+    jclass paperClass;\n+    paperClass = env->GetObjectClass(origPaper);\n@@ -969,2 +971,2 @@\n-    jint xPixelRes = GetDeviceCaps(printDC, LOGPIXELSX);\n-    jint yPixelRes = GetDeviceCaps(printDC, LOGPIXELSY);\n+    jint xPixelRes;\n+    jint yPixelRes;\n@@ -973,2 +975,2 @@\n-    jint xPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETX);\n-    jint yPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETY);\n+    jint xPixelOrg;\n+    jint yPixelOrg;\n@@ -977,2 +979,11 @@\n-    jint imgPixelWid = GetDeviceCaps(printDC, HORZRES);\n-    jint imgPixelHgt = GetDeviceCaps(printDC, VERTRES);\n+    jint imgPixelWid;\n+    jint imgPixelHgt;\n+\n+    xPixelRes = GetDeviceCaps(printDC, LOGPIXELSX);\n+    yPixelRes = GetDeviceCaps(printDC, LOGPIXELSY);\n+\n+    xPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETX);\n+    yPixelOrg = GetDeviceCaps(printDC, PHYSICALOFFSETY);\n+\n+    imgPixelWid = GetDeviceCaps(printDC, HORZRES);\n+    imgPixelHgt = GetDeviceCaps(printDC, VERTRES);\n@@ -1008,4 +1019,9 @@\n-    jdouble imgX = (jdouble)((xPixelOrg * 72)\/(jdouble)xPixelRes);\n-    jdouble imgY = (jdouble)((yPixelOrg * 72)\/(jdouble)yPixelRes);\n-    jdouble imgWid = (jdouble)((imgPixelWid * 72)\/(jdouble)xPixelRes);\n-    jdouble imgHgt = (jdouble)((imgPixelHgt * 72)\/(jdouble)yPixelRes);\n+    jdouble imgX;\n+    jdouble imgY;\n+    jdouble imgWid;\n+    jdouble imgHgt;\n+\n+    imgX = (jdouble)((xPixelOrg * 72)\/(jdouble)xPixelRes);\n+    imgY = (jdouble)((yPixelOrg * 72)\/(jdouble)yPixelRes);\n+    imgWid = (jdouble)((imgPixelWid * 72)\/(jdouble)xPixelRes);\n+    imgHgt = (jdouble)((imgPixelHgt * 72)\/(jdouble)yPixelRes);\n@@ -1051,2 +1067,3 @@\n-    jmethodID setSizeID = env->GetMethodID(paperClass,\n-                                        SETSIZE_STR, SETSIZE_SIG);\n+    jmethodID setSizeID;\n+    setSizeID = env->GetMethodID(paperClass,\n+                              SETSIZE_STR, SETSIZE_SIG);\n@@ -1055,2 +1072,3 @@\n-    jmethodID setImageableID = env->GetMethodID(paperClass,\n-                                        SETIMAGEABLE_STR, SETIMAGEABLE_SIG);\n+    jmethodID setImageableID;\n+    setImageableID = env->GetMethodID(paperClass,\n+                              SETIMAGEABLE_STR, SETIMAGEABLE_SIG);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":46,"deletions":28,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -56,0 +56,4 @@\n+jmethodID AwtTextComponent::canAccessClipboardMID;\n+AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n+WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n+\n@@ -60,2 +64,0 @@\n-jmethodID AwtTextComponent::canAccessClipboardMID;\n-\n@@ -914,2 +916,0 @@\n-AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n-\n@@ -1043,2 +1043,0 @@\n-WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_TextComponent.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1025,3 +1025,4 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    {\n+        PDATA pData;\n+        JNI_CHECK_PEER_GOTO(self, ret);\n+        AwtWindow *window = (AwtWindow *)pData;\n@@ -1029,1 +1030,2 @@\n-    window->RepositionSecurityWarning(env);\n+        window->RepositionSecurityWarning(env);\n+    }\n@@ -3126,7 +3128,8 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n-    PDATA pData = JNI_GET_PDATA(self);\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n-        delete mds;\n-        return;\n-    }\n+    {\n+        JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            delete mds;\n+            return;\n+        }\n@@ -3134,4 +3137,5 @@\n-    window = (AwtWindow *)pData;\n-    windowHWnd = window->GetHWnd();\n-    if (::IsWindow(windowHWnd)) {\n-        AwtWindow::SetAndActivateModalBlocker(windowHWnd, blockerHWnd);\n+        window = (AwtWindow *)pData;\n+        windowHWnd = window->GetHWnd();\n+        if (::IsWindow(windowHWnd)) {\n+            AwtWindow::SetAndActivateModalBlocker(windowHWnd, blockerHWnd);\n+        }\n@@ -3155,6 +3159,7 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n-    PDATA pData = JNI_GET_PDATA(self);\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n-        return;\n-    }\n+    {\n+        JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            return;\n+        }\n@@ -3162,4 +3167,5 @@\n-    window = (AwtWindow *)pData;\n-    windowHWnd = window->GetHWnd();\n-    if (::IsWindow(windowHWnd)) {\n-        AwtWindow::SetModalBlocker(windowHWnd, NULL);\n+        window = (AwtWindow *)pData;\n+        windowHWnd = window->GetHWnd();\n+        if (::IsWindow(windowHWnd)) {\n+            AwtWindow::SetModalBlocker(windowHWnd, NULL);\n+        }\n@@ -3180,3 +3186,4 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    {\n+        PDATA pData;\n+        JNI_CHECK_PEER_GOTO(self, ret);\n+        AwtWindow *window = (AwtWindow *)pData;\n@@ -3184,1 +3191,2 @@\n-    window->SetTranslucency(iOpacity, window->isOpaque());\n+        window->SetTranslucency(iOpacity, window->isOpaque());\n+    }\n@@ -3199,3 +3207,4 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    {\n+        PDATA pData;\n+        JNI_CHECK_PEER_GOTO(self, ret);\n+        AwtWindow *window = (AwtWindow *)pData;\n@@ -3203,1 +3212,2 @@\n-    window->SetTranslucency(window->getOpacity(), isOpaque);\n+        window->SetTranslucency(window->getOpacity(), isOpaque);\n+    }\n@@ -3218,3 +3228,4 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    {\n+        PDATA pData;\n+        JNI_CHECK_PEER_GOTO(self, ret);\n+        AwtWindow *window = (AwtWindow *)pData;\n@@ -3222,2 +3233,3 @@\n-    window->UpdateWindow(env, data, (int)uws->width, (int)uws->height,\n-                         uws->hBitmap);\n+        window->UpdateWindow(env, data, (int)uws->width, (int)uws->height,\n+                             uws->hBitmap);\n+    }\n@@ -3242,3 +3254,4 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    {\n+        PDATA pData;\n+        JNI_CHECK_PEER_GOTO(self, ret);\n+        AwtWindow *window = (AwtWindow *)pData;\n@@ -3246,1 +3259,2 @@\n-    window->setFullScreenExclusiveModeState(state != 0);\n+        window->setFullScreenExclusiveModeState(state != 0);\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Window.cpp","additions":56,"deletions":42,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -1028,1 +1028,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1098,1 +1098,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1155,1 +1155,1 @@\n-        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext) 0));\n@@ -1164,1 +1164,1 @@\n-        return (AccessibleContext)0;\n+        return reinterpret_cast<jobject>((AccessibleContext) 0);\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeJavaEntryPoints.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}