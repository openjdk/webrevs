{"files":[{"patch":"@@ -619,2 +619,2 @@\n-    TOOLCHAIN_CFLAGS_JVM=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -permissive- -utf-8 -MP\"\n-    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:strictStrings -Zc:inline -utf-8 -Zc:wchar_t-\"\n+    TOOLCHAIN_CFLAGS_JVM=\"-nologo -MD -Zc:preprocessor -Zc:inline -permissive- -utf-8 -MP\"\n+    TOOLCHAIN_CFLAGS_JDK=\"-nologo -MD -Zc:preprocessor -Zc:inline -permissive- -utf-8 -Zc:wchar_t-\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-void D3DGlyphCache_FlushGlyphVertexCache();\n+static void D3DGlyphCache_FlushGlyphVertexCache();\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DGlyphCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-    SetEraseBackgroundStruct *sebs = (SetEraseBackgroundStruct *)param;\n+    SetEraseBackgroundStruct *sebs = static_cast<SetEraseBackgroundStruct *>(param);\n@@ -215,1 +215,14 @@\n-    JNI_CHECK_PEER_GOTO(canvas, ret);\n+    if (canvas == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"canvas\");\n+        delete sebs;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(canvas);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(canvas);\n+            env->DeleteGlobalRef(canvas);\n+            delete sebs;\n+            return;\n+        }\n+    }\n@@ -221,1 +234,0 @@\n-ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Canvas.cpp","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -6363,1 +6363,1 @@\n-        SetParentStruct *data = (SetParentStruct*) param;\n+        SetParentStruct *data = static_cast<SetParentStruct*>(param);\n@@ -6367,2 +6367,2 @@\n-        AwtComponent *awtComponent = NULL;\n-        AwtComponent *awtParent = NULL;\n+        AwtComponent *awtComponent = nullptr;\n+        AwtComponent *awtParent = nullptr;\n@@ -6370,5 +6370,24 @@\n-        PDATA pData;\n-        JNI_CHECK_PEER_GOTO(self, ret);\n-        awtComponent = (AwtComponent *)pData;\n-        JNI_CHECK_PEER_GOTO(parent, ret);\n-        awtParent = (AwtComponent *)pData;\n+        if (self == NULL || parent == NULL) {\n+            env->ExceptionClear();\n+            JNU_ThrowNullPointerException(env, \"peer\");\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        awtComponent = (AwtComponent *) JNI_GET_PDATA(self);\n+        if (awtComponent == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n+        awtParent = (AwtComponent *) JNI_GET_PDATA(parent);\n+        if (awtParent == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(parent);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(parent);\n+            delete data;\n+            return;\n+        }\n@@ -6383,1 +6402,1 @@\n-ret:\n+\n@@ -6542,1 +6561,1 @@\n-    GetInsetsStruct *gis = (GetInsetsStruct *)param;\n+    GetInsetsStruct *gis = static_cast<GetInsetsStruct *>(param);\n@@ -6549,2 +6568,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtComponent *component = (AwtComponent *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete gis;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete gis;\n+            return;\n+        }\n+    }\n+    AwtComponent *component = (AwtComponent *) pData;\n@@ -6554,1 +6586,0 @@\n-  ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":44,"deletions":13,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-#include <awt.h>\n@@ -45,0 +44,5 @@\n+\/\/ These files must be included before awt.h, since the latter redefines malloc\n+\/\/ to Do_Not_Use_Malloc, etc, and that will break these files.\n+#include \"awt_ole.h\"\n+#include \"awt_DCHolder.h\"\n+\n@@ -46,0 +50,1 @@\n+#include \"awt.h\"\n@@ -57,3 +62,0 @@\n-#include \"awt_ole.h\"\n-#include \"awt_DCHolder.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDS.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+\/\/ awt_ole.h must be included before awt.h, since the latter redefines malloc\n+\/\/ to Do_Not_Use_Malloc, etc, and that will break awt_ole.h.\n+#include \"awt_ole.h\"\n@@ -34,1 +37,0 @@\n-#include \"awt_ole.h\"\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDT.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1343,1 +1343,1 @@\n-    SetStateStruct *sss = (SetStateStruct *)param;\n+    SetStateStruct *sss = static_cast<SetStateStruct *>(param);\n@@ -1347,1 +1347,1 @@\n-    AwtFrame *f = NULL;\n+    AwtFrame *f = nullptr;\n@@ -1350,2 +1350,15 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    f = (AwtFrame *)pData;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete sss;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete sss;\n+            return;\n+        }\n+    }\n+    f = (AwtFrame *) pData;\n@@ -1408,1 +1421,1 @@\n-ret:\n+\n@@ -1572,1 +1585,1 @@\n-    NotifyModalBlockedStruct *nmbs = (NotifyModalBlockedStruct *)param;\n+    NotifyModalBlockedStruct *nmbs = static_cast<NotifyModalBlockedStruct *>(param);\n@@ -1578,1 +1591,1 @@\n-    PDATA pData;\n+    AwtFrame *f = nullptr;\n@@ -1580,2 +1593,20 @@\n-    JNI_CHECK_PEER_GOTO(peer, ret);\n-    AwtFrame *f = (AwtFrame *)pData;\n+    if (peer == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"peer\");\n+        env->DeleteGlobalRef(self);\n+        env->DeleteGlobalRef(blockerPeer);\n+\n+        delete nmbs;\n+        return;\n+    } else {\n+        f = (AwtFrame *) JNI_GET_PDATA(peer);\n+        if (f == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(peer);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(peer);\n+            env->DeleteGlobalRef(blockerPeer);\n+\n+            delete nmbs;\n+            return;\n+        }\n+    }\n@@ -1585,2 +1616,5 @@\n-    JNI_CHECK_PEER_GOTO(blockerPeer, ret);\n-    AwtDialog *d = (AwtDialog *)pData;\n+    if (blockerPeer == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"blockerPeer\");\n+        env->DeleteGlobalRef(self);\n+        env->DeleteGlobalRef(peer);\n@@ -1588,2 +1622,15 @@\n-    if ((f != NULL) && ::IsWindow(f->GetHWnd()))\n-    {\n+        delete nmbs;\n+        return;\n+    } else {\n+        if ((AwtDialog *) JNI_GET_PDATA(blockerPeer) == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(blockerPeer);\n+            env->DeleteGlobalRef(self);\n+            env->DeleteGlobalRef(peer);\n+            env->DeleteGlobalRef(blockerPeer);\n+\n+            delete nmbs;\n+            return;\n+        }\n+    }\n+\n+    if ((f != NULL) && ::IsWindow(f->GetHWnd())) {\n@@ -1637,1 +1684,1 @@\n-ret:\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Frame.cpp","additions":61,"deletions":14,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -38,4 +38,4 @@\n-    static jfieldID AwtPrintDialog::controlID;\n-    static jfieldID AwtPrintDialog::parentID;\n-    static jfieldID AwtPrintDialog::pageID;\n-    static jmethodID AwtPrintDialog::setHWndMID;\n+    static jfieldID controlID;\n+    static jfieldID parentID;\n+    static jfieldID pageID;\n+    static jmethodID setHWndMID;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintDialog.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+jfieldID AwtPrintDialog::pageID;\n+\n@@ -212,1 +214,0 @@\n-jfieldID AwtPrintDialog::pageID;\n@@ -575,1 +576,1 @@\n-        (void)::PageSetupDlg(&setup);\n+        static_cast<void>(::PageSetupDlg(&setup));\n@@ -581,1 +582,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -609,1 +620,11 @@\n-        goto done;\n+        env->DeleteGlobalRef(peerGlobalRef);\n+        if (target != NULL) {\n+            env->DeleteLocalRef(target);\n+        }\n+        if (parent != NULL) {\n+            env->DeleteLocalRef(parent);\n+        }\n+        env->DeleteLocalRef(page);\n+        env->DeleteLocalRef(self);\n+\n+        return doIt;\n@@ -617,2 +638,2 @@\n-    BOOL ret = ::PageSetupDlg(&setup);\n-    if (ret) {\n+    BOOL result = ::PageSetupDlg(&setup);\n+    if (result) {\n@@ -623,1 +644,11 @@\n-            goto done;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -663,3 +694,13 @@\n-         if (env->ExceptionCheck()) {\n-             doIt = JNI_FALSE;\n-             goto done;\n+        if (env->ExceptionCheck()) {\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -673,2 +714,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -678,2 +729,12 @@\n-             doIt = JNI_FALSE;\n-             goto done;\n+            doIt = JNI_FALSE;\n+            env->DeleteGlobalRef(peerGlobalRef);\n+            if (target != NULL) {\n+                env->DeleteLocalRef(target);\n+            }\n+            if (parent != NULL) {\n+                env->DeleteLocalRef(parent);\n+            }\n+            env->DeleteLocalRef(page);\n+            env->DeleteLocalRef(self);\n+\n+            return doIt;\n@@ -688,1 +749,11 @@\n-                        goto done;\n+                        env->DeleteGlobalRef(peerGlobalRef);\n+                        if (target != NULL) {\n+                            env->DeleteLocalRef(target);\n+                        }\n+                        if (parent != NULL) {\n+                            env->DeleteLocalRef(parent);\n+                        }\n+                        env->DeleteLocalRef(page);\n+                        env->DeleteLocalRef(self);\n+\n+                        return doIt;\n@@ -711,1 +782,1 @@\n-done:\n+\n@@ -922,1 +993,18 @@\n-    JNI_CHECK_NULL_GOTO(printDC, \"Invalid printDC\", done);\n+    if (printDC == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"Invalid printDC\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -935,1 +1023,16 @@\n-    if (err) goto done;\n+    if (err) {\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -943,1 +1046,18 @@\n-    JNI_CHECK_NULL_GOTO(paperClass, \"paper class not found\", done);\n+    if (paperClass == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"paper class not found\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -945,1 +1065,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getWidth method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getWidth method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -948,1 +1085,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getHeight method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getHeight method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -951,1 +1105,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getX method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getX method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -954,1 +1125,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getY method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getY method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -957,1 +1145,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getW method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getW method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -960,1 +1165,18 @@\n-    JNI_CHECK_NULL_GOTO(getID, \"no getH method\", done);\n+    if (getID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no getH method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -1053,1 +1275,18 @@\n-    JNI_CHECK_NULL_GOTO(setSizeID, \"no setSize method\", done);\n+    if (setSizeID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setSize method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n@@ -1057,1 +1296,19 @@\n-    JNI_CHECK_NULL_GOTO(setImageableID, \"no setImageable method\", done);\n+    if (setImageableID == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"no setImageable method\");\n+        \/* Free any resources allocated *\/\n+        if (privateDC == TRUE) {\n+            if (printDC != NULL) {\n+                \/* In this case we know that this DC has no GDI objects to free *\/\n+                ::DeleteDC(printDC);\n+            }\n+            if (hDevMode != NULL) {\n+                ::GlobalFree(hDevMode);\n+            }\n+            if (hDevNames != NULL) {\n+                ::GlobalFree(hDevNames);\n+            }\n+        }\n+        return;\n+    }\n+\n@@ -1062,1 +1319,1 @@\n-done:\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":285,"deletions":28,"binary":false,"changes":313,"status":"modified"},{"patch":"@@ -56,0 +56,4 @@\n+jmethodID AwtTextComponent::canAccessClipboardMID;\n+AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n+WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n+\n@@ -60,2 +64,0 @@\n-jmethodID AwtTextComponent::canAccessClipboardMID;\n-\n@@ -914,2 +916,0 @@\n-AwtTextComponent::OleCallback AwtTextComponent::sm_oleCallback;\n-\n@@ -1043,2 +1043,0 @@\n-WNDPROC AwtTextComponent::sm_pDefWindowProc = NULL;\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_TextComponent.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1022,1 +1022,1 @@\n-        (RepositionSecurityWarningStruct *)param;\n+        static_cast<RepositionSecurityWarningStruct *>(param);\n@@ -1025,3 +1025,15 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    AwtWindow *window = nullptr;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete rsws;\n+        return;\n+    } else {\n+        window = (AwtWindow *) JNI_GET_PDATA(self);\n+        if (window == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete rsws;\n+            return;\n+        }\n+    }\n@@ -1031,1 +1043,0 @@\n-  ret:\n@@ -3119,1 +3130,1 @@\n-    ModalDisableStruct *mds = (ModalDisableStruct *)param;\n+    ModalDisableStruct *mds = static_cast<ModalDisableStruct *>(param);\n@@ -3126,1 +3137,0 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n@@ -3128,2 +3138,3 @@\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n@@ -3132,0 +3143,7 @@\n+    } else {\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            delete mds;\n+            return;\n+        }\n@@ -3140,1 +3158,0 @@\n-ret:\n@@ -3150,1 +3167,1 @@\n-    jobject self = (jobject)param;\n+    jobject self = static_cast<jobject>(param);\n@@ -3155,1 +3172,0 @@\n-    JNI_CHECK_NULL_GOTO(self, \"peer\", ret);\n@@ -3157,2 +3173,3 @@\n-    if (pData == NULL) {\n-        env->DeleteGlobalRef(self);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n@@ -3160,0 +3177,6 @@\n+    } else {\n+        PDATA pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            env->DeleteGlobalRef(self);\n+            return;\n+        }\n@@ -3168,1 +3191,0 @@\n-  ret:\n@@ -3176,1 +3198,1 @@\n-    OpacityStruct *os = (OpacityStruct *)param;\n+    OpacityStruct *os = static_cast<OpacityStruct *>(param);\n@@ -3181,1 +3203,14 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete os;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete os;\n+            return;\n+        }\n+    }\n@@ -3186,1 +3221,0 @@\n-  ret:\n@@ -3195,1 +3229,1 @@\n-    OpaqueStruct *os = (OpaqueStruct *)param;\n+    OpaqueStruct *os = static_cast<OpaqueStruct *>(param);\n@@ -3199,3 +3233,15 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    AwtWindow *window = nullptr;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete os;\n+        return;\n+    } else {\n+        window = (AwtWindow *) JNI_GET_PDATA(self);\n+        if (window == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete os;\n+            return;\n+        }\n+    }\n@@ -3205,1 +3251,0 @@\n-  ret:\n@@ -3214,1 +3259,1 @@\n-    UpdateWindowStruct *uws = (UpdateWindowStruct *)param;\n+    UpdateWindowStruct *uws = static_cast<UpdateWindowStruct *>(param);\n@@ -3218,3 +3263,21 @@\n-    PDATA pData;\n-    JNI_CHECK_PEER_GOTO(self, ret);\n-    AwtWindow *window = (AwtWindow *)pData;\n+    AwtWindow *window = nullptr;\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        if (data != NULL) {\n+            env->DeleteGlobalRef(data);\n+        }\n+        delete uws;\n+        return;\n+    } else {\n+        window = (AwtWindow *) JNI_GET_PDATA(self);\n+        if (window == nullptr) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            if (data != NULL) {\n+                env->DeleteGlobalRef(data);\n+            }\n+            delete uws;\n+            return;\n+        }\n+    }\n@@ -3222,1 +3285,1 @@\n-    window->UpdateWindow(env, data, (int)uws->width, (int)uws->height,\n+    window->UpdateWindow(env, data, (int) uws->width, (int) uws->height,\n@@ -3225,1 +3288,0 @@\n-  ret:\n@@ -3243,1 +3305,14 @@\n-    JNI_CHECK_PEER_GOTO(self, ret);\n+    if (self == NULL) {\n+        env->ExceptionClear();\n+        JNU_ThrowNullPointerException(env, \"self\");\n+        delete data;\n+        return;\n+    } else {\n+        pData = JNI_GET_PDATA(self);\n+        if (pData == NULL) {\n+            THROW_NULL_PDATA_IF_NOT_DESTROYED(self);\n+            env->DeleteGlobalRef(self);\n+            delete data;\n+            return;\n+        }\n+    }\n@@ -3248,1 +3323,0 @@\n-  ret:\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Window.cpp","additions":105,"deletions":31,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -1028,1 +1028,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRole - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext)0));\n@@ -1098,1 +1098,1 @@\n-        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ParentWithRoleElseRoot - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext)0));\n@@ -1155,1 +1155,1 @@\n-        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", (AccessibleContext)0);\n+        EXCEPTION_CHECK(\"Getting ActiveDescendent - call to CallObjectMethod()\", reinterpret_cast<jobject>((AccessibleContext)0));\n@@ -1164,1 +1164,1 @@\n-        return (AccessibleContext)0;\n+        return reinterpret_cast<jobject>((AccessibleContext)0);\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeJavaEntryPoints.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}