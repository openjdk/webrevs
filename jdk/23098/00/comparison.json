{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,0 @@\n-    public static final boolean ALLOW_NONPUBLIC_MBEAN = Boolean.parseBoolean(System.getProperty(\"jdk.jmx.mbeans.allowNonPublic\"));\n@@ -520,2 +519,1 @@\n-                (Modifier.isPublic(interfaces[i].getModifiers()) ||\n-                 ALLOW_NONPUBLIC_MBEAN)) {\n+                Modifier.isPublic(interfaces[i].getModifiers())) {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Introspector.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,2 +110,1 @@\n-        } else if (!Modifier.isPublic(mbeanType.getModifiers()) &&\n-                   !Introspector.ALLOW_NONPUBLIC_MBEAN) {\n+        } else if (!Modifier.isPublic(mbeanType.getModifiers())) {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanAnalyzer.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -378,2 +378,1 @@\n-        if (!Modifier.isPublic(interfaceClass.getModifiers()) &&\n-            !Introspector.ALLOW_NONPUBLIC_MBEAN) {\n+        if (!Modifier.isPublic(interfaceClass.getModifiers())) {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/JMX.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,94 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerFactory;\n-import javax.management.NotCompliantMBeanException;\n-import javax.management.ObjectName;\n-\n-\/*\n- * @test\n- * @bug 8010285\n- * @summary Test fallback for private MBean interfaces.\n- *          It needs to be a separate class because the \"jdk.jmx.mbeans.allowNonPublic\"\n- *          system property must be set before c.s.j.m.MBeanAnalyzer has been loaded.\n- * @author Jaroslav Bachorik\n- *\n- * @run clean MBeanFallbackTest\n- * @run build MBeanFallbackTest\n- * @run main\/othervm -Djdk.jmx.mbeans.allowNonPublic=true MBeanFallbackTest\n- *\/\n-public class MBeanFallbackTest {\n-    private static interface PrivateMBean {\n-        public int[] getInts();\n-    }\n-\n-    public static class Private implements PrivateMBean {\n-        public int[] getInts() {\n-            return new int[]{1,2,3};\n-        }\n-    }\n-\n-    private static int failures = 0;\n-\n-    public static void main(String[] args) throws Exception {\n-        testPrivate(PrivateMBean.class, new Private());\n-\n-        if (failures == 0)\n-            System.out.println(\"Test passed\");\n-        else\n-            throw new Exception(\"TEST FAILURES: \" + failures);\n-    }\n-\n-    private static void fail(String msg) {\n-        failures++;\n-        System.out.println(\"FAIL: \" + msg);\n-    }\n-\n-    private static void success(String msg) {\n-        System.out.println(\"OK: \" + msg);\n-    }\n-\n-    private static void testPrivate(Class<?> iface, Object bean) throws Exception {\n-        try {\n-            System.out.println(\"Registering a private MBean \" +\n-                                iface.getName() + \" ...\");\n-\n-            MBeanServer mbs = MBeanServerFactory.newMBeanServer();\n-            ObjectName on = new ObjectName(\"test:type=Compliant\");\n-\n-            mbs.registerMBean(bean, on);\n-            success(\"Registered a private MBean - \" + iface.getName());\n-        } catch (Exception e) {\n-            Throwable t = e;\n-            while (t != null && !(t instanceof NotCompliantMBeanException)) {\n-                t = t.getCause();\n-            }\n-            if (t != null) {\n-                fail(\"MBean not registered\");\n-            } else {\n-                throw e;\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/MBeanServer\/MBeanFallbackTest.java","additions":0,"deletions":94,"binary":false,"changes":94,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8010285\n- * @summary Test for the private MXBean interface fallback.\n- *          It needs to be a separate class because the \"jdk.jmx.mbeans.allowNonPublic\"\n- *          system property must be set before c.s.j.m.MBeanAnalyzer has been loaded.\n- * @author Jaroslav Bachorik\n- *\n- * @run clean MXBeanFallbackTest\n- * @run build MXBeanFallbackTest\n- * @run main\/othervm -Djdk.jmx.mbeans.allowNonPublic=true MXBeanFallbackTest\n- *\/\n-\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerFactory;\n-import javax.management.NotCompliantMBeanException;\n-import javax.management.ObjectName;\n-\n-public class MXBeanFallbackTest {\n-    public static void main(String[] args) throws Exception {\n-        testPrivateMXBean(\"Private\", new Private());\n-\n-        if (failures == 0)\n-            System.out.println(\"Test passed\");\n-        else\n-            throw new Exception(\"TEST FAILURES: \" + failures);\n-    }\n-\n-    private static int failures = 0;\n-\n-    private static interface PrivateMXBean {\n-        public int[] getInts();\n-    }\n-\n-    public static class Private implements PrivateMXBean {\n-        public int[] getInts() {\n-            return new int[]{1,2,3};\n-        }\n-    }\n-\n-    private static void testPrivateMXBean(String type, Object bean) throws Exception {\n-        System.out.println(type + \" MXBean test...\");\n-        MBeanServer mbs = MBeanServerFactory.newMBeanServer();\n-        ObjectName on = new ObjectName(\"test:type=\" + type);\n-        try {\n-            mbs.registerMBean(bean, on);\n-            success(\"Private MXBean registered\");\n-        } catch (NotCompliantMBeanException e) {\n-            failure(\"Failed to register the private MXBean - \" +\n-                     bean.getClass().getInterfaces()[0].getName());\n-        }\n-    }\n-\n-    private static void success(String what) {\n-        System.out.println(\"OK: \" + what);\n-    }\n-\n-    private static void failure(String what) {\n-        System.out.println(\"FAILED: \" + what);\n-        failures++;\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/mxbean\/MXBeanFallbackTest.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import javax.management.JMX;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerFactory;\n-import javax.management.NotCompliantMBeanException;\n-import javax.management.ObjectName;\n-\n-\/*\n- * @test\n- * @bug 8010285\n- * @summary Tests the fallback for creating JMX proxies for private interfaces\n- *          It needs to be a separate class because the \"jdk.jmx.mbeans.allowNonPublic\"\n- *          system property must be set before c.s.j.m.MBeanAnalyzer has been loaded.\n- * @author Jaroslav Bachorik\n- *\n- * @run clean JMXProxyFallbackTest\n- * @run build JMXProxyFallbackTest\n- * @run main\/othervm -Djdk.jmx.mbeans.allowNonPublic=true JMXProxyFallbackTest\n- *\/\n-public class JMXProxyFallbackTest {\n-    private static interface PrivateMBean {\n-        public int[] getInts();\n-    }\n-\n-    private static interface PrivateMXBean {\n-        public int[] getInts();\n-    }\n-\n-    public static class Private implements PrivateMXBean, PrivateMBean {\n-        public int[] getInts() {\n-            return new int[]{1,2,3};\n-        }\n-    }\n-\n-    private static int failures = 0;\n-\n-    public static void main(String[] args) throws Exception {\n-        testPrivate(PrivateMBean.class);\n-        testPrivate(PrivateMXBean.class);\n-\n-        if (failures == 0)\n-            System.out.println(\"Test passed\");\n-        else\n-            throw new Exception(\"TEST FAILURES: \" + failures);\n-    }\n-\n-    private static void fail(String msg) {\n-        failures++;\n-        System.out.println(\"FAIL: \" + msg);\n-    }\n-\n-    private static void success(String msg) {\n-        System.out.println(\"OK: \" + msg);\n-    }\n-\n-    private static void testPrivate(Class<?> iface) throws Exception {\n-        try {\n-            System.out.println(\"Creating a proxy for private M(X)Bean \" +\n-                                iface.getName() + \" ...\");\n-\n-            MBeanServer mbs = MBeanServerFactory.newMBeanServer();\n-            ObjectName on = new ObjectName(\"test:type=Proxy\");\n-\n-            JMX.newMBeanProxy(mbs, on, iface);\n-            success(\"Created a proxy for private M(X)Bean - \" + iface.getName());\n-        } catch (Exception e) {\n-            Throwable t = e;\n-            while (t != null && !(t instanceof NotCompliantMBeanException)) {\n-                t = t.getCause();\n-            }\n-            if (t != null) {\n-                fail(\"Proxy not created\");\n-            } else {\n-                throw e;\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/management\/proxy\/JMXProxyFallbackTest.java","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"}]}