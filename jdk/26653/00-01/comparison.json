{"files":[{"patch":"@@ -2259,0 +2259,7 @@\n+  \/\/ For foreign calls, restoring code in a product run at a different location may\n+  \/\/ invalidate a reachability decision made in a training run. In such cases,\n+  \/\/ an 'adrp + add' can't be patchable to a 'movz + movk + movk'.\n+  \/\/ To avoid this, disable reachability-based optimization during AOT code dumping.\n+  if (AOTCodeCache::is_on_for_dump()) {\n+    return false;\n+  }\n@@ -2297,1 +2304,2 @@\n-           unqualified_type(dest.rspec().type()), \"unhandled rtype\");\n+           unqualified_type(dest.rspec().type()) ||\n+           AOTCodeCache::is_on_for_dump(), \"unhandled rtype\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}