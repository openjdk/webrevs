{"files":[{"patch":"@@ -3672,1 +3672,1 @@\n-        return generate_sha2_implCompress<Assembler::e32>(multi_block);\n+        return generate_sha2_implCompress(Assembler::e32, multi_block);\n@@ -3675,1 +3675,1 @@\n-        return generate_sha2_implCompress<Assembler::e64>(multi_block);\n+        return generate_sha2_implCompress(Assembler::e64, multi_block);\n@@ -3679,4 +3679,3 @@\n-    template<Assembler::SEW T>\n-    void vl1reXX_v(VectorRegister vr, Register sr) {\n-      if (T == Assembler::e32) __ vl1re32_v(vr, sr);\n-      else                     __ vl1re64_v(vr, sr);\n+    void vl1reXX_v(Assembler::SEW vset_sew, VectorRegister vr, Register sr) {\n+      if (vset_sew == Assembler::e32) __ vl1re32_v(vr, sr);\n+      else                            __ vl1re64_v(vr, sr);\n@@ -3685,4 +3684,3 @@\n-    template<Assembler::SEW T>\n-    void vleXX_v(VectorRegister vr, Register sr) {\n-      if (T == Assembler::e32) __ vle32_v(vr, sr);\n-      else                     __ vle64_v(vr, sr);\n+    void vleXX_v(Assembler::SEW vset_sew, VectorRegister vr, Register sr) {\n+      if (vset_sew == Assembler::e32) __ vle32_v(vr, sr);\n+      else                            __ vle64_v(vr, sr);\n@@ -3691,4 +3689,3 @@\n-    template<Assembler::SEW T>\n-    void vseXX_v(VectorRegister vr, Register sr) {\n-      if (T == Assembler::e32) __ vse32_v(vr, sr);\n-      else                     __ vse64_v(vr, sr);\n+    void vseXX_v(Assembler::SEW vset_sew, VectorRegister vr, Register sr) {\n+      if (vset_sew == Assembler::e32) __ vse32_v(vr, sr);\n+      else                            __ vse64_v(vr, sr);\n@@ -3792,2 +3789,1 @@\n-    template<Assembler::SEW vset_sew>\n-    void sha2_quad_round(VectorRegister rot1, VectorRegister rot2, VectorRegister rot3, VectorRegister rot4,\n+    void sha2_quad_round(Assembler::SEW vset_sew, VectorRegister rot1, VectorRegister rot2, VectorRegister rot3, VectorRegister rot4,\n@@ -3796,1 +3792,1 @@\n-      __ vl1reXX_v<vset_sew>(vtemp, scalarconst);\n+      __ vl1reXX_v(vset_sew, vtemp, scalarconst);\n@@ -3811,2 +3807,1 @@\n-    template<Assembler::SEW vset_sew>\n-    const char* stub_name(bool multi_block) {\n+    const char* stub_name(Assembler::SEW vset_sew, bool multi_block) {\n@@ -3828,2 +3823,1 @@\n-    template<Assembler::SEW vset_sew>\n-    address generate_sha2_implCompress(bool multi_block) {\n+    address generate_sha2_implCompress(Assembler::SEW vset_sew, bool multi_block) {\n@@ -3877,1 +3871,1 @@\n-      constexpr int const_add = vset_sew == Assembler::e32 ? 16 : 32;\n+      const int const_add = vset_sew == Assembler::e32 ? 16 : 32;\n@@ -3880,1 +3874,1 @@\n-      StubCodeMark mark(_cgen, \"StubRoutines\", stub_name<vset_sew>(multi_block));\n+      StubCodeMark mark(_cgen, \"StubRoutines\", stub_name(vset_sew, multi_block));\n@@ -3943,1 +3937,1 @@\n-      __ vleXX_v<vset_sew>(v16, state);                \/\/ v16 = {d,c,b,a}\n+      __ vleXX_v(vset_sew, v16, state);                \/\/ v16 = {d,c,b,a}\n@@ -3945,1 +3939,1 @@\n-      __ vleXX_v<vset_sew>(v17, state);                \/\/ v17 = {h,g,f,e}\n+      __ vleXX_v(vset_sew, v17, state);                \/\/ v17 = {h,g,f,e}\n@@ -3976,1 +3970,1 @@\n-      __ vleXX_v<vset_sew>(v10, buf);\n+      __ vleXX_v(vset_sew, v10, buf);\n@@ -3979,1 +3973,1 @@\n-      __ vleXX_v<vset_sew>(v11, buf);\n+      __ vleXX_v(vset_sew, v11, buf);\n@@ -3982,1 +3976,1 @@\n-      __ vleXX_v<vset_sew>(v12, buf);\n+      __ vleXX_v(vset_sew, v12, buf);\n@@ -3985,1 +3979,1 @@\n-      __ vleXX_v<vset_sew>(v13, buf);\n+      __ vleXX_v(vset_sew, v13, buf);\n@@ -3999,1 +3993,1 @@\n-      constexpr int qr_end = vset_sew == Assembler::e32 ? 12 : 16;\n+      const int qr_end = vset_sew == Assembler::e32 ? 12 : 16;\n@@ -4001,2 +3995,2 @@\n-        sha2_quad_round<vset_sew>\n-                  (rotation_regs[(rot_pos + 0) & 0x3],\n+        sha2_quad_round(vset_sew,\n+                   rotation_regs[(rot_pos + 0) & 0x3],\n@@ -4013,1 +4007,1 @@\n-      constexpr int qr_c_end = qr_end + 4;\n+      const int qr_c_end = qr_end + 4;\n@@ -4015,2 +4009,2 @@\n-        sha2_quad_round<vset_sew>\n-                  (rotation_regs[(rot_pos + 0) & 0x3],\n+        sha2_quad_round(vset_sew,\n+                   rotation_regs[(rot_pos + 0) & 0x3],\n@@ -4059,1 +4053,1 @@\n-      __ vseXX_v<vset_sew>(v17, state);\n+      __ vseXX_v(vset_sew, v17, state);\n@@ -4061,1 +4055,1 @@\n-      __ vseXX_v<vset_sew>(v16, state);\n+      __ vseXX_v(vset_sew, v16, state);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":31,"deletions":37,"binary":false,"changes":68,"status":"modified"}]}