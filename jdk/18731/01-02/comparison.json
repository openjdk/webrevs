{"files":[{"patch":"@@ -79,2 +79,2 @@\n- * service implementation does not support the given locale, {@link Locale#ROOT}\n- * will be used as a fallback.\n+ * service implementation does not support the given {@code Locale}, the parent\n+ * locale chain will be looked up, and a {@code Locale} used that is supported.\n","filename":"src\/java.base\/share\/classes\/java\/text\/CompactNumberFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,2 +76,2 @@\n- * service implementation does not support the given locale, {@link Locale#ROOT}\n- * will be used as a fallback.\n+ * service implementation does not support the given {@code Locale}, the parent\n+ * locale chain will be looked up, and a {@code Locale} used that is supported.\n@@ -88,1 +88,1 @@\n- *     \/\/ cast to DecimalFormat to use setPositiveSuffix(String)\n+ *     \/\/ pattern match to DecimalFormat to use setPositiveSuffix(String)\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -90,2 +90,2 @@\n- * service implementation does not support the given {@code Locale}, {@link Locale#ROOT}\n- * will be used as the fallback {@code Locale}.\n+ * service implementation does not support the given {@code Locale}, the parent\n+ * locale chain will be looked up, and a {@code Locale} used that is supported.\n@@ -115,1 +115,3 @@\n- * <blockquote>{@code NumberFormat.getInstance(Locale.forLanguageTag(\"en-US-u-cf-account\"));}<\/blockquote>\n+ * <blockquote>{@code NumberFormat.getCurrencyInstance(Locale.forLanguageTag(\"en-US-u-cf-account\"));}<\/blockquote>\n+ * With this style, a negative value is formatted enclosed in parentheses, instead\n+ * of being prepended with a minus sign.\n","filename":"src\/java.base\/share\/classes\/java\/text\/NumberFormat.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}