{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+@property (readwrite, atomic) int displayLinkFailCount;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+#define CV_DISPLAYLINK_FAIL_DELAY 1.0\n+#define MAX_DISPLAYLINK_FAIL_COUNT 5\n@@ -47,0 +49,1 @@\n+@synthesize displayLinkFailCount;\n@@ -49,3 +52,18 @@\n-    CVDisplayLinkCreateWithActiveCGDisplays(&displayLink);\n-    CVDisplayLinkSetOutputCallback(displayLink, &displayLinkCallback, (__bridge void*)self);\n-    self.displayLinkCount = 0;\n+    CVReturn r = CVDisplayLinkCreateWithActiveCGDisplays(&displayLink);\n+    if (r != kCVReturnSuccess) {\n+        if (self.displayLinkFailCount >= MAX_DISPLAYLINK_FAIL_COUNT) {\n+            J2dTraceLn(J2D_TRACE_ERROR,\n+                \"MTLLayer.createDisplayLink --- unable to create CVDisplayLink.\");\n+            self.displayLinkFailCount = 0;\n+            return;\n+        }\n+        self.displayLinkFailCount++;\n+        [self performSelector:@selector(createDisplayLink)\n+                   withObject:nil\n+                   afterDelay:CV_DISPLAYLINK_FAIL_DELAY];\n+        return;\n+    } else {\n+        CVDisplayLinkSetOutputCallback(displayLink, &displayLinkCallback, (__bridge void*)self);\n+        self.displayLinkCount = 0;\n+        self.displayLinkFailCount = 0;\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.m","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"}]}