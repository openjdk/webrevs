{"files":[{"patch":"@@ -627,1 +627,4 @@\n-  return java_lang_VirtualThread::state(vt) != java_lang_VirtualThread::NEW &&\n+  oop cont = java_lang_VirtualThread::continuation(vt);\n+\n+  return !jdk_internal_vm_Continuation::done(cont) &&\n+         java_lang_VirtualThread::state(vt) != java_lang_VirtualThread::NEW &&\n@@ -1977,1 +1980,1 @@\n-    if (target_jt == nullptr) {    \/\/ unmounted virtual  thread\n+    if (target_jt == nullptr) {    \/\/ unmounted virtual thread\n@@ -2412,3 +2415,1 @@\n-  Thread* current = Thread::current();\n-\n-  if (!JvmtiEnvBase::is_vthread_alive(_target_h())) {\n+  if (!JvmtiEnvBase::is_vthread_alive(target_h())) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -480,0 +480,1 @@\n+  \/\/ used by JvmtiHandshake::execute\n@@ -489,3 +490,0 @@\n- protected:\n-  static bool is_vthread_handshake_safe(JavaThread* thread, oop vt);\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}