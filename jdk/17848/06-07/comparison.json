{"files":[{"patch":"@@ -1582,1 +1582,1 @@\n-\/\/ Split packs that have mutual dependence, until all packs are mutually_independent.\n+\/\/ Split packs that have a mutual dependency, until all packs are mutually_independent.\n@@ -1590,1 +1590,2 @@\n-                   \/\/ Split in half.\n+                   \/\/ As a best guess, we split the pack in half. This way, we iteratively make the\n+                   \/\/ packs smaller, until there is no dependency.\n@@ -3016,2 +3017,2 @@\n-        (!has_use_pack_superset(n0, n1) ||\n-         !has_use_pack_superset(n1, n0))) {\n+        !(has_use_pack_superset(n0, n1) &&\n+          has_use_pack_superset(n1, n0))) {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-    int split_size() const {\n+    uint split_size() const {\n@@ -393,1 +393,0 @@\n-  \/\/ Split packs at boundaries where left and right have different use or def packs.\n@@ -395,2 +394,0 @@\n-  \/\/ Split packs that are only implemented with a smaller pack size. Also splits packs\n-  \/\/ such that they eventually have power of 2 size.\n@@ -398,1 +395,0 @@\n-  \/\/ Split packs that have mutual dependence, until all packs are mutually_independent.\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}