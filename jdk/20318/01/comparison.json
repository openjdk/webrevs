{"files":[{"patch":"@@ -219,1 +219,4 @@\n-    Handshake::execute(&flush_satb);\n+    {\n+      ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_mark_satb_flush_rendezvous, true);\n+      Handshake::execute(&flush_satb);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -140,1 +140,4 @@\n-void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time) {\n+void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time, bool should_aggregate_cycles) {\n+  if (should_aggregate_cycles) {\n+    _cycle_data[phase] = _cycle_data[phase] <= 0 ? time :  _cycle_data[phase] + time;\n+  } else {\n@@ -142,2 +145,2 @@\n-  double d = _cycle_data[phase];\n-  assert(d == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), d);\n+    double d = _cycle_data[phase];\n+    assert(d == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), d);\n@@ -145,1 +148,2 @@\n-  _cycle_data[phase] = time;\n+    _cycle_data[phase] = time;\n+  }\n@@ -148,1 +152,1 @@\n-void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time) {\n+void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time, bool should_aggregate_cycles) {\n@@ -150,1 +154,1 @@\n-    set_cycle_data(phase, time);\n+    set_cycle_data(phase, time, should_aggregate_cycles);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+  f(conc_mark_satb_flush_rendezvous,                \"  SATB Flush Rendezvous\")         \\\n@@ -219,1 +220,1 @@\n-  void set_cycle_data(Phase phase, double time);\n+  void set_cycle_data(Phase phase, double time, bool should_aggregate_cycles=false);\n@@ -225,1 +226,1 @@\n-  void record_phase_time(Phase phase, double time);\n+  void record_phase_time(Phase phase, double time, bool should_aggregate_cycles=false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase) :\n+ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate_cycles) :\n@@ -121,0 +121,1 @@\n+  _should_aggregate_cycles = should_aggregate_cycles;\n@@ -124,1 +125,3 @@\n-  _timings->record_phase_time(_phase, os::elapsedTime() - _start);\n+  const double end_time = os::elapsedTime();\n+  const double phase_elapsed_time = end_time - _start;\n+  _timings->record_phase_time(_phase, phase_elapsed_time, _should_aggregate_cycles);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+  bool _should_aggregate_cycles;\n@@ -71,1 +72,1 @@\n-  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase);\n+  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate_cycles=false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}