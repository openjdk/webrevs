{"files":[{"patch":"@@ -54,0 +54,1 @@\n+\n@@ -55,4 +56,1 @@\n-  \/\/ Must use ResetNoHandleMark here to bypass if any NoHandleMark exist on stack.\n-  \/\/ This is because RegisterMap uses Handles to support continuations.\n-  ResetNoHandleMark rnhm;\n-  HandleMark hm(jt);\n+  NoHandleMark nhm;\n@@ -70,1 +68,1 @@\n-  JfrVframeStream vfs(jt, frame, false, true);\n+  JfrVframeStream vfs(jt, frame, false, true, false);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrAsyncStackTrace.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-JfrVframeStream::JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode) :\n+JfrVframeStream::JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode, bool allow_continuation_walk) :\n@@ -157,1 +157,1 @@\n-                                 walk_continuation(jt))),\n+                                 allow_continuation_walk ? walk_continuation(jt) : RegisterMap::WalkContinuation::skip)),\n@@ -235,1 +235,1 @@\n-  JfrVframeStream vfs(jt, frame, false, true);\n+  JfrVframeStream vfs(jt, frame, false, true, true);\n@@ -286,1 +286,1 @@\n-  JfrVframeStream vfs(jt, frame, false, false);\n+  JfrVframeStream vfs(jt, frame, false, false, true);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode);\n+  JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode, bool allow_continuation_walk);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}