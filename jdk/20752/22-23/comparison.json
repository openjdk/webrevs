{"files":[{"patch":"@@ -394,4 +394,2 @@\n-  \/\/ This is required for testing purposes\n-  \/\/ To ensure that the sampler works even when the worker\n-  \/\/ thread is stopped for a while, with unloaded methods\n-  \/\/ in the queue\n+\n+#ifdef ASSERT\n@@ -399,0 +397,1 @@\n+#endif\n@@ -414,0 +413,1 @@\n+  bool should_process_trace_queue();\n@@ -570,0 +570,9 @@\n+\n+bool JfrCPUTimeThreadSampler::should_process_trace_queue() {\n+#ifdef ASSERT\n+  return Atomic::load(&_process_queue);\n+#else\n+  return true;\n+#endif\n+}\n+\n@@ -572,1 +581,1 @@\n-  while (Atomic::load(&_process_queue) && (trace = _queues.filled().dequeue()) != nullptr) {\n+  while (should_process_trace_queue() && (trace = _queues.filled().dequeue()) != nullptr) {\n@@ -942,0 +951,1 @@\n+#ifdef ASSERT\n@@ -947,0 +957,1 @@\n+#endif\n@@ -987,0 +998,1 @@\n+#ifdef ASSERT\n@@ -988,0 +1000,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+#ifdef ASSERT\n@@ -64,0 +65,1 @@\n+#endif\n@@ -84,0 +86,1 @@\n+#ifdef ASSERT\n@@ -85,0 +88,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,0 +195,1 @@\n+  #ifdef ASSERT\n@@ -196,0 +197,3 @@\n+  #else\n+  warning(\"Stopping the CPU time sampler is only supported in debug builds\");\n+  #endif\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @requires vm.hasJFR & os.family == \"linux\"\n+ * @requires vm.hasJFR & os.family == \"linux\" & vm.debug\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeClassUnloading.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -811,0 +811,1 @@\n+  \/\/ only works with debug builds\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}