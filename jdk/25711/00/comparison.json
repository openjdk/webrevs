{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,0 +143,3 @@\n+        if (html) {\n+            new TidyChecker();\n+        }\n","filename":"test\/docs\/jdk\/javadoc\/doccheck\/DocCheck.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @build DocTester toolbox.TestRunner\n+ * @build DocTester toolbox.TestRunner jtreg.SkippedException\n","filename":"test\/docs\/jdk\/javadoc\/doccheck\/checks\/jdkCheckHtml.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import jtreg.SkippedException;\n@@ -167,2 +168,1 @@\n-                System.err.println(\"tidy not found on PATH\");\n-                return Path.of(\"tidy\"); \/\/non-null placeholder return; exception would be better\n+                throw new jtreg.SkippedException(\"tidy not found on PATH\");\n","filename":"test\/docs\/jdk\/javadoc\/doccheck\/doccheckutils\/checkers\/TidyChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}