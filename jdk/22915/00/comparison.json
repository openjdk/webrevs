{"files":[{"patch":"@@ -27,2 +27,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.misc\n+ * @modules java.base\/jdk.internal.misc\n@@ -35,4 +34,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Label;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n@@ -48,0 +43,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.ConstantDescs;\n@@ -68,1 +66,1 @@\n-    private static class TestClassLoader extends ClassLoader implements Opcodes {\n+    private static class TestClassLoader extends ClassLoader {\n@@ -70,10 +68,5 @@\n-            ClassWriter cw = new ClassWriter(0);\n-\n-            cw.visit(52, ACC_SUPER | ACC_PUBLIC, name, null, \"java\/lang\/Object\", null);\n-            MethodVisitor mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"m\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-            cw.visitEnd();\n-            return cw.toByteArray();\n+            return ClassFile.of().build(ClassDesc.of(name), clb ->\n+                clb.withVersion(52, 0)\n+                   .withFlags(ClassFile.ACC_SUPER | ClassFile.ACC_PUBLIC)\n+                   .withMethodBody(\"m\", ConstantDescs.MTD_void, ClassFile.ACC_PUBLIC | ClassFile.ACC_STATIC, cob ->\n+                           cob.return_()));\n","filename":"test\/jdk\/com\/sun\/jdi\/ClassUnloadEventTest.java","additions":10,"deletions":17,"binary":false,"changes":27,"status":"modified"}]}