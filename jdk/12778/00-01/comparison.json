{"files":[{"patch":"@@ -1844,1 +1844,1 @@\n-  mul(index, index, tmp);\n+  lsl(index, index, log2i_exact(sizeof(ResolvedIndyEntry)));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2075,1 +2075,5 @@\n-  imull(index, index, sizeof(ResolvedIndyEntry)); \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+  if (is_power_of_2(sizeof(ResolvedIndyEntry))) {\n+    shll(index, log2i_exact(sizeof(ResolvedIndyEntry))); \/\/ Scale index by power of 2\n+  } else {\n+    imull(index, index, sizeof(ResolvedIndyEntry)); \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2747,1 +2747,1 @@\n-  __ call_VM(noreg, entry, method); \/\/ Example uses temp = rbx. In this case rbx is method\n+  __ call_VM(noreg, entry, method);\n@@ -2769,3 +2769,1 @@\n-  __ push(rbx);\n-  __ mov(rbx, index);\n-  __ load_resolved_reference_at_index(appendix, rbx);\n+  __ load_resolved_reference_at_index(appendix, index);\n@@ -2773,1 +2771,0 @@\n-  __ pop(rbx);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -590,1 +590,5 @@\n-          LinkResolver::resolve_invoke(info, recv, pool, ConstantPool::encode_invokedynamic_index(indy_index), Bytecodes::_invokedynamic, CHECK);\n+          LinkResolver::resolve_invoke(info,\n+                                       recv,\n+                                       pool,\n+                                       ConstantPool::encode_invokedynamic_index(indy_index),\n+                                       Bytecodes::_invokedynamic, CHECK);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -414,6 +414,4 @@\n-      \/*\n-      ResolvedIndyEntry and ConstantPoolCacheEntry must currently coexist.\n-      To address this, the variables below contain the values that *might*\n-      be used to avoid multiple blocks of similar code. When CPCE is obsoleted\n-      these can be removed\n-      *\/\n+      \/\/ ResolvedIndyEntry and ConstantPoolCacheEntry must currently coexist.\n+      \/\/ To address this, the variables below contain the values that *might*\n+      \/\/ be used to avoid multiple blocks of similar code. When CPCE is obsoleted\n+      \/\/ these can be removed\n@@ -453,1 +451,1 @@\n-          return NULL;\n+          return nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-  if ( _pool->resolved_indy_entry_at(_indy_index)->method() != nullptr) {\n-    methodHandle method(THREAD, _pool->resolved_indy_entry_at(_indy_index)->method());\n+  ResolvedIndyEntry* indy_entry = _pool->resolved_indy_entry_at(_indy_index);\n+  if (indy_entry->method() != nullptr) {\n+    methodHandle method(THREAD, indy_entry->method());\n@@ -73,1 +74,1 @@\n-  } else if (_pool->resolved_indy_entry_at(_indy_index)->resolution_failed()) {\n+  } else if (indy_entry->resolution_failed()) {\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -639,1 +639,0 @@\n-    tty->print_cr(\"Index: %d\", cp->resolved_indy_entry_at(i)->constant_pool_index());\n@@ -1527,3 +1526,0 @@\n-  if (cp_cache_entry->is_resolved(Bytecodes::_invokedynamic)) {\n-    return Bytecodes::_invokedynamic;\n-  }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_OOPS_ResolvedIndyEntry_HPP\n-#define SHARE_OOPS_ResolvedIndyEntry_HPP\n+#ifndef SHARE_OOPS_RESOLVEDINDYENTRY_HPP\n+#define SHARE_OOPS_RESOLVEDINDYENTRY_HPP\n@@ -71,1 +71,1 @@\n-  \/\/ Note: Only one flag exists at the moment but more could be added\n+  \/\/ Note: Only two flags exists at the moment but more could be added\n@@ -83,5 +83,5 @@\n-  bool has_appendix()            const { return (_flags & (1 << has_appendix_shift))        != 0; }\n-  bool resolution_failed()       const { return (_flags & 1)                                != 0; }\n-  bool is_vfinal()               const { return false;                                            }\n-  bool is_final()                const { return false;                                            }\n-  bool has_local_signature()     const { return true;                                             }\n+  bool has_appendix()            const { return (_flags & (1 << has_appendix_shift)) != 0; }\n+  bool resolution_failed()       const { return (_flags & 1) != 0; }\n+  bool is_vfinal()               const { return false; }\n+  bool is_final()                const { return false; }\n+  bool has_local_signature()     const { return true;  }\n@@ -111,0 +111,2 @@\n+    \/\/ Set the method last since it is read lock free.\n+    \/\/ Resolution is indicated by whether or not he method is set.\n@@ -140,1 +142,1 @@\n-#endif \/\/ SHARE_OOPS_ResolvedIndyEntry_HPP\n+#endif \/\/ SHARE_OOPS_RESOLVEDINDYENTRY_HPP\n","filename":"src\/hotspot\/share\/oops\/resolvedIndyEntry.hpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import sun.jvm.hotspot.oops.Metadata;\n-import sun.jvm.hotspot.oops.Klass;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ResolvedIndyArray.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -933,3 +933,1 @@\n-                \/*if (isInvokedynamicIndex(cpi)) {\n-                    compilerToVM().resolveInvokeDynamicInPool(this, cpi);\n-                }*\/\n+                \/\/ nothing\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}