{"files":[{"patch":"@@ -1313,1 +1313,1 @@\n-    \/\/ 1. Find an unusable trash region in the old collector partition\n+    \/\/ 1. Find a temporarily unusable trash region in the old collector partition\n@@ -1324,1 +1324,2 @@\n-      \/\/ 2. Move it to the mutator partition\n+      const size_t unusable_capacity = alloc_capacity(unusable_trash);\n+      \/\/ 2. Move the (temporarily) unusable trash region we found to the mutator partition\n@@ -1327,1 +1328,1 @@\n-                                                   ShenandoahFreeSetPartitionId::Mutator, region_capacity);\n+                                                   ShenandoahFreeSetPartitionId::Mutator, unusable_capacity);\n@@ -1329,1 +1330,1 @@\n-      \/\/ 3. Move this usable region to the old collector partition\n+      \/\/ 3. Move this usable region from the mutator partition to the old collector partition\n@@ -1337,1 +1338,4 @@\n-      \/\/ been accounted for.\n+      \/\/ been accounted for. However, we should adjust the evacuation reserves as those may have changed.\n+      shenandoah_assert_heaplocked();\n+      const size_t reserve = _heap->old_generation()->get_evacuation_reserve();\n+      _heap->old_generation()->set_evacuation_reserve(reserve - unusable_capacity + region_capacity);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -326,1 +326,2 @@\n-  \/\/ the Mutator free set into the Collector or OldCollector free set.\n+  \/\/ the Mutator free set into the Collector or OldCollector free set. The conditions to move this region are checked by\n+  \/\/ the caller, so the given region is always moved.\n@@ -329,0 +330,1 @@\n+  \/\/ Return true if and only if the given region is successfully flipped to the old partition\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}