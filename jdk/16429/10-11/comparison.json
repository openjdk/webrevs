{"files":[{"patch":"@@ -1133,3 +1133,2 @@\n-  \/\/ reaching a boundary node, defined by is_boundary.\n-  \/\/ Note: the function definition appears after the complete type definition\n-  \/\/ of Unique_Node_List.\n+  \/\/ reaching a boundary node, defined by is_boundary. Note: the function\n+  \/\/ definition appears after the complete type definition of Unique_Node_List.\n@@ -1139,4 +1138,3 @@\n-  \/\/ Visit all non-cast uses of the node, bypassing ConstraintCasts.\n-  \/\/ Pattern: this (-> ConstraintCast)* -> non_cast\n-  \/\/ In other words: find all non_cast nodes such that\n-  \/\/ non_cast->uncast() == this.\n+  \/\/ Visit all non-cast uses of the node, bypassing ConstraintCasts. Pattern:\n+  \/\/ this (-> ConstraintCast)* -> non_cast. In other words: find all non_cast\n+  \/\/ nodes such that non_cast->uncast() == this.\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1976,2 +1976,1 @@\n-\/\/ Pattern: parent -> LShift (use) -> ConstraintCast* -> And\n-\/\/ Pattern: parent -> LShift (use) -> (ConstraintCast | ConvI2L)* -> ConstraintCast* -> And\n+\/\/ Pattern: parent -> LShift (use) -> (ConstraintCast | ConvI2L)* -> And\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- *                   -XX:+StressIGVN -XX:-CICompileOSR -Xcomp\n+ *                   -XX:+StressIGVN -Xcomp\n@@ -40,2 +40,2 @@\n- *          ConvI2L (reduced set of flags).\n- * @run main\/othervm compiler.ccp.TestShiftConvertAndNotification\n+ *          ConvI2L (no flags).\n+ * @run driver compiler.ccp.TestShiftConvertAndNotification\n","filename":"test\/hotspot\/jtreg\/compiler\/ccp\/TestShiftConvertAndNotification.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}