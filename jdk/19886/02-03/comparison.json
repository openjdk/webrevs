{"files":[{"patch":"@@ -1784,2 +1784,2 @@\n-  inline void setbcr( Register d, int biint);\n-  inline void setbcr( Register d, ConditionRegister cr, Condition cc);\n+  inline void setbcr(Register d, int biint);\n+  inline void setbcr(Register d, ConditionRegister cr, Condition cc);\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -346,4 +346,3 @@\n-\/\/ Branch-free implementation to convert !0 to false\n-\/\/ Set register dst to true if dst is non zero using temp for calculations on Power Version<10.\n-\/\/ Set register dst to true if dst is non zero for Power 10 and above machines.\n-void MacroAssembler::normalize_bool(Register dst, Register temp, bool use_64bit) {\n+\/\/ Branch-free implementation to convert !=0 to 1\n+\/\/ Set register dst to 1 if dst is non-zero. Use setbcr instruction on Power10.\n+void MacroAssembler::normalize_bool(Register dst, Register temp, bool is_64bit) {\n@@ -352,1 +351,1 @@\n-    if(use_64bit)\n+    if(is_64bit) {\n@@ -354,1 +353,2 @@\n-    else\n+    }\n+    else {\n@@ -356,0 +356,1 @@\n+    }\n@@ -361,1 +362,1 @@\n-    if(use_64bit)\n+    if(is_64bit) {\n@@ -363,1 +364,2 @@\n-    else\n+    }\n+    else {\n@@ -366,0 +368,1 @@\n+  }\n@@ -2418,3 +2421,1 @@\n-  neg(R0, linear_result);\n-  orr(linear_result, linear_result, R0);\n-  srdi(linear_result, linear_result, 63);\n+  normalize_bool(linear_result, R0, true);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-  \/\/ Branch-free implementation to convert !0 to false.\n+  \/\/ Branch-free implementation to convert !=0 to 1.\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}