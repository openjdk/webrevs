{"files":[{"patch":"@@ -66,22 +66,0 @@\n-\/\/ Branch-free implementation to convert !=0 to 1\n-\/\/ Set register dst to 1 if dst is non-zero. Use setbcr instruction on Power10.\n-void MacroAssembler::normalize_bool(Register dst, Register temp, bool is_64bit) {\n-\n-  if (VM_Version::has_brw()) {\n-    if (is_64bit) {\n-      cmpdi(CCR0, dst, 0);\n-    } else {\n-      cmpwi(CCR0, dst, 0);\n-    }\n-    setbcr(dst, CCR0, Assembler::equal);\n-  } else {\n-    neg(temp, dst);\n-    orr(temp, dst, temp);\n-    if (is_64bit) {\n-      srdi(dst, temp, 63);\n-    } else {\n-      srwi(dst, temp, 31);\n-    }\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-  \/\/ Branch-free implementation to convert !=0 to 1.\n-  void normalize_bool(Register dst, Register temp, bool use_64bit);\n@@ -183,1 +181,3 @@\n-\n+  \n+  \/\/ Branch-free implementation to convert !=0 to 1.\n+  void inline normalize_bool(Register dst, Register temp, bool use_64bit);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -267,0 +267,22 @@\n+\/\/ Branch-free implementation to convert !=0 to 1\n+\/\/ Set register dst to 1 if dst is non-zero. Use setbcr instruction on Power10.\n+inline void MacroAssembler::normalize_bool(Register dst, Register temp, bool is_64bit) {\n+\n+  if (VM_Version::has_brw()) {\n+    if (is_64bit) {\n+      cmpdi(CCR0, dst, 0);\n+    } else {\n+      cmpwi(CCR0, dst, 0);\n+    }\n+    setbcr(dst, CCR0, Assembler::equal);\n+  } else {\n+    neg(temp, dst);\n+    orr(temp, dst, temp);\n+    if (is_64bit) {\n+      srdi(dst, temp, 63);\n+    } else {\n+      srwi(dst, temp, 31);\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.inline.hpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}