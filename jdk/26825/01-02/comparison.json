{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8152680\n+ * @bug 8152680 8361381\n@@ -43,0 +43,17 @@\n+\n+        \/\/ This is the encoding-independent Khmer string \"បានស្នើសុំនៅតែត្រូវបានបដិសេធ\"\n+        \/\/ We can't check for more details like e.g. correct line breaking because it is font and platform dependent,\n+        \/\/ but we can at least chack that the created GlyphVector has monotonically increasing character indices.\n+        \/\/ This is guaranteed by HarfBuzz's HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS cluster level which is used\n+        \/\/ in the OpenJDK layout implementation.\n+        String khmer = \"\\u1794\\u17b6\\u1793\\u179f\\u17d2\\u1793\\u17be\\u179f\\u17bb\\u17c6\\u1793\\u17c5\" +\n+                \"\\u178f\\u17c2\\u178f\\u17d2\\u179a\\u17bc\\u179c\\u1794\\u17b6\\u1793\\u1794\\u178a\\u17b7\\u179f\\u17c1\\u1792\";\n+        font = new Font(Font.DIALOG, Font.PLAIN, 12);\n+        gv = font.layoutGlyphVector(frc, khmer.toCharArray(), 0, khmer.length(), 0);\n+        int[] indices = gv.getGlyphCharIndices(0, gv.getNumGlyphs(), null);\n+        for (int i = 0; i < (indices.length - 1); i++) {\n+            if (indices[i] > indices[i + 1]) {\n+                throw new RuntimeException(\"Glyph character indices are supposed to be monotonically growing, but character index at position \" +\n+                        i + \" is bigger then the one at position \" + (i + 1) + \", i.e. \" + indices[i] + \" > \" + indices[i + 1] + \".\");\n+            }\n+        }\n","filename":"test\/jdk\/java\/awt\/font\/GlyphVector\/GetGlyphCharIndexTest.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"}]}