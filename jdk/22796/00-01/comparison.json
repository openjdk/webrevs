{"files":[{"patch":"@@ -327,1 +327,2 @@\n-         * Updates module {@code source} in the layer to provide a service.\n+         * Updates the module layer to locate a service of the given type using\n+         * the given implementation class.\n@@ -329,2 +330,0 @@\n-         * @param  source\n-         *         The source module\n@@ -338,3 +337,0 @@\n-         * @throws IllegalArgumentException\n-         *         If {@code source} is not in the module layer\n-         *\n@@ -343,3 +339,4 @@\n-        public Controller addProvides(Module source, Class<?> service, Class<?> impl) {\n-            ensureInLayer(source);\n-            Modules.addProvides(source, service, impl);\n+        public Controller addProvider(Class<?> service, Class<?> impl) {\n+            \/\/ the implementation module for the service may be named or unnamed\n+            Module implModule = impl.getModule();\n+            Modules.addProvider(layer, service, impl);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ModuleLayer.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -175,0 +175,12 @@\n+    \/**\n+     * Add a provider to a module layer.\n+     *\n+     * @param layer the layer ot add the provider to (must not be {@code null})\n+     * @param service the service class (must not be {@code null})\n+     * @param impl the service implementation class (must not be {@code null})\n+     *\/\n+    public static void addProvider(ModuleLayer layer, Class<?> service, Class<?> impl) {\n+        \/\/ throws NPE if the layer is null\n+        JLA.getServicesCatalog(layer).addProvider(impl.getModule(), service, impl);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/Modules.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}