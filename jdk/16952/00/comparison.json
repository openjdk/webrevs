{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    int extraAttributes = -1; \/\/ e.g. POSIX permissions, sym links.\n+    int externalAttributes = -1; \/\/ e.g. POSIX permissions, sym links.\n@@ -137,1 +137,1 @@\n-        extraAttributes = e.extraAttributes;\n+        externalAttributes = e.externalAttributes;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -680,1 +680,1 @@\n-            e.extraAttributes = CENATX_PERMS(cen, pos) & 0xFFFF;\n+            e.externalAttributes = CENATX_PERMS(cen, pos) & 0xFFFF;\n@@ -1148,2 +1148,2 @@\n-                public int getExtraAttributes(ZipEntry ze) {\n-                    return ze.extraAttributes;\n+                public int getExternalAttributes(ZipEntry ze) {\n+                    return ze.externalAttributes;\n@@ -1152,2 +1152,2 @@\n-                public void setExtraAttributes(ZipEntry ze, int extraAttrs) {\n-                    ze.extraAttributes = extraAttrs;\n+                public void setExternalAttributes(ZipEntry ze, int externalAttrs) {\n+                    ze.externalAttributes = externalAttrs;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -542,1 +542,1 @@\n-        return (e.extraAttributes < 0) ? version :\n+        return (e.externalAttributes < 0) ? version :\n@@ -638,1 +638,1 @@\n-        writeInt(e.extraAttributes > 0 ? e.extraAttributes << 16 : 0);\n+        writeInt(e.externalAttributes > 0 ? e.externalAttributes << 16 : 0);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-    public void setExtraAttributes(ZipEntry ze, int extraAttrs);\n-    public int getExtraAttributes(ZipEntry ze);\n+    public void setExternalAttributes(ZipEntry ze, int externalAttrs);\n+    public int getExternalAttributes(ZipEntry ze);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaUtilZipFileAccess.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-    private boolean extraAttrsDetected;\n+    private boolean externalAttrsDetected;\n@@ -939,3 +939,3 @@\n-        int extraAttrs = JUZFA.getExtraAttributes(ze);\n-        if (!extraAttrsDetected && extraAttrs != -1) {\n-            extraAttrsDetected = true;\n+        int externalAttrs = JUZFA.getExternalAttributes(ze);\n+        if (!externalAttrsDetected && externalAttrs != -1) {\n+            externalAttrsDetected = true;\n@@ -944,1 +944,1 @@\n-        JUZFA.setExtraAttributes(ze2, extraAttrs);\n+        JUZFA.setExternalAttributes(ze2, externalAttrs);\n","filename":"src\/jdk.jartool\/share\/classes\/jdk\/security\/jarsigner\/JarSigner.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-    private static boolean extraAttrsDetected;\n+    private static boolean externalAttrsDetected;\n@@ -826,2 +826,2 @@\n-                    if (!extraAttrsDetected && JUZFA.getExtraAttributes(je) != -1) {\n-                        extraAttrsDetected = true;\n+                    if (!externalAttrsDetected && JUZFA.getExternalAttributes(je) != -1) {\n+                        externalAttrsDetected = true;\n@@ -1316,2 +1316,2 @@\n-        if (extraAttrsDetected) {\n-            warnings.add(rb.getString(\"extra.attributes.detected\"));\n+        if (externalAttrsDetected) {\n+            warnings.add(rb.getString(\"external.attributes.detected\"));\n@@ -1951,1 +1951,1 @@\n-                    (t, o) -> extraAttrsDetected = true);\n+                    (t, o) -> externalAttrsDetected = true);\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-        {\"extra.attributes.detected\", \"POSIX file permission and\/or symlink attributes detected. These attributes are ignored when signing and are not protected by the signature.\"},\n+        {\"external.attributes.detected\", \"POSIX file permission and\/or symlink attributes detected. These attributes are ignored when signing and are not protected by the signature.\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-        {\"extra.attributes.detected\", \"POSIX-Dateiberechtigung und\/oder Symlink-Attribute erkannt. Diese Attribute werden bei der Signatur ignoriert und sind nicht durch die Signatur gesch\\u00FCtzt.\"},\n+        {\"external.attributes.detected\", \"POSIX-Dateiberechtigung und\/oder Symlink-Attribute erkannt. Diese Attribute werden bei der Signatur ignoriert und sind nicht durch die Signatur gesch\\u00FCtzt.\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_de.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-        {\"extra.attributes.detected\", \"POSIX\\u30D5\\u30A1\\u30A4\\u30EB\\u6A29\\u9650\\u307E\\u305F\\u306Fsymlink(\\u3042\\u308B\\u3044\\u306F\\u305D\\u306E\\u4E21\\u65B9)\\u306E\\u5C5E\\u6027\\u304C\\u691C\\u51FA\\u3055\\u308C\\u307E\\u3057\\u305F\\u3002\\u7F72\\u540D\\u4E2D\\u306F\\u3053\\u308C\\u3089\\u306E\\u5C5E\\u6027\\u306F\\u7121\\u8996\\u3055\\u308C\\u3001\\u7F72\\u540D\\u306B\\u3088\\u3063\\u3066\\u4FDD\\u8B77\\u3055\\u308C\\u307E\\u305B\\u3093\\u3002\"},\n+        {\"external.attributes.detected\", \"POSIX\\u30D5\\u30A1\\u30A4\\u30EB\\u6A29\\u9650\\u307E\\u305F\\u306Fsymlink(\\u3042\\u308B\\u3044\\u306F\\u305D\\u306E\\u4E21\\u65B9)\\u306E\\u5C5E\\u6027\\u304C\\u691C\\u51FA\\u3055\\u308C\\u307E\\u3057\\u305F\\u3002\\u7F72\\u540D\\u4E2D\\u306F\\u3053\\u308C\\u3089\\u306E\\u5C5E\\u6027\\u306F\\u7121\\u8996\\u3055\\u308C\\u3001\\u7F72\\u540D\\u306B\\u3088\\u3063\\u3066\\u4FDD\\u8B77\\u3055\\u308C\\u307E\\u305B\\u3093\\u3002\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_ja.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-        {\"extra.attributes.detected\", \"\\u68C0\\u6D4B\\u5230 POSIX \\u6587\\u4EF6\\u6743\\u9650\\u548C\/\\u6216 symlink \\u5C5E\\u6027\\u3002\\u8FD9\\u4E9B\\u5C5E\\u6027\\u5728\\u8FDB\\u884C\\u7B7E\\u540D\\u65F6\\u4F1A\\u88AB\\u5FFD\\u7565\\uFF0C\\u4E0D\\u53D7\\u8BE5\\u7B7E\\u540D\\u7684\\u4FDD\\u62A4\\u3002\"},\n+        {\"external.attributes.detected\", \"\\u68C0\\u6D4B\\u5230 POSIX \\u6587\\u4EF6\\u6743\\u9650\\u548C\/\\u6216 symlink \\u5C5E\\u6027\\u3002\\u8FD9\\u4E9B\\u5C5E\\u6027\\u5728\\u8FDB\\u884C\\u7B7E\\u540D\\u65F6\\u4F1A\\u88AB\\u5FFD\\u7565\\uFF0C\\u4E0D\\u53D7\\u8BE5\\u7B7E\\u540D\\u7684\\u4FDD\\u62A4\\u3002\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources_zh_CN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-        verifyExtraAttrs(ZIPFILENAME);\n+        verifyExternalAttrs(ZIPFILENAME);\n@@ -85,1 +85,1 @@\n-        verifyExtraAttrs(ZIPFILENAME);\n+        verifyExternalAttrs(ZIPFILENAME);\n@@ -98,2 +98,2 @@\n-    private static void verifyExtraAttrs(String zipFileName) throws IOException {\n-        \/\/ the 16 bit extra attributes value should equal 0xa1ff - look for that pattern.\n+    private static void verifyExternalAttrs(String zipFileName) throws IOException {\n+        \/\/ the 16 bit 'external file attributes' value should equal 0xa1ff - look for that pattern.\n@@ -110,1 +110,1 @@\n-            throw new RuntimeException(\"extra attribute value not detected\");\n+            throw new RuntimeException(\"external file attribute value not detected\");\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/SymLinkTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}