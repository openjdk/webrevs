{"files":[{"patch":"@@ -3189,1 +3189,1 @@\n-\/\/ VectorCastB2X\n+\/\/ VectorCastB2X, VectorUCastB2X\n@@ -3212,3 +3212,4 @@\n-\/\/ VectorUCastB2X\n-\n-instruct vcvtUBtoX(vReg dst, vReg src) %{\n+instruct vcvtUBtoX_extend(vReg dst, vReg src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n) == T_INT ||\n+            Matcher::vector_element_basic_type(n) == T_LONG);\n@@ -3220,11 +3221,3 @@\n-    if (is_floating_point_type(bt)) {\n-      __ integer_extend_v(as_VectorRegister($dst$$reg), bt == T_FLOAT ? T_INT : T_LONG,\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n-                          false \/* is_signed *\/);\n-      __ csrwi(CSR_FRM, C2_MacroAssembler::rne);\n-      __ vfcvt_f_xu_v(as_VectorRegister($dst$$reg), as_VectorRegister($dst$$reg));\n-    } else {\n-      __ integer_extend_v(as_VectorRegister($dst$$reg), bt,\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n-                          false \/* is_signed *\/);\n-    }\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), bt,\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n+                        false \/* is_signed *\/);\n@@ -3237,6 +3230,14 @@\n-instruct vcvtStoX(vReg dst, vReg src) %{\n-  predicate(Matcher::vector_element_basic_type(n) == T_BYTE ||\n-            Matcher::vector_element_basic_type(n) == T_INT ||\n-            Matcher::vector_element_basic_type(n) == T_LONG ||\n-            Matcher::vector_element_basic_type(n) == T_FLOAT ||\n-            Matcher::vector_element_basic_type(n) == T_DOUBLE);\n+instruct vcvtStoB(vReg dst, vReg src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE);\n+  match(Set dst (VectorCastS2X src));\n+  format %{ \"vcvtStoB $dst, $src\" %}\n+  ins_encode %{\n+    __ integer_narrow_v(as_VectorRegister($dst$$reg), T_BYTE, Matcher::vector_length(this),\n+                        as_VectorRegister($src$$reg), T_SHORT);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vcvtStoX_extend(vReg dst, vReg src) %{\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT ||\n+             Matcher::vector_element_basic_type(n) == T_LONG));\n@@ -3245,1 +3246,15 @@\n-  format %{ \"vcvtStoX $dst, $src\" %}\n+  format %{ \"vcvtStoX_extend $dst, $src\" %}\n+  ins_encode %{\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), Matcher::vector_element_basic_type(this),\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n+                        true \/* is_signed *\/);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vcvtStoX_fp_extend(vReg dst, vReg src) %{\n+  predicate((Matcher::vector_element_basic_type(n) == T_FLOAT ||\n+             Matcher::vector_element_basic_type(n) == T_DOUBLE));\n+  match(Set dst (VectorCastS2X src));\n+  effect(TEMP_DEF dst);\n+  format %{ \"vcvtStoX_fp_extend $dst, $src\" %}\n@@ -3248,16 +3263,6 @@\n-    if (bt == T_BYTE) {\n-      __ integer_narrow_v(as_VectorRegister($dst$$reg), T_BYTE, Matcher::vector_length(this),\n-                          as_VectorRegister($src$$reg), T_SHORT);\n-    } else if ((bt == T_INT || bt == T_LONG)) {\n-      __ integer_extend_v(as_VectorRegister($dst$$reg), bt,\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n-                          true \/* is_signed *\/);\n-    } else {\n-      assert(bt == T_FLOAT || bt == T_DOUBLE, \"must be\");\n-      __ integer_extend_v(as_VectorRegister($dst$$reg), (bt == T_FLOAT ? T_INT : T_LONG),\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n-                          true \/* is_signed *\/);\n-      __ vsetvli_helper(bt, Matcher::vector_length(this));\n-      __ csrwi(CSR_FRM, C2_MacroAssembler::rne);\n-      __ vfcvt_f_x_v(as_VectorRegister($dst$$reg), as_VectorRegister($dst$$reg));\n-    }\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), (bt == T_FLOAT ? T_INT : T_LONG),\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n+                        true \/* is_signed *\/);\n+    __ vsetvli_helper(bt, Matcher::vector_length(this));\n+    __ csrwi(CSR_FRM, C2_MacroAssembler::rne);\n+    __ vfcvt_f_x_v(as_VectorRegister($dst$$reg), as_VectorRegister($dst$$reg));\n@@ -3289,1 +3294,0 @@\n-  effect(TEMP_DEF dst);\n@@ -3328,1 +3332,0 @@\n-  effect(TEMP_DEF dst);\n@@ -3338,13 +3341,0 @@\n-instruct vcvtUItoF(vReg dst, vReg src) %{\n-  predicate(Matcher::vector_element_basic_type(n) == T_FLOAT);\n-  match(Set dst (VectorUCastI2X src));\n-  effect(TEMP_DEF dst);\n-  format %{ \"vcvtUItoF $dst, $src\" %}\n-  ins_encode %{\n-    __ vsetvli_helper(T_FLOAT, Matcher::vector_length(this));\n-    __ csrwi(CSR_FRM, C2_MacroAssembler::rne);\n-    __ vfcvt_f_xu_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -3364,13 +3354,0 @@\n-instruct vcvtUItoD(vReg dst, vReg src) %{\n-  predicate(Matcher::vector_element_basic_type(n) == T_DOUBLE);\n-  match(Set dst (VectorUCastI2X src));\n-  effect(TEMP_DEF dst);\n-  format %{ \"vcvtUItoD $dst, $src\" %}\n-  ins_encode %{\n-    __ vsetvli_helper(T_INT, Matcher::vector_length(this), Assembler::mf2);\n-    __ csrwi(CSR_FRM, C2_MacroAssembler::rne);\n-    __ vfwcvt_f_xu_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -3384,1 +3361,0 @@\n-  effect(TEMP_DEF dst);\n@@ -3397,1 +3373,0 @@\n-  effect(TEMP_DEF dst);\n@@ -3410,1 +3385,0 @@\n-  effect(TEMP_DEF dst);\n@@ -3517,1 +3491,0 @@\n-  effect(TEMP_DEF dst);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":43,"deletions":70,"binary":false,"changes":113,"status":"modified"}]}