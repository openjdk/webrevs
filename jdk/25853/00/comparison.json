{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -284,16 +284,1 @@\n-        \/\/ on Windows we test with the DOS hidden attribute set\n-        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n-            DosFileAttributeView view = Files\n-                .getFileAttributeView(file.toPath(), DosFileAttributeView.class);\n-            view.setHidden(true);\n-            try {\n-                assertTrue(file.isHidden());\n-                assertTrue(link2file.isHidden());\n-                assertTrue(link2link2file.isHidden());\n-            } finally {\n-                view.setHidden(false);\n-            }\n-            assertFalse(file.isHidden());\n-            assertFalse(link2file.isHidden());\n-            assertFalse(link2link2file.isHidden());\n-        }\n+        testDOSHiddenAttributes();\n@@ -365,0 +350,20 @@\n+     static void testDOSHiddenAttributes() throws IOException {\n+        \/\/ on Windows we test with the DOS hidden attribute set\n+        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n+            header(\"testDOSHiddenAttributes\");\n+            DosFileAttributeView view = Files\n+                .getFileAttributeView(file.toPath(), DosFileAttributeView.class);\n+            view.setHidden(true);\n+            try {\n+                assertTrue(file.isHidden());\n+                assertTrue(link2file.isHidden());\n+                assertTrue(link2link2file.isHidden());\n+            } finally {\n+                view.setHidden(false);\n+            }\n+            assertFalse(file.isHidden());\n+            assertFalse(link2file.isHidden());\n+            assertFalse(link2link2file.isHidden());\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/io\/File\/SymLinks.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"}]}