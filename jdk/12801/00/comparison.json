{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import com.sun.source.tree.PrimitiveTypeTree;\n@@ -143,0 +144,2 @@\n+        Path internalAPIDigestFile;\n+        Map<String, String> internalAPI = new HashMap<>();\n@@ -144,0 +147,2 @@\n+        Context context = ((BasicJavacTask) jt).getContext();\n+        JavaCompiler compiler = JavaCompiler.instance(context);\n@@ -145,1 +150,0 @@\n-            Context context = ((BasicJavacTask) jt).getContext();\n@@ -160,2 +164,12 @@\n-            Path internalAPIDigestFile = Paths.get(internalAPIPath);\n-            JavaCompiler compiler = JavaCompiler.instance(context);\n+            internalAPIDigestFile = Paths.get(internalAPIPath);\n+            if (Files.isReadable(internalAPIDigestFile)) {\n+                try {\n+                    Files.readAllLines(internalAPIDigestFile, StandardCharsets.UTF_8)\n+                         .forEach(line -> {\n+                             String[] keyAndValue = line.split(\"=\");\n+                             internalAPI.put(keyAndValue[0], keyAndValue[1]);\n+                         });\n+                } catch (IOException ex) {\n+                    throw new IllegalStateException(ex);\n+                }\n+            }\n@@ -172,1 +186,1 @@\n-                                                                         internalAPIDigestFile,\n+                                                                         internalAPI,\n@@ -216,1 +230,11 @@\n-                if (te.getKind() == Kind.COMPILATION && !noApiChange.get()) {\n+                if (te.getKind() == Kind.COMPILATION && !noApiChange.get() &&\n+                    compiler.errorCount() == 0) {\n+                    try (OutputStream out = Files.newOutputStream(internalAPIDigestFile)) {\n+                        String hashes = internalAPI.entrySet()\n+                                                   .stream()\n+                                                   .map(e -> e.getKey() + \"=\" + e.getValue())\n+                                                   .collect(Collectors.joining(\"\\n\"));\n+                        out.write(hashes.getBytes(StandardCharsets.UTF_8));\n+                    } catch (IOException ex) {\n+                        throw new IllegalStateException(ex);\n+                    }\n@@ -261,1 +285,1 @@\n-            Path internalAPIDigestFile, AtomicBoolean noApiChange,\n+            Map<String, String> internalAPI, AtomicBoolean noApiChange,\n@@ -263,12 +287,0 @@\n-        Map<String, String> internalAPI = new LinkedHashMap<>();\n-        if (Files.isReadable(internalAPIDigestFile)) {\n-            try {\n-                Files.readAllLines(internalAPIDigestFile, StandardCharsets.UTF_8)\n-                     .forEach(line -> {\n-                         String[] keyAndValue = line.split(\"=\");\n-                         internalAPI.put(keyAndValue[0], keyAndValue[1]);\n-                     });\n-            } catch (IOException ex) {\n-                throw new IllegalStateException(ex);\n-            }\n-        }\n@@ -292,1 +304,0 @@\n-\n@@ -304,9 +315,0 @@\n-            try (OutputStream out = Files.newOutputStream(internalAPIDigestFile)) {\n-                String hashes = internalAPI.entrySet()\n-                                           .stream()\n-                                           .map(e -> e.getKey() + \"=\" + e.getValue())\n-                                           .collect(Collectors.joining(\"\\n\"));\n-                out.write(hashes.getBytes(StandardCharsets.UTF_8));\n-            } catch (IOException ex) {\n-                throw new IllegalStateException(ex);\n-            }\n@@ -881,0 +883,6 @@\n+        @Override\n+        public Void visitPrimitiveType(PrimitiveTypeTree node, Void p) {\n+            update(node.getPrimitiveTypeKind().name());\n+            return super.visitPrimitiveType(node, p);\n+        }\n+\n@@ -887,1 +895,1 @@\n-        private final Path internalAPIDigestFile;\n+        private final Map<String, String> internalAPI;\n@@ -893,1 +901,1 @@\n-                                         Path internalAPIDigestFile,\n+                                         Map<String, String> internalAPI,\n@@ -898,1 +906,1 @@\n-            this.internalAPIDigestFile = internalAPIDigestFile;\n+            this.internalAPI = internalAPI;\n@@ -910,1 +918,1 @@\n-                                                internalAPIDigestFile,\n+                                                internalAPI,\n","filename":"make\/jdk\/src\/classes\/build\/tools\/depend\/Depend.java","additions":40,"deletions":32,"binary":false,"changes":72,"status":"modified"}]}