{"files":[{"patch":"@@ -840,1 +840,1 @@\n-                default -> throw new IllegalStateException(\"Unexpected tree kind: \" + m.getKind());\n+                default -> false;\n","filename":"make\/jdk\/src\/classes\/build\/tools\/depend\/Depend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.io.Writer;\n@@ -57,0 +58,2 @@\n+        test.testPrimitiveTypeChanges();\n+        test.testWithErrors();\n@@ -305,0 +308,21 @@\n+        doOrdinaryTest(\"package test; public record Test (int x) { }\",\n+                       \"package test; public record Test (long x) { unresolved f; }\", \/\/erroneous record member, should not crash\n+                       false);\n+    }\n+\n+    public void testPrimitiveTypeChanges() throws Exception {\n+        doOrdinaryTest(\"package test; public record Test (int x) { }\",\n+                       \"package test; public record Test (long x) { }\",\n+                       true);\n+        doOrdinaryTest(\"package test; public record Test (int x) { }\",\n+                       \"package test; public record Test (Integer x) { }\",\n+                       true);\n+        doOrdinaryTest(\"package test; public record Test (Integer x) { }\",\n+                       \"package test; public record Test (int x) { }\",\n+                       true);\n+    }\n+\n+    public void testWithErrors() throws Exception {\n+        doOrdinaryTest(\"package test; public record Test (int x) { }\",\n+                       \"package test; public record Test (long x) { static unresolved f; }\",\n+                       false); \/\/the API change should not be recorded for code with errors\n@@ -313,0 +337,1 @@\n+    private Path modifiedFiles;\n@@ -331,0 +356,1 @@\n+        modifiedFiles = scratch.resolve(\"modified-files\");\n@@ -338,0 +364,4 @@\n+        try (Writer out = Files.newBufferedWriter(modifiedFiles)) {\n+            out.append(\"module-info.java\\n\");\n+            out.append(\"test.Test.java\\n\");\n+        }\n@@ -341,2 +371,3 @@\n-                              \"-Xplugin:depend \" + apiHash.toString() + \" \" + treeHash.toString(),\n-                              \"-XDmodifiedInputs=build-all\");\n+                              \"-Xplugin:depend \" + apiHash.toString(),\n+                              \"-XDinternalAPIPath=\" + treeHash.toString(),\n+                              \"-XDmodifiedInputs=\" + modifiedFiles.toString());\n@@ -372,0 +403,7 @@\n+        try (Writer out = Files.newBufferedWriter(modifiedFiles)) {\n+            out.append(\"module-info.java\\n\");\n+            out.append(\"test.Test1.java\\n\");\n+            out.append(\"test.Test2.java\\n\");\n+            out.append(\"test.TestImpl1.java\\n\");\n+            out.append(\"test.TestImpl2.java\\n\");\n+        }\n@@ -376,1 +414,2 @@\n-                              \"-XDmodifiedInputs=build-all\");\n+                              \"-XDinternalAPIPath=\" + treeHash.toString(),\n+                              \"-XDmodifiedInputs=\" + modifiedFiles.toString());\n@@ -409,0 +448,1 @@\n+        private final String className;\n@@ -413,0 +453,1 @@\n+            this.className = className;\n@@ -421,0 +462,5 @@\n+        @Override\n+        public String getName() {\n+            return className + \".java\";\n+        }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/depend\/DependTest.java","additions":49,"deletions":3,"binary":false,"changes":52,"status":"modified"}]}