{"files":[{"patch":"@@ -34,2 +34,5 @@\n- * @run junit\/othervm -DMOCKED.TIME=false ValidateISO4217\n- * @run junit\/othervm --patch-module java.base=${test.class.path} -DMOCKED.TIME=true ValidateISO4217\n+ * @run junit\/othervm -DMOCKED.TIME=setup ValidateISO4217\n+ * @run main\/othervm --patch-module java.base=${test.class.path}\n+ *      -DMOCKED.TIME=check -Djava.util.currency.data=${test.src}\/currency.properties ValidateISO4217\n+ * @run junit\/othervm --patch-module java.base=${test.class.path}\n+ *      -DMOCKED.TIME=true ValidateISO4217\n@@ -40,3 +43,5 @@\n- * which is required by the second invocation. The second invocation using the\n- * modded class files via a module patch allow us to test any cut-over dates after\n- * the transition.\n+ * which is required by the subsequent invocations. The second invocation ensures that\n+ * the module patch and mocked time are functioning correctly; it does not run any tests.\n+ * The third invocation using the modded class files via a module patch allow us\n+ * to test any cut-over dates after the transition.\n+ * Valid MOCKED.TIME values are \"setup\", \"check\", and \"true\".\n@@ -71,1 +76,0 @@\n-import jtreg.SkippedException;\n@@ -140,1 +144,2 @@\n-            System.getProperty(\"test.classes\", \".\") + \"\/java\/util\/\";\n+            System.getProperty(\"test.classes\") + \"\/java\/util\/\";\n+    private static final String MOCKED_TIME = System.getProperty(\"MOCKED.TIME\");\n@@ -150,0 +155,15 @@\n+    \/\/ \"check\" invocation only runs the main method (and not any tests) to determine if the\n+    \/\/ future time checking is correct\n+    public static void main(String[] args) {\n+        \/\/ Override for PK in test\/currency.properties is JPZ (in year 3000)\n+        if (MOCKED_TIME.equals(\"check\")) {\n+            if (!Currency.getInstance(Locale.of(\"\", \"PK\")).getCurrencyCode().equals(\"JPZ\")) {\n+                throw new RuntimeException(\n+                        \"Module patch and or mocked time is not functioning correctly\");\n+            } else {} \/\/ Properly working. Do nothing and move to third invocation\n+        } else {\n+            throw new RuntimeException(\n+                    \"Incorrect usage of ValidateISO4217. Main method invoked without proper system property value\");\n+        }\n+    }\n+\n@@ -159,2 +179,3 @@\n-        if (System.getProperty(\"MOCKED.TIME\") == null) {\n-            throw new SkippedException(\n+        if (MOCKED_TIME == null\n+                || (!MOCKED_TIME.equals(\"setup\") && !MOCKED_TIME.equals(\"true\"))) {\n+            throw new RuntimeException(\n@@ -167,1 +188,1 @@\n-        if (System.getProperty(\"MOCKED.TIME\").equals(\"false\")) {\n+        if (MOCKED_TIME.equals(\"setup\")) {\n@@ -406,1 +427,1 @@\n-        var mocked = System.getProperty(\"MOCKED.TIME\").equals(\"true\");\n+        var mocked = MOCKED_TIME.equals(\"true\");\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":32,"deletions":11,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -16,0 +16,1 @@\n+PK=JPZ,999,0,3000-01-01T00:00:00\n","filename":"test\/jdk\/java\/util\/Currency\/currency.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}