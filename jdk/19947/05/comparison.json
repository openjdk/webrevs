{"files":[{"patch":"@@ -1862,1 +1862,1 @@\n-    __ call_c_with_frame_resize(copyfunc_addr, \/*stub does not need resized frame*\/ 0);\n+    __ call_c(copyfunc_addr);\n@@ -2060,1 +2060,1 @@\n-        __ call_c_with_frame_resize(copyfunc_addr, \/*stub does not need resized frame*\/ 0);\n+        __ call_c(copyfunc_addr);\n@@ -2184,1 +2184,1 @@\n-  __ call_c_with_frame_resize(entry, \/*stub does not need resized frame*\/ 0);\n+  __ call_c(entry);\n@@ -2865,1 +2865,1 @@\n-  __ call_c_with_frame_resize(dest, \/*no resizing*\/ 0);\n+  __ call_c(dest);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -407,11 +407,0 @@\n-\n-address C1_MacroAssembler::call_c_with_frame_resize(address dest, int frame_resize) {\n-  if (frame_resize) { resize_frame(-frame_resize, R0); }\n-#if defined(ABI_ELFv2)\n-  address return_pc = call_c(dest, relocInfo::runtime_call_type);\n-#else\n-  address return_pc = call_c(CAST_FROM_FN_PTR(FunctionDescriptor*, dest), relocInfo::runtime_call_type);\n-#endif\n-  if (frame_resize) { resize_frame(frame_resize, R0); }\n-  return return_pc;\n-}\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-  address call_c_with_frame_resize(address dest, int frame_resize);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  address return_pc = call_c_with_frame_resize(entry_point, \/*No resize, we have a C compatible frame.*\/0);\n+  address return_pc = call_c(entry_point);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_Runtime1_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,9 +138,1 @@\n-#if defined(ABI_ELFv2)\n-    call_c(CAST_FROM_FN_PTR(address,\n-                            Interpreter::remove_activation_preserving_args_entry),\n-           relocInfo::none);\n-#else\n-    call_c(CAST_FROM_FN_PTR(FunctionDescriptor*,\n-                            Interpreter::remove_activation_preserving_args_entry),\n-           relocInfo::none);\n-#endif\n+    call_c(CAST_FROM_FN_PTR(address, Interpreter::remove_activation_preserving_args_entry));\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1296,1 +1296,0 @@\n-#if defined(ABI_ELFv2)\n@@ -1298,3 +1297,0 @@\n-#else\n-  address return_pc = call_c((FunctionDescriptor*)entry_point, relocInfo::none);\n-#endif\n@@ -1321,5 +1317,1 @@\n-#if defined(ABI_ELFv2)\n-  call_c(entry_point, relocInfo::none);\n-#else\n-  call_c(CAST_FROM_FN_PTR(FunctionDescriptor*, entry_point), relocInfo::none);\n-#endif\n+  call_c(entry_point);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-  address call_c(address function_entry, relocInfo::relocType rt);\n+  address call_c(address function_entry, relocInfo::relocType rt = relocInfo::none);\n@@ -367,0 +367,3 @@\n+  address call_c(address function_entry, relocInfo::relocType rt = relocInfo::none) {\n+    return call_c((FunctionDescriptor*)function_entry, rt);\n+  }\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -102,6 +102,1 @@\n-#if defined(ABI_ELFv2)\n-  __ call_c((address) OptoRuntime::handle_exception_C, relocInfo::none);\n-#else\n-  __ call_c(CAST_FROM_FN_PTR(FunctionDescriptor*, OptoRuntime::handle_exception_C),\n-            relocInfo::none);\n-#endif\n+  __ call_c((address) OptoRuntime::handle_exception_C);\n","filename":"src\/hotspot\/cpu\/ppc\/runtime_ppc.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2447,1 +2447,0 @@\n-#if defined(ABI_ELFv2)\n@@ -2449,4 +2448,0 @@\n-#else\n-  FunctionDescriptor* fd_native_method = (FunctionDescriptor*) native_func;\n-  __ call_c(fd_native_method, relocInfo::runtime_call_type);\n-#endif\n@@ -3458,5 +3453,1 @@\n-#if defined(ABI_ELFv2)\n-  __ call_c(runtime_entry, relocInfo::none);\n-#else\n-  __ call_c(CAST_FROM_FN_PTR(FunctionDescriptor*, runtime_entry), relocInfo::none);\n-#endif\n+  __ call_c(runtime_entry);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1467,7 +1467,1 @@\n-#if defined(ABI_ELFv2)\n-  __ call_c(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans),\n-            relocInfo::none);\n-#else\n-  __ call_c(CAST_FROM_FN_PTR(FunctionDescriptor*, JavaThread::check_special_condition_for_native_trans),\n-            relocInfo::none);\n-#endif\n+  __ call_c(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans));\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}