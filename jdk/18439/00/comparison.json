{"files":[{"patch":"@@ -474,1 +474,1 @@\n-# This test fails on macOS 14\n+# These tests fail on macOS 14\n@@ -476,0 +476,1 @@\n+java\/awt\/Dialog\/JaWSTest.java 8324782 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 4690465\n+  @summary Tests that after dialog is hidden on another EDT, owning EDT gets notified.\n+  @modules java.desktop\/sun.awt\n+  @key headful\n+  @run main JaWSTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import sun.awt.SunToolkit;\n+import sun.awt.AppContext;\n+\n+public class JaWSTest implements ActionListener, Runnable {\n+\n+    static volatile Frame frame;\n+    static volatile JaWSTest worker;\n+    static volatile Dialog dummyDialog;\n+    static final Object signalObject = new Object();\n+    static volatile AppContext appContextObject = null;\n+    static volatile Button button = null;\n+    static final CountDownLatch dialogFinished = new CountDownLatch(1);\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(JaWSTest::createUI);\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            Point buttonLocation = button.getLocationOnScreen();\n+            robot.mouseMove(buttonLocation.x + button.getWidth()\/2,\n+                            buttonLocation.y + button.getHeight()\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            if (!worker.dialogFinished.await(5, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\"Dialog thread is blocked\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                EventQueue.invokeAndWait(frame::dispose);\n+            }\n+        }\n+    }\n+\n+    static void createUI() {\n+        worker = new JaWSTest();\n+        frame = new Frame(\"JaWSTest Main User Frame\");\n+        button = new Button(\"Press To Save\");\n+        button.addActionListener(worker);\n+        frame.add(button);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public void actionPerformed(ActionEvent ae) {\n+        System.err.println(\"Action Performed\");\n+        synchronized (signalObject) {\n+            ThreadGroup askUser = new ThreadGroup(\"askUser\");\n+            final Thread handler = new Thread(askUser, worker, \"userDialog\");\n+\n+            dummyDialog = new Dialog(frame, \"Dummy Modal Dialog\", true);\n+            dummyDialog.setBounds(200, 200, 100, 100);\n+            dummyDialog.addWindowListener(new WindowAdapter() {\n+                    public void windowOpened(WindowEvent we) {\n+                        System.err.println(\"handler is started\");\n+                        handler.start();\n+                    }\n+                    public void windowClosing(WindowEvent e) {\n+                        dummyDialog.setVisible(false);\n+                    }\n+                });\n+            dummyDialog.setResizable(false);\n+            dummyDialog.toBack();\n+            System.err.println(\"Before First Modal\");\n+            dummyDialog.setVisible(true);\n+            System.err.println(\"After First Modal\");\n+            try {\n+                signalObject.wait();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+                dummyDialog.setVisible(false);\n+            }\n+            if (appContextObject != null) {\n+                appContextObject = null;\n+            }\n+            dummyDialog.dispose();\n+        }\n+        System.err.println(\"Show Something\");\n+        dialogFinished.countDown();\n+    }\n+\n+    public void run() {\n+        System.err.println(\"Running\");\n+        try {\n+            appContextObject = SunToolkit.createNewAppContext();\n+       } finally {\n+           try {\n+               Thread.sleep(1000);\n+           } catch (InterruptedException ie) {\n+               ie.printStackTrace();\n+           }\n+           System.err.println(\"Before Hiding 1\");\n+           dummyDialog.setVisible(false);\n+           System.err.println(\"Before Synchronized\");\n+           synchronized (signalObject) {\n+               System.err.println(\"In Synchronized\");\n+               signalObject.notify();\n+               System.err.println(\"After Notify\");\n+           }\n+        }\n+        System.err.println(\"Stop Running\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/JaWSTest.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"}]}