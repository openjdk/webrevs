{"files":[{"patch":"@@ -489,4 +489,9 @@\n-                var value = popArg();\n-                if (value.startsWith(\"-\")) {\n-                    prevArg();\n-                    setOptionValue(option, true);\n+                nextArg();\n+                if (hasNextArg()) {\n+                    var value = getArg();\n+                    if (value.startsWith(\"-\")) {\n+                        prevArg();\n+                        setOptionValue(option, true);\n+                    } else {\n+                        setOptionValue(option, value);\n+                    }\n@@ -494,1 +499,1 @@\n-                    setOptionValue(option, value);\n+                    setOptionValue(option, true);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -517,0 +517,3 @@\n+                case APP_DIR -> {\n+                    return cmd.pathToPackageFile(appLayout.appDirectory());\n+                }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LinuxHelper.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -193,0 +193,1 @@\n+            cfgs[0].applyToMainLauncher(cmd);\n@@ -196,1 +197,40 @@\n-            cfgs[0].applyToMainLauncher(cmd);\n+        }).run(RunnablePackageTest.Action.CREATE_AND_UNPACK);\n+    }\n+\n+    @Test(ifNotOS = OperatingSystem.MACOS)\n+    @Parameter(value = \"DEFAULT\")\n+    @Parameter(value = \"APP_DIR\")\n+    public void testLastArg(StartupDirectory startupDirectory) {\n+        final List<String> shortcutArgs = new ArrayList<>();\n+        if (TKit.isLinux()) {\n+            shortcutArgs.add(\"--linux-shortcut\");\n+        } else if (TKit.isWindows()) {\n+            shortcutArgs.add(\"--win-shortcut\");\n+        } else {\n+            TKit.assertUnexpected(\"Unsupported platform\");\n+        }\n+\n+        if (startupDirectory == StartupDirectory.APP_DIR) {\n+            shortcutArgs.add(startupDirectory.asStringValue());\n+        }\n+\n+        Path[] predefinedAppImage = new Path[1];\n+\n+        new PackageTest().addRunOnceInitializer(() -> {\n+            var cmd = JPackageCommand.helloAppImage()\n+                    .setArgumentValue(\"--name\", \"foo\")\n+                    .setFakeRuntime();\n+\n+            cmd.execute();\n+\n+            predefinedAppImage[0] = cmd.outputBundle();\n+        }).addInitializer(cmd -> {\n+            cmd.removeArgumentWithValue(\"--input\");\n+            cmd.setArgumentValue(\"--name\", \"AddLShortcutDir3Test\");\n+            cmd.addArguments(\"--app-image\", predefinedAppImage[0]);\n+            cmd.ignoreDefaultVerbose(true);\n+        }).addInitializer(cmd -> {\n+            cmd.addArguments(shortcutArgs);\n+        }).addBundleVerifier(cmd -> {\n+            TKit.assertEquals(shortcutArgs.getLast(), cmd.getAllArguments().getLast(),\n+                    \"Check the last argument of jpackage command line\");\n@@ -210,0 +250,1 @@\n+    @Parameter(value = \"APP_DIR\")\n","filename":"test\/jdk\/tools\/jpackage\/share\/AddLShortcutTest.java","additions":42,"deletions":1,"binary":false,"changes":43,"status":"modified"}]}