{"files":[{"patch":"@@ -42,0 +42,3 @@\n+    \/\/ No fencing required, the members are declared volatile so the compiler will not reorder and\n+    \/\/ the profiler always reads from the same thread and should observe the state in program order.\n+\n@@ -44,1 +47,0 @@\n-    OrderAccess::release();\n@@ -57,0 +59,2 @@\n+    \/\/ No fencing required, the members are declared volatile so the compiler will not reorder and\n+    \/\/ the profiler always reads from the same thread and should observe the state in program order.\n@@ -59,1 +63,0 @@\n-      OrderAccess::release();\n","filename":"src\/hotspot\/cpu\/aarch64\/javaFrameAnchor_aarch64.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -637,2 +637,0 @@\n-  str(last_java_sp, Address(rthread, JavaThread::last_Java_sp_offset()));\n-\n@@ -643,0 +641,3 @@\n+\n+  \/\/ Must be last so profiler will always see valid frame if has_last_frame() is true\n+  str(last_java_sp, Address(rthread, JavaThread::last_Java_sp_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}