{"files":[{"patch":"@@ -42,1 +42,2 @@\n-    \/\/ clearing _last_Java_sp must be first\n+    \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n+    \/\/ to ensure AGCT does not observe a corrupted frame.\n@@ -57,1 +58,4 @@\n-    if (_last_Java_sp != src->_last_Java_sp) {\n+    bool different_sp = _last_Java_sp != src->_last_Java_sp;\n+    if (different_sp) {\n+      \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n+      \/\/ to ensure AGCT does not observe a corrupted frame.\n@@ -63,2 +67,6 @@\n-    \/\/ Must be last so profiler will always see valid frame if has_last_frame() is true\n-    _last_Java_sp = src->_last_Java_sp;\n+    if (different_sp) {\n+      \/\/ Must set sp last and place a store-store barrier (dmb ISHST) immediately before,\n+      \/\/ to ensure AGCT does not observe a corrupted frame.\n+      OrderAccess::release();\n+      _last_Java_sp = src->_last_Java_sp;\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/javaFrameAnchor_aarch64.hpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -600,1 +600,2 @@\n-  \/\/ we must set sp to zero to clear frame\n+  \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n+  \/\/ to ensure AGCT does not observe a corrupted frame.\n@@ -602,0 +603,1 @@\n+  membar(Assembler::StoreStore);\n@@ -637,2 +639,0 @@\n-  str(last_java_sp, Address(rthread, JavaThread::last_Java_sp_offset()));\n-\n@@ -643,0 +643,5 @@\n+\n+  \/\/ Must set sp last and place a store-store barrier (dmb ISHST) immediately before,\n+  \/\/ to ensure AGCT does not observe a corrupted frame.\n+  membar(Assembler::StoreStore);\n+  str(last_java_sp, Address(rthread, JavaThread::last_Java_sp_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}