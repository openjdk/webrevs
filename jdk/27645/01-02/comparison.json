{"files":[{"patch":"@@ -42,2 +42,1 @@\n-    \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n-    \/\/ to ensure AGCT does not observe a corrupted frame.\n+    \/\/ clearing _last_Java_sp must be first\n@@ -45,1 +44,0 @@\n-    OrderAccess::release();\n@@ -58,4 +56,1 @@\n-    bool different_sp = _last_Java_sp != src->_last_Java_sp;\n-    if (different_sp) {\n-      \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n-      \/\/ to ensure AGCT does not observe a corrupted frame.\n+    if (_last_Java_sp != src->_last_Java_sp) {\n@@ -63,1 +58,0 @@\n-      OrderAccess::release();\n@@ -67,6 +61,2 @@\n-    if (different_sp) {\n-      \/\/ Must set sp last and place a store-store barrier (dmb ISHST) immediately before,\n-      \/\/ to ensure AGCT does not observe a corrupted frame.\n-      OrderAccess::release();\n-      _last_Java_sp = src->_last_Java_sp;\n-    }\n+    \/\/ Must be last so profiler will always see valid frame if has_last_frame() is true\n+    _last_Java_sp = src->_last_Java_sp;\n","filename":"src\/hotspot\/cpu\/aarch64\/javaFrameAnchor_aarch64.hpp","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -600,2 +600,1 @@\n-  \/\/ Must clear sp first and place a store-store barrier (dmb ISHST) immediately after,\n-  \/\/ to ensure AGCT does not observe a corrupted frame.\n+  \/\/ we must set sp to zero to clear frame\n@@ -603,1 +602,0 @@\n-  membar(Assembler::StoreStore);\n@@ -644,3 +642,1 @@\n-  \/\/ Must set sp last and place a store-store barrier (dmb ISHST) immediately before,\n-  \/\/ to ensure AGCT does not observe a corrupted frame.\n-  membar(Assembler::StoreStore);\n+  \/\/ Must be last so profiler will always see valid frame if has_last_frame() is true\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}