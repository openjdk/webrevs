{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n@@ -1597,21 +1597,0 @@\n-\n-  \/\/ if (c->is_IfProj()) {\n-  \/\/   IfNode* iff = c->in(0)->as_If();\n-  \/\/   if (!iff->in(0)->is_top()) {\n-  \/\/     Node* bol = iff->in(1);\n-  \/\/     const TypeInt* bol_t = bol->bottom_type()->is_int();\n-  \/\/     if (bol->Opcode() == Op_OpaqueInitializedAssertionPredicate) {\n-  \/\/       bol_t = TypeInt::ONE;\n-  \/\/     }\n-  \/\/     if (bol_t->is_con()) {\n-  \/\/       if (iff->proj_out(bol_t->get_con()) == c) {\n-  \/\/         _controls.push(c);\n-  \/\/         assert(_type_table->type(c, c) != Type::TOP, \"should not be dead\");\n-  \/\/       }\n-  \/\/     } else {\n-  \/\/       _controls.push(c);\n-  \/\/     }\n-  \/\/   }\n-  \/\/ } else {\n-  \/\/   _controls.push(c);\n-  \/\/ }\n@@ -1831,1 +1810,0 @@\n-  C->print_method(PHASE_DEBUG, 2);\n","filename":"src\/hotspot\/share\/opto\/loopConditionalPropagation.cpp","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"src\/hotspot\/share\/opto\/loopConditionalPropagation.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4955,0 +4955,1 @@\n+      \/\/ If we made some progress since we last tried Loop Conditional Propagation, give it another try\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestArrayAccessAboveRCAfterLoopConditionalPropagation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestCMoveAndIf.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestConditionKillsRC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestConstantFoldingAtTrap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n@@ -30,1 +30,1 @@\n- *                   \n+ *\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestConstantIVAtEndOfMainLoop.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n@@ -71,1 +71,1 @@\n-    \n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestDivWithZeroScheduledEarly.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestEliminatedRCCausesDeadCast.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestLSMDeadInLoopPredication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n@@ -40,2 +40,0 @@\n-\/\/        TestFramework.runWithFlags(\"-XX:-UseLoopPredicate\", \"-XX:-LoopUnswitching\");\n-\/\/        TestFramework.runWithFlags(\"-XX:-LoopUnswitching\");\n@@ -44,1 +42,0 @@\n-\/\/        TestFramework.runWithFlags(\"-XX:-LoopUnswitching\", \"-XX:-RangeCheckElimination\", \"-XX:-UseLoopPredicate\", \"-XX:LoopMaxUnroll=0\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestLoopConditionalPropagation.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n@@ -42,9 +42,9 @@\n-\/\/            test1(false, 0);\n-\/\/            inlined1(0, array, 42, true, 0);\n-\/\/            inlined1(0, array, 2, true, 0);\n-\/\/            test2(false, 0, 1000, 1000);\n-\/\/            inlined2(0, array, 42, true, 0, 1000, 1000);\n-\/\/            inlined2(0, array, 2, true, 0, 1000, 1000);\n-\/\/            test3(false, 0);\n-\/\/            inlined3(0, array, -42, true, 0);\n-\/\/            inlined3(0, array, 2, true, 0);\n+            test1(false, 0);\n+            inlined1(0, array, 42, true, 0);\n+            inlined1(0, array, 2, true, 0);\n+            test2(false, 0, 1000, 1000);\n+            inlined2(0, array, 42, true, 0, 1000, 1000);\n+            inlined2(0, array, 2, true, 0, 1000, 1000);\n+            test3(false, 0);\n+            inlined3(0, array, -42, true, 0);\n+            inlined3(0, array, 2, true, 0);\n@@ -166,7 +166,0 @@\n-\/\/                if (boolArray[k]) {\n-\/\/                    if (boolArray[(k + 1) % 10]) {\n-\/\/                        otherIntField = 42;\n-\/\/                    }\n-\/\/                } else {\n-\/\/                    otherIntField = 42;\n-\/\/                }\n@@ -193,1 +186,0 @@\n-\/\/            final float unused = array[start + idx];\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestLoopPredicateAndConditionalElimination.java","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestOOBoundsArrayLoadScheduledEarly.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopconditionalpropagation\/TestOverUnrolled.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}