{"files":[{"patch":"@@ -35,2 +35,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n@@ -86,3 +84,10 @@\n-            for (int i = 0; i < releases.size(); i++) {\n-                \/\/ Table column ids are 1-based\n-                tabs.add(Text.of(\" \")).add(getReleaseCheckbox(releases.get(i), i + 1));\n+            \/\/ Table column ids are 1-based\n+            int index = 1;\n+            for (String release : releases) {\n+                \/\/ Empty string represents other\/uncategorized releases. Since we can't make any assumptions\n+                \/\/ about release names this is arguably the safest way to avoid naming collisions.\n+                Content label = !release.isEmpty()\n+                        ? Text.of(release)\n+                        : contents.getContent(\"doclet.Deprecated_API_Checkbox_Other_Releases\");\n+                String id = release.isEmpty() ? ID_OTHER : String.valueOf(index++);\n+                tabs.add(Text.of(\" \")).add(getCheckbox(label, id, \"release-\"));\n@@ -90,0 +95,2 @@\n+            tabs.add(Text.of(\" \")).add(getCheckbox(\n+                    contents.getContent(\"doclet.Deprecated_API_Checkbox_All_Releases\"), ID_ALL, \"release-\"));\n@@ -100,17 +107,0 @@\n-    private Content getReleaseCheckbox(String name, int index) {\n-        \/\/ Empty string represents other\/uncategorized releases. Since we can't make any assumptions\n-        \/\/ about release names this is arguably the safest way to avoid naming collisions.\n-        boolean isOtherReleases = name.isEmpty();\n-        Content releaseLabel = isOtherReleases\n-                ? contents.getContent(\"doclet.Deprecated_API_Checkbox_Other_Releases\")\n-                : Text.of(name);\n-        HtmlId htmlId = HtmlId.of(\"release-\" + index);\n-        String releaseId = isOtherReleases ? \"\" : Integer.toString(index);\n-        return HtmlTree.LABEL(htmlId.name(),\n-                        HtmlTree.INPUT(HtmlAttr.InputType.CHECKBOX, htmlId)\n-                                .put(HtmlAttr.CHECKED, \"\")\n-                                .put(HtmlAttr.ONCLICK,\n-                                        \"toggleGlobal(this, '\" + releaseId + \"', 3)\"))\n-                .add(HtmlTree.SPAN(releaseLabel));\n-    }\n-\n@@ -142,1 +132,0 @@\n-                    .setAlwaysShowDefaultTab(true)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":12,"deletions":23,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -86,10 +86,4 @@\n-            for (int i = 0; i < releases.size(); i++) {\n-                int releaseIndex = i + 1;\n-                String release = releases.get(i);\n-                HtmlId htmlId = HtmlId.of(\"release-\" + releaseIndex);\n-                tabs.add(Text.of(\" \")).add(HtmlTree.LABEL(htmlId.name(),\n-                                HtmlTree.INPUT(HtmlAttr.InputType.CHECKBOX, htmlId)\n-                                        .put(HtmlAttr.CHECKED, \"\")\n-                                        .put(HtmlAttr.ONCLICK,\n-                                                \"toggleGlobal(this, '\" + releaseIndex + \"', 3)\"))\n-                        .add(HtmlTree.SPAN(Text.of(release))));\n+            \/\/ Table column ids are 1-based\n+            int index = 1;\n+            for (String release : releases) {\n+                tabs.add(Text.of(\" \")).add(getCheckbox(Text.of(release), String.valueOf(index++), \"release-\"));\n@@ -97,0 +91,2 @@\n+            Content label = contents.getContent(\"doclet.New_API_Checkbox_All_Releases\");\n+            tabs.add(Text.of(\" \")).add(getCheckbox(label, ID_ALL, \"release-\"));\n@@ -107,1 +103,0 @@\n-                    .setAlwaysShowDefaultTab(true)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NewAPIListWriter.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -36,2 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n+import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n@@ -83,1 +82,1 @@\n-            int index = 0;\n+            int index = 1;\n@@ -85,1 +84,1 @@\n-            Content list = HtmlTree.UL(HtmlStyle.previewFeatureList);\n+            Content list = HtmlTree.UL(HtmlStyle.previewFeatureList).addStyle(HtmlStyle.checkboxes);\n@@ -87,2 +86,0 @@\n-                index++;\n-                HtmlId htmlId = HtmlId.of(\"feature-\" + index);\n@@ -90,7 +87,3 @@\n-                list.add(HtmlTree.LI(HtmlTree.LABEL(htmlId.name(),\n-                                HtmlTree.INPUT(HtmlAttr.InputType.CHECKBOX, htmlId)\n-                                        .put(HtmlAttr.CHECKED, \"\")\n-                                        .put(HtmlAttr.ONCLICK,\n-                                                \"toggleGlobal(this, '\" + index + \"', 3)\"))\n-                        .add(HtmlTree.SPAN(Text.of(jep.number() + \": \"))\n-                                .add(HtmlTree.A(jepUrl, Text.of(jep.title() + \" (\" + jep.status() + \")\"))))));\n+                Content label = new ContentBuilder(Text.of(jep.number() + \": \"))\n+                        .add(HtmlTree.A(jepUrl, Text.of(jep.title() + \" (\" + jep.status() + \")\")));\n+                list.add(HtmlTree.LI(getCheckbox(label, String.valueOf(index++), \"feature-\")));\n@@ -98,0 +91,2 @@\n+            Content label = contents.getContent(\"doclet.Preview_API_Checkbox_Toggle_All\");\n+            list.add(HtmlTree.LI(getCheckbox(label, ID_ALL, \"feature-\")));\n@@ -116,1 +111,0 @@\n-                .setAlwaysShowDefaultTab(true)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n@@ -57,0 +58,3 @@\n+    final protected String ID_OTHER = \"other\";\n+    final protected String ID_ALL   = \"all\";\n+\n@@ -297,0 +301,19 @@\n+    \/**\n+     * Create a checkbox input element and associated label for selecting content on\n+     * a summary page.\n+     *\n+     * @param label The label\n+     * @param id the id of the selected content\n+     * @param htmlPrefix the prefix for the HTML id\n+     * @return a content object containing the checkbox input\n+     *\/\n+    protected Content getCheckbox(Content label, String id, String htmlPrefix) {\n+        String htmlId = htmlPrefix + id;\n+        return HtmlTree.LABEL(htmlId,\n+                        HtmlTree.INPUT(HtmlAttr.InputType.CHECKBOX, HtmlId.of(htmlId))\n+                                .put(HtmlAttr.CHECKED, \"\")\n+                                .put(HtmlAttr.ONCLICK,\n+                                        \"toggleGlobal(this, '\" + id + \"', 3)\"))\n+                .add(HtmlTree.SPAN(label));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -87,1 +87,0 @@\n-    private boolean alwaysShowDefaultTab = false;\n@@ -150,10 +149,0 @@\n-    \/**\n-     * Sets whether to display the default tab even if tabs are empty or only contain a single tab.\n-     * @param showDefaultTab true if default tab should always be shown\n-     * @return this object\n-     *\/\n-    public Table<T> setAlwaysShowDefaultTab(boolean showDefaultTab) {\n-        this.alwaysShowDefaultTab = showDefaultTab;\n-        return this;\n-    }\n-\n@@ -388,1 +377,1 @@\n-        if ((tabs == null || occurringTabs.size() == 1) && !alwaysShowDefaultTab) {\n+        if ((tabs == null || occurringTabs.size() == 1) && renderTabs) {\n@@ -404,4 +393,0 @@\n-            } else {\n-                tablist.add(getCaption(defaultTab));\n-            }\n-            if (renderTabs) {\n@@ -413,0 +398,2 @@\n+            } else {\n+                tablist.add(getCaption(defaultTab));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -100,6 +100,11 @@\n-    var display = checkbox.checked ? '' : 'none';\n-    document.querySelectorAll(\"div.table-tabs\").forEach(function(t) {\n-        var id = t.parentElement.getAttribute(\"id\");\n-        var selectedClass = id + \"-tab\" + selected;\n-        \/\/ if selected is empty string it selects all uncategorized entries\n-        var selectUncategorized = !Boolean(selected);\n+    const display = checkbox.checked ? '' : 'none';\n+    const selectOther = selected === \"other\";\n+    const selectAll = selected === \"all\";\n+    if (selectAll) {\n+        document.querySelectorAll('.checkboxes input[type=\"checkbox\"]').forEach(c => {\n+            c.checked = checkbox.checked;\n+        });\n+    }\n+    document.querySelectorAll(\"div.table-tabs\").forEach(t => {\n+        const id = t.parentElement.getAttribute(\"id\");\n+        const selectedClass = id + \"-tab\" + (selectOther ? \"\" : selected);\n@@ -107,1 +112,1 @@\n-        document.querySelectorAll('div.' + id)\n+        t.parentElement.querySelectorAll('div.' + id)\n@@ -109,5 +114,3 @@\n-                if (selectUncategorized) {\n-                    if (elem.className.indexOf(selectedClass) === -1) {\n-                        elem.style.display = display;\n-                    }\n-                } else if (elem.classList.contains(selectedClass)) {\n+                if (selectAll\n+                    || (!selectOther && elem.classList.contains(selectedClass))\n+                    || (selectOther && elem.className.indexOf(selectedClass) < 0)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -119,0 +119,1 @@\n+doclet.Deprecated_API_Checkbox_All_Releases=all\n@@ -125,0 +126,1 @@\n+doclet.New_API_Checkbox_All_Releases=all\n@@ -130,0 +132,1 @@\n+doclet.Preview_API_Checkbox_Toggle_All=Toggle all\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8263468 8269401 8268422 8287524\n+ * @bug      8263468 8269401 8268422 8287524 8325874\n@@ -118,1 +118,3 @@\n-                <span>5<\/span><\/label><\/div>\n+                <span>5<\/span><\/label> <label for=\"release-all\">\n+                <input type=\"checkbox\" id=\"release-all\" disabled checked onclick=\"toggleGlobal(this, 'all', 3)\">\n+                <span>all<\/span><\/label><\/div>\n@@ -607,3 +609,5 @@\n-                <span>5<\/span><\/label> <label for=\"release-2\">\n-                <input type=\"checkbox\" id=\"release-2\" disabled checked onclick=\"toggleGlobal(this, '', 3)\">\n-                <span>other<\/span><\/label><\/div>\n+                <span>5<\/span><\/label> <label for=\"release-other\">\n+                <input type=\"checkbox\" id=\"release-other\" disabled checked onclick=\"toggleGlobal(this, 'other', 3)\">\n+                <span>other<\/span><\/label> <label for=\"release-all\">\n+                <input type=\"checkbox\" id=\"release-all\" disabled checked onclick=\"toggleGlobal(this, 'all', 3)\">\n+                <span>all<\/span><\/label><\/div>\n@@ -680,1 +684,3 @@\n-                <span>6<\/span><\/label><\/div>\n+                <span>6<\/span><\/label> <label for=\"release-all\">\n+                <input type=\"checkbox\" id=\"release-all\" disabled checked onclick=\"toggleGlobal(this, 'all', 3)\">\n+                <span>all<\/span><\/label><\/div>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewApiList\/TestNewApiList.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug      8250768 8261976 8277300 8282452 8287597 8325325\n+ * @bug      8250768 8261976 8277300 8282452 8287597 8325325 8325874\n@@ -81,1 +81,1 @@\n-                    <ul class=\"preview-feature-list\">\n+                    <ul class=\"preview-feature-list checkboxes\">\n@@ -85,0 +85,3 @@\n+                    <li><label for=\"feature-all\">\n+                    <input type=\"checkbox\" id=\"feature-all\" disabled checked onclick=\"toggleGlobal(this, 'all', 3)\">\n+                    <span>Toggle all<\/span><\/label><\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}