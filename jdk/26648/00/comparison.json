{"files":[{"patch":"@@ -851,3 +851,0 @@\n-  const bool do_clear_all_soft_refs = clear_all_soft_refs ||\n-      soft_ref_policy()->should_clear_all_soft_refs();\n-\n@@ -856,1 +853,1 @@\n-  G1FullCollector collector(this, do_clear_all_soft_refs, do_maximal_compaction, gc_mark.tracer());\n+  G1FullCollector collector(this, clear_all_soft_refs, do_maximal_compaction, gc_mark.tracer());\n@@ -989,3 +986,0 @@\n-  assert(!soft_ref_policy()->should_clear_all_soft_refs(),\n-         \"Flag should have been handled and cleared prior to this point\");\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    _should_clear_soft_refs(clear_soft),\n@@ -50,1 +51,0 @@\n-    _soft_refs(clear_soft, _g1h->soft_ref_policy()),\n@@ -57,4 +57,0 @@\n-bool G1FullGCScope::should_clear_soft_refs() {\n-  return _soft_refs.should_clear();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+  bool                    _should_clear_soft_refs;\n@@ -57,1 +58,0 @@\n-  ClearedAllSoftRefs      _soft_refs;\n@@ -68,1 +68,1 @@\n-  bool should_clear_soft_refs();\n+  bool should_clear_soft_refs() const { return _should_clear_soft_refs; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,3 @@\n-  g1h->do_full_collection(false \/* clear_all_soft_refs *\/,\n+  bool clear_all_soft_refs = _gc_cause == GCCause::_metadata_GC_clear_soft_refs ||\n+                             _gc_cause == GCCause::_wb_full_gc;\n+  g1h->do_full_collection(clear_all_soft_refs \/* clear_all_soft_refs *\/,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,17 +61,0 @@\n-class ClearedAllSoftRefs : public StackObj {\n-  bool           _clear_all_soft_refs;\n-  SoftRefPolicy* _soft_ref_policy;\n- public:\n-  ClearedAllSoftRefs(bool clear_all_soft_refs, SoftRefPolicy* soft_ref_policy) :\n-    _clear_all_soft_refs(clear_all_soft_refs),\n-    _soft_ref_policy(soft_ref_policy) {}\n-\n-  ~ClearedAllSoftRefs() {\n-    if (_clear_all_soft_refs) {\n-      _soft_ref_policy->cleared_all_soft_refs();\n-    }\n-  }\n-\n-  bool should_clear() { return _clear_all_soft_refs; }\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/softRefPolicy.hpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1505,6 +1505,0 @@\n-#if INCLUDE_G1GC\n-  if (UseG1GC) {\n-    \/\/ Needs to be cleared explicitly for G1 GC.\n-    Universe::heap()->soft_ref_policy()->set_should_clear_all_soft_refs(false);\n-  }\n-#endif \/\/ INCLUDE_G1GC\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}