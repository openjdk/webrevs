{"files":[{"patch":"@@ -501,2 +501,0 @@\n-  \/\/ Where z_ijava_state.monitors is saved.\n-  inline BasicObjectLock**  interpreter_frame_monitors_addr() const;\n@@ -520,0 +518,2 @@\n+\n+  \/\/ Where z_ijava_state.monitors is saved.\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,4 +112,0 @@\n-inline BasicObjectLock** frame::interpreter_frame_monitors_addr() const {\n-  return (BasicObjectLock**) &(ijava_state()->monitors);\n-}\n-\n@@ -118,1 +114,5 @@\n-  return *interpreter_frame_monitors_addr();\n+  BasicObjectLock* result = (BasicObjectLock*) at_relative(_z_ijava_idx(monitors));\n+  \/\/ make sure the pointer points inside the frame\n+  assert(sp() <= (intptr_t*) result, \"monitor end should be above the stack pointer\");\n+  assert((intptr_t*) result < fp(),  \"monitor end should be strictly below the frame pointer: result: \" INTPTR_FORMAT \" fp: \" INTPTR_FORMAT, p2i(result), p2i(fp()));\n+  return result;\n@@ -120,0 +120,1 @@\n+\n@@ -121,1 +122,3 @@\n-  *interpreter_frame_monitors_addr() = monitors;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized monitors\n+  ijava_state()->monitors = (intptr_t) ((intptr_t*)monitors - fp());\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -630,1 +630,1 @@\n-    z_lg(Rmonitors, _z_ijava_state_neg(monitors), Z_fp);\n+    get_monitors(Rmonitors);\n@@ -679,0 +679,7 @@\n+#ifdef ASSERT\n+  NearLabel ok;\n+  z_cg(Z_fp, 0, Z_SP);\n+  z_bre(ok);\n+  stop(\"Z_fp is corrupted\");\n+  bind(ok);\n+#endif \/\/ ASSERT\n@@ -680,0 +687,2 @@\n+  z_slag(reg, reg, Interpreter::logStackElementSize);\n+  z_agr(reg, Z_fp);\n@@ -683,0 +692,9 @@\n+#ifdef ASSERT\n+  NearLabel ok;\n+  z_cg(Z_fp, 0, Z_SP);\n+  z_bre(ok);\n+  stop(\"Z_fp is corrupted\");\n+  bind(ok);\n+#endif \/\/ ASSERT\n+  z_sgr(reg, Z_fp);\n+  z_srag(reg, reg, Interpreter::logStackElementSize);\n@@ -843,1 +861,0 @@\n-    const Address monitor_block_top(Z_fp, _z_ijava_state_neg(monitors));\n@@ -848,1 +865,1 @@\n-    z_lg(R_current_monitor, monitor_block_top);\n+    get_monitors(R_current_monitor);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1177,1 +1177,5 @@\n-  __ z_stg(Z_esp, _z_ijava_state_neg(monitors), fp);\n+\n+  __ z_sgrk(Z_R0, Z_esp, fp);\n+  __ z_srag(Z_R0, Z_R0, Interpreter::logStackElementSize);\n+  __ z_stg(Z_R0, _z_ijava_state_neg(monitors), fp);\n+\n@@ -1636,1 +1640,1 @@\n-    __ z_lg(Z_R1, _z_ijava_state_neg(monitors), Z_fp);\n+    __ get_monitors(Z_R1);\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,1 +68,2 @@\n-  #define BTB_MINSIZE 256\n+\/\/ With introduced assert in get_monitor() & set_monitor(), required block size is now 322.\n+  #define BTB_MINSIZE 512\n@@ -94,1 +95,2 @@\n-      guarantee(len <= alignment, \"block too large\");                          \\\n+      guarantee(len <= alignment, \"block too large, len = %d, alignment = %d\", \\\n+                      len, alignment);                                         \\\n@@ -115,1 +117,2 @@\n-      guarantee(len <= alignment, \"block too large\");                          \\\n+      guarantee(len <= alignment, \"block too large, len = %d, alignment = %d\", \\\n+                      len, alignment);                                         \\\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}