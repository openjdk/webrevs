{"files":[{"patch":"@@ -730,10 +730,7 @@\n-        byte[] value = ensureCapacitySameCoder(this.value, coder, count + 4);\n-        if (isLatin1(coder)) {\n-            value[count++] = 'n';\n-            value[count++] = 'u';\n-            value[count++] = 'l';\n-            value[count++] = 'l';\n-        } else {\n-            count = StringUTF16.putCharsAt(value, count, 'n', 'u', 'l', 'l');\n-        }\n-        this.count = count;\n+        int newCount = count + 4;\n+        byte[] value = ensureCapacitySameCoder(this.value, coder, newCount);\n+        if (isLatin1(coder))\n+            StringLatin1.putCharsAt(value, count, 'n', 'u', 'l', 'l');\n+        else\n+            StringUTF16.putCharsAt(value, count, 'n', 'u', 'l', 'l');\n+        this.count = newCount;\n@@ -884,13 +881,5 @@\n-        if (isLatin1(coder)) {\n-            if (b) {\n-                value[count] = 't';\n-                value[count + 1] = 'r';\n-                value[count + 2] = 'u';\n-                value[count + 3] = 'e';\n-            } else {\n-                value[count] = 'f';\n-                value[count + 1] = 'a';\n-                value[count + 2] = 'l';\n-                value[count + 3] = 's';\n-                value[count + 4] = 'e';\n-            }\n+        if (b) {\n+            if (isLatin1(coder))\n+                StringLatin1.putCharsAt(value, count, 't', 'r', 'u', 'e');\n+            else\n+                StringUTF16.putCharsAt(value, count, 't', 'r', 'u', 'e');\n@@ -898,5 +887,4 @@\n-            if (b) {\n-                newCount = StringUTF16.putCharsAt(value, count, 't', 'r', 'u', 'e');\n-            } else {\n-                newCount = StringUTF16.putCharsAt(value, count, 'f', 'a', 'l', 's', 'e');\n-            }\n+            if (isLatin1(coder))\n+                StringLatin1.putCharsAt(value, count, 'f', 'a', 'l', 's', 'e');\n+            else\n+                StringUTF16.putCharsAt(value, count, 'f', 'a', 'l', 's', 'e');\n@@ -1867,0 +1855,1 @@\n+    \/\/ Package access for String and StringBuffer.\n@@ -1868,1 +1857,1 @@\n-        return COMPACT_STRINGS && coder == LATIN1;\n+        return isLatin1(coder);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":18,"deletions":29,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        return (byte)((0xff - cp) >>> Integer.SIZE - 1);\n+        return (byte)((0xff - cp) >>> (Integer.SIZE - 1));\n@@ -716,0 +716,15 @@\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+        value[i] = (byte)c1;\n+        value[i + 1] = (byte)c2;\n+        value[i + 2] = (byte)c3;\n+        value[i + 3] = (byte)c4;\n+    }\n+\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+        value[i] = (byte)c1;\n+        value[i + 1] = (byte)c2;\n+        value[i + 2] = (byte)c3;\n+        value[i + 3] = (byte)c4;\n+        value[i + 4] = (byte)c5;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1531,1 +1531,1 @@\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n@@ -1539,1 +1539,0 @@\n-        return end;\n@@ -1542,1 +1541,1 @@\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n@@ -1551,1 +1550,0 @@\n-        return end;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @bug 8054307 8077559\n+ * @bug 8054307 8077559 8351443\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/CompactStringBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug 8149330 8218227\n+ * @bug 8149330 8218227 8351443\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/HugeCapacity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @bug 8302323\n+ * @bug 8302323 8351443\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/StringBuilderRepeat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}