{"files":[{"patch":"@@ -1483,20 +1483,0 @@\n-class G1VCPUThreadClosure : public ThreadClosure {\n-private:\n-  volatile jlong _vtime = 0;\n-\n-public:\n-  virtual void do_thread(Thread *thread) {\n-    Atomic::add(&_vtime, os::thread_cpu_time(thread));\n-  }\n-  jlong vtime() { return _vtime; };\n-};\n-\n-double G1CollectedHeap::elapsed_gc_vtime() {\n-  G1VCPUThreadClosure cl;\n-  _cr->threads_do(&cl);\n-  _cm->threads_do(&cl);\n-  _workers->threads_do(&cl);\n-  return ((double) cl.vtime() + os::thread_cpu_time(_service_thread) + os::thread_cpu_time(_cm_thread) + Universe::heap()->vm_vtime()) \/ NANOSECS_PER_SEC;\n-}\n-\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -935,2 +935,0 @@\n-  double elapsed_gc_vtime() override;\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,17 +167,0 @@\n-class ParallelVCPUThreadClosure : public ThreadClosure {\n-private:\n-  volatile jlong _vtime = 0;\n-\n-public:\n-  virtual void do_thread(Thread *thread) {\n-    Atomic::add(&_vtime, os::thread_cpu_time(thread));\n-  }\n-  jlong vtime() { return _vtime; };\n-};\n-\n-double ParallelScavengeHeap::elapsed_gc_vtime() {\n-  ParallelVCPUThreadClosure cl;\n-  workers().threads_do(&cl);\n-  return (double)(cl.vtime() + Universe::heap()->vm_vtime()) \/ NANOSECS_PER_SEC;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -218,1 +218,0 @@\n-  double elapsed_gc_vtime() override;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -204,0 +204,17 @@\n+class VCPUThreadClosure : public ThreadClosure {\n+private:\n+  volatile jlong _vtime = 0;\n+\n+public:\n+  virtual void do_thread(Thread *thread) {\n+    Atomic::add(&_vtime, os::thread_cpu_time(thread));\n+  }\n+  jlong vtime() { return _vtime; };\n+};\n+\n+double CollectedHeap::elapsed_gc_vtime() {\n+  VCPUThreadClosure cl;\n+  gc_threads_do(&cl);\n+  return (double)(cl.vtime() + Universe::heap()->vm_vtime()) \/ NANOSECS_PER_SEC;\n+}\n+\n@@ -224,3 +241,1 @@\n-    log_info(gc, cpu)(\"Process CPU time: %fs\", process_vtime);\n-    log_info(gc, cpu)(\"GC CPU time: %fs\", gc_vtime);\n-    double cost = -1;\n+    double usage = -1;\n@@ -230,1 +245,1 @@\n-      cost = 0;\n+      usage = 0;\n@@ -232,1 +247,1 @@\n-      cost = 100 * gc_vtime \/ process_vtime;\n+      usage = 100 * gc_vtime \/ process_vtime;\n@@ -234,1 +249,1 @@\n-    log_info(gc)(\"GC CPU cost: %2.2f%%\", cost);\n+    log_info(gc)(\"GC CPU usage: %2.2f%%\", usage);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-  virtual double elapsed_gc_vtime() { return -1; };\n+  virtual double elapsed_gc_vtime();\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-      assert(_thread == this, \"Assumes VM thread\");\n","filename":"src\/hotspot\/share\/gc\/shared\/vtimeScope.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2223,17 +2223,0 @@\n-class ShenandoahCPUThreadClosure : public ThreadClosure {\n-private:\n-  volatile jlong _vtime = 0;\n-\n-public:\n-  virtual void do_thread(Thread *thread) {\n-      Atomic::add(&_vtime, os::thread_cpu_time(thread));\n-  }\n-  jlong vtime() { return _vtime; };\n-};\n-\n-double ShenandoahHeap::elapsed_gc_vtime() {\n-  ShenandoahCPUThreadClosure cl;\n-  ShenandoahHeap::heap()->gc_threads_do(&cl);\n-  return (double)(cl.vtime() + Universe::heap()->vm_vtime()) \/ NANOSECS_PER_SEC;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -212,2 +212,0 @@\n-  double elapsed_gc_vtime() override;\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}