{"files":[{"patch":"@@ -1603,2 +1603,0 @@\n-bool os::supports_vtime() { return true; }\n-\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1197,15 +1197,0 @@\n-bool os::supports_vtime() { return true; }\n-\n-double os::elapsedVTime() {\n-  FILETIME created;\n-  FILETIME exited;\n-  FILETIME kernel;\n-  FILETIME user;\n-  if (GetThreadTimes(GetCurrentThread(), &created, &exited, &kernel, &user) != 0) {\n-    \/\/ the resolution of windows_to_java_time() should be sufficient (ms)\n-    return (double) (windows_to_java_time(kernel) + windows_to_java_time(user)) \/ MILLIUNITS;\n-  } else {\n-    return elapsedTime();\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -626,1 +626,1 @@\n-  LogTarget(Info, gc) out;\n+  LogTarget(Info, gc, cpu) out;\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,4 +34,4 @@\n-  jlong         _start;\n-  bool          _enabled;\n-  bool          _is_gc_operation;\n-  Thread*       _thread;\n+  jlong   _start;\n+  bool    _enabled;\n+  bool    _is_gc_operation;\n+  Thread* _thread;\n","filename":"src\/hotspot\/share\/gc\/shared\/vtimeScope.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,3 @@\n-  if (!_enabled) return;\n+  if (!_enabled) {\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/vtimeScope.inline.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -296,6 +296,0 @@\n-  \/\/ The \"virtual time\" of a thread is the amount of time a thread has\n-  \/\/ actually run.  The first function indicates whether the OS supports\n-  \/\/ this functionality for the current thread, and if so the second\n-  \/\/ returns the elapsed virtual time for the current thread.\n-  static bool supports_vtime();\n-  static double elapsedVTime();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}