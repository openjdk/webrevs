{"files":[{"patch":"@@ -264,1 +264,0 @@\n-#ifdef _LP64\n@@ -271,2 +270,0 @@\n-#endif\n-\n","filename":"src\/hotspot\/cpu\/x86\/continuationFreezeThaw_x86.inline.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-#ifdef _LP64\n@@ -60,3 +59,0 @@\n-#else\n-  return 0;\n-#endif\n@@ -66,4 +62,1 @@\n-#ifdef _LP64\n-  sp = align_down(sp, frame::frame_alignment);\n-#endif\n-  return sp;\n+  return align_down(sp, frame::frame_alignment);\n","filename":"src\/hotspot\/cpu\/x86\/continuationHelper_x86.inline.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2992,27 +2992,5 @@\n-#ifndef _LP64\n-  Register rthread = rax;\n-  Register rrealsp = rbx;\n-  push(rthread);\n-  push(rrealsp);\n-\n-  get_thread(rthread);\n-\n-  \/\/ The code below wants the original RSP.\n-  \/\/ Move it back after the pushes above.\n-  movptr(rrealsp, rsp);\n-  addptr(rrealsp, 2*wordSize);\n-#else\n-  Register rthread = r15_thread;\n-  Register rrealsp = rsp;\n-#endif\n-\n-  Label done;\n-  cmpptr(rrealsp, Address(rthread, JavaThread::cont_fastpath_offset()));\n-  jccb(Assembler::belowEqual, done);\n-  movptr(Address(rthread, JavaThread::cont_fastpath_offset()), rrealsp);\n-  bind(done);\n-\n-#ifndef _LP64\n-  pop(rrealsp);\n-  pop(rthread);\n-#endif\n+  Label L_done;\n+  cmpptr(rsp, Address(r15_thread, JavaThread::cont_fastpath_offset()));\n+  jccb(Assembler::belowEqual, L_done);\n+  movptr(Address(r15_thread, JavaThread::cont_fastpath_offset()), rsp);\n+  bind(L_done);\n@@ -3024,27 +3002,5 @@\n-#ifndef _LP64\n-  Register rthread = rax;\n-  Register rrealsp = rbx;\n-  push(rthread);\n-  push(rrealsp);\n-\n-  get_thread(rthread);\n-\n-  \/\/ The code below wants the original RSP.\n-  \/\/ Move it back after the pushes above.\n-  movptr(rrealsp, rsp);\n-  addptr(rrealsp, 2*wordSize);\n-#else\n-  Register rthread = r15_thread;\n-  Register rrealsp = rsp;\n-#endif\n-\n-  Label done;\n-  cmpptr(rrealsp, Address(rthread, JavaThread::cont_fastpath_offset()));\n-  jccb(Assembler::below, done);\n-  movptr(Address(rthread, JavaThread::cont_fastpath_offset()), 0);\n-  bind(done);\n-\n-#ifndef _LP64\n-  pop(rrealsp);\n-  pop(rthread);\n-#endif\n+  Label L_done;\n+  cmpptr(rsp, Address(r15_thread, JavaThread::cont_fastpath_offset()));\n+  jccb(Assembler::below, L_done);\n+  movptr(Address(r15_thread, JavaThread::cont_fastpath_offset()), 0);\n+  bind(L_done);\n@@ -3054,1 +3010,0 @@\n-#ifdef _LP64\n@@ -3056,1 +3011,0 @@\n-#endif\n@@ -3060,1 +3014,0 @@\n-#ifdef _LP64\n@@ -3062,1 +3015,0 @@\n-#endif\n@@ -3067,1 +3019,0 @@\n-#ifdef _LP64\n@@ -3074,3 +3025,0 @@\n-#else\n-  Unimplemented();\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":10,"deletions":62,"binary":false,"changes":72,"status":"modified"}]}