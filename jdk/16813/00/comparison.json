{"files":[{"patch":"@@ -1483,0 +1483,18 @@\n+  double ratio = max_heap_size \/ (double) max_heap_for_compressed_oops();\n+  if (ratio > 1 && ratio < 1.02) {\n+    \/\/ User set max heap within 2% of the compressed oops limit. Assume they intended or at least\n+    \/\/ would benefit from a small reduction to allow enabling compressed oops. This is easily done by\n+    \/\/ accident, for example setting -Xmx32G is a tiny amount over the limit.\n+    warning(\"Heap size lowered from %lu to %lu to accommodate Compressed Oops\", max_heap_size, max_heap_for_compressed_oops());\n+    max_heap_size = max_heap_for_compressed_oops();\n+    if (!FLAG_IS_DEFAULT(MaxHeapSize) && MaxHeapSize > max_heap_size) {\n+      FLAG_SET_ERGO(MaxHeapSize, max_heap_size);\n+    }\n+    if (!FLAG_IS_DEFAULT(InitialHeapSize) && InitialHeapSize > max_heap_size) {\n+      FLAG_SET_ERGO(InitialHeapSize, max_heap_size);\n+    }\n+    if (!FLAG_IS_DEFAULT(MinHeapSize) && MinHeapSize > max_heap_size) {\n+      FLAG_SET_ERGO(MinHeapSize, max_heap_size);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}