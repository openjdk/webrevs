{"files":[{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4187996\n+ * @summary Tests that Metal submenus overlap menu\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4187996\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.UIManager;\n+\n+public class bug4187996 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Open the menu \"Menu\", then \"Submenu\".\n+        The submenu should be top-aligned with the menu,\n+        and slightly overlap it horizontally. Otherwise test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4187996 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4187996::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4187996\");\n+        JMenu submenu = new JMenu(\"Submenu\");\n+        submenu.add(new JMenuItem(\"Sub 1\"));\n+        submenu.add(new JMenuItem(\"Sub 2\"));\n+\n+        JMenu menu = new JMenu(\"Menu\");\n+        menu.add(submenu);\n+        menu.add(new JMenuItem(\"Item 1\"));\n+        menu.add(new JMenuItem(\"Item 2\"));\n+\n+        JMenuBar mbar = new JMenuBar();\n+        mbar.add(menu);\n+        frame.setJMenuBar(mbar);\n+        frame.setSize(300, 100);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug4187996.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6471949\n+ * @summary JMenu should stay selected after escape is pressed\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug6471949\n+*\/\n+\n+import java.awt.event.ActionListener;\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class bug6471949 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Test the menu and its submenus for different LaF:\n+\n+        Click on \"Menu\" and then click on \"Inner\" submenu\n+        and then click on \"One more\" submenu.\n+\n+        For Metal, Nimbus and Aqua Laf the Escape key hides the last open submenu,\n+        Press Esc till the last menu \"Inner\" is closed.\n+        If the last menu is closed then the menu button (in menubar) gets unselected.\n+\n+        For Windows Laf the Escape key hides the last open submenu\n+        if the last menu is closed then the menu button remains selected,\n+        until the Escape key is pressed again or any other key letter pressed.\n+\n+        For GTK and Motif menu, all open submenus must hide when the Escape key is pressed.\n+\n+        If everything works as described, the test passes and fails otherwise.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug6471949 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug6471949::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        PassFailJFrame.log(\"Menu.cancelMode = \" +\n+                           UIManager.getString(\"Menu.cancelMode\"));\n+        PassFailJFrame.log(\"Menu.preserveTopLevelSelection = \" +\n+                            UIManager.getBoolean(\"Menu.preserveTopLevelSelection\"));\n+        PassFailJFrame.log(\"\");\n+\n+        JFrame frame = new JFrame(\"bug6471949\");\n+        JMenuBar bar = new JMenuBar();\n+        JMenu menu = new JMenu(\"Menu\");\n+        menu.setMnemonic('m');\n+\n+        JMenuItem item = new JMenuItem(\"Item\");\n+        menu.add(item);\n+        JMenu inner = new JMenu(\"Inner\");\n+        inner.add(new JMenuItem(\"Test\"));\n+        JMenu oneMore = new JMenu(\"One more\");\n+        oneMore.add(new JMenuItem(\"Lala\"));\n+        inner.add(oneMore);\n+        menu.add(inner);\n+\n+        JMenu lafMenu = new JMenu(\"Change LaF\");\n+\n+        UIManager.LookAndFeelInfo[] lafs = UIManager.getInstalledLookAndFeels();\n+        for (final UIManager.LookAndFeelInfo lafInfo : lafs) {\n+            JMenuItem lafItem = new JMenuItem(lafInfo.getName());\n+            lafItem.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    setLaf(frame, lafInfo.getClassName());\n+                }\n+            });\n+            lafMenu.add(lafItem);\n+        }\n+\n+        frame.setJMenuBar(bar);\n+        bar.add(menu);\n+        bar.add(lafMenu);\n+\n+        JTextArea field = new JTextArea();\n+        frame.add(field);\n+        field.requestFocusInWindow();\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    private static void setLaf(JFrame frame, String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            SwingUtilities.updateComponentTreeUI(frame);\n+            PassFailJFrame.log(\"Menu.cancelMode = \" +\n+                               UIManager.getString(\"Menu.cancelMode\"));\n+            PassFailJFrame.log(\"Menu.preserveTopLevelSelection = \" +\n+                               UIManager.getBoolean(\"Menu.preserveTopLevelSelection\"));\n+            PassFailJFrame.log(\"\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug6471949.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+* @test\n+* @bug 6513492\n+* @summary Escape key needs to be pressed twice to remove focus from an empty\/diabled Menu.\n+* @library \/java\/awt\/regtesthelpers\n+* @build PassFailJFrame\n+* @run main\/manual bug6513492\n+*\/\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class bug6513492 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Test Menu for different LaF:\n+\n+        * For Windows Laf:\n+            Click the editor\n+            Click EmpyMenu, press Escape -> focus must go to the editor\n+            Click EmpyMenu, press right arrow button, press Escape -> focus must go to the editor\n+            Click SubMenuTest, highlight the first disabled submenu, press Escape\n+                -> focus must stay at the topLevelMenu\n+\n+        * For Metal, Nimbus and Aqua Laf\n+            Click the editor\n+            Click SubMenuTest, highlight the EmptySubmenu, press Escape -> focus must go to the editor\n+            Click SubMenuTest, highlight the EnabledItem, press Escape -> focus must go to the editor\n+\n+        * For GTK and Motif\n+            Click the editor\n+            Open any menu or submenu, press Escape -> focus must go to the editor.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug6513492 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug6513492::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        PassFailJFrame.log(\"Menu.cancelMode = \" +\n+                            UIManager.getString(\"Menu.cancelMode\"));\n+        PassFailJFrame.log(\"Menu.preserveTopLevelSelection = \" +\n+                            UIManager.getBoolean(\"Menu.preserveTopLevelSelection\"));\n+        PassFailJFrame.log(\"\");\n+\n+        JFrame frame = new JFrame(\"bug6513492\");\n+        JMenuBar bar = new JMenuBar();\n+        bar.add(new JMenu(\"EmptyMenu\"));\n+\n+        JMenu disabledMenu = new JMenu(\"NotEmpyButDisabled\");\n+        disabledMenu.add(new JMenuItem(\"item\"));\n+        disabledMenu.setEnabled(false);\n+        bar.add(disabledMenu);\n+\n+        JMenu menu = new JMenu(\"SubMenuTest\");\n+        JMenu disabledSubmenu = new JMenu(\"Submenu\");\n+        disabledSubmenu.add(new JMenuItem(\"item\"));\n+        disabledSubmenu.setEnabled(false);\n+        menu.add(disabledSubmenu);\n+\n+        JMenu enabledSubmenu = new JMenu(\"Submenu\");\n+        enabledSubmenu.add(new JMenuItem(\"item\"));\n+        menu.add(enabledSubmenu);\n+\n+        JMenu emptySubmenu = new JMenu(\"EmptySubmenu\");\n+        menu.add(emptySubmenu);\n+\n+        menu.add(new JMenuItem(\"EnabledItem\"));\n+        JMenuItem item = new JMenuItem(\"DisabledItem\");\n+        item.setEnabled(false);\n+        menu.add(item);\n+        bar.add(menu);\n+\n+        JMenu lafMenu = new JMenu(\"Change LaF\");\n+\n+        UIManager.LookAndFeelInfo[] lafs = UIManager.getInstalledLookAndFeels();\n+        for (final UIManager.LookAndFeelInfo lafInfo : lafs) {\n+            JMenuItem lafItem = new JMenuItem(lafInfo.getName());\n+            lafItem.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    setLaf(frame, lafInfo.getClassName());\n+                }\n+            });\n+            lafMenu.add(lafItem);\n+        }\n+\n+        frame.setJMenuBar(bar);\n+        bar.add(menu);\n+        bar.add(lafMenu);\n+\n+        JTextArea field = new JTextArea(\"The editor\");\n+        frame.add(field);\n+        field.requestFocusInWindow();\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    private static void setLaf(JFrame frame, String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            SwingUtilities.updateComponentTreeUI(frame);\n+            PassFailJFrame.log(\"Menu.cancelMode = \" +\n+                               UIManager.getString(\"Menu.cancelMode\"));\n+            PassFailJFrame.log(\"Menu.preserveTopLevelSelection = \" +\n+                                UIManager.getBoolean(\"Menu.preserveTopLevelSelection\"));\n+            PassFailJFrame.log(\"\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/bug6513492.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"}]}