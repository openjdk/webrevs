{"files":[{"patch":"@@ -519,1 +519,1 @@\n-   st->print_cr(\"# Java VM: %s%s%s (%s%s, %s%s%s%s%s%s, %s, %s)\",\n+   st->print_cr(\"# Java VM: %s%s%s (%s%s, %s%s%s%s%s%s%s, %s, %s)\",\n@@ -534,0 +534,1 @@\n+                 UseCompactObjectHeaders ? \", compact obj headers\" : \"\",\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary Test that we see VM configs reported correctly in hs_err file\n+ * @library \/test\/lib\n+ * @requires vm.flagless\n+ * @requires vm.debug\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver TestVMConfigInHsErrFile\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.regex.Pattern;\n+\n+public class TestVMConfigInHsErrFile {\n+\n+  public static void main(String[] args) throws Exception {\n+\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        \"-XX:+UnlockDiagnosticVMOptions\",\n+        \"-XX:+UnlockExperimentalVMOptions\",\n+        \"-XX:+UseCompactObjectHeaders\",\n+        \"-Xmx100M\",\n+        \"-XX:-CreateCoredumpOnCrash\",\n+        \"-XX:ErrorHandlerTest=14\",\n+        \"-version\");\n+\n+    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    output.shouldNotHaveExitValue(0);\n+\n+    \/\/ we should have crashed with a SIGSEGV\n+    output.shouldMatch(\"#.+SIGSEGV.*\");\n+\n+    \/\/ extract hs-err file\n+    File f = HsErrFileUtils.openHsErrFileFromOutput(output);\n+\n+    ArrayList<Pattern> patterns = new ArrayList<>();\n+    patterns.add(Pattern.compile(\"# A fatal error has been detected.*\"));\n+    patterns.add(Pattern.compile(\"# Java VM: .*compact obj headers.*\"));\n+\n+    HsErrFileUtils.checkHsErrFileContent(f, patterns.toArray(new Pattern[] {}), true);\n+\n+  }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestVMConfigInHsErrFile.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}