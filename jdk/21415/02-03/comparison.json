{"files":[{"patch":"@@ -3471,1 +3471,3 @@\n-                    if (var != null && (var.flags() & (FINAL | EFFECTIVELY_FINAL)) == 0) {\n+                    if (var != null\n+                            && (var.flags() & (FINAL | EFFECTIVELY_FINAL)) == 0\n+                            && (!(var instanceof VarSymbol sym && capturable.isMember(sym.adr)))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.io.*;\n@@ -104,1 +105,14 @@\n-    public static void main(String[] args) {\n+    \/\/ Test: effectively final in the loop works with try-with-resources statements\n+    public static void test7() throws IOException {\n+        final InputStream input1 = new ByteArrayInputStream(new byte[0]);\n+        final InputStream input2 = new ByteArrayInputStream(new byte[0]);\n+        for (InputStream input = input1; true; input = input2) {\n+            try (input) {\n+                \/\/ nothing\n+            }\n+            if (input == input2)\n+                break;\n+        }\n+    }\n+\n+    public static void main(String[] args) throws IOException {\n@@ -111,0 +125,1 @@\n+        test7();\n","filename":"test\/langtools\/tools\/javac\/forLoopVarsEffectivelyFinal\/ForLoopVarsEffectivelyFinalValidTest.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}