{"files":[{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4151763\n+ * @summary Tests that button icon is not drawn upon button border\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual bug4151763\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.UIManager;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.border.EmptyBorder;\n+import javax.swing.border.LineBorder;\n+import jtreg.SkippedException;\n+\n+public class bug4151763 {\n+    private static final int IMAGE_SIZE = 150;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify that image icon is NOT painted outside\n+            the black rectangle.\n+\n+            If above is true press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4151763::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new SkippedException(\"Unsupported LaF\", e);\n+        }\n+\n+        JFrame frame = new JFrame(\"bug4151763\");\n+        final JButton b = new JButton(createImageIcon());\n+        b.setBorder(new CompoundBorder(\n+                           new EmptyBorder(20, 20, 20, 20),\n+                           new LineBorder(Color.BLACK)));\n+        b.setPreferredSize(new Dimension(100, 100));\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(b);\n+        frame.setSize(400, 300);\n+        return frame;\n+    }\n+\n+    private static ImageIcon createImageIcon() {\n+        BufferedImage redImg = new BufferedImage(IMAGE_SIZE, IMAGE_SIZE,\n+                                                 BufferedImage.TYPE_INT_RGB);\n+        Graphics2D g = redImg.createGraphics();\n+        g.setColor(Color.RED);\n+        g.fillRect(0, 0, IMAGE_SIZE, IMAGE_SIZE);\n+        g.dispose();\n+        return new ImageIcon(redImg);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4151763.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4415505\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests JButton appearance under Windows LAF\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4415505\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JToggleButton;\n+import javax.swing.UIManager;\n+\n+public class bug4415505 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            <html>\n+            <p>This test is for Windows LaF.\n+            Press the button named \"Button\" using mouse and check that it has\n+            \"pressed\" look. It should look like the selected toggle button\n+            near it.<\/p>\n+\n+            <p>If above is true press PASS else FAIL.<\/p>\n+            <html>\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows(5)\n+                .columns(40)\n+                .testUI(bug4415505::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JButton button = new JButton(\"Button\");\n+        button.setFocusPainted(false);\n+        JToggleButton tbutton = new JToggleButton(\"ToggleButton\");\n+        tbutton.setSelected(true);\n+\n+        JFrame jFrame = new JFrame(\"bug4415505\");\n+        jFrame.setLayout(new FlowLayout(FlowLayout.CENTER));\n+        jFrame.add(button);\n+        jFrame.add(tbutton);\n+        jFrame.setSize(300, 100);\n+        return jFrame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4415505.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4978274\n+ * @summary Tests that JButton is painted with same visible height\n+ *          as toggle buttons\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4978274\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.FlowLayout;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JToggleButton;\n+import javax.swing.UIManager;\n+import javax.swing.border.EmptyBorder;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+import javax.swing.plaf.metal.OceanTheme;\n+\n+public class bug4978274 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            The toggle buttons must be painted to the same visible\n+            height as button. In addition to that verify the following:\n+\n+            a) All three buttons - \"Button\", \"Toggle Btn\" and\n+               \"Selected Toggle Btn\" have the same border.\n+\n+            b) Verify that when \"Button\" is pressed and moused over\n+               it has the EXACT same border as \"Toggle Btn\" and\n+               \"Selected Toggle Btn\" on press & mouse over.\n+\n+            c) Click to the test window (panel) to disable\/enable all\n+               three buttons. In disabled state verify that all three\n+               buttons have the exact same border.\n+\n+            If all of the above conditions are true press PASS, else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        MetalLookAndFeel.setCurrentTheme(new OceanTheme());\n+        UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(createAndShowUI())\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame frame = new JFrame(\"bug4978274\");\n+        frame.setLayout(new BorderLayout());\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.setBorder(new EmptyBorder(12, 12, 12, 12));\n+        JButton jButton = new JButton(\"Button\");\n+        JToggleButton jToggleButton = new JToggleButton(\"Selected Toggle Btn\");\n+        jToggleButton.setSelected(true);\n+\n+        panel.add(jButton);\n+        panel.add(new JToggleButton(\"Toggle Btn\"));\n+        panel.add(jToggleButton);\n+\n+        panel.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent event) {\n+              jButton.setEnabled(!jButton.isEnabled());\n+              jToggleButton.setEnabled(jButton.isEnabled());\n+                for(int i = 0; i < panel.getComponentCount(); i++) {\n+                    panel.getComponent(i).setEnabled(jButton.isEnabled());\n+                }\n+            }\n+        });\n+\n+        frame.add(panel);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4978274.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4673850\n+ * @summary Tests that JRadioButton and JCheckBox checkmarks are painted entirely\n+ *          inside circular\/rectangle checkboxes for Motif LaF.\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual bug4673850\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JRadioButton;\n+import javax.swing.SwingConstants;\n+import javax.swing.UIManager;\n+import jtreg.SkippedException;\n+\n+public class bug4673850 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            <html>\n+            <head>\n+            <style>\n+            p {\n+              font: sans-serif;\n+            }\n+            <\/style>\n+            <\/head>\n+            <body>\n+            <p><b>This test is for Motif LaF.<\/b><\/p>\n+\n+            <p><b>\n+            When the test starts, you'll see 2 radio buttons and 2 check boxes\n+            with the checkmarks painted.<\/b><\/p>\n+\n+            <p><b>\n+            Ensure that all the button's checkmarks are painted entirely\n+            within the circular\/rectangle checkbox, NOT over them or outside them.\n+            <\/b><\/p>\n+            <\/body>\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new SkippedException(\"Unsupported LaF\", e);\n+        }\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows(10)\n+                .columns(45)\n+                .testUI(createAndShowUI())\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame frame = new JFrame(\"bug4673850\");\n+        frame.setLayout(new FlowLayout());\n+\n+        JRadioButton rb = new JRadioButton(\"RadioButt\");\n+        rb.setSelected(true);\n+        frame.add(rb);\n+        JRadioButton rb2 = new JRadioButton(\"RadioButt\");\n+        rb2.setHorizontalTextPosition(SwingConstants.LEFT);\n+        rb2.setSelected(true);\n+        frame.add(rb2);\n+\n+        JCheckBox cb = new JCheckBox(\"CheckBox\");\n+        cb.setSelected(true);\n+        frame.add(cb);\n+        JCheckBox cb2 = new JCheckBox(\"CheckBox\");\n+        cb2.setHorizontalTextPosition(SwingConstants.LEFT);\n+        cb2.setSelected(true);\n+        frame.add(cb2);\n+        frame.setSize(200, 150);\n+        return frame;\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/bug4673850.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4188504\n+ * @summary setResizable for specified column.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4188504\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+\n+public class bug4188504 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. A table is displayed with 3 columns - A, B, C.\n+\n+            2. Try to resize second column of table (Move mouse to the position\n+            between \"B\" and \"C\" headers, press left mouse button and move to\n+            right\/left).\n+            PLEASE NOTE: You may be able to swap the columns but make sure the\n+            width of column B stays the same.\n+\n+            3. If the second column does not change its width then press PASS\n+            otherwise press FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(createAndShowUI())\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame jFrame = new JFrame(\"bug4188504\");\n+        JTable tableView = new JTable(4, 3);\n+        tableView.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n+        tableView.getColumnModel().getColumn(1).setResizable(false);\n+\n+        jFrame.add(new JScrollPane(tableView));\n+        jFrame.setSize(300, 150);\n+        return jFrame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/bug4188504.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}