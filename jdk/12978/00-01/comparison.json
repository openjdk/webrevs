{"files":[{"patch":"@@ -141,0 +141,1 @@\n+class OverflowNode;\n@@ -754,3 +755,4 @@\n-        DEFINE_CLASS_ID(FastLock,   Cmp, 0)\n-        DEFINE_CLASS_ID(FastUnlock, Cmp, 1)\n-        DEFINE_CLASS_ID(SubTypeCheck,Cmp, 2)\n+        DEFINE_CLASS_ID(FastLock,     Cmp, 0)\n+        DEFINE_CLASS_ID(FastUnlock,   Cmp, 1)\n+        DEFINE_CLASS_ID(SubTypeCheck, Cmp, 2)\n+        DEFINE_CLASS_ID(Overflow,     Cmp, 3)\n@@ -946,0 +948,1 @@\n+  DEFINE_CLASS_QUERY(Overflow)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1481,1 +1481,4 @@\n-  int cop = cmp->Opcode();\n+  if (!cmp->is_Cmp()) {\n+    return false;\n+  }\n+  const int cop = cmp->Opcode();\n@@ -1483,1 +1486,2 @@\n-      cmp->is_SubTypeCheck() || cop == Op_VectorTest) {\n+      cop == Op_SubTypeCheck || cop == Op_VectorTest ||\n+      cmp->is_Overflow()) {\n@@ -1489,1 +1493,0 @@\n-\/\/------------------------------Identity-----------------------------------------\n@@ -1496,0 +1499,5 @@\n+  if (phase->is_IterGVN() && outcnt() == 0) {\n+    \/\/ During parsing, empty uses of bool is tolerable. During iterative GVN,\n+    \/\/ we don't aggressively replace bool whose use is empty with existing node.\n+    return this;\n+  }\n@@ -1517,4 +1525,0 @@\n-  if (!cmp->is_Sub()) {\n-    return nullptr;\n-  }\n-\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}