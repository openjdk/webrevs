{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n@@ -30,0 +31,1 @@\n+import java.nio.file.Files;\n@@ -40,0 +42,1 @@\n+import java.util.Properties;\n@@ -203,1 +206,3 @@\n-                shell[0] = new PropertyFile(propertiesFilePath);\n+                shell[0] = toSupplier(() -> {\n+                    return new PropertyFile(propertiesFilePath);\n+                }).get();\n@@ -238,0 +243,26 @@\n+    public static final class PropertyFile {\n+\n+        PropertyFile(Map<String, String> data) {\n+            this.data = new Properties();\n+            this.data.putAll(data);\n+        }\n+\n+        PropertyFile(Path path) throws IOException {\n+            data = new Properties();\n+            try (var reader = Files.newBufferedReader(path)) {\n+                data.load(reader);\n+            }\n+        }\n+\n+        public Optional<String> findProperty(String name) {\n+            Objects.requireNonNull(name);\n+            return Optional.ofNullable(data.getProperty(name));\n+        }\n+\n+        public Optional<Boolean> findBooleanProperty(String name) {\n+            return findProperty(name).map(Boolean::parseBoolean);\n+        }\n+\n+        private final Properties data;\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/AdditionalLauncher.java","additions":32,"deletions":1,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.io.UncheckedIOException;\n@@ -220,4 +221,8 @@\n-                final var launcherAsService = new PropertyFile(propertyFilePath)\n-                        .findBooleanProperty(\"launcher-as-service\").orElse(false);\n-                if (launcherAsService) {\n-                    withServices[0] = true;\n+                try {\n+                    final var launcherAsService = new AdditionalLauncher.PropertyFile(propertyFilePath)\n+                            .findBooleanProperty(\"launcher-as-service\").orElse(false);\n+                    if (launcherAsService) {\n+                        withServices[0] = true;\n+                    }\n+                } catch (IOException ex) {\n+                    throw new UncheckedIOException(ex);\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/ConfigFilesStasher.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+import static jdk.jpackage.internal.util.function.ThrowingBiConsumer.toBiConsumer;\n@@ -47,0 +48,1 @@\n+import jdk.jpackage.test.AdditionalLauncher.PropertyFile;\n@@ -194,1 +196,1 @@\n-        forEachAdditionalLauncher(cmd, (launcherName, propFilePath) -> {\n+        forEachAdditionalLauncher(cmd, toBiConsumer((launcherName, propFilePath) -> {\n@@ -198,1 +200,1 @@\n-        });\n+        }));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherAsServiceVerifier.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.jpackage.test.AdditionalLauncher.PropertyFile;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherShortcut.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import jdk.jpackage.test.AdditionalLauncher.PropertyFile;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherVerifier.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.jpackage.test;\n-\n-import java.io.IOException;\n-import java.io.UncheckedIOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.Properties;\n-\n-public final class PropertyFile {\n-\n-    PropertyFile(Map<String, String> data) {\n-        this.data = new Properties();\n-        this.data.putAll(data);\n-    }\n-\n-    PropertyFile(Path path) {\n-        data = new Properties();\n-        try (var reader = Files.newBufferedReader(path)) {\n-            data.load(reader);\n-        } catch (IOException ex) {\n-            throw new UncheckedIOException(ex);\n-        }\n-    }\n-\n-    public Optional<String> findProperty(String name) {\n-        Objects.requireNonNull(name);\n-        return Optional.ofNullable(data.getProperty(name));\n-    }\n-\n-    public Optional<Boolean> findBooleanProperty(String name) {\n-        return findProperty(name).map(Boolean::parseBoolean);\n-    }\n-\n-    private final Properties data;\n-}\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PropertyFile.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"}]}