{"files":[{"patch":"@@ -2026,1 +2026,1 @@\n-                rootSh = sh \/ n;\n+                rootSh = sh \/ n; \/\/ sh < bitLength, so sh \/ n == rootSh < rootLen\n@@ -2046,2 +2046,2 @@\n-                    \/\/ Double.PRECISION correct bits in the radicand yield to at least\n-                    \/\/ one correct bit in the root, so rootSh < rootLen\n+                    \/\/ wrongBits must be less than ((Math.getExponent(rad) + 1) - 1) \/ n + 1,\n+                    \/\/ the bit length of approx, so rootSh < rootLen\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}