{"files":[{"patch":"@@ -1970,2 +1970,4 @@\n-            if (bitLength > Double.MAX_EXPONENT) {\n-                shift = bitLength - Double.MAX_EXPONENT;\n+            \/\/ Try to shift as many bits as possible\n+            \/\/ without losing precision in double's representation\n+            if (bitLength > Double.PRECISION) {\n+                shift = bitLength - Double.PRECISION;\n@@ -1974,8 +1976,14 @@\n-                \/\/ Shift the value into finite double range\n-                rad = this.toBigInteger().shiftRight((int) shift).doubleValue();\n-                \/\/ Complete the shift to a multiple of n,\n-                \/\/ avoiding to lose more bits than necessary.\n-                if (shiftExcess != 0) {\n-                    int shiftLack = n - shiftExcess;\n-                    shift += shiftLack; \/\/ shift is long, no overflow\n-                    rad \/= Double.parseDouble(\"0x1p\" + shiftLack);\n+                if (bitLength - (shift - shiftExcess) <= Double.MAX_EXPONENT) {\n+                    shift -= shiftExcess; \/\/ Adjust shift to a multiple of n\n+                    \/\/ Shift the value into finite double range\n+                    rad = this.toBigInteger().shiftRight((int) shift).doubleValue();\n+                } else { \/\/ this >> (shift - shiftExcess) could exceed finite double range, must lose precision\n+                    \/\/ Shift the value into finite double range\n+                    rad = this.toBigInteger().shiftRight((int) shift).doubleValue();\n+                    \/\/ Complete the shift to a multiple of n,\n+                    \/\/ avoiding to lose more bits than necessary.\n+                    if (shiftExcess != 0) {\n+                        int shiftLack = n - shiftExcess;\n+                        shift += shiftLack; \/\/ shift is long, no overflow\n+                        rad \/= Double.parseDouble(\"0x1p\" + shiftLack);\n+                    }\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"}]}