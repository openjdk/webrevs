{"files":[{"patch":"@@ -68,2 +68,1 @@\n-        buf.writeInt(0);\n-        int start = buf.size();\n+        int lengthIndex = buf.skip(4);\n@@ -71,2 +70,2 @@\n-        int written = buf.size() - start;\n-        buf.patchInt(start - 4, written);\n+        int written = buf.size() - lengthIndex - 4;\n+        buf.patchInt(lengthIndex, written);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -192,0 +192,12 @@\n+    \/**\n+     * Skip a few bytes in the output buffer. The skipped area has undefined value.\n+     * @param bytes number of bytes to skip\n+     * @return the index, for later patching\n+     *\/\n+    public int skip(int bytes) {\n+        int now = offset;\n+        reserveSpace(bytes);\n+        offset += bytes;\n+        return now;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -458,2 +458,1 @@\n-            int pc = curPc();\n-            bytecodesBufWriter.writeIntBytes(nBytes, 0);\n+            int pc = bytecodesBufWriter.skip(nBytes);\n@@ -551,1 +550,1 @@\n-            bytecodesBufWriter.writeIntBytes(pad, 0);\n+            bytecodesBufWriter.skip(pad); \/\/ padding content can be anything\n@@ -555,1 +554,1 @@\n-        cases.sort(new Comparator<SwitchCase>() {\n+        cases.sort(new Comparator<>() {\n@@ -572,1 +571,1 @@\n-            bytecodesBufWriter.writeIntBytes(pad, 0);\n+            bytecodesBufWriter.skip(pad); \/\/ padding content can be anything\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -852,2 +852,1 @@\n-            b.writeInt(0);\n-            int start = b.size();\n+            int lengthIndex = b.skip(4);\n@@ -855,2 +854,2 @@\n-            int written = b.size() - start;\n-            b.patchInt(start - 4, written);\n+            int written = b.size() - lengthIndex - 4;\n+            b.patchInt(lengthIndex, written);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/UnboundAttribute.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}