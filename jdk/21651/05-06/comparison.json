{"files":[{"patch":"@@ -3331,0 +3331,4 @@\n+    \/* this class won't substitute all types for example UndetVars are never substituted, this is like this\n+     * by design as UndetVars are used locally during inference and shouldn't scape from inference rutines,\n+     * some specialized applications could need a tailored solution\n+     *\/\n@@ -3362,10 +3366,0 @@\n-        @Override\n-        public Type visitUndetVar(UndetVar t, Void unused) {\n-            for (List<Type> from = this.from, to = this.to; from.nonEmpty(); from = from.tail, to = to.tail) {\n-                if (t.equalsIgnoreMetadata(from.head)) {\n-                    return to.head;\n-                }\n-            }\n-            return t;\n-        }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"}]}