{"files":[{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:serial -XDfailcomplete=java.io.Serializable Bar.java Foo.java\n","filename":"test\/langtools\/tools\/javac\/5045412\/Bar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:serial -XDfailcomplete=java.io.Serializable Foo.java\n@@ -29,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:serial -XDfailcomplete=java.io.Serializable Foo.java Bar.java\n","filename":"test\/langtools\/tools\/javac\/5045412\/Foo.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Tree.java TreeScanner.java TreeInfo.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TreeInfo.java TreeScanner.java Tree.java\n@@ -33,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=bytodo Tree.java TreeScanner.java TreeInfo.java\n@@ -34,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=bytodo TreeInfo.java TreeScanner.java Tree.java\n@@ -36,0 +40,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=byfile Tree.java TreeScanner.java TreeInfo.java\n@@ -37,0 +42,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=byfile TreeInfo.java TreeScanner.java Tree.java\n@@ -39,0 +45,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=simple Tree.java TreeScanner.java TreeInfo.java\n@@ -40,0 +47,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDcompilePolicy=simple TreeInfo.java TreeScanner.java Tree.java\n@@ -42,0 +50,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDshould-stop.ifError=FLOW -XDshould-stop.ifNoError=FLOW  Tree.java TreeScanner.java TreeInfo.java\n@@ -43,0 +52,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDshould-stop.ifError=FLOW -XDshould-stop.ifNoError=FLOW  TreeInfo.java TreeScanner.java Tree.java\n@@ -45,0 +55,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR  Tree.java TreeScanner.java TreeInfo.java\n@@ -46,0 +57,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR  TreeInfo.java TreeScanner.java Tree.java\n","filename":"test\/langtools\/tools\/javac\/6199662\/Tree.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 package-info.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -printsource package-info.java\n","filename":"test\/langtools\/tools\/javac\/6257443\/T6257443.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T1.java\n@@ -37,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T2.java\n","filename":"test\/langtools\/tools\/javac\/6330997\/T6330997.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfailcomplete=java.lang.Void T6390045a.java\n","filename":"test\/langtools\/tools\/javac\/6390045\/T6390045a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfailcomplete=java.lang.Void T6390045b.java\n","filename":"test\/langtools\/tools\/javac\/6390045\/T6390045b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T.java\n","filename":"test\/langtools\/tools\/javac\/6520152\/T6520152.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6521805b.java\n","filename":"test\/langtools\/tools\/javac\/6521805\/T6521805b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6521805c.java\n","filename":"test\/langtools\/tools\/javac\/6521805\/T6521805c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 p\/Outer.jasm p\/Outer$I.jasm T.java\n","filename":"test\/langtools\/tools\/javac\/6547131\/T.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDignore.symbol.file T6567415.java\n","filename":"test\/langtools\/tools\/javac\/6567415\/T6567415.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6835430.java\n","filename":"test\/langtools\/tools\/javac\/6835430\/T6835430.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 npe\/A.java npe\/B.java\n","filename":"test\/langtools\/tools\/javac\/6948381\/T6948381.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestCast6979683_GOOD.java\n","filename":"test\/langtools\/tools\/javac\/6979683\/TestCast6979683_GOOD.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pack1\/Symbol.java\n@@ -29,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Main.java\n","filename":"test\/langtools\/tools\/javac\/6996626\/Main.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7023703pos.java\n","filename":"test\/langtools\/tools\/javac\/7023703\/T7023703pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-TestImportStar.java:16:8: compiler.err.doesnt.exist: xxx\n+TestImportStar.java:17:8: compiler.err.doesnt.exist: xxx\n","filename":"test\/langtools\/tools\/javac\/7129225\/NegTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,0 +10,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno.java AnnoProcessor.java\n","filename":"test\/langtools\/tools\/javac\/7129225\/TestImportStar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-TestImportStar.java:16:8: compiler.err.doesnt.exist: xxx\n+TestImportStar.java:17:8: compiler.err.doesnt.exist: xxx\n","filename":"test\/langtools\/tools\/javac\/7129225\/TestImportStar.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/ClassToBeStaticallyImportedA.java pkg\/ClassToBeStaticallyImportedB.java CPoolRefClassContainingInlinedCts.java\n","filename":"test\/langtools\/tools\/javac\/7153958\/CPoolRefClassContainingInlinedCts.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestSyntheticNullChecks.java\n","filename":"test\/langtools\/tools\/javac\/8074306\/TestSyntheticNullChecks.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8169345c.java\n","filename":"test\/langtools\/tools\/javac\/8169345\/T8169345c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8245153.java\n","filename":"test\/langtools\/tools\/javac\/8245153\/T8245153.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ValidThisAndSuperInConstructorArgTest.java\n","filename":"test\/langtools\/tools\/javac\/8278078\/ValidThisAndSuperInConstructorArgTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AbstractOverride.java\n","filename":"test\/langtools\/tools\/javac\/AbstractOverride.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AccessMethodsLHS.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/AccessMethodsLHS.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BitwiseAssignment.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/BitwiseAssignment.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ChainedAssignment.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/ChainedAssignment.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConstructorAccess.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/ConstructorAccess.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InternalHandshake.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/InternalHandshake.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LateAddition.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/LateAddition.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UplevelPrivateConstants.java\n","filename":"test\/langtools\/tools\/javac\/AccessMethods\/UplevelPrivateConstants.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AddReferenceThis.java\n","filename":"test\/langtools\/tools\/javac\/AddReferenceThis.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonStaticMember_1.java\n","filename":"test\/langtools\/tools\/javac\/AnonStaticMember_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-AnonStaticMember_1.java:13:20: compiler.err.icls.cant.have.static.decl: compiler.misc.anonymous.class: AnonStaticMember_1$1\n+AnonStaticMember_1.java:14:20: compiler.err.icls.cant.have.static.decl: compiler.misc.anonymous.class: AnonStaticMember_1$1\n","filename":"test\/langtools\/tools\/javac\/AnonStaticMember_1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonStaticMember_2.java\n","filename":"test\/langtools\/tools\/javac\/AnonStaticMember_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-AnonStaticMember_2.java:13:21: compiler.err.icls.cant.have.static.decl: compiler.misc.anonymous.class: AnonStaticMember_2$1\n+AnonStaticMember_2.java:14:21: compiler.err.icls.cant.have.static.decl: compiler.misc.anonymous.class: AnonStaticMember_2$1\n","filename":"test\/langtools\/tools\/javac\/AnonStaticMember_2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CtorAccessBypassTest.java\n","filename":"test\/langtools\/tools\/javac\/AnonymousClass\/CtorAccessBypassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonymousConstructorExceptions.java\n","filename":"test\/langtools\/tools\/javac\/AnonymousConstructorExceptions.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonymousNull.java\n","filename":"test\/langtools\/tools\/javac\/AnonymousNull.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonymousType.java\n","filename":"test\/langtools\/tools\/javac\/AnonymousType.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ArrayCast.java\n","filename":"test\/langtools\/tools\/javac\/ArrayCast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/Outer.jasm pkg\/Outer$Inner.jasm AvoidNPEAtClassReaderTest.java\n","filename":"test\/langtools\/tools\/javac\/AvoidNPEAtClassReader\/AvoidNPEAtClassReaderTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BoolArray.java\n","filename":"test\/langtools\/tools\/javac\/BoolArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BranchToFewerDefines.java\n","filename":"test\/langtools\/tools\/javac\/BranchToFewerDefines.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CascadedInnerNewInstance.java\n","filename":"test\/langtools\/tools\/javac\/CascadedInnerNewInstance.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassCycle1a.java\n","filename":"test\/langtools\/tools\/javac\/ClassCycle\/ClassCycle1a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassCycle2a.java\n","filename":"test\/langtools\/tools\/javac\/ClassCycle\/ClassCycle2a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassCycle3a.java\n","filename":"test\/langtools\/tools\/javac\/ClassCycle\/ClassCycle3a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassLiteralHelperContext.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/ClassLiteralHelperContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InitializeOuter.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/InitializeOuter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InitializeTarget.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/InitializeTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InnerClassLiterals.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/InnerClassLiterals.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LiteralInterface_1.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LiteralInterface_2.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LiteralInterface_3.java\n@@ -33,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LiteralInterfaceImpl.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/LiteralInterfaceImpl.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassLiteralEvalInit.java\n","filename":"test\/langtools\/tools\/javac\/ClassLiterals\/evalinit\/ClassLiteralEvalInit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceAndInnerClsCtor.java\n","filename":"test\/langtools\/tools\/javac\/ClassModifiers\/InterfaceAndInnerClsCtor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CloneableProblem.java\n","filename":"test\/langtools\/tools\/javac\/CloneableProblem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure1.java\n","filename":"test\/langtools\/tools\/javac\/Closure1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure2.java\n","filename":"test\/langtools\/tools\/javac\/Closure2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure3.java\n","filename":"test\/langtools\/tools\/javac\/Closure3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure4.java\n","filename":"test\/langtools\/tools\/javac\/Closure4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure5.java\n","filename":"test\/langtools\/tools\/javac\/Closure5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Closure6.java\n","filename":"test\/langtools\/tools\/javac\/Closure6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                  ConditionalArgTypes_1.java\n","filename":"test\/langtools\/tools\/javac\/ConditionalArgTypes_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                  ConditionalArgTypes_2.java\n","filename":"test\/langtools\/tools\/javac\/ConditionalArgTypes_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConditionalExpressionResolvePending.java\n","filename":"test\/langtools\/tools\/javac\/ConditionalExpressionResolvePending.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConditionalInline.java\n","filename":"test\/langtools\/tools\/javac\/ConditionalInline.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConstBoolAppend.java\n","filename":"test\/langtools\/tools\/javac\/ConstBoolAppend.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConstCharAppend.java\n","filename":"test\/langtools\/tools\/javac\/ConstCharAppend.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CyclicInheritance2.java\n","filename":"test\/langtools\/tools\/javac\/CyclicInheritance2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CyclicInheritance4.java\n","filename":"test\/langtools\/tools\/javac\/CyclicInheritance4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 p1\/B.java\n","filename":"test\/langtools\/tools\/javac\/CyclicInheritance6\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DeadInnerClass.java\n","filename":"test\/langtools\/tools\/javac\/DeadInnerClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DeclarationStatementInline.java\n","filename":"test\/langtools\/tools\/javac\/DeclarationStatementInline.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DeepStringConcat.java\n","filename":"test\/langtools\/tools\/javac\/DeepStringConcat.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7003744a.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/7003744\/T7003744a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7003744b.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/7003744\/T7003744b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DALoop1.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DALoop1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DUBeforeDefined1.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DUBeforeDefined1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DUBeforeDefined2.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DUBeforeDefined2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DUSwitch2.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DUSwitch2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefAssignAfterThis_2.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DefAssignAfterThis_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefAssignCond.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DefAssignBoolean\/DefAssignCond.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4718134.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T4718134.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4720379.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T4720379.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4720751.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T4720751.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4721076.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T4721076.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4721998.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T4721998.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7181578.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/T7181578.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrowBeforeTryFinally.java\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/ThrowBeforeTryFinally.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DepParam.java\n","filename":"test\/langtools\/tools\/javac\/DepParam.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DivByZero.java\n","filename":"test\/langtools\/tools\/javac\/DivByZero.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DuplicateClass2.java DuplicateClass2.java\n","filename":"test\/langtools\/tools\/javac\/DuplicateClass2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DuplicateImport.java\n","filename":"test\/langtools\/tools\/javac\/DuplicateImport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EmptyArray.java\n","filename":"test\/langtools\/tools\/javac\/EmptyArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EmptyDocComments.java\n","filename":"test\/langtools\/tools\/javac\/EmptyDocComments.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EmptySwitch.java\n","filename":"test\/langtools\/tools\/javac\/EmptySwitch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExceptionalFinally.java\n","filename":"test\/langtools\/tools\/javac\/ExceptionalFinally.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FaultySignature.java\n","filename":"test\/langtools\/tools\/javac\/FaultySignature.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FinalInitializer_2.java\n","filename":"test\/langtools\/tools\/javac\/FinalInitializer_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FinalIntConcatenation.java\n","filename":"test\/langtools\/tools\/javac\/FinalIntConcatenation.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror FinallyWarn.java\n","filename":"test\/langtools\/tools\/javac\/FinallyWarn.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-FinallyWarn.java:16:9: compiler.warn.finally.cannot.complete\n+FinallyWarn.java:17:9: compiler.warn.finally.cannot.complete\n","filename":"test\/langtools\/tools\/javac\/FinallyWarn.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/FloatingPointChanges\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6676362a.java\n","filename":"test\/langtools\/tools\/javac\/ForwardReference\/T6676362a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6676362b.java\n","filename":"test\/langtools\/tools\/javac\/ForwardReference\/T6676362b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UseBeforeDeclaration.java\n","filename":"test\/langtools\/tools\/javac\/ForwardReference\/UseBeforeDeclaration.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GoodCovar.java\n","filename":"test\/langtools\/tools\/javac\/GoodCovar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 IllDefinedOrderOfInit.java\n","filename":"test\/langtools\/tools\/javac\/IllDefinedOrderOfInit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 IllegallyOptimizedException.java\n","filename":"test\/langtools\/tools\/javac\/IllegallyOptimizedException.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedEnum.java\n","filename":"test\/langtools\/tools\/javac\/ImplicitClass\/NestedEnum.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 foo\/Middle.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 foo\/Middle2.java\n","filename":"test\/langtools\/tools\/javac\/ImportCycle\/Dummy.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -classpath . foo\/Accessor.java foo\/Accessee.java\n","filename":"test\/langtools\/tools\/javac\/ImportPackagePrivateInner\/Dummy.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InconsistentStack.java\n","filename":"test\/langtools\/tools\/javac\/InconsistentStack.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Increment.java\n","filename":"test\/langtools\/tools\/javac\/Increment.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InheritedPrivateImpl.java\n","filename":"test\/langtools\/tools\/javac\/InheritedPrivateImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/InnerClassesAttribute\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InnerMemberRegression.java\n","filename":"test\/langtools\/tools\/javac\/InnerMemberRegression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InnerMethSig.java\n","filename":"test\/langtools\/tools\/javac\/InnerMethSig.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InnerNamedConstant_1.java\n","filename":"test\/langtools\/tools\/javac\/InnerNamedConstant_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceAssert.java\n","filename":"test\/langtools\/tools\/javac\/InterfaceAssert.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceInInner.java\n","filename":"test\/langtools\/tools\/javac\/InterfaceInInner.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-InterfaceInInner.java:13:13: compiler.err.icls.cant.have.static.decl: foo\n+InterfaceInInner.java:14:13: compiler.err.icls.cant.have.static.decl: foo\n","filename":"test\/langtools\/tools\/javac\/InterfaceInInner.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceOverrideObject.java\n","filename":"test\/langtools\/tools\/javac\/InterfaceOverrideObject.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InvalidIntfCast.java\n","filename":"test\/langtools\/tools\/javac\/InvalidIntfCast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 JsrRet.java\n","filename":"test\/langtools\/tools\/javac\/JsrRet.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalClasses_1.java\n","filename":"test\/langtools\/tools\/javac\/LocalClasses_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalInterface.java\n","filename":"test\/langtools\/tools\/javac\/LocalInterface.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-LocalInterface.java:10:9: compiler.err.intf.not.allowed.here\n+LocalInterface.java:11:9: compiler.err.intf.not.allowed.here\n","filename":"test\/langtools\/tools\/javac\/LocalInterface.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalRecord.java\n","filename":"test\/langtools\/tools\/javac\/LocalRecord.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ManyMembers2.java\n","filename":"test\/langtools\/tools\/javac\/ManyMembers2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters AnnotationTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/AnnotationTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters AnonymousClass.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/AnonymousClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters CaptureTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/CaptureTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters ClassReaderTest.java MethodParameterProcessor.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/ClassReaderTest\/ClassReaderTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters Constructors.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/Constructors.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefaultParamNames.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/DefaultParamNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters EnumTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/EnumTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters InstanceMethods.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/InstanceMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters LambdaTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/LambdaTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters LocalClassTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/LocalClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters MemberClassTest.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/MemberClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters StaticMethods.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/StaticMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters UncommonParamNames.java\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/UncommonParamNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NameClashTest.java\n","filename":"test\/langtools\/tools\/javac\/NameClash\/NameClashTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 One.java\n","filename":"test\/langtools\/tools\/javac\/NameClash\/One.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NameCollision2.java\n","filename":"test\/langtools\/tools\/javac\/NameCollision2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedFinallyReturn.java\n","filename":"test\/langtools\/tools\/javac\/NestedFinallyReturn.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 one\/Parent.java two\/Child.java\n","filename":"test\/langtools\/tools\/javac\/NonAmbiguousField\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NonStaticFieldExpr4c.java NonStaticFieldExpr4d.java\n","filename":"test\/langtools\/tools\/javac\/NonStaticFieldExpr4c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Null2DArray.java\n","filename":"test\/langtools\/tools\/javac\/Null2DArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NullStaticQualifier.java\n","filename":"test\/langtools\/tools\/javac\/NullStaticQualifier.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ObjectIncompatibleInterface.java\n","filename":"test\/langtools\/tools\/javac\/ObjectIncompatibleInterface.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 OuterParameter_1.java\n","filename":"test\/langtools\/tools\/javac\/OuterParameter_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6400189c.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/6400189\/T6400189c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6400189d.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/6400189\/T6400189d.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6738538a.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/6738538\/T6738538a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6738538b.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/6738538\/T6738538b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceImplements.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/InterfaceImplements.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InterfaceOverride.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/InterfaceOverride.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6326485.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/T6326485.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6399361.java\n","filename":"test\/langtools\/tools\/javac\/OverrideChecks\/T6399361.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PackageClassClash.java\n","filename":"test\/langtools\/tools\/javac\/PackageClassClash\/PackageClassClash.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pack1\/P1.java\n@@ -10,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pack1\/P2.java\n","filename":"test\/langtools\/tools\/javac\/QualifiedAccess\/QualifiedAccess_1.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-QualifiedAccess_1.java:24:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:25:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n@@ -4,2 +2,2 @@\n-QualifiedAccess_1.java:29:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:30:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:27:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:28:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n@@ -7,2 +5,2 @@\n-QualifiedAccess_1.java:34:16: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:35:16: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:32:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:33:7: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n@@ -10,2 +8,2 @@\n-QualifiedAccess_1.java:46:11: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:47:11: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:37:16: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:38:16: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n@@ -13,6 +11,8 @@\n-QualifiedAccess_1.java:59:25: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:60:25: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:61:26: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:72:41: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:73:41: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n-QualifiedAccess_1.java:74:42: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:49:11: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:50:11: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:61:25: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:62:25: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:63:26: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:74:41: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:75:41: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n+QualifiedAccess_1.java:76:42: compiler.err.not.def.public.cant.access: pack1.P1.P3, pack1.P1\n","filename":"test\/langtools\/tools\/javac\/QualifiedAccess\/QualifiedAccess_1.out","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pack1\/P1.java\n@@ -10,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pack1\/P2.java\n","filename":"test\/langtools\/tools\/javac\/QualifiedAccess\/QualifiedAccess_2.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,6 +1,6 @@\n-QualifiedAccess_2.java:40:22: compiler.err.report.access: A.B, private, A\n-QualifiedAccess_2.java:41:22: compiler.err.report.access: A.B, private, A\n-QualifiedAccess_2.java:45:15: compiler.err.not.def.public.cant.access: pack1.P1.Foo, pack1.P1\n-QualifiedAccess_2.java:52:29: compiler.err.report.access: Y.Quux.Quem, private, Y.Quux\n-QualifiedAccess_2.java:30:25: compiler.err.report.access: pack1.P1.R.S, private, pack1.P1.R\n-QualifiedAccess_2.java:54:25: compiler.err.report.access: Y.Quux.Quem, private, Y.Quux\n+QualifiedAccess_2.java:42:22: compiler.err.report.access: A.B, private, A\n+QualifiedAccess_2.java:43:22: compiler.err.report.access: A.B, private, A\n+QualifiedAccess_2.java:47:15: compiler.err.not.def.public.cant.access: pack1.P1.Foo, pack1.P1\n+QualifiedAccess_2.java:54:29: compiler.err.report.access: Y.Quux.Quem, private, Y.Quux\n+QualifiedAccess_2.java:32:25: compiler.err.report.access: pack1.P1.R.S, private, pack1.P1.R\n+QualifiedAccess_2.java:56:25: compiler.err.report.access: Y.Quux.Quem, private, Y.Quux\n","filename":"test\/langtools\/tools\/javac\/QualifiedAccess\/QualifiedAccess_2.out","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualifiedNewScope.java\n","filename":"test\/langtools\/tools\/javac\/QualifiedNewScope.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualifiedOuterThis.java\n","filename":"test\/langtools\/tools\/javac\/QualifiedOuterThis.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualifiedOuterThis2.java\n","filename":"test\/langtools\/tools\/javac\/QualifiedOuterThis2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 RawCrash.java\n","filename":"test\/langtools\/tools\/javac\/RawCrash.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror RestrictedMethods.java\n","filename":"test\/langtools\/tools\/javac\/RestrictedMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-RestrictedMethods.java:15:44: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:19:49: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:25:27: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:34:16: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:16:44: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:20:49: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:26:27: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:35:16: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n","filename":"test\/langtools\/tools\/javac\/RestrictedMethods.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ShiftExpressionTest.java\n","filename":"test\/langtools\/tools\/javac\/ShiftExpressionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StaticBlockScope.java\n","filename":"test\/langtools\/tools\/javac\/StaticBlockScope.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StrictAbstract.java\n","filename":"test\/langtools\/tools\/javac\/StrictAbstract.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indy              StringAppendEvaluatesInOrder.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indyWithConstants StringAppendEvaluatesInOrder.java\n@@ -39,0 +41,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=inline            StringAppendEvaluatesInOrder.java\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/StringAppendEvaluatesInOrder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StringConcatWithAssignments.java\n@@ -29,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=inline StringConcatWithAssignments.java\n@@ -31,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indy StringConcatWithAssignments.java\n@@ -33,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indyWithConstants StringConcatWithAssignments.java\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/StringConcatWithAssignments.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indy              WellKnownTypeSignatures.java\n@@ -46,0 +47,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indyWithConstants WellKnownTypeSignatures.java\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/WellKnownTypeSignatures.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indy              WellKnownTypes.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indyWithConstants WellKnownTypes.java\n@@ -37,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=inline            WellKnownTypes.java\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/WellKnownTypes.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indy              Holder.java PublicClass.java PublicInterface.java Public_PublicClass.java Public_PublicInterface.java Public_PrivateInterface1.java Public_PrivateInterface2.java Test.java\n@@ -45,0 +46,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDstringConcat=indyWithConstants Holder.java PublicClass.java PublicInterface.java Public_PublicClass.java Public_PublicInterface.java Public_PrivateInterface1.java Public_PrivateInterface2.java Test.java\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/access\/Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StringConversion.java\n","filename":"test\/langtools\/tools\/javac\/StringConversion.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BinOpInCaseLabel.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/7181320\/BinOpInCaseLabel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CastInCaseLabel.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/7181320\/CastInCaseLabel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CondExprInCaseLabel.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/7181320\/CondExprInCaseLabel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CondExprInCaseLabel1.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/7181320\/CondExprInCaseLabel1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CondExprInCaseLabel2.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/7181320\/CondExprInCaseLabel2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2          OneCaseSwitches.java\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/OneCaseSwitches.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperField.java\n","filename":"test\/langtools\/tools\/javac\/SuperField.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MrefDoubleTrans.java\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/MrefDoubleTrans.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperMeth.java\n","filename":"test\/langtools\/tools\/javac\/SuperMeth.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperMethodResolve.java\n","filename":"test\/langtools\/tools\/javac\/SuperMethodResolve.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperNew.java\n","filename":"test\/langtools\/tools\/javac\/SuperNew.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperNew2.java\n","filename":"test\/langtools\/tools\/javac\/SuperNew2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperNew3.java\n","filename":"test\/langtools\/tools\/javac\/SuperNew3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperNew4.java\n","filename":"test\/langtools\/tools\/javac\/SuperNew4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SuperclassConstructorException.java\n","filename":"test\/langtools\/tools\/javac\/SuperclassConstructorException.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchFence.java\n","filename":"test\/langtools\/tools\/javac\/SwitchFence.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SynthName1.java\n","filename":"test\/langtools\/tools\/javac\/SynthName1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:deprecation DeprecatedNOT.java\n","filename":"test\/langtools\/tools\/javac\/T4994049\/DeprecatedNOT.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:deprecation DeprecatedYES.java\n","filename":"test\/langtools\/tools\/javac\/T4994049\/DeprecatedYES.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-DeprecatedYES.java:12:10: compiler.warn.missing.deprecated.annotation\n+DeprecatedYES.java:13:10: compiler.warn.missing.deprecated.annotation\n@@ -3,1 +3,1 @@\n-DeprecatedYES.java:18:10: compiler.warn.has.been.deprecated: foo(), A\n+DeprecatedYES.java:19:10: compiler.warn.has.been.deprecated: foo(), A\n","filename":"test\/langtools\/tools\/javac\/T4994049\/DeprecatedYES.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Super.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AbstractSub.java\n","filename":"test\/langtools\/tools\/javac\/T6180021\/AbstractSub.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Super.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Sub.java\n","filename":"test\/langtools\/tools\/javac\/T6180021\/Sub.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror T6227617.java\n","filename":"test\/langtools\/tools\/javac\/T6227617.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,5 +1,5 @@\n-T6227617.java:14:18: compiler.warn.redundant.cast: int\n-T6227617.java:19:20: compiler.warn.redundant.cast: java.lang.String\n-T6227617.java:23:22: compiler.warn.redundant.cast: java.lang.Integer\n-T6227617.java:33:27: compiler.warn.redundant.cast: int\n-T6227617.java:36:29: compiler.warn.redundant.cast: java.lang.String\n+T6227617.java:15:18: compiler.warn.redundant.cast: int\n+T6227617.java:20:20: compiler.warn.redundant.cast: java.lang.String\n+T6227617.java:24:22: compiler.warn.redundant.cast: java.lang.Integer\n+T6227617.java:34:27: compiler.warn.redundant.cast: int\n+T6227617.java:37:29: compiler.warn.redundant.cast: java.lang.String\n","filename":"test\/langtools\/tools\/javac\/T6227617.out","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g:none T6231246.java\n","filename":"test\/langtools\/tools\/javac\/T6231246\/T6231246.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6232928.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6232928\/package-info.java\n","filename":"test\/langtools\/tools\/javac\/T6232928.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6294589.java\n","filename":"test\/langtools\/tools\/javac\/T6294589.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6304128.java\n","filename":"test\/langtools\/tools\/javac\/T6304128.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6356217.java\n","filename":"test\/langtools\/tools\/javac\/T6356217\/T6356217.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6411379 -proc:only T6411379 T6411379.java\n","filename":"test\/langtools\/tools\/javac\/T6411379.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor T6423583 T6423583.java\n","filename":"test\/langtools\/tools\/javac\/T6423583.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6458749 -proc:only T6458749.java\n","filename":"test\/langtools\/tools\/javac\/T6458749.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MyProcessor.java T6458823.java\n","filename":"test\/langtools\/tools\/javac\/T6458823\/T6458823.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6554097.java\n","filename":"test\/langtools\/tools\/javac\/T6554097.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-T6554097.java:13:42: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n-T6554097.java:13:65: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n@@ -5,2 +3,2 @@\n-T6554097.java:17:50: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n-T6554097.java:17:73: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:15:42: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:15:65: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n@@ -9,2 +7,2 @@\n-T6554097.java:21:11: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n-T6554097.java:21:34: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:19:50: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:19:73: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n@@ -13,2 +11,2 @@\n-T6554097.java:25:15: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n-T6554097.java:25:38: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:23:11: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:23:34: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n@@ -17,0 +15,2 @@\n+T6554097.java:27:15: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n+T6554097.java:27:38: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>\n","filename":"test\/langtools\/tools\/javac\/T6554097.out","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6794959.java\n@@ -8,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfailcomplete=java.lang.String -XDexpectKeys=compiler.err.cant.resolve.location T6794959.java\n","filename":"test\/langtools\/tools\/javac\/T6794959.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T6794959.java:12:5: compiler.err.cant.resolve.location: kindname.class, String, , , (compiler.misc.location: kindname.class, T6794959, null)\n+T6794959.java:14:5: compiler.err.cant.resolve.location: kindname.class, String, , , (compiler.misc.location: kindname.class, T6794959, null)\n","filename":"test\/langtools\/tools\/javac\/T6794959a.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6855236.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6855236 -proc:only T6855236.java\n","filename":"test\/langtools\/tools\/javac\/T6855236.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked T6881645.java\n","filename":"test\/langtools\/tools\/javac\/T6881645.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6977800.java\n","filename":"test\/langtools\/tools\/javac\/T6977800.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7120266.java\n","filename":"test\/langtools\/tools\/javac\/T7120266.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7126754.java\n","filename":"test\/langtools\/tools\/javac\/T7126754.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnoProcessor.java Bug.java Test3.java\n","filename":"test\/langtools\/tools\/javac\/T7142672\/Bug.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GenericsAndTWRCompileErrorTest.java\n","filename":"test\/langtools\/tools\/javac\/T7179353\/GenericsAndTWRCompileErrorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UncheckedWarningRegressionTest.java\n","filename":"test\/langtools\/tools\/javac\/T8016099\/UncheckedWarningRegressionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-UncheckedWarningRegressionTest.java:18:24: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), java.lang.Object[], T[]\n-UncheckedWarningRegressionTest.java:29:24: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), java.lang.Object[], T[]\n+UncheckedWarningRegressionTest.java:19:24: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), java.lang.Object[], T[]\n+UncheckedWarningRegressionTest.java:30:24: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), java.lang.Object[], T[]\n","filename":"test\/langtools\/tools\/javac\/T8016099\/UncheckedWarningRegressionTest.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CannotCompileRepeatedAnnoTest.java\n","filename":"test\/langtools\/tools\/javac\/T8020997\/CannotCompileRepeatedAnnoTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SkipLazyConstantCreationForMethodRefTest.java\n","filename":"test\/langtools\/tools\/javac\/T8023112\/SkipLazyConstantCreationForMethodRefTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NPETryTest.java\n","filename":"test\/langtools\/tools\/javac\/T8024398\/NPETryTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g:none DontGenerateLVTForGNoneOpTest.java\n","filename":"test\/langtools\/tools\/javac\/T8028504\/DontGenerateLVTForGNoneOpTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultipleUpperBoundsIncorporationTest.java\n","filename":"test\/langtools\/tools\/javac\/T8029002\/MultipleUpperBoundsIncorporationTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:serial -Werror WarnSerializableLambdaTestc.java\n","filename":"test\/langtools\/tools\/javac\/T8029102\/WarnSerializableLambdaTestc.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CompileErrorForValidBooleanExpTest.java\n","filename":"test\/langtools\/tools\/javac\/T8029179\/CompileErrorForValidBooleanExpTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CCEForFunctionalInterExtedingRawSuperInterTest.java\n","filename":"test\/langtools\/tools\/javac\/T8037947\/CCEForFunctionalInterExtedingRawSuperInterTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AccessTest.java\n","filename":"test\/langtools\/tools\/javac\/T8038975\/AccessTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FilterNonMembersToObtainFunctionDescriptorTest.java\n","filename":"test\/langtools\/tools\/javac\/T8047338\/FilterNonMembersToObtainFunctionDescriptorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceVariableInstantiatedUnexpectedlyTest.java\n","filename":"test\/langtools\/tools\/javac\/T8048543\/InferenceVariableInstantiatedUnexpectedlyTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T8071847.java\n","filename":"test\/langtools\/tools\/javac\/T8071847\/T8071847.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 IntersectionFunctionalButComponentsNotTest.java\n","filename":"test\/langtools\/tools\/javac\/T8148354\/IntersectionFunctionalButComponentsNotTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 IntersectionTypeBugTest.java\n","filename":"test\/langtools\/tools\/javac\/T8148354\/IntersectionTypeBugTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno.java AnnoProcessor.java ErrorRunningJavadocOnInnerClasses.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor AnnoProcessor ErrorRunningJavadocOnInnerClasses.java\n","filename":"test\/langtools\/tools\/javac\/T8151191\/ErrorRunningJavadocOnInnerClasses.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LookingForOperatorSymbolsAtWrongPlaceTest.java\n","filename":"test\/langtools\/tools\/javac\/T8161383\/LookingForOperatorSymbolsAtWrongPlaceTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters ParameterProcessor.java\n","filename":"test\/langtools\/tools\/javac\/T8170667\/ParameterProcessor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceRegressionTest01.java\n","filename":"test\/langtools\/tools\/javac\/T8175235\/InferenceRegressionTest01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MissingReturnConstraintTest.java\n","filename":"test\/langtools\/tools\/javac\/T8175794\/MissingReturnConstraintTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TimingOfMReferenceCheckingTest01.java\n","filename":"test\/langtools\/tools\/javac\/T8176714\/TimingOfMReferenceCheckingTest01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TimingOfMReferenceCheckingTest02.java\n","filename":"test\/langtools\/tools\/javac\/T8176714\/TimingOfMReferenceCheckingTest02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g MissingLNTEntryForBreakContinueTest.java\n","filename":"test\/langtools\/tools\/javac\/T8180141\/MissingLNTEntryForBreakContinueTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g MissingLNTEntryForFinalizerTest.java\n","filename":"test\/langtools\/tools\/javac\/T8180660\/MissingLNTEntryForFinalizerTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno.java AnnoProcessor.java\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-LambdaInAnnotationsCausesNPETest1.java:10:15: compiler.err.expression.not.allowable.as.annotation.value\n+LambdaInAnnotationsCausesNPETest1.java:11:15: compiler.err.expression.not.allowable.as.annotation.value\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno.java AnnoProcessor.java\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-LambdaInAnnotationsCausesNPETest2.java:10:15: compiler.err.expression.not.allowable.as.annotation.value\n+LambdaInAnnotationsCausesNPETest2.java:11:15: compiler.err.expression.not.allowable.as.annotation.value\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno2.java AnnoProcessor.java\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-LambdaInAnnotationsCausesNPETest3.java:10:51: compiler.err.expression.not.allowable.as.annotation.value\n+LambdaInAnnotationsCausesNPETest3.java:11:51: compiler.err.expression.not.allowable.as.annotation.value\n","filename":"test\/langtools\/tools\/javac\/T8181464\/LambdaInAnnotationsCausesNPETest3.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CorrectGenerationOfExConstraintsTest.java\n","filename":"test\/langtools\/tools\/javac\/T8182047\/CorrectGenerationOfExConstraintsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AddCheckForPartiallyInferredTypesTest.java\n","filename":"test\/langtools\/tools\/javac\/T8182649\/AddCheckForPartiallyInferredTypesTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrownTypeVarsAsRootsTest.java\n","filename":"test\/langtools\/tools\/javac\/T8196048\/ThrownTypeVarsAsRootsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g T8199910.java\n","filename":"test\/langtools\/tools\/javac\/T8199910.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NotionalInterfaceNotBeingInducedTest.java\n","filename":"test\/langtools\/tools\/javac\/T8202597\/NotionalInterfaceNotBeingInducedTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PreflowShouldVisitLambdaOrDiamondInsideLambdaTest.java\n","filename":"test\/langtools\/tools\/javac\/T8203277\/PreflowShouldVisitLambdaOrDiamondInsideLambdaTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SkipInferenceForNonFunctionalInterfTest.java\n","filename":"test\/langtools\/tools\/javac\/T8203486\/SkipInferenceForNonFunctionalInterfTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrownTypeVarTest.java\n","filename":"test\/langtools\/tools\/javac\/T8211450\/ThrownTypeVarTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NPETypeVarWithOuterBoundTest.java\n","filename":"test\/langtools\/tools\/javac\/T8215482\/NPETypeVarWithOuterBoundTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PreflowNotVisitingLambdaExpTest.java\n","filename":"test\/langtools\/tools\/javac\/T8222251\/PreflowNotVisitingLambdaExpTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConditionalAndPostfixOperator.java\n","filename":"test\/langtools\/tools\/javac\/T8222795\/ConditionalAndPostfixOperator.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8254557.java\n@@ -125,1 +126,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/T8254557\/T8254557.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8268592.java\n","filename":"test\/langtools\/tools\/javac\/T8268592\/T8268592.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8301025.java\n","filename":"test\/langtools\/tools\/javac\/T8301025.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8314423.java\n","filename":"test\/langtools\/tools\/javac\/T8314423.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T8314423.java:15:24: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unnamed.variables), 21, 22\n+T8314423.java:16:24: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unnamed.variables), 21, 22\n","filename":"test\/langtools\/tools\/javac\/T8314423.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8326204a.java\n","filename":"test\/langtools\/tools\/javac\/T8326204a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8328747.java\n","filename":"test\/langtools\/tools\/javac\/T8328747.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -encoding utf8 TextBlockLang.java\n","filename":"test\/langtools\/tools\/javac\/TextBlockLang.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrowNull.java\n","filename":"test\/langtools\/tools\/javac\/ThrowNull.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrowsIntersection_1.java\n","filename":"test\/langtools\/tools\/javac\/ThrowsIntersection_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ThrowsIntersection_2.java\n","filename":"test\/langtools\/tools\/javac\/ThrowsIntersection_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TryInInstanceInit.java\n","filename":"test\/langtools\/tools\/javac\/TryInInstanceInit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ResourceTypeVar.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/ResourceTypeVar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:try -Werror T7032633.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/T7032633.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7164542.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/T7164542.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7178324.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/T7178324.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TwrAndTypeVariables2Test.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrAndTypeVariables2Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TwrForVariable1.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrForVariable1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-TwrForVariable1.java:13:15: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.var.in.try.with.resources), 8, 9\n+TwrForVariable1.java:14:15: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.var.in.try.with.resources), 8, 9\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrForVariable1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:try -XDrawDiagnostics TwrLintUnderscore.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrLintUnderscore.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TwrMultiCatch.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrMultiCatch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WeirdTwr.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/WeirdTwr.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -cp . -processor TypeToString -proc:only TypeToString.java\n","filename":"test\/langtools\/tools\/javac\/TypeToString.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnreachableLoopCond.java\n","filename":"test\/langtools\/tools\/javac\/UnreachableLoopCond.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnreachableVar.java\n","filename":"test\/langtools\/tools\/javac\/UnreachableVar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UplevelFromAnonInSuperCall.java\n","filename":"test\/langtools\/tools\/javac\/UplevelFromAnonInSuperCall.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 VarDeclarationWithAssignment.java\n","filename":"test\/langtools\/tools\/javac\/VarDeclarationWithAssignment.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Verify.java\n","filename":"test\/langtools\/tools\/javac\/Verify.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 VerifyDA.java\n","filename":"test\/langtools\/tools\/javac\/VerifyDA.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T1.java T2.java T3.java\n","filename":"test\/langtools\/tools\/javac\/abstract\/T1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4717181a.java\n","filename":"test\/langtools\/tools\/javac\/abstract\/T4717181a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4717181b.java\n","filename":"test\/langtools\/tools\/javac\/abstract\/T4717181b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 U1.java U2.java U3.java\n","filename":"test\/langtools\/tools\/javac\/abstract\/U1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 a\/A.java b\/B.java c\/C.java Main.java\n","filename":"test\/langtools\/tools\/javac\/accessVirtualInner\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfind=lambda -Werror AnonymousInAnonymous.java\n","filename":"test\/langtools\/tools\/javac\/analyzer\/AnonymousInAnonymous.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CompilerAnnotationTest.java CompilerAnnotationTest2.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CompilerAnnotationTest2bad.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror CompilerAnnotationTest2bad.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/6214965\/T6214965.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6359949.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/6359949\/T6359949.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestAnnotation.java TestCore.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6365854.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 evolve\/TestAnnotation.java T6365854.java\n@@ -33,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6365854.java\n@@ -35,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestAnnotation.java TestCore.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/6365854\/T6365854.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 foo\/package-info.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/8145489\/T8145489.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 module-info.java test\/A.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/8254023\/T8254023.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8261088.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/8261088\/T8261088.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FinalStringInNested.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/FinalStringInNested.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalInnerReceiverTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/LocalInnerReceiverTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7043371.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/T7043371.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7073477.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/T7073477.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EraseClassInfoAnnotationValueTest.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -implicit:none Other.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/T8154270\/EraseClassInfoAnnotationValueTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnoWithClinit1.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/clinit\/AnnoWithClinit1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java C.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/default\/A.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SimpleProcessor.java\n@@ -11,1 +12,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/neg\/8171322\/TypeVariableAsAnnotationTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-TypeVariableAsAnnotationTest.java:10:33: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: Override, java.lang.annotation.Annotation)\n-TypeVariableAsAnnotationTest.java:10:55: compiler.err.cant.resolve.location: kindname.class, XXX, , , (compiler.misc.location: kindname.class, TypeVariableAsAnnotationTest<Override>, null)\n-2 errors\n\\ No newline at end of file\n+TypeVariableAsAnnotationTest.java:11:33: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: Override, java.lang.annotation.Annotation)\n+TypeVariableAsAnnotationTest.java:11:55: compiler.err.cant.resolve.location: kindname.class, XXX, , , (compiler.misc.location: kindname.class, TypeVariableAsAnnotationTest<Override>, null)\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/annotations\/neg\/8171322\/TypeVariableAsAnnotationTest.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonSubclassOnPkg.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/neg\/pkg\/package-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-package-info.java:11:20: compiler.err.expression.not.allowable.as.annotation.value\n+package-info.java:12:20: compiler.err.expression.not.allowable.as.annotation.value\n","filename":"test\/langtools\/tools\/javac\/annotations\/neg\/pkg\/package-info.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnotationMethods.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/AnnotationMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnoteElideBraces.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/AnnoteElideBraces.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassA.java ClassB.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassB.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/ClassA.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:dep-ann -Werror Dep.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Dep.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Enum1.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Enum1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Local.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Local.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Members.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Members.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NType.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/NType.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 OverrideCheck.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/OverrideCheck.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 OverrideOK.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/OverrideOK.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Parameter.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Parameter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 RightTarget.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/RightTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TrailingComma.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/TrailingComma.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Z1.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Z1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Z2.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Z2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Z3.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Z3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Z4.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/Z4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 package-info.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/package-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeUseTarget.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/8029017\/TypeUseTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassReaderDefault.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SeparateCompile.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/ClassReaderDefault.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefaultCasePresent.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/DefaultCasePresent.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefaultTarget.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/DefaultTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultiLevelRepeatableAnno.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/MultiLevelRepeatableAnno.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultipleAnnoMixedOrder.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/MultipleAnnoMixedOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NoTargetOnContainer.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/NoTargetOnContainer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NoTargetOnContainer2.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/NoTargetOnContainer2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SingleRepeatingAndContainer.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/SingleRepeatingAndContainer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WrongVersion.java\n@@ -7,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 WrongVersion.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/WrongVersion.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T.java TC.java\n@@ -7,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TCBroken.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/brokenTypeAnnoContainer\/BrokenTypeAnnoContainer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-BrokenTypeAnnoContainer.java:12:20: compiler.err.duplicate.annotation.invalid.repeated: T\n+BrokenTypeAnnoContainer.java:14:20: compiler.err.duplicate.annotation.invalid.repeated: T\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/brokenTypeAnnoContainer\/BrokenTypeAnnoContainer.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BasicSyntaxCombo.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/BasicSyntaxCombo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  DeprecatedAnnoCombo.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/DeprecatedAnnoCombo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  DocumentedAnnoCombo.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/DocumentedAnnoCombo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InheritedAnnoCombo.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/InheritedAnnoCombo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  expectedFiles\/ExpectedBase.java expectedFiles\/ExpectedContainer.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/ReflectionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  RetentionAnnoCombo.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/combo\/RetentionAnnoCombo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Processor.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor GeneratedInRepeating.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/generatedInRepeating\/GeneratedInRepeating.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualifiedName.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/8013180\/QualifiedName.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8047024_01.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -parameters T8047024.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/8047024\/T8047024.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -doe ErasureTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/ErasureTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InnerClass.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/InnerClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultipleTargets.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/MultipleTargets.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestTypeAnnotation.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/NestTypeAnnotation.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 14 NoTargetOnTypeParameterDeclaration.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NoTargetOnTypeParameterDeclaration.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/NoTargetOnTypeParameterDeclaration.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-NoTargetOnTypeParameterDeclaration.java:41:11: compiler.err.annotation.type.not.applicable.to.type: NoTargetOnTypeParameterDeclaration.A\n-NoTargetOnTypeParameterDeclaration.java:42:6: compiler.err.annotation.type.not.applicable.to.type: NoTargetOnTypeParameterDeclaration.A\n+NoTargetOnTypeParameterDeclaration.java:43:11: compiler.err.annotation.type.not.applicable.to.type: NoTargetOnTypeParameterDeclaration.A\n+NoTargetOnTypeParameterDeclaration.java:44:6: compiler.err.annotation.type.not.applicable.to.type: NoTargetOnTypeParameterDeclaration.A\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/NoTargetOnTypeParameterDeclaration.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked RichFormatterWithAnnotationsTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/RichFormatterWithAnnotationsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetTypes.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/TargetTypes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestAnonInnerInstance1.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/TestAnonInnerInstance1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeParameterTarget.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/TypeParameterTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeUseTarget.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/TypeUseTarget.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Scopes.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/attribution\/Scopes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDdeduplicateLambdas=false InstanceInitializer.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/InstanceInitializer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDdeduplicateLambdas=false StaticInitializer.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/StaticInitializer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnotationVersion.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/AnnotationVersion.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CantAnnotateStaticClass.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/CantAnnotateStaticClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -doe CheckForDeclAnnoNPE.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/CheckForDeclAnnoNPE.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8008751.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/T8008751.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8009360.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/T8009360.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8011722.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/T8011722.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8020715.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/T8020715.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeAndField.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/TypeAndField.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeVariable.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/TypeVariable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeVariableCycleTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/TypeVariableCycleTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Nesting.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/common\/receiver\/Nesting.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AllLocations.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/AllLocations.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnonymousClass.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/AnonymousClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BasicTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/BasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassExtends.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/ClassExtends.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/ClassParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConstructorTypeArgs.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/ConstructorTypeArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExceptionParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/ExceptionParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Expressions.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Expressions.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Fields.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Fields.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Lambda.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Lambda.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalVariables.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/LocalVariables.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReturnType.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/MethodReturnType.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodTypeArgs.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/MethodTypeArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodTypeParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/MethodTypeParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultiCatch.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/MultiCatch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedTypes.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/NestedTypes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Parameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Parameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Receivers.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Receivers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ResourceVariables.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/ResourceVariables.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Throws.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Throws.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TopLevelBlocks.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/TopLevelBlocks.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeCasts.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/TypeCasts.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/TypeParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Varargs.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Varargs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Wildcards.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/newlocations\/Wildcards.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PackageProcessor.java\n@@ -56,0 +57,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -cp . -processor PackageProcessor mypackage\/Anno.java mypackage\/MyClass.java mypackage\/package-info.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/packageanno\/PackageProcessor.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeAnnotationPositionProcessor.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TypeAnnotationPositionProcessor TypeAnnotationPositionTest.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/position\/TypeAnnotationPositionTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java ClassExtends.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/ClassExtends.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java ClassTypeParam.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/ClassTypeParam.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java ConstructorInvocationTypeArgument.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/ConstructorInvocationTypeArgument.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java Constructors.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/Constructors.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java ExceptionParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/ExceptionParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java Fields.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/Fields.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java FromSpecification.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/FromSpecification.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java Initializers.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/Initializers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java Lambda.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/Lambda.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodInvocationTypeArgument.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodInvocationTypeArgument.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodParameters.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodParameters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodReceivers.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodReceivers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodReturns.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodReturns.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodThrows.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodThrows.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MethodTypeParam.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MethodTypeParam.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java MultiCatch.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/MultiCatch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java NestedTypes.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/NestedTypes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java NewObjects.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/NewObjects.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java RepeatingTypeAnnotations.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/RepeatingTypeAnnotations.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java ResourceVariable.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/ResourceVariable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java TypeCasts.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/TypeCasts.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g Driver.java ReferenceInfoUtil.java TypeTests.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/TypeTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test1.java\n@@ -36,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test2.java\n","filename":"test\/langtools\/tools\/javac\/api\/6400303\/T6400303.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6411310.java\n","filename":"test\/langtools\/tools\/javac\/api\/6411310\/T6411310.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6411333.java\n","filename":"test\/langtools\/tools\/javac\/api\/6411333\/T6411333.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6418694.java\n","filename":"test\/langtools\/tools\/javac\/api\/6418694\/T6418694.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:all T6421111.java\n","filename":"test\/langtools\/tools\/javac\/api\/6421111\/T6421111.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6421756.java\n","filename":"test\/langtools\/tools\/javac\/api\/6421756\/T6421756.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6423003.java\n","filename":"test\/langtools\/tools\/javac\/api\/6423003\/T6423003.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6431257.java package-info.java\n","filename":"test\/langtools\/tools\/javac\/api\/6431257\/T6431257.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6437349.java\n","filename":"test\/langtools\/tools\/javac\/api\/6437349\/T6437349.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6437999.java\n","filename":"test\/langtools\/tools\/javac\/api\/6437999\/T6437999.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6440333.java\n","filename":"test\/langtools\/tools\/javac\/api\/6440333\/T6440333.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6440528.java\n","filename":"test\/langtools\/tools\/javac\/api\/6440528\/T6440528.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6452876.java\n","filename":"test\/langtools\/tools\/javac\/api\/6452876\/T6452876.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6468404.java\n","filename":"test\/langtools\/tools\/javac\/api\/6468404\/T6468404.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Main.java\n","filename":"test\/langtools\/tools\/javac\/api\/6471599\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6557752.java\n","filename":"test\/langtools\/tools\/javac\/api\/6557752\/T6557752.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -encoding utf-8 T6306137.java\n","filename":"test\/langtools\/tools\/javac\/api\/T6306137.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestEvalExpression.java evalexpr\/ByteArrayClassLoader.java  evalexpr\/CompileFromString.java  evalexpr\/MemoryFileManager.java\n","filename":"test\/langtools\/tools\/javac\/api\/TestEvalExpression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestGetTree.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetTree -proc:only TestGetTree.java\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetTree.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestOperators -proc:only TestOperators.java\n","filename":"test\/langtools\/tools\/javac\/api\/TestOperators.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/api\/guide\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T1.java T3.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T2.java\n","filename":"test\/langtools\/tools\/javac\/binaryCompat\/T1.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BoxedForeach.java\n","filename":"test\/langtools\/tools\/javac\/boxing\/BoxedForeach.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualBoxedPostOp.java\n","filename":"test\/langtools\/tools\/javac\/boxing\/QualBoxedPostOp.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualBoxedPostOp2.java\n","filename":"test\/langtools\/tools\/javac\/boxing\/QualBoxedPostOp2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 QualBoxedPostOp3.java QualBoxedPostOp3Parent.java\n","filename":"test\/langtools\/tools\/javac\/boxing\/QualBoxedPostOp3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6369051.java\n","filename":"test\/langtools\/tools\/javac\/boxing\/T6369051.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror Capture1.java\n","filename":"test\/langtools\/tools\/javac\/capture\/Capture1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Capture3.java\n","filename":"test\/langtools\/tools\/javac\/capture\/Capture3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Capture5.java\n","filename":"test\/langtools\/tools\/javac\/capture\/Capture5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked T4916620.java\n","filename":"test\/langtools\/tools\/javac\/cast\/4916620\/T4916620.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T4916620.java:17:33: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), T4916620.BB<compiler.misc.type.captureof: 1, ? extends java.lang.Number,compiler.misc.type.captureof: 2, ? super java.lang.Integer>, T4916620.BD<java.lang.Number>\n+T4916620.java:18:33: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), T4916620.BB<compiler.misc.type.captureof: 1, ? extends java.lang.Number,compiler.misc.type.captureof: 2, ? super java.lang.Integer>, T4916620.BD<java.lang.Number>\n","filename":"test\/langtools\/tools\/javac\/cast\/4916620\/T4916620.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T5034609.java\n","filename":"test\/langtools\/tools\/javac\/cast\/5034609\/T5034609.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:unchecked T5043020.java\n","filename":"test\/langtools\/tools\/javac\/cast\/5043020\/T5043020.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T5065215.java\n","filename":"test\/langtools\/tools\/javac\/cast\/5065215\/T5065215.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T6211853.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6211853\/T6211853.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6219964.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6219964\/T6219964.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T6256789.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6256789\/T6256789.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6270087.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6270087\/T6270087.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T6286112.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6286112\/T6286112.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6295056.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6295056\/T6295056.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T6295056.java:13:29: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), T6295056.Foo, T6295056.Bar<java.lang.Object>\n+T6295056.java:14:29: compiler.warn.prob.found.req: (compiler.misc.unchecked.cast.to.type), T6295056.Foo, T6295056.Bar<java.lang.Object>\n","filename":"test\/langtools\/tools\/javac\/cast\/6295056\/T6295056.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T6302214.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6302214\/T6302214.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror T6302214a.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6302214\/T6302214a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6358534.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6358534\/T6358534.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6507317.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6507317\/T6507317.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6548436a.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6548436\/T6548436a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6548436b.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6548436\/T6548436b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6548436c.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6548436\/T6548436c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6558559a.java -Xlint:unchecked -Werror\n","filename":"test\/langtools\/tools\/javac\/cast\/6558559\/T6558559a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6558559b.java -Xlint:unchecked -Werror\n","filename":"test\/langtools\/tools\/javac\/cast\/6558559\/T6558559b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6569057.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6569057\/T6569057.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6586091.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6586091\/T6586091.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6932571a.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6932571\/T6932571a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6932571b.java\n","filename":"test\/langtools\/tools\/javac\/cast\/6932571\/T6932571b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7005095pos.java\n","filename":"test\/langtools\/tools\/javac\/cast\/7005095\/T7005095pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror T654170.java\n","filename":"test\/langtools\/tools\/javac\/cast\/forum\/T654170.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -processor ModelChecker Model01.java\n","filename":"test\/langtools\/tools\/javac\/cast\/intersection\/model\/Model01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SyntheticClasses.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/InnerClasses\/SyntheticClasses.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 HasBrokenConstantValue.jcod\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/ConstantValue\/BrokenConstantValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-BrokenConstantValue.java:7:21: compiler.err.cant.access: HasBrokenConstantValue, (compiler.misc.bad.class.file.header: HasBrokenConstantValue.class, (compiler.misc.bad.constant.value.type: java.lang.Object))\n+BrokenConstantValue.java:8:21: compiler.err.cant.access: HasBrokenConstantValue, (compiler.misc.bad.class.file.header: HasBrokenConstantValue.class, (compiler.misc.bad.constant.value.type: java.lang.Object))\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/ConstantValue\/BrokenConstantValue.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g T8050993.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/T8050993.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g LocalVariableTableTest.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LocalVariableTable\/LocalVariableTableTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g LocalVariableTypeTableTest.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LocalVariableTable\/LocalVariableTypeTableTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g:none NoSourceFileAttribute.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/NoSourceFileAttribute.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,3 +35,2 @@\n- * @compile --enable-preview --source ${jdk.version} --target ${jdk.version}\n- *          SyntheticTestDriver.java\n- *          ..\/lib\/TestResult.java ..\/lib\/TestBase.java\n+ * @compile --enable-preview --source ${jdk.version} --target ${jdk.version} SyntheticTestDriver.java ..\/lib\/TestResult.java ..\/lib\/TestBase.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --enable-preview --source ${jdk.version} --target ${jdk.version} SyntheticTestDriver.java ..\/lib\/TestResult.java ..\/lib\/TestBase.java\n@@ -39,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --source 14 -target 14 -XDdeduplicateLambdas=false BridgeMethodsForLambdaTargetRelease14Test.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/BridgeMethodsForLambdaTargetRelease14Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDdeduplicateLambdas=false BridgeMethodsForLambdaTest.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/BridgeMethodsForLambdaTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xpkginfo:always package_info_test\/package-info.java\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/PackageInfoTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test1.jcod\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test2.jcod\n@@ -35,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test3.jcod\n@@ -36,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test4.jcod\n@@ -37,0 +41,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test5.jcod\n","filename":"test\/langtools\/tools\/javac\/classfiles\/badClassfiles\/AssertionsReadingClassfilesTest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BrokenEnclosingClass.java UnrelatedClass.jcod Enclosing$1.jcod\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor BrokenEnclosingClass BrokenEnclosingClass.java\n","filename":"test\/langtools\/tools\/javac\/classreader\/8215407\/BrokenEnclosingClass.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CharImmediateValue.java\n","filename":"test\/langtools\/tools\/javac\/code\/CharImmediateValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --debug=completionDeps -Xdoclint DepsAndDocLint.java\n","filename":"test\/langtools\/tools\/javac\/completionDeps\/DepsAndDocLint.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Conditional.java\n","filename":"test\/langtools\/tools\/javac\/conditional\/Conditional.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g:none ConditionalWithFinalStrings.java\n","filename":"test\/langtools\/tools\/javac\/conditional\/ConditionalWithFinalStrings.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CrossPackageImplA.java CrossPackageImplB.java\n","filename":"test\/langtools\/tools\/javac\/crossPackageImpl\/CrossPackageImplA.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,6 +1,6 @@\n-DanglingDocCommentsClass.java:10:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass.java:13:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass.java:14:8: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass.java:14:69: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass.java:15:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass.java:19:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:11:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:14:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:15:8: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:15:69: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:16:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass.java:20:5: compiler.warn.dangling.doc.comment\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass.enabled.out","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:dangling-doc-comments DanglingDocCommentsClass.java\n@@ -48,1 +49,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,6 +1,6 @@\n-DanglingDocCommentsClass_Line.java:11:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Line.java:15:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Line.java:17:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Line.java:19:9: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Line.java:21:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Line.java:26:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:12:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:16:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:18:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:20:9: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:22:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Line.java:27:5: compiler.warn.dangling.doc.comment\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass_Line.enabled.out","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:dangling-doc-comments DanglingDocCommentsClass_Line.java\n@@ -56,1 +57,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass_Line.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-DanglingDocCommentsClass_Mixed.java:13:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Mixed.java:17:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsClass_Mixed.java:21:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Mixed.java:14:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Mixed.java:18:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsClass_Mixed.java:22:5: compiler.warn.dangling.doc.comment\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass_Mixed.enabled.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:dangling-doc-comments DanglingDocCommentsClass_Mixed.java\n@@ -24,1 +25,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsClass_Mixed.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,7 +1,7 @@\n-DanglingDocCommentsEnum.java:10:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:13:1: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:14:8: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:14:67: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:16:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:22:5: compiler.warn.dangling.doc.comment\n-DanglingDocCommentsEnum.java:28:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:11:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:14:1: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:15:8: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:15:67: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:17:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:23:5: compiler.warn.dangling.doc.comment\n+DanglingDocCommentsEnum.java:29:5: compiler.warn.dangling.doc.comment\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsEnum.enabled.out","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:dangling-doc-comments DanglingDocCommentsEnum.java\n@@ -39,1 +40,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/DanglingDocCommentsEnum.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CannotChangeAssertionsStateAfterInitialized.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/CannotChangeAssertionsStateAfterInitialized.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/Foo.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassReaderTest.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/ClassReaderTest\/ClassReaderTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos02.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos04.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos04.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos05.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos05.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos06.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos06.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos07.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos07.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos08.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos10.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos11.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos12.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos12.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos13.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos13.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos14.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos14.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos15.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos15.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos16.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/Pos16.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Clinit.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CrossCompile.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/crossCompile\/CrossCompile.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  pkg1\/A.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Separate.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/separate\/Separate.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDallowStaticInterfaceMethods Static01.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/Static01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:-options StaticInvokeQualified.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeQualified.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:-options StaticInvokeSimple.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeSimple.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDallowStaticInterfaceMethods StaticImport1.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/import\/StaticImport1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestDirectSuperInterfaceInvoke.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/super\/TestDirectSuperInterfaceInvoke.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DeprecatedDocComment2.java\n","filename":"test\/langtools\/tools\/javac\/depDocComment\/DeprecatedDocComment.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-DeprecatedDocComment.java:27:28: compiler.warn.has.been.deprecated: deprecatedTest1(), DeprecatedDocComment2\n-DeprecatedDocComment.java:31:28: compiler.warn.has.been.deprecated: deprecatedTest5(), DeprecatedDocComment2\n-DeprecatedDocComment.java:32:28: compiler.warn.has.been.deprecated: deprecatedTest6(), DeprecatedDocComment2\n+DeprecatedDocComment.java:28:28: compiler.warn.has.been.deprecated: deprecatedTest1(), DeprecatedDocComment2\n+DeprecatedDocComment.java:32:28: compiler.warn.has.been.deprecated: deprecatedTest5(), DeprecatedDocComment2\n+DeprecatedDocComment.java:33:28: compiler.warn.has.been.deprecated: deprecatedTest6(), DeprecatedDocComment2\n","filename":"test\/langtools\/tools\/javac\/depDocComment\/DeprecatedDocComment.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:-dangling-doc-comments -Werror DeprecatedDocComment3.java\n","filename":"test\/langtools\/tools\/javac\/depDocComment\/DeprecatedDocComment3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:-dep-ann -Werror SuppressDepAnnWithSwitchTest.java\n","filename":"test\/langtools\/tools\/javac\/depDocComment\/SuppressDepAnnWithSwitchTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DiagnosticRewriterTest3.java\n","filename":"test\/langtools\/tools\/javac\/diags\/DiagnosticRewriterTest3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xdoclint:all\/public ImplicitHeadingsTest.java\n","filename":"test\/langtools\/tools\/javac\/doclint\/ImplicitHeadingsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xdoclint -Xprefer:source ImplicitSourceTest.java\n","filename":"test\/langtools\/tools\/javac\/doclint\/implicitSource\/ImplicitSourceTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MDPrinter.java\n","filename":"test\/langtools\/tools\/javac\/doctree\/MDPrinter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ReferenceTest -proc:only ReferenceTest.java\n","filename":"test\/langtools\/tools\/javac\/doctree\/ReferenceTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ..\/DocCommentTester.java DocCommentTreeApiTester.java\n","filename":"test\/langtools\/tools\/javac\/doctree\/dcapi\/DocCommentTreeApiTester.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6350057 -proc:only TestEnum.java\n","filename":"test\/langtools\/tools\/javac\/enum\/6350057\/T6350057.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6424358 -proc:only T6424358.java\n","filename":"test\/langtools\/tools\/javac\/enum\/6424358\/T6424358.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Def.java\n","filename":"test\/langtools\/tools\/javac\/enum\/Def.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumInit.java\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumInit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumPrivateConstructor.java\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumPrivateConstructor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumSwitch1.java\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumSwitch1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumSwitch3.java\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumSwitch3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalEnum.java\n","filename":"test\/langtools\/tools\/javac\/enum\/LocalEnum.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-LocalEnum.java:12:9: compiler.err.local.enum\n+LocalEnum.java:13:9: compiler.err.local.enum\n","filename":"test\/langtools\/tools\/javac\/enum\/LocalEnum.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedEnum.java\n","filename":"test\/langtools\/tools\/javac\/enum\/NestedEnum.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-NestedEnum.java:13:9: compiler.err.static.declaration.not.allowed.in.inner.classes\n+NestedEnum.java:14:9: compiler.err.static.declaration.not.allowed.in.inner.classes\n","filename":"test\/langtools\/tools\/javac\/enum\/NestedEnum.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5075242.java\n","filename":"test\/langtools\/tools\/javac\/enum\/T5075242.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5081785.java\n","filename":"test\/langtools\/tools\/javac\/enum\/T5081785.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-T5081785.java:30:9: compiler.err.static.declaration.not.allowed.in.inner.classes\n-T5081785.java:13:13: compiler.err.static.declaration.not.allowed.in.inner.classes\n-T5081785.java:20:27: compiler.err.static.declaration.not.allowed.in.inner.classes\n-T5081785.java:25:31: compiler.err.static.declaration.not.allowed.in.inner.classes\n+T5081785.java:31:9: compiler.err.static.declaration.not.allowed.in.inner.classes\n+T5081785.java:14:13: compiler.err.static.declaration.not.allowed.in.inner.classes\n+T5081785.java:21:27: compiler.err.static.declaration.not.allowed.in.inner.classes\n+T5081785.java:26:31: compiler.err.static.declaration.not.allowed.in.inner.classes\n","filename":"test\/langtools\/tools\/javac\/enum\/T5081785.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6509042.java\n","filename":"test\/langtools\/tools\/javac\/enum\/T6509042.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6675483.java\n","filename":"test\/langtools\/tools\/javac\/enum\/T6675483.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6509042.java\n","filename":"test\/langtools\/tools\/javac\/enum\/T6724345.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TrailingComma.java\n","filename":"test\/langtools\/tools\/javac\/enum\/TrailingComma.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UserValue.java\n","filename":"test\/langtools\/tools\/javac\/enum\/UserValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumSwitch.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Color2.java\n","filename":"test\/langtools\/tools\/javac\/enum\/enumSwitch\/EnumSwitch.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Base.java NonDirectSuper.java\n","filename":"test\/langtools\/tools\/javac\/expression\/_super\/NonDirectSuper\/NonDirectSuper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FalseCycle.java\n","filename":"test\/langtools\/tools\/javac\/falseCycle\/FalseCycle.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -sourcepath \/ T8150475.java\n","filename":"test\/langtools\/tools\/javac\/file\/T8150475.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -XDignore.symbol.file T6836682.java Utils.java\n","filename":"test\/langtools\/tools\/javac\/file\/zip\/T6836682.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -XDignore.symbol.file T6865530.java\n","filename":"test\/langtools\/tools\/javac\/file\/zip\/T6865530.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaArgumentsTest.java\n","filename":"test\/langtools\/tools\/javac\/flow\/T8042741\/LambdaArgumentsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java PositionTest.java\n","filename":"test\/langtools\/tools\/javac\/flow\/T8042741\/PositionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8062747.java\n","filename":"test\/langtools\/tools\/javac\/flow\/T8062747.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7139681pos.java\n","filename":"test\/langtools\/tools\/javac\/foreach\/7139681\/T7139681pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExprTypeIsTypeVariableTest.java\n","filename":"test\/langtools\/tools\/javac\/foreach\/ExprTypeIsTypeVariableTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GenericIterator.java\n","filename":"test\/langtools\/tools\/javac\/foreach\/GenericIterator.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StaticBlock.java\n","filename":"test\/langtools\/tools\/javac\/foreach\/StaticBlock.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InterfaceCast1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/4453032\/InterfaceCast1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5066774.java\n","filename":"test\/langtools\/tools\/javac\/generics\/5066774\/T5066774.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5086027pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/5086027\/T5086027pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6182950c.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6182950\/T6182950c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Method.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6192945\/Method.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6192945.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6192945\/T6192945.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6207386\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6213818.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6213818\/T6213818.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6218229.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6218229\/T6218229.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6227936.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6227936\/T6227936.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6268476.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6268476\/T6268476.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6292765.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6292765\/T6292765.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6294779a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6294779\/T6294779a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6294779b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6294779\/T6294779b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6332204.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6332204\/T6332204.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6346876.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6332204\/T6346876.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 a\/AbstractFoo.java a\/Bar.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6356636.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6356636\/T6356636.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PlainPlanarVector.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6372782\/T6372782.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6476118d.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6476118\/T6476118d.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6495506\/T6495506.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T6495506.java:12:28: compiler.err.report.access: a.A.P, private, a.A\n+T6495506.java:13:28: compiler.err.report.access: a.A.P, private, a.A\n","filename":"test\/langtools\/tools\/javac\/generics\/6495506\/T6495506.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6729401.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6729401\/T6729401.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6956758pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6956758\/T6956758pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6987475pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/6987475\/T6987475pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AccessibilityCheck01.java\n","filename":"test\/langtools\/tools\/javac\/generics\/7007615\/acc1\/AccessibilityCheck01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7020657pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/7020657\/T7020657pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7034019a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/7034019\/T7034019a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7034019b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/7034019\/T7034019b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7041019.java\n","filename":"test\/langtools\/tools\/javac\/generics\/7034511\/T7041019.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 B.java T8004094.java\n","filename":"test\/langtools\/tools\/javac\/generics\/8004094\/T8004094.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ArrayClone.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ArrayClone.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ArrayTypearg.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ArrayTypearg.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BridgeClash.java\n","filename":"test\/langtools\/tools\/javac\/generics\/BridgeClash.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BridgeOrder.java\n","filename":"test\/langtools\/tools\/javac\/generics\/BridgeOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Casting.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Casting.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Casting2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Casting2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Casting3.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Casting3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:unchecked  Casting4.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Casting4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Casting5.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Casting5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Conditional.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Conditional.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Covar2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Covar2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Crash01.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Crash01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Crash02.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Crash02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  CyclicInheritance3.java\n","filename":"test\/langtools\/tools\/javac\/generics\/CyclicInheritance3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  CyclicInheritance5.java\n","filename":"test\/langtools\/tools\/javac\/generics\/CyclicInheritance5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ExtendedRaw1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ExtendedRaw1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ExtendedRaw2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ExtendedRaw2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ExtendedRaw3.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ExtendedRaw3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ExtendedRaw4.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ExtendedRaw4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  FinalBridge.java\n","filename":"test\/langtools\/tools\/javac\/generics\/FinalBridge.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  GenericAnonCtor.java\n","filename":"test\/langtools\/tools\/javac\/generics\/GenericAnonCtor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  GenericMerge.java\n","filename":"test\/langtools\/tools\/javac\/generics\/GenericMerge.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  GenericOverride.java\n","filename":"test\/langtools\/tools\/javac\/generics\/GenericOverride.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  GetClass2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/GetClass2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InheritanceConflict2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/InheritanceConflict2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InnerInterface1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/InnerInterface1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InnerInterface2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/InnerInterface2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  InstanceOf1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/InstanceOf1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  LoadOrder.java\n","filename":"test\/langtools\/tools\/javac\/generics\/LoadOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LowerBoundBottomTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/LowerBoundBottomTypeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  MissingBridge.java\n","filename":"test\/langtools\/tools\/javac\/generics\/MissingBridge.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  MissingCast.java\n","filename":"test\/langtools\/tools\/javac\/generics\/MissingCast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  MissingCast2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/MissingCast2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  MultipleInheritance.java\n","filename":"test\/langtools\/tools\/javac\/generics\/MultipleInheritance.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NameOrder.java\n","filename":"test\/langtools\/tools\/javac\/generics\/NameOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ParenVerify.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ParenVerify.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  PermuteBound.java\n","filename":"test\/langtools\/tools\/javac\/generics\/PermuteBound.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  PrimitiveClass.java\n","filename":"test\/langtools\/tools\/javac\/generics\/PrimitiveClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  RawClient.java\n","filename":"test\/langtools\/tools\/javac\/generics\/RawClient.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  RelaxedArrays.java\n","filename":"test\/langtools\/tools\/javac\/generics\/RelaxedArrays.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ReverseOrder.java\n","filename":"test\/langtools\/tools\/javac\/generics\/ReverseOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror  SilentUnchecked.java\n","filename":"test\/langtools\/tools\/javac\/generics\/SilentUnchecked.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  SuperTypeargs.java\n","filename":"test\/langtools\/tools\/javac\/generics\/SuperTypeargs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4661029.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4661029.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4683314.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4683314.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4684378.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4684378.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4695415.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4695415.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4695847.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4695847.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4711570.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4711570.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4683314.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4711572.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4711694.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4711694.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4784207a.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4784207b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4784207a.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4683314.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T4784219.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T5094318.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T5094318.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6391995.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T6391995.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6507024.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T6507024.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6557954.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T6557954.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6660289.java\n","filename":"test\/langtools\/tools\/javac\/generics\/T6660289.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  TyparamStaticScope.java\n","filename":"test\/langtools\/tools\/javac\/generics\/TyparamStaticScope.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2       -Werror                  UncheckedConstructor.java\n","filename":"test\/langtools\/tools\/javac\/generics\/UncheckedConstructor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-UncheckedConstructor.java:18:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.util.Enumeration<java.lang.Object>, compiler.misc.anonymous.class: java.util.Enumeration, kindname.class, G3\n-UncheckedConstructor.java:18:16: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), compiler.misc.anonymous.class: java.util.Enumeration, java.util.Enumeration<java.lang.Object>\n+UncheckedConstructor.java:19:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.util.Enumeration<java.lang.Object>, compiler.misc.anonymous.class: java.util.Enumeration, kindname.class, G3\n+UncheckedConstructor.java:19:16: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), compiler.misc.anonymous.class: java.util.Enumeration, java.util.Enumeration<java.lang.Object>\n","filename":"test\/langtools\/tools\/javac\/generics\/UncheckedConstructor.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  UncheckedCovariance.java\n","filename":"test\/langtools\/tools\/javac\/generics\/UncheckedCovariance.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-UncheckedCovariance.java:17:13: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.override: f(), UncheckedCovariance.B, f(), UncheckedCovariance.A), UncheckedCovariance.Box, UncheckedCovariance.Box<java.lang.Integer>\n+UncheckedCovariance.java:18:13: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.override: f(), UncheckedCovariance.B, f(), UncheckedCovariance.A), UncheckedCovariance.Box, UncheckedCovariance.Box<java.lang.Integer>\n","filename":"test\/langtools\/tools\/javac\/generics\/UncheckedCovariance.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Varargs.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Varargs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Varargs2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/Varargs2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  WrongNew.java\n","filename":"test\/langtools\/tools\/javac\/generics\/WrongNew.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  A.java C.java D.java E.java\n","filename":"test\/langtools\/tools\/javac\/generics\/bridge1\/D.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  HArrayMethod.java HMember.java HMethod.java HMethodImpl.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  HArrayMethod.java\n","filename":"test\/langtools\/tools\/javac\/generics\/classreader\/HArrayMethod.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6996914b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/6996914\/T6996914b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -XDrawDiagnostics -XDfind=diamond T7002837.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/7002837\/T7002837.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:all DiamondAndInnerClassTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/7046778\/DiamondAndInnerClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ScopeCopyCanGetAlteredTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/ScopeCopyCanGetAlteredTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:rawtypes -Werror T6951833.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/T6951833.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Neg10.java -XDrawDiagnostics\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror T8078473.java -XDrawDiagnostics -XDfind=diamond\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/T8078473.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror T8078473_2.java -XDrawDiagnostics -XDfind=diamond\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/T8078473_2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedDiamondAllocationTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/NestedDiamondAllocationTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos01.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos02.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos03.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos03.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos04.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos04.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos06.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos06.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos07.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos07.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos08.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/pos\/Pos08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProtectedConstructorTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/protectedConstructor\/ProtectedConstructorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ForwardSeparateBound1.java ForwardSeparateBound2.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ForwardSeparateBound2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/forwardSeparateBound\/ForwardSeparateBound2.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  A.java B.java\n","filename":"test\/langtools\/tools\/javac\/generics\/genericAbstract\/A.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4942040.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/4942040\/T4942040.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5003431.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5003431\/T5003431.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5021635.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5021635\/T5021635.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6299211.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5021635\/T6299211.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5034571.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5034571\/T5034571.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5042462.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5042462\/T5042462.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 p1\/A1.java p2\/A2.java p1\/B.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5044646\/T5044646.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5049523.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5049523\/T5049523.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5070671.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5070671\/T5070671.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GenericsAndPackages.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5073060\/GenericsAndPackages.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5073060.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5073060\/T5073060.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5080917.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5080917\/T5080917.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/5081782\/Pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6215213.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6215213\/T6215213.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6240565.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6240565\/T6240565.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6273455.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6273455\/T6273455.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6278587.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6278587\/T6278587.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6278587Neg.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6278587\/T6278587Neg.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6456971.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6302954\/T6456971.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6476073.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6302954\/T6476073.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 X.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6302954\/X.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6365166.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6356673\/T6365166.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6356673\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Orig.java T6359106.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6359106\/T6359106.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NewTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6365166\/NewTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6369605a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6369605\/T6369605a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6369605b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6369605\/T6369605b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6468384.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6468384\/T6468384.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6569789.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6569789\/T6569789.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759c.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759d.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759d.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759e.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759e.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759f.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759f.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759g.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759g.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759h.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759h.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759i.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759i.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759j.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759j.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759k.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759k.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6650759l.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6650759\/T6650759l.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6938454a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6938454\/T6938454a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6938454b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6938454\/T6938454b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6995200.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6995200\/T6995200.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7154127.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/7154127\/T7154127.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8006692.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8006692\/T8006692.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8015505.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8015505\/T8015505.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8020149.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8020149\/T8020149.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8043725.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8043725\/T8043725.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8043926.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8043926\/T8043926.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8058511a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8058511\/T8058511a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8058511b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8058511\/T8058511b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8058511c.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8058511\/T8058511c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8067767.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8067767\/T8067767.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8077306.java\n@@ -104,1 +105,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8077306\/T8077306.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8078024.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8078024\/T8078024.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8130304.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8130304\/T8130304.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8141613.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8141613\/T8141613.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8147493a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8147493\/T8147493a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8147493b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8147493\/T8147493b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8152832.java\n@@ -59,1 +60,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8152832\/T8152832.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8156954.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8156954\/T8156954.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8157149b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8157149\/T8157149b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8157149c.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8157149\/T8157149c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --debug=dumpInferenceGraphsTo=. T8158355.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8158355\/T8158355.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8159680.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8159680\/T8159680.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8164399.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8164399\/T8164399.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8168134.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8168134\/T8168134.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8170410.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8170410\/T8170410.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8174249a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8174249\/T8174249a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8174249b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8174249\/T8174249b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8177097a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8177097\/T8177097a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8177097b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8177097\/T8177097b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8178150.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8178150\/T8178150.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8178427.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8178427\/T8178427.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaptureGLB1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureGLB1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaptureGLB2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureGLB2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaptureInDeclaredBound.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureInDeclaredBound.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaptureLowerBound.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBound.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaptureLowerBoundAssign.java\n@@ -41,1 +42,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBoundAssign.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CheckNoTimeoutException.java\n@@ -60,1 +61,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CheckNoTimeoutException.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EagerReturnTypeResolutionTesta.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/EagerReturnTypeResolution\/EagerReturnTypeResolutionTesta.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LowerBoundGLB.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/LowerBoundGLB.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedCapture.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/NestedCapture.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedWildcards.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/NestedWildcards.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6835428.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/T6835428.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7015715.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/T7015715.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveTypeInBoundForMethodRefTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/T8028503\/PrimitiveTypeInBoundForMethodRefTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CrashImplicitLambdaTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/T8044546\/CrashImplicitLambdaTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedInvocationsTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/T8044546\/NestedInvocationsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BadTest2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BadTest4.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/Test2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test3.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/Test3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test4.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/Test4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  J.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  K.java\n","filename":"test\/langtools\/tools\/javac\/generics\/parametricException\/J.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ParametricException.java\n","filename":"test\/langtools\/tools\/javac\/generics\/parametricException\/ParametricException.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Rare1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rare\/Rare1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Rare10.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rare\/Rare10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Rare11.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rare\/Rare11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Rare8.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rare\/Rare8.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Rare9.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rare\/Rare9.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7062745pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/7062745\/T7062745pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/7157798\/Test1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Test2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/7157798\/Test2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror AttributeSet.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/AttributeSet.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6846972.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/T6846972.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7148556.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/T7148556.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8008627.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/T8008627.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Warn1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/Warn1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Warn1.java:19:22: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.implement: get(java.lang.Class), AttributeSet1Impl, <T>get(java.lang.Class<T>), AttributeSet1), Attribute, Attribute<T>\n+Warn1.java:20:22: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.implement: get(java.lang.Class), AttributeSet1Impl, <T>get(java.lang.Class<T>), AttributeSet1), Attribute, Attribute<T>\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/Warn1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Warn2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/Warn2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Warn2.java:17:19: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.implement: foo(), C3, <T>foo(), I3), java.lang.Object, T\n+Warn2.java:18:19: compiler.warn.override.unchecked.ret: (compiler.misc.unchecked.implement: foo(), C3, <T>foo(), I3), java.lang.Object, T\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/Warn2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Hashtable.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  CharScanner.java\n@@ -33,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  RetroLexer.java\n","filename":"test\/langtools\/tools\/javac\/generics\/rawSeparate\/RetroLexer.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Bar.java\n","filename":"test\/langtools\/tools\/javac\/generics\/syntax\/6318240\/Bar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Foo.java\n","filename":"test\/langtools\/tools\/javac\/generics\/syntax\/6318240\/Foo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Basic.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typeargs\/Basic.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T4856983.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/4856983\/T4856983.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Method.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/5060485\/Method.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/5060485\/Pos.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5060485.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/5060485\/T5060485.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5061359b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/5061359\/T5061359b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8129214.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/8129214\/T8129214.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 AnnoTypeVarBounds.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/AnnoTypeVarBounds.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 IntersectionSubVar.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/IntersectionSubVar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6880344.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/T6880344.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7040883.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/T7040883.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7148242.java\n","filename":"test\/langtools\/tools\/javac\/generics\/typevars\/T7148242.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:unchecked T6320612.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6320612\/T6320612.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6330931.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6330931\/T6330931.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6437894\/T6437894.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T6437894.java:15:12: compiler.err.doesnt.exist: a.A\n+T6437894.java:16:12: compiler.err.doesnt.exist: a.A\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6437894\/T6437894.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6651719a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6651719\/T6651719a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6762569a.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6762569\/T6762569a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6886247_1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6886247\/T6886247_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BoundBug.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/BoundBug.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ContraArg.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/ContraArg.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 RefQueue.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 RefQueueBug.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/RefQueueBug.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SOEWhileProvingDisjointnessTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/SOEWhileProvingDisjointnessTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SubtypeCaptureLeak.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/SubtypeCaptureLeak.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T5097548.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/T5097548.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  T5097548b.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/T5097548b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6732484.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/T6732484.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8015101.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/T8015101.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8034147.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/T8034147.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  UnboundArray.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/UnboundArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CastTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/neg\/CastTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  AmbiguousCast2.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/AmbiguousCast2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -Werror BoundsCollision.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/BoundsCollision.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -Werror Capture.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/Capture.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -Werror CastTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/CastTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -Werror InstanceOf.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/InstanceOf.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  -Werror -Xlint:unchecked ParamCast.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/ParamCast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  RvalConversion.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/RvalConversion.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  UncheckedCast1.java\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/pos\/UncheckedCast1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis1.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis10.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis11.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis2.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis3.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis4.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis5.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis6.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis7.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis7.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WhichImplicitThis9.java\n","filename":"test\/langtools\/tools\/javac\/implicitThis\/WhichImplicitThis9.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 p1\/A.java p2\/A.java\n","filename":"test\/langtools\/tools\/javac\/importChecks\/ImportCanonicalSameName\/ImportCanonicalSameName.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ImportCanonicalSameName.java:13:12: compiler.err.import.requires.canonical: p2.A.I\n+ImportCanonicalSameName.java:14:12: compiler.err.import.requires.canonical: p2.A.I\n","filename":"test\/langtools\/tools\/javac\/importChecks\/ImportCanonicalSameName\/ImportCanonicalSameName.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ImportOfOwnClass.java\n","filename":"test\/langtools\/tools\/javac\/importChecks\/ImportOfOwnClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 ImportsObservable.java\n","filename":"test\/langtools\/tools\/javac\/importChecks\/ImportsObservable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ImportsObservable.java:9:8: compiler.err.doesnt.exist: javax\n+ImportsObservable.java:10:8: compiler.err.doesnt.exist: javax\n","filename":"test\/langtools\/tools\/javac\/importChecks\/ImportsObservable.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Foo.java\n","filename":"test\/langtools\/tools\/javac\/importContext\/anonPackage\/Foo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 foo\/Foo.java\n","filename":"test\/langtools\/tools\/javac\/importContext\/namedPackage\/Dummy.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/A.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ImportResolvedTooSoon.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/ImportResolvedTooSoon.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7101822A.java T7101822Z.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/T7101822A.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 C.java D.java Outer.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 C.java Outer.java D.java\n@@ -31,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java C.java Outer.java\n@@ -32,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java Outer.java C.java\n@@ -33,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Outer.java D.java C.java\n@@ -34,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Outer.java C.java D.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/T8075274\/Outer.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java C.java D.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java D.java C.java\n@@ -31,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java C.java B.java D.java\n@@ -32,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java C.java D.java B.java\n@@ -33,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java D.java B.java C.java\n@@ -34,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java D.java C.java B.java\n@@ -35,0 +41,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java A.java B.java C.java\n@@ -36,0 +43,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java A.java C.java B.java\n@@ -37,0 +45,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java B.java A.java C.java\n@@ -38,0 +47,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java B.java C.java A.java\n@@ -39,0 +49,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java C.java B.java A.java\n@@ -40,0 +51,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java C.java A.java B.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/T8133235\/A.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java C.java D.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java D.java C.java\n@@ -31,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java C.java B.java D.java\n@@ -32,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java C.java D.java B.java\n@@ -33,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java D.java B.java C.java\n@@ -34,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java D.java C.java B.java\n@@ -35,0 +41,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java A.java B.java C.java\n@@ -36,0 +43,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java A.java C.java B.java\n@@ -37,0 +45,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java B.java A.java C.java\n@@ -38,0 +47,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java B.java C.java A.java\n@@ -39,0 +49,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java C.java B.java A.java\n@@ -40,0 +51,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 D.java C.java A.java B.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/T8148131\/A.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeParamCycle.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/TypeParamCycle.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeParamCycle2.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/TypeParamCycle2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeParamCycle3.java\n","filename":"test\/langtools\/tools\/javac\/importscope\/TypeParamCycle3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java B.java\n","filename":"test\/langtools\/tools\/javac\/incompatibleNoninherited\/A.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DontMinimizeInfContextTest.java\n","filename":"test\/langtools\/tools\/javac\/inference_context_min\/DontMinimizeInfContextTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NonDeterminismTest.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NonDeterminismTest.java\n","filename":"test\/langtools\/tools\/javac\/inference_non_determinism\/NonDeterminismTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 com\/test\/Test.java com\/test\/Test$Test.java com\/test\/Test$Test$Test.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6397652.java\n","filename":"test\/langtools\/tools\/javac\/jvm\/6397652\/T6397652.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SAM.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java\n@@ -33,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 B.java\n@@ -34,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 C.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8012557\/PrivateLambdas.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8016081.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8016081\/T8016081.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8016177d.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8016177\/T8016177d.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8016177e.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8016177\/T8016177e.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8016177f.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8016177\/T8016177f.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8020804.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8020804\/T8020804.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8023389.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8023389\/T8023389.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CrashUsingReturningThisRefLambdaFromDefaultMetTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8024497\/CrashUsingReturningThisRefLambdaFromDefaultMetTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8051958.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8051958\/T8051958.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:rawtypes T8063054a.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8063054\/T8063054a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:rawtypes T8063054b.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8063054\/T8063054b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8073842.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8073842\/T8073842.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8142876.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8142876\/T8142876.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8148128.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8148128\/T8148128.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8168480.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8168480\/T8168480.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8169091.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8169091\/T8169091.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8210495.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/8210495\/T8210495.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CantFindSymbolImplicitLambdaAndDiamondTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/CantFindSymbolImplicitLambdaAndDiamondTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Conditional01.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Conditional01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Conditional02.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Conditional02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Conditional03.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Conditional03.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Conformance01.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Conformance01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Defender01.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Defender01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DisjunctiveTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/DisjunctiveTypeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DoubleStaticImport.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/DoubleStaticImport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EffectivelyFinalThrows.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/EffectivelyFinalThrows.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FunctionalInterfaceAnno02.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/FunctionalInterfaceAnno02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Intersection01.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/Intersection01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaCapture08.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaCapture08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv06.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv06.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv11.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv12.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv12.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv13.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv13.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv17.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv17.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:cast -Werror LambdaConv19.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv19.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv22.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv22.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv26.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv26.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaConv30.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv30.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr04.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr04.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr05.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr05.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr08.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr09.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr09.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr13.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr13.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaExpr20.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaExpr20.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaInterfaceStaticField.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaInterfaceStaticField.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaParameterNeedsNoInitTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaParameterNeedsNoInitTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaWithInterfaceSuper.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaWithInterfaceSuper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalBreakAndContinue.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LocalBreakAndContinue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g LocalVariableTable.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/LocalVariableTable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference02.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference07.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference07.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference08.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-MethodReference08.java:14:17: compiler.warn.raw.class.use: MethodReference08.Foo, MethodReference08.Foo<X>\n-MethodReference08.java:21:19: compiler.warn.raw.class.use: MethodReference08.Foo, MethodReference08.Foo<X>\n+MethodReference08.java:15:17: compiler.warn.raw.class.use: MethodReference08.Foo, MethodReference08.Foo<X>\n+MethodReference08.java:22:19: compiler.warn.raw.class.use: MethodReference08.Foo, MethodReference08.Foo<X>\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference08.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference10.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDuseProxy MethodReference13.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference13.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror MethodReference15.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference15.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference26.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference26.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReference57.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference57.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReferenceStaticNotAccessibleTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReferenceStaticNotAccessibleTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodReferenceVarargsTest.java\n@@ -40,1 +41,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReferenceVarargsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NakedThis.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/NakedThis.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedCapture01.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/NestedCapture01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedCapture02.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/NestedCapture02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedCapture03.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/NestedCapture03.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SerializableObjectMethods.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/SerializableObjectMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 a\/A.java SuperClassThisCapture.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/SuperClassThisCapture\/SuperClassThisCapture.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExplicitVSImplicitLambdaTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8025290\/ExplicitVSImplicitLambdaTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CrashMethodReferenceWithSiteTypeVarTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8025816\/CrashMethodReferenceWithSiteTypeVarTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8056014.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8056014.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8056984.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8056984.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NPEMethodReferenceAndGenericsTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8057800\/NPEMethodReferenceAndGenericsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8077605.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8077605.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/T8145051.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8145051.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8195598.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8195598.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8235564.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/T8235564.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType06.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType06.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType07.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType07.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType08.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType10.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType10.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType11.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType12.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType12.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType15.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType15.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType16.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType16.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType18.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType18.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType19.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType19.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDrawDiagnostics TargetType20.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType20.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType25.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType25.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType29.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType29.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType30.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType30.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType31.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType31.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType34.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType34.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType37.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType37.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType42.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType42.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType45.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType45.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType47.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType47.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType48.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType48.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType50.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType50.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType51.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType51.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType53.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType53.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType54.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType54.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType55.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType55.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType56.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType56.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType58.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType58.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType59.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType59.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType61.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType61.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType62.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType62.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType64.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType65.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType65.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType67.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType67.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType69.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType69.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType70.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType70.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType71.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType71.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType72.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType72.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType73.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType73.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType74.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType74.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType75.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType75.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TargetType76.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TargetType76.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TryWithLambdaFinal.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/TryWithLambdaFinal.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 VoidCompatibility.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/VoidCompatibility.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 XDdumpLambdaToMethodStats.java --debug=dumpLambdaToMethodStats\n","filename":"test\/langtools\/tools\/javac\/lambda\/XDdumpLambdaToMethodStats.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Main.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Use.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/badMemberRefBytecode\/TestBadMemberRefBytecode.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConsiderExceptionTVarsInStuckExprs.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/considerExceptionTVarInStuckExprs\/ConsiderExceptionTVarsInStuckExprs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest1.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/funcInterfaces\/LambdaTest1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest2_SAM1.java Helper.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/funcInterfaces\/LambdaTest2_SAM1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest2_SAM2.java Helper.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/funcInterfaces\/LambdaTest2_SAM2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest2_SAM3.java Helper.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/funcInterfaces\/LambdaTest2_SAM3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest1.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest3.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest4.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest5.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaTest6.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/LambdaTest6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SamConversion.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/lambdaExpression\/SamConversion.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BridgeMethod.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/BridgeMethod.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef1.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef3.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef4.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef5.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef5.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef6.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef7.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef7.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRef8.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRef8.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRefNewInnerInLambdaNPE2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRefNewInnerInLambdaNPE2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MethodRefStuck2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/MethodRefStuck2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProtectedInaccessibleMethodRefTest2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/ProtectedInaccessibleMethodRefTest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SamConversion.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/SamConversion.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TreeMakerParamsIsGoofy.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/TreeMakerParamsIsGoofy.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Foo.java\n@@ -29,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/separate\/Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8147546a.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/8147546\/T8147546a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8147546b.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/8147546\/T8147546b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8154180a.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/8154180\/T8154180a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfind=diamond DiamondFinder.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/DiamondFinder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferStrict.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/InferStrict.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferWeak.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/InferWeak.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedLambdaGenerics.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/NestedLambdaGenerics.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NestedLambdaNoGenerics.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/NestedLambdaNoGenerics.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8046685.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/T8046685.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8055984.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/T8055984.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8077247.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/T8077247.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8078093.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/T8078093.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest11.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest11.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest2.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest2b.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest2b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest3.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest4.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest4.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDrawDiagnostics InferenceTest6.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InferenceTest789.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/InferenceTest789.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  TypeInferenceComboTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/typeInference\/combo\/TypeInferenceComboTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DPrinter.java\n","filename":"test\/langtools\/tools\/javac\/lib\/DPrinter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ArrayDims1.java\n","filename":"test\/langtools\/tools\/javac\/limits\/ArrayDims1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ArrayDims3.java\n","filename":"test\/langtools\/tools\/javac\/limits\/ArrayDims3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/NestedClassConstructorArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/NestedClassMethodArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/StaticNestedClassConstructorArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/TopLevelClassConstructorArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/TopLevelClassMethodArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NumArgsTest.java\n","filename":"test\/langtools\/tools\/javac\/limits\/TopLevelClassStaticMethodArgs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConstantTypes.java\n@@ -99,1 +100,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/lvti\/ConstantTypes.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8191893.java\n","filename":"test\/langtools\/tools\/javac\/lvti\/T8191893.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8191959.java\n","filename":"test\/langtools\/tools\/javac\/lvti\/T8191959.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestBadArray.java\n","filename":"test\/langtools\/tools\/javac\/lvti\/TestBadArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 pkg\/var.java\n@@ -7,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/nested\/var\/A.java\n","filename":"test\/langtools\/tools\/javac\/lvti\/badTypeReference\/BadTypeReference.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-BadTypeReference.java:14:9: compiler.err.illegal.ref.to.restricted.type: var\n-BadTypeReference.java:15:21: compiler.err.illegal.ref.to.restricted.type: var\n+BadTypeReference.java:16:9: compiler.err.illegal.ref.to.restricted.type: var\n+BadTypeReference.java:17:21: compiler.err.illegal.ref.to.restricted.type: var\n","filename":"test\/langtools\/tools\/javac\/lvti\/badTypeReference\/BadTypeReference.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InvokeMH.java\n","filename":"test\/langtools\/tools\/javac\/meth\/InvokeMH.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:cast XlintWarn.java\n","filename":"test\/langtools\/tools\/javac\/meth\/XlintWarn.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java AbstractTest.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/4686148\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 p1\/A.java p1\/C.java p2\/B.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/4686811\/Tryit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T1.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T2.java\n@@ -33,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T3.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/4711056\/T1.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4279316a.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4279316a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4279316b.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4279316b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4279316c.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4279316c.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4279316d.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4279316d.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4528315.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4528315.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                  T4711325.java\n","filename":"test\/langtools\/tools\/javac\/miranda\/T4711325.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExtendCovariant1.java\n","filename":"test\/langtools\/tools\/javac\/mixedTarget\/ExtendCovariant1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                  ExtendCovariant2.java\n","filename":"test\/langtools\/tools\/javac\/mixedTarget\/ExtendCovariant2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NPEGetDirectivesTest.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NPEGetDirectivesTest NPEGetDirectivesTest.java\n","filename":"test\/langtools\/tools\/javac\/modules\/T8160454\/NPEGetDirectivesTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnnamedModuleUnnamedPackageTest.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor UnnamedModuleUnnamedPackageTest UnnamedModuleUnnamedPackageTest.java EmptyClass.java\n","filename":"test\/langtools\/tools\/javac\/modules\/T8161501\/UnnamedModuleUnnamedPackageTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 module-info.java\n","filename":"test\/langtools\/tools\/javac\/modules\/T8168854\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g SubTest.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/7005371\/T7005371.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8071291.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/8071291\/T8071291.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos03.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos03.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos06.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos06.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos07.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos07.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos08.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos08.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos08eff_final.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos08eff_final.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Pos09.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos09.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ModelChecker Model01.java\n","filename":"test\/langtools\/tools\/javac\/multicatch\/model\/ModelChecker.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 17 DontOptimizeOuterThis.java InnerClasses.java\n","filename":"test\/langtools\/tools\/javac\/optimizeOuterThis\/DontOptimizeOuterThis.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 OptimizeOuterThis.java InnerClasses.java\n@@ -38,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDoptimizeOuterThis=true --release 17 OptimizeOuterThis.java InnerClasses.java\n","filename":"test\/langtools\/tools\/javac\/optimizeOuterThis\/OptimizeOuterThis.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6900037.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -source 1.8 T6900037.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -source 1.8 -Xlint:-options T6900037.java\n","filename":"test\/langtools\/tools\/javac\/options\/T6900037.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xjcov T6949443.java\n","filename":"test\/langtools\/tools\/javac\/options\/T6949443.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xjcov XjcovUnionTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/options\/XjcovUnionTypeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ReleaseOption.java\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOption.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ReleaseOption.java:9:49: compiler.err.doesnt.exist: java.util.random\n+ReleaseOption.java:10:49: compiler.err.doesnt.exist: java.util.random\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOption.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-                    \"ReleaseOption.java:9:49: compiler.err.doesnt.exist: java.util.random\" + lineSep +\n+                    \"ReleaseOption.java:10:49: compiler.err.doesnt.exist: java.util.random\" + lineSep +\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOptionThroughAPI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4494762.java\n","filename":"test\/langtools\/tools\/javac\/overload\/T4494762.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T4723909.java\n","filename":"test\/langtools\/tools\/javac\/overload\/T4723909.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6776289.java\n","filename":"test\/langtools\/tools\/javac\/overload\/T6776289.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8176265.java\n","filename":"test\/langtools\/tools\/javac\/overload\/T8176265.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8014643.java\n","filename":"test\/langtools\/tools\/javac\/parser\/8014643\/T8014643.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8134007.java\n","filename":"test\/langtools\/tools\/javac\/parser\/8134007\/T8134007.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SingleCommaAnnotationValue.java\n","filename":"test\/langtools\/tools\/javac\/parser\/SingleCommaAnnotationValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Annotations.java\n@@ -36,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -J--enable-preview -processor Annotations -proc:only Annotations.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/Annotations.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BindingsInitializer.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsInitializer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BindingsTest1.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BreakAndLoops.java\n@@ -240,1 +241,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/BreakAndLoops.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CaseStructureTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/CaseStructureTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,1 +6,3 @@\n- * @compile --enable-preview --source ${jdk.version} CastConversionMatch.java *\/\n+ * @compile --enable-preview --source ${jdk.version} CastConversionMatch.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --enable-preview --source ${jdk.version} CastConversionMatch.java\n+ *\/\n","filename":"test\/langtools\/tools\/javac\/patterns\/CastConversionMatch.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-CastConversionMatch.java:11:26: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n+CastConversionMatch.java:13:26: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n","filename":"test\/langtools\/tools\/javac\/patterns\/CastConversionMatch.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ConditionalTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/ConditionalTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DeconstructionDesugaring.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/DeconstructionDesugaring.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EmptyRecordClass.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/EmptyRecordClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumTypeChanges.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumTypeChanges2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/EnumTypeChanges.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 20 EnumTypeChangesNonPreview.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumTypeChanges2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/EnumTypeChangesNonPreview.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExamplesFromProposal.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/ExamplesFromProposal.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GenericRecordDeconstructionPattern.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/GenericRecordDeconstructionPattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-InstanceofTotalPattern.java:19:37: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.pattern.matching.instanceof), 15, 16\n+InstanceofTotalPattern.java:20:37: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.pattern.matching.instanceof), 15, 16\n","filename":"test\/langtools\/tools\/javac\/patterns\/InstanceofTotalPattern-15.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-InstanceofTotalPattern.java:19:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unconditional.patterns.in.instanceof), 16, 21\n+InstanceofTotalPattern.java:20:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unconditional.patterns.in.instanceof), 16, 21\n","filename":"test\/langtools\/tools\/javac\/patterns\/InstanceofTotalPattern-16.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-InstanceofTotalPattern.java:19:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unconditional.patterns.in.instanceof), 20, 21\n+InstanceofTotalPattern.java:20:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unconditional.patterns.in.instanceof), 20, 21\n","filename":"test\/langtools\/tools\/javac\/patterns\/InstanceofTotalPattern-20.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InstanceofTotalPattern.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/InstanceofTotalPattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalVariableReuse.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/LocalVariableReuse.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g LocalVariableTable.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/LocalVariableTable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MatchExceptionLambdaExpression.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/MatchExceptionLambdaExpression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NewCaseStructureTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/NewCaseStructureTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NoUnnecessaryCast.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/NoUnnecessaryCast.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NullsInDeconstructionPatterns2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/NullsInDeconstructionPatterns2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PatternTypeTest2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternTypeTest2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PatternVariablesAreNonFinal2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreNonFinal2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveInstanceOfComboTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfComboTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveInstanceOfNumericValueTests.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfNumericValueTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveInstanceOfPatternOpWithRecordPatterns.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithRecordPatterns.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveInstanceOfPatternOpWithTopLevelPatterns.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithTopLevelPatterns.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitiveInstanceOfTypeComparisonOp.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfTypeComparisonOp.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 PrimitivePatternsSwitch.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ScopeResizeTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/ScopeResizeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SealedTypeChanges.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SealedTypeChanges2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/SealedTypeChanges.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -doe SimpleAndGuardPattern.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/SimpleAndGuardPattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SimpleDeconstructionPattern.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/SimpleDeconstructionPattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SimpleDeconstructionPattern.java:118:27: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.deconstruction.patterns), 20, 21\n+SimpleDeconstructionPattern.java:119:27: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.deconstruction.patterns), 20, 21\n","filename":"test\/langtools\/tools\/javac\/patterns\/SimpleDeconstructionPatternOld.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StablePatternDesugaring.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/StablePatternDesugaring.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchEnumConstants.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/SwitchEnumConstants.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8291657.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8291657.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8312229.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8312229.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8312560.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8312560.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8314226.java\n@@ -167,1 +168,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314226.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8317048.java\n@@ -88,1 +89,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8317048.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8320145.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8320145.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8326404.java\n@@ -157,1 +158,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8326404.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --enable-preview --source ${jdk.version} T8332463a.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8332463a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T8332463b.java\n@@ -31,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --enable-preview --source ${jdk.version} T8332463b.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8332463b.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDshould-stop.at=FLOW T8336781.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8336781.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UninitializedThisException.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/UninitializedThisException.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Unnamed.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/Unnamed.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:all -Werror --release 10 NoProfileAnnotationWarning.java\n","filename":"test\/langtools\/tools\/javac\/platform\/NoProfileAnnotationWarning.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 17 NonExportedSuperTypes.java\n@@ -32,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release ${jdk.version} NonExportedSuperTypes.java\n","filename":"test\/langtools\/tools\/javac\/platform\/NonExportedSuperTypes.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NonPublicAnnotations --release 8 NonPublicAnnotations.java\n","filename":"test\/langtools\/tools\/javac\/platform\/NonPublicAnnotations.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release ${jdk.version} --enable-preview ReleaseAndEnablePreview.java\n","filename":"test\/langtools\/tools\/javac\/platform\/ReleaseAndEnablePreview.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ReleaseModulesAndTypeElement --release 11 ReleaseModulesAndTypeElement.java\n","filename":"test\/langtools\/tools\/javac\/platform\/ReleaseModulesAndTypeElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -XDdev T6264029.java\n","filename":"test\/langtools\/tools\/javac\/positions\/T6264029.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T6264029.java:15:41: compiler.warn.unchecked.call.mbr.of.raw.type: T6264029A(K), T6264029A\n+T6264029.java:16:41: compiler.warn.unchecked.call.mbr.of.raw.type: T6264029A(K), T6264029A\n","filename":"test\/langtools\/tools\/javac\/positions\/T6264029.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDforcePreview --enable-preview -source ${jdk.version} Bar.java\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:none T6348193.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6348193\/T6348193.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6359313.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6359313 package-info.java Foo.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6359313\/T6359313.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProcFoo.java\n@@ -12,0 +13,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProcBar.java\n@@ -13,0 +15,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6365040.java\n@@ -14,0 +17,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2      -processor ProcFoo,ProcBar,T6365040  -proc:only T6365040.java\n@@ -15,0 +19,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2      -processor T6365040                  -proc:only T6365040.java\n@@ -16,0 +21,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2      -processor T6365040,NotThere,        -proc:only T6365040.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6365040\/T6365040.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6378728.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6378728\/T6378728.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6413690.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDfatalEnterError -verbose -processor T6413690 src\/Super.java TestMe.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6413690\/T6413690.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassProcessor.java package-info.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6499119\/ClassProcessor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6512707.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6512707 TestAnnotation.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6512707\/T6512707.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6634138.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6634138 Dummy.java\n","filename":"test\/langtools\/tools\/javac\/processing\/6634138\/T6634138.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor T8132446.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor T8132446.java\n","filename":"test\/langtools\/tools\/javac\/processing\/8132446\/T8132446.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor T8268575.java\n","filename":"test\/langtools\/tools\/javac\/processing\/8268575\/T8268575.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 package-info.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor ClassAnnotations.java\n","filename":"test\/langtools\/tools\/javac\/processing\/PackageInfo\/ClassAnnotations\/ClassAnnotations.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 package-info.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Processor Overwrite.java\n","filename":"test\/langtools\/tools\/javac\/processing\/PackageInfo\/Overwrite\/Overwrite.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestPreviewEnabled.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPreviewEnabled -proc:only -source ${jdk.version} -AExpectedPreview=false                  TestSourceVersion.java\n@@ -34,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPreviewEnabled -proc:only -source ${jdk.version} -AExpectedPreview=true  --enable-preview TestSourceVersion.java\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/TestPreviewEnabled.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestSourceVersion.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source 1.8 -AExpectedVersion=RELEASE_8 HelloWorld.java\n@@ -36,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source   8 -AExpectedVersion=RELEASE_8 HelloWorld.java\n@@ -37,0 +40,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source 1.9 -AExpectedVersion=RELEASE_9 HelloWorld.java\n@@ -38,0 +42,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source   9 -AExpectedVersion=RELEASE_9 HelloWorld.java\n@@ -39,0 +44,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source  10 -AExpectedVersion=RELEASE_10 HelloWorld.java\n@@ -40,0 +46,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source  11 -AExpectedVersion=RELEASE_11 HelloWorld.java\n@@ -41,0 +48,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestSourceVersion -proc:only -source  12 -AExpectedVersion=RELEASE_12 HelloWorld.java\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/TestSourceVersion.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 annot\/AnnotatedElementInfo.java annot\/MarkerAnnot.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestElementsAnnotatedWith.java\n@@ -36,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 InheritedAnnotation.java\n@@ -37,0 +40,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TpAnno.java\n@@ -38,0 +42,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Anno.java\n@@ -39,0 +44,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only SurfaceAnnotations.java\n@@ -40,0 +46,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only BuriedAnnotations.java\n@@ -41,0 +48,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only Part1.java Part2.java\n@@ -42,0 +50,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only C2.java\n@@ -43,0 +52,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only Foo.java\n@@ -44,0 +54,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only TypeParameterAnnotations.java\n@@ -45,0 +56,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only ParameterAnnotations.java\n@@ -46,0 +58,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only pkg\/package-info.java\n@@ -47,0 +60,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only mod\/quux\/package-info.java\n@@ -48,0 +62,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only mod\/quux\/Quux.java\n@@ -49,0 +64,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  mod\/quux\/Quux.java mod\/quux\/package-info.java\n@@ -50,0 +66,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementsAnnotatedWith -proc:only -AsingleModuleMode=true mod\/module-info.java\n@@ -52,0 +69,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Foo.java\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/round\/TestElementsAnnotatedWith.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -processor GenerateSuperInterfaceProcessor GenerateFunctionalInterface.java\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/StopOnInapplicableAnnotations\/GenerateFunctionalInterface.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestReturnCode.java\n@@ -12,0 +13,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestFatalityOfParseErrors.java\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestFatalityOfParseErrors.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestOptionSyntaxErrors.java\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestOptionSyntaxErrors.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestReturnCode.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                     -processor TestReturnCode -proc:only                                                                   Foo.java\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestReturnCode.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -encoding iso-8859-1 -processor TestFilerConstraints -proc:only TestFilerConstraints.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestFilerConstraints.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetResource -proc:only -Aphase=write TestGetResource.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetResource -proc:only -Aphase=read  TestGetResource.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestGetResource.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestInvalidRelativeNames.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestInvalidRelativeNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestLastRound.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestLastRound.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestPackageInfo.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPackageInfo -proc:only foo\/bar\/package-info.java TestPackageInfo.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestPackageInfo.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestValidRelativeNames.java\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestValidRelativeNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -10,0 +10,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6362067 -proc:only T6362067.java\n","filename":"test\/langtools\/tools\/javac\/processing\/messager\/6362067\/T6362067.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,1 @@\n-T6362067.java:19:8: compiler.note.proc.messager: note:elem\n-T6362067.java:17:1: compiler.note.proc.messager: note:anno\n+T6362067.java:20:8: compiler.note.proc.messager: note:elem\n@@ -4,1 +3,2 @@\n-T6362067.java:18:19: compiler.note.proc.messager: note:value\n+T6362067.java:19:1: compiler.note.proc.messager: note:anno\n+T6362067.java:19:19: compiler.note.proc.messager: note:value\n","filename":"test\/langtools\/tools\/javac\/processing\/messager\/6362067\/T6362067.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MessagerBasics.java\n@@ -12,0 +13,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor MessagerBasics -proc:only MessagerBasics.java\n@@ -14,0 +16,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor MessagerBasics MessagerBasics.java\n","filename":"test\/langtools\/tools\/javac\/processing\/messager\/MessagerBasics.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g T6194785.java T6194785a.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6194785 foo.T6194785a T6194785.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/6194785\/T6194785.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6341534.java\n@@ -36,0 +37,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor T6341534 dir\/package-info.java\n@@ -37,0 +39,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor T6341534 dir\/package-info.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/6341534\/T6341534.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LocalClassesModel.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/LocalClasses\/LocalClassesModel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor AnnotationToStringTest -proc:only AnnotationToStringTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/AnnotationToStringTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CheckingAccessorsOnLoadedRecordClasses.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/CheckingAccessorsOnLoadedRecordClasses.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 16 TestStrictfpRetention.java StrictfpInSource.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2         -processor   TestStrictfpRetention --release 16                       StrictfpHost.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2         -processor   TestStrictfpRetention               -proc:only           StrictfpHost.java\n@@ -33,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2         -processor   TestStrictfpRetention -source 16                         StrictfpHost.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/ObsoleteStrictfp\/TestStrictfpRetention.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestAnonSourceNames TestAnonClassNames.java\n@@ -43,0 +44,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 line which runs\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestAnonClassNames.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestBindingVariable.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestBindingVariable -proc:only TestBindingVariableData.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestBindingVariable.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElement -proc:only TestElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestElementAsType -proc:only TestElementAsType.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestElementAsType.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -processor TestEmptyContainer -proc:only TestEmptyContainer.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestEmptyContainer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestExecutableElement -proc:only -AexpectedMethodCount=7 TestExecutableElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestExecutableElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestExecutableReceiverType -proc:only TestExecutableReceiverType.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestExecutableReceiverType.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n- * @compile         -processor TestImplicitClass            --enable-preview --release ${jdk.version}                            Anonymous.java\n+ * @compile -processor TestImplicitClass --enable-preview --release ${jdk.version} Anonymous.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestImplicitClass --enable-preview --release ${jdk.version} Anonymous.java\n@@ -35,0 +36,1 @@\n+ * @compile\/process -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestImplicitClass -proc:only --enable-preview --release ${jdk.version} -Xprefer:newer -AclassOnly Anonymous Nameless\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestImplicitClass.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingClass.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingGenericClass1.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingGenericClass1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingGenericClass2.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingGenericClass2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingGenericInterface1.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingGenericInterface1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingGenericInterface2.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingGenericInterface2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XprintRounds -processor Generator TestMissingInterface.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestMissingElement2\/TestMissingInterface.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestModuleElementNames -proc:only TestModuleElementNames.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestModuleElementNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestNames -proc:only TestNames.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -processor TestNonInherited -proc:only TestNonInherited.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestNonInherited.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPackageElement -proc:only             TestPackageElement.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPackageElement -proc:only --release 8 TestPackageElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestPackageElement.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestResourceElement -proc:only TestResourceElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestResourceElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestResourceVariable -proc:only TestResourceVariable.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestResourceVariable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestTypeElement -proc:only TestTypeElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestTypeElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestTypeParameter -proc:only TestTypeParameter.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestTypeParameter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestTypeParameterAnnotations -proc:only TestTypeParameterAnnotations.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestTypeParameterAnnotations.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestUnnamedVariableElement.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --enable-preview -source ${jdk.version} -processor TestUnnamedVariableElement -proc:only TestUnnamedVariableElementData.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestUnnamedVariableElement.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestUnnamedVariableElement8.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -source 8 -processor TestUnnamedVariableElement8 -proc:only TestUnnamedVariableElementData.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestUnnamedVariableElement8.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TypeParamBounds -proc:only TypeParamBounds.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TypeParamBounds.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixRepeatableAndOfficialContainerBasicTest.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerBasicTest.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixRepeatableAndOfficialContainerBasicTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixRepeatableAndOfficialContainerInheritedA1Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedA1Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedA1Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixRepeatableAndOfficialContainerInheritedA1Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixRepeatableAndOfficialContainerInheritedA2Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedA2Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedA2Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixRepeatableAndOfficialContainerInheritedA2Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixRepeatableAndOfficialContainerInheritedB1Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedB1Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedB1Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixRepeatableAndOfficialContainerInheritedB1Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixRepeatableAndOfficialContainerInheritedB2Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedB2Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixRepeatableAndOfficialContainerInheritedB2Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixRepeatableAndOfficialContainerInheritedB2Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixSingularAndUnofficialContainerBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixSingularAndUnofficialContainerInheritedA1Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedA1Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedA1Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixSingularAndUnofficialContainerInheritedA1Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixSingularAndUnofficialContainerInheritedA2Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedA2Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedA2Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixSingularAndUnofficialContainerInheritedA2Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixSingularAndUnofficialContainerInheritedB1Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedB1Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedB1Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixSingularAndUnofficialContainerInheritedB1Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * MixSingularAndUnofficialContainerInheritedB2Test.java\n+ * @compile -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedB2Test.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only MixSingularAndUnofficialContainerInheritedB2Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/MixSingularAndUnofficialContainerInheritedB2Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only OfficialContainerBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/OfficialContainerBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only OfficialContainerInheritedTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/OfficialContainerInheritedTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableInheritedTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableInheritedTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableOfficialContainerBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableOfficialContainerBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * RepeatableOfficialContainerInheritedTest.java\n+ * @compile -processor ElementRepAnnoTester -proc:only RepeatableOfficialContainerInheritedTest.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableOfficialContainerInheritedTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableOfficialContainerInheritedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableOverrideATest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableOverrideATest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only RepeatableOverrideBTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/RepeatableOverrideBTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only SingularBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/SingularBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only SingularInheritedATest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/SingularInheritedATest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only SingularInheritedBTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/SingularInheritedBTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only UnofficialContainerBasicTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/UnofficialContainerBasicTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -processor ElementRepAnnoTester -proc:only\n- * UnofficialContainerInheritedTest.java\n+ * @compile -processor ElementRepAnnoTester -proc:only UnofficialContainerInheritedTest.java\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ElementRepAnnoTester -proc:only UnofficialContainerInheritedTest.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/repeatingAnnotations\/UnofficialContainerInheritedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -processor EnsureOrder -proc:only EnsureOrder.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/inheritedByType\/EnsureOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor AnnotatedTypeToString -proc:only Test.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/AnnotatedTypeToString\/AnnotatedTypeToString.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -cp . -processor InheritedAP -proc:only InheritedAP.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/InheritedAP.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g OverEager.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor OverEager -proc:only OverEager.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/MirroredTypeEx\/OverEager.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Plurality.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Plurality -proc:only Plurality.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/MirroredTypeEx\/Plurality.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g NoTypes.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NoTypes -proc:only NoTypes.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/NoTypes.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor BinaryName -proc:only BinaryName.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/BinaryName.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor DirectSuperOfInt -proc:only DirectSuperOfInt.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/DirectSuperOfInt.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor GetTypeElemBadArg -proc:only GetTypeElemBadArg.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/GetTypeElemBadArg.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NoSupers -proc:only NoSupers.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/NoSupers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g OverridesSpecEx.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor OverridesSpecEx -proc:only OverridesSpecEx.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/OverridesSpecEx.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestTypeKindVisitors -proc:only TestTypeKindVisitors.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/TestTypeKindVisitors.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TypesBadArg -proc:only TypesBadArg.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/TypesBadArg.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestDeprecation.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestDeprecation -proc:only Dep1.java\n@@ -36,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Dep1.java\n@@ -37,0 +40,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestDeprecation -proc:only Dep1 TestDeprecation.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/deprecation\/TestDeprecation.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ImplicitParametersProcessor -proc:only ImplicitParametersProcessor.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/MethodParameters\/ImplicitParametersProcessor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestAllFoos -proc:only --release 8 --source-path modules\/m1\/pkg  modules\/m1\/pkg\/C.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestAllFoos -proc:only --release 8 --source-path modules\/m2\/pkg  modules\/m2\/pkg\/C.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestAllFoos.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetConstantExpression Foo.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetConstantExpression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetDocCommentKind -proc:only TestGetDocCommentKind.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocCommentKind.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetDocComment_Block -proc:only TestGetDocComment_Block.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComment_Block.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetDocComment_Line -proc:only TestGetDocComment_Line.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComment_Line.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetEnumConstantBody -XDshould.stop-at=FLOW TestGetEnumConstantBody.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetEnumConstantBody.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetModuleOf -proc:only TestGetModuleOf.java\n@@ -34,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetModuleOf -proc:only -source 8 -Xlint:-options TestGetModuleOf.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetModuleOf.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestGetPackageOf -proc:only TestGetPackageOf.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetPackageOf.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestIsAutomaticMod -proc:only TestIsAutomaticMod.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestIsAutomaticMod.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestIsFunctionalInterface TestIsFunctionalInterface.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestIsFunctionalInterface.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestOutermostTypeElement -proc:only TestOutermostTypeElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestOutermostTypeElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestOverrides -proc:only TestOverrides.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestOverrides.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestRecordPredicates -proc:only TestRecordPredicates.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestRecordPredicates.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xprint VacuousEnum.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/VacuousEnum.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor Hides -proc:only C.java I.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/hides\/Hides.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestIterables.java\n@@ -35,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestIterables -proc:only Foo1.java\n@@ -36,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Foo1.java\n@@ -37,0 +40,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestIterables Foo1 TestIterables.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/filter\/TestIterables.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestAnnotationStripping -proc:only TestAnnotationStripping.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestAnnotationStripping.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestAsElement -proc:only TestAsElement.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestAsElement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestDirectSupertypeObject -proc:only TestDirectSupertypeObject.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestDirectSupertypeObject.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestInvalidInputs -proc:only TestInvalidInputs.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestInvalidInputs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor TestPseudoTypeHandling -proc:only TestPseudoTypeHandling.java\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestPseudoTypeHandling.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:full TestProcOption.java\n","filename":"test\/langtools\/tools\/javac\/processing\/options\/TestProcOption.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor ClassDependingOnGenerated ClassDependingOnGeneratedSource.java\n","filename":"test\/langtools\/tools\/javac\/processing\/rounds\/ClassDependingOnGenerated.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestRepeatedItemsRuntime.java\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/TestRepeatedItemsRuntime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestRepeatedSupportedItems.java\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/TestRepeatedSupportedItems.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestSourceVersionWarnings.java\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/TestSourceVersionWarnings.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 A.java\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/TypeAlreadyExists\/TestProcTypeAlreadyExistsWarning.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WError1.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor WError1 WError1.java\n","filename":"test\/langtools\/tools\/javac\/processing\/werror\/WError1.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WErrorGen.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor WErrorGen WErrorGen.java\n","filename":"test\/langtools\/tools\/javac\/processing\/werror\/WErrorGen.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WErrorLast.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor WErrorLast WErrorLast.java\n","filename":"test\/langtools\/tools\/javac\/processing\/werror\/WErrorLast.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProtectedAccess_1.java\n","filename":"test\/langtools\/tools\/javac\/protectedAccess\/ProtectedAccess_1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ProtectedAccess_3.java\n","filename":"test\/langtools\/tools\/javac\/protectedAccess\/ProtectedAccess_3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 z1\/Z1.java z2\/Z2.java\n","filename":"test\/langtools\/tools\/javac\/protectedAccess\/ProtectedMemberAccess5\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TestWarning.java\n@@ -33,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ReproducingAP.java\n","filename":"test\/langtools\/tools\/javac\/records\/recordComponent\/8295184\/RecordComponentSourcePositionTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 GenerateTypeProcessor.java\n","filename":"test\/langtools\/tools\/javac\/records\/recordComponent\/RecordComponentTypeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Record.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 WriteReadTest.java\n","filename":"test\/langtools\/tools\/javac\/records\/writeread\/WriteReadTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassBlockExits.java\n@@ -141,1 +142,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/recovery\/ClassBlockExits.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 NoObjectToString.java\n","filename":"test\/langtools\/tools\/javac\/resolve\/NoObjectToString.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 StaticImportAccess.java\n","filename":"test\/langtools\/tools\/javac\/scope\/6225935\/StaticImportAccess.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 a\/Private.java a\/Named.java a\/Star.java T6225935.java\n","filename":"test\/langtools\/tools\/javac\/scope\/6225935\/T6225935.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6381787.java\n","filename":"test\/langtools\/tools\/javac\/scope\/6225935\/T6381787.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Test.java Bar.java Baz.java\n","filename":"test\/langtools\/tools\/javac\/scope\/6225935\/Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6392998.java\n","filename":"test\/langtools\/tools\/javac\/scope\/6392998\/T6392998.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                    -Werror SerialWarn.java\n","filename":"test\/langtools\/tools\/javac\/serial\/SerialWarn.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SerialWarn.java:11:1: compiler.warn.missing.SVUID: SerialWarn\n+SerialWarn.java:12:1: compiler.warn.missing.SVUID: SerialWarn\n","filename":"test\/langtools\/tools\/javac\/serial\/SerialWarn.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SerialWarn.java\n@@ -8,0 +9,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -XDrawDiagnostics -Xlint:serial SerialWarnAnon.java\n","filename":"test\/langtools\/tools\/javac\/serial\/SerialWarnAnon.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SourcePath.java\n","filename":"test\/langtools\/tools\/javac\/sourcePath\/SourcePath.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 pkg\/A.java\n","filename":"test\/langtools\/tools\/javac\/staticImport\/6665223\/T6665223.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  ImportInherit.java\n","filename":"test\/langtools\/tools\/javac\/staticImport\/ImportInherit.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  StaticImport.java\n","filename":"test\/langtools\/tools\/javac\/staticImport\/StaticImport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 BlockExpression.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/BlockExpression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefiniteAssignment1.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/DefiniteAssignment1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 20 ExhaustiveEnumSwitch.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExhaustiveEnumSwitchExtra.java\n@@ -32,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExhaustiveEnumSwitch.java\n@@ -33,0 +36,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExhaustiveEnumSwitchExtra.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExhaustiveEnumSwitch.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitch.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchBreaks1.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchBreaks1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchBugs.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchBugs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchBugsInGen.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchBugsInGen.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchCodeFromJLS.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchCodeFromJLS.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchDA.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchDA.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchEmbedding.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchEmbedding.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchFallThrough.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchFallThrough.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchFallThrough1.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchFallThrough1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchInExpressionSwitch.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchInExpressionSwitch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchIntersectionTypes.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchIntersectionTypes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ExpressionSwitchSynchronized.java\n@@ -59,1 +60,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitchSynchronized.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 LambdaCapture.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/LambdaCapture.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchExpressionIsNotAConstant.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/SwitchExpressionIsNotAConstant.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchExpressionNoValue.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/SwitchExpressionNoValue.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TryCatch.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/TryCatch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TryCatchFinally.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/TryCatchFinally.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 DefiniteAssignment1.java\n","filename":"test\/langtools\/tools\/javac\/switchextra\/DefiniteAssignment1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 EnumSwitchQualified.java\n","filename":"test\/langtools\/tools\/javac\/switchextra\/EnumSwitchQualified.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-MultipleLabelsExpression.java:31:16: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.expressions), 9, 14\n-MultipleLabelsExpression.java:32:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.rules), 9, 14\n-MultipleLabelsExpression.java:33:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n+MultipleLabelsExpression.java:32:16: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.expressions), 9, 14\n+MultipleLabelsExpression.java:33:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.rules), 9, 14\n+MultipleLabelsExpression.java:34:19: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n","filename":"test\/langtools\/tools\/javac\/switchextra\/MultipleLabelsExpression-old.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultipleLabelsExpression.java\n","filename":"test\/langtools\/tools\/javac\/switchextra\/MultipleLabelsExpression.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-MultipleLabelsStatement.java:35:21: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n+MultipleLabelsStatement.java:36:21: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n","filename":"test\/langtools\/tools\/javac\/switchextra\/MultipleLabelsStatement-old.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 MultipleLabelsStatement.java\n","filename":"test\/langtools\/tools\/javac\/switchextra\/MultipleLabelsStatement.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-SwitchStatementArrow.java:41:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.rules), 9, 14\n-SwitchStatementArrow.java:42:21: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n+SwitchStatementArrow.java:42:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.switch.rules), 9, 14\n+SwitchStatementArrow.java:43:21: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.multiple.case.labels), 9, 14\n","filename":"test\/langtools\/tools\/javac\/switchextra\/SwitchStatementArrow-old.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchStatementArrow.java\n","filename":"test\/langtools\/tools\/javac\/switchextra\/SwitchStatementArrow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SwitchNullDisabled.java\n","filename":"test\/langtools\/tools\/javac\/switchnull\/SwitchNullDisabled.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SwitchNullDisabled.java:12:18: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.case.null), 20, 21\n+SwitchNullDisabled.java:13:18: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.case.null), 20, 21\n","filename":"test\/langtools\/tools\/javac\/switchnull\/SwitchNullDisabled.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NoPrivateTypesExported NoPrivateTypesExported.java\n","filename":"test\/langtools\/tools\/javac\/tree\/NoPrivateTypesExported.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -proc:only -processor TreePosRoundsTest TreePosRoundsTest.java\n","filename":"test\/langtools\/tools\/javac\/tree\/TreePosRoundsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -XDaccessInternalAPI -proc:only -processor TestProcessor AnnoTreeTests.java\n","filename":"test\/langtools\/tools\/javac\/treeannotests\/AnnoTreeTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 TypeDeclarationInsideExpressionTest.java\n","filename":"test\/langtools\/tools\/javac\/typeDeclarationInsideExpression\/TypeDeclarationInsideExpressionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CastObjectToPrimitiveTest.java\n","filename":"test\/langtools\/tools\/javac\/types\/CastObjectToPrimitiveTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:all CastToTypeVarTest.java\n","filename":"test\/langtools\/tools\/javac\/types\/CastToTypeVarTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 CastTypeVarToPrimitiveTest.java\n","filename":"test\/langtools\/tools\/javac\/types\/CastTypeVarToPrimitiveTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:all VarInstanceMemberTest.java\n","filename":"test\/langtools\/tools\/javac\/types\/VarInstanceMemberTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 FirstChar2.java\n","filename":"test\/langtools\/tools\/javac\/unicode\/FirstChar.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 SupplementaryJavaID1.java\n","filename":"test\/langtools\/tools\/javac\/unicode\/SupplementaryJavaID1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnicodeAtEOL.java\n","filename":"test\/langtools\/tools\/javac\/unicode\/UnicodeAtEOL.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnicodeCommentDelimiter.java\n","filename":"test\/langtools\/tools\/javac\/unicode\/UnicodeCommentDelimiter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 UnicodeUnicode.java\n","filename":"test\/langtools\/tools\/javac\/unicode\/UnicodeUnicode.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ..\/..\/util\/list\/AbstractList.java\n","filename":"test\/langtools\/tools\/javac\/unit\/util\/list\/AbstractList.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ..\/..\/util\/list\/FromArray.java\n","filename":"test\/langtools\/tools\/javac\/unit\/util\/list\/FromArray.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -g UnnamedLocalVariableTable.java\n","filename":"test\/langtools\/tools\/javac\/unnamed\/UnnamedLocalVariableTable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -processor NewlineOnlyDiagnostic NewlineOnlyDiagnostic.java\n","filename":"test\/langtools\/tools\/javac\/util\/NewlineOnlyDiagnostic.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5088429Pos01.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/5088429\/T5088429Pos01.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T5088429Pos02.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/5088429\/T5088429Pos02.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6730476a.java -Xlint:unchecked -Werror\n","filename":"test\/langtools\/tools\/javac\/varargs\/6730476\/T6730476a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T6730476b.java -Xlint -Werror\n","filename":"test\/langtools\/tools\/javac\/varargs\/6730476\/T6730476b.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Anon.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/Anon.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  BadSyntax2.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/BadSyntax2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  MethodHandleCrash.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/MethodHandleCrash.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 T7013865.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/T7013865.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  Varargs1.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/Varargs1.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2  VarargsOverride.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/VarargsOverride.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-VarargsOverride.java:18:10: compiler.warn.override.varargs.missing: (compiler.misc.varargs.override: f(java.lang.Object...), varargs.override.B, f(java.lang.Object[]), varargs.override.A)\n+VarargsOverride.java:19:10: compiler.warn.override.varargs.missing: (compiler.misc.varargs.override: f(java.lang.Object...), varargs.override.B, f(java.lang.Object[]), varargs.override.A)\n","filename":"test\/langtools\/tools\/javac\/varargs\/VarargsOverride.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 Warn1.java\n@@ -10,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:none Warn1.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/Warn1.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Warn1.java:18:18: compiler.warn.inexact.non-varargs.call: java.lang.Object, java.lang.Object[]\n+Warn1.java:20:18: compiler.warn.inexact.non-varargs.call: java.lang.Object, java.lang.Object[]\n","filename":"test\/langtools\/tools\/javac\/varargs\/Warn1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2                           Warn2.java\n@@ -10,0 +11,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2       -Werror -Xlint:none Warn2.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/Warn2.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Warn2.java:18:18: compiler.warn.inexact.non-varargs.call: java.lang.Object, java.lang.Object[]\n+Warn2.java:20:18: compiler.warn.inexact.non-varargs.call: java.lang.Object, java.lang.Object[]\n","filename":"test\/langtools\/tools\/javac\/varargs\/Warn2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 VarargsAndWildcardParameterizedTypeTest.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 VarargsAndWildcardParameterizedTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2             VarargsAndWildcardParameterizedTypeTest2.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 VarargsAndWildcardParameterizedTypeTest2.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest2.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2             VarargsAndWildcardParameterizedTypeTest3.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 VarargsAndWildcardParameterizedTypeTest3.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest3.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2             VarargsAndWildcardParameterizedTypeTest4.java\n@@ -30,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 --release 8 VarargsAndWildcardParameterizedTypeTest4.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest4.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror  Warn2.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn2.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror  Warn3.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn3.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:unchecked -Werror Warn6.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 ClassUsingAnotherAuxiliary.java NotAClassName.java\n@@ -6,0 +7,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:auxiliaryclass ClassUsingAnotherAuxiliary.java NotAClassName.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/AuxiliaryClass\/ClassUsingAnotherAuxiliary.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ClassUsingAnotherAuxiliary.java:10:5: compiler.warn.auxiliary.class.accessed.from.outside.of.its.source.file: AnAuxiliaryClass, NotAClassName.java\n+ClassUsingAnotherAuxiliary.java:12:5: compiler.warn.auxiliary.class.accessed.from.outside.of.its.source.file: AnAuxiliaryClass, NotAClassName.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/AuxiliaryClass\/ClassUsingAnotherAuxiliary.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:missing-explicit-ctor,-options -Werror --release 8 NoWarningCases.java\n@@ -29,0 +30,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:missing-explicit-ctor          -Werror             NoWarningCases.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/DefaultCtor\/NoWarningCases.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:missing-explicit-ctor -Werror NoWarningRecord.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/DefaultCtor\/NoWarningRecord.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:rawtypes T6763518.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/T6763518.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:all -Werror UnboundAndBoundByObjectTest.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/UnboundAndBoundByObjectTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Werror -Xlint:deprecation OverriddenSuppressed.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/suppress\/OverriddenSuppressed.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @compile -J-XX:+UnlockExperimentalVMOptions -J-XX:hashCode=2 -Xlint:cast -Werror T8021112a.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/suppress\/T8021112a.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}