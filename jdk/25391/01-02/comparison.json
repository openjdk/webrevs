{"files":[{"patch":"@@ -41,1 +41,0 @@\n-import java.util.stream.Stream;\n@@ -45,0 +44,1 @@\n+import org.junit.jupiter.api.Assertions;\n@@ -54,1 +54,1 @@\n-                    \".*\\\\Rkeystore\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\";\n+            \".*\\\\Rkeystore\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\";\n@@ -57,2 +57,2 @@\n-                    \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*\\\\|\"\n-                    + DATE_REGEX + \".*\\\\]:\";\n+            \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*\\\\|\"\n+            + DATE_REGEX + \".*\\\\]:\";\n@@ -60,2 +60,2 @@\n-    private static final Stream<String[]> patternMatches = Stream.of(\n-                \/\/ test for thread and timestamp info\n+    private static final List<String[]> patternMatches = List.of(\n+            \/\/ test for thread and timestamp info\n@@ -63,23 +63,23 @@\n-                        EXPECTED_PROP_REGEX,\n-                        \"properties:\"},\n-                \/\/ test for thread and timestamp info\n-                new String[]{\"properties+thread\",\n-                        EXPECTED_PROP_REGEX,\n-                        \"properties:\"},\n-                \/\/ flip the arguments of previous test\n-        new String[]{\"properties+thread+timestamp\",\n-                        EXPECTED_PROP_REGEX,\n-                        \"properties:\"},\n-                \/\/ regular keystore,properties component string\n-        new String[]{\"keystore,properties\",\n-                        EXPECTED_PROP_KEYSTORE_REGEX,\n-                        \"properties:\"},\n-                \/\/ turn on all\n-        new String[]{\"all\",\n-                        EXPECTED_ALL_REGEX,\n-                        \"properties:\"},\n-                \/\/ expect thread and timestamp info\n-        new String[]{\"all+thread\",\n-                        EXPECTED_ALL_REGEX,\n-                        \"properties:\"}\n-        );\n+                    EXPECTED_PROP_REGEX,\n+                    \"properties:\"},\n+            \/\/ test for thread and timestamp info\n+            new String[]{\"properties+thread\",\n+                    EXPECTED_PROP_REGEX,\n+                    \"properties:\"},\n+            \/\/ flip the arguments of previous test\n+            new String[]{\"properties+thread+timestamp\",\n+                    EXPECTED_PROP_REGEX,\n+                    \"properties:\"},\n+            \/\/ regular keystore,properties component string\n+            new String[]{\"keystore,properties\",\n+                    EXPECTED_PROP_KEYSTORE_REGEX,\n+                    \"properties:\"},\n+            \/\/ turn on all\n+            new String[]{\"all\",\n+                    EXPECTED_ALL_REGEX,\n+                    \"properties:\"},\n+            \/\/ expect thread and timestamp info\n+            new String[]{\"all+thread\",\n+                    EXPECTED_ALL_REGEX,\n+                    \"properties:\"}\n+    );\n@@ -100,1 +100,1 @@\n-        System.out.printf(\"Executing: {%s%s%s}%n\",\n+        System.out.printf(\"Executing: {%s%s DebugOptions}%n\",\n@@ -102,3 +102,1 @@\n-                paramVal,\n-                \"DebugOptions\");\n-\n+                paramVal);\n@@ -129,1 +127,1 @@\n-        System.out.printf(\"Executing: {%s%s%s}%n\",\n+        System.out.printf(\"Executing: {%s%s DebugOptions}%n\",\n@@ -131,1 +129,4 @@\n-                formattedParam,\n+                formattedParam);\n+\n+        final OutputAnalyzer outputAnalyzer = ProcessTools.executeTestJava(\n+                paramName + formattedParam,\n@@ -133,0 +134,23 @@\n+        outputAnalyzer.shouldHaveExitValue(0)\n+                .shouldMatch(expected)\n+                .shouldNotMatch(notExpected);\n+    }\n+\n+    \/**\n+     * This will execute the test logic, but first change the param\n+     * to be uppercase\n+     *\n+     * @param paramName   name of the parameter e.g. -Djava.security.debug=\n+     * @param paramVal    value of the parameter\n+     * @param expected    expected output\n+     * @param notExpected not expected output\n+     *\/\n+    public void testUpperCaseParameter(String paramName,\n+                                       String paramVal,\n+                                       String expected,\n+                                       String notExpected) throws Exception {\n+\n+        final String formattedParam = paramVal.toUpperCase();\n+        System.out.printf(\"Executing: {%s%s DebugOptions}%n\",\n+                paramName,\n+                formattedParam);\n@@ -143,2 +167,1 @@\n-     * This method will change the input string to have the first\n-     * and last letters uppercase\n+     * This method will change the input string to have all letters uppercase\n@@ -147,1 +170,1 @@\n-     * hello -> HellO\n+     * hello -> HELLO\n@@ -149,1 +172,1 @@\n-     * @param paramString string to change\n+     * @param paramString string to change. Must not be null or empty\n@@ -153,0 +176,2 @@\n+        Assertions.assertTrue(paramString != null && !paramString.isEmpty());\n+\n@@ -165,1 +190,1 @@\n-     * in both mixed and lowercase\n+     * in lowercase\n@@ -168,1 +193,1 @@\n-    public void debugOptionsTest() throws Exception {\n+    public void debugOptionsLowerCaseTest() throws Exception {\n@@ -182,0 +207,31 @@\n+                testsCallables.add(() -> {\n+                    testParameter(\n+                            \"-Djava.security.auth.debug=\",\n+                            params[0],\n+                            params[1],\n+                            params[2]);\n+                    return null;\n+                });\n+\n+                System.out.println(\"Option added to all lowercase tests \" + Arrays.toString(params));\n+            });\n+\n+            System.out.println(\"Starting all the threads\");\n+            final List<Future<Void>> res = executorService.invokeAll(testsCallables);\n+            for (final Future<Void> future : res) {\n+                future.get();\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * This test will run all options in parallel with all param names\n+     * in mixed case\n+     *\/\n+    @Test\n+    public void debugOptionsMixedCaseTest() throws Exception {\n+\n+        try (final ExecutorService executorService = Executors.newVirtualThreadPerTaskExecutor()) {\n+            final List<Callable<Void>> testsCallables = new ArrayList<>();\n+\n+            patternMatches.forEach(params -> {\n@@ -190,1 +246,0 @@\n-\n@@ -192,1 +247,1 @@\n-                    testParameter(\n+                    testMixedCaseParameter(\n@@ -199,0 +254,23 @@\n+\n+                System.out.println(\"Option added to all mixed case tests \" + Arrays.toString(params));\n+            });\n+\n+            System.out.println(\"Starting all the threads\");\n+            final List<Future<Void>> res = executorService.invokeAll(testsCallables);\n+            for (final Future<Void> future : res) {\n+                future.get();\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * This test will run all options in parallel with all param names\n+     * in uppercase\n+     *\/\n+    @Test\n+    public void debugOptionsUpperCaseTest() throws Exception {\n+\n+        try (final ExecutorService executorService = Executors.newVirtualThreadPerTaskExecutor()) {\n+            final List<Callable<Void>> testsCallables = new ArrayList<>();\n+\n+            patternMatches.forEach(params -> {\n@@ -200,1 +278,9 @@\n-                    testMixedCaseParameter(\n+                    testUpperCaseParameter(\n+                            \"-Djava.security.debug=\",\n+                            params[0],\n+                            params[1],\n+                            params[2]);\n+                    return null;\n+                });\n+                testsCallables.add(() -> {\n+                    testUpperCaseParameter(\n@@ -208,1 +294,1 @@\n-                System.out.println(\"option added to all tests \" + Arrays.toString(params));\n+                System.out.println(\"Option added to all upper case tests \" + Arrays.toString(params));\n","filename":"test\/jdk\/sun\/security\/util\/Debug\/DebugOptions.java","additions":131,"deletions":45,"binary":false,"changes":176,"status":"modified"}]}