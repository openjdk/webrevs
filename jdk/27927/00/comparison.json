{"files":[{"patch":"@@ -228,0 +228,18 @@\n+      \/\/ no-fast bytecode\n+      case Bytecodes::_nofast_getfield:\n+      \/\/ fast bytecodes\n+      case Bytecodes::_fast_agetfield:\n+      case Bytecodes::_fast_bgetfield:\n+      case Bytecodes::_fast_cgetfield:\n+      case Bytecodes::_fast_dgetfield:\n+      case Bytecodes::_fast_fgetfield:\n+      case Bytecodes::_fast_igetfield:\n+      case Bytecodes::_fast_lgetfield:\n+      case Bytecodes::_fast_sgetfield:\n+        raw_bc = Bytecodes::_getfield;\n+        maybe_resolve_fmi_ref(ik, m, raw_bc, bcs.get_index_u2(), preresolve_list, THREAD);\n+        if (HAS_PENDING_EXCEPTION) {\n+          CLEAR_PENDING_EXCEPTION; \/\/ just ignore\n+        }\n+        break;\n+\n@@ -229,0 +247,13 @@\n+      \/\/ no-fast bytecode\n+      case Bytecodes::_nofast_putfield:\n+      \/\/ fast bytecodes\n+      case Bytecodes::_fast_aputfield:\n+      case Bytecodes::_fast_bputfield:\n+      case Bytecodes::_fast_zputfield:\n+      case Bytecodes::_fast_cputfield:\n+      case Bytecodes::_fast_dputfield:\n+      case Bytecodes::_fast_fputfield:\n+      case Bytecodes::_fast_iputfield:\n+      case Bytecodes::_fast_lputfield:\n+      case Bytecodes::_fast_sputfield:\n+        raw_bc = Bytecodes::_putfield;\n","filename":"src\/hotspot\/share\/cds\/aotConstantPoolResolver.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -130,0 +130,8 @@\n+      LogStreamHandle(Trace, aot, resolve) log;\n+      if (log.is_enabled()) {\n+        log.print(\"ConstantPool entries for %s to be pre-resolved:\", k->external_name());\n+        for (int i = 0; i < cp_indices.length(); i++) {\n+          log.print(\" %d\", cp_indices.at(i));\n+        }\n+        log.print(\"\\n\");\n+      }\n","filename":"src\/hotspot\/share\/cds\/finalImageRecipes.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -541,1 +541,0 @@\n-  Klass* k = resolved_klass_at(cp_index);\n@@ -543,0 +542,1 @@\n+  Klass* k = nullptr;\n@@ -544,5 +544,1 @@\n-  if (k == nullptr) {\n-    \/\/ We'd come here if the referenced class has been excluded via\n-    \/\/ SystemDictionaryShared::is_excluded_class(). As a result, ArchiveBuilder\n-    \/\/ has cleared the resolved_klasses()->at(...) pointer to null. Thus, we\n-    \/\/ need to revert the tag to JVM_CONSTANT_UnresolvedClass.\n+  if (CDSConfig::is_dumping_preimage_static_archive()) {\n@@ -551,2 +547,11 @@\n-    ConstantPool* src_cp = ArchiveBuilder::current()->get_source_addr(this);\n-    can_archive = AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index);\n+    k = resolved_klass_at(cp_index);\n+    if (k == nullptr) {\n+      \/\/ We'd come here if the referenced class has been excluded via\n+      \/\/ SystemDictionaryShared::is_excluded_class(). As a result, ArchiveBuilder\n+      \/\/ has cleared the resolved_klasses()->at(...) pointer to null. Thus, we\n+      \/\/ need to revert the tag to JVM_CONSTANT_UnresolvedClass.\n+      can_archive = false;\n+    } else {\n+      ConstantPool* src_cp = ArchiveBuilder::current()->get_source_addr(this);\n+      can_archive = AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index);\n+    }\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -433,1 +433,2 @@\n-    if (resolved && AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index)) {\n+    if (resolved && !CDSConfig::is_dumping_preimage_static_archive()\n+        && AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index)) {\n@@ -439,14 +440,12 @@\n-    if (resolved) {\n-      LogStreamHandle(Trace, aot, resolve) log;\n-      if (log.is_enabled()) {\n-        ResourceMark rm;\n-        int klass_cp_index = cp->uncached_klass_ref_index_at(cp_index);\n-        Symbol* klass_name = cp->klass_name_at(klass_cp_index);\n-        Symbol* name = cp->uncached_name_ref_at(cp_index);\n-        Symbol* signature = cp->uncached_signature_ref_at(cp_index);\n-        log.print(\"%s field  CP entry [%3d]: %s => %s.%s:%s\",\n-                  (archived ? \"archived\" : \"reverted\"),\n-                  cp_index,\n-                  cp->pool_holder()->name()->as_C_string(),\n-                  klass_name->as_C_string(), name->as_C_string(), signature->as_C_string());\n-      }\n+    LogStreamHandle(Trace, aot, resolve) log;\n+    if (log.is_enabled()) {\n+      ResourceMark rm;\n+      int klass_cp_index = cp->uncached_klass_ref_index_at(cp_index);\n+      Symbol* klass_name = cp->klass_name_at(klass_cp_index);\n+      Symbol* name = cp->uncached_name_ref_at(cp_index);\n+      Symbol* signature = cp->uncached_signature_ref_at(cp_index);\n+      log.print(\"%s field  CP entry [%3d]: %s => %s.%s:%s\",\n+                (archived ? \"archived\" : \"reverted\"),\n+                cp_index,\n+                cp->pool_holder()->name()->as_C_string(),\n+                klass_name->as_C_string(), name->as_C_string(), signature->as_C_string());\n@@ -473,1 +472,2 @@\n-    if (resolved && can_archive_resolved_method(src_cp, rme)) {\n+    if (resolved && !CDSConfig::is_dumping_preimage_static_archive()\n+        && can_archive_resolved_method(src_cp, rme)) {\n@@ -479,20 +479,18 @@\n-    if (resolved) {\n-      LogStreamHandle(Trace, aot, resolve) log;\n-      if (log.is_enabled()) {\n-        ResourceMark rm;\n-        int klass_cp_index = cp->uncached_klass_ref_index_at(cp_index);\n-        Symbol* klass_name = cp->klass_name_at(klass_cp_index);\n-        Symbol* name = cp->uncached_name_ref_at(cp_index);\n-        Symbol* signature = cp->uncached_signature_ref_at(cp_index);\n-        log.print(\"%s%s method CP entry [%3d]: %s %s.%s:%s\",\n-                  (archived ? \"archived\" : \"reverted\"),\n-                  (rme->is_resolved(Bytecodes::_invokeinterface) ? \" interface\" : \"\"),\n-                  cp_index,\n-                  cp->pool_holder()->name()->as_C_string(),\n-                  klass_name->as_C_string(), name->as_C_string(), signature->as_C_string());\n-        if (archived) {\n-          Klass* resolved_klass = cp->resolved_klass_at(klass_cp_index);\n-          log.print(\" => %s%s\",\n-                    resolved_klass->name()->as_C_string(),\n-                    (rme->is_resolved(Bytecodes::_invokestatic) ? \" *** static\" : \"\"));\n-        }\n+    LogStreamHandle(Trace, aot, resolve) log;\n+    if (log.is_enabled()) {\n+      ResourceMark rm;\n+      int klass_cp_index = cp->uncached_klass_ref_index_at(cp_index);\n+      Symbol* klass_name = cp->klass_name_at(klass_cp_index);\n+      Symbol* name = cp->uncached_name_ref_at(cp_index);\n+      Symbol* signature = cp->uncached_signature_ref_at(cp_index);\n+      log.print(\"%s%s method CP entry [%3d]: %s %s.%s:%s\",\n+                (archived ? \"archived\" : \"reverted\"),\n+                (rme->is_resolved(Bytecodes::_invokeinterface) ? \" interface\" : \"\"),\n+                cp_index,\n+                cp->pool_holder()->name()->as_C_string(),\n+                klass_name->as_C_string(), name->as_C_string(), signature->as_C_string());\n+      if (archived) {\n+        Klass* resolved_klass = cp->resolved_klass_at(klass_cp_index);\n+        log.print(\" => %s%s\",\n+                  resolved_klass->name()->as_C_string(),\n+                  (rme->is_resolved(Bytecodes::_invokestatic) ? \" *** static\" : \"\"));\n@@ -513,1 +511,2 @@\n-    if (resolved && AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index)) {\n+    if (resolved && !CDSConfig::is_dumping_preimage_static_archive()\n+        && AOTConstantPoolResolver::is_resolution_deterministic(src_cp, cp_index)) {\n@@ -519,16 +518,13 @@\n-    if (resolved) {\n-      LogStreamHandle(Trace, aot, resolve) log;\n-      if (log.is_enabled()) {\n-        ResourceMark rm;\n-        int bsm = cp->bootstrap_method_ref_index_at(cp_index);\n-        int bsm_ref = cp->method_handle_index_at(bsm);\n-        Symbol* bsm_name = cp->uncached_name_ref_at(bsm_ref);\n-        Symbol* bsm_signature = cp->uncached_signature_ref_at(bsm_ref);\n-        Symbol* bsm_klass = cp->klass_name_at(cp->uncached_klass_ref_index_at(bsm_ref));\n-        log.print(\"%s indy   CP entry [%3d]: %s (%d)\",\n-                  (archived ? \"archived\" : \"reverted\"),\n-                  cp_index, cp->pool_holder()->name()->as_C_string(), i);\n-        log.print(\" %s %s.%s:%s\", (archived ? \"=>\" : \"  \"), bsm_klass->as_C_string(),\n-                  bsm_name->as_C_string(), bsm_signature->as_C_string());\n-      }\n-      ArchiveBuilder::alloc_stats()->record_indy_cp_entry(archived, resolved && !archived);\n+    LogStreamHandle(Trace, aot, resolve) log;\n+    if (log.is_enabled()) {\n+      ResourceMark rm;\n+      int bsm = cp->bootstrap_method_ref_index_at(cp_index);\n+      int bsm_ref = cp->method_handle_index_at(bsm);\n+      Symbol* bsm_name = cp->uncached_name_ref_at(bsm_ref);\n+      Symbol* bsm_signature = cp->uncached_signature_ref_at(bsm_ref);\n+      Symbol* bsm_klass = cp->klass_name_at(cp->uncached_klass_ref_index_at(bsm_ref));\n+      log.print(\"%s indy   CP entry [%3d]: %s (%d)\",\n+                (archived ? \"archived\" : \"reverted\"),\n+                cp_index, cp->pool_holder()->name()->as_C_string(), i);\n+      log.print(\" %s %s.%s:%s\", (archived ? \"=>\" : \"  \"), bsm_klass->as_C_string(),\n+                bsm_name->as_C_string(), bsm_signature->as_C_string());\n@@ -536,0 +532,1 @@\n+    ArchiveBuilder::alloc_stats()->record_indy_cp_entry(archived, resolved && !archived);\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":50,"deletions":53,"binary":false,"changes":103,"status":"modified"}]}