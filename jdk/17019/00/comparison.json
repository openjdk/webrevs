{"files":[{"patch":"@@ -85,1 +85,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -148,1 +148,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -164,1 +164,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" != xxlc; then\n+  if test \"x$TOOLCHAIN_TYPE\" != xxlc -a \"x$TOOLCHAIN_TYPE\" != xclcl; then\n@@ -219,0 +219,14 @@\n+    clcl)\n+      DISABLE_WARNING_PREFIX=\"-Wno-\"\n+      BUILD_CC_DISABLE_WARNING_PREFIX=\"-Wno-\"\n+      CFLAGS_WARNINGS_ARE_ERRORS=\"-Werror\"\n+\n+      # Additional warnings that are not activated by -Wall and -Wextra\n+      WARNINGS_ENABLE_ADDITIONAL=\"-Wpointer-arith -Wsign-compare -Wreorder \\\n+          -Wunused-function -Wundef -Wunused-value -Woverloaded-virtual\"\n+      WARNINGS_ENABLE_ALL=\"-W4 -Wformat=2 $WARNINGS_ENABLE_ADDITIONAL\"\n+\n+      DISABLED_WARNINGS=\"unknown-warning-option unused-parameter unused\"\n+\n+      ;;\n+\n@@ -317,1 +331,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -493,1 +507,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -562,1 +576,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -572,1 +586,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -580,1 +594,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -596,1 +610,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xclang -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -645,1 +659,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -709,1 +723,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -785,1 +799,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -804,1 +818,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -833,0 +847,11 @@\n+    elif test \"x$TOOLCHAIN_TYPE\" = xclcl; then\n+      # Check if compiler supports -fmacro-prefix-map. If so, use that to make\n+      # the __FILE__ macro resolve to paths relative to the workspace root.\n+      workspace_root_trailing_slash=\"${WORKSPACE_ROOT%\/}\/\"\n+      FILE_MACRO_CFLAGS=\"-clang:-fmacro-prefix-map=${workspace_root_trailing_slash}=\"\n+      FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [${FILE_MACRO_CFLAGS}],\n+          PREFIX: $3,\n+          IF_FALSE: [\n+              FILE_MACRO_CFLAGS=\n+          ]\n+      )\n","filename":"make\/autoconf\/flags-cflags.m4","additions":38,"deletions":13,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -98,1 +98,1 @@\n-    BASIC_LDFLAGS_JVM_ONLY=\"-opt:icf,8 -subsystem:windows\"\n+    BASIC_LDFLAGS_JVM_ONLY=\"-opt:icf=8 -subsystem:windows\"\n@@ -160,1 +160,1 @@\n-    if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+    if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -199,1 +199,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -211,1 +211,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -108,1 +108,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n","filename":"make\/autoconf\/flags-other.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-      && test \"x$TOOLCHAIN_TYPE\" = \"xmicrosoft\"; then\n+      && test \"x$TOOLCHAIN_TYPE\" = \"xmicrosoft\" -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -313,1 +313,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -365,1 +365,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n","filename":"make\/autoconf\/flags.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -419,0 +419,1 @@\n+           test \"x$TOOLCHAIN_TYPE\" = \"xclcl\" ||\n@@ -428,1 +429,2 @@\n-           test \"x$TOOLCHAIN_TYPE\" = \"xclang\"; then\n+           test \"x$TOOLCHAIN_TYPE\" = \"xclang\" ||\n+           test \"x$TOOLCHAIN_TYPE\" = \"xclcl\"; then\n","filename":"make\/autoconf\/jdk-options.m4","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" != xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" != xmicrosoft -a \"x$TOOLCHAIN_TYPE\" != xclcl; then\n","filename":"make\/autoconf\/libraries.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,0 +167,5 @@\n+ifeq (@TOOLCHAIN_TYPE@, clcl)\n+  # The Visual Studio toolchain needs the PATH to be adjusted to include\n+  # Visual Studio tools.\n+  export PATH := @TOOLCHAIN_PATH@:$(PATH)\n+endif\n","filename":"make\/autoconf\/spec.gmk.in","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-VALID_TOOLCHAINS_all=\"gcc clang xlc microsoft\"\n+VALID_TOOLCHAINS_all=\"gcc clang xlc microsoft clcl\"\n@@ -44,1 +44,1 @@\n-VALID_TOOLCHAINS_windows=\"microsoft\"\n+VALID_TOOLCHAINS_windows=\"microsoft clcl\"\n@@ -50,0 +50,1 @@\n+TOOLCHAIN_DESCRIPTION_clcl=\"clang\/LLVM for Windows\"\n@@ -57,0 +58,1 @@\n+TOOLCHAIN_MINIMUM_VERSION_clcl=\"\"\n@@ -312,0 +314,1 @@\n+  TOOLCHAIN_CC_BINARY_clcl=\"clang-cl\"\n@@ -321,0 +324,1 @@\n+  TOOLCHAIN_CXX_BINARY_clcl=\"clang-cl\"\n@@ -384,1 +388,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" != \"xmicrosoft\"; then\n+  if test \"x$TOOLCHAIN_TYPE\" != \"xmicrosoft\" -a \"x$TOOLCHAIN_TYPE\" != \"xclcl\"; then\n@@ -462,1 +466,1 @@\n-  elif test  \"x$TOOLCHAIN_TYPE\" = xclang; then\n+  elif test  \"x$TOOLCHAIN_TYPE\" = xclang -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -585,0 +589,8 @@\n+  elif test  \"x$TOOLCHAIN_TYPE\" = xclcl; then\n+    # lld-link --version\n+    # First line typically looks something like:\n+    #   LLD 14.0.5\n+    LINKER_VERSION_STRING=`$LINKER --version 2>&1 | $HEAD -n 1 | $TR -d '\\r'`\n+    # Extract version number\n+    [ LINKER_VERSION_NUMBER=`$ECHO $LINKER_VERSION_STRING | \\\n+        $SED -e 's\/.* \\([0-9][0-9]*\\(\\.[0-9][0-9]*\\)*\\).*\/\\1\/'` ]\n@@ -693,0 +705,4 @@\n+   elif test \"x$TOOLCHAIN_TYPE\" = xclcl; then\n+    # In the clang-cl toolchain we have a separate LD command \"lld-link\".\n+    UTIL_LOOKUP_TOOLCHAIN_PROGS(LD, lld-link)\n+    LDCXX=\"$LD\"\n@@ -717,1 +733,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" != xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" != xmicrosoft -a \"x$TOOLCHAIN_TYPE\" != xclcl; then\n@@ -736,0 +752,2 @@\n+  elif test \"x$TOOLCHAIN_TYPE\" = xclcl; then\n+    UTIL_LOOKUP_TOOLCHAIN_PROGS(AR, llvm-lib)\n@@ -780,1 +798,1 @@\n-  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -861,1 +879,1 @@\n-          if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+          if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -882,1 +900,1 @@\n-        if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+        if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -891,1 +909,1 @@\n-      if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+      if test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n@@ -926,0 +944,22 @@\n+    elif test \"x$TOOLCHAIN_TYPE\" = xclcl; then\n+      UTIL_REQUIRE_PROGS(BUILD_CC, clang-cl, [$VS_PATH])\n+      UTIL_REQUIRE_PROGS(BUILD_CXX, clang-cl, [$VS_PATH])\n+\n+      # On windows, the assembler is \"ml.exe\". We currently don't need this so\n+      # do not require.\n+      if test \"x$OPENJDK_BUILD_CPU_BITS\" = \"x64\"; then\n+        # On 64 bit windows, the assembler is \"ml64.exe\"\n+        UTIL_LOOKUP_PROGS(BUILD_AS, ml64, [$VS_PATH])\n+      else\n+        # otherwise the assembler is \"ml.exe\"\n+        UTIL_LOOKUP_PROGS(BUILD_AS, ml, [$VS_PATH])\n+      fi\n+\n+      # On windows, the ar tool is llvm-lib.exe (used to create static libraries).\n+      # We currently don't need this so do not require.\n+      UTIL_LOOKUP_PROGS(BUILD_AR, llvm-lib, [$VS_PATH])\n+\n+      # In the clang-cl toolchain we have a separate LD command \"lld-link\".\n+      UTIL_REQUIRE_PROGS(BUILD_LD, lld-link, [$VS_PATH])\n+      TOOLCHAIN_VERIFY_LINK_BINARY(BUILD_LD)\n+      BUILD_LDCXX=\"$BUILD_LD\"\n@@ -1015,1 +1055,1 @@\n-  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft -o \"x$TOOLCHAIN_TYPE\" = xclcl; then\n","filename":"make\/autoconf\/toolchain.m4","additions":50,"deletions":10,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-        ifneq ($(TOOLCHAIN_TYPE), microsoft)\n+        ifeq ($(findstring $(TOOLCHAIN_TYPE), microsoft clcl), )\n@@ -885,1 +885,1 @@\n-      ifeq ($(TOOLCHAIN_TYPE), microsoft)\n+      ifneq ($(findstring $(TOOLCHAIN_TYPE), microsoft clcl), )\n","filename":"make\/common\/NativeCompilation.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}