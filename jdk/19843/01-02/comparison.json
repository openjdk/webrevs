{"files":[{"patch":"@@ -441,0 +441,8 @@\n+          # detect_stack_use_after_return is using a fake stack and thus JDK would crashe:\n+          # assert(_thread->is_in_live_stack((address)this)) failed: not on stack?\n+          if test \"x$TOOLCHAIN_TYPE\" = \"xgcc\"; then\n+            ASAN_CFLAGS=\"$ASAN_CFLAGS --param asan-use-after-return=0\"\n+          fi\n+          if test \"x$TOOLCHAIN_TYPE\" = \"xclang\"; then\n+            ASAN_CFLAGS=\"$ASAN_CFLAGS -fsanitize-address-use-after-return=never\"\n+          fi\n","filename":"make\/autoconf\/jdk-options.m4","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,3 +45,0 @@\n-#ifdef ADDRESS_SANITIZER\n-#include <sanitizer\/asan_interface.h>\n-#endif\n@@ -472,9 +469,0 @@\n-  bool is_in_asan_fake_stack(address adr) const {\n-#ifdef ADDRESS_SANITIZER\n-    if (__asan_addr_is_in_fake_stack(__asan_get_current_fake_stack(), adr, nullptr\/*beg*\/, nullptr\/*end*\/)) {\n-      return true;\n-    }\n-#endif\n-    return false;\n-  }\n-\n@@ -486,3 +474,0 @@\n-    if (is_in_asan_fake_stack(adr)) {\n-      return true;\n-    }\n@@ -515,3 +500,0 @@\n-    if (is_in_asan_fake_stack(adr)) {\n-      return true;\n-    }\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"}]}