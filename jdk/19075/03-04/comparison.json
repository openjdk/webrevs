{"files":[{"patch":"@@ -2596,0 +2596,3 @@\n+                                if (!stat[STATUS_POSITIVE]) {\n+                                    exponent = -exponent;\n+                                }\n@@ -2597,2 +2600,4 @@\n-                                \/\/ If overflow, Integer.MAX_VALUE is sufficient\n-                                exponent = Integer.MAX_VALUE;\n+                                \/\/ For all overflow and underflow, determine\n+                                \/\/ appropriate value based off positive status\n+                                exponent = stat[STATUS_POSITIVE] ?\n+                                        Integer.MAX_VALUE : Integer.MIN_VALUE;\n@@ -2601,3 +2606,2 @@\n-                            \/\/ Value is greater than Long.MAX_VALUE, exponent field\n-                            \/\/ is int, so assign it to the largest possible, Integer.MAX_VALUE\n-                            exponent = Integer.MAX_VALUE;\n+                            exponent = stat[STATUS_POSITIVE] ?\n+                                    Integer.MAX_VALUE : Integer.MIN_VALUE;\n@@ -2606,3 +2610,0 @@\n-                        if (!stat[STATUS_POSITIVE]) {\n-                            exponent = -exponent;\n-                        }\n@@ -2646,2 +2647,3 @@\n-                \/\/ If overflow, Integer.MAX_VALUE is sufficient\n-                digits.decimalAt = Integer.MAX_VALUE;\n+                \/\/ Depending on overflow\/underflow, adjust exponent value\n+                digits.decimalAt = digits.decimalAt + exponent > 0\n+                        ? Integer.MIN_VALUE : Integer.MAX_VALUE;\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -136,0 +136,3 @@\n+                \/\/ Exponent itself does not cause underflow, but decimalAt adjustment\n+                \/\/ based off mantissa should. decimalAt(-1) + exponent(Integer.MIN_VALUE) = underflow\n+                Arguments.of(\"0.0123E-2147483648\", 0.0),\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/LargeExponentsTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}