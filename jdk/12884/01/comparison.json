{"files":[{"patch":"@@ -60,1 +60,0 @@\n-    private final TypeLibrary typeLibrary = TypeLibrary.getInstance();\n@@ -73,1 +72,2 @@\n-        for (Type type : new ArrayList<>(typeLibrary.getTypes())) {\n+        TypeLibrary.initialize();\n+        for (Type type : TypeLibrary.getTypes()) {\n@@ -155,1 +155,1 @@\n-        typeLibrary.addType(configuration.getPlatformEventType());\n+        TypeLibrary.addType(configuration.getPlatformEventType());\n@@ -172,1 +172,1 @@\n-        typeLibrary.removeType(et.getId());\n+        TypeLibrary.removeType(et.getId());\n@@ -263,1 +263,1 @@\n-            List<Type> types = typeLibrary.getVisibleTypes();\n+            List<Type> types = TypeLibrary.getVisibleTypes();\n@@ -306,1 +306,1 @@\n-            if (typeLibrary.clearUnregistered()) {\n+            if (TypeLibrary.clearUnregistered()) {\n@@ -323,1 +323,1 @@\n-            for (Type type : typeLibrary.getTypes()) {\n+            for (Type type : TypeLibrary.getTypes()) {\n@@ -357,1 +357,1 @@\n-        for (Type t : TypeLibrary.getInstance().getTypes()) {\n+        for (Type t : TypeLibrary.getTypes()) {\n@@ -370,1 +370,1 @@\n-        return typeLibrary.getVisibleTypes();\n+        return TypeLibrary.getVisibleTypes();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -63,2 +63,0 @@\n-\n-    private static TypeLibrary instance;\n@@ -67,0 +65,1 @@\n+\n@@ -72,6 +71,2 @@\n-    private TypeLibrary(List<Type> jvmTypes) {\n-        visitReachable(jvmTypes, t -> !types.containsKey(t.getId()), t -> types.put(t.getId(), t));\n-        if (Logger.shouldLog(LogTag.JFR_SYSTEM_METADATA, LogLevel.INFO)) {\n-            Stream<Type> s = types.values().stream().sorted((x, y) -> Long.compare(x.getId(), y.getId()));\n-            s.forEach(t -> t.log(\"Added\", LogTag.JFR_SYSTEM_METADATA, LogLevel.INFO));\n-        }\n+    private TypeLibrary() {\n+        throw new InternalError(\"Don't instantiate\");\n@@ -85,1 +80,0 @@\n-\n@@ -106,13 +100,12 @@\n-    public static TypeLibrary getInstance() {\n-        synchronized (TypeLibrary.class) {\n-            if (instance == null) {\n-                List<Type> jvmTypes;\n-                try {\n-                    jvmTypes = MetadataLoader.createTypes();\n-                    jvmTypes.sort(Comparator.comparingLong(Type::getId));\n-                } catch (IOException e) {\n-                    throw new Error(\"JFR: Could not read metadata\");\n-                }\n-                instance = new TypeLibrary(jvmTypes);\n-            }\n-            return instance;\n+    public static synchronized void initialize() {\n+        List<Type> jvmTypes;\n+        try {\n+            jvmTypes = MetadataLoader.createTypes();\n+            jvmTypes.sort(Comparator.comparingLong(Type::getId));\n+        } catch (IOException e) {\n+            throw new Error(\"JFR: Could not read metadata\");\n+        }\n+        visitReachable(jvmTypes, t -> !types.containsKey(t.getId()), t -> types.put(t.getId(), t));\n+        if (Logger.shouldLog(LogTag.JFR_SYSTEM_METADATA, LogLevel.INFO)) {\n+            Stream<Type> s = types.values().stream().sorted((x, y) -> Long.compare(x.getId(), y.getId()));\n+            s.forEach(t -> t.log(\"Added\", LogTag.JFR_SYSTEM_METADATA, LogLevel.INFO));\n@@ -122,2 +115,2 @@\n-    public Collection<Type> getTypes() {\n-        return types.values();\n+    public static synchronized Collection<Type> getTypes() {\n+        return new ArrayList<>(types.values());\n@@ -127,1 +120,1 @@\n-    public List<Type> getVisibleTypes() {\n+    public static synchronized List<Type> getVisibleTypes() {\n@@ -137,1 +130,1 @@\n-    public static Type createAnnotationType(Class<? extends Annotation> a) {\n+    public static synchronized Type createAnnotationType(Class<? extends Annotation> a) {\n@@ -159,1 +152,1 @@\n-    static AnnotationElement createAnnotation(Annotation annotation) {\n+    public static synchronized AnnotationElement createAnnotation(Annotation annotation) {\n@@ -222,1 +215,2 @@\n-    public static Type createType(Class<?> clazz) {\n+\n+    public static synchronized Type createType(Class<?> clazz) {\n@@ -226,1 +220,1 @@\n-    public static Type createType(Class<?> clazz, List<AnnotationElement> dynamicAnnotations, List<ValueDescriptor> dynamicFields) {\n+    public static synchronized Type createType(Class<?> clazz, List<AnnotationElement> dynamicAnnotations, List<ValueDescriptor> dynamicFields) {\n@@ -330,1 +324,1 @@\n-    static void addImplicitFields(Type type, boolean requestable, boolean hasDuration, boolean hasThread, boolean hasStackTrace, boolean hasCutoff) {\n+    public synchronized static void addImplicitFields(Type type, boolean requestable, boolean hasDuration, boolean hasThread, boolean hasStackTrace, boolean hasCutoff) {\n@@ -426,1 +420,1 @@\n-    public boolean clearUnregistered() {\n+    public static synchronized boolean clearUnregistered() {\n@@ -455,1 +449,1 @@\n-    public void addType(Type type) {\n+    public static synchronized void addType(Type type) {\n@@ -459,1 +453,1 @@\n-    public static void addTypes(List<Type> ts) {\n+    public static synchronized void addTypes(List<Type> ts) {\n@@ -507,1 +501,1 @@\n-    public void removeType(long id) {\n+    public static synchronized void removeType(long id) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":28,"deletions":34,"binary":false,"changes":62,"status":"modified"}]}