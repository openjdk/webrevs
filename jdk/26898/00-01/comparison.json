{"files":[{"patch":"@@ -1565,1 +1565,1 @@\n-  if (allocation->type() != ZPageType::large || !is_multi_partition_enabled() || sum_available() < allocation->size()) {\n+  if (!is_multi_partition_allowed(allocation)) {\n@@ -2196,0 +2196,6 @@\n+bool ZPageAllocator::is_multi_partition_allowed(const ZPageAllocation* allocation) const {\n+  return allocation->type() == ZPageType::large &&\n+         is_multi_partition_enabled() &&\n+         sum_available() >= allocation->size();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -223,0 +223,1 @@\n+  bool is_multi_partition_allowed(const ZPageAllocation* allocation) const;\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-  ZPage* alloc_and_retire_target_page(ZForwarding* forwarding, ZPage* target, uint32_t \/* partition_id - ignored *\/) {\n+  ZPage* alloc_and_retire_target_page(ZForwarding* forwarding, ZPage* target) {\n@@ -524,1 +524,1 @@\n-  ZPage* alloc_and_retire_target_page(ZForwarding* forwarding, ZPage* target, uint32_t partition_id) {\n+  ZPage* alloc_and_retire_target_page(ZForwarding* forwarding, ZPage* target) {\n@@ -537,0 +537,1 @@\n+    const uint32_t partition_id = forwarding->partition_id();\n@@ -914,1 +915,1 @@\n-      ZPage* to_page = _allocator->alloc_and_retire_target_page(_forwarding, target_page, partition_id);\n+      ZPage* to_page = _allocator->alloc_and_retire_target_page(_forwarding, target_page);\n@@ -1113,1 +1114,2 @@\n-      \/\/ Destruct iterator from previous GC-cycle\n+      \/\/ Destruct iterator from previous GC-cycle, or the temporary\n+      \/\/ iterators if this is the first GC-cycle.\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}