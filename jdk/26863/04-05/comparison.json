{"files":[{"patch":"@@ -454,1 +454,1 @@\n-      \/\/ on the class. Linking is done already below in VM_RedefineClasses below, but we need\n+      \/\/ on the class. Linking is also done in VM_RedefineClasses below, but we need\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n- * In another thread retransforming of the class is happening,\n- * We generate a class with big methods. A number of methods and thier size are\n- * chosen to make the linking and retransforming processes running concurrently.\n+ * In another thread retransforming of the class is happening.\n+ * We generate a class with big methods. A number of methods and their size are\n+ * chosen to make the linking and retransforming processes run concurrently.\n@@ -54,1 +54,1 @@\n-    private static final int MIN_LINK_TIME_MS             = 60;   \/\/ This time is chosen to be big enough the linking and retransforming processes are running in parallel.\n+    private static final int MIN_LINK_TIME_MS             = 60;   \/\/ Large enough so the linking and retransforming processes run in parallel.\n@@ -108,1 +108,2 @@\n-    \/\/ We calculate a number of methods the linking time to exceed MIN_LINK_TIME_MS.\n+    \/\/ We need a number of methods such that the linking time is greater than\n+    \/\/ or equal to MIN_LINK_TIME_MS.\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformBigClassTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}