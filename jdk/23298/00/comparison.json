{"files":[{"patch":"@@ -557,1 +557,1 @@\n-\/\/ Ad-hoc mutual exclusion primitives: SpinLock\n+\/\/ Ad-hoc mutual exclusion primitives: spin lock\n@@ -559,1 +559,1 @@\n-\/\/ We employ SpinLocks _only for low-contention, fixed-length\n+\/\/ We employ spin lock _only for low-contention, fixed-length\n@@ -562,9 +562,0 @@\n-\/\/\n-\/\/ TODO-FIXME: ListLock should be of type SpinLock.\n-\/\/ We should make this a 1st-class type, integrated into the lock\n-\/\/ hierarchy as leaf-locks.  Critically, the SpinLock structure\n-\/\/ should have sufficient padding to avoid false-sharing and excessive\n-\/\/ cache-coherency traffic.\n-\n-\n-typedef volatile int SpinLockT;\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}