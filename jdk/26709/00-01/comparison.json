{"files":[{"patch":"@@ -28,1 +28,1 @@\n- * @run main AsExecutor\n+ * @run junit AsExecutor\n@@ -31,0 +31,1 @@\n+import java.io.IOException;\n@@ -32,0 +33,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -36,0 +39,8 @@\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -38,0 +49,1 @@\n+    private static ThreadFactory factory;\n@@ -39,9 +51,4 @@\n-    public static void main(String[] args) throws Exception {\n-        \/\/ create channel groups\n-        ThreadFactory factory = Executors.defaultThreadFactory();\n-        AsynchronousChannelGroup group1 = AsynchronousChannelGroup\n-            .withFixedThreadPool(5, factory);\n-        AsynchronousChannelGroup group2 = AsynchronousChannelGroup\n-            .withCachedThreadPool(Executors.newCachedThreadPool(factory), 0);\n-        AsynchronousChannelGroup group3 = AsynchronousChannelGroup\n-            .withThreadPool(Executors.newFixedThreadPool(10, factory));\n+    @BeforeAll\n+    public static void createThreadFactory() {\n+         factory = Executors.defaultThreadFactory();\n+    }\n@@ -49,5 +56,10 @@\n-        try {\n-            \/\/ execute simple tasks\n-            testSimpleTask(group1);\n-            testSimpleTask(group2);\n-            testSimpleTask(group3);\n+    private static Stream<Arguments> channelGroups() throws IOException {\n+        List<Arguments> list = new ArrayList<Arguments>();\n+        list.add(Arguments.of(AsynchronousChannelGroup\n+            .withFixedThreadPool(5, factory)));\n+        list.add(Arguments.of(AsynchronousChannelGroup\n+            .withCachedThreadPool(Executors.newCachedThreadPool(factory), 0)));\n+        list.add(Arguments.of(AsynchronousChannelGroup\n+            .withThreadPool(Executors.newFixedThreadPool(10, factory))));\n+        return list.stream();\n+    }\n@@ -55,12 +67,14 @@\n-            \/\/ check null tasks with all groups\n-            Executor[] executors = new Executor[] {\n-                (Executor)group1, (Executor)group2, (Executor)group3\n-            };\n-            for (Executor executor : executors) {\n-                try {\n-                    executor.execute(null);\n-                    throw new RuntimeException(\"No NullPointerException\");\n-                } catch (NullPointerException npe) {\n-                    System.out.println(\"Expected NullPointerException \" + npe);\n-                }\n-            }\n+    @ParameterizedTest\n+    @MethodSource(\"channelGroups\")\n+    public void simpleTask(AsynchronousChannelGroup group)\n+        throws InterruptedException\n+    {\n+        try {\n+            Executor executor = (Executor)group;\n+            final CountDownLatch latch = new CountDownLatch(1);\n+            executor.execute(new Runnable() {\n+                    public void run() {\n+                        latch.countDown();\n+                    }\n+                });\n+            latch.await();\n@@ -68,3 +82,1 @@\n-            group1.shutdown();\n-            group2.shutdown();\n-            group3.shutdown();\n+            group.shutdown();\n@@ -74,1 +86,3 @@\n-    static void testSimpleTask(AsynchronousChannelGroup group) throws Exception {\n+    @ParameterizedTest\n+    @MethodSource(\"channelGroups\")\n+    public void nullTask(AsynchronousChannelGroup group) {\n@@ -76,7 +90,6 @@\n-        final CountDownLatch latch = new CountDownLatch(1);\n-        executor.execute(new Runnable() {\n-            public void run() {\n-                latch.countDown();\n-            }\n-        });\n-        latch.await();\n+        try {\n+            assertThrows(NullPointerException.class,\n+                         () -> executor.execute(null));\n+        } finally {\n+            group.shutdown();\n+        }\n","filename":"test\/jdk\/java\/nio\/channels\/AsynchronousChannelGroup\/AsExecutor.java","additions":51,"deletions":38,"binary":false,"changes":89,"status":"modified"}]}