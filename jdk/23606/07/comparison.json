{"files":[{"patch":"@@ -110,0 +110,8 @@\n+\n+    \/**\n+     * Set to true for {@code BuiltInProfile}, false otherwise.\n+     * This check is used in {@link #setData(int, byte[])} to prevent modifying\n+     * Built-in profiles.\n+     *\/\n+    private boolean builtIn = false;\n+\n@@ -115,1 +123,1 @@\n-    private interface BuiltInProfile {\n+    private static class BuiltInProfile {\n@@ -120,14 +128,27 @@\n-        ICC_Profile SRGB = new ICC_ProfileRGB(new ProfileDeferralInfo(\n-               \"sRGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n-\n-        ICC_Profile LRGB = new ICC_ProfileRGB(new ProfileDeferralInfo(\n-               \"LINEAR_RGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n-\n-        ICC_Profile XYZ = new ICC_Profile(new ProfileDeferralInfo(\n-               \"CIEXYZ.pf\", ColorSpace.TYPE_XYZ, 3, CLASS_ABSTRACT));\n-\n-        ICC_Profile PYCC = new ICC_Profile(new ProfileDeferralInfo(\n-               \"PYCC.pf\", ColorSpace.TYPE_3CLR, 3, CLASS_COLORSPACECONVERSION));\n-\n-        ICC_Profile GRAY = new ICC_ProfileGray(new ProfileDeferralInfo(\n-               \"GRAY.pf\", ColorSpace.TYPE_GRAY, 1, CLASS_DISPLAY));\n+        private static final ICC_Profile SRGB;\n+        private static final ICC_Profile LRGB;\n+        private static final ICC_Profile XYZ;\n+        private static final ICC_Profile PYCC;\n+        private static final ICC_Profile GRAY;\n+\n+        static {\n+            SRGB = new ICC_ProfileRGB(new ProfileDeferralInfo(\n+                    \"sRGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n+            SRGB.builtIn = true;\n+\n+            LRGB = new ICC_ProfileRGB(new ProfileDeferralInfo(\n+                    \"LINEAR_RGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n+            LRGB.builtIn = true;\n+\n+            XYZ = new ICC_Profile(new ProfileDeferralInfo(\n+                    \"CIEXYZ.pf\", ColorSpace.TYPE_XYZ, 3, CLASS_ABSTRACT));\n+            XYZ.builtIn = true;\n+\n+            PYCC = new ICC_Profile(new ProfileDeferralInfo(\n+                    \"PYCC.pf\", ColorSpace.TYPE_3CLR, 3, CLASS_COLORSPACECONVERSION));\n+            PYCC.builtIn = true;\n+\n+            GRAY = new ICC_ProfileGray(new ProfileDeferralInfo(\n+                    \"GRAY.pf\", ColorSpace.TYPE_GRAY, 1, CLASS_DISPLAY));\n+            GRAY.builtIn = true;\n+        }\n@@ -1134,0 +1155,10 @@\n+     * <p>\n+     * Note: JDK built-in ICC Profiles cannot be updated using this method\n+     * as it will result in {@code IllegalArgumentException}. JDK built-in\n+     * profiles are those obtained by {@code ICC_Profile.getInstance(int colorSpaceID)}\n+     * where {@code colorSpaceID} is one of the following:\n+     * {@link ColorSpace#CS_sRGB}, {@link ColorSpace#CS_LINEAR_RGB},\n+     * {@link ColorSpace#CS_PYCC}, {@link ColorSpace#CS_GRAY} or\n+     * {@link ColorSpace#CS_CIEXYZ}.\n+     * <\/p>\n+     *\n@@ -1142,0 +1173,3 @@\n+     * @throws IllegalArgumentException if this is a built-in profile for one\n+     *         of the pre-defined ColorSpaces, i.e. those which can be obtained\n+     *         by calling {@code ICC_Profile.getInstance(int colorSpaceID)}\n@@ -1143,0 +1177,1 @@\n+     * @see ColorSpace\n@@ -1145,0 +1180,5 @@\n+        if (builtIn) {\n+            throw new IllegalArgumentException(\"Built-in profile\"\n+                                               + \" cannot be modified\");\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_Profile.java","additions":55,"deletions":15,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8346465\n+ * @summary Tests if setData() throws IAE for BuiltIn profiles\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+\n+public class BuiltInProfileCheck {\n+    private static final int HEADER_TAG = ICC_Profile.icSigHead;\n+    private static final int PROFILE_CLASS_START_INDEX =\n+                                       ICC_Profile.icHdrDeviceClass;\n+    private static final String EXCEPTION_MSG = \"Built-in profile cannot be modified\";\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"CASE 1: Testing BuiltIn Profile\");\n+        updateProfile(true);\n+        System.out.println(\"Passed \\n\");\n+\n+        System.out.println(\"CASE 2: Testing Custom Profile\");\n+        updateProfile(false);\n+        System.out.println(\"Passed \\n\");\n+    }\n+\n+    private static void updateProfile(boolean isBuiltIn) {\n+        ICC_Profile builtInProfile = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n+        \/\/ Create a copy of the built-in profile\n+        ICC_Profile customProfile = ICC_Profile.getInstance(builtInProfile.getData());\n+\n+        ICC_Profile iccProfile = isBuiltIn ? builtInProfile : customProfile;\n+\n+        byte[] headerData = iccProfile.getData(HEADER_TAG);\n+        int index = PROFILE_CLASS_START_INDEX;\n+        \/\/ Set profile class to valid icSigInputClass = 0x73636E72\n+        headerData[index] = 0x73;\n+        headerData[index + 1] = 0x63;\n+        headerData[index + 2] = 0x6E;\n+        headerData[index + 3] = 0x72;\n+\n+        if (isBuiltIn) {\n+            try {\n+                \/\/ Try updating a built-in profile, IAE is expected\n+                iccProfile.setData(HEADER_TAG, headerData);\n+                throw new RuntimeException(\"Test Failed! IAE NOT thrown.\");\n+            } catch (IllegalArgumentException iae) {\n+                if (!iae.getMessage().equalsIgnoreCase(EXCEPTION_MSG)) {\n+                    throw new RuntimeException(\"Test Failed! IAE with exception msg \\\"\"\n+                                               + EXCEPTION_MSG + \"\\\" NOT thrown.\");\n+                }\n+            }\n+        } else {\n+            \/\/ Modifying custom profile should NOT throw IAE\n+            iccProfile.setData(HEADER_TAG, headerData);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/BuiltInProfileCheck.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,3 @@\n-            ICC_Profile icc = ICC_Profile.getInstance(cspace);\n+            ICC_Profile builtInProfile = ICC_Profile.getInstance(cspace);\n+            ICC_Profile icc = ICC_Profile.getInstance(builtInProfile.getData());\n+\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/SetHeaderInfo.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,5 @@\n+    private static final int[] colorSpace = new int [] {\n+            ColorSpace.CS_sRGB, ColorSpace.CS_LINEAR_RGB,\n+            ColorSpace.CS_PYCC, ColorSpace.CS_GRAY,\n+            ColorSpace.CS_CIEXYZ\n+    };\n@@ -35,8 +40,0 @@\n-        test(ICC_Profile.getInstance(ColorSpace.CS_sRGB));\n-        test(ICC_Profile.getInstance(ColorSpace.CS_LINEAR_RGB));\n-        test(ICC_Profile.getInstance(ColorSpace.CS_CIEXYZ));\n-        test(ICC_Profile.getInstance(ColorSpace.CS_PYCC));\n-        test(ICC_Profile.getInstance(ColorSpace.CS_GRAY));\n-    }\n-\n-    private static void test(ICC_Profile profile) {\n@@ -44,4 +41,9 @@\n-        try {\n-            profile.setData(ICC_Profile.icSigCmykData, tagData);\n-        } catch (IllegalArgumentException e) {\n-            return;\n+        for (int cs : colorSpace) {\n+            ICC_Profile builtInProfile = ICC_Profile.getInstance(cs);\n+            ICC_Profile profile = ICC_Profile.getInstance(builtInProfile.getData());\n+            try {\n+                profile.setData(ICC_Profile.icSigCmykData, tagData);\n+            } catch (IllegalArgumentException e) {\n+                return;\n+            }\n+            throw new RuntimeException(\"IllegalArgumentException expected\");\n@@ -49,1 +51,0 @@\n-        throw new RuntimeException(\"IllegalArgumentException expected\");\n","filename":"test\/jdk\/java\/awt\/color\/ICC_ProfileSetNullDataTest.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-\n@@ -50,1 +49,2 @@\n-            profile = ICC_Profile.getInstance(CS_GRAY);\n+            ICC_Profile builtInProfile = ICC_Profile.getInstance(CS_GRAY);\n+            profile = ICC_Profile.getInstance(builtInProfile.getData());\n","filename":"test\/jdk\/sun\/java2d\/cmm\/ProfileOp\/SetDataTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}