{"files":[{"patch":"@@ -32,0 +32,2 @@\n+import java.io.IOException;\n+import java.util.Map;\n@@ -35,2 +37,1 @@\n-    private static final int PROFILE_CLASS_START_INDEX =\n-                                       ICC_Profile.icHdrDeviceClass;\n+    private static final int INDEX = ICC_Profile.icHdrDeviceClass;\n@@ -39,1 +40,9 @@\n-    public static void main(String[] args) {\n+    private static final Map<Integer, String> colorSpace = Map.of(\n+            ColorSpace.CS_sRGB, \"CS_sRGB\",\n+            ColorSpace.CS_PYCC, \"CS_PYCC\",\n+            ColorSpace.CS_GRAY, \"CS_GRAY\",\n+            ColorSpace.CS_CIEXYZ, \"CS_CIEXYZ\",\n+            ColorSpace.CS_LINEAR_RGB, \"CS_LINEAR_RGB\"\n+    );\n+\n+    public static void main(String[] args) throws IOException {\n@@ -41,1 +50,3 @@\n-        updateProfile(true);\n+        for (int cs : colorSpace.keySet()) {\n+            updateProfile(true, cs);\n+        }\n@@ -45,1 +56,1 @@\n-        updateProfile(false);\n+        updateProfile(false, ColorSpace.CS_sRGB);\n@@ -47,1 +58,0 @@\n-    }\n@@ -49,4 +59,10 @@\n-    private static void updateProfile(boolean isBuiltIn) {\n-        ICC_Profile builtInProfile = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n-        \/\/ Create a copy of the built-in profile\n-        ICC_Profile customProfile = ICC_Profile.getInstance(builtInProfile.getData());\n+        System.out.println(\"CASE 4: Testing Built-In Profile\"\n+                           + \" Serialization & Deserialization\");\n+        testSerialization(true);\n+        System.out.println(\"Passed\\n\");\n+\n+        System.out.println(\"CASE 5: Testing Custom Profile\"\n+                           + \" Serialization & Deserialization\");\n+        testSerialization(false);\n+        System.out.println(\"Passed\\n\");\n+    }\n@@ -54,1 +70,5 @@\n-        ICC_Profile iccProfile = isBuiltIn ? builtInProfile : customProfile;\n+    private static void updateProfile(boolean isBuiltIn, int cs) {\n+        ICC_Profile builtInProfile = ICC_Profile.getInstance(cs);\n+        \/\/ if isBuiltIn=true use builtInProfile else create a copy\n+        ICC_Profile iccProfile = isBuiltIn ? builtInProfile\n+                                 : ICC_Profile.getInstance(builtInProfile.getData());\n@@ -57,1 +77,0 @@\n-        int index = PROFILE_CLASS_START_INDEX;\n@@ -59,4 +78,4 @@\n-        headerData[index] = 0x73;\n-        headerData[index + 1] = 0x63;\n-        headerData[index + 2] = 0x6E;\n-        headerData[index + 3] = 0x72;\n+        headerData[INDEX] = 0x73;\n+        headerData[INDEX + 1] = 0x63;\n+        headerData[INDEX + 2] = 0x6E;\n+        headerData[INDEX + 3] = 0x72;\n@@ -65,0 +84,1 @@\n+            System.out.println(\"Testing: \" + colorSpace.get(cs));\n@@ -68,1 +88,2 @@\n-                throw new RuntimeException(\"Test Failed! IAE NOT thrown.\");\n+                throw new RuntimeException(\"Test Failed! IAE NOT thrown for profile\"\n+                                           + colorSpace.get(cs));\n@@ -72,1 +93,2 @@\n-                                               + EXCEPTION_MSG + \"\\\" NOT thrown.\");\n+                                               + EXCEPTION_MSG + \"\\\" NOT thrown for profile \"\n+                                               + colorSpace.get(cs));\n@@ -80,0 +102,22 @@\n+\n+    \/\/ this test is added to check the ICC_Profile's transient isBuiltIn flag\n+    private static void testSerialization(boolean isBuiltIn)\n+                                                 throws IOException {\n+        ICC_Profile builtInProfile = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n+        \/\/ if isBuiltIn=true use builtInProfile else create a copy\n+        ICC_Profile iccProfile = isBuiltIn ? builtInProfile\n+                                 : ICC_Profile.getInstance(builtInProfile.getData());\n+\n+        iccProfile.write(\"Serialized_sRGB.icc\");\n+        ICC_Profile deSerialProfile = ICC_Profile.getInstance(\"Serialized_sRGB.icc\");\n+\n+        byte[] headerData = deSerialProfile.getData(HEADER_TAG);\n+        \/\/ Set profile class to valid icSigInputClass = 0x73636E72\n+        headerData[INDEX] = 0x73;\n+        headerData[INDEX + 1] = 0x63;\n+        headerData[INDEX + 2] = 0x6E;\n+        headerData[INDEX + 3] = 0x72;\n+\n+        \/\/ Modifying a deserialized profile should not throw IAE\n+        deSerialProfile.setData(HEADER_TAG, headerData);\n+    }\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/BuiltInProfileCheck.java","additions":62,"deletions":18,"binary":false,"changes":80,"status":"modified"}]}