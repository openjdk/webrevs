{"files":[{"patch":"@@ -3522,2 +3522,2 @@\n-      const Node* store_offsets = store_vector->offsets();\n-      const Node* mem_offsets = mem_vector->offsets();\n+      const Node* store_indices = store_vector->indices();\n+      const Node* mem_indices = mem_vector->indices();\n@@ -3526,1 +3526,1 @@\n-      \/\/ Ensure types, offsets, and masks match\n+      \/\/ Ensure types, indices, and masks match\n@@ -3528,2 +3528,2 @@\n-          ((store_offsets == nullptr) == (mem_offsets == nullptr) &&\n-           (store_offsets == nullptr || store_offsets->eqv_uncast(mem_offsets))) &&\n+          ((store_indices == nullptr) == (mem_indices == nullptr) &&\n+           (store_indices == nullptr || store_indices->eqv_uncast(mem_indices))) &&\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -893,1 +893,0 @@\n-  enum { Offsets = 3 };\n@@ -951,1 +950,1 @@\n-  virtual Node* offsets() const { return nullptr; }\n+  virtual Node* indices() const { return nullptr; }\n@@ -967,1 +966,1 @@\n-   enum { Offsets = 4 };\n+   enum { Indices = 4 };\n@@ -979,1 +978,1 @@\n-   virtual Node* offsets() const override { return in(Offsets); }\n+   virtual Node* indices() const override { return in(Indices); }\n@@ -1007,1 +1006,0 @@\n-  enum { Mask = 3 };\n@@ -1032,3 +1030,0 @@\n-  enum { Offsets = 3,\n-         Mask\n-  };\n@@ -1062,1 +1057,1 @@\n-   enum { Offsets = 4,\n+   enum { Indices = 4,\n@@ -1080,1 +1075,1 @@\n-   virtual Node* offsets() const override { return in(Offsets); }\n+   virtual Node* indices() const override { return in(Indices); }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -67,13 +67,13 @@\n-    \/\/ Offsets\n-    private static final int[] longOffsets = new int[L_SPECIES.length()];\n-    private static final int[] longOffsets2 = new int[L_SPECIES.length()];\n-    private static final int[] duplicateLongOffsets = new int[L_SPECIES.length()];\n-    private static final int[] intOffsets = new int[I_SPECIES.length()];\n-    private static final int[] intOffsets2 = new int[I_SPECIES.length()];\n-    private static final int[] duplicateIntOffsets = new int[I_SPECIES.length()];\n-    private static final int[] doubleOffsets = new int[D_SPECIES.length()];\n-    private static final int[] doubleOffsets2 = new int[D_SPECIES.length()];\n-    private static final int[] duplicateDoubleOffsets = new int[D_SPECIES.length()];\n-    private static final int[] floatOffsets = new int[F_SPECIES.length()];\n-    private static final int[] floatOffsets2 = new int[F_SPECIES.length()];\n-    private static final int[] duplicateFloatOffsets = new int[F_SPECIES.length()];\n+    \/\/ Indices\n+    private static final int[] longIndices = new int[L_SPECIES.length()];\n+    private static final int[] longIndices2 = new int[L_SPECIES.length()];\n+    private static final int[] duplicateLongIndices = new int[L_SPECIES.length()];\n+    private static final int[] intIndices = new int[I_SPECIES.length()];\n+    private static final int[] intIndices2 = new int[I_SPECIES.length()];\n+    private static final int[] duplicateIntIndices = new int[I_SPECIES.length()];\n+    private static final int[] doubleIndices = new int[D_SPECIES.length()];\n+    private static final int[] doubleIndices2 = new int[D_SPECIES.length()];\n+    private static final int[] duplicateDoubleIndices = new int[D_SPECIES.length()];\n+    private static final int[] floatIndices = new int[F_SPECIES.length()];\n+    private static final int[] floatIndices2 = new int[F_SPECIES.length()];\n+    private static final int[] duplicateFloatIndices = new int[F_SPECIES.length()];\n@@ -98,1 +98,1 @@\n-    \/\/ Filling vectors\/offsets\/masks\n+    \/\/ Filling vectors\/indices\/masks\n@@ -105,3 +105,3 @@\n-            longOffsets[i] = (i + L_SPECIES.length() \/ 2) % L_SPECIES.length();\n-            longOffsets2[i] = (L_SPECIES.length() - i) % L_SPECIES.length();\n-            duplicateLongOffsets[i] = longOffsets[i] \/ 2;\n+            longIndices[i] = (i + L_SPECIES.length() \/ 2) % L_SPECIES.length();\n+            longIndices2[i] = (L_SPECIES.length() - i) % L_SPECIES.length();\n+            duplicateLongIndices[i] = longIndices[i] \/ 2;\n@@ -118,3 +118,3 @@\n-            intOffsets[i] = (i + I_SPECIES.length() \/ 2) % I_SPECIES.length();\n-            intOffsets2[i] = (I_SPECIES.length() - i) % I_SPECIES.length();\n-            duplicateIntOffsets[i] = intOffsets[i] \/ 2;\n+            intIndices[i] = (i + I_SPECIES.length() \/ 2) % I_SPECIES.length();\n+            intIndices2[i] = (I_SPECIES.length() - i) % I_SPECIES.length();\n+            duplicateIntIndices[i] = intIndices[i] \/ 2;\n@@ -131,3 +131,3 @@\n-            doubleOffsets[i] = (i + D_SPECIES.length() \/ 2) % D_SPECIES.length();\n-            doubleOffsets2[i] = (D_SPECIES.length() - i) % D_SPECIES.length();\n-            duplicateDoubleOffsets[i] = doubleOffsets[i] \/ 2;\n+            doubleIndices[i] = (i + D_SPECIES.length() \/ 2) % D_SPECIES.length();\n+            doubleIndices2[i] = (D_SPECIES.length() - i) % D_SPECIES.length();\n+            duplicateDoubleIndices[i] = doubleIndices[i] \/ 2;\n@@ -144,3 +144,3 @@\n-            floatOffsets[i] = (i + F_SPECIES.length() \/ 2) % F_SPECIES.length();\n-            floatOffsets2[i] = (F_SPECIES.length() - i) % F_SPECIES.length();\n-            duplicateFloatOffsets[i] = floatOffsets[i] \/ 2;\n+            floatIndices[i] = (i + F_SPECIES.length() \/ 2) % F_SPECIES.length();\n+            floatIndices2[i] = (F_SPECIES.length() - i) % F_SPECIES.length();\n+            duplicateFloatIndices[i] = floatIndices[i] \/ 2;\n@@ -161,2 +161,2 @@\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray2, 0, longOffsets, 0);\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray2, 0, longIndices, 0);\n@@ -168,3 +168,3 @@\n-    public static void testTwoLongVectorLoadGatherNotEqualOffsets() {\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets2, 0);\n+    public static void testTwoLongVectorLoadGatherNotEqualIndices() {\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices2, 0);\n@@ -178,1 +178,1 @@\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n@@ -193,2 +193,2 @@\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n@@ -217,2 +217,2 @@\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0, longVectorMask);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0, longVectorMask);\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0, longVectorMask);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0, longVectorMask);\n@@ -225,2 +225,2 @@\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0, longVectorMask);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0, longVectorMask2);\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0, longVectorMask);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0, longVectorMask2);\n@@ -232,3 +232,3 @@\n-    public static void testTwoLongVectorLoadGatherMaskedNotEqualOffsets() {\n-        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0, longVectorMask);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets2, 0, longVectorMask);\n+    public static void testTwoLongVectorLoadGatherMaskedNotEqualIndices() {\n+        LongVector res = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0, longVectorMask);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices2, 0, longVectorMask);\n@@ -244,2 +244,2 @@\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray2, 0, intOffsets, 0);\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray2, 0, intIndices, 0);\n@@ -251,3 +251,3 @@\n-    public static void testTwoIntVectorLoadGatherNotEqualOffsets() {\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets2, 0);\n+    public static void testTwoIntVectorLoadGatherNotEqualIndices() {\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices2, 0);\n@@ -261,1 +261,1 @@\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n@@ -276,2 +276,2 @@\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n@@ -300,2 +300,2 @@\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0, intVectorMask);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0, intVectorMask);\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0, intVectorMask);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0, intVectorMask);\n@@ -308,2 +308,2 @@\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0, intVectorMask);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0, intVectorMask2);\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0, intVectorMask);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0, intVectorMask2);\n@@ -315,3 +315,3 @@\n-    public static void testTwoIntVectorLoadGatherMaskedNotEqualOffsets() {\n-        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0, intVectorMask);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets2, 0, intVectorMask);\n+    public static void testTwoIntVectorLoadGatherMaskedNotEqualIndices() {\n+        IntVector res = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0, intVectorMask);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices2, 0, intVectorMask);\n@@ -327,2 +327,2 @@\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray2, 0, doubleOffsets, 0);\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray2, 0, doubleIndices, 0);\n@@ -334,3 +334,3 @@\n-    public static void testTwoDoubleVectorLoadGatherNotEqualOffsets() {\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets2, 0);\n+    public static void testTwoDoubleVectorLoadGatherNotEqualIndices() {\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices2, 0);\n@@ -344,1 +344,1 @@\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n@@ -359,2 +359,2 @@\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n@@ -383,2 +383,2 @@\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0, doubleVectorMask);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0, doubleVectorMask);\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0, doubleVectorMask);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0, doubleVectorMask);\n@@ -391,2 +391,2 @@\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0, doubleVectorMask);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0, doubleVectorMask2);\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0, doubleVectorMask);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0, doubleVectorMask2);\n@@ -398,3 +398,3 @@\n-    public static void testTwoDoubleVectorLoadGatherMaskedNotEqualOffsets() {\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0, doubleVectorMask);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets2, 0, doubleVectorMask);\n+    public static void testTwoDoubleVectorLoadGatherMaskedNotEqualIndices() {\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0, doubleVectorMask);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices2, 0, doubleVectorMask);\n@@ -410,2 +410,2 @@\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray2, 0, floatOffsets, 0);\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray2, 0, floatIndices, 0);\n@@ -417,3 +417,3 @@\n-    public static void testTwoFloatVectorLoadGatherNotEqualOffsets() {\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets2, 0);\n+    public static void testTwoFloatVectorLoadGatherNotEqualIndices() {\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices2, 0);\n@@ -427,1 +427,1 @@\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n@@ -442,2 +442,2 @@\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n@@ -466,2 +466,2 @@\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0, floatVectorMask);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0, floatVectorMask);\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0, floatVectorMask);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0, floatVectorMask);\n@@ -474,2 +474,2 @@\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0, floatVectorMask);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0, floatVectorMask2);\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0, floatVectorMask);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0, floatVectorMask2);\n@@ -481,3 +481,3 @@\n-    public static void testTwoFloatVectorLoadGatherMaskedNotEqualOffsets() {\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0, floatVectorMask);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets2, 0, floatVectorMask);\n+    public static void testTwoFloatVectorLoadGatherMaskedNotEqualIndices() {\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0, floatVectorMask);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices2, 0, floatVectorMask);\n@@ -497,2 +497,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0);\n-        longVector2.intoArray(res2, 0, longOffsets, 0);\n+        longVector.intoArray(res, 0, longIndices, 0);\n+        longVector2.intoArray(res2, 0, longIndices, 0);\n@@ -504,1 +504,1 @@\n-    public static void testTwoLongVectorStoreScatterNotEqualOffsets() {\n+    public static void testTwoLongVectorStoreScatterNotEqualIndices() {\n@@ -507,2 +507,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0);\n-        longVector.intoArray(res2, 0, longOffsets2, 0);\n+        longVector.intoArray(res, 0, longIndices, 0);\n+        longVector.intoArray(res2, 0, longIndices2, 0);\n@@ -518,1 +518,1 @@\n-        longVector.intoArray(res2, 0, longOffsets, 0);\n+        longVector.intoArray(res2, 0, longIndices, 0);\n@@ -537,2 +537,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0);\n-        longVector.intoArray(res2, 0, longOffsets, 0);\n+        longVector.intoArray(res, 0, longIndices, 0);\n+        longVector.intoArray(res2, 0, longIndices, 0);\n@@ -567,2 +567,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0, longVectorMask);\n-        longVector.intoArray(res2, 0, longOffsets, 0, longVectorMask);\n+        longVector.intoArray(res, 0, longIndices, 0, longVectorMask);\n+        longVector.intoArray(res2, 0, longIndices, 0, longVectorMask);\n@@ -577,2 +577,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0, longVectorMask);\n-        longVector.intoArray(res2, 0, longOffsets, 0, longVectorMask2);\n+        longVector.intoArray(res, 0, longIndices, 0, longVectorMask);\n+        longVector.intoArray(res2, 0, longIndices, 0, longVectorMask2);\n@@ -584,1 +584,1 @@\n-    public static void testTwoLongVectorStoreScatterMaskedNotEqualOffsets() {\n+    public static void testTwoLongVectorStoreScatterMaskedNotEqualIndices() {\n@@ -587,2 +587,2 @@\n-        longVector.intoArray(res, 0, longOffsets, 0, longVectorMask);\n-        longVector.intoArray(res2, 0, longOffsets2, 0, longVectorMask);\n+        longVector.intoArray(res, 0, longIndices, 0, longVectorMask);\n+        longVector.intoArray(res2, 0, longIndices2, 0, longVectorMask);\n@@ -600,2 +600,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0);\n-        intVector2.intoArray(res2, 0, intOffsets, 0);\n+        intVector.intoArray(res, 0, intIndices, 0);\n+        intVector2.intoArray(res2, 0, intIndices, 0);\n@@ -607,1 +607,1 @@\n-    public static void testTwoIntVectorStoreScatterNotEqualOffsets() {\n+    public static void testTwoIntVectorStoreScatterNotEqualIndices() {\n@@ -610,2 +610,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0);\n-        intVector.intoArray(res2, 0, intOffsets2, 0);\n+        intVector.intoArray(res, 0, intIndices, 0);\n+        intVector.intoArray(res2, 0, intIndices2, 0);\n@@ -621,1 +621,1 @@\n-        intVector.intoArray(res2, 0, intOffsets, 0);\n+        intVector.intoArray(res2, 0, intIndices, 0);\n@@ -640,2 +640,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0);\n-        intVector.intoArray(res2, 0, intOffsets, 0);\n+        intVector.intoArray(res, 0, intIndices, 0);\n+        intVector.intoArray(res2, 0, intIndices, 0);\n@@ -670,2 +670,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0, intVectorMask);\n-        intVector.intoArray(res2, 0, intOffsets, 0, intVectorMask);\n+        intVector.intoArray(res, 0, intIndices, 0, intVectorMask);\n+        intVector.intoArray(res2, 0, intIndices, 0, intVectorMask);\n@@ -680,2 +680,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0, intVectorMask);\n-        intVector.intoArray(res2, 0, intOffsets, 0, intVectorMask2);\n+        intVector.intoArray(res, 0, intIndices, 0, intVectorMask);\n+        intVector.intoArray(res2, 0, intIndices, 0, intVectorMask2);\n@@ -687,1 +687,1 @@\n-    public static void testTwoIntVectorStoreScatterMaskedNotEqualOffsets() {\n+    public static void testTwoIntVectorStoreScatterMaskedNotEqualIndices() {\n@@ -690,2 +690,2 @@\n-        intVector.intoArray(res, 0, intOffsets, 0, intVectorMask);\n-        intVector.intoArray(res2, 0, intOffsets2, 0, intVectorMask);\n+        intVector.intoArray(res, 0, intIndices, 0, intVectorMask);\n+        intVector.intoArray(res2, 0, intIndices2, 0, intVectorMask);\n@@ -703,2 +703,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0);\n-        doubleVector2.intoArray(res2, 0, doubleOffsets, 0);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0);\n+        doubleVector2.intoArray(res2, 0, doubleIndices, 0);\n@@ -710,1 +710,1 @@\n-    public static void testTwoDoubleVectorStoreScatterNotEqualOffsets() {\n+    public static void testTwoDoubleVectorStoreScatterNotEqualIndices() {\n@@ -713,2 +713,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0);\n-        doubleVector.intoArray(res2, 0, doubleOffsets2, 0);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0);\n+        doubleVector.intoArray(res2, 0, doubleIndices2, 0);\n@@ -724,1 +724,1 @@\n-        doubleVector.intoArray(res2, 0, doubleOffsets, 0);\n+        doubleVector.intoArray(res2, 0, doubleIndices, 0);\n@@ -743,2 +743,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0);\n-        doubleVector.intoArray(res2, 0, doubleOffsets, 0);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0);\n+        doubleVector.intoArray(res2, 0, doubleIndices, 0);\n@@ -773,2 +773,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0, doubleVectorMask);\n-        doubleVector.intoArray(res2, 0, doubleOffsets, 0, doubleVectorMask);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0, doubleVectorMask);\n+        doubleVector.intoArray(res2, 0, doubleIndices, 0, doubleVectorMask);\n@@ -783,2 +783,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0, doubleVectorMask);\n-        doubleVector.intoArray(res2, 0, doubleOffsets, 0, doubleVectorMask2);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0, doubleVectorMask);\n+        doubleVector.intoArray(res2, 0, doubleIndices, 0, doubleVectorMask2);\n@@ -790,1 +790,1 @@\n-    public static void testTwoDoubleVectorStoreScatterMaskedNotEqualOffsets() {\n+    public static void testTwoDoubleVectorStoreScatterMaskedNotEqualIndices() {\n@@ -793,2 +793,2 @@\n-        doubleVector.intoArray(res, 0, doubleOffsets, 0, doubleVectorMask);\n-        doubleVector.intoArray(res2, 0, doubleOffsets2, 0, doubleVectorMask);\n+        doubleVector.intoArray(res, 0, doubleIndices, 0, doubleVectorMask);\n+        doubleVector.intoArray(res2, 0, doubleIndices2, 0, doubleVectorMask);\n@@ -806,2 +806,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0);\n-        floatVector2.intoArray(res2, 0, floatOffsets, 0);\n+        floatVector.intoArray(res, 0, floatIndices, 0);\n+        floatVector2.intoArray(res2, 0, floatIndices, 0);\n@@ -813,1 +813,1 @@\n-    public static void testTwoFloatVectorStoreScatterNotEqualOffsets() {\n+    public static void testTwoFloatVectorStoreScatterNotEqualIndices() {\n@@ -816,2 +816,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0);\n-        floatVector.intoArray(res2, 0, floatOffsets2, 0);\n+        floatVector.intoArray(res, 0, floatIndices, 0);\n+        floatVector.intoArray(res2, 0, floatIndices2, 0);\n@@ -827,1 +827,1 @@\n-        floatVector.intoArray(res2, 0, floatOffsets, 0);\n+        floatVector.intoArray(res2, 0, floatIndices, 0);\n@@ -846,2 +846,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0);\n-        floatVector.intoArray(res2, 0, floatOffsets, 0);\n+        floatVector.intoArray(res, 0, floatIndices, 0);\n+        floatVector.intoArray(res2, 0, floatIndices, 0);\n@@ -876,2 +876,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0, floatVectorMask);\n-        floatVector.intoArray(res2, 0, floatOffsets, 0, floatVectorMask);\n+        floatVector.intoArray(res, 0, floatIndices, 0, floatVectorMask);\n+        floatVector.intoArray(res2, 0, floatIndices, 0, floatVectorMask);\n@@ -886,2 +886,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0, floatVectorMask);\n-        floatVector.intoArray(res2, 0, floatOffsets, 0, floatVectorMask2);\n+        floatVector.intoArray(res, 0, floatIndices, 0, floatVectorMask);\n+        floatVector.intoArray(res2, 0, floatIndices, 0, floatVectorMask2);\n@@ -893,1 +893,1 @@\n-    public static void testTwoFloatVectorStoreScatterMaskedNotEqualOffsets() {\n+    public static void testTwoFloatVectorStoreScatterMaskedNotEqualIndices() {\n@@ -896,2 +896,2 @@\n-        floatVector.intoArray(res, 0, floatOffsets, 0, floatVectorMask);\n-        floatVector.intoArray(res2, 0, floatOffsets2, 0, floatVectorMask);\n+        floatVector.intoArray(res, 0, floatIndices, 0, floatVectorMask);\n+        floatVector.intoArray(res2, 0, floatIndices2, 0, floatVectorMask);\n@@ -911,1 +911,1 @@\n-        LongVector res = LongVector.fromArray(L_SPECIES, array, 0, longOffsets, 0);\n+        LongVector res = LongVector.fromArray(L_SPECIES, array, 0, longIndices, 0);\n@@ -919,1 +919,1 @@\n-        longVector.intoArray(array, 0, longOffsets, 0);\n+        longVector.intoArray(array, 0, longIndices, 0);\n@@ -944,1 +944,1 @@\n-    public static void testLongVectorLoadGatherStoreScatterDuplicateOffsetsVector() {\n+    public static void testLongVectorLoadGatherStoreScatterDuplicateIndicesVector() {\n@@ -946,2 +946,2 @@\n-        longVector.intoArray(res, 0, duplicateLongOffsets, 0);\n-        LongVector res2 = LongVector.fromArray(L_SPECIES, res, 0, duplicateLongOffsets, 0);\n+        longVector.intoArray(res, 0, duplicateLongIndices, 0);\n+        LongVector res2 = LongVector.fromArray(L_SPECIES, res, 0, duplicateLongIndices, 0);\n@@ -977,1 +977,1 @@\n-        IntVector res = IntVector.fromArray(I_SPECIES, array, 0, intOffsets, 0);\n+        IntVector res = IntVector.fromArray(I_SPECIES, array, 0, intIndices, 0);\n@@ -985,1 +985,1 @@\n-        intVector.intoArray(array, 0, intOffsets, 0);\n+        intVector.intoArray(array, 0, intIndices, 0);\n@@ -1010,1 +1010,1 @@\n-    public static void testIntVectorLoadGatherStoreScatterDuplicateOffsetsVector() {\n+    public static void testIntVectorLoadGatherStoreScatterDuplicateIndicesVector() {\n@@ -1012,2 +1012,2 @@\n-        intVector.intoArray(res, 0, duplicateIntOffsets, 0);\n-        IntVector res2 = IntVector.fromArray(I_SPECIES, res, 0, duplicateIntOffsets, 0);\n+        intVector.intoArray(res, 0, duplicateIntIndices, 0);\n+        IntVector res2 = IntVector.fromArray(I_SPECIES, res, 0, duplicateIntIndices, 0);\n@@ -1043,1 +1043,1 @@\n-        DoubleVector res = DoubleVector.fromArray(D_SPECIES, array, 0, doubleOffsets, 0);\n+        DoubleVector res = DoubleVector.fromArray(D_SPECIES, array, 0, doubleIndices, 0);\n@@ -1051,1 +1051,1 @@\n-        doubleVector.intoArray(array, 0, doubleOffsets, 0);\n+        doubleVector.intoArray(array, 0, doubleIndices, 0);\n@@ -1076,1 +1076,1 @@\n-    public static void testDoubleVectorLoadGatherStoreScatterDuplicateOffsetsVector() {\n+    public static void testDoubleVectorLoadGatherStoreScatterDuplicateIndicesVector() {\n@@ -1078,2 +1078,2 @@\n-        doubleVector.intoArray(res, 0, duplicateDoubleOffsets, 0);\n-        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, res, 0, duplicateDoubleOffsets, 0);\n+        doubleVector.intoArray(res, 0, duplicateDoubleIndices, 0);\n+        DoubleVector res2 = DoubleVector.fromArray(D_SPECIES, res, 0, duplicateDoubleIndices, 0);\n@@ -1109,1 +1109,1 @@\n-        FloatVector res = FloatVector.fromArray(F_SPECIES, array, 0, floatOffsets, 0);\n+        FloatVector res = FloatVector.fromArray(F_SPECIES, array, 0, floatIndices, 0);\n@@ -1117,1 +1117,1 @@\n-        floatVector.intoArray(array, 0, floatOffsets, 0);\n+        floatVector.intoArray(array, 0, floatIndices, 0);\n@@ -1142,1 +1142,1 @@\n-    public static void testFloatVectorLoadGatherStoreScatterDuplicateOffsetsVector() {\n+    public static void testFloatVectorLoadGatherStoreScatterDuplicateIndicesVector() {\n@@ -1144,2 +1144,2 @@\n-        floatVector.intoArray(res, 0, duplicateFloatOffsets, 0);\n-        FloatVector res2 = FloatVector.fromArray(F_SPECIES, res, 0, duplicateFloatOffsets, 0);\n+        floatVector.intoArray(res, 0, duplicateFloatIndices, 0);\n+        FloatVector res2 = FloatVector.fromArray(F_SPECIES, res, 0, duplicateFloatIndices, 0);\n@@ -1176,1 +1176,1 @@\n-        LongVector vector = LongVector.fromArray(L_SPECIES, longArray, 0, longOffsets, 0);\n+        LongVector vector = LongVector.fromArray(L_SPECIES, longArray, 0, longIndices, 0);\n@@ -1186,1 +1186,1 @@\n-        vector.intoArray(res, 0, longOffsets, 0);\n+        vector.intoArray(res, 0, longIndices, 0);\n@@ -1210,1 +1210,1 @@\n-    public static void testLongVectorStoreScatterLoadGatherDuplicateOffsetsVector() {\n+    public static void testLongVectorStoreScatterLoadGatherDuplicateIndicesVector() {\n@@ -1212,2 +1212,2 @@\n-        LongVector vector = LongVector.fromArray(L_SPECIES, longArray, 0, duplicateLongOffsets, 0);\n-        vector.intoArray(res, 0, duplicateLongOffsets, 0);\n+        LongVector vector = LongVector.fromArray(L_SPECIES, longArray, 0, duplicateLongIndices, 0);\n+        vector.intoArray(res, 0, duplicateLongIndices, 0);\n@@ -1233,1 +1233,1 @@\n-        IntVector vector = IntVector.fromArray(I_SPECIES, intArray, 0, intOffsets, 0);\n+        IntVector vector = IntVector.fromArray(I_SPECIES, intArray, 0, intIndices, 0);\n@@ -1243,1 +1243,1 @@\n-        vector.intoArray(res, 0, intOffsets, 0);\n+        vector.intoArray(res, 0, intIndices, 0);\n@@ -1267,1 +1267,1 @@\n-    public static void testIntVectorStoreScatterLoadGatherDuplicateOffsetsVector() {\n+    public static void testIntVectorStoreScatterLoadGatherDuplicateIndicesVector() {\n@@ -1269,2 +1269,2 @@\n-        IntVector vector = IntVector.fromArray(I_SPECIES, intArray, 0, duplicateIntOffsets, 0);\n-        vector.intoArray(res, 0, duplicateIntOffsets, 0);\n+        IntVector vector = IntVector.fromArray(I_SPECIES, intArray, 0, duplicateIntIndices, 0);\n+        vector.intoArray(res, 0, duplicateIntIndices, 0);\n@@ -1290,1 +1290,1 @@\n-        DoubleVector vector = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleOffsets, 0);\n+        DoubleVector vector = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, doubleIndices, 0);\n@@ -1300,1 +1300,1 @@\n-        vector.intoArray(res, 0, doubleOffsets, 0);\n+        vector.intoArray(res, 0, doubleIndices, 0);\n@@ -1324,1 +1324,1 @@\n-    public static void testDoubleVectorStoreScatterLoadGatherDuplicateOffsetsVector() {\n+    public static void testDoubleVectorStoreScatterLoadGatherDuplicateIndicesVector() {\n@@ -1326,2 +1326,2 @@\n-        DoubleVector vector = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, duplicateDoubleOffsets, 0);\n-        vector.intoArray(res, 0, duplicateDoubleOffsets, 0);\n+        DoubleVector vector = DoubleVector.fromArray(D_SPECIES, doubleArray, 0, duplicateDoubleIndices, 0);\n+        vector.intoArray(res, 0, duplicateDoubleIndices, 0);\n@@ -1347,1 +1347,1 @@\n-        FloatVector vector = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatOffsets, 0);\n+        FloatVector vector = FloatVector.fromArray(F_SPECIES, floatArray, 0, floatIndices, 0);\n@@ -1357,1 +1357,1 @@\n-        vector.intoArray(res, 0, floatOffsets, 0);\n+        vector.intoArray(res, 0, floatIndices, 0);\n@@ -1381,1 +1381,1 @@\n-    public static void testFloatVectorStoreScatterLoadGatherDuplicateOffsetsVector() {\n+    public static void testFloatVectorStoreScatterLoadGatherDuplicateIndicesVector() {\n@@ -1383,2 +1383,2 @@\n-        FloatVector vector = FloatVector.fromArray(F_SPECIES, floatArray, 0, duplicateFloatOffsets, 0);\n-        vector.intoArray(res, 0, duplicateFloatOffsets, 0);\n+        FloatVector vector = FloatVector.fromArray(F_SPECIES, floatArray, 0, duplicateFloatIndices, 0);\n+        vector.intoArray(res, 0, duplicateFloatIndices, 0);\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorGatherMaskFoldingTest.java","additions":186,"deletions":186,"binary":false,"changes":372,"status":"modified"}]}