{"files":[{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -108,3 +106,1 @@\n-                PrivilegedAction<Enumeration<InetAddress>> pa = ni::getInetAddresses;\n-                @SuppressWarnings(\"removal\")\n-                Enumeration<InetAddress> addrs = AccessController.doPrivileged(pa);\n+                Enumeration<InetAddress> addrs = ni.getInetAddresses();\n","filename":"src\/java.base\/macosx\/classes\/java\/net\/DefaultInterface.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -120,1 +120,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -133,9 +132,3 @@\n-        nameservers =\n-            java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<>() {\n-                    public ArrayList<String> run() {\n-                        \/\/ typically MAXNS is 3 but we've picked 5 here\n-                        \/\/ to allow for additional servers if required.\n-                        return resolvconf(\"nameserver\", 1, 5);\n-                    } \/* run *\/\n-                });\n+        \/\/ typically MAXNS is 3 but we've picked 5 here\n+        \/\/ to allow for additional servers if required.\n+        nameservers = resolvconf(\"nameserver\", 1, 5);\n@@ -152,2 +145,0 @@\n-\n-    @SuppressWarnings(\"removal\")\n@@ -156,2 +147,0 @@\n-        ArrayList<String> sl;\n-\n@@ -160,19 +149,3 @@\n-        sl = java.security.AccessController.doPrivileged(\n-                 new java.security.PrivilegedAction<>() {\n-                    public ArrayList<String> run() {\n-                        ArrayList<String> ll;\n-\n-                        \/\/ first try search keyword (max 6 domains)\n-                        ll = resolvconf(\"search\", 6, 1);\n-                        if (ll.size() > 0) {\n-                            return ll;\n-                        }\n-\n-                        return null;\n-\n-                    } \/* run *\/\n-\n-                });\n-        if (sl != null) {\n-            return sl;\n-        }\n+        \/\/ first try search keyword (max 6 domains)\n+        ArrayList<String> sl = resolvconf(\"search\", 6, 1);\n+        if (sl.size() > 0) return sl;\n@@ -183,17 +156,2 @@\n-\n-        sl = java.security.AccessController.doPrivileged(\n-                 new java.security.PrivilegedAction<>() {\n-                    public ArrayList<String> run() {\n-                        ArrayList<String> ll;\n-\n-                        ll = resolvconf(\"domain\", 1, 1);\n-                        if (ll.size() > 0) {\n-                            return ll;\n-                        }\n-                        return null;\n-\n-                    } \/* run *\/\n-                });\n-        if (sl != null) {\n-            return sl;\n-        }\n+        sl = resolvconf(\"domain\", 1, 1);\n+        if (sl.size() > 0) return sl;\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/dns\/ResolverConfigurationImpl.java","additions":8,"deletions":50,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        NTLMAuthenticationCallback.getNTLMAuthenticationCallback();\n+            NTLMAuthenticationCallback.getNTLMAuthenticationCallback();\n@@ -82,0 +82,1 @@\n+\n@@ -89,1 +90,1 @@\n-    public static boolean supportsTransparentAuth () {\n+    public static boolean supportsTransparentAuth() {\n@@ -104,17 +105,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private void init0() {\n-\n-        hostname = java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<>() {\n-            public String run() {\n-                String localhost;\n-                try {\n-                    localhost = InetAddress.getLocalHost().getHostName();\n-                } catch (UnknownHostException e) {\n-                     localhost = \"localhost\";\n-                }\n-                return localhost;\n-            }\n-        });\n-    };\n-\n@@ -153,1 +137,5 @@\n-        init0();\n+        try {\n+            hostname = InetAddress.getLocalHost().getHostName();\n+        } catch (UnknownHostException e) {\n+            hostname = \"localhost\";\n+        }\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/www\/protocol\/http\/ntlm\/NTLMAuthentication.java","additions":8,"deletions":20,"binary":false,"changes":28,"status":"modified"}]}