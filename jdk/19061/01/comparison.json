{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -121,1 +122,1 @@\n-    _g1h->hr_printer()->reuse(retained_region);\n+    G1HRPrinter::reuse(retained_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -328,1 +329,1 @@\n-    _hr_printer.alloc(hr);\n+    G1HRPrinter::alloc(hr);\n@@ -527,1 +528,1 @@\n-    _hr_printer.alloc(r);\n+    G1HRPrinter::alloc(r);\n@@ -713,2 +714,0 @@\n-private:\n-  G1HRPrinter* _hr_printer;\n@@ -718,1 +717,1 @@\n-    _hr_printer->post_compaction(hr);\n+    G1HRPrinter::post_compaction(hr);\n@@ -721,3 +720,0 @@\n-\n-  PostCompactionPrinterClosure(G1HRPrinter* hr_printer)\n-    : _hr_printer(hr_printer) { }\n@@ -731,2 +727,2 @@\n-  if (_hr_printer.is_active()) {\n-    PostCompactionPrinterClosure cl(hr_printer());\n+  if (G1HRPrinter::is_active()) {\n+    PostCompactionPrinterClosure cl;\n@@ -1155,1 +1151,0 @@\n-  _hr_printer(),\n@@ -2865,1 +2860,1 @@\n-      _hr_printer.alloc(new_alloc_region, !should_allocate);\n+      G1HRPrinter::alloc(new_alloc_region, !should_allocate);\n@@ -2881,1 +2876,1 @@\n-  _hr_printer.retire(alloc_region);\n+  G1HRPrinter::retire(alloc_region);\n@@ -2928,1 +2923,1 @@\n-    _hr_printer.alloc(new_alloc_region);\n+    G1HRPrinter::alloc(new_alloc_region);\n@@ -2949,1 +2944,1 @@\n-  _hr_printer.retire(alloc_region);\n+  G1HRPrinter::retire(alloc_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -268,2 +267,0 @@\n-  G1HRPrinter _hr_printer;\n-\n@@ -672,2 +669,0 @@\n-  G1HRPrinter* hr_printer() { return &_hr_printer; }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -1320,1 +1321,1 @@\n-      _g1h->hr_printer()->mark_reclaim(&_cleanup_list);\n+      G1HRPrinter::mark_reclaim(&_cleanup_list);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"memory\/allStatic.hpp\"\n@@ -33,3 +34,1 @@\n-class G1HRPrinter {\n-\n-private:\n+class G1HRPrinter : public AllStatic {\n@@ -43,1 +42,1 @@\n-  void mark_reclaim(HeapRegion* hr) {\n+  static void mark_reclaim(HeapRegion* hr) {\n@@ -51,1 +50,1 @@\n-  bool is_active() { return log_is_enabled(Trace, gc, region); }\n+  static bool is_active() { return log_is_enabled(Trace, gc, region); }\n@@ -55,5 +54,1 @@\n-  void alloc(HeapRegion* hr, bool force = false) {\n-    if (is_active()) {\n-      print((force) ? \"ALLOC-FORCE\" : \"ALLOC\", hr);\n-    }\n-  }\n+  static void alloc(HeapRegion* hr, bool force = false) { print(force ? \"ALLOC-FORCE\" : \"ALLOC\", hr); }\n@@ -61,5 +56,1 @@\n-  void retire(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"RETIRE\", hr);\n-    }\n-  }\n+  static void retire(HeapRegion* hr)                    { print(\"RETIRE\", hr); }\n@@ -67,5 +58,1 @@\n-  void reuse(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"REUSE\", hr);\n-    }\n-  }\n+  static void reuse(HeapRegion* hr)                     { print(\"REUSE\", hr); }\n@@ -73,5 +60,1 @@\n-  void cset(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"CSET\", hr);\n-    }\n-  }\n+  static void cset(HeapRegion* hr)                      { print(\"CSET\", hr); }\n@@ -79,5 +62,1 @@\n-  void evac_failure(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"EVAC-FAILURE\", hr);\n-    }\n-  }\n+  static void evac_failure(HeapRegion* hr)              { print(\"EVAC-FAILURE\", hr); }\n@@ -85,1 +64,1 @@\n-  void mark_reclaim(FreeRegionList* free_list);\n+  static void mark_reclaim(FreeRegionList* free_list);\n@@ -87,5 +66,1 @@\n-  void eager_reclaim(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"EAGER-RECLAIM\", hr);\n-    }\n-  }\n+  static void eager_reclaim(HeapRegion* hr)             { print(\"EAGER-RECLAIM\", hr); }\n@@ -93,5 +68,1 @@\n-  void evac_reclaim(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"EVAC-RECLAIM\", hr);\n-    }\n-  }\n+  static void evac_reclaim(HeapRegion* hr)              { print(\"EVAC-RECLAIM\", hr); }\n@@ -99,5 +70,1 @@\n-  void post_compaction(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"POST-COMPACTION\", hr);\n-    }\n-  }\n+  static void post_compaction(HeapRegion* hr)           { print(\"POST-COMPACTION\", hr); }\n@@ -105,5 +72,1 @@\n-  void commit(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"COMMIT\", hr);\n-    }\n-  }\n+  static void commit(HeapRegion* hr)                    { print(\"COMMIT\", hr); }\n@@ -111,5 +74,1 @@\n-  void active(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"ACTIVE\", hr);\n-    }\n-  }\n+  static void active(HeapRegion* hr)                    { print(\"ACTIVE\", hr); }\n@@ -117,5 +76,1 @@\n-  void inactive(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"INACTIVE\", hr);\n-    }\n-  }\n+  static void inactive(HeapRegion* hr)                  { print(\"INACTIVE\", hr); }\n@@ -123,5 +78,1 @@\n-  void uncommit(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"UNCOMMIT\", hr);\n-    }\n-  }\n+  static void uncommit(HeapRegion* hr)                  { print(\"UNCOMMIT\", hr); }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.hpp","additions":18,"deletions":67,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -173,1 +174,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->commit(hr);\n+    G1HRPrinter::commit(hr);\n@@ -196,2 +197,1 @@\n-  G1HRPrinter* printer = G1CollectedHeap::heap()->hr_printer();\n-  if (printer->is_active()) {\n+  if (G1HRPrinter::is_active()) {\n@@ -202,1 +202,1 @@\n-      printer->uncommit(hr);\n+      G1HRPrinter::uncommit(hr);\n@@ -226,1 +226,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->active(hr);\n+    G1HRPrinter::active(hr);\n@@ -253,1 +253,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->inactive(hr);\n+    G1HRPrinter::inactive(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -645,1 +646,1 @@\n-      _g1h->hr_printer()->evac_failure(r);\n+      G1HRPrinter::evac_failure(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -219,4 +219,0 @@\n-G1HRPrinter* G1YoungCollector::hr_printer() const {\n-  return _g1h->hr_printer();\n-}\n-\n@@ -267,2 +263,0 @@\n-private:\n-  G1HRPrinter* _hr_printer;\n@@ -270,2 +264,0 @@\n-  G1PrintCollectionSetClosure(G1HRPrinter* hr_printer) : HeapRegionClosure(), _hr_printer(hr_printer) { }\n-\n@@ -273,1 +265,1 @@\n-    _hr_printer->cset(r);\n+    G1HRPrinter::cset(r);\n@@ -289,2 +281,2 @@\n-  if (hr_printer()->is_active()) {\n-    G1PrintCollectionSetClosure cl(hr_printer());\n+  if (G1HRPrinter::is_active()) {\n+    G1PrintCollectionSetClosure cl;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-class G1HRPrinter;\n@@ -72,1 +71,0 @@\n-  G1HRPrinter* hr_printer() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -415,1 +416,1 @@\n-      _g1h->hr_printer()->eager_reclaim(r);\n+      G1HRPrinter::eager_reclaim(r);\n@@ -763,1 +764,1 @@\n-    _g1h->hr_printer()->evac_reclaim(r);\n+    G1HRPrinter::evac_reclaim(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}