{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,10 +58,0 @@\n-     *      offscreenSharingEnabled: usage: \"-Dsun.java2d.offscreenSharing=true\"\n-     *               Turns on the ability to share a hardware-accelerated\n-     *               offscreen surface through the JAWT interface.  See\n-     *               src\/windows\/native\/sun\/windows\/awt_DrawingSurface.* for\n-     *               more information.  This capability is disabled by default\n-     *               pending more testing and time to work out the right\n-     *               solution; we do not want to expose more public JAWT api\n-     *               without being very sure that we will be willing to support\n-     *               that API in the future regardless of other native\n-     *               rendering pipeline changes.\n@@ -104,1 +94,0 @@\n-    private static boolean offscreenSharingEnabled;\n@@ -209,2 +198,0 @@\n-        offscreenSharingEnabled =\n-            getBooleanProp(\"sun.java2d.offscreenSharing\", false);\n@@ -220,10 +207,0 @@\n-        \/*\n-            \/\/ Output info based on some non-default flags:\n-            if (offscreenSharingEnabled) {\n-                System.out.println(\n-                    \"Warning: offscreenSharing has been enabled. \" +\n-                    \"The use of this capability will change in future \" +\n-                    \"releases and applications that depend on it \" +\n-                    \"may not work correctly\");\n-            }\n-        *\/\n@@ -238,2 +215,1 @@\n-                           \"  gdiBlitEnabled: \" + gdiBlitEnabled + \"\\n\" +\n-                           \"  offscreenSharingEnabled: \" + offscreenSharingEnabled);\n+                           \"  gdiBlitEnabled: \" + gdiBlitEnabled);\n@@ -263,4 +239,0 @@\n-    public static boolean isOffscreenSharingEnabled() {\n-        return offscreenSharingEnabled;\n-    }\n-\n","filename":"src\/java.desktop\/windows\/classes\/sun\/java2d\/windows\/WindowsFlags.java","additions":2,"deletions":30,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-jboolean  g_offscreenSharing; \/\/ JAWT accelerated surface sharing\n@@ -92,4 +91,0 @@\n-    g_offscreenSharing = GetStaticBoolean(env, wFlagsClass,\n-                                          \"offscreenSharingEnabled\");\n-    JNU_CHECK_EXCEPTION(env);\n-\n@@ -105,2 +100,0 @@\n-    J2dTraceLn1(J2D_TRACE_INFO, \"  offscreenSharing = %s\",\n-                (g_offscreenSharing ? \"true\" : \"false\"));\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/windows\/WindowsFlags.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -3,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +31,0 @@\n-extern jboolean  g_offscreenSharing; \/\/ JAWT accelerated surface sharing\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/windows\/WindowsFlags.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}