{"files":[{"patch":"@@ -1965,1 +1965,1 @@\n-      \/\/ This prevent s insert_anti_dependencies from complaining. It will\n+      \/\/ This prevents raise_above_anti_dependences from complaining. It will\n","filename":"src\/hotspot\/share\/adlc\/output_h.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -667,0 +667,3 @@\n+\/\/ Enforce a scheduling of the argument load that ensures anti-dependent stores\n+\/\/ do not overwrite the load's input memory state before the load executes.\n+\/\/\n@@ -709,2 +712,1 @@\n-\/\/ Raising the LCA above B2 has no effect, because B2 is on the dominator tree\n-\/\/ branch between early and the current LCA (in fact, B2 is the current LCA).\n+\/\/ The LCA is already B2, so we do not need to raise it any further.\n@@ -721,3 +723,2 @@\n-\/\/ edges back to the load. The caller is expected to eventually schedule the\n-\/\/ load in the LCA, but may also hoist the load above the LCA, if it is not the\n-\/\/ early block.\n+\/\/ edges back to the load. The caller may schedule the load in the LCA, or it\n+\/\/ may hoist the load above the LCA, if it is not the early block.\n@@ -758,1 +759,1 @@\n-  \/\/ by the unique point in the dominator tree where all memory effects\n+  \/\/ the unique point in the dominator tree where all memory effects\n@@ -785,2 +786,1 @@\n-  \/\/ Flag that indicates if we must attempt to raise the LCA after the main\n-  \/\/ worklist loop below.\n+  \/\/ Whether we must raise the LCA after the main worklist loop below.\n@@ -803,5 +803,4 @@\n-  \/\/ permit the search to continue through MergeMems. Memory-state-modifying\n-  \/\/ nodes may raise the LCA and may potentially also require an\n-  \/\/ anti-dependence edge. Memory Phis may raise the LCA but never require\n-  \/\/ anti-dependence edges. See the comments throughout the worklist loop below\n-  \/\/ for further details.\n+  \/\/ permit the search to continue through MergeMems. Stores may raise the LCA\n+  \/\/ and may potentially also require an anti-dependence edge. Memory Phis may\n+  \/\/ raise the LCA but never require anti-dependence edges. See the comments\n+  \/\/ throughout the worklist loop below for further details.\n@@ -811,2 +810,1 @@\n-  \/\/ memory Phis and memory-state-modifying nodes as (potentially repeated)\n-  \/\/ leaves.\n+  \/\/ memory Phis and stores as (potentially repeated) leaves.\n@@ -849,2 +847,0 @@\n-    \/\/ we have passed a MergeMem and are now at an edge\n-    \/\/ (MergeMem, use_mem_state).\n@@ -853,1 +849,1 @@\n-           \"invariant failed\");\n+           \"unexpected memory state\");\n@@ -891,2 +887,2 @@\n-    \/\/ At this point, use_mem_state is either a store or a memory Phi.\n-    assert(!use_mem_state->is_MergeMem(), \"invariant failed\");\n+    assert(!use_mem_state->is_MergeMem(),\n+        \"use_mem_state should be either a store or a memory Phi\");\n@@ -951,1 +947,1 @@\n-    \/\/ (non_early_stores). The only exceptions to this is if we\n+    \/\/ (non_early_stores). The only exceptions to this are if we\n@@ -957,1 +953,1 @@\n-    \/\/ operation over all marks and then only add anti-dependence edges where\n+    \/\/ operation over all marks and only then add anti-dependence edges where\n@@ -1014,1 +1010,1 @@\n-          } else \/* if (pred_block == early *\/ {\n+          } else \/* if (pred_block == early) *\/ {\n@@ -1052,1 +1048,1 @@\n-  \/\/ (Worklist is now empty; we have visited all possible anti-dependences.)\n+  \/\/ Worklist is now empty; we have visited all possible anti-dependences.\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":20,"deletions":24,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    \/\/ Triggered an assert in PhaseCFG::raise_above_anti_dependences if loop strip mining verification was disabled:\n+    \/\/ Triggers an assert in PhaseCFG::raise_above_anti_dependences if loop strip mining verification is disabled:\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSplitIfPinnedLoadInStripMinedLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}