{"files":[{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4235215\n+ * @summary Tests that Toolkit.getPrintJob() do not throw NPE\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4235215\n+ *\/\n+\n+import java.awt.Toolkit;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+\n+public class bug4235215 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Press \"Print Dialog\" button.\n+        If you see a print dialog, test passes.\n+        Click \"Cancel\" button to close it.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4235215 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4235215::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4235215\");\n+        JButton button = new JButton(\"Print Dialog\");\n+        button.addActionListener(ev -> {\n+            Toolkit.getDefaultToolkit().getPrintJob(frame, \"Test Printing\", null);\n+        });\n+        frame.add(button);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComponent\/bug4235215.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4247610\n+ * @summary Tests an unnecessary repaint issue\n+ * @key headful\n+ * @run main bug4247610\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Graphics;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import javax.swing.JButton;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.Random;\n+\n+public class bug4247610 {\n+\n+    private static JFrame frame;\n+    private static JButton damager;\n+    private static volatile Point loc;\n+    private static volatile Dimension size;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame(\"bug4247610\");\n+            JDesktopPane pane = new JDesktopPane();\n+\n+            JInternalFrame jif = new JInternalFrame(\n+                                 \"Damager\", true, true, true, true);\n+            InternalFramePanel ifp = new InternalFramePanel();\n+            damager = new JButton(\"Damage!\");\n+            ifp.add(damager);\n+            jif.setContentPane(ifp);\n+            jif.setBounds(0, 0, 300, 300);\n+            jif.setVisible(true);\n+            pane.add(jif);\n+\n+            jif = new JInternalFrame(\"Damagee\", true, true, true, true);\n+            JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n+            final JLabel damagee = new JLabel(\"\");\n+            panel.add(damagee);\n+            jif.setContentPane(panel);\n+            jif.setBounds(60, 220, 300, 100);\n+            jif.setVisible(true);\n+            pane.add(jif);\n+\n+            final Random random = new Random();\n+\n+            damager.addActionListener((e) -> {\n+                System.out.println(\"traceRepaints called\");\n+                traceRepaints();\n+                damagee.setText(Integer.toString(random.nextInt()));\n+            });\n+            frame.setContentPane(pane);\n+            frame.setSize(500, 500);\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+        });\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+        SwingUtilities.invokeAndWait(() -> {\n+            loc = damager.getLocationOnScreen();\n+            size = damager.getSize();\n+        });\n+        robot.mouseMove(loc.x + size.width \/ 2, loc.y + size.height \/ 2);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        if (failed()) {\n+            throw new RuntimeException(\"Failed: unnecessary repaint occured\");\n+        }\n+    }\n+\n+    private static volatile boolean traceFlag;\n+    private static volatile boolean passFlag = true;\n+\n+    private static synchronized void traceRepaints() {\n+        traceFlag = true;\n+    }\n+    private static synchronized boolean repaintsTraced() {\n+        return traceFlag;\n+    }\n+\n+    private static synchronized boolean failed() {\n+        return !passFlag;\n+    }\n+    private static synchronized void fail() {\n+        passFlag = false;\n+    }\n+\n+    static class InternalFramePanel extends JPanel {\n+        final AtomicInteger repaintCounter = new AtomicInteger(0);\n+        InternalFramePanel() {\n+            super(new FlowLayout());\n+            setOpaque(true);\n+        }\n+\n+        public synchronized void paintComponent(Graphics g) {\n+            super.paintComponent(g);\n+            repaintCounter.incrementAndGet();\n+            System.out.println(\"repaintCounter \" + repaintCounter.intValue());\n+            if (repaintsTraced()) {\n+                fail();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComponent\/bug4247610.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4254995\n+ * @summary Tests that html in renderer works correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4254995\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.JScrollPane;\n+\n+public class bug4254995 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        If you see a list containing digits from one to seven, test passes.\n+        Otherwise it fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4254995 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4254995::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4254995\");\n+        String[] data = { \"1\", \"2\", \"3\", \"4\", \"<html>5\", \"6\", \"7\" };\n+        frame.add(new JScrollPane(new JList(data)));\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComponent\/bug4254995.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}