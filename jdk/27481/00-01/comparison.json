{"files":[{"patch":"@@ -390,2 +390,0 @@\n-  \/\/ Return true if vector mask operation with \"opcode\" requires the mask to be\n-  \/\/ saved in a predicate register.\n@@ -401,2 +399,2 @@\n-        \/\/ they are implemented with vector instructions. Using the vector layout\n-        \/\/ for the input\/output mask is more efficient in these cases.\n+        \/\/ they are implemented with vector instructions. Using the packed vector\n+        \/\/ layout for the input\/output mask is more efficient in these cases.\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -380,2 +380,0 @@\n-  \/\/ Return true if vector mask operation with \"opcode\" requires the mask to be\n-  \/\/ saved in a predicate register.\n@@ -391,2 +389,2 @@\n-        \/\/ they are implemented with vector instructions. Using the vector layout\n-        \/\/ for the input\/output mask is more efficient in these cases.\n+        \/\/ they are implemented with vector instructions. Using the packed vector\n+        \/\/ layout for the input\/output mask is more efficient in these cases.\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -168,2 +168,0 @@\n-  \/\/ Return true if vector mask operation with \"opcode\" requires the mask to be\n-  \/\/ saved with predicate type.\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2106,2 +2106,0 @@\n-\/\/ Return true if vector mask operation with \"opcode\" requires the mask to be\n-\/\/ saved with predicate type.\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -336,2 +336,3 @@\n-  \/\/ Identify if a vector mask operation requires the mask to be saved with a\n-  \/\/ predicate type.\n+  \/\/ Identify if a vector mask operation requires the input mask to be saved\n+  \/\/ with a predicate type (i.e. TypeVectMask) or a vector type. Return true\n+  \/\/ if it requires a predicate type.\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1906,2 +1906,2 @@\n-    assert(!Matcher::vector_mask_requires_predicate(Op_VectorMaskToLong,\n-                         in1->in(1)->bottom_type()->is_vect()), \"sanity\");\n+    assert(!Matcher::vector_mask_requires_predicate(Opcode(),\n+              in1->in(1)->bottom_type()->is_vect()), \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}