{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,0 +138,1 @@\n+     * @throws  IndexOutOfBoundsException {@inheritDoc}\n@@ -140,2 +141,2 @@\n-     *          closed, or if an I\/O error occurs.\n-     * @throws  IndexOutOfBoundsException {@inheritDoc}\n+     *          closed and {@code len} is positive,\n+     *          or if an I\/O error occurs.\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedOutputStream.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,6 +25,3 @@\n-   @bug 4143704\n-   @summary Test if write throws exception after reader\n-            closes the pipe.\n-*\/\n-\n-\n+ * @bug 4143704 8367943\n+ * @summary Test if write throws exception after reader closes the pipe.\n+ *\/\n@@ -32,1 +29,3 @@\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.PipedInputStream;\n+import java.io.PipedOutputStream;\n@@ -45,0 +44,5 @@\n+        try {\n+            out.write(new byte[7], 3, 0);\n+        } catch (IOException e) {\n+            throw new Exception(\"Should not fail 0-length write after close\");\n+        }\n","filename":"test\/jdk\/java\/io\/PipedOutputStream\/WriteAfterClose.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"}]}