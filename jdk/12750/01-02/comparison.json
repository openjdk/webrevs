{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.awt.Rectangle;\n@@ -36,0 +37,1 @@\n+import java.awt.Toolkit;\n@@ -37,0 +39,3 @@\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n@@ -38,0 +43,1 @@\n+import java.nio.file.Path;\n@@ -39,0 +45,1 @@\n+import javax.imageio.ImageIO;\n@@ -56,56 +63,66 @@\n-    private static final int BUTTON_OFFSET = 10;\n-    private static final int POPUP_OFFSET = 5;\n-\n-    public static void main(String[] args) throws InterruptedException, InvocationTargetException, AWTException {\n-            robot = new Robot();\n-            robot.setAutoDelay(100);\n-            robot.setAutoWaitForIdle(true);\n-\n-            for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n-            lafName = laf.getName();\n-            SwingUtilities.invokeAndWait(() -> {\n-                setLookAndFeel(laf);\n-                panel = new JPanel();\n-                String[] comboStrings = {\"One\", \"Two\", \"Three\"};\n-                cb1 = new JComboBox(comboStrings);\n-                cb1.setEditable(true);\n-                cb1.setBorder(BorderFactory.createTitledBorder(\n-                        \"Editable JComboBox\"));\n-\n-                cb2 = new JComboBox(comboStrings);\n-                cb2.setEditable(true);\n-\n-                panel.add(cb1);\n-                panel.add(cb2);\n-\n-                \/\/ Change starting selection to check if the position of the\n-                \/\/ first selection item is in the correct position on screen.\n-                cb1.setSelectedIndex(1);\n-                cb2.setSelectedIndex(1);\n-\n-                frame = new JFrame();\n-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-                frame.add(panel);\n-                frame.pack();\n-                frame.setLocationRelativeTo(null);\n-                frame.setVisible(true);\n-\n-                cb1Point = cb1.getLocationOnScreen();\n-                cb1Width = cb1.getWidth();\n-                cb1Height = cb1.getHeight();\n-                cb2Point = cb2.getLocationOnScreen();\n-                cb2Width = cb2.getWidth();\n-                cb2Height = cb2.getHeight();\n-            });\n-\n-            runTestOnComboBox(cb1Point, cb1Width, cb1Height);\n-            runTestOnComboBox(cb2Point, cb2Width, cb2Height);\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                cb1Str = cb1.getSelectedItem().toString();\n-                cb2Str = cb2.getSelectedItem().toString();\n-            });\n-\n-            checkSelection(cb1Str, cb2Str);\n-\n-            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+    private static Path testDir;\n+    private static BufferedImage image1, image2;\n+\n+    private static final int BUTTON_OFFSET = 8;\n+    private static final int POPUP_OFFSET = 6;\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException, IOException {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        robot.setAutoWaitForIdle(true);\n+        testDir = Path.of(System.getProperty(\"test.classes\", \".\"));\n+\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+        lafName = laf.getName();\n+        SwingUtilities.invokeAndWait(() -> {\n+            setLookAndFeel(laf);\n+            panel = new JPanel();\n+            String[] comboStrings = {\"One\", \"Two\", \"Three\"};\n+            cb1 = new JComboBox(comboStrings);\n+            cb1.setEditable(true);\n+            cb1.setBorder(BorderFactory.createTitledBorder(\n+                    \"Editable JComboBox\"));\n+\n+            cb2 = new JComboBox(comboStrings);\n+            cb2.setEditable(true);\n+\n+            panel.add(cb1);\n+            panel.add(cb2);\n+\n+            \/\/ Change starting selection to check if the position of the\n+            \/\/ first selection item is in the correct position on screen.\n+            cb1.setSelectedIndex(1);\n+            cb2.setSelectedIndex(1);\n+\n+            frame = new JFrame();\n+            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            frame.add(panel);\n+            frame.pack();\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+        });\n+\n+        robot.delay(1000);\n+        robot.waitForIdle();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            cb1Point = cb1.getLocationOnScreen();\n+            cb1Width = cb1.getWidth();\n+            cb1Height = cb1.getHeight();\n+            cb2Point = cb2.getLocationOnScreen();\n+            cb2Width = cb2.getWidth();\n+            cb2Height = cb2.getHeight();\n+        });\n+\n+        runTestOnComboBox(cb1Point, cb1Width, cb1Height);\n+        runTestOnComboBox(cb2Point, cb2Width, cb2Height);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            cb1Str = cb1.getSelectedItem().toString();\n+            cb2Str = cb2.getSelectedItem().toString();\n+        });\n+\n+        checkSelection(cb1Str, cb2Str);\n+\n+        SwingUtilities.invokeAndWait(() -> frame.dispose());\n@@ -126,2 +143,2 @@\n-    private static void runTestOnComboBox(Point p, int width, int height) {\n-        robot.mouseMove(p.x + width - BUTTON_OFFSET, p.y + POPUP_OFFSET);\n+    private static void runTestOnComboBox(Point p, int width, int height) throws IOException {\n+        robot.mouseMove(p.x + width - BUTTON_OFFSET, p.y + (height \/ 2) + POPUP_OFFSET);\n@@ -130,0 +147,5 @@\n+\n+        Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());\n+        image1 = robot.createScreenCapture(screenRect);\n+        ImageIO.write(image1, \"png\", new File(testDir + \"\/image1.png\"));\n+\n@@ -132,0 +154,4 @@\n+\n+        image2 = robot.createScreenCapture(screenRect);\n+        ImageIO.write(image2, \"png\", new File(testDir + \"\/image2.png\"));\n+\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/EditableComboBoxPopupPos.java","additions":84,"deletions":58,"binary":false,"changes":142,"status":"modified"}]}