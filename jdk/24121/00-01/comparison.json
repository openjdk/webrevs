{"files":[{"patch":"@@ -126,2 +126,2 @@\n-    <Field type=\"Class\" name=\"monitorClass\" label=\"Monitor Class\" \/>\n-    <Field type=\"ulong\" contentType=\"address\" name=\"address\" label=\"Monitor Address\" relation=\"JavaMonitorAddress\" \/>\n+    <Field type=\"Class\" name=\"monitorClass\" label=\"Monitor Class\" description=\"Class of the object deflated. If null or N\/A, the object has been garbage collected.\" \/>\n+    <Field type=\"ulong\" contentType=\"address\" name=\"address\" label=\"Monitor Address\" relation=\"JavaMonitorAddress\" description=\"Address of the object deflated. If null or N\/A, the object has been garbage collected.\"\/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -740,4 +740,12 @@\n-  assert(obj != nullptr, \"invariant\");\n-  const Klass* monitor_klass = obj->klass();\n-  if (ObjectMonitor::is_jfr_excluded(monitor_klass)) {\n-    return;\n+  if (obj == nullptr) {\n+    \/\/ Accept the case when obj was already garbage-collected.\n+    \/\/ Emit the event anyway, but without details.\n+    event->set_monitorClass(nullptr);\n+    event->set_address(0);\n+  } else {\n+    const Klass* monitor_klass = obj->klass();\n+    if (ObjectMonitor::is_jfr_excluded(monitor_klass)) {\n+      return;\n+    }\n+    event->set_monitorClass(monitor_klass);\n+    event->set_address((uintptr_t)(void*)obj);\n@@ -745,2 +753,0 @@\n-  event->set_monitorClass(monitor_klass);\n-  event->set_address((uintptr_t)(void*)obj);\n@@ -844,1 +850,1 @@\n-  if (obj != nullptr && event.should_commit()) {\n+  if (event.should_commit()) {\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -59,0 +59,4 @@\n+    \/\/ Make sure the object stays reachable.\n+    \/\/ This guarantees the fields are fully set up on deflation.\n+    static final Lock lock = new Lock();\n+\n@@ -60,1 +64,0 @@\n-        final Lock lock = new Lock();\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestJavaMonitorDeflateEvent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}