{"files":[{"patch":"@@ -103,1 +103,1 @@\n-                writer.tableOfContents.addLink(htmlIds.forMember(typeElement, (ExecutableElement) member),\n+                writer.tableOfContents.addLink(htmlIds.forMember((ExecutableElement) member).getFirst(),\n@@ -213,1 +213,1 @@\n-                .setId(htmlIds.forMember(typeElement, (ExecutableElement) member));\n+                .setId(htmlIds.forMember((ExecutableElement) member).getFirst());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-                writer.tableOfContents.addLink(htmlIds.forMember(currentConstructor),\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentConstructor).getFirst(),\n@@ -192,3 +192,4 @@\n-        HtmlId erasureAnchor = htmlIds.forErasure(constructor);\n-        if (erasureAnchor != null) {\n-            heading.setId(erasureAnchor);\n+\n+        var anchors = htmlIds.forMember(constructor);\n+        if (anchors.size() > 1) {\n+            heading.setId(anchors.getLast());\n@@ -198,1 +199,1 @@\n-                .setId(htmlIds.forMember(constructor));\n+                .setId(anchors.getFirst());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1040,1 +1040,1 @@\n-            HtmlId id = isProperty ? htmlIds.forProperty(ee) : htmlIds.forMember(ee);\n+            HtmlId id = isProperty ? htmlIds.forProperty(ee) : htmlIds.forMember(ee).getFirst();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.util.HashMap;\n+import java.util.HashSet;\n@@ -32,0 +34,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -33,0 +37,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -162,3 +167,3 @@\n-     * Returns an id for an executable element, suitable for use when the\n-     * simple name and argument list will be unique within the page, such as\n-     * in the page for the declaration of the enclosing class or interface.\n+     * {@return a non-empty list of ids to a constructor or a method}\n+     * The ids from the returned list are alternative: the given constructor\n+     * or method can be equally referred to by any of those ids.\n@@ -166,3 +171,1 @@\n-     * @param element the element\n-     *\n-     * @return the id\n+     * @param executable a constructor or method\n@@ -170,1 +173,71 @@\n-    HtmlId forMember(ExecutableElement element) {\n+    List<HtmlId> forMember(ExecutableElement executable) {\n+        var htmlId = ids.get(executable);\n+        if (htmlId != null)\n+            return htmlId;\n+        if (executable.getKind() != ElementKind.CONSTRUCTOR\n+                && executable.getKind() != ElementKind.METHOD)\n+            throw new IllegalArgumentException(String.valueOf(executable.getKind()));\n+        var vmt = configuration.getVisibleMemberTable((TypeElement) executable.getEnclosingElement());\n+        var ctors = vmt.getVisibleMembers(VisibleMemberTable.Kind.CONSTRUCTORS);\n+        var methods = vmt.getVisibleMembers(VisibleMemberTable.Kind.METHODS);\n+        record Erased(ExecutableElement element, HtmlId id) { }\n+        \/\/ split elements into two buckets:\n+        \/\/  - elements whose erased id is present\n+        \/\/  - elements whose erased id is absent (i.e. is null)\n+        enum ErasedId { PRESENT, ABSENT }\n+        var buckets = Stream.concat(ctors.stream(), methods.stream())\n+                .map(e -> (ExecutableElement) e)\n+                .map(e -> new Erased(e, forErasure(e)))\n+                .collect(Collectors.groupingBy(erased -> erased.id == null ?\n+                        ErasedId.ABSENT : ErasedId.PRESENT));\n+        var dups = new HashSet<String>();\n+        \/\/ the order of elements in each bucket is important for reproducibility\n+        \/\/ of ids: the same executable element must have the same id in any\n+        \/\/ javadoc run\n+        \/\/ Use simple id, unless we have to use erased id; for that, do the\n+        \/\/ following _in order_:\n+        \/\/ 1. Map all elements that can _only_ be addressed by the simple id\n+        for (var e : buckets.getOrDefault(ErasedId.ABSENT, List.of())) {\n+            var simpleId = forMember0(e.element);\n+            ids.put(e.element, List.of(simpleId));\n+            boolean added = dups.add(simpleId.name());\n+            \/\/ we assume that the simple id for an executable member that\n+            \/\/ does not use type parameters is unique\n+            assert added;\n+        }\n+        \/\/ 2. Map all elements that can be addressed by simple id or erased id;\n+        \/\/ if the simple id is not yet used, use it, otherwise use the erased id\n+        for (var e : buckets.getOrDefault(ErasedId.PRESENT, List.of())) {\n+            var simpleId = forMember0(e.element);\n+            if (dups.add(simpleId.name())) {\n+                ids.put(e.element, List.of(simpleId, e.id));\n+            } else {\n+                ids.put(e.element, List.of(e.id));\n+                boolean added = dups.add(e.id.name());\n+                \/\/ Not only must an erased id not clash with any simple id,\n+                \/\/ but it must also not clash with any other erased id.\n+                \/\/ The latter is because JLS 8.4.2. Method Signature:\n+                \/\/ it is a compile-time error to declare two methods\n+                \/\/ with override-equivalent signatures in a class\n+                assert added;\n+            }\n+        }\n+        \/\/ Safety net: if for whatever reason we cannot find the element\n+        \/\/ among those we just expanded, return the simple id. It might\n+        \/\/ not be always right, but at least it won't fail.\n+        \/\/\n+        \/\/ - one example where it might happen is linking to an inherited\n+        \/\/   undocumented method (see test case T5093723)\n+        \/\/   TODO the above will need to be revisited if and when we redesign\n+        \/\/    VisibleMemberTable, which currently cannot correctly return the\n+        \/\/    owner of such a method\n+        \/\/\n+        \/\/ - another example is annotation interface methods: they are not\n+        \/\/   included in VisibleMemberTable.Kind.METHODS and so cannot be\n+        \/\/   found among them\n+        return ids.computeIfAbsent(executable, e -> List.of(forMember0(e)));\n+    }\n+\n+    private final Map<ExecutableElement, List<HtmlId>> ids = new HashMap<>();\n+\n+    private HtmlId forMember0(ExecutableElement element) {\n@@ -177,13 +250,0 @@\n-    \/**\n-     * Returns an id for an executable element, including the context\n-     * of its documented enclosing class or interface.\n-     *\n-     * @param typeElement the enclosing class or interface\n-     * @param member      the element\n-     *\n-     * @return the id\n-     *\/\n-    HtmlId forMember(TypeElement typeElement, ExecutableElement member) {\n-        return HtmlId.of(utils.getSimpleName(member) + utils.signature(member, typeElement));\n-    }\n-\n@@ -232,1 +292,1 @@\n-    protected HtmlId forErasure(ExecutableElement executableElement) {\n+    private HtmlId forErasure(ExecutableElement executableElement) {\n@@ -486,1 +546,1 @@\n-            case CONSTRUCTOR, METHOD -> forMember((ExecutableElement) el).name();\n+            case CONSTRUCTOR, METHOD -> forMember((ExecutableElement) el).getFirst().name();\n@@ -500,1 +560,1 @@\n-        return HtmlId.of(\"restricted-\" + forMember(el).name());\n+        return HtmlId.of(\"restricted-\" + forMember(el).getFirst().name());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":83,"deletions":23,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-                    String url = HtmlTree.encodeURL(htmlIds.forMember((ExecutableElement) element).name());\n+                    String url = HtmlTree.encodeURL(htmlIds.forMember((ExecutableElement) element).getFirst().name());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIndexBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-                writer.tableOfContents.addLink(htmlIds.forMember(currentMethod),\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentMethod).getFirst(),\n@@ -207,3 +207,3 @@\n-        HtmlId erasureAnchor;\n-        if ((erasureAnchor = htmlIds.forErasure(method)) != null) {\n-            heading.setId(erasureAnchor);\n+        var anchors = htmlIds.forMember(method);\n+        if (anchors.size() > 1) {\n+            heading.setId(anchors.getLast());\n@@ -213,1 +213,1 @@\n-                .setId(htmlIds.forMember(method));\n+                .setId(anchors.getFirst());\n@@ -378,1 +378,1 @@\n-                        .fragment(writer.htmlIds.forMember(method).name())\n+                        .fragment(writer.htmlIds.forMember(method).getFirst().name())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import javax.lang.model.element.TypeParameterElement;\n@@ -41,0 +42,1 @@\n+import java.util.Arrays;\n@@ -146,1 +148,5 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                    return compareTypeParameters(e1, e2);\n@@ -267,1 +273,4 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0)\n+                        return result;\n+                    return compareTypeParameters(e1, e2);\n@@ -367,1 +376,8 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                    \/\/ this might not be needed: if e1 != e2 and both are\n+                    \/\/ executables they must differ in FQN and thus we\n+                    \/\/ shouldn't reach here\n+                    return compareTypeParameters(e1, e2);\n@@ -426,0 +442,15 @@\n+        protected final int compareTypeParameters(Element e1, Element e2) {\n+            if (!e1.getKind().isExecutable() || !e2.getKind().isExecutable())\n+                return 0;\n+            var typeParameters1 = ((ExecutableElement) e1).getTypeParameters();\n+            var typeParameters2 = ((ExecutableElement) e2).getTypeParameters();\n+            var parameters1 = typeParameters1.toArray(new TypeParameterElement[0]);\n+            var parameters2 = typeParameters2.toArray(new TypeParameterElement[0]);\n+            return Arrays.compare(parameters1, parameters2, (p1, p2) -> {\n+                var bounds1 = p1.getBounds().toArray(new TypeMirror[0]);\n+                var bounds2 = p2.getBounds().toArray(new TypeMirror[0]);\n+                return Arrays.compare(bounds1, bounds2, (b1, b2) ->\n+                        utils.compareStrings(true, b1.toString(), b2.toString()));\n+            });\n+        }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Comparators.java","additions":35,"deletions":4,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -0,0 +1,381 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8297879\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestErasure\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestErasure extends JavadocTester {\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    public static void main(String... args) throws Exception {\n+        new TestErasure().runTests();\n+    }\n+\n+    \/*\n+     * Create confusion between:\n+     *   - a constructor\/method type parameter and a like-named class\n+     *   - similarly named but differently bounded constructor type parameters\n+     *   - similarly named but differently bounded type parameter in methods\n+     *\/\n+    @Test\n+    public void test1(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        \/\/ - put public class first so that writeJavaFiles is not confused\n+        \/\/   on the name of the file it should create\n+        \/\/\n+        \/\/ - an _abstract_ class is used only for convenience: like an interface,\n+        \/\/   it allows to keep the test minimal, but unlike an interface, it\n+        \/\/   allows to test constructors\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo {\n+                    public Foo(T arg) { }\n+                    public <T extends X> Foo(T arg) { }\n+                    public <T extends Y> Foo(T arg) { }\n+                    public abstract T m(T arg);\n+                    public abstract <T extends X> T m(T arg);\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class T { }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        \/\/ constructors\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <section class=\"constructor-summary\" id=\"constructor-summary\">\n+                <h2>Constructor Summary<\/h2>\n+                <div class=\"caption\"><span>Constructors<\/span><\/div>\n+                <div class=\"summary-table two-column-summary\">\n+                <div class=\"table-header col-first\">Constructor<\/div>\n+                <div class=\"table-header col-last\">Description<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(T)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name odd-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(X)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(Y)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <\/div>\n+                <\/section>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#%3Cinit%3E(T)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(X)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(Y)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#%3Cinit%3E(T)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(X)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(Y)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(X)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(Y)\"}\"\"\");\n+        \/\/ methods\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract T<\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(T)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends X&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(X)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends Y&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(Y)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#m(T)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(X)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(Y)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#m(T)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(X)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(Y)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(X)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(Y)\"}\"\"\");\n+    }\n+\n+    \/*\n+     * Create confusion between the class type parameter\n+     * and a like-named constructor\/method type parameter.\n+     *\/\n+    @Test\n+    public void test2(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo<T> {\n+                    public Foo(T arg) { }\n+                    public <T extends X> Foo(T arg) { }\n+                    public abstract T m(T arg);\n+                    public abstract <T extends X> T m(T arg);\n+                }\n+                class X { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        \/\/ constructors\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <section class=\"constructor-summary\" id=\"constructor-summary\">\n+                <h2>Constructor Summary<\/h2>\n+                <div class=\"caption\"><span>Constructors<\/span><\/div>\n+                <div class=\"summary-table two-column-summary\">\n+                <div class=\"table-header col-first\">Constructor<\/div>\n+                <div class=\"table-header col-last\">Description<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(T)\" class=\"member-name-link\">Foo<\/a>\\\n+                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name odd-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(X)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <\/div>\n+                <\/section>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#%3Cinit%3E(T)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(X)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#%3Cinit%3E(T)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(X)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(X)\"}\"\"\");\n+        \/\/ methods\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract <a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(T)\" class=\"member-name-link\">m<\/a>\\\n+                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends X&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(X)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#m(T)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(X)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#m(T)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(X)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(X)\"}\"\"\");\n+    }\n+\n+    @Test\n+    public void testNewAndDeprecated(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo {\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public <T extends X> Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public <T extends Y> Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract T m(T arg);\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract <T extends X> T m(T arg);\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class T { }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--since\", \"today\",\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        checkOutput(\"new-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(T)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#m(X)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">today<\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(Y)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"new-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(T)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#%3Cinit%3E(X)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">today<\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(Y)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"deprecated-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(T)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#m(X)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">tomorrow<\/div>\n+                <div class=\"col-last odd-row-color\"><\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(Y)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\"\"\");\n+        checkOutput(\"deprecated-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(T)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#%3Cinit%3E(X)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">tomorrow<\/div>\n+                <div class=\"col-last odd-row-color\"><\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(Y)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\"\"\");\n+    }\n+\n+    @Test\n+    public void testPreview(Path base) throws IOException {\n+        \/\/ unlike that for other tests, here we cannot simulate ambiguity between\n+        \/\/ a type parameter and a like-named class, because for that the class\n+        \/\/ needs to be in the unnamed package, otherwise its FQN won't be T\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                import jdk.internal.javac.PreviewFeature;\n+                public abstract class Foo {\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public <T extends X> Foo(T arg) { }\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public <T extends Y> Foo(T arg) { }\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public abstract <T extends X> T m(T arg);\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--patch-module\", \"java.base=\" + src.toAbsolutePath().toString(),\n+                src.resolve(\"p\").resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        checkOutput(\"preview-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color method method-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#m(T)\">p.Foo.m<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-m(T)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second even-row-color method method-tab1\">Test Feature<\/div>\n+                <div class=\"col-last even-row-color method method-tab1\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color method method-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#m(p.Y)\">p.Foo.m<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-m(p.Y)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second odd-row-color method method-tab1\">Test Feature<\/div>\n+                <div class=\"col-last odd-row-color method method-tab1\"><\/div>\"\"\");\n+        checkOutput(\"preview-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color constructor constructor-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#%3Cinit%3E(T)\">p.Foo<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-%3Cinit%3E(T)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second even-row-color constructor constructor-tab1\">Test Feature<\/div>\n+                <div class=\"col-last even-row-color constructor constructor-tab1\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color constructor constructor-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#%3Cinit%3E(p.Y)\">p.Foo<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-%3Cinit%3E(p.Y)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second odd-row-color constructor constructor-tab1\">Test Feature<\/div>\n+                <div class=\"col-last odd-row-color constructor constructor-tab1\"><\/div>\"\"\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testErasure\/TestErasure.java","additions":381,"deletions":0,"binary":false,"changes":381,"status":"added"}]}