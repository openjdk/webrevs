{"files":[{"patch":"@@ -234,0 +234,11 @@\n+        \/\/ preprocess for links\n+        switch (kind) {\n+            case CONSTRUCTORS, METHODS -> {\n+                for (var m : members) {\n+                    \/\/ nit picking: constructors are not members, see JLS 8.2. Class Members\n+                    htmlIds.register(typeElement, (ExecutableElement) m);\n+                }\n+                htmlIds.endRegistration(typeElement, kind == CONSTRUCTORS ?\n+                        ElementKind.CONSTRUCTOR : ElementKind.METHOD);\n+            }\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -192,0 +192,1 @@\n+        HtmlId memberAnchor = htmlIds.forMember(constructor);\n@@ -193,1 +194,2 @@\n-        if (erasureAnchor != null) {\n+        if (erasureAnchor != null\n+                && !erasureAnchor.name().equals(memberAnchor.name())) {\n@@ -198,1 +200,1 @@\n-                .setId(htmlIds.forMember(constructor));\n+                .setId(memberAnchor);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashSet;\n@@ -31,0 +34,2 @@\n+import java.util.Optional;\n+import java.util.SequencedSet;\n@@ -33,0 +38,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -171,0 +177,4 @@\n+        return forExecutable((TypeElement) element.getEnclosingElement(), element);\n+    }\n+\n+    private HtmlId forMember0(ExecutableElement element) {\n@@ -538,0 +548,94 @@\n+\n+    private final Map<TypeElement, Map<ExecutableElement, String>> ids = new HashMap<>();\n+    \/*\n+     * This map is transient in a sense that it keeps its elements until\n+     * the registration is over. The order of the elements is important\n+     * for reproducibility of ids.\n+     *\/\n+    private final Map<Key, Optional<SequencedSet<ExecutableElement>>> registered = new HashMap<>();\n+    \/*\n+     * Registration key to differentiate between methods and constructors,\n+     * whose registration ends at different times.\n+     *\/\n+    private record Key(TypeElement typeElement, ElementKind elementKind) { }\n+\n+    \/*\n+     * Returns an id to a constructor or a method, from a centralised\n+     * registry. Use to get an anchor to a constructor or method.\n+     *\n+     * The primary goal is to provide coordination, not cache.\n+     *\/\n+    private HtmlId forExecutable(TypeElement t, ExecutableElement e) {\n+        var map = ids.get(t);\n+        if (map != null) {\n+            assert !map.isEmpty();\n+            String name = map.get(e);\n+            \/\/ name == null can happen when a link is processed before the\n+            \/\/ page\/element-type it refers to. For example, a class constructor\n+            \/\/ can @link to a class method which has not been registered yet\n+            \/\/ (because methods of a class are registered after the constructors\n+            \/\/ of that class).\n+            if (name != null)\n+                return HtmlId.of(name);\n+        }\n+        \/\/ must be an external @link\/@see, which might be processed before the\n+        \/\/ methods from the page it links to has been registered; cannot do\n+        \/\/ much about it, unless all constructors and methods register before\n+        \/\/ even the first page is generated -- something to think about (i.e.\n+        \/\/ \"TODO\")\n+        return forMember0(e);\n+    }\n+\n+    public void register(TypeElement t, ExecutableElement e) {\n+        var opt = registered.computeIfAbsent(new Key(t, e.getKind()),\n+                t_ -> Optional.of(new LinkedHashSet<>()));\n+        if (opt.isEmpty())\n+            throw new IllegalStateException(\"Registration for \" + t + \" has ended\");\n+        else\n+            opt.get().add(e);\n+    }\n+\n+    \/*\n+     * Declares that there won't be any more executable elements (of the\n+     * specified kind) registered for the specified type element.\n+     *\/\n+    public void endRegistration(TypeElement t, ElementKind k) {\n+        var prev = registered.put(new Key(t, k), Optional.empty());\n+        if (prev == null)\n+            return;\n+        var map = ids.computeIfAbsent(t, t_ -> new HashMap<>());\n+        var dups = new HashSet<>();\n+        \/\/ Use simple id, unless we have to use erased id; for that, do the\n+        \/\/ following _in order_:\n+        \/\/ 1. Map all elements that can _only_ be addressed by the simple id\n+        for (var e : prev.get()) {\n+            if (forErasure(e) == null) {\n+                var id = forMember0(e).name();\n+                map.put(e, id);\n+                boolean added = dups.add(id);\n+                \/\/ we assume that the simple id for an executable member that\n+                \/\/ does not use type parameters is unique\n+                assert added;\n+            }\n+        }\n+        \/\/ 2. Map all elements that can be addressed by simple id or erased id;\n+        \/\/ if the simple id is not yet used, use it, otherwise use the erased id\n+        for (var e : prev.get()) {\n+            var erasure = forErasure(e);\n+            if (erasure != null) {\n+                var simpleId = forMember0(e).name();\n+                if (dups.add(simpleId)) {\n+                    map.put(e, simpleId);\n+                } else {\n+                    map.put(e, erasure.name());\n+                    boolean added = dups.add(erasure.name());\n+                    \/\/ Not only must an erased id not clash with any simple id,\n+                    \/\/ but it must also not clash with any other erased id.\n+                    \/\/ The latter is because JLS 8.4.2. Method Signature:\n+                    \/\/ it is a compile-time error to declare two methods\n+                    \/\/ with override-equivalent signatures in a class\n+                    assert added;\n+                }\n+            }\n+        }\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -207,2 +207,4 @@\n-        HtmlId erasureAnchor;\n-        if ((erasureAnchor = htmlIds.forErasure(method)) != null) {\n+        HtmlId memberAnchor = htmlIds.forMember(method);\n+        HtmlId erasureAnchor = htmlIds.forErasure(method);\n+        if (erasureAnchor != null\n+                && !erasureAnchor.name().equals(memberAnchor.name())) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import javax.lang.model.element.TypeParameterElement;\n@@ -41,0 +42,1 @@\n+import java.util.Arrays;\n@@ -146,1 +148,5 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                    return compareTypeParameters(e1, e2);\n@@ -267,1 +273,4 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0)\n+                        return result;\n+                    return compareTypeParameters(e1, e2);\n@@ -367,1 +376,8 @@\n-                    return compareModuleNames(e1, e2);\n+                    result = compareModuleNames(e1, e2);\n+                    if (result != 0) {\n+                        return result;\n+                    }\n+                    \/\/ this might not be needed: if e1 != e2 and both are\n+                    \/\/ executables they must differ in FQN and thus we\n+                    \/\/ shouldn't reach here\n+                    return compareTypeParameters(e1, e2);\n@@ -426,0 +442,15 @@\n+        protected final int compareTypeParameters(Element e1, Element e2) {\n+            if (!e1.getKind().isExecutable() || !e2.getKind().isExecutable())\n+                return 0;\n+            var typeParameters1 = ((ExecutableElement) e1).getTypeParameters();\n+            var typeParameters2 = ((ExecutableElement) e2).getTypeParameters();\n+            var parameters1 = typeParameters1.toArray(new TypeParameterElement[0]);\n+            var parameters2 = typeParameters2.toArray(new TypeParameterElement[0]);\n+            return Arrays.compare(parameters1, parameters2, (p1, p2) -> {\n+                var bounds1 = p1.getBounds().toArray(new TypeMirror[0]);\n+                var bounds2 = p2.getBounds().toArray(new TypeMirror[0]);\n+                return Arrays.compare(bounds1, bounds2, (b1, b2) ->\n+                        utils.compareStrings(true, b1.toString(), b2.toString()));\n+            });\n+        }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Comparators.java","additions":35,"deletions":4,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -0,0 +1,381 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8297879\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestErasure\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestErasure extends JavadocTester {\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    public static void main(String... args) throws Exception {\n+        new TestErasure().runTests();\n+    }\n+\n+    \/*\n+     * Create confusion between:\n+     *   - a constructor\/method type parameter and a like-named class\n+     *   - similarly named but differently bounded constructor type parameters\n+     *   - similarly named but differently bounded type parameter in methods\n+     *\/\n+    @Test\n+    public void test1(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        \/\/ - put public class first so that writeJavaFiles is not confused\n+        \/\/   on the name of the file it should create\n+        \/\/\n+        \/\/ - an _abstract_ class is used only for convenience: like an interface,\n+        \/\/   it allows to keep the test minimal, but unlike an interface, it\n+        \/\/   allows to test constructors\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo {\n+                    public Foo(T arg) { }\n+                    public <T extends X> Foo(T arg) { }\n+                    public <T extends Y> Foo(T arg) { }\n+                    public abstract T m(T arg);\n+                    public abstract <T extends X> T m(T arg);\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class T { }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        \/\/ constructors\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <section class=\"constructor-summary\" id=\"constructor-summary\">\n+                <h2>Constructor Summary<\/h2>\n+                <div class=\"caption\"><span>Constructors<\/span><\/div>\n+                <div class=\"summary-table two-column-summary\">\n+                <div class=\"table-header col-first\">Constructor<\/div>\n+                <div class=\"table-header col-last\">Description<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(T)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name odd-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(X)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(Y)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <\/div>\n+                <\/section>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#%3Cinit%3E(T)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(X)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(Y)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#%3Cinit%3E(T)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(X)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(Y)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(X)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(Y)\"}\"\"\");\n+        \/\/ methods\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract T<\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(T)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends X&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(X)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends Y&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(Y)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#m(T)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(X)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(Y)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#m(T)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(X)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(Y)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(X)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(Y)\"}\"\"\");\n+    }\n+\n+    \/*\n+     * Create confusion between the class type parameter\n+     * and a like-named constructor\/method type parameter.\n+     *\/\n+    @Test\n+    public void test2(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo<T> {\n+                    public Foo(T arg) { }\n+                    public <T extends X> Foo(T arg) { }\n+                    public abstract T m(T arg);\n+                    public abstract <T extends X> T m(T arg);\n+                }\n+                class X { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        \/\/ constructors\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <section class=\"constructor-summary\" id=\"constructor-summary\">\n+                <h2>Constructor Summary<\/h2>\n+                <div class=\"caption\"><span>Constructors<\/span><\/div>\n+                <div class=\"summary-table two-column-summary\">\n+                <div class=\"table-header col-first\">Constructor<\/div>\n+                <div class=\"table-header col-last\">Description<\/div>\n+                <div class=\"col-constructor-name even-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(T)\" class=\"member-name-link\">Foo<\/a>\\\n+                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-constructor-name odd-row-color\"><code>\\\n+                <a href=\"#%3Cinit%3E(X)\" class=\"member-name-link\">Foo<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <\/div>\n+                <\/section>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#%3Cinit%3E(T)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <li><a href=\"#%3Cinit%3E(X)\" tabindex=\"0\">Foo(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#%3Cinit%3E(T)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#%3Cinit%3E(X)\" class=\"member-name-link\">Foo(T)<\/a>\\\n+                 - Constructor for class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"Foo(T)\",\"u\":\"%3Cinit%3E(X)\"}\"\"\");\n+        \/\/ methods\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract <a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n+                <div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(T)\" class=\"member-name-link\">m<\/a>\\\n+                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\n+                <div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code>abstract &lt;T extends X&gt;<br>T<\/code><\/div>\n+                <div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\"><code><a href=\"#m(X)\" class=\"member-name-link\">m<\/a><wbr>(T&nbsp;arg)<\/code><\/div>\n+                <div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 \\\n+                method-summary-table-tab3\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"Foo.html\", true, \"\"\"\n+                <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                <ol class=\"toc-list\">\n+                <li><a href=\"#m(T)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <li><a href=\"#m(X)\" tabindex=\"0\">m(T)<\/a><\/li>\n+                <\/ol>\n+                <\/li>\"\"\");\n+        checkOutput(\"index-all.html\", true, \"\"\"\n+                <dt><a href=\"Foo.html#m(T)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\n+                <dt><a href=\"Foo.html#m(X)\" class=\"member-name-link\">m(T)<\/a>\\\n+                 - Method in class <a href=\"Foo.html\" title=\"class in Unnamed Package\">Foo<\/a><\/dt>\n+                <dd>&nbsp;<\/dd>\"\"\");\n+        checkOutput(\"member-search-index.js\", true, \"\"\"\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\"},\\\n+                {\"p\":\"<Unnamed>\",\"c\":\"Foo\",\"l\":\"m(T)\",\"u\":\"m(X)\"}\"\"\");\n+    }\n+\n+    @Test\n+    public void testNewAndDeprecated(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public abstract class Foo {\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public <T extends X> Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public <T extends Y> Foo(T arg) { }\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract T m(T arg);\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract <T extends X> T m(T arg);\n+                    \/** @since today *\/\n+                    @Deprecated(since=\"tomorrow\")\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class T { }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--since\", \"today\",\n+                src.resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        checkOutput(\"new-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(T)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#m(X)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">today<\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(Y)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"new-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(T)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#%3Cinit%3E(X)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">today<\/div>\n+                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(Y)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">today<\/div>\n+                <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\");\n+        checkOutput(\"deprecated-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(T)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#m(X)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">tomorrow<\/div>\n+                <div class=\"col-last odd-row-color\"><\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#m(Y)\">Foo.m<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\"\"\");\n+        checkOutput(\"deprecated-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(T)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"Foo.html#%3Cinit%3E(X)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second odd-row-color\">tomorrow<\/div>\n+                <div class=\"col-last odd-row-color\"><\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"Foo.html#%3Cinit%3E(Y)\">Foo<wbr>(T)<\/a><\/div>\n+                <div class=\"col-second even-row-color\">tomorrow<\/div>\n+                <div class=\"col-last even-row-color\"><\/div>\"\"\");\n+    }\n+\n+    @Test\n+    public void testPreview(Path base) throws IOException {\n+        \/\/ unlike that for other tests, here we cannot simulate ambiguity between\n+        \/\/ a type parameter and a like-named class, because for that the class\n+        \/\/ needs to be in the unnamed package, otherwise its FQN won't be T\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                import jdk.internal.javac.PreviewFeature;\n+                public abstract class Foo {\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public <T extends X> Foo(T arg) { }\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public <T extends Y> Foo(T arg) { }\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public abstract <T extends X> T m(T arg);\n+                    @PreviewFeature(feature=PreviewFeature.Feature.TEST)\n+                    public abstract <T extends Y> T m(T arg);\n+                }\n+                class X { }\n+                class Y { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--patch-module\", \"java.base=\" + src.toAbsolutePath().toString(),\n+                src.resolve(\"p\").resolve(\"Foo.java\").toString());\n+\n+        checkExit(Exit.OK);\n+        checkOutput(\"preview-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color method method-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#m(T)\">p.Foo.m<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-m(T)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second even-row-color method method-tab1\">Test Feature<\/div>\n+                <div class=\"col-last even-row-color method method-tab1\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color method method-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#m(p.Y)\">p.Foo.m<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-m(p.Y)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second odd-row-color method method-tab1\">Test Feature<\/div>\n+                <div class=\"col-last odd-row-color method method-tab1\"><\/div>\"\"\");\n+        checkOutput(\"preview-list.html\", true, \"\"\"\n+                <div class=\"col-summary-item-name even-row-color constructor constructor-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#%3Cinit%3E(T)\">p.Foo<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-%3Cinit%3E(T)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second even-row-color constructor constructor-tab1\">Test Feature<\/div>\n+                <div class=\"col-last even-row-color constructor constructor-tab1\"><\/div>\n+                <div class=\"col-summary-item-name odd-row-color constructor constructor-tab1\">\\\n+                <a href=\"java.base\/p\/Foo.html#%3Cinit%3E(p.Y)\">p.Foo<wbr>(T)<\/a><sup>\\\n+                <a href=\"java.base\/p\/Foo.html#preview-%3Cinit%3E(p.Y)\">PREVIEW<\/a><\/sup><\/div>\n+                <div class=\"col-second odd-row-color constructor constructor-tab1\">Test Feature<\/div>\n+                <div class=\"col-last odd-row-color constructor constructor-tab1\"><\/div>\"\"\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testErasure\/TestErasure.java","additions":381,"deletions":0,"binary":false,"changes":381,"status":"added"}]}