{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -284,1 +284,7 @@\n-            return _wcsdup(input);\n+            size_t newlen = wcslen(input) + 1;\n+            WCHAR* result = new WCHAR[newlen];\n+            if (!result) {\n+                return NULL;\n+            }\n+            wcscpy_s(result, newlen, input);\n+            return result;\n@@ -542,1 +548,1 @@\n-    char* buffer = new char[10 + mechLen + len];\n+    char* buffer = (char*) malloc(10 + mechLen + len);\n@@ -558,1 +564,1 @@\n-        delete[] buffer;\n+        free(buffer);\n@@ -583,1 +589,1 @@\n-    char* buffer = new char[4*len+1];\n+    char* buffer = (char*) malloc(4*len+1);\n@@ -589,1 +595,1 @@\n-        delete[] buffer;\n+        free(buffer);\n@@ -805,0 +811,1 @@\n+            FreeContextBuffer(snames.sUserName);\n@@ -993,1 +1000,1 @@\n-        output_token->value = new char[outSecBuff.cbBuffer];\n+        output_token->value = malloc(outSecBuff.cbBuffer);\n@@ -1015,3 +1022,0 @@\n-    if (newCred) {\n-        delete newCred;\n-    }\n@@ -1022,0 +1026,3 @@\n+    if (newCred) {\n+        delete newCred;\n+    }\n@@ -1244,1 +1251,1 @@\n-    secBuff[1].pvBuffer = msg_token->value = new char[secBuff[1].cbBuffer];\n+    secBuff[1].pvBuffer = msg_token->value = malloc(secBuff[1].cbBuffer);\n@@ -1263,1 +1270,1 @@\n-        delete[] secBuff[1].pvBuffer;\n+        free(secBuff[1].pvBuffer);\n@@ -1327,1 +1334,1 @@\n-    SecBuffer secBuff[3];\n+    SecBuffer secBuff[3] = {0};\n@@ -1335,1 +1342,1 @@\n-    output_message_buffer->value = secBuff[0].pvBuffer = malloc(\n+    secBuff[0].pvBuffer = malloc(\n@@ -1339,1 +1346,1 @@\n-    if (!output_message_buffer->value) {\n+    if (!secBuff[0].pvBuffer) {\n@@ -1379,0 +1386,1 @@\n+    output_message_buffer->value = secBuff[0].pvBuffer;\n@@ -1381,0 +1389,1 @@\n+\n@@ -1416,1 +1425,1 @@\n-    SecBuffer secBuff[2];\n+    SecBuffer secBuff[2] = {0};\n@@ -1448,1 +1457,1 @@\n-    output_message_buffer->value = new char[secBuff[1].cbBuffer];\n+    output_message_buffer->value = malloc(secBuff[1].cbBuffer);\n@@ -1598,1 +1607,1 @@\n-        status_string->value = new char[len + 20];\n+        status_string->value = malloc(len + 20);\n@@ -1607,1 +1616,1 @@\n-        status_string->value = new char[33];\n+        status_string->value = malloc(33);\n@@ -1665,1 +1674,1 @@\n-        delete[] buffer->value;\n+        free(buffer->value);\n","filename":"src\/java.security.jgss\/windows\/native\/libsspi_bridge\/sspi.cpp","additions":29,"deletions":20,"binary":false,"changes":49,"status":"modified"}]}