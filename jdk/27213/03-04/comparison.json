{"files":[{"patch":"@@ -174,1 +174,1 @@\n-  __ align(4, __ offset() + BARRIER_TOTAL_LENGTH); \/\/ must align the following block which requires atomic updates\n+  __ align(4, __ offset() + OFFSET_TO_PATCHABLE_DATA); \/\/ must align the following block which requires atomic updates\n","filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetAssembler_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,0 +72,5 @@\n+\n+  \/\/ first 2 bytes are for cfi instruction opcode and next 4 bytes will be the value\/data to be patched,\n+  \/\/ so we are skipping first 2 bytes and returning the address of value\/data field\n+  static const int OFFSET_TO_PATCHABLE_DATA = 6 + 6 + 6 + 2; \/\/ iihf(6) + iilf(6) + lg(6) + CFI_OPCODE(2)\n+\n","filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetAssembler_s390.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,1 +41,3 @@\n-      address inst_addr = get_barrier_start_address() + BarrierSetAssembler::OFFSET_TO_PATCHABLE_DATA_INSTRUCTION;\n+      address start_address = get_barrier_start_address();\n+#ifdef ASSERT\n+      address inst_addr = start_address + BarrierSetAssembler::OFFSET_TO_PATCHABLE_DATA_INSTRUCTION;\n@@ -46,0 +48,1 @@\n+#endif \/\/ ASSERT\n@@ -47,4 +50,1 @@\n-      \/\/ we are currently pointing to cfi instruction,\n-      \/\/ first 2 bytes are for instruction opcode and next 4 bytes will be the value\/data to be patched,\n-      \/\/ so we can skip the first 2 bytes and just return the value\/data\n-      return inst_addr + 2;\n+      return start_address + BarrierSetAssembler::OFFSET_TO_PATCHABLE_DATA;\n@@ -98,1 +98,1 @@\n-        \/\/ it will be assignment operation, doesn't matter what's already there instr\n+        \/\/ it will be assignment operation, So it doesn't matter what value is already present in instr\n","filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetNMethod_s390.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}