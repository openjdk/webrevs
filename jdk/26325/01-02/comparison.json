{"files":[{"patch":"@@ -31,1 +31,1 @@\n- * @run main\/othervm -DCUSTOM_P11_CONFIG_VARIANT=sensitive Generic nss\n+ * @run main\/othervm -DCUSTOM_P11_CONFIG_NAME=p11-nss-sensitive.txt Generic nss\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/Generic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @run main\/othervm\/timeout=30 -DCUSTOM_P11_CONFIG_VARIANT=sensitive TestLargeSecretKeys\n+ * @run main\/othervm\/timeout=30 -DCUSTOM_P11_CONFIG_NAME=p11-nss-sensitive.txt TestLargeSecretKeys\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Mac\/TestLargeSecretKeys.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -202,0 +202,11 @@\n+        String customBaseDir = System.getProperty(\"CUSTOM_P11_CONFIG_BASE_DIR\");\n+        if (customBaseDir != null) {\n+            File base = new File(customBaseDir);\n+            if (!base.exists()) {\n+                throw new RuntimeException(\n+                        \"Directory specified by CUSTOM_P11_CONFIG_BASE_DIR does not exist: \"\n+                                + base.getAbsolutePath());\n+            }\n+            PKCS11_BASE = base.getAbsolutePath();\n+            return PKCS11_BASE;\n+        }\n@@ -458,9 +469,3 @@\n-     * Return the full path of a configuration file that will be used\n-     * to configure the PKCS11 provider.\n-     *\n-     * By default, the directory is that returned by copyNssFiles,\n-     * \".\/nss\", and the file is \"p11-nss.txt\", resulting in the full\n-     * path \".\/nss\/p11-nss.txt\".\n-     *\n-     * This value can be adjusted using the following system\n-     * properties:\n+     * Prepares the NSS configuration file hierarchy, then returns the\n+     * path of the configuration file that should be used to configure\n+     * the PKCS11 provider.\n@@ -468,6 +473,3 @@\n-     * CUSTOM_P11_CONFIG_NAME: The name of a custom configuration\n-     * file; overrides the default \"p11-nss.txt\".\n-     *\n-     * CUSTOM_P11_CONFIG: The absolute path of a custom configuration\n-     * file; overrides the default \".\/nss\/p11-nss.txt\".  Takes\n-     * precedence over CUSTOM_P11_CONFIG_NAME if both are specified.\n+     * By default, the contents of the directory\n+     * \"test\/jdk\/sun\/security\/pkcs11\/nss\" are copied to the jtreg\n+     * scratch directory (\".\"), and \".\/nss\/p11-nss.txt\" is returned.\n@@ -475,2 +477,1 @@\n-     * CUSTOM_P11_CONFIG_VARIANT: The variant of the base\n-     * configuration file name to use.\n+     * The following system properties modify the default behavior:\n@@ -478,3 +479,3 @@\n-     * A hyphen followed by the CUSTOM_P11_CONFIG_VARIANT string will\n-     * be inserted before the \".\" in the file extension, or appended\n-     * to the file name if it is extensionless.\n+     * CUSTOM_P11_CONFIG_BASE_DIR: The path of a custom configuration\n+     * file hierarchy; overrides the default,\n+     * \"test\/jdk\/sun\/security\/pkcs11\".\n@@ -482,5 +483,5 @@\n-     * Providers can have related configurations with multiple\n-     * variants, for example, p11-nss.txt and p11-nss-sensitive.txt.\n-     * The CUSTOM_P11_CONFIG_VARIANT property allows test authors to\n-     * select in which of the related configurations the provider\n-     * should run.\n+     * CUSTOM_P11_CONFIG_NAME: The name of a custom configuration\n+     * file; overrides the default, \"p11-nss.txt\".  Note that some\n+     * test cases set CUSTOM_P11_CONFIG_NAME using -D in jtreg @run\n+     * tags; for those test cases, setting this property on the\n+     * top-level jtreg command line has no effect.\n@@ -488,3 +489,6 @@\n-     * For example, setting -DCUSTOM_P11_CONFIG_VARIANT=sensitive,\n-     * (and no other CUSTOM_P11_CONFIG_* properties), will cause this\n-     * method to return \".\/nss\/p11-nss-sensitive.txt\".\n+     * CUSTOM_P11_CONFIG: The path of a custom configuration file;\n+     * overrides the default \".\/nss\/p11-nss.txt\".  This takes\n+     * precedence over CUSTOM_P11_CONFIG_NAME.  Tests that hard-code\n+     * CUSTOM_P11_CONFIG_NAME in jtreg @run tags may not work\n+     * correctly when CUSTOM_P11_CONFIG is set on the top-level jtreg\n+     * command line.\n@@ -492,5 +496,2 @@\n-     * CUSTOM_P11_CONFIG and CUSTOM_P11_CONFIG_NAME are also\n-     * influenced by CUSTOM_P11_CONFIG_VARIANT.  For example the\n-     * settings \"-DCUSTOM_P11_CONFIG=\/tmp\/p11-nss.txt\n-     * -DCUSTOM_P11_CONFIG_VARIANT=sensitive\" will cause this method\n-     * to return \"\/tmp\/p11-nss-sensitive.txt\".\n+     * CUSTOM_DB_DIR: The path of a custom database directory;\n+     * overrides the default, \".\/nss\/db\".\n@@ -498,6 +499,2 @@\n-     * CUSTOM_P11_CONFIG_VARIANT is primarily meant to be set in test\n-     * case @run arguments.  The test can then specify whether it\n-     * needs the provider to be configured with a specific variant,\n-     * while still allowing the user of the test suite to specify a\n-     * custom set of configuration file variants by setting\n-     * CUSTOM_P11_CONFIG on the jtreg command line.\n+     * CUSTOM_P11_LIBRARY_NAME: The name of a custom provider library\n+     * to load; overrides the default, \"softokn3\".\n@@ -529,1 +526,1 @@\n-        String configFilePath = (customConfig != null) ?\n+        return (customConfig != null) ?\n@@ -532,17 +529,0 @@\n-        String customConfigVariant = System.getProperty(\"CUSTOM_P11_CONFIG_VARIANT\");\n-        if (customConfigVariant != null) {\n-            \/\/ If the file name has an extension, prepend\n-            \/\/ -{CUSTOM_P11_CONFIG_VARIANT} before its \".\"; for\n-            \/\/ example, ...\/p11-nss.txt becomes\n-            \/\/ ...\/p11-nss-sensitive.txt.  If the file name has no\n-            \/\/ extension, append -{CUSTOM_P11_CONFIG_VARIANT}; for\n-            \/\/ example: ...\/p11-nss becomes ...\/p11-nss-sensitive.\n-            configFilePath = configFilePath.replaceFirst(\n-                    \"(\\\\.[^\\\\.]*)?$\", \"-\" + customConfigVariant + \"$1\");\n-        }\n-        if (!new File(configFilePath).exists()) {\n-            throw new RuntimeException(\"Configuration file does not exist: \"\n-                                       + configFilePath);\n-        }\n-        System.out.println(\"Configuration file: \" + configFilePath);\n-        return configFilePath;\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":37,"deletions":57,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @run main\/othervm -DCUSTOM_P11_CONFIG_VARIANT=sensitive TestP11KeyFactoryGetRSAKeySpec\n+ * @run main\/othervm -DCUSTOM_P11_CONFIG_NAME=p11-nss-sensitive.txt TestP11KeyFactoryGetRSAKeySpec\n@@ -48,1 +48,1 @@\n-        testingSensitiveKeys = \"sensitive\".equals(System.getProperty(\"CUSTOM_P11_CONFIG_VARIANT\"));\n+        testingSensitiveKeys = \"p11-nss-sensitive.txt\".equals(System.getProperty(\"CUSTOM_P11_CONFIG_NAME\"));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/rsa\/TestP11KeyFactoryGetRSAKeySpec.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}