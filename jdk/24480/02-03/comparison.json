{"files":[{"patch":"@@ -1478,2 +1478,1 @@\n-                                       MacroAssembler *_masm) {\n-\n+                                           MacroAssembler *_masm) {\n@@ -1482,2 +1481,4 @@\n-    __ z_cghi(size, 256);\n-    __ z_brc(Assembler::bcondLow, L_tail); \/\/ size is <256\n+    __ z_aghi(size, -1); \/\/ -1 because first byte is preset by stc\n+    __ z_bcr(Assembler::bcondLow, Z_R14);   \/\/ result  < 0 means size == 0 => return\n+    __ z_stc(byteVal, Address(dest));       \/\/ initialize first byte\n+    __ z_bcr(Assembler::bcondEqual, Z_R14); \/\/ result == 0 means size == 1 => return\n@@ -1485,1 +1486,1 @@\n-    \/\/ handle size >= 256\n+    \/\/ handle complete 256 byte blocks\n@@ -1487,6 +1488,5 @@\n-    __ z_stc(byteVal, Address(dest));\n-    __ z_mvc(1, 254, dest, 0, dest);\n-    __ z_aghi(dest, 256); \/\/ increment the address by 256\n-    __ z_aghi(size, -256);\n-    __ z_cghi(size, 256);\n-    __ z_brh(L_loop);\n+    __ z_aghi(size, -256);            \/\/ decrement remaining #bytes\n+    __ z_brl(L_tail);                 \/\/ skip loop if no full 256 byte block left\n+\n+    __ z_mvc(1, 255, dest, 0, dest);  \/\/ propagate byte from dest[0+i*256] to dest[1+i*256]\n+    __ z_bcr(Assembler::bcondEqual, Z_R14); \/\/ remaining size == 0 => return (mvc does not touch CC)\n@@ -1494,2 +1494,2 @@\n-    __ z_ltr(size, size);\n-    __ z_bcr(Assembler::bcondZero, Z_R14); \/\/ size is 0\n+    __ z_aghi(dest, 256);             \/\/ increment target address\n+    __ z_bru(L_loop);\n@@ -1497,0 +1497,1 @@\n+    \/\/ handle remaining bytes. We know 0 < size < 256\n@@ -1498,3 +1499,1 @@\n-    __ z_stc(byteVal, Address(dest));\n-    __ z_aghi(size, -2); \/\/ aghi will set the condition code for \"size==zero\", \"size<zero\", \"size>zero\"\n-    __ z_bcr(Assembler::bcondLow, Z_R14); \/\/ size < 0\n+    __ z_aghi(size, +256-1);         \/\/ prepare size value for mvc via exrl\n@@ -1502,1 +1501,0 @@\n-\n@@ -1506,2 +1504,1 @@\n-    __ z_mvc(1, 0, dest, 0, dest); \/\/ mvc template, needs to be generated, not executed\n-\n+    __ z_mvc(1, 0, dest, 0, dest);   \/\/ mvc template, needs to be generated, not executed\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"}]}