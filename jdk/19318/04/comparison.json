{"files":[{"patch":"@@ -30,1 +30,1 @@\n-    .icns .scpt .wxs .wxl .wxi .ico .bmp .tiff .service\n+    .icns .scpt .wxs .wxl .wxi .ico .bmp .tiff .service .xsl\n","filename":"make\/modules\/jdk.jpackage\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,1 @@\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n@@ -256,1 +257,1 @@\n-                wixToolset = WixTool.toolset();\n+                wixToolset = WixTool.createToolset();\n@@ -303,1 +304,1 @@\n-                wixToolset = WixTool.toolset();\n+                wixToolset = WixTool.createToolset();\n@@ -312,1 +313,1 @@\n-            for (var toolInfo: wixToolset.values()) {\n+            for (var tool : wixToolset.getType().getTools()) {\n@@ -314,2 +315,2 @@\n-                        \"message.tool-version\"), toolInfo.path.getFileName(),\n-                        toolInfo.version));\n+                        \"message.tool-version\"), wixToolset.getToolPath(tool).\n+                                getFileName(), wixToolset.getVersion()));\n@@ -318,2 +319,2 @@\n-            wixFragments.forEach(wixFragment -> wixFragment.setWixVersion(\n-                    wixToolset.get(WixTool.Light).version));\n+            wixFragments.forEach(wixFragment -> wixFragment.setWixVersion(wixToolset.getVersion(),\n+                    wixToolset.getType()));\n@@ -321,1 +322,2 @@\n-            wixFragments.get(0).logWixFeatures();\n+            wixFragments.stream().map(WixFragmentBuilder::getLoggableWixFeatures).flatMap(\n+                    List::stream).distinct().toList().forEach(Log::verbose);\n@@ -515,16 +517,0 @@\n-        \/\/ Copy standard l10n files.\n-        for (String loc : Arrays.asList(\"de\", \"en\", \"ja\", \"zh_CN\")) {\n-            String fname = \"MsiInstallerStrings_\" + loc + \".wxl\";\n-            createResource(fname, params)\n-                    .setCategory(I18N.getString(\"resource.wxl-file\"))\n-                    .saveToFile(configDir.resolve(fname));\n-        }\n-\n-        createResource(\"main.wxs\", params)\n-                .setCategory(I18N.getString(\"resource.main-wix-file\"))\n-                .saveToFile(configDir.resolve(\"main.wxs\"));\n-\n-        createResource(\"overrides.wxi\", params)\n-                .setCategory(I18N.getString(\"resource.overrides-wix-file\"))\n-                .saveToFile(configDir.resolve(\"overrides.wxi\"));\n-\n@@ -545,7 +531,5 @@\n-        .setToolset(wixToolset.entrySet().stream().collect(\n-                Collectors.toMap(\n-                        entry -> entry.getKey(),\n-                        entry -> entry.getValue().path)))\n-        .setWixObjDir(TEMP_ROOT.fetchFrom(params).resolve(\"wixobj\"))\n-        .setWorkDir(WIN_APP_IMAGE.fetchFrom(params))\n-        .addSource(CONFIG_ROOT.fetchFrom(params).resolve(\"main.wxs\"), wixVars);\n+                .setToolset(wixToolset)\n+                .setWixObjDir(TEMP_ROOT.fetchFrom(params).resolve(\"wixobj\"))\n+                .setWorkDir(WIN_APP_IMAGE.fetchFrom(params))\n+                .addSource(CONFIG_ROOT.fetchFrom(params).resolve(\"main.wxs\"),\n+                        wixVars);\n@@ -560,1 +544,22 @@\n-        wixPipeline.addLightOptions(\"-sice:ICE27\");\n+        switch (wixToolset.getType()) {\n+            case Wix3 -> {\n+                wixPipeline.addLightOptions(\"-sice:ICE27\");\n+\n+                if (!MSI_SYSTEM_WIDE.fetchFrom(params)) {\n+                    wixPipeline.addLightOptions(\"-sice:ICE91\");\n+                }\n+            }\n+            case Wix4 -> {\n+            }\n+            default -> {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        final Path configDir = CONFIG_ROOT.fetchFrom(params);\n+\n+        var primaryWxlFiles = Stream.of(\"de\", \"en\", \"ja\", \"zh_CN\").map(loc -> {\n+            return configDir.resolve(\"MsiInstallerStrings_\" + loc + \".wxl\");\n+        }).toList();\n+\n+        var wixResources = new WixSourceConverter.ResourceGroup(wixToolset.getType());\n@@ -562,2 +567,5 @@\n-        if (!MSI_SYSTEM_WIDE.fetchFrom(params)) {\n-            wixPipeline.addLightOptions(\"-sice:ICE91\");\n+        \/\/ Copy standard l10n files.\n+        for (var path : primaryWxlFiles) {\n+            var name = path.getFileName().toString();\n+            wixResources.addResource(createResource(name, params).setPublicName(name).setCategory(\n+                    I18N.getString(\"resource.wxl-file\")), path);\n@@ -566,0 +574,7 @@\n+        wixResources.addResource(createResource(\"main.wxs\", params).setPublicName(\"main.wxs\").\n+                setCategory(I18N.getString(\"resource.main-wix-file\")), configDir.resolve(\"main.wxs\"));\n+\n+        wixResources.addResource(createResource(\"overrides.wxi\", params).setPublicName(\n+                \"overrides.wxi\").setCategory(I18N.getString(\"resource.overrides-wix-file\")),\n+                configDir.resolve(\"overrides.wxi\"));\n+\n@@ -569,1 +584,0 @@\n-        List<Path> primaryWxlFiles = getWxlFilesFromDir(params, CONFIG_ROOT);\n@@ -580,0 +594,11 @@\n+        \/\/ Copy custom l10n files.\n+        for (var path : customWxlFiles) {\n+            var name = path.getFileName().toString();\n+            wixResources.addResource(createResource(name, params).setPublicName(name).\n+                    setSourceOrder(OverridableResource.Source.ResourceDir).setCategory(I18N.\n+                    getString(\"resource.wxl-file\")), configDir.resolve(name));\n+        }\n+\n+        \/\/ Save all WiX resources into config dir.\n+        wixResources.saveResources();\n+\n@@ -589,0 +614,1 @@\n+            wxl = configDir.resolve(wxl.getFileName());\n@@ -601,2 +627,14 @@\n-        wixPipeline.addLightOptions(uniqueCultures.stream().collect(\n-                Collectors.joining(\";\", \"-cultures:\", \"\")));\n+        switch (wixToolset.getType()) {\n+            case Wix3 -> {\n+                wixPipeline.addLightOptions(uniqueCultures.stream().collect(Collectors.joining(\";\",\n+                        \"-cultures:\", \"\")));\n+            }\n+            case Wix4 -> {\n+                uniqueCultures.forEach(culture -> {\n+                    wixPipeline.addLightOptions(\"-culture\", culture);\n+                });\n+            }\n+            default -> {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n@@ -754,1 +792,1 @@\n-    private Map<WixTool, WixTool.ToolInfo> wixToolset;\n+    private WixToolset wixToolset;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java","additions":77,"deletions":39,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n@@ -155,0 +156,10 @@\n+    @Override\n+    List<String> getLoggableWixFeatures() {\n+        if (isWithWix36Features()) {\n+            return List.of(MessageFormat.format(I18N.getString(\"message.use-wix36-features\"),\n+                    getWixVersion()));\n+        } else {\n+            return List.of();\n+        }\n+    }\n+\n@@ -317,1 +328,1 @@\n-        static void startElement(XMLStreamWriter xml, String componentId,\n+        static void startElement(WixToolsetType wixType, XMLStreamWriter xml, String componentId,\n@@ -320,1 +331,15 @@\n-            xml.writeAttribute(\"Win64\", is64Bit() ? \"yes\" : \"no\");\n+            switch (wixType) {\n+                case Wix3 -> {\n+                    xml.writeAttribute(\"Win64\", is64Bit() ? \"yes\" : \"no\");\n+                    xml.writeAttribute(\"Guid\", componentGuid);\n+                }\n+                case Wix4 -> {\n+                    xml.writeAttribute(\"Bitness\", is64Bit() ? \"always64\" : \"always32\");\n+                    if (!componentGuid.equals(\"*\")) {\n+                        xml.writeAttribute(\"Guid\", componentGuid);\n+                    }\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n@@ -322,1 +347,0 @@\n-            xml.writeAttribute(\"Guid\", componentGuid);\n@@ -373,2 +397,1 @@\n-        xml.writeStartElement(\"DirectoryRef\");\n-        xml.writeAttribute(\"Id\", Id.Folder.of(directoryRefPath));\n+        startDirectoryElement(xml, \"DirectoryRef\", directoryRefPath);\n@@ -377,2 +400,2 @@\n-        Component.startElement(xml, componentId, String.format(\"{%s}\",\n-                role.guidOf(path)));\n+        Component.startElement(getWixType(), xml, componentId, String.format(\n+                \"{%s}\", role.guidOf(path)));\n@@ -381,1 +404,0 @@\n-            xml.writeStartElement(\"Condition\");\n@@ -387,2 +409,13 @@\n-            xml.writeCharacters(property);\n-            xml.writeEndElement();\n+            switch (getWixType()) {\n+                case Wix3 -> {\n+                    xml.writeStartElement(\"Condition\");\n+                    xml.writeCharacters(property);\n+                    xml.writeEndElement();\n+                }\n+                case Wix4 -> {\n+                    xml.writeAttribute(\"Condition\", property);\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n@@ -445,1 +478,1 @@\n-        Set<ShortcutsFolder> defineShortcutFolders = new HashSet<>();\n+        Set<Path> defineShortcutFolders = new HashSet<>();\n@@ -460,1 +493,13 @@\n-                        defineShortcutFolders.add(folder);\n+                        Path folderPath = folder.getPath(this);\n+                        boolean defineFolder;\n+                        switch (getWixType()) {\n+                            case Wix3 ->\n+                                defineFolder = true;\n+                            case Wix4 ->\n+                                defineFolder = !SYSTEM_DIRS.contains(folderPath);\n+                            default ->\n+                                throw new IllegalArgumentException();\n+                        }\n+                        if (defineFolder) {\n+                            defineShortcutFolders.add(folderPath);\n+                        }\n@@ -467,3 +512,2 @@\n-        for (var folder : defineShortcutFolders) {\n-            Path path = folder.getPath(this);\n-            componentIds.addAll(addRootBranch(xml, path));\n+        for (var folderPath : defineShortcutFolders) {\n+            componentIds.addAll(addRootBranch(xml, folderPath));\n@@ -549,2 +593,0 @@\n-        Function<Path, String> createDirectoryName = dir -> null;\n-\n@@ -552,1 +594,1 @@\n-        int levels = 1;\n+        int levels;\n@@ -554,2 +596,9 @@\n-        xml.writeStartElement(\"DirectoryRef\");\n-        xml.writeAttribute(\"Id\", dirIt.next().toString());\n+\n+        if (getWixType() != WixToolsetType.Wix3 && TARGETDIR.equals(path.getName(0))) {\n+            levels = 0;\n+            dirIt.next();\n+        } else {\n+            levels = 1;\n+            xml.writeStartElement(\"DirectoryRef\");\n+            xml.writeAttribute(\"Id\", dirIt.next().toString());\n+        }\n@@ -565,8 +614,0 @@\n-                createDirectoryName = dir -> dir.getFileName().toString();\n-            }\n-\n-            final String directoryId;\n-            if (!sysDir && path.equals(installDir)) {\n-                directoryId = INSTALLDIR.toString();\n-            } else {\n-                directoryId = Id.Folder.of(path);\n@@ -574,2 +615,0 @@\n-            xml.writeStartElement(\"Directory\");\n-            xml.writeAttribute(\"Id\", directoryId);\n@@ -577,3 +616,3 @@\n-            String directoryName = createDirectoryName.apply(path);\n-            if (directoryName != null) {\n-                xml.writeAttribute(\"Name\", directoryName);\n+            startDirectoryElement(xml, \"Directory\", path);\n+            if (!sysDir) {\n+                xml.writeAttribute(\"Name\", path.getFileName().toString());\n@@ -587,1 +626,2 @@\n-        List<String> componentIds = new ArrayList<>();\n+        return List.of();\n+    }\n@@ -589,1 +629,28 @@\n-        return componentIds;\n+    private void startDirectoryElement(XMLStreamWriter xml, String wix3ElementName, Path path) throws XMLStreamException {\n+        final String elementName;\n+        switch (getWixType()) {\n+            case Wix3 -> {\n+                elementName = wix3ElementName;\n+            }\n+            case Wix4 -> {\n+                if (SYSTEM_DIRS.contains(path)) {\n+                    elementName = \"StandardDirectory\";\n+                } else {\n+                    elementName = wix3ElementName;\n+                }\n+            }\n+            default -> {\n+                throw new IllegalArgumentException();\n+            }\n+\n+        }\n+\n+        final String directoryId;\n+        if (path.equals(installDir)) {\n+            directoryId = INSTALLDIR.toString();\n+        } else {\n+            directoryId = Id.Folder.of(path);\n+        }\n+\n+        xml.writeStartElement(elementName);\n+        xml.writeAttribute(\"Id\", directoryId);\n@@ -788,1 +855,1 @@\n-        if (DottedVersion.compareComponents(getWixVersion(), DottedVersion.lazy(\"3.6\")) < 0) {\n+        if (!isWithWix36Features()) {\n@@ -802,1 +869,1 @@\n-        if (DottedVersion.compareComponents(getWixVersion(), DottedVersion.lazy(\"3.6\")) < 0) {\n+        if (!isWithWix36Features()) {\n@@ -824,1 +891,1 @@\n-        Component.startElement(xml, componentId, \"*\");\n+        Component.startElement(getWixType(), xml, componentId, \"*\");\n@@ -830,2 +897,1 @@\n-        xml.writeStartElement(\n-                \"http:\/\/schemas.microsoft.com\/wix\/UtilExtension\",\n+        xml.writeStartElement(getWixNamespaces().get(WixNamespace.Util),\n@@ -842,0 +908,4 @@\n+    private boolean isWithWix36Features() {\n+        return DottedVersion.compareComponents(getWixVersion(), DottedVersion.greedy(\"3.6\")) >= 0;\n+    }\n+\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixAppImageFragmentBuilder.java","additions":110,"deletions":40,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.text.MessageFormat;\n-import java.util.ArrayList;\n@@ -37,0 +35,1 @@\n+import java.util.Objects;\n@@ -43,1 +42,0 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -46,0 +44,3 @@\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import jdk.jpackage.internal.WixSourceConverter.ResourceGroup;\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n@@ -52,2 +53,5 @@\n-    void setWixVersion(DottedVersion v) {\n-        wixVersion = v;\n+    final void setWixVersion(DottedVersion version, WixToolsetType type) {\n+        Objects.requireNonNull(version);\n+        Objects.requireNonNull(type);\n+        wixVersion = version;\n+        wixType = type;\n@@ -56,1 +60,1 @@\n-    void setOutputFileName(String v) {\n+    final void setOutputFileName(String v) {\n@@ -68,5 +72,2 @@\n-    void logWixFeatures() {\n-        if (DottedVersion.compareComponents(wixVersion, DottedVersion.lazy(\"3.6\")) >= 0) {\n-            Log.verbose(MessageFormat.format(I18N.getString(\n-                    \"message.use-wix36-features\"), wixVersion));\n-        }\n+    List<String> getLoggableWixFeatures() {\n+        return List.of();\n@@ -94,4 +95,1 @@\n-            for (var resource : additionalResources) {\n-                resource.resource.saveToFile(configRoot.resolve(\n-                        resource.saveAsName));\n-            }\n+            additionalResources.saveResources();\n@@ -101,1 +99,5 @@\n-    DottedVersion getWixVersion() {\n+    final WixToolsetType getWixType() {\n+        return wixType;\n+    }\n+\n+    final DottedVersion getWixVersion() {\n@@ -105,0 +107,26 @@\n+    protected static enum WixNamespace {\n+        Default,\n+        Util;\n+    }\n+\n+    final protected Map<WixNamespace, String> getWixNamespaces() {\n+        switch (wixType) {\n+            case Wix3 -> {\n+                return Map.of(WixNamespace.Default,\n+                        \"http:\/\/schemas.microsoft.com\/wix\/2006\/wi\",\n+                        WixNamespace.Util,\n+                        \"http:\/\/schemas.microsoft.com\/wix\/UtilExtension\");\n+            }\n+            case Wix4 -> {\n+                return Map.of(WixNamespace.Default,\n+                        \"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\",\n+                        WixNamespace.Util,\n+                        \"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\/util\");\n+            }\n+            default -> {\n+                throw new IllegalArgumentException();\n+            }\n+\n+        }\n+    }\n+\n@@ -109,1 +137,1 @@\n-    protected Path getConfigRoot() {\n+    final protected Path getConfigRoot() {\n@@ -115,1 +143,1 @@\n-    protected void defineWixVariable(String variableName) {\n+    final protected void defineWixVariable(String variableName) {\n@@ -119,1 +147,1 @@\n-    protected void setWixVariable(String variableName, String variableValue) {\n+    final protected void setWixVariable(String variableName, String variableValue) {\n@@ -126,1 +154,1 @@\n-    protected void addResource(OverridableResource resource, String saveAsName) {\n+    final protected void addResource(OverridableResource resource, String saveAsName) {\n@@ -128,1 +156,1 @@\n-            additionalResources = new ArrayList<>();\n+            additionalResources = new ResourceGroup(getWixType());\n@@ -130,1 +158,1 @@\n-        additionalResources.add(new ResourceWithName(resource, saveAsName));\n+        additionalResources.addResource(resource, configRoot.resolve(saveAsName));\n@@ -133,2 +161,1 @@\n-    static void createWixSource(Path file, XmlConsumer xmlConsumer)\n-            throws IOException {\n+    private void createWixSource(Path file, XmlConsumer xmlConsumer) throws IOException {\n@@ -137,3 +164,9 @@\n-            xml.writeDefaultNamespace(\"http:\/\/schemas.microsoft.com\/wix\/2006\/wi\");\n-            xml.writeNamespace(\"util\",\n-                    \"http:\/\/schemas.microsoft.com\/wix\/UtilExtension\");\n+            for (var ns : getWixNamespaces().entrySet()) {\n+                switch (ns.getKey()) {\n+                    case Default ->\n+                        xml.writeDefaultNamespace(ns.getValue());\n+                    default ->\n+                        xml.writeNamespace(ns.getKey().name().toLowerCase(), ns.\n+                                getValue());\n+                }\n+            }\n@@ -149,10 +182,0 @@\n-    private static class ResourceWithName {\n-\n-        ResourceWithName(OverridableResource resource, String saveAsName) {\n-            this.resource = resource;\n-            this.saveAsName = saveAsName;\n-        }\n-        private final OverridableResource resource;\n-        private final String saveAsName;\n-    }\n-\n@@ -211,0 +234,1 @@\n+    private WixToolsetType wixType;\n@@ -213,1 +237,1 @@\n-    private List<ResourceWithName> additionalResources;\n+    private ResourceGroup additionalResources;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixFragmentBuilder.java","additions":62,"deletions":38,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-\n@@ -32,1 +31,1 @@\n-import java.util.HashMap;\n+import java.util.Collections;\n@@ -36,1 +35,3 @@\n-import java.util.function.UnaryOperator;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n@@ -48,1 +49,1 @@\n-    WixPipeline setToolset(Map<WixTool, Path> v) {\n+    WixPipeline setToolset(WixToolset v) {\n@@ -82,0 +83,79 @@\n+        Objects.requireNonNull(workDir);\n+\n+        switch (toolset.getType()) {\n+            case Wix3 -> buildMsiWix3(msi);\n+            case Wix4 -> buildMsiWix4(msi);\n+            default -> throw new IllegalArgumentException();\n+        }\n+    }\n+\n+    private void addWixVariblesToCommandLine(\n+            Map<String, String> otherWixVariables, List<String> cmdline) {\n+        Stream.of(wixVariables, Optional.ofNullable(otherWixVariables).\n+                orElseGet(Collections::emptyMap)).filter(Objects::nonNull).\n+                reduce((a, b) -> {\n+                    a.putAll(b);\n+                    return a;\n+                }).ifPresent(wixVars -> {\n+            var entryStream = wixVars.entrySet().stream();\n+\n+            Stream<String> stream;\n+            switch (toolset.getType()) {\n+                case Wix3 -> {\n+                    stream = entryStream.map(wixVar -> {\n+                        return String.format(\"-d%s=%s\", wixVar.getKey(), wixVar.\n+                                getValue());\n+                    });\n+                }\n+                case Wix4 -> {\n+                    stream = entryStream.map(wixVar -> {\n+                        return Stream.of(\"-d\", String.format(\"%s=%s\", wixVar.\n+                                getKey(), wixVar.getValue()));\n+                    }).flatMap(Function.identity());\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+\n+            stream.reduce(cmdline, (ctnr, wixVar) -> {\n+                ctnr.add(wixVar);\n+                return ctnr;\n+            }, (x, y) -> {\n+                x.addAll(y);\n+                return x;\n+            });\n+        });\n+    }\n+\n+    private void buildMsiWix4(Path msi) throws IOException {\n+        var mergedSrcWixVars = sources.stream().map(wixSource -> {\n+            return Optional.ofNullable(wixSource.variables).orElseGet(\n+                    Collections::emptyMap).entrySet().stream();\n+        }).flatMap(Function.identity()).collect(Collectors.toMap(\n+                Map.Entry::getKey, Map.Entry::getValue));\n+\n+        List<String> cmdline = new ArrayList<>(List.of(\n+                toolset.getToolPath(WixTool.Wix4).toString(),\n+                \"build\",\n+                \"-nologo\",\n+                \"-pdbtype\", \"none\",\n+                \"-intermediatefolder\", wixObjDir.toAbsolutePath().toString(),\n+                \"-ext\", \"WixToolset.Util.wixext\",\n+                \"-arch\", WixFragmentBuilder.is64Bit() ? \"x64\" : \"x86\"\n+        ));\n+\n+        cmdline.addAll(lightOptions);\n+\n+        addWixVariblesToCommandLine(mergedSrcWixVars, cmdline);\n+\n+        cmdline.addAll(sources.stream().map(wixSource -> {\n+            return wixSource.source.toAbsolutePath().toString();\n+        }).toList());\n+\n+        cmdline.addAll(List.of(\"-out\", msi.toString()));\n+\n+        execute(cmdline);\n+    }\n+\n+    private void buildMsiWix3(Path msi) throws IOException {\n@@ -84,1 +164,1 @@\n-            wixObjs.add(compile(source));\n+            wixObjs.add(compileWix3(source));\n@@ -88,1 +168,1 @@\n-                toolset.get(WixTool.Light).toString(),\n+                toolset.getToolPath(WixTool.Light3).toString(),\n@@ -102,6 +182,2 @@\n-    private Path compile(WixSource wixSource) throws IOException {\n-        UnaryOperator<Path> adjustPath = path -> {\n-            return workDir != null ? path.toAbsolutePath() : path;\n-        };\n-\n-        Path wixObj = adjustPath.apply(wixObjDir).resolve(IOUtils.replaceSuffix(\n+    private Path compileWix3(WixSource wixSource) throws IOException {\n+        Path wixObj = wixObjDir.toAbsolutePath().resolve(IOUtils.replaceSuffix(\n@@ -111,1 +187,1 @@\n-                toolset.get(WixTool.Candle).toString(),\n+                toolset.getToolPath(WixTool.Candle3).toString(),\n@@ -113,1 +189,1 @@\n-                adjustPath.apply(wixSource.source).toString(),\n+                wixSource.source.toAbsolutePath().toString(),\n@@ -119,8 +195,1 @@\n-        Map<String, String> appliedVaribales = new HashMap<>();\n-        Stream.of(wixVariables, wixSource.variables)\n-                .filter(Objects::nonNull)\n-                .forEachOrdered(appliedVaribales::putAll);\n-\n-        appliedVaribales.entrySet().stream().map(wixVar -> String.format(\"-d%s=%s\",\n-                wixVar.getKey(), wixVar.getValue())).forEachOrdered(\n-                cmdline::add);\n+        addWixVariblesToCommandLine(wixSource.variables, cmdline);\n@@ -134,2 +203,2 @@\n-        Executor.of(new ProcessBuilder(cmdline).directory(\n-                workDir != null ? workDir.toFile() : null)).executeExpectSuccess();\n+        Executor.of(new ProcessBuilder(cmdline).directory(workDir.toFile())).\n+                executeExpectSuccess();\n@@ -143,1 +212,1 @@\n-    private Map<WixTool, Path> toolset;\n+    private WixToolset toolset;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java","additions":95,"deletions":26,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -0,0 +1,420 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n+import java.util.AbstractMap;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLOutputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stax.StAXResult;\n+import javax.xml.transform.stream.StreamSource;\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n+import org.w3c.dom.Document;\n+import org.xml.sax.SAXException;\n+\n+\/**\n+ * Converts WiX v3 source file into WiX v4 format.\n+ *\/\n+final class WixSourceConverter {\n+\n+    enum Status {\n+        SavedAsIs,\n+        SavedAsIsMalfromedXml,\n+        Transformed,\n+    }\n+\n+    WixSourceConverter(Path resourceDir) throws IOException {\n+        var buf = new ByteArrayOutputStream();\n+\n+        new OverridableResource(\"wix3-to-wix4-conv.xsl\")\n+                .setPublicName(\"wix-conv.xsl\")\n+                .setResourceDir(resourceDir)\n+                .setCategory(I18N.getString(\"resource.wix-src-conv\"))\n+                .saveToStream(buf);\n+\n+        var xslt = new StreamSource(new ByteArrayInputStream(buf.toByteArray()));\n+\n+        var tf = TransformerFactory.newInstance();\n+        try {\n+            this.transformer = tf.newTransformer(xslt);\n+        } catch (TransformerException ex) {\n+            \/\/ Should never happen\n+            throw new RuntimeException(ex);\n+        }\n+\n+        this.outputFactory = XMLOutputFactory.newInstance();\n+    }\n+\n+    Status appyTo(OverridableResource resource, Path resourceSaveAsFile) throws IOException {\n+        \/\/ Save the resource into DOM tree and read xml namespaces from it.\n+        \/\/ If some namespaces are not recognized by this converter, save the resource as is.\n+        \/\/ If all detected namespaces are recognized, run transformation of the DOM tree and save\n+        \/\/ output into destination file.\n+\n+        var buf = saveResourceInMemory(resource);\n+\n+        Document inputXmlDom;\n+        try {\n+            inputXmlDom = IOUtils.initDocumentBuilder().parse(new ByteArrayInputStream(buf));\n+        } catch (SAXException ex) {\n+            \/\/ Malformed XML, don't run converter, save as is.\n+            resource.saveToFile(resourceSaveAsFile);\n+            return Status.SavedAsIsMalfromedXml;\n+        }\n+\n+        try {\n+            var nc = new NamespaceCollector();\n+            TransformerFactory.newInstance().newTransformer().\n+                    transform(new DOMSource(inputXmlDom), new StAXResult((XMLStreamWriter) Proxy.\n+                            newProxyInstance(XMLStreamWriter.class.getClassLoader(),\n+                                    new Class<?>[]{XMLStreamWriter.class}, nc)));\n+            if (!nc.isOnlyKnownNamespacesUsed()) {\n+                \/\/ Unsupported namespaces detected in input XML, don't run converter, save as is.\n+                resource.saveToFile(resourceSaveAsFile);\n+                return Status.SavedAsIs;\n+            }\n+        } catch (TransformerException ex) {\n+            \/\/ Should never happen\n+            throw new RuntimeException(ex);\n+        }\n+\n+        Supplier<Source> inputXml = () -> {\n+            \/\/ Should be \"new DOMSource(inputXmlDom)\", but no transfromation is applied in this case!\n+            return new StreamSource(new ByteArrayInputStream(buf));\n+        };\n+\n+        var nc = new NamespaceCollector();\n+        try {\n+            \/\/ Run transfomation to collect namespaces from the output XML.\n+            transformer.transform(inputXml.get(), new StAXResult((XMLStreamWriter) Proxy.\n+                    newProxyInstance(XMLStreamWriter.class.getClassLoader(),\n+                            new Class<?>[]{XMLStreamWriter.class}, nc)));\n+        } catch (TransformerException ex) {\n+            \/\/ Should never happen\n+            throw new RuntimeException(ex);\n+        }\n+\n+        try (var outXml = new ByteArrayOutputStream()) {\n+            transformer.transform(inputXml.get(), new StAXResult((XMLStreamWriter) Proxy.\n+                    newProxyInstance(XMLStreamWriter.class.getClassLoader(),\n+                            new Class<?>[]{XMLStreamWriter.class}, new NamespaceCleaner(nc.\n+                                    getPrefixToUri(), outputFactory.createXMLStreamWriter(outXml)))));\n+            Files.createDirectories(IOUtils.getParent(resourceSaveAsFile));\n+            Files.copy(new ByteArrayInputStream(outXml.toByteArray()), resourceSaveAsFile,\n+                    StandardCopyOption.REPLACE_EXISTING);\n+        } catch (TransformerException | XMLStreamException ex) {\n+            \/\/ Should never happen\n+            throw new RuntimeException(ex);\n+        }\n+\n+        return Status.Transformed;\n+    }\n+\n+    private static byte[] saveResourceInMemory(OverridableResource resource) throws IOException {\n+        var buf = new ByteArrayOutputStream();\n+        resource.saveToStream(buf);\n+        return buf.toByteArray();\n+    }\n+\n+    final static class ResourceGroup {\n+\n+        ResourceGroup(WixToolsetType wixToolsetType) {\n+            this.wixToolsetType = wixToolsetType;\n+        }\n+\n+        void addResource(OverridableResource resource, Path resourceSaveAsFile) {\n+            resources.put(resourceSaveAsFile, resource);\n+        }\n+\n+        void saveResources() throws IOException {\n+            switch (wixToolsetType) {\n+                case Wix3 -> {\n+                    for (var e : resources.entrySet()) {\n+                        e.getValue().saveToFile(e.getKey());\n+                    }\n+                }\n+                case Wix4 -> {\n+                    var resourceDir = resources.values().stream().filter(res -> {\n+                        return null != res.getResourceDir();\n+                    }).findAny().map(OverridableResource::getResourceDir).orElse(null);\n+                    var conv = new WixSourceConverter(resourceDir);\n+                    for (var e : resources.entrySet()) {\n+                        conv.appyTo(e.getValue(), e.getKey());\n+                    }\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+        }\n+\n+        private final Map<Path, OverridableResource> resources = new HashMap<>();\n+        private final WixToolsetType wixToolsetType;\n+    }\n+\n+    \/\/\n+    \/\/    Default JDK XSLT v1.0 processor is not handling well default namespace mappings.\n+    \/\/    Running generic template:\n+    \/\/\n+    \/\/    <xsl:template match=\"wix3loc:*\">\n+    \/\/      <xsl:element name=\"{local-name()}\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\">\n+    \/\/        <xsl:apply-templates select=\"@*|node()\"\/>\n+    \/\/      <\/xsl:element>\n+    \/\/    <\/xsl:template>\n+    \/\/\n+    \/\/    produces:\n+    \/\/\n+    \/\/    <ns0:WixLocalization xmlns:ns0=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\" Culture=\"en-us\" Codepage=\"1252\">\n+    \/\/      <ns1:String xmlns:ns1=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\" Value=\"The folder [INSTALLDIR] already exist. Would you like to install to that folder anyway?\" Id=\"message.install.dir.exist\"\/>\n+    \/\/      <ns2:String xmlns:ns2=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\" Value=\"Main Feature\" Id=\"MainFeatureTitle\"\/>\n+    \/\/      ...\n+    \/\/      <ns12:String xmlns:ns12=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\" Value=\"Open with [ProductName]\" Id=\"ContextMenuCommandLabel\"\/>\n+    \/\/    <\/ns0:WixLocalization>\n+    \/\/\n+    \/\/    which is conformant XML but WiX4 doesn't like it:\n+    \/\/\n+    \/\/    wix.exe : error WIX0202: The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element contains an unsupported extension attribute '{http:\/\/www.w3.org\/2000\/xmlns\/}ns1'. The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element does not currently support extension attributes. Is the {http:\/\/www.w3.org\/2000\/xmlns\/}ns1 attribute using the correct XML namespace?\n+    \/\/    wix.exe : error WIX0202: The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element contains an unsupported extension attribute '{http:\/\/www.w3.org\/2000\/xmlns\/}ns2'. The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element does not currently support extension attributes. Is the {http:\/\/www.w3.org\/2000\/xmlns\/}ns2 attribute using the correct XML namespace?\n+    \/\/    wix.exe : error WIX0202: The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element contains an unsupported extension attribute '{http:\/\/www.w3.org\/2000\/xmlns\/}ns3'. The {http:\/\/wixtoolset.org\/schemas\/v4\/wxl}String element does not currently support extension attributes. Is the {http:\/\/www.w3.org\/2000\/xmlns\/}ns3 attribute using the correct XML namespace?\n+    \/\/\n+    \/\/    Someone hit this issue long ago - https:\/\/stackoverflow.com\/questions\/26904623\/replace-default-namespace-using-xsl and they suggested to use different XSLT processor.\n+    \/\/    Two online XSLT processors used in testing produce clean XML with this template indeed:\n+    \/\/\n+    \/\/    <WixLocalization xmlns=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\" Codepage=\"1252\" Culture=\"en-us\">\n+    \/\/      <String Value=\"The folder [INSTALLDIR] already exist. Would you like to install to that folder anyway?\" Id=\"message.install.dir.exist\"\/>\n+    \/\/      <String Value=\"Main Feature\" Id=\"MainFeatureTitle\"\/>\n+    \/\/      ...\n+    \/\/      <String Value=\"Open with [ProductName]\" Id=\"ContextMenuCommandLabel\"\/>\n+    \/\/    <\/WixLocalization>\n+    \/\/\n+    \/\/    To workaround default JDK's XSLT processor limitations we do additionl postprocessing of output XML with NamespaceCleaner class.\n+    \/\/\n+    private static class NamespaceCleaner implements InvocationHandler {\n+\n+        NamespaceCleaner(Map<String, String> prefixToUri, XMLStreamWriter target) {\n+            this.uriToPrefix = prefixToUri.entrySet().stream().collect(Collectors.toMap(\n+                    Map.Entry::getValue, e -> {\n+                        return new Prefix(e.getKey());\n+                    }, (x, y) -> x));\n+            this.prefixToUri = prefixToUri;\n+            this.target = target;\n+        }\n+\n+        @Override\n+        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+            switch (method.getName()) {\n+                case \"writeNamespace\" -> {\n+                    final String uri = (String) args[1];\n+                    var prefixObj = uriToPrefix.get(uri);\n+                    if (!prefixObj.written) {\n+                        prefixObj.written = true;\n+                        target.writeNamespace(prefixObj.name, uri);\n+                    }\n+                    return null;\n+                }\n+                case \"writeStartElement\", \"writeEmptyElement\" -> {\n+                    final String name;\n+                    switch (args.length) {\n+                        case 1 ->\n+                            name = (String) args[0];\n+                        case 2, 3 ->\n+                            name = (String) args[1];\n+                        default ->\n+                            throw new IllegalArgumentException();\n+                    }\n+\n+                    final String prefix;\n+                    final String localName;\n+                    final String[] tokens = name.split(\":\", 2);\n+                    if (tokens.length == 2) {\n+                        prefix = tokens[0];\n+                        localName = tokens[1];\n+                    } else {\n+                        localName = name;\n+                        switch (args.length) {\n+                            case 3 ->\n+                                prefix = (String) args[0];\n+                            case 2 ->\n+                                prefix = uriToPrefix.get((String) args[0]).name;\n+                            default ->\n+                                prefix = null;\n+                        }\n+                    }\n+\n+                    if (prefix != null && !XMLConstants.DEFAULT_NS_PREFIX.equals(prefix)) {\n+                        final String uri = prefixToUri.get(prefix);\n+                        var prefixObj = uriToPrefix.get(uri);\n+                        if (prefixObj.written) {\n+                            var writeName = String.join(\":\", prefixObj.name, localName);\n+                            if (\"writeStartElement\".equals(method.getName())) {\n+                                target.writeStartElement(writeName);\n+                            } else {\n+                                target.writeEmptyElement(writeName);\n+                            }\n+                            return null;\n+                        } else {\n+                            prefixObj.written = (args.length > 1);\n+                            args = Arrays.copyOf(args, args.length, Object[].class);\n+                            if (localName.equals(name)) {\n+                                \/\/ No prefix in the name\n+                                if (args.length == 3) {\n+                                    args[0] = prefixObj.name;\n+                                }\n+                            } else {\n+                                var writeName = String.join(\":\", prefixObj.name, localName);\n+                                switch (args.length) {\n+                                    case 1 ->\n+                                        args[0] = writeName;\n+                                    case 2 -> {\n+                                        args[0] = uri;\n+                                        args[1] = writeName;\n+                                    }\n+                                    case 3 -> {\n+                                        args[0] = prefixObj.name;\n+                                        args[1] = writeName;\n+                                        args[2] = uri;\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+\n+            return method.invoke(target, args);\n+        }\n+\n+        static class Prefix {\n+\n+            Prefix(String name) {\n+                this.name = name;\n+            }\n+\n+            private final String name;\n+            private boolean written;\n+        }\n+\n+        private final Map<String, Prefix> uriToPrefix;\n+        private final Map<String, String> prefixToUri;\n+        private final XMLStreamWriter target;\n+    }\n+\n+    private static class NamespaceCollector implements InvocationHandler {\n+\n+        @Override\n+        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+            switch (method.getName()) {\n+                case \"setPrefix\", \"writeNamespace\" -> {\n+                    var prefix = (String) args[0];\n+                    var namespace = prefixToUri.computeIfAbsent(prefix, k -> createValue(args[1]));\n+                    if (XMLConstants.XMLNS_ATTRIBUTE.equals(prefix)) {\n+                        namespace.setValue(true);\n+                    }\n+                }\n+                case \"writeStartElement\", \"writeEmptyElement\" -> {\n+                    switch (args.length) {\n+                        case 3 ->\n+                            prefixToUri.computeIfAbsent((String) args[0], k -> createValue(\n+                                    (String) args[2])).setValue(true);\n+                        case 2 ->\n+                            initFromElementName((String) args[1], (String) args[0]);\n+                        case 1 ->\n+                            initFromElementName((String) args[0], null);\n+                    }\n+                }\n+            }\n+            return null;\n+        }\n+\n+        boolean isOnlyKnownNamespacesUsed() {\n+            return prefixToUri.values().stream().filter(namespace -> {\n+                return namespace.getValue();\n+            }).allMatch(namespace -> {\n+                if (!namespace.getValue()) {\n+                    return true;\n+                } else {\n+                    return KNOWN_NAMESPACES.contains(namespace.getKey());\n+                }\n+            });\n+        }\n+\n+        Map<String, String> getPrefixToUri() {\n+            return prefixToUri.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,\n+                    e -> {\n+                        return e.getValue().getKey();\n+                    }));\n+        }\n+\n+        private void initFromElementName(String name, String namespace) {\n+            final String[] tokens = name.split(\":\", 2);\n+            if (tokens.length == 2) {\n+                if (namespace != null) {\n+                    prefixToUri.computeIfAbsent(tokens[0], k -> createValue(namespace)).setValue(\n+                            true);\n+                } else {\n+                    prefixToUri.computeIfPresent(tokens[0], (k, v) -> {\n+                        v.setValue(true);\n+                        return v;\n+                    });\n+                }\n+            }\n+        }\n+\n+        private Map.Entry<String, Boolean> createValue(Object prefix) {\n+            return new AbstractMap.SimpleEntry<String, Boolean>((String) prefix, false);\n+        }\n+\n+        private final Map<String, Map.Entry<String, Boolean>> prefixToUri = new HashMap<>();\n+    }\n+\n+    private final Transformer transformer;\n+    private final XMLOutputFactory outputFactory;\n+\n+    \/\/ The list of WiX v3 namespaces this converter can handle\n+    private final static Set<String> KNOWN_NAMESPACES = Set.of(\n+            \"http:\/\/schemas.microsoft.com\/wix\/2006\/localization\",\n+            \"http:\/\/schemas.microsoft.com\/wix\/2006\/wi\");\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourceConverter.java","additions":420,"deletions":0,"binary":false,"changes":420,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-\n@@ -35,1 +34,0 @@\n-import java.util.Collections;\n@@ -37,1 +35,0 @@\n-import java.util.HashMap;\n@@ -40,0 +37,1 @@\n+import java.util.Objects;\n@@ -41,1 +39,2 @@\n-import java.util.function.Supplier;\n+import java.util.Set;\n+import java.util.function.Function;\n@@ -44,0 +43,1 @@\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n@@ -49,1 +49,8 @@\n-    Candle, Light;\n+    Candle3(\"candle\", DottedVersion.lazy(\"3.0\")),\n+    Light3(\"light\", DottedVersion.lazy(\"3.0\")),\n+    Wix4(\"wix\", DottedVersion.lazy(\"4.0.4\"));\n+\n+    WixTool(String commandName, DottedVersion minimalVersion) {\n+        this.toolFileName = IOUtils.addSuffix(Path.of(commandName), \".exe\");\n+        this.minimalVersion = minimalVersion;\n+    }\n@@ -52,0 +59,1 @@\n+\n@@ -54,1 +62,1 @@\n-            this.version = new DottedVersion(version);\n+            this.version = DottedVersion.lazy(version);\n@@ -61,7 +69,22 @@\n-    static Map<WixTool, ToolInfo> toolset() throws ConfigException {\n-        Map<WixTool, ToolInfo> toolset = new HashMap<>();\n-        for (var tool : values()) {\n-            toolset.put(tool, tool.find());\n-        }\n-        return toolset;\n-    }\n+    static WixToolset createToolset() throws ConfigException {\n+        Function<List<ToolLookupResult>, Map<WixTool, ToolInfo>> conv = lookupResults -> {\n+            return lookupResults.stream().filter(ToolLookupResult::isValid).collect(Collectors.\n+                    groupingBy(lookupResult -> {\n+                return lookupResult.getInfo().version.toString();\n+            })).values().stream().filter(sameVersionLookupResults -> {\n+                Set<WixTool> sameVersionTools = sameVersionLookupResults.stream().map(\n+                        ToolLookupResult::getTool).collect(Collectors.toSet());\n+                if (sameVersionTools.equals(Set.of(Candle3)) || sameVersionTools.equals(Set.of(\n+                        Light3))) {\n+                    \/\/ There is only one tool from WiX v3 toolset of some version available. Discard it.\n+                    return false;\n+                } else {\n+                    return true;\n+                }\n+            }).flatMap(List::stream).collect(Collectors.toMap(ToolLookupResult::getTool,\n+                    ToolLookupResult::getInfo, (ToolInfo x, ToolInfo y) -> {\n+                        return Stream.of(x, y).sorted(Comparator.comparing((ToolInfo toolInfo) -> {\n+                            return toolInfo.version.toComponentsString();\n+                        }).reversed()).findFirst().get();\n+                    }));\n+        };\n@@ -69,3 +92,7 @@\n-    ToolInfo find() throws ConfigException {\n-        final Path toolFileName = IOUtils.addSuffix(\n-                Path.of(name().toLowerCase()), \".exe\");\n+        Function<List<ToolLookupResult>, Optional<WixToolset>> createToolset = lookupResults -> {\n+            var tools = conv.apply(lookupResults);\n+            \/\/ Try to build a toolset found in the PATH and in known locations.\n+            return Stream.of(WixToolsetType.values()).map(toolsetType -> {\n+                return WixToolset.create(toolsetType.getTools(), tools);\n+            }).filter(Objects::nonNull).findFirst();\n+        };\n@@ -73,7 +100,3 @@\n-        String[] version = new String[1];\n-        ConfigException reason = createToolValidator(toolFileName, version).get();\n-        if (version[0] != null) {\n-            if (reason == null) {\n-                \/\/ Found in PATH.\n-                return new ToolInfo(toolFileName, version[0]);\n-            }\n+        var toolsInPath = Stream.of(values()).map(tool -> {\n+            return new ToolLookupResult(tool, null);\n+        }).toList();\n@@ -81,2 +104,4 @@\n-            \/\/ Found in PATH, but something went wrong.\n-            throw reason;\n+        \/\/ Try to build a toolset from tools in the PATH first.\n+        var toolset = createToolset.apply(toolsInPath);\n+        if (toolset.isPresent()) {\n+            return toolset.get();\n@@ -85,6 +110,25 @@\n-        for (var dir : findWixInstallDirs()) {\n-            Path path = dir.resolve(toolFileName);\n-            if (Files.exists(path)) {\n-                reason = createToolValidator(path, version).get();\n-                if (reason != null) {\n-                    throw reason;\n+        \/\/ Look up for WiX tools in known locations.\n+        var toolsInKnownWiXDirs = findWixInstallDirs().stream().map(dir -> {\n+            return Stream.of(values()).map(tool -> {\n+                return new ToolLookupResult(tool, dir);\n+            });\n+        }).flatMap(Function.identity()).toList();\n+\n+        \/\/ Build a toolset found in the PATH and in known locations.\n+        var allFoundTools = Stream.of(toolsInPath, toolsInKnownWiXDirs).flatMap(List::stream).filter(\n+                ToolLookupResult::isValid).toList();\n+        toolset = createToolset.apply(allFoundTools);\n+        if (toolset.isPresent()) {\n+            return toolset.get();\n+        } else if (allFoundTools.isEmpty()) {\n+            throw new ConfigException(I18N.getString(\"error.no-wix-tools\"), I18N.getString(\n+                    \"error.no-wix-tools.advice\"));\n+        } else {\n+            var toolOldVerErr = allFoundTools.stream().map(lookupResult -> {\n+                if (lookupResult.versionTooOld) {\n+                    return new ConfigException(MessageFormat.format(I18N.getString(\n+                            \"message.wrong-tool-version\"), lookupResult.getInfo().path,\n+                            lookupResult.getInfo().version, lookupResult.getTool().minimalVersion),\n+                            I18N.getString(\"error.no-wix-tools.advice\"));\n+                } else {\n+                    return null;\n@@ -92,1 +136,6 @@\n-                return new ToolInfo(path, version[0]);\n+            }).filter(Objects::nonNull).findAny();\n+            if (toolOldVerErr.isPresent()) {\n+                throw toolOldVerErr.get();\n+            } else {\n+                throw new ConfigException(I18N.getString(\"error.no-wix-tools\"), I18N.getString(\n+                        \"error.no-wix-tools.advice\"));\n@@ -95,2 +144,0 @@\n-\n-        throw reason;\n@@ -99,17 +146,23 @@\n-    private static Supplier<ConfigException> createToolValidator(Path toolPath,\n-            String[] versionCtnr) {\n-        return new ToolValidator(toolPath)\n-                .setCommandLine(\"\/?\")\n-                .setMinimalVersion(MINIMAL_VERSION)\n-                .setToolNotFoundErrorHandler(\n-                        (name, ex) -> new ConfigException(\n-                                I18N.getString(\"error.no-wix-tools\"),\n-                                I18N.getString(\"error.no-wix-tools.advice\")))\n-                .setToolOldVersionErrorHandler(\n-                        (name, version) -> new ConfigException(\n-                                MessageFormat.format(I18N.getString(\n-                                        \"message.wrong-tool-version\"), name,\n-                                        version, MINIMAL_VERSION),\n-                                I18N.getString(\"error.no-wix-tools.advice\")))\n-                .setVersionParser(output -> {\n-                    versionCtnr[0] = \"\";\n+    private static class ToolLookupResult {\n+\n+        ToolLookupResult(WixTool tool, Path lookupDir) {\n+\n+            final Path toolPath = Optional.ofNullable(lookupDir).map(p -> p.resolve(\n+                    tool.toolFileName)).orElse(tool.toolFileName);\n+\n+            final boolean[] tooOld = new boolean[1];\n+            final String[] parsedVersion = new String[1];\n+\n+            final var validator = new ToolValidator(toolPath).setMinimalVersion(tool.minimalVersion).\n+                    setToolNotFoundErrorHandler((name, ex) -> {\n+                        return new ConfigException(\"\", \"\");\n+                    }).setToolOldVersionErrorHandler((name, version) -> {\n+                tooOld[0] = true;\n+                return null;\n+            });\n+\n+            final Function<Stream<String>, String> versionParser;\n+\n+            if (Set.of(Candle3, Light3).contains(tool)) {\n+                validator.setCommandLine(\"\/?\");\n+                versionParser = output -> {\n@@ -121,4 +174,8 @@\n-                    versionCtnr[0] = firstLineOfOutput.substring(separatorIdx + 1);\n-                    return versionCtnr[0];\n-                })::validate;\n-    }\n+                    return firstLineOfOutput.substring(separatorIdx + 1);\n+                };\n+            } else {\n+                validator.setCommandLine(\"--version\");\n+                versionParser = output -> {\n+                    return output.findFirst().orElse(\"\");\n+                };\n+            }\n@@ -126,1 +183,4 @@\n-    private static final DottedVersion MINIMAL_VERSION = DottedVersion.lazy(\"3.0\");\n+            validator.setVersionParser(output -> {\n+                parsedVersion[0] = versionParser.apply(output);\n+                return parsedVersion[0];\n+            });\n@@ -128,1 +188,33 @@\n-    static Path getSystemDir(String envVar, String knownDir) {\n+            this.tool = tool;\n+            if (validator.validate() == null) {\n+                \/\/ Tool found\n+                this.versionTooOld = tooOld[0];\n+                this.info = new ToolInfo(toolPath, parsedVersion[0]);\n+            } else {\n+                this.versionTooOld = false;\n+                this.info = null;\n+            }\n+        }\n+\n+        WixTool getTool() {\n+            return tool;\n+        }\n+\n+        ToolInfo getInfo() {\n+            return info;\n+        }\n+\n+        boolean isValid() {\n+            return info != null && !versionTooOld;\n+        }\n+\n+        boolean isVersionTooOld() {\n+            return versionTooOld;\n+        }\n+\n+        private final WixTool tool;\n+        private final ToolInfo info;\n+        private final boolean versionTooOld;\n+    }\n+\n+    private static Path getSystemDir(String envVar, String knownDir) {\n@@ -132,2 +224,2 @@\n-                        .ofNullable(getEnvVariableAsPath(\"SystemDrive\"))\n-                        .orElseGet(() -> Path.of(\"C:\")).resolve(knownDir));\n+                .ofNullable(getEnvVariableAsPath(\"SystemDrive\"))\n+                .orElseGet(() -> Path.of(\"C:\")).resolve(knownDir));\n@@ -150,2 +242,16 @@\n-        PathMatcher wixInstallDirMatcher = FileSystems.getDefault().getPathMatcher(\n-                \"glob:WiX Toolset v*\");\n+        return Stream.of(findWixCurrentInstallDirs(), findWix3InstallDirs()).\n+                flatMap(List::stream).toList();\n+    }\n+\n+    private static List<Path> findWixCurrentInstallDirs() {\n+        return Stream.of(getEnvVariableAsPath(\"USERPROFILE\"), Optional.ofNullable(System.\n+                getProperty(\"user.home\")).map(Path::of).orElse(null)).filter(Objects::nonNull).map(\n+                path -> {\n+                    return path.resolve(\".dotnet\/tools\");\n+                }).filter(Files::isDirectory).distinct().toList();\n+    }\n+\n+    private static List<Path> findWix3InstallDirs() {\n+        PathMatcher wixInstallDirMatcher = FileSystems.getDefault().\n+                getPathMatcher(\n+                        \"glob:WiX Toolset v*\");\n@@ -160,1 +266,0 @@\n-            List<Path> result;\n@@ -162,1 +267,1 @@\n-                result = paths.toList();\n+                return paths.toList();\n@@ -165,1 +270,2 @@\n-                result = Collections.emptyList();\n+                List<Path> empty = List.of();\n+                return empty;\n@@ -167,1 +273,0 @@\n-            return result;\n@@ -169,4 +274,4 @@\n-        .filter(path -> wixInstallDirMatcher.matches(path.getFileName()))\n-        .sorted(Comparator.comparing(Path::getFileName).reversed())\n-        .map(path -> path.resolve(\"bin\"))\n-        .toList();\n+                .filter(path -> wixInstallDirMatcher.matches(path.getFileName())).\n+                sorted(Comparator.comparing(Path::getFileName).reversed())\n+                .map(path -> path.resolve(\"bin\"))\n+                .toList();\n@@ -174,0 +279,3 @@\n+\n+    private final Path toolFileName;\n+    private final DottedVersion minimalVersion;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixTool.java","additions":178,"deletions":70,"binary":false,"changes":248,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+final class WixToolset {\n+\n+    static enum WixToolsetType {\n+        \/\/ Wix v4+\n+        Wix4(WixTool.Wix4),\n+        \/\/ Wix v3+\n+        Wix3(WixTool.Candle3, WixTool.Light3);\n+\n+        WixToolsetType(WixTool... tools) {\n+            this.tools = Set.of(tools);\n+        }\n+\n+        Set<WixTool> getTools() {\n+            return tools;\n+        }\n+\n+        private final Set<WixTool> tools;\n+    }\n+\n+    private WixToolset(Map<WixTool, WixTool.ToolInfo> tools) {\n+        this.tools = tools;\n+    }\n+\n+    WixToolsetType getType() {\n+        return Stream.of(WixToolsetType.values()).filter(toolsetType -> {\n+            return toolsetType.getTools().equals(tools.keySet());\n+        }).findAny().get();\n+    }\n+\n+    Path getToolPath(WixTool tool) {\n+        return tools.get(tool).path;\n+    }\n+\n+    DottedVersion getVersion() {\n+        return tools.values().iterator().next().version;\n+    }\n+\n+    static WixToolset create(Set<WixTool> requiredTools, Map<WixTool, WixTool.ToolInfo> allTools) {\n+        var filteredTools = allTools.entrySet().stream().filter(e -> {\n+            return requiredTools.contains(e.getKey());\n+        }).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n+        if (filteredTools.keySet().equals(requiredTools)) {\n+            return new WixToolset(filteredTools);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    private final Map<WixTool, WixTool.ToolInfo> tools;\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixToolset.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -46,0 +46,1 @@\n+import jdk.jpackage.internal.WixToolset.WixToolsetType;\n@@ -103,1 +104,7 @@\n-            wixPipeline.addLightOptions(\"-ext\", \"WixUIExtension\");\n+            final String extName;\n+            switch (getWixType()) {\n+                case Wix3 -> extName = \"WixUIExtension\";\n+                case Wix4 -> extName = \"WixToolset.UI.wixext\";\n+                default -> throw new IllegalArgumentException();\n+            }\n+            wixPipeline.addLightOptions(\"-ext\", extName);\n@@ -151,3 +158,0 @@\n-        xml.writeStartElement(\"UI\");\n-        xml.writeAttribute(\"Id\", \"JpUI\");\n-\n@@ -156,1 +160,5 @@\n-            ui.write(this, xml);\n+            ui.write(getWixType(), this, xml);\n+        } else {\n+            xml.writeStartElement(\"UI\");\n+            xml.writeAttribute(\"Id\", \"JpUI\");\n+            xml.writeEndElement();\n@@ -158,2 +166,0 @@\n-\n-        xml.writeEndElement(); \/\/ UI\n@@ -190,5 +196,8 @@\n-        void write(WixUiFragmentBuilder outer, XMLStreamWriter xml) throws\n-                XMLStreamException, IOException {\n-            xml.writeStartElement(\"UIRef\");\n-            xml.writeAttribute(\"Id\", wixUIRef);\n-            xml.writeEndElement(); \/\/ UIRef\n+        void write(WixToolsetType wixType, WixUiFragmentBuilder outer, XMLStreamWriter xml) throws XMLStreamException, IOException {\n+            switch (wixType) {\n+                case Wix3 -> {}\n+                case Wix4 -> {\n+                    \/\/ https:\/\/wixtoolset.org\/docs\/fourthree\/faqs\/#converting-custom-wixui-dialog-sets\n+                    xml.writeProcessingInstruction(\"foreach WIXUIARCH in X86;X64;A64\");\n+                    writeWix4UIRef(xml, wixUIRef, \"JpUIInternal_$(WIXUIARCH)\");\n+                    xml.writeProcessingInstruction(\"endforeach\");\n@@ -196,0 +205,28 @@\n+                    writeWix4UIRef(xml, \"JpUIInternal\", \"JpUI\");\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+\n+            xml.writeStartElement(\"UI\");\n+            switch (wixType) {\n+                case Wix3 -> {\n+                    xml.writeAttribute(\"Id\", \"JpUI\");\n+                    xml.writeStartElement(\"UIRef\");\n+                    xml.writeAttribute(\"Id\", wixUIRef);\n+                    xml.writeEndElement(); \/\/ UIRef\n+                }\n+                case Wix4 -> {\n+                    xml.writeAttribute(\"Id\", \"JpUIInternal\");\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+            writeContents(wixType, outer, xml);\n+            xml.writeEndElement(); \/\/ UI\n+        }\n+\n+        private void writeContents(WixToolsetType wixType, WixUiFragmentBuilder outer,\n+                XMLStreamWriter xml) throws XMLStreamException, IOException {\n@@ -213,1 +250,1 @@\n-                            writePublishDialogPair(xml, publish, curPair);\n+                            writePublishDialogPair(wixType, xml, publish, curPair);\n@@ -221,0 +258,11 @@\n+        private static void writeWix4UIRef(XMLStreamWriter xml, String uiRef, String id) throws XMLStreamException, IOException {\n+            \/\/ https:\/\/wixtoolset.org\/docs\/fourthree\/faqs\/#referencing-the-standard-wixui-dialog-sets\n+            xml.writeStartElement(\"UI\");\n+            xml.writeAttribute(\"Id\", id);\n+            xml.writeStartElement(\"ui:WixUI\");\n+            xml.writeAttribute(\"Id\", uiRef);\n+            xml.writeNamespace(\"ui\", \"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\/ui\");\n+            xml.writeEndElement(); \/\/ UIRef\n+            xml.writeEndElement(); \/\/ UI\n+        }\n+\n@@ -444,3 +492,2 @@\n-    private static void writePublishDialogPair(XMLStreamWriter xml,\n-            Publish publish, DialogPair dialogPair) throws IOException,\n-            XMLStreamException {\n+    private static void writePublishDialogPair(WixToolsetType wixType, XMLStreamWriter xml,\n+            Publish publish, DialogPair dialogPair) throws IOException, XMLStreamException {\n@@ -455,1 +502,5 @@\n-        xml.writeCharacters(publish.condition);\n+        switch (wixType) {\n+            case Wix3 -> xml.writeCharacters(publish.condition);\n+            case Wix4 -> xml.writeAttribute(\"Condition\", publish.condition);\n+            default -> throw new IllegalArgumentException();\n+        }\n@@ -466,3 +517,2 @@\n-            addResource(\n-                    createResource(wxsFileName, params).setCategory(category),\n-                    wxsFileName);\n+            addResource(createResource(wxsFileName, params).setCategory(category).setPublicName(\n+                    wxsFileName), wxsFileName);\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixUiFragmentBuilder.java","additions":70,"deletions":20,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,1 @@\n-        <Control Id=\"Text\" Type=\"Text\" X=\"25\" Y=\"15\" Width=\"250\" Height=\"30\" TabSkip=\"no\">\n-          <Text>!(loc.message.install.dir.exist)<\/Text>\n-        <\/Control>\n+        <Control Id=\"Text\" Type=\"Text\" X=\"25\" Y=\"15\" Width=\"250\" Height=\"30\" TabSkip=\"no\" Text=\"!(loc.InstallDirNotEmptyDlgInstallDirExistMessage)\"\/>\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/InstallDirNotEmptyDlg.wxs","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-  <String Id=\"message.install.dir.exist\">Der Ordner [INSTALLDIR] ist bereits vorhanden. Möchten Sie diesen Ordner trotzdem installieren?<\/String>\r\n@@ -14,0 +13,1 @@\n+\r\n@@ -15,0 +15,2 @@\n+  <String Id=\"InstallDirNotEmptyDlgInstallDirExistMessage\">Der Ordner [INSTALLDIR] ist bereits vorhanden. Möchten Sie diesen Ordner trotzdem installieren?<\/String>\r\n+\r\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_de.wxl","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-  <String Id=\"message.install.dir.exist\">The folder [INSTALLDIR] already exist. Would you like to install to that folder anyway?<\/String>\n@@ -14,0 +13,1 @@\n+\n@@ -15,0 +15,2 @@\n+  <String Id=\"InstallDirNotEmptyDlgInstallDirExistMessage\">The folder [INSTALLDIR] already exist. Would you like to install to that folder anyway?<\/String>\n+\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_en.wxl","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-  <String Id=\"message.install.dir.exist\">フォルダ[INSTALLDIR]はすでに存在します。そのフォルダにインストールしますか?<\/String>\r\n@@ -14,0 +13,1 @@\n+\r\n@@ -15,0 +15,2 @@\n+  <String Id=\"InstallDirNotEmptyDlgInstallDirExistMessage\">フォルダ[INSTALLDIR]はすでに存在します。そのフォルダにインストールしますか?<\/String>\r\n+\r\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_ja.wxl","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-  <String Id=\"message.install.dir.exist\">文件夹 [INSTALLDIR] 已存在。是否仍要安装到该文件夹？<\/String>\r\n@@ -14,0 +13,1 @@\n+\r\n@@ -15,0 +15,2 @@\n+  <String Id=\"InstallDirNotEmptyDlgInstallDirExistMessage\">文件夹 [INSTALLDIR] 已存在。是否仍要安装到该文件夹？<\/String>\r\n+\r\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_zh_CN.wxl","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n@@ -45,1 +46,1 @@\n-error.no-wix-tools=Can not find WiX tools (light.exe, candle.exe)\n+error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4 wix.exe and none was found\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n@@ -45,1 +46,1 @@\n-error.no-wix-tools=WiX-Tools (light.exe, candle.exe) nicht gefunden\n+error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4 wix.exe and none was found\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_de.properties","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n@@ -45,1 +46,1 @@\n-error.no-wix-tools=WiXツール(light.exe、candle.exe)が見つかりません\n+error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4 wix.exe and none was found\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+resource.wix-src-conv=XSLT stylesheet converting WiX sources from WiX v3 to WiX v4 format\n@@ -45,1 +46,1 @@\n-error.no-wix-tools=找不到 WiX 工具 (light.exe, candle.exe)\n+error.no-wix-tools=Can not find WiX tools. Was looking for WiX v3 light.exe and candle.exe or WiX v4 wix.exe and none was found\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-<Include\/>\n+<Include xmlns=\"http:\/\/schemas.microsoft.com\/wix\/2006\/wi\"\/>\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/overrides.wxi","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,183 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+-->\n+\n+<!--\n+  This stylesheet can be applied to Wix3 .wxl, .wxs, and .wsi source files.\n+-->\n+<xsl:stylesheet version=\"1.0\"\n+                xmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\"\n+                xmlns:wix3loc=\"http:\/\/schemas.microsoft.com\/wix\/2006\/localization\"\n+                xmlns:wix3=\"http:\/\/schemas.microsoft.com\/wix\/2006\/wi\"\n+>\n+  <!-- Wix4 complains about xml declaration in input files. Turn it off -->\n+  <xsl:output method=\"xml\" omit-xml-declaration=\"yes\" indent=\"yes\"\/>\n+\n+  <!--\n+    Remap xmlns=\"http:\/\/schemas.microsoft.com\/wix\/2006\/localization\"\n+    to xmlns=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\"\n+  -->\n+\n+  <xsl:template match=\"wix3loc:*\">\n+    <xsl:element name=\"{local-name()}\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\">\n+      <xsl:apply-templates select=\"@*|node()\"\/>\n+    <\/xsl:element>\n+  <\/xsl:template>\n+\n+  <!--\n+    Remap xmlns=\"http:\/\/schemas.microsoft.com\/wix\/2006\/localization\"\n+    to xmlns=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\"\n+  -->\n+\n+  <xsl:template match=\"wix3:*\">\n+    <xsl:element name=\"{local-name()}\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\">\n+      <xsl:apply-templates select=\"@*|node()\"\/>\n+    <\/xsl:element>\n+  <\/xsl:template>\n+\n+\n+  <!--\n+    From <String Id=\"foo\">Bar<\/String> to <String Id=\"foo\" Value=\"Bar\"\/>\n+  -->\n+  <xsl:template match=\"wix3loc:WixLocalization\/wix3loc:String\">\n+    <xsl:element name=\"{local-name()}\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxl\">\n+      <xsl:attribute name=\"Value\">\n+        <xsl:value-of select=\"text()\"\/>\n+      <\/xsl:attribute>\n+      <xsl:apply-templates select=\"@*\"\/>\n+    <\/xsl:element>\n+  <\/xsl:template>\n+\n+\n+  <!--\n+  Wix3 Product (https:\/\/wixtoolset.org\/docs\/v3\/xsd\/wix\/product\/):\n+    Id\n+    Codepage\n+    Language\n+    Manufacturer\n+    Name\n+    UpgradeCode\n+    Version\n+\n+  Wix3 Package (https:\/\/wixtoolset.org\/docs\/v3\/xsd\/wix\/package\/):\n+    AdminImage\n+    Comments\n+    Compressed\n+    Description\n+    Id\n+    InstallerVersion\n+    InstallPrivileges\n+    InstallScope\n+    Keywords\n+    Languages\n+    Manufacturer\n+    Platform\n+    Platforms\n+    ReadOnly\n+    ShortNames\n+    SummaryCodepage\n+\n+  Wix4 Package (https:\/\/wixtoolset.org\/docs\/schema\/wxs\/package\/):\n+    Codepage          <- Wix3:Product\/@Codepage\n+    Compressed        <- Wix3:@Compressed\n+    InstallerVersion  <- Wix3:@InstallerVersion\n+    Language          <- Wix3:Product\/@Language\n+    Manufacturer      <- Wix3:Product\/@Manufacturer\n+    Name              <- Wix3:Product\/@Name\n+    ProductCode       <- Wix3:Product\/@Id\n+    Scope             <- Wix3:@InstallScope\n+    ShortNames        <- Wix3:@ShortNames\n+    UpgradeCode       <- Wix3:Product\/@UpgradeCode\n+    UpgradeStrategy   <-\n+    Version           <- Wix3:Product\/@Version\n+\n+  Wix4 SummaryInformation (https:\/\/wixtoolset.org\/docs\/schema\/wxs\/summaryinformation\/):\n+    Codepage          <- Wix3:Product\/@Codepage\n+    Comments          <- Wix3:@Comments\n+    Description       <- Wix3:@Description\n+    Keywords          <- Wix3:@Keywords\n+    Manufacturer      <- Wix3:Product\/@Manufacturer\n+  -->\n+\n+  <xsl:template match=\"wix3:Product\">\n+    <xsl:element name=\"Package\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\">\n+      <xsl:apply-templates select=\"@Codepage|wix3:Package\/@Compressed|wix3:Package\/@InstallerVersion|@Language|@Manufacturer|@Name|@Id|wix3:Package\/@InstallScope|wix3:Package\/@ShortNames|@UpgradeCode|@Version\"\/>\n+      <xsl:if test=\"@Id\">\n+        <xsl:attribute name=\"ProductCode\">\n+          <xsl:value-of select=\"@Id\"\/>\n+        <\/xsl:attribute>\n+      <\/xsl:if>\n+      <xsl:if test=\"wix3:Package\/@InstallScope\">\n+        <xsl:attribute name=\"Scope\">\n+          <xsl:value-of select=\"wix3:Package\/@InstallScope\"\/>\n+        <\/xsl:attribute>\n+      <\/xsl:if>\n+      <xsl:element name=\"SummaryInformation\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\">\n+        <xsl:apply-templates select=\"@Codepage|wix3:Package\/@Comments|wix3:Package\/@Description|wix3:Package\/@Keywords|@Manufacturer\"\/>\n+      <\/xsl:element>\n+      <xsl:apply-templates select=\"node()\"\/>\n+    <\/xsl:element>\n+  <\/xsl:template>\n+\n+  <xsl:template match=\"wix3:Package|wix3:Product\/@Id|wix3:Package\/@InstallScope\"\/>\n+\n+\n+  <xsl:template match=\"wix3:CustomAction\/@BinaryKey\">\n+    <xsl:attribute name=\"BinaryRef\">\n+      <xsl:value-of select=\".\"\/>\n+    <\/xsl:attribute>\n+  <\/xsl:template>\n+\n+\n+  <xsl:template match=\"wix3:Custom|wix3:Publish\">\n+    <xsl:element name=\"{local-name()}\" namespace=\"http:\/\/wixtoolset.org\/schemas\/v4\/wxs\">\n+      <xsl:apply-templates select=\"@*\"\/>\n+      <xsl:if test=\"text()\">\n+        <xsl:attribute name=\"Condition\">\n+          <xsl:value-of select=\"text()\"\/>\n+        <\/xsl:attribute>\n+      <\/xsl:if>\n+      <xsl:apply-templates select=\"node()\"\/>\n+    <\/xsl:element>\n+  <\/xsl:template>\n+\n+  <xsl:template match=\"wix3:Custom\/text()|wix3:Publish\/text()\"\/>\n+\n+\n+  <xsl:template match=\"wix3:Directory[@Id='TARGETDIR']\"\/>\n+\n+\n+  <!--\n+    Identity transform\n+  -->\n+  <xsl:template match=\"@*|node()\">\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"\/>\n+    <\/xsl:copy>\n+  <\/xsl:template>\n+\n+<\/xsl:stylesheet>\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/wix3-to-wix4-conv.xsl","additions":183,"deletions":0,"binary":false,"changes":183,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,0 +142,24 @@\n+\n+            \/\/\n+            \/\/ WiX3 uses \".\" as the value of \"DefaultDir\" field for \"ProgramFiles64Folder\" folder in msi's Directory table\n+            \/\/ WiX4 uses \"PFiles64\" as the value of \"DefaultDir\" field for \"ProgramFiles64Folder\" folder in msi's Directory table\n+            \/\/ msiexec creates \"Program Files\/.\/<App Installation Directory>\" from WiX3 msi which translates to \"Program Files\/<App Installation Directory>\"\n+            \/\/ msiexec creates \"Program Files\/PFiles64\/<App Installation Directory>\" from WiX4 msi\n+            \/\/ So for WiX4 msi we need to transform \"Program Files\/PFiles64\/<App Installation Directory>\" into \"Program Files\/<App Installation Directory>\"\n+            \/\/\n+            \/\/ WiX4 does the same thing for %LocalAppData%.\n+            \/\/\n+            for (var extraPathComponent : List.of(\"PFiles64\", \"LocalApp\")) {\n+                if (Files.isDirectory(unpackDir.resolve(extraPathComponent))) {\n+                    Path installationSubDirectory = getInstallationSubDirectory(cmd);\n+                    Path from = Path.of(extraPathComponent).resolve(installationSubDirectory);\n+                    Path to = installationSubDirectory;\n+                    TKit.trace(String.format(\"Convert [%s] into [%s] in [%s] directory\", from, to,\n+                            unpackDir));\n+                    ThrowingRunnable.toRunnable(() -> {\n+                        Files.createDirectories(unpackDir.resolve(to).getParent());\n+                        Files.move(unpackDir.resolve(from), unpackDir.resolve(to));\n+                        TKit.deleteDirectoryRecursive(unpackDir.resolve(extraPathComponent));\n+                    }).run();\n+                }\n+            }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/WindowsHelper.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.stream.Collectors;\n@@ -58,1 +59,1 @@\n-            String expectedCulture, String expectedErrorMessage,\n+            String[] expectedCultures, String expectedErrorMessage,\n@@ -62,1 +63,1 @@\n-        this.expectedCulture = expectedCulture;\n+        this.expectedCultures = expectedCultures;\n@@ -72,9 +73,9 @@\n-            {null, \"en-us\", null, null, null, false},\n-            {null, \"en-us\", null, \"en\", \"US\", false},\n-            {null, \"en-us\", null, \"en\", \"US\", true},\n-            {null, \"de-de\", null, \"de\", \"DE\", false},\n-            {null, \"de-de\", null, \"de\", \"DE\", true},\n-            {null, \"ja-jp\", null, \"ja\", \"JP\", false},\n-            {null, \"ja-jp\", null, \"ja\", \"JP\", true},\n-            {null, \"zh-cn\", null, \"zh\", \"CN\", false},\n-            {null, \"zh-cn\", null, \"zh\", \"CN\", true},\n+            {null, new String[] {\"en-us\"}, null, null, null, false},\n+            {null, new String[] {\"en-us\"}, null, \"en\", \"US\", false},\n+            {null, new String[] {\"en-us\"}, null, \"en\", \"US\", true},\n+            {null, new String[] {\"de-de\"}, null, \"de\", \"DE\", false},\n+            {null, new String[] {\"de-de\"}, null, \"de\", \"DE\", true},\n+            {null, new String[] {\"ja-jp\"}, null, \"ja\", \"JP\", false},\n+            {null, new String[] {\"ja-jp\"}, null, \"ja\", \"JP\", true},\n+            {null, new String[] {\"zh-cn\"}, null, \"zh\", \"CN\", false},\n+            {null, new String[] {\"zh-cn\"}, null, \"zh\", \"CN\", true},\n@@ -83,1 +84,1 @@\n-            }, \"en-us\", null, null, null, false},\n+            }, new String[] {\"en-us\"}, null, null, null, false},\n@@ -86,1 +87,1 @@\n-            }, \"fr;en-us\", null, null, null, false},\n+            }, new String[] {\"fr\", \"en-us\"}, null, null, null, false},\n@@ -90,1 +91,1 @@\n-            }, \"fr;en-us\", null, null, null, false},\n+            }, new String[] {\"fr\", \"en-us\"}, null, null, null, false},\n@@ -94,1 +95,1 @@\n-            }, \"it;fr;en-us\", null, null, null, false},\n+            }, new String[] {\"it\", \"fr\", \"en-us\"}, null, null, null, false},\n@@ -98,1 +99,1 @@\n-            }, \"fr;it;en-us\", null, null, null, false},\n+            }, new String[] {\"fr\", \"it\", \"en-us\"}, null, null, null, false},\n@@ -104,1 +105,1 @@\n-            }, \"fr;it;en-us\", null, null, null, false},\n+            }, new String[] {\"fr\", \"it\", \"en-us\"}, null, null, null, false},\n@@ -111,1 +112,1 @@\n-            }, \"en-us\", null, null, null, false}\n+            }, new String[] {\"en-us\"}, null, null, null, false}\n@@ -115,3 +116,12 @@\n-    private static Stream<String> getLightCommandLine(\n-            Executor.Result result) {\n-        return result.getOutput().stream().filter(s -> {\n+    private static Stream<String> getBuildCommandLine(Executor.Result result) {\n+        return result.getOutput().stream().filter(createToolCommandLinePredicate(\"light\").or(\n+                createToolCommandLinePredicate(\"wix\")));\n+    }\n+\n+    private static boolean isWix3(Executor.Result result) {\n+        return result.getOutput().stream().anyMatch(createToolCommandLinePredicate(\"light\"));\n+    }\n+\n+    private final static Predicate<String> createToolCommandLinePredicate(String wixToolName) {\n+        var toolFileName = wixToolName + \".exe\";\n+        return (s) -> {\n@@ -119,3 +129,3 @@\n-            return s.startsWith(\"light.exe\") || ((s.contains(\"\\\\light.exe \")\n-                    && s.contains(\" -out \")));\n-        });\n+            return s.startsWith(toolFileName) || ((s.contains(String.format(\"\\\\%s \", toolFileName)) && s.\n+                    contains(\" -out \")));\n+        };\n@@ -151,0 +161,2 @@\n+            boolean withJavaOptions = false;\n+\n@@ -153,0 +165,1 @@\n+                withJavaOptions = true;\n@@ -156,0 +169,1 @@\n+                withJavaOptions = true;\n@@ -159,0 +173,5 @@\n+            if (withJavaOptions) {\n+                \/\/ Use jpackage as a command to allow \"-J\" options come through\n+                cmd.useToolProvider(false);\n+            }\n+\n@@ -172,3 +191,10 @@\n-            if (expectedCulture != null) {\n-                TKit.assertTextStream(\"-cultures:\" + expectedCulture).apply(\n-                        getLightCommandLine(result));\n+            if (expectedCultures != null) {\n+                String expected;\n+                if (isWix3(result)) {\n+                    expected = \"-cultures:\" + String.join(\";\", expectedCultures);\n+                } else {\n+                    expected = Stream.of(expectedCultures).map(culture -> {\n+                        return String.join(\" \", \"-culture\", culture);\n+                    }).collect(Collectors.joining(\" \"));\n+                }\n+                TKit.assertTextStream(expected).apply(getBuildCommandLine(result));\n@@ -183,0 +209,2 @@\n+                var wixSrcDir = Path.of(cmd.getArgumentValue(\"--temp\")).resolve(\"config\");\n+\n@@ -186,2 +214,1 @@\n-                            v.createCmdOutputVerifier(resourceDir).apply(\n-                                    getLightCommandLine(result));\n+                            v.createCmdOutputVerifier(wixSrcDir).apply(getBuildCommandLine(result));\n@@ -192,1 +219,1 @@\n-                        v.apply(getLightCommandLine(result));\n+                        v.apply(getBuildCommandLine(result));\n@@ -198,3 +225,2 @@\n-                                    resourceDir).apply(result.getOutput().stream()));\n-                    TKit.assertFalse(\n-                            getLightCommandLine(result).findAny().isPresent(),\n+                                    wixSrcDir).apply(result.getOutput().stream()));\n+                    TKit.assertFalse(getBuildCommandLine(result).findAny().isPresent(),\n@@ -226,1 +252,1 @@\n-    final private String expectedCulture;\n+    final private String[] expectedCultures;\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinL10nTest.java","additions":61,"deletions":35,"binary":false,"changes":96,"status":"modified"}]}