{"files":[{"patch":"@@ -122,1 +122,1 @@\n-    inc_held_monitor_count();\n+    inc_held_monitor_count(rscratch1);\n@@ -162,1 +162,1 @@\n-    dec_held_monitor_count();\n+    dec_held_monitor_count(rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    inc_held_monitor_count();\n+    inc_held_monitor_count(rscratch1);\n@@ -251,1 +251,1 @@\n-    dec_held_monitor_count();\n+    dec_held_monitor_count(rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -753,1 +753,1 @@\n-      inc_held_monitor_count();\n+      inc_held_monitor_count(rscratch1);\n@@ -823,1 +823,1 @@\n-      dec_held_monitor_count();\n+      dec_held_monitor_count(rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5340,2 +5340,1 @@\n-\/\/ Clobbers: rscratch1 and rscratch2\n-void MacroAssembler::inc_held_monitor_count() {\n+void MacroAssembler::inc_held_monitor_count(Register tmp) {\n@@ -5344,3 +5343,3 @@\n-  ldr(rscratch2, dst);\n-  increment(rscratch2);\n-  str(rscratch2, dst);\n+  ldr(tmp, dst);\n+  increment(tmp);\n+  str(tmp, dst);\n@@ -5348,1 +5347,1 @@\n-  tbz(rscratch2, 63, ok);\n+  tbz(tmp, 63, ok);\n@@ -5357,2 +5356,1 @@\n-\/\/ Clobbers: rscratch1 and rscratch2\n-void MacroAssembler::dec_held_monitor_count() {\n+void MacroAssembler::dec_held_monitor_count(Register tmp) {\n@@ -5361,3 +5359,3 @@\n-  ldr(rscratch2, dst);\n-  decrement(rscratch2);\n-  str(rscratch2, dst);\n+  ldr(tmp, dst);\n+  decrement(tmp);\n+  str(tmp, dst);\n@@ -5365,1 +5363,1 @@\n-  tbz(rscratch2, 63, ok);\n+  tbz(tmp, 63, ok);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -944,2 +944,2 @@\n-  void inc_held_monitor_count();\n-  void dec_held_monitor_count();\n+  void inc_held_monitor_count(Register tmp);\n+  void dec_held_monitor_count(Register tmp);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1836,1 +1836,1 @@\n-      __ inc_held_monitor_count();\n+      __ inc_held_monitor_count(rscratch1);\n@@ -1952,1 +1952,1 @@\n-      __ dec_held_monitor_count();\n+      __ dec_held_monitor_count(rscratch1);\n@@ -1975,1 +1975,1 @@\n-      __ dec_held_monitor_count();\n+      __ dec_held_monitor_count(rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -740,1 +740,1 @@\n-  Register regs[] = {\n+  static const Register regs[] = {\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-    inc_held_monitor_count();\n+    inc_held_monitor_count(t0);\n@@ -153,1 +153,1 @@\n-    dec_held_monitor_count();\n+    dec_held_monitor_count(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    inc_held_monitor_count();\n+    inc_held_monitor_count(t0);\n@@ -259,1 +259,1 @@\n-    dec_held_monitor_count();\n+    dec_held_monitor_count(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-        : *(intptr_t**)(hf.sp() - 2);\n+        : *(intptr_t**)(hf.sp() - frame::sender_sp_offset);\n","filename":"src\/hotspot\/cpu\/riscv\/continuationFreezeThaw_riscv.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -792,1 +792,1 @@\n-      inc_held_monitor_count();\n+      inc_held_monitor_count(t0);\n@@ -863,1 +863,1 @@\n-      dec_held_monitor_count();\n+      dec_held_monitor_count(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -792,2 +792,2 @@\n-  void inc_held_monitor_count(Register tmp = t0);\n-  void dec_held_monitor_count(Register tmp = t0);\n+  void inc_held_monitor_count(Register tmp);\n+  void dec_held_monitor_count(Register tmp);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1733,1 +1733,1 @@\n-      __ inc_held_monitor_count();\n+      __ inc_held_monitor_count(t0);\n@@ -1842,1 +1842,1 @@\n-      __ dec_held_monitor_count();\n+      __ dec_held_monitor_count(t0);\n@@ -1865,1 +1865,1 @@\n-      __ dec_held_monitor_count();\n+      __ dec_held_monitor_count(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-static bool is_safe_vthread_to_preempt_for_jvmti(JavaThread* target, oop vthread) {\n+static bool is_vthread_safe_to_preempt_for_jvmti(JavaThread* target, oop vthread) {\n@@ -137,1 +137,1 @@\n-static bool is_safe_vthread_to_preempt(JavaThread* target, oop vthread) {\n+static bool is_vthread_safe_to_preempt(JavaThread* target, oop vthread) {\n@@ -142,1 +142,1 @@\n-  return JVMTI_ONLY(is_safe_vthread_to_preempt_for_jvmti(target, vthread)) NOT_JVMTI(true);\n+  return JVMTI_ONLY(is_vthread_safe_to_preempt_for_jvmti(target, vthread)) NOT_JVMTI(true);\n@@ -164,1 +164,1 @@\n-  if (!is_safe_vthread_to_preempt(target, target->vthread())) {\n+  if (!is_vthread_safe_to_preempt(target, target->vthread())) {\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -889,0 +889,2 @@\n+    \/\/ frame can't be freezed. Most likely the call_stub or upcall_stub\n+    \/\/ which indicates there are further natives frames up the stack.\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1197,1 +1197,0 @@\n-  assert(node->TState == ObjectWaiter::TS_ENTER || node->TState == ObjectWaiter::TS_CXQ, \"\");\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}