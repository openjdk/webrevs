{"files":[{"patch":"@@ -50,1 +50,1 @@\n-\/\/ should match Continuation.PreemptStatus() in Continuation.java\n+\/\/ should match Continuation.pinnedReason() in Continuation.java\n","filename":"src\/hotspot\/share\/runtime\/continuation.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+\/\/ lockStackSize is read concurrently by GC threads so we use Atomic.\n","filename":"src\/hotspot\/share\/runtime\/continuationJavaClasses.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2554,1 +2554,1 @@\n-  st->print_cr(\"  _succ = \" INT64_FORMAT, _succ);\n+  st->print_cr(\"  _succ = \" INT64_FORMAT, successor());\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -312,2 +312,2 @@\n-  bool      has_successor();\n-  bool      has_successor(JavaThread* thread);\n+  bool      has_successor() const;\n+  bool      has_successor(JavaThread* thread) const;\n@@ -317,0 +317,1 @@\n+  int64_t   successor() const;\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  assert(tid >= 3 && tid < ThreadIdentifier::current(), \"must be reasonable\");\n+  assert(tid >= ThreadIdentifier::initial() && tid < ThreadIdentifier::current(), \"must be reasonable\");\n@@ -207,1 +207,1 @@\n-inline bool ObjectMonitor::has_successor() {\n+inline bool ObjectMonitor::has_successor() const {\n@@ -211,1 +211,1 @@\n-inline bool ObjectMonitor::has_successor(JavaThread* thread) {\n+inline bool ObjectMonitor::has_successor(JavaThread* thread) const {\n@@ -227,0 +227,4 @@\n+inline int64_t ObjectMonitor::successor() const {\n+  return Atomic::load(&_succ);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}