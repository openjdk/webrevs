{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,3 +104,0 @@\n-#ifdef _WINDOWS\n-    \/\/ qsort() on Windows reverse the order of fields with the same size\n-    \/\/ the extension of the comparison function below preserves this order\n@@ -108,0 +105,2 @@\n+    \/\/ qsort() may reverse the order of fields with the same size.\n+    \/\/ The extension is to ensure stable sort.\n@@ -112,3 +111,0 @@\n-#else\n-    return (*y)->size() - (*x)->size();\n-#endif \/\/ _WINDOWS\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2024, Arm Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import jdk.internal.misc.Unsafe;\n+\n+\/*\n+ * @test\n+ * @bug 8341471\n+ * @summary Reversed field layout caused by unstable sorting\n+ * @modules java.base\/jdk.internal.misc\n+ * @run main\/othervm TestFieldLayout\n+ *\/\n+\n+public class TestFieldLayout {\n+\n+    private static final Unsafe U = Unsafe.getUnsafe();\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        boolean endResult = true;\n+        long previous = 0;\n+\n+        for (Field f : Test.class.getDeclaredFields()) {\n+            long current = U.objectFieldOffset(f);\n+            if (current < previous) {\n+                System.out.printf(\"FAILED: field %s offset %d previous %d\\n\",\n+                                  f.getName(), current, previous);\n+                endResult = false;\n+            }\n+            previous = current;\n+        }\n+\n+        System.out.println(endResult ? \"Test PASSES\" : \"Test FAILS\");\n+        if (!endResult) {\n+            throw new Error(\"Test failed\");\n+        }\n+    }\n+\n+    public class Test {\n+        char a000;\n+        char a001;\n+        char a002;\n+        char a003;\n+        char a004;\n+        char a005;\n+        char a006;\n+        char a007;\n+        char a008;\n+        char a009;\n+        char a00a;\n+        char a00b;\n+    }\n+\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/FieldLayout\/TestFieldLayout.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}