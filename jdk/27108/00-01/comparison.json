{"files":[{"patch":"@@ -27,0 +27,2 @@\n+ * @library \/java\/text\/testlib\n+ * @build HexDumpReader\n@@ -38,0 +40,1 @@\n+import java.io.InputStream;\n@@ -41,0 +44,1 @@\n+import java.io.Serializable;\n@@ -54,0 +58,1 @@\n+    \/\/ Test that rely on hex dump files that were written from older JDK versions\n@@ -55,1 +60,23 @@\n-    class VersionTests {\n+    class HexDumpTests {\n+\n+        @Test \/\/ See 4068067 and CDFS which is the class in the serialized hex dump\n+        void JDK1_1_4Test() {\n+            \/\/ Reconstruct a class serialized during 1.1.4 which has a DFS holder\n+            var cdfs = (CheckDecimalFormatSymbols) assertDoesNotThrow(\n+                    () -> deSer(\"DecimalFormatSymbols.114.txt\"));\n+            assertDoesNotThrow(cdfs::Update); \/\/ Checks getDigit call succeeds\n+        }\n+\n+        @Test \/\/ See 4068067\n+        void JDK1_4_2Test() {\n+            \/\/ Reconstruct a 1.4.2 DFS\n+            var dfs = (DecimalFormatSymbols) assertDoesNotThrow(\n+                    () -> deSer(\"DecimalFormatSymbols.142.txt\"));\n+            \/\/ Checks curr symbol is saved, and exponent separator default set\n+            assertEquals(\"E\", dfs.getExponentSeparator());\n+            assertEquals(\"*SpecialCurrencySymbol*\", dfs.getCurrencySymbol());\n+        }\n+    }\n+\n+    @Nested\n+    class StreamVersionTests {\n@@ -241,1 +268,1 @@\n-    \/\/ Utility to deserialize\n+    \/\/ Utility to deserialize from byte array\n@@ -249,0 +276,8 @@\n+    \/\/ Utility to deserialize from file in hex format\n+    private static Object deSer(String file) throws IOException, ClassNotFoundException {\n+        try (InputStream stream = HexDumpReader.getStreamFromHexDump(file);\n+             ObjectInputStream ois = new ObjectInputStream(stream)) {\n+            return ois.readObject();\n+        }\n+    }\n+\n@@ -285,0 +320,9 @@\n+\n+\/\/ Not nested, so that it can be cast correctly for the 1.1.4 test\n+class CheckDecimalFormatSymbols implements Serializable {\n+    DecimalFormatSymbols _decFormatSymbols = new DecimalFormatSymbols();\n+    public char Update()\n+    {\n+        return  _decFormatSymbols.getDigit();\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/DFSSerializationTest.java","additions":46,"deletions":2,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+#\n+# Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Hex dump of a serialized DecimalFormat for SerializationLoadTest.\n+\n+aced000573720012436865636b446563696d616c466f726d6174aa9218d3b530\n+540a0200014c000a5f646563466f726d61747400194c6a6176612f746578742f\n+446563696d616c466f726d61743b7870737200176a6176612e746578742e4465\n+63696d616c466f726d61740bff0362d872303a0200085a001b646563696d616c\n+536570617261746f72416c7761797353686f776e42000c67726f7570696e6753\n+697a6549000a6d756c7469706c6965724c000e6e656761746976655072656669\n+787400124c6a6176612f6c616e672f537472696e673b4c000e6e656761746976\n+655375666669787400124c6a6176612f6c616e672f537472696e673b4c000e70\n+6f7369746976655072656669787400124c6a6176612f6c616e672f537472696e\n+673b4c000e706f7369746976655375666669787400124c6a6176612f6c616e67\n+2f537472696e673b4c000773796d626f6c737400204c6a6176612f746578742f\n+446563696d616c466f726d617453796d626f6c733b787200166a6176612e7465\n+78742e4e756d626572466f726d6174dff6b3bf137d07e80200065a000c67726f\n+7570696e67557365644200116d61784672616374696f6e446967697473420010\n+6d6178496e74656765724469676974734200116d696e4672616374696f6e4469\n+676974734200106d696e496e74656765724469676974735a0010706172736549\n+6e74656765724f6e6c79787200106a6176612e746578742e466f726d6174fbd8\n+bc12e90f1843020000787001037f0001000003000000017400012d7400007400\n+007400007372001e6a6176612e746578742e446563696d616c466f726d617453\n+796d626f6c73501d17990868939c02000c430010646563696d616c5365706172\n+61746f72430005646967697443001167726f7570696e67536570617261746f72\n+4300096d696e75735369676e4300107061747465726e536570617261746f7243\n+00077065724d696c6c43000770657263656e744300097a65726f44696769744c\n+00034e614e7400124c6a6176612f6c616e672f537472696e673b4c000e637572\n+72656e637953796d626f6c7400124c6a6176612f6c616e672f537472696e673b\n+4c0008696e66696e6974797400124c6a6176612f6c616e672f537472696e673b\n+4c0012696e746c43757272656e637953796d626f6c7400124c6a6176612f6c61\n+6e672f537472696e673b7870002e0023002c002d003b203000250030740003ef\n+bfbd74000124740003e2889e740003555344\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/DecimalFormat.114.txt","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+#\n+# Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Hex dump of a serialized DecimalFormatSymbols for SerializationLoadTest.\n+\n+aced000573720019436865636b446563696d616c466f726d617453796d626f6c\n+737763237e1aa359bb0200014c00115f646563466f726d617453796d626f6c73\n+7400204c6a6176612f746578742f446563696d616c466f726d617453796d626f\n+6c733b78707372001e6a6176612e746578742e446563696d616c466f726d6174\n+53796d626f6c73501d17990868939c02000c430010646563696d616c53657061\n+7261746f72430005646967697443001167726f7570696e67536570617261746f\n+724300096d696e75735369676e4300107061747465726e536570617261746f72\n+4300077065724d696c6c43000770657263656e744300097a65726f4469676974\n+4c00034e614e7400124c6a6176612f6c616e672f537472696e673b4c000e6375\n+7272656e637953796d626f6c7400124c6a6176612f6c616e672f537472696e67\n+3b4c0008696e66696e6974797400124c6a6176612f6c616e672f537472696e67\n+3b4c0012696e746c43757272656e637953796d626f6c7400124c6a6176612f6c\n+616e672f537472696e673b7870002e0023002c002d003b203000250030740003\n+efbfbd74000124740003e2889e740003555344\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/DecimalFormatSymbols.114.txt","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+#\n+# Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Hex dump of a serialized DecimalFormatSymbols for SerializationLoadTest.\n+\n+aced00057372001e6a6176612e746578742e446563696d616c466f726d617453\n+796d626f6c73501d17990868939c020010430010646563696d616c5365706172\n+61746f72430005646967697443000b6578706f6e656e7469616c43001167726f\n+7570696e67536570617261746f724300096d696e75735369676e4300116d6f6e\n+6574617279536570617261746f724300107061747465726e536570617261746f\n+724300077065724d696c6c43000770657263656e7449001573657269616c5665\n+7273696f6e4f6e53747265616d4300097a65726f44696769744c00034e614e74\n+00124c6a6176612f6c616e672f537472696e673b4c000e63757272656e637953\n+796d626f6c71007e00014c0008696e66696e69747971007e00014c0012696e74\n+6c43757272656e637953796d626f6c71007e00014c00066c6f63616c65740012\n+4c6a6176612f7574696c2f4c6f63616c653b7870002e00230045002c002d002e\n+003b20300025000000020030740003efbfbd7400172a5370656369616c437572\n+72656e637953796d626f6c2a740003e2889e740003434e59737200106a617661\n+2e7574696c2e4c6f63616c657ef811609c30f9ec03000449000868617368636f\n+64654c0007636f756e74727971007e00014c00086c616e677561676571007e00\n+014c000776617269616e7471007e00017870ffffffff740002434e7400027a68\n+74000078\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/DecimalFormatSymbols.142.txt","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+#\n+# Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Hex dump of a serialized NumberFormat for NumberRegression.\n+\n+aced0005737200176a6176612e746578742e446563696d616c466f726d61740b\n+ff0362d872303a02000b5a001b646563696d616c536570617261746f72416c77\n+61797353686f776e42000c67726f7570696e6753697a654200116d696e457870\n+6f6e656e7444696769747349000a6d756c7469706c6965724900157365726961\n+6c56657273696f6e4f6e53747265616d5a00167573654578706f6e656e746961\n+6c4e6f746174696f6e4c000e6e656761746976655072656669787400124c6a61\n+76612f6c616e672f537472696e673b4c000e6e65676174697665537566666978\n+71007e00014c000e706f73697469766550726566697871007e00014c000e706f\n+73697469766553756666697871007e00014c000773796d626f6c737400204c6a\n+6176612f746578742f446563696d616c466f726d617453796d626f6c733b7872\n+00166a6176612e746578742e4e756d626572466f726d6174dff6b3bf137d07e8\n+03000b5a000c67726f7570696e67557365644200116d61784672616374696f6e\n+4469676974734200106d6178496e74656765724469676974734900156d617869\n+6d756d4672616374696f6e4469676974734900146d6178696d756d496e746567\n+65724469676974734200116d696e4672616374696f6e4469676974734200106d\n+696e496e74656765724469676974734900156d696e696d756d4672616374696f\n+6e4469676974734900146d696e696d756d496e74656765724469676974735a00\n+107061727365496e74656765724f6e6c7949001573657269616c56657273696f\n+6e4f6e53747265616d787200106a6176612e746578742e466f726d6174fbd8bc\n+12e90f18430200007870017f7f00000123000001217f7f000001240000012200\n+00000001780003000000000100000001007400012d7400007400007400007372\n+001e6a6176612e746578742e446563696d616c466f726d617453796d626f6c73\n+501d17990868939c02000f430010646563696d616c536570617261746f724300\n+05646967697443000b6578706f6e656e7469616c43001167726f7570696e6753\n+6570617261746f724300096d696e75735369676e4300116d6f6e657461727953\n+6570617261746f724300107061747465726e536570617261746f724300077065\n+724d696c6c43000770657263656e7449001573657269616c56657273696f6e4f\n+6e53747265616d4300097a65726f44696769744c00034e614e71007e00014c00\n+0e63757272656e637953796d626f6c71007e00014c0008696e66696e69747971\n+007e00014c0012696e746c43757272656e637953796d626f6c71007e00017870\n+002e00230045002c002d002e003b20300025000000010030740003efbfbd7400\n+0124740003e2889e740003555344\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/NumberFormat4185761a.ser.txt","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+#\n+# Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Hex dump of a serialized NumberFormat for NumberRegression.\n+\n+aced0005737200176a6176612e746578742e446563696d616c466f726d61740b\n+ff0362d872303a02000b5a001b646563696d616c536570617261746f72416c77\n+61797353686f776e42000c67726f7570696e6753697a654200116d696e457870\n+6f6e656e7444696769747349000a6d756c7469706c6965724900157365726961\n+6c56657273696f6e4f6e53747265616d5a00167573654578706f6e656e746961\n+6c4e6f746174696f6e4c000e6e656761746976655072656669787400124c6a61\n+76612f6c616e672f537472696e673b4c000e6e65676174697665537566666978\n+71007e00014c000e706f73697469766550726566697871007e00014c000e706f\n+73697469766553756666697871007e00014c000773796d626f6c737400204c6a\n+6176612f746578742f446563696d616c466f726d617453796d626f6c733b7872\n+00166a6176612e746578742e4e756d626572466f726d6174dff6b3bf137d07e8\n+03000b5a000c67726f7570696e67557365644200116d61784672616374696f6e\n+4469676974734200106d6178496e74656765724469676974734900156d617869\n+6d756d4672616374696f6e4469676974734900146d6178696d756d496e746567\n+65724469676974734200116d696e4672616374696f6e4469676974734200106d\n+696e496e74656765724469676974734900156d696e696d756d4672616374696f\n+6e4469676974734900146d696e696d756d496e74656765724469676974735a00\n+107061727365496e74656765724f6e6c7949001573657269616c56657273696f\n+6e4f6e53747265616d787200106a6176612e746578742e466f726d6174fbd8bc\n+12e90f18430200007870017f7f00000314000003127f7f000003130000031100\n+00000001780003000000000100000001007400012d7400007400007400007372\n+001e6a6176612e746578742e446563696d616c466f726d617453796d626f6c73\n+501d17990868939c02000f430010646563696d616c536570617261746f724300\n+05646967697443000b6578706f6e656e7469616c43001167726f7570696e6753\n+6570617261746f724300096d696e75735369676e4300116d6f6e657461727953\n+6570617261746f724300107061747465726e536570617261746f724300077065\n+724d696c6c43000770657263656e7449001573657269616c56657273696f6e4f\n+6e53747265616d4300097a65726f44696769744c00034e614e71007e00014c00\n+0e63757272656e637953796d626f6c71007e00014c0008696e66696e69747971\n+007e00014c0012696e746c43757272656e637953796d626f6c71007e00017870\n+002e00230045002c002d002e003b20300025000000010030740003efbfbd7400\n+0124740003e2889e740003555344\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/NumberFormat4185761b.ser.txt","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -26,0 +26,2 @@\n+ * @library \/java\/text\/testlib\n+ * @build HexDumpReader\n@@ -37,0 +39,1 @@\n+import java.io.InputStream;\n@@ -40,0 +43,1 @@\n+import java.io.Serializable;\n@@ -42,0 +46,1 @@\n+import java.text.DateFormat;\n@@ -43,0 +48,4 @@\n+import java.text.NumberFormat;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.Random;\n@@ -54,0 +63,34 @@\n+    @Nested \/\/ Test that rely on hex dump files that were written from older JDK versions\n+    class HexDumpTests {\n+\n+        @Test \/\/ See 4101150 and CDF which is the serialized hex dump\n+        void JDK1_1_4Test() {\n+            \/\/ Reconstruct a 1.1.4 serializable class which has a DF holder\n+            var cdf = (CheckDecimalFormat) assertDoesNotThrow(\n+                    () -> deSer(\"DecimalFormat.114.txt\"));\n+            assertDoesNotThrow(cdf::Update); \/\/ Checks format call succeeds\n+        }\n+\n+        @Test \/\/ See 4185761\n+        void minMaxDigitsTest() {\n+            \/\/ Reconstructing a DFS stream from an older JDK version\n+            \/\/ The min digits are smaller than the max digits and should fail\n+            \/\/ minint maxint minfrac maxfrac\n+            \/\/ 0x122  0x121   0x124   0x123\n+            assertEquals(\"Digit count range invalid\",\n+                    assertThrows(InvalidObjectException.class,\n+                            () -> deSer(\"NumberFormat4185761a.ser.txt\")).getMessage());\n+        }\n+\n+        @Test \/\/ See 4185761\n+        void digitLimitTest() {\n+            \/\/ Reconstructing a DFS stream from an older JDK version\n+            \/\/ The digit values exceed the class invariant limits\n+            \/\/ minint maxint minfrac maxfrac\n+            \/\/ 0x311  0x312   0x313   0x314\n+            assertEquals(\"Digit count out of range\",\n+                    assertThrows(InvalidObjectException.class,\n+                            () -> deSer(\"NumberFormat4185761b.ser.txt\")).getMessage());\n+        }\n+    }\n+\n@@ -215,0 +258,21 @@\n+    \/\/ Similar to the previous test, but the original regression test\n+    \/\/ which was a failure in DateFormat due to DecimalFormat NPE\n+    @Test \/\/ See 4069754 and 4067878\n+    void digitListDateFormatTest() {\n+        var fmt = new FooFormat();\n+        fmt.now();\n+        var bytes = ser(fmt);\n+        var ff = (FooFormat) assertDoesNotThrow(() -> deSer0(bytes));\n+        assertDoesNotThrow(ff::now);\n+    }\n+\n+    static class FooFormat implements Serializable {\n+        DateFormat dateFormat = DateFormat.getDateInstance();\n+\n+        public String now() {\n+            GregorianCalendar calendar = new GregorianCalendar();\n+            Date t = calendar.getTime();\n+            return dateFormat.format(t);\n+        }\n+    }\n+\n@@ -229,1 +293,1 @@\n-    private static DecimalFormat deSer(byte[] bytes) throws IOException, ClassNotFoundException {\n+    private static Object deSer0(byte[] bytes) throws IOException, ClassNotFoundException {\n@@ -232,1 +296,14 @@\n-            return (DecimalFormat) ois.readObject();\n+            return ois.readObject();\n+        }\n+    }\n+\n+    \/\/ Convenience cast to DF\n+    private static DecimalFormat deSer(byte[] bytes) throws IOException, ClassNotFoundException {\n+        return (DecimalFormat) deSer0(bytes);\n+    }\n+\n+    \/\/ Utility to deserialize from file in hex format\n+    private static Object deSer(String file) throws IOException, ClassNotFoundException {\n+        try (InputStream stream = HexDumpReader.getStreamFromHexDump(file);\n+             ObjectInputStream ois = new ObjectInputStream(stream)) {\n+            return ois.readObject();\n@@ -280,0 +357,9 @@\n+\n+\/\/ Not nested, so that it can be recognized and cast correctly for the 1.1.4 test\n+class CheckDecimalFormat implements Serializable {\n+    DecimalFormat _decFormat = (DecimalFormat) NumberFormat.getInstance();\n+    public String Update() {\n+        Random r = new Random();\n+        return _decFormat.format(r.nextDouble());\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/SerializationTest.java","additions":88,"deletions":2,"binary":false,"changes":90,"status":"modified"}]}