{"files":[{"patch":"@@ -294,1 +294,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/addCountFilter\/addcountfilter001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/disable\/disable001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,2 +286,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n-\n+                  thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/disable\/disable002.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/enable\/enable001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/enable\/enable002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/getProperty\/getproperty001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/isEnabled\/isenabled001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/putProperty\/putproperty001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setEnabled\/setenabled001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setEnabled\/setenabled002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setSuspendPolicy\/setsuspendpolicy001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -290,1 +290,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/suspendPolicy\/suspendpolicy001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -278,1 +278,1 @@\n-            thread = debuggee.threadByNameOrThrow(threadName);\n+            thread = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,2 +80,2 @@\n-    static final int lineForBreakInThread    = 137;\n-    static final int[] checkedLines = { 138, 138, 178 };\n+    static final int lineForBreakInThread    = 141;\n+    static final int[] checkedLines = { 142, 142, 182 };\n@@ -250,1 +250,1 @@\n-        ThreadReference thread = debuggee.threadByNameOrThrow(threadName);\n+        ThreadReference thread = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq003.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,4 @@\n+    static Thread thread0;\n+    static Thread thread1;\n+    static Thread thread2;\n+\n@@ -75,1 +79,1 @@\n-                    Thread thread0 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread0\"));\n+                    thread0 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread0\"));\n@@ -82,1 +86,1 @@\n-                    Thread thread1 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread1\"));\n+                    thread1 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread1\"));\n@@ -89,1 +93,1 @@\n-                    Thread thread2 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread2\"));\n+                    thread2 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread2\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq003a.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -80,3 +80,3 @@\n-    static final int lineForBreakInThread = 146;\n-    static final int[] checkedLines = { 160, 160, 193 };\n-    static final int[] checkedLinesAlt = { 161, 161, 193 };\n+    static final int lineForBreakInThread = 149;\n+    static final int[] checkedLines = { 163, 163, 196 };\n+    static final int[] checkedLinesAlt = { 164, 164, 196 };\n@@ -251,1 +251,1 @@\n-        ThreadReference thread = debuggee.threadByNameOrThrow(threadName);\n+        ThreadReference thread = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq004.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,3 @@\n+    static Thread thread1;\n+    static Thread thread2;\n+\n@@ -98,2 +101,2 @@\n-        Thread thread1 = JDIThreadFactory.newThread(new Thread1crstepreq004a(\"thread1\"));\n-        Thread thread2 = JDIThreadFactory.newThread(new Thread2crstepreq004a(\"thread2\"));\n+        thread1 = JDIThreadFactory.newThread(new Thread1crstepreq004a(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new Thread2crstepreq004a(\"thread2\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq004a.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-                     ThreadReference thread1 = debuggee.threadByNameOrThrow(\"thread1\");\n+                     ThreadReference thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, \"thread1\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_s\/filter_s002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                    thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth003.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/size\/size001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/size\/size002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-                     thread1 = debuggee.threadByNameOrThrow(threadName1);\n+                     thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/thread\/thread001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-            ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);\n+            ThreadReference thread2Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread2Name);\n@@ -314,1 +314,1 @@\n-                breakpointRequest = settingBreakpoint(debuggee.threadByNameOrThrow(thread2Name),\n+                breakpointRequest = settingBreakpoint(thread2Ref,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-            ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);\n+            ThreadReference thread2Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread2Name);\n@@ -276,1 +276,1 @@\n-            ThreadReference thread3Ref = debuggee.threadByNameOrThrow(thread3Name);\n+            ThreadReference thread3Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread3Name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-        ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);\n+        ThreadReference thread2Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread2Name);\n@@ -289,1 +289,1 @@\n-        ThreadReference thread3Ref = debuggee.threadByNameOrThrow(thread3Name);\n+        ThreadReference thread3Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread3Name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes003.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-            ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);\n+            ThreadReference thread2Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread2Name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes004.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-            ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);\n+            ThreadReference thread2Ref = debuggee.threadByFieldNameOrThrow(debuggeeClass, thread2Name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes005.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,0 +267,27 @@\n+    \/**\n+     * Return a debuggee thread by fetching it from a static field in the debuggee.\n+     *\/\n+    public ThreadReference threadByFieldNameOrThrow(ReferenceType debuggeeClass,\n+                                                    String threadFieldName)\n+            throws JDITestRuntimeException {\n+\n+        Field field = debuggeeClass.fieldByName(threadFieldName);\n+        if (field == null) {\n+            throw new JDITestRuntimeException(\"** Thread field not found ** : \"\n+                                              + threadFieldName);\n+        }\n+\n+        ThreadReference thread = (ThreadReference)debuggeeClass.getValue(field);\n+        if (thread == null) {\n+            throw new JDITestRuntimeException(\"** Thread field is null ** : \"\n+                                              + threadFieldName);\n+        }\n+\n+        if (!thread.name().equals(threadFieldName)) {\n+            throw new JDITestRuntimeException(\"** Thread names do not match ** : \"\n+                                              + threadFieldName + \" vs. \" + thread.name());\n+        }\n+\n+        return thread;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}