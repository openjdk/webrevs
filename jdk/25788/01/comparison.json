{"files":[{"patch":"@@ -47,0 +47,3 @@\n+    private static final boolean LEGACY_EQUALS =\n+        Boolean.getBoolean(\"jdk.io.File.legacyEquals\");\n+\n@@ -638,1 +641,22 @@\n-        return f1.getPath().compareToIgnoreCase(f2.getPath());\n+        \/\/ Use legacy pathname comparison if property is set\n+        if (LEGACY_EQUALS)\n+            return f1.getPath().compareToIgnoreCase(f2.getPath());\n+\n+        \/\/ Compare pathname strings as in sun.nio.fs.WindowsPath.compareTo\n+        String s1 = f1.getPath();\n+        String s2 = f2.getPath();\n+        int n1 = s1.length();\n+        int n2 = s2.length();\n+        int min = Math.min(n1, n2);\n+        for (int i = 0; i < min; i++) {\n+            char c1 = s1.charAt(i);\n+            char c2 = s2.charAt(i);\n+             if (c1 != c2) {\n+                 c1 = Character.toUpperCase(c1);\n+                 c2 = Character.toUpperCase(c2);\n+                 if (c1 != c2) {\n+                     return c1 - c2;\n+                 }\n+             }\n+        }\n+        return n1 - n2;\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,6 @@\n-   @bug 4131169\n-   @summary Test respecified compareTo method\n+ * @bug 4131169 8191963\n+ * @summary Test compareTo and equals methods\n+ * @library .. \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main CompareTo\n+ * @run main\/othervm -Djdk.io.File.legacyEquals=true CompareTo\n@@ -29,2 +33,2 @@\n-import java.io.*;\n-\n+import java.io.File;\n+import jdk.test.lib.Platform;\n@@ -39,0 +43,17 @@\n+\n+        \/\/ U+0131 = ı 'LATIN SMALL LETTER DOTLESS I'\n+        File smallDotlessI = new File(\"\\u0131\");\n+        \/\/ U+0130 = İ 'LATIN CAPITAL LETTER I WITH DOT ABOVE'\n+        File largeDotfullI = new File(\"\\u0130\");\n+        File latinCapitalI = new File(\"I\");\n+\n+        boolean shouldBeEqual= smallDotlessI.equals(latinCapitalI);\n+        if (!shouldBeEqual)\n+            throw new Exception(\"Small dotless \\\"i\\\" does not equal \\\"I\\\"\");\n+\n+        boolean legacyEquals = Boolean.getBoolean(\"jdk.io.File.legacyEquals\");\n+        boolean shouldNotBeEqual = largeDotfullI.equals(latinCapitalI);\n+        if (shouldNotBeEqual && !legacyEquals)\n+            throw new Exception(\"Large dotted \\\"I\\\" equals \\\"I\\\"\");\n+        else if (!shouldNotBeEqual && legacyEquals)\n+            throw new Exception(\"Large dotted \\\"I\\\" does not equal \\\"I\\\"\");\n@@ -49,2 +70,4 @@\n-        if (File.separatorChar == '\\\\') testWin32();\n-        if (File.separatorChar == '\/') testUnix();\n+        if (Platform.isWindows())\n+            testWin32();\n+        else\n+            testUnix();\n","filename":"test\/jdk\/java\/io\/File\/CompareTo.java","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"}]}