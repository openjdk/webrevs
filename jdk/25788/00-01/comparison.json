{"files":[{"patch":"@@ -47,0 +47,3 @@\n+    private static final boolean LEGACY_EQUALS =\n+        Boolean.getBoolean(\"jdk.io.File.legacyEquals\");\n+\n@@ -638,0 +641,5 @@\n+        \/\/ Use legacy pathname comparison if property is set\n+        if (LEGACY_EQUALS)\n+            return f1.getPath().compareToIgnoreCase(f2.getPath());\n+\n+        \/\/ Compare pathname strings as in sun.nio.fs.WindowsPath.compareTo\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @run main\/othervm -Djdk.io.File.legacyEquals=true CompareTo\n@@ -52,0 +53,2 @@\n+\n+        boolean legacyEquals = Boolean.getBoolean(\"jdk.io.File.legacyEquals\");\n@@ -53,1 +56,1 @@\n-        if (shouldNotBeEqual)\n+        if (shouldNotBeEqual && !legacyEquals)\n@@ -55,0 +58,2 @@\n+        else if (!shouldNotBeEqual && legacyEquals)\n+            throw new Exception(\"Large dotted \\\"I\\\" does not equal \\\"I\\\"\");\n","filename":"test\/jdk\/java\/io\/File\/CompareTo.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}