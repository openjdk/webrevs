{"files":[{"patch":"@@ -64,0 +64,2 @@\n+import java.util.function.IntPredicate;\n+\n@@ -66,0 +68,1 @@\n+import jdk.internal.util.ImmutableBitSetPredicate;\n@@ -4949,24 +4952,24 @@\n-        static boolean isValid(char c) {\n-            return switch (c) {\n-                case BOOLEAN,\n-                     BOOLEAN_UPPER,\n-                     STRING,\n-                     STRING_UPPER,\n-                     HASHCODE,\n-                     HASHCODE_UPPER,\n-                     CHARACTER,\n-                     CHARACTER_UPPER,\n-                     DECIMAL_INTEGER,\n-                     OCTAL_INTEGER,\n-                     HEXADECIMAL_INTEGER,\n-                     HEXADECIMAL_INTEGER_UPPER,\n-                     SCIENTIFIC,\n-                     SCIENTIFIC_UPPER,\n-                     GENERAL,\n-                     GENERAL_UPPER,\n-                     DECIMAL_FLOAT,\n-                     HEXADECIMAL_FLOAT,\n-                     HEXADECIMAL_FLOAT_UPPER,\n-                     LINE_SEPARATOR,\n-                     PERCENT_SIGN -> true;\n-                default -> false;\n+        static final IntPredicate VALID;\n+        static {\n+            char[] chars = {\n+                    BOOLEAN,\n+                    BOOLEAN_UPPER,\n+                    STRING,\n+                    STRING_UPPER,\n+                    HASHCODE,\n+                    HASHCODE_UPPER,\n+                    CHARACTER,\n+                    CHARACTER_UPPER,\n+                    DECIMAL_INTEGER,\n+                    OCTAL_INTEGER,\n+                    HEXADECIMAL_INTEGER,\n+                    HEXADECIMAL_INTEGER_UPPER,\n+                    SCIENTIFIC,\n+                    SCIENTIFIC_UPPER,\n+                    GENERAL,\n+                    GENERAL_UPPER,\n+                    DECIMAL_FLOAT,\n+                    HEXADECIMAL_FLOAT,\n+                    HEXADECIMAL_FLOAT_UPPER,\n+                    LINE_SEPARATOR,\n+                    PERCENT_SIGN\n@@ -4974,0 +4977,9 @@\n+            var bitSet = new BitSet(128);\n+            for (char ch : chars) {\n+                bitSet.set(ch);\n+            }\n+            VALID = ImmutableBitSetPredicate.of(bitSet);\n+        }\n+\n+        static boolean isValid(char c) {\n+            return VALID.test(c);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":36,"deletions":24,"binary":false,"changes":60,"status":"modified"}]}