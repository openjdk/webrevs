{"files":[{"patch":"@@ -900,2 +900,3 @@\n-        return setAppLayoutAsserts(Stream.of(asserts).filter(Predicate.not(\n-                appLayoutAsserts::contains)).toArray(AppLayoutAssert[]::new));\n+        var asSet = Set.of(asserts);\n+        return setAppLayoutAsserts(appLayoutAsserts.stream().filter(Predicate.not(\n+                asSet::contains)).toArray(AppLayoutAssert[]::new));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-        Path bundleRoot;\n+        final Path bundleRoot;\n@@ -271,2 +271,20 @@\n-        TKit.assertDirectoryContent(bundleRoot.resolve(\"Contents\")).match(\n-                cmd.isRuntime() ? RUNTIME_BUNDLE_CONTENTS : APP_BUNDLE_CONTENTS);\n+\n+        final var contentsDir = bundleRoot.resolve(\"Contents\");\n+        final var expectedContentsItems = cmd.isRuntime() ? RUNTIME_BUNDLE_CONTENTS : APP_BUNDLE_CONTENTS;\n+\n+        var contentsVerifier = TKit.assertDirectoryContent(contentsDir);\n+        if (!cmd.hasArgument(\"--app-content\")) {\n+            contentsVerifier.match(expectedContentsItems);\n+        } else {\n+            \/\/ Additional content added to the bundle.\n+            \/\/ Verify there is no period (.) char in the names of additional directories if any.\n+            contentsVerifier.contains(expectedContentsItems);\n+            contentsVerifier = contentsVerifier.removeAll(expectedContentsItems);\n+            contentsVerifier.match(contentsVerifier.items().stream().filter(path -> {\n+                if (Files.isDirectory(contentsDir.resolve(path))) {\n+                    return !path.getFileName().toString().contains(\".\");\n+                } else {\n+                    return true;\n+                }\n+            }).collect(toSet()));\n+        }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/MacHelper.java","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -789,1 +789,1 @@\n-                        \"assertDirectoryContentEquals%s: Expected %s. Unexpected %s\",\n+                        \"assertDirectoryContentEquals(%s): Expected %s. Unexpected %s\",\n@@ -821,1 +821,1 @@\n-        public DirectoryContentVerifier removeAll(Path ... paths) {\n+        public DirectoryContentVerifier removeAll(Collection<Path> paths) {\n@@ -823,1 +823,1 @@\n-            newContent.removeAll(List.of(paths));\n+            newContent.removeAll(paths);\n@@ -827,0 +827,8 @@\n+        public DirectoryContentVerifier removeAll(Path ... paths) {\n+            return removeAll(List.of(paths));\n+        }\n+\n+        public Set<Path> items() {\n+            return content;\n+        }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,5 +75,14 @@\n-        data.addAll(List.of(new Object[][]{\n-            {PackageType.IMAGE.toString(), wrap(cmd -> {\n-                additionalContent(cmd, \"--app-content\", cmd.outputBundle());\n-            }, \"--app-content same as output bundle\")},\n-        }));\n+        if (!TKit.isOSX()) {\n+            data.addAll(List.of(new Object[][]{\n+                {PackageType.IMAGE.toString(), wrap(cmd -> {\n+                    additionalContent(cmd, \"--app-content\", cmd.outputBundle());\n+                }, \"--app-content same as output bundle\")},\n+            }));\n+        } else {\n+            var contentsFolder = \"Contents\/MacOS\";\n+            data.addAll(List.of(new Object[][]{\n+                {PackageType.IMAGE.toString(), wrap(cmd -> {\n+                    additionalContent(cmd, \"--app-content\", cmd.outputBundle().resolve(contentsFolder));\n+                }, String.format(\"--app-content same as the \\\"%s\\\" folder in the output bundle\", contentsFolder))},\n+            }));\n+        }\n@@ -175,0 +184,10 @@\n+\n+            if (cmd.hasArgument(\"--app-content\")) {\n+                \/\/ `--app-content` can be set to the app image directory which\n+                \/\/ should not exist before jpackage is executed:\n+                \/\/  jpackage --name Foo --dest output --app-content output\/Foo\n+                \/\/ Verify the directory exists after jpackage execution.\n+                \/\/ At least this will catch the case when the value of\n+                \/\/ `--app-content` option refers to a path unrelated to jpackage I\/O.\n+                TKit.assertDirectoryExists(Path.of(cmd.getArgumentValue(\"--app-content\")));\n+            }\n","filename":"test\/jdk\/tools\/jpackage\/share\/InOutPathTest.java","additions":24,"deletions":5,"binary":false,"changes":29,"status":"modified"}]}