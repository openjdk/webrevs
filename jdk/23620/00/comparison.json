{"files":[{"patch":"@@ -718,0 +718,1 @@\n+  $1_AOT_JDK_DIR   := $$($1_TEST_SUPPORT_DIR)\/aot\n@@ -721,1 +722,8 @@\n-  $1_JAVA_TOOL_OPTS := $$(addprefix -J, $$($1_VM_OPTIONS))\n+  # We first execute the training run with make\/test\/SetupAot.java to touch\n+  # a fair number of classes inside the JDK. Note that we don't specify a classpath,\n+  # but the Java launcher will use an implicit class path of \".\", so it can pick up the\n+  # SetupAot class from the current directory.\n+  #\n+  # The SetupAot class (or any other classes that are loaded from \".\"\n+  # will be excluded from the the AOT cache as \".\" is an unsupported\n+  # location. As a result, the AOT cache will contain only classes from the JDK.\n@@ -726,9 +734,1 @@\n-\t$(foreach jtool, javac javap jlink jar, \\\n-\t    $(info AOT: Create cache configuration for $(jtool)) \\\n-\t    $$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)\/aot.$(jtool), ( \\\n-\t        $$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/$(jtool) $$($1_JAVA_TOOL_OPTS) \\\n-\t                    -J-XX:AOTMode=record -J-XX:AOTConfiguration=$$($1_AOT_JDK_CONF).$(jtool) --help \\\n-\t    ))\n-\t)\n-\n-\t$$(info AOT: Copy $(JDK_UNDER_TEST)\/lib\/classlist to $$($1_AOT_JDK_CONF).jdk )\n+\t$(info AOT: Create cache configuration) \\\n@@ -736,1 +736,6 @@\n-\t\t$$(FIXPATH) $(CP) $(JDK_UNDER_TEST)\/lib\/classlist $$($1_AOT_JDK_CONF).jdk \\\n+\t    $(CD) $$($1_AOT_JDK_DIR); \\\n+\t    $(JDK_UNDER_TEST)\/bin\/javac -d . $(TOPDIR)\/make\/test\/SetupAot.java; \\\n+\t    $$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/java $$($1_VM_OPTIONS) \\\n+\t                -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log \\\n+\t                -XX:AOTMode=record -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) \\\n+\t                SetupAot \\\n@@ -739,7 +744,0 @@\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).* > $$($1_AOT_JDK_CONF).temp\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).temp | $(GREP) -v '#' | $(GREP) -v '@' | $(SORT) | \\\n-\t        $(SED) -e 's\/id:.*\/\/g' | uniq \\\n-\t\t> $$($1_AOT_JDK_CONF)\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).temp | $(GREP) '@cp' | $(SORT) \\\n-\t        >> $$($1_AOT_JDK_CONF)\n-\n@@ -749,1 +747,2 @@\n-\t        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log \\\n+\t        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log -Xlog:cds*=error \\\n+\t        -XX:ExtraSharedClassListFile=$(JDK_UNDER_TEST)\/lib\/classlist \\\n","filename":"make\/RunTests.gmk","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.spi.ToolProvider;\n+\n+\/\/ This program is executed by ..\/RunTests.gmk to support running HotSpot jtreg tests\n+\/\/ in the \"AOT mode\", for example:\n+\/\/\n+\/\/     make test JTREG_AOT_JDK=true open\/test\/hotspot\/jtreg\/runtime\/stringtable\n+\/\/\n+\/\/ All JDK classes touched by this program will be stored into a customized AOT cache.\n+\/\/ This is a larger set of classes than those stored in the JDK's default CDS archive.\n+\/\/ This customized cache can also have additional optimizations that are not\n+\/\/ enabled in the default CDS archive. For example, AOT-linked classes and lambda\n+\/\/ expressions. In the future, it can also contain AOT profiles and AOT compiled methods.\n+\/\/\n+\/\/ We can use this customized AOT cache to run various HotSpot tests to improve\n+\/\/ coverage on AOT.\n+\/\/\n+\/\/ Note that ..\/RunTests.gmk loads this class using an implicit classpath of \".\", so\n+\/\/ this class will be excluded from the customized AOT cache. Hence it will cause\n+\/\/ any class name conflicts with the HotSpot tests. The scripts in ..\/RunTests.gmk\n+\/\/ ensure that the customized AOT cache contains *only* classes from the JDK itself.\n+\n+public class SetupAot {\n+    public static void main(String[] args) throws Throwable {\n+        String[] tools = {\n+            \"javac\", \"javap\", \"jlink\", \"jar\",\n+        };\n+        \/\/ TODO: we should do more substantial work than just running with \"--help\".\n+        \/\/ E.g., use javac to compile a program.\n+        for (String tool : tools) {\n+            ToolProvider t  = ToolProvider.findFirst(tool)\n+                .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n+            t.run(System.out, System.out, \"--help\");\n+        }\n+    }\n+}\n","filename":"make\/test\/SetupAot.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -446,4 +446,3 @@\n-  jio_fprintf(defaultStream::error_stream(),\n-              \"An error has occurred while processing class list file %s %zu:%d.\\n\",\n-              _classlist_file, lineno(), (error_index + 1));\n-  jio_vfprintf(defaultStream::error_stream(), msg, ap);\n+  st->print(\"An error has occurred while processing class list file %s %zu:%d.\\n\",\n+            _classlist_file, lineno(), (error_index + 1));\n+  st->vprint(msg, ap);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}