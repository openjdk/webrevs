{"files":[{"patch":"@@ -756,0 +756,11 @@\n+$(eval $(call SetupTarget, build-test-setup-aot, \\\n+    MAKEFILE := test\/BuildTestSetupAOT, \\\n+    DEPS := interim-langtools exploded-image, \\\n+))\n+\n+$(eval $(call SetupTarget, test-image-setup-aot, \\\n+    MAKEFILE := test\/BuildTestSetupAOT, \\\n+    TARGET := images, \\\n+    DEPS :=  build-test-setup-aot, \\\n+))\n+\n@@ -1284,1 +1295,2 @@\n-    test-image-lib test-image-lib-native\n+    test-image-lib test-image-lib-native \\\n+    test-image-setup-aot\n","filename":"make\/Main.gmk","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -706,0 +706,3 @@\n+################################################################################\n+# Helper function for creating a customized AOT cache for running tests\n+################################################################################\n@@ -716,3 +719,3 @@\n-SetupAot = $(NamedParamsMacroTemplate)\n-define SetupAotBody\n-  $1_AOT_JDK_CONF  := $$($1_TEST_SUPPORT_DIR)\/aot\/jdk.aotconf\n+SetupAOT = $(NamedParamsMacroTemplate)\n+define SetupAOTBody\n+  $1_AOT_JDK_CONF := $$($1_TEST_SUPPORT_DIR)\/aot\/jdk.aotconf\n@@ -720,2 +723,12 @@\n-\n-  $1_JAVA_TOOL_OPTS := $$(addprefix -J, $$($1_VM_OPTIONS))\n+  $1_AOT_JDK_LOG := $$($1_TEST_SUPPORT_DIR)\/aot\/TestSetupAOT.log\n+\n+  # We execute the training run with $(TEST_IMAGE_DIR)\/setup_aot\/TestSetupAOT.class\n+  # to touch a fair number of classes inside the JDK. Note that we can't specify a classpath,\n+  # or else the AOT cache cannot be used with jtreg test cases that use a different value\n+  # for their classpaths. Instead, we run in the $(TEST_IMAGE_DIR)\/setup_aot\/ directory.\n+  # The \"java\" launcher will have an implicit classpath of \".\", so it can pick up the TestSetupAOT\n+  # class from the JVM's current directory.\n+  #\n+  # The TestSetupAOT class (or any other classes that are loaded from \".\") will be excluded\n+  # from the the AOT cache as \".\" is an unsupported location. As a result, the AOT cache will contain\n+  # only classes from the JDK.\n@@ -726,9 +739,1 @@\n-\t$(foreach jtool, javac javap jlink jar, \\\n-\t    $(info AOT: Create cache configuration for $(jtool)) \\\n-\t    $$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)\/aot.$(jtool), ( \\\n-\t        $$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/$(jtool) $$($1_JAVA_TOOL_OPTS) \\\n-\t                    -J-XX:AOTMode=record -J-XX:AOTConfiguration=$$($1_AOT_JDK_CONF).$(jtool) --help \\\n-\t    ))\n-\t)\n-\n-\t$$(info AOT: Copy $(JDK_UNDER_TEST)\/lib\/classlist to $$($1_AOT_JDK_CONF).jdk )\n+\t$$(call LogWarn, AOT: Create cache configuration) \\\n@@ -736,1 +741,5 @@\n-\t\t$$(FIXPATH) $(CP) $(JDK_UNDER_TEST)\/lib\/classlist $$($1_AOT_JDK_CONF).jdk \\\n+\t    $(CD) $(TEST_IMAGE_DIR)\/setup_aot; \\\n+\t    $$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/java $$($1_VM_OPTIONS) \\\n+\t        -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log  -Xlog:cds*=error \\\n+\t        -XX:AOTMode=record -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) \\\n+\t        TestSetupAOT > $$($1_AOT_JDK_LOG) \\\n@@ -739,8 +748,1 @@\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).* > $$($1_AOT_JDK_CONF).temp\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).temp | $(GREP) -v '#' | $(GREP) -v '@' | $(SORT) | \\\n-\t        $(SED) -e 's\/id:.*\/\/g' | uniq \\\n-\t\t> $$($1_AOT_JDK_CONF)\n-\t$$(FIXPATH) $$(CAT) $$($1_AOT_JDK_CONF).temp | $(GREP) '@cp' | $(SORT) \\\n-\t        >> $$($1_AOT_JDK_CONF)\n-\n-\t$$(info AOT: Generate AOT cache $$($1_AOT_JDK_CACHE) with flags: $$($1_VM_OPTIONS))\n+\t$$(call LogWarn, AOT: Generate AOT cache $$($1_AOT_JDK_CACHE) with flags: $$($1_VM_OPTIONS))\n@@ -748,3 +750,4 @@\n-\t\t$$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/java \\\n-\t        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log \\\n-\t\t-XX:AOTMode=create -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) -XX:AOTCache=$$($1_AOT_JDK_CACHE) \\\n+\t    $$(FIXPATH) $(JDK_UNDER_TEST)\/bin\/java \\\n+\t        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log -Xlog:cds*=error \\\n+\t        -XX:ExtraSharedClassListFile=$(JDK_UNDER_TEST)\/lib\/classlist \\\n+\t        -XX:AOTMode=create -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) -XX:AOTCache=$$($1_AOT_JDK_CACHE) \\\n@@ -757,1 +760,0 @@\n-\n@@ -949,2 +951,2 @@\n-    $$(info Add AOT target for $1)\n-    $$(eval $$(call SetupAot, $1, VM_OPTIONS := $$(JTREG_ALL_OPTIONS) ))\n+    $$(call LogWarn, Add AOT target for $1)\n+    $$(eval $$(call SetupAOT, $1, VM_OPTIONS := $$(JTREG_ALL_OPTIONS) ))\n@@ -952,2 +954,1 @@\n-    $$(info AOT_TARGETS=$$($1_AOT_TARGETS))\n-    $$(info AOT_JDK_CACHE=$$($1_AOT_JDK_CACHE))\n+    $$(call LogWarn, AOT_JDK_CACHE=$$($1_AOT_JDK_CACHE))\n","filename":"make\/RunTests.gmk","additions":32,"deletions":31,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+#\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+include MakeFileStart.gmk\n+\n+################################################################################\n+# This file builds the TestSetupAOT.class, which is used by SetupAOT\n+# in ..\/RunTests.gmk\n+################################################################################\n+\n+include CopyFiles.gmk\n+include JavaCompilation.gmk\n+\n+################################################################################\n+\n+SETUP_AOT_BASEDIR := $(TOPDIR)\/test\/setup_aot\n+SETUP_AOT_SUPPORT := $(SUPPORT_OUTPUTDIR)\/test\/setup_aot\n+SETUP_AOT_CLASS := $(SETUP_AOT_SUPPORT)\/classes\/TestSetupAOT.class\n+\n+$(eval $(call SetupJavaCompilation, BUILD_SETUP_AOT, \\\n+    TARGET_RELEASE := $(TARGET_RELEASE_NEWJDK_UPGRADED), \\\n+    SRC := $(SETUP_AOT_BASEDIR), \\\n+    BIN := $(SETUP_AOT_SUPPORT)\/classes, \\\n+))\n+\n+TARGETS += $(BUILD_SETUP_AOT)\n+\n+################################################################################\n+# Targets for building test-image.\n+################################################################################\n+\n+# Copy to hotspot jtreg test image\n+$(eval $(call SetupCopyFiles, COPY_SETUP_AOT, \\\n+    SRC := $(SETUP_AOT_SUPPORT)\/classes, \\\n+    DEST := $(TEST_IMAGE_DIR)\/setup_aot, \\\n+    FILES := TestSetupAOT.class, \\\n+))\n+\n+IMAGES_TARGETS += $(COPY_SETUP_AOT)\n+\n+images: $(IMAGES_TARGETS)\n+\n+.PHONY: images\n+\n+################################################################################\n+\n+include MakeFileEnd.gmk\n","filename":"make\/test\/BuildTestSetupAOT.gmk","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -446,4 +446,3 @@\n-  jio_fprintf(defaultStream::error_stream(),\n-              \"An error has occurred while processing class list file %s %zu:%d.\\n\",\n-              _classlist_file, lineno(), (error_index + 1));\n-  jio_vfprintf(defaultStream::error_stream(), msg, ap);\n+  st->print(\"An error has occurred while processing class list file %s %zu:%d.\\n\",\n+            _classlist_file, lineno(), (error_index + 1));\n+  st->vprint(msg, ap);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.spi.ToolProvider;\n+\n+\/\/ This program is executed by make\/RunTests.gmk to support running HotSpot tests\n+\/\/ in the \"AOT mode\", for example:\n+\/\/\n+\/\/     make test JTREG=AOT_JDK=true TEST=open\/test\/hotspot\/jtreg\/runtime\/invokedynamic\n+\/\/\n+\/\/ All JDK classes touched by this program will be stored into a customized AOT cache.\n+\/\/ This is a larger set of classes than those stored in the JDK's default CDS archive.\n+\/\/ This customized cache can also have additional optimizations that are not\n+\/\/ enabled in the default CDS archive. For example, AOT-linked classes and lambda\n+\/\/ expressions. In the future, it can also contain AOT profiles and AOT compiled methods.\n+\/\/\n+\/\/ We can use this customized AOT cache to run various HotSpot tests to improve\n+\/\/ coverage on AOT.\n+\/\/\n+\/\/ Note that make\/RunTests.gmk loads this class using an implicit classpath of \".\", so\n+\/\/ this class will be excluded from the customized AOT cache. As a result,\n+\/\/ the customized AOT cache contains *only* classes from the JDK itself.\n+\n+public class TestSetupAOT {\n+    public static void main(String[] args) throws Throwable {\n+        String[] tools = {\n+            \"javac\", \"javap\", \"jlink\", \"jar\",\n+        };\n+        \/\/ TODO: we should do more substantial work than just running with \"--help\".\n+        \/\/ E.g., use javac to compile a program.\n+        for (String tool : tools) {\n+            ToolProvider t = ToolProvider.findFirst(tool)\n+                .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n+            t.run(System.out, System.out, \"--help\");\n+        }\n+    }\n+}\n","filename":"test\/setup_aot\/TestSetupAOT.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}