{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,0 +126,2 @@\n+    \/\/ The thread name prefix is used to find thread from jvmti agent.\n+    final static String threadNamePrefix = \"Debuggee Thread\";\n@@ -133,1 +135,1 @@\n-        super(\"Debuggee Thread \" + o1 + o2);\n+        super(threadNamePrefix + \" \" + o1 + o2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n-static threadDesc *threadList = nullptr;\n-static jint threads_count = 0;\n+static threadDesc *debuggee_threads = nullptr;\n+static jint debuggee_threads_cnt = 0;\n@@ -48,0 +48,3 @@\n+static const char* THREAD_NAME_PREFIX = \"Debugee Thread\";\n+static const size_t THREAD_NAME_PREFIX_LEN = strlen(THREAD_NAME_PREFIX);\n+\n@@ -59,1 +62,1 @@\n-        NSK_DISPLAY1(\" \\\"%s\\\":\\n\", threadList[pThread].name);\n+        NSK_DISPLAY1(\" \\\"%s\\\":\\n\", debuggee_threads[pThread].name);\n@@ -61,1 +64,1 @@\n-                jvmti->GetCurrentContendedMonitor(threadList[pThread].thread, &monitor)))\n+                jvmti->GetCurrentContendedMonitor(debuggee_threads[pThread].thread, &monitor)))\n@@ -77,2 +80,2 @@\n-        for (cThread = 0; cThread < threads_count; cThread++) {\n-            if (jni->IsSameObject(threadList[cThread].thread, usageInfo.owner))\n+        for (cThread = 0; cThread < debuggee_threads_cnt; cThread++) {\n+            if (jni->IsSameObject(debuggee_threads[cThread].thread, usageInfo.owner))\n@@ -87,1 +90,1 @@\n-        if (!NSK_VERIFY(cThread != threads_count))\n+        if (!NSK_VERIFY(cThread != debuggee_threads_cnt))\n@@ -90,1 +93,1 @@\n-            threadList[cThread].name);\n+            debuggee_threads[cThread].name);\n@@ -106,0 +109,1 @@\n+    int threads_count = 0;\n@@ -107,1 +111,1 @@\n-    NSK_DISPLAY0(\"Create threadList\\n\");\n+    NSK_DISPLAY0(\"Create debuggee_threads\\n\");\n@@ -117,1 +121,1 @@\n-            jvmti->Allocate(threads_count*sizeof(threadDesc), (unsigned char**)&threadList)))\n+            jvmti->Allocate(threads_count*sizeof(threadDesc), (unsigned char**)&debuggee_threads)))\n@@ -130,3 +134,11 @@\n-        threadList[i].thread = threads[i];\n-        threadList[i].dfn = -1;\n-        threadList[i].name = info.name;\n+        if (!strncmp(info.name, THREAD_NAME_PREFIX, THREAD_NAME_PREFIX_LEN)) {\n+            NSK_DISPLAY1(\"Skipping thread %s\\n\", info.name);\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)info.name)))\n+                return NSK_FALSE;\n+            continue;\n+        }\n+\n+        debuggee_threads[debuggee_threads_cnt].thread = threads[i];\n+        debuggee_threads[debuggee_threads_cnt].dfn = -1;\n+        debuggee_threads[debuggee_threads_cnt].name = info.name;\n+        debuggee_threads_cnt++;\n@@ -139,2 +151,2 @@\n-    for (i = 0; i < threads_count; i++) {\n-        if (threadList[i].dfn < 0) {\n+    for (i = 0; i < debuggee_threads_cnt; i++) {\n+        if (debuggee_threads[i].dfn < 0) {\n@@ -142,1 +154,1 @@\n-            threadList[i].dfn = gDfn++;\n+            debuggee_threads[i].dfn = gDfn++;\n@@ -145,1 +157,1 @@\n-                        jvmti->GetCurrentContendedMonitor(threadList[pThread].thread, &monitor)))\n+                        jvmti->GetCurrentContendedMonitor(debuggee_threads[pThread].thread, &monitor)))\n@@ -153,2 +165,2 @@\n-                for (cThread = 0; cThread < threads_count; cThread++) {\n-                    if (jni->IsSameObject(threadList[cThread].thread, usageInfo.owner))\n+                for (cThread = 0; cThread < debuggee_threads_cnt; cThread++) {\n+                    if (jni->IsSameObject(debuggee_threads[cThread].thread, usageInfo.owner))\n@@ -163,1 +175,1 @@\n-                if (!NSK_VERIFY(cThread != threads_count))\n+                if (!NSK_VERIFY(cThread != debuggee_threads_cnt))\n@@ -165,2 +177,2 @@\n-                if (threadList[cThread].dfn < 0) {\n-                    threadList[cThread].dfn = gDfn++;\n+                if (debuggee_threads[cThread].dfn < 0) {\n+                    debuggee_threads[cThread].dfn = gDfn++;\n@@ -182,3 +194,3 @@\n-    for (i = 0; i < threads_count; i++) {\n-        if (threadList[i].name != nullptr) {\n-            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)threadList[i].name)))\n+    for (i = 0; i < debuggee_threads_cnt; i++) {\n+        if (debuggee_threads[i].name != nullptr) {\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)debuggee_threads[i].name)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001\/tc03t001.cpp","additions":38,"deletions":26,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,2 @@\n-\n+    \/\/ The thread name prefix is used to find thread from jvmti agent.\n+    final static String threadNamePrefix = \"Debuggee Thread\";\n@@ -115,1 +116,1 @@\n-        super(\"Debuggee Thread \" + o1 + o2);\n+        super(threadNamePrefix + \" \" + o1 + o2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n-static threadDesc *threadList = nullptr;\n-static jint threads_count = 0;\n+static threadDesc *debuggee_threads = nullptr;\n+static jint debuggee_threads_cnt = 0;\n@@ -48,0 +48,3 @@\n+static const char* THREAD_NAME_PREFIX = \"Debugee Thread\";\n+static const size_t THREAD_NAME_PREFIX_LEN = strlen(THREAD_NAME_PREFIX);\n+\n@@ -59,1 +62,1 @@\n-        NSK_DISPLAY1(\" \\\"%s\\\":\\n\", threadList[pThread].name);\n+        NSK_DISPLAY1(\" \\\"%s\\\":\\n\", debuggee_threads[pThread].name);\n@@ -61,1 +64,1 @@\n-                jvmti->GetCurrentContendedMonitor(threadList[pThread].thread, &monitor)))\n+                jvmti->GetCurrentContendedMonitor(debuggee_threads[pThread].thread, &monitor)))\n@@ -77,2 +80,2 @@\n-        for (cThread = 0; cThread < threads_count; cThread++) {\n-            if (jni->IsSameObject(threadList[cThread].thread, usageInfo.owner))\n+        for (cThread = 0; cThread < debuggee_threads_cnt; cThread++) {\n+            if (jni->IsSameObject(debuggee_threads[cThread].thread, usageInfo.owner))\n@@ -87,1 +90,1 @@\n-        if (!NSK_VERIFY(cThread != threads_count))\n+        if (!NSK_VERIFY(cThread != debuggee_threads_cnt))\n@@ -90,1 +93,1 @@\n-            threadList[cThread].name);\n+            debuggee_threads[cThread].name);\n@@ -106,0 +109,1 @@\n+    int threads_count = 0;\n@@ -107,1 +111,1 @@\n-    NSK_DISPLAY0(\"Create threadList\\n\");\n+    NSK_DISPLAY0(\"Create debuggee_threads\\n\");\n@@ -117,1 +121,1 @@\n-            jvmti->Allocate(threads_count*sizeof(threadDesc), (unsigned char**)&threadList)))\n+            jvmti->Allocate(threads_count*sizeof(threadDesc), (unsigned char**)&debuggee_threads)))\n@@ -130,3 +134,11 @@\n-        threadList[i].thread = threads[i];\n-        threadList[i].dfn = -1;\n-        threadList[i].name = info.name;\n+        if (!strncmp(info.name, THREAD_NAME_PREFIX, THREAD_NAME_PREFIX_LEN)) {\n+            NSK_DISPLAY1(\"Skipping thread %s\\n\", info.name);\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)info.name)))\n+                return NSK_FALSE;\n+            continue;\n+        }\n+\n+        debuggee_threads[debuggee_threads_cnt].thread = threads[i];\n+        debuggee_threads[debuggee_threads_cnt].dfn = -1;\n+        debuggee_threads[debuggee_threads_cnt].name = info.name;\n+        debuggee_threads_cnt++;\n@@ -139,2 +151,3 @@\n-    for (i = 0; i < threads_count; i++) {\n-        if (threadList[i].dfn < 0) {\n+    for (i = 0; i < debuggee_threads_cnt; i++) {\n+\n+        if (debuggee_threads[i].dfn < 0) {\n@@ -142,1 +155,1 @@\n-            threadList[i].dfn = gDfn++;\n+            debuggee_threads[i].dfn = gDfn++;\n@@ -145,1 +158,1 @@\n-                        jvmti->GetCurrentContendedMonitor(threadList[pThread].thread, &monitor)))\n+                        jvmti->GetCurrentContendedMonitor(debuggee_threads[pThread].thread, &monitor)))\n@@ -153,2 +166,2 @@\n-                for (cThread = 0; cThread < threads_count; cThread++) {\n-                    if (jni->IsSameObject(threadList[cThread].thread, usageInfo.owner))\n+                for (cThread = 0; cThread < debuggee_threads_cnt; cThread++) {\n+                    if (jni->IsSameObject(debuggee_threads[cThread].thread, usageInfo.owner))\n@@ -163,1 +176,1 @@\n-                if (!NSK_VERIFY(cThread != threads_count))\n+                if (!NSK_VERIFY(cThread != debuggee_threads_cnt))\n@@ -165,2 +178,2 @@\n-                if (threadList[cThread].dfn < 0) {\n-                    threadList[cThread].dfn = gDfn++;\n+                if (debuggee_threads[cThread].dfn < 0) {\n+                    debuggee_threads[cThread].dfn = gDfn++;\n@@ -182,3 +195,3 @@\n-    for (i = 0; i < threads_count; i++) {\n-        if (threadList[i].name != nullptr) {\n-            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)threadList[i].name)))\n+    for (i = 0; i < debuggee_threads_cnt; i++) {\n+        if (debuggee_threads[i].name != nullptr) {\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)debuggee_threads[i].name)))\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002\/tc03t002.cpp","additions":39,"deletions":26,"binary":false,"changes":65,"status":"modified"}]}