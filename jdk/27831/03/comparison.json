{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,0 +126,2 @@\n+    \/\/ The thread name prefix is used to find thread from jvmti agent.\n+    final static String threadNamePrefix = \"Debuggee Thread\";\n@@ -133,1 +135,1 @@\n-        super(\"Debuggee Thread \" + o1 + o2);\n+        super(threadNamePrefix + \" \" + o1 + o2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,3 @@\n+static const char* THREAD_NAME_PREFIX = \"Debugee Thread\";\n+static const size_t THREAD_NAME_PREFIX_LEN = strlen(THREAD_NAME_PREFIX);\n+\n@@ -106,0 +109,1 @@\n+    int debuggee_thread_cnt = 0;\n@@ -130,3 +134,11 @@\n-        threadList[i].thread = threads[i];\n-        threadList[i].dfn = -1;\n-        threadList[i].name = info.name;\n+        if (!strncmp(info.name, THREAD_NAME_PREFIX, THREAD_NAME_PREFIX_LEN)) {\n+            NSK_DISPLAY1(\"Skipping thread %s\\n\", info.name);\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)info.name)))\n+                return NSK_FALSE;\n+            continue;\n+        }\n+\n+        threadList[debuggee_thread_cnt].thread = threads[i];\n+        threadList[debuggee_thread_cnt].dfn = -1;\n+        threadList[debuggee_thread_cnt].name = info.name;\n+        debuggee_thread_cnt++;\n@@ -139,1 +151,1 @@\n-    for (i = 0; i < threads_count; i++) {\n+    for (i = 0; i < debuggee_thread_cnt; i++) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t001\/tc03t001.cpp","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,2 @@\n-\n+    \/\/ The thread name prefix is used to find thread from jvmti agent.\n+    final static String threadNamePrefix = \"Debuggee Thread\";\n@@ -115,1 +116,1 @@\n-        super(\"Debuggee Thread \" + o1 + o2);\n+        super(threadNamePrefix + \" \" + o1 + o2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,3 @@\n+static const char* THREAD_NAME_PREFIX = \"Debugee Thread\";\n+static const size_t THREAD_NAME_PREFIX_LEN = strlen(THREAD_NAME_PREFIX);\n+\n@@ -106,0 +109,1 @@\n+    int debuggee_thread_cnt = 0;\n@@ -130,3 +134,11 @@\n-        threadList[i].thread = threads[i];\n-        threadList[i].dfn = -1;\n-        threadList[i].name = info.name;\n+        if (!strncmp(info.name, THREAD_NAME_PREFIX, THREAD_NAME_PREFIX_LEN)) {\n+            NSK_DISPLAY1(\"Skipping thread %s\\n\", info.name);\n+            if (!NSK_JVMTI_VERIFY(jvmti->Deallocate((unsigned char*)info.name)))\n+                return NSK_FALSE;\n+            continue;\n+        }\n+\n+        threadList[debuggee_thread_cnt].thread = threads[i];\n+        threadList[debuggee_thread_cnt].dfn = -1;\n+        threadList[debuggee_thread_cnt].name = info.name;\n+        debuggee_thread_cnt++;\n@@ -139,1 +151,2 @@\n-    for (i = 0; i < threads_count; i++) {\n+    for (i = 0; i < debuggee_thread_cnt; i++) {\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC03\/tc03t002\/tc03t002.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"}]}