{"files":[{"patch":"@@ -50,1 +50,0 @@\n-import org.junit.jupiter.params.provider.Arguments;\n@@ -55,1 +54,0 @@\n-import static org.junit.jupiter.params.provider.Arguments.arguments;\n@@ -63,1 +61,1 @@\n-    static Stream<Arguments> bytebuffers() throws Exception {\n+    static Stream<ByteBuffer> bytebuffers() throws Exception {\n@@ -70,13 +68,8 @@\n-                arguments(ByteBuffer.wrap(classBytes),\n-                        false),\n-                arguments(ByteBuffer.wrap(classBytes)\n-                                .asReadOnlyBuffer(),\n-                        true),\n-                arguments(ByteBuffer.wrap(classBytesAtOffset)\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(ByteBuffer\n-                                .wrap(classBytesAtOffset)\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        true),\n+                ByteBuffer.wrap(classBytes),\n+                ByteBuffer.wrap(classBytes)\n+                        .asReadOnlyBuffer(),\n+                ByteBuffer.wrap(classBytesAtOffset)\n+                        .position(CLASSBYTES_OFFSET),\n+                ByteBuffer.wrap(classBytesAtOffset)\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -84,21 +77,17 @@\n-                arguments(ByteBuffer.allocate(classBytes.length)\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(ByteBuffer.allocate(classBytes.length)\n-                                .put(classBytes)\n-                                .flip()\n-                                .position(0)\n-                                .asReadOnlyBuffer(),\n-                        true),\n-                arguments(ByteBuffer.allocate(classBytesAtOffset.length)\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(ByteBuffer.allocate(classBytesAtOffset.length)\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        true),\n+                ByteBuffer.allocate(classBytes.length)\n+                        .put(classBytes)\n+                        .flip(),\n+                ByteBuffer.allocate(classBytes.length)\n+                        .put(classBytes)\n+                        .flip()\n+                        .position(0)\n+                        .asReadOnlyBuffer(),\n+                ByteBuffer.allocate(classBytesAtOffset.length)\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                ByteBuffer.allocate(classBytesAtOffset.length)\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -106,20 +95,16 @@\n-                arguments(ByteBuffer.allocateDirect(classBytes.length)\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(ByteBuffer.allocateDirect(classBytes.length)\n-                                .put(classBytes)\n-                                .flip()\n-                                .asReadOnlyBuffer(),\n-                        false),\n-                arguments(ByteBuffer.allocateDirect(classBytesAtOffset.length)\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(ByteBuffer.allocateDirect(classBytesAtOffset.length)\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        false),\n+                ByteBuffer.allocateDirect(classBytes.length)\n+                        .put(classBytes)\n+                        .flip(),\n+                ByteBuffer.allocateDirect(classBytes.length)\n+                        .put(classBytes)\n+                        .flip()\n+                        .asReadOnlyBuffer(),\n+                ByteBuffer.allocateDirect(classBytesAtOffset.length)\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                ByteBuffer.allocateDirect(classBytesAtOffset.length)\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -127,28 +112,24 @@\n-                arguments(Arena.ofAuto()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(Arena.ofAuto()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip()\n-                                .asReadOnlyBuffer(),\n-                        false),\n-                arguments(Arena.ofAuto()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(Arena.ofAuto()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        false),\n+                Arena.ofAuto()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip(),\n+                Arena.ofAuto()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip()\n+                        .asReadOnlyBuffer(),\n+                Arena.ofAuto()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                Arena.ofAuto()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -156,28 +137,24 @@\n-                arguments(Arena.ofConfined()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(Arena.ofConfined()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip()\n-                                .asReadOnlyBuffer(),\n-                        false),\n-                arguments(Arena.ofConfined()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(Arena.ofConfined()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        false),\n+                Arena.ofConfined()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip(),\n+                Arena.ofConfined()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip()\n+                        .asReadOnlyBuffer(),\n+                Arena.ofConfined()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                Arena.ofConfined()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -185,28 +162,24 @@\n-                arguments(Arena.global()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(Arena.global()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip()\n-                                .asReadOnlyBuffer(),\n-                        false),\n-                arguments(Arena.global()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(Arena.global()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        false),\n+                Arena.global()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip(),\n+                Arena.global()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip()\n+                        .asReadOnlyBuffer(),\n+                Arena.global()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                Arena.global()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -214,28 +187,24 @@\n-                arguments(Arena.ofShared()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip(),\n-                        false),\n-                arguments(Arena.ofShared()\n-                                .allocate(classBytes.length)\n-                                .asByteBuffer()\n-                                .put(classBytes)\n-                                .flip()\n-                                .asReadOnlyBuffer(),\n-                        false),\n-                arguments(Arena.ofShared()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET),\n-                        false),\n-                arguments(Arena.ofShared()\n-                                .allocate(classBytesAtOffset.length)\n-                                .asByteBuffer()\n-                                .put(classBytesAtOffset)\n-                                .flip()\n-                                .position(CLASSBYTES_OFFSET)\n-                                .asReadOnlyBuffer(),\n-                        false),\n+                Arena.ofShared()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip(),\n+                Arena.ofShared()\n+                        .allocate(classBytes.length)\n+                        .asByteBuffer()\n+                        .put(classBytes)\n+                        .flip()\n+                        .asReadOnlyBuffer(),\n+                Arena.ofShared()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET),\n+                Arena.ofShared()\n+                        .allocate(classBytesAtOffset.length)\n+                        .asByteBuffer()\n+                        .put(classBytesAtOffset)\n+                        .flip()\n+                        .position(CLASSBYTES_OFFSET)\n+                        .asReadOnlyBuffer(),\n@@ -243,2 +212,2 @@\n-                arguments(getMappedByteBuffer(classBytes, 0), false),\n-                arguments(getMappedByteBuffer(classBytesAtOffset, CLASSBYTES_OFFSET), false)\n+                getMappedByteBuffer(classBytes, 0),\n+                getMappedByteBuffer(classBytesAtOffset, CLASSBYTES_OFFSET)\n@@ -261,2 +230,3 @@\n-    void testDefineClassWithCustomLoaderByteBuffer(ByteBuffer bb, boolean posAtLimit)\n-            throws Exception {\n+    void testDefineClassWithCustomLoaderByteBuffer(ByteBuffer bb) throws Exception {\n+        int originalPos = bb.position();\n+        int originalLimit = bb.limit();\n@@ -266,1 +236,6 @@\n-        assertEquals(posAtLimit, bb.position() == bb.limit());\n+        \/\/  long-standing (and undocumented) behavior, see JDK-8352583\n+        if (bb.isDirect() || bb.hasArray()) {\n+            assertEquals(originalPos, bb.position());\n+        } else {\n+            assertEquals(originalLimit, bb.position());\n+        }\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/defineClass\/DefineClassDirectByteBuffer.java","additions":149,"deletions":174,"binary":false,"changes":323,"status":"modified"}]}