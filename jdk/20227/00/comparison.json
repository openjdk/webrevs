{"files":[{"patch":"@@ -114,1 +114,1 @@\n-                                          chainRunnable(upstream.startHandler(), downstream.startHandler()));\n+                                          chainRunnable(downstream.startHandler(), upstream.startHandler()));\n@@ -201,1 +201,1 @@\n-                                           chainRunnable(upstream.startHandler(), downstream.startHandler()));\n+                                           chainRunnable(downstream.startHandler(), upstream.startHandler()));\n@@ -264,1 +264,1 @@\n-                                           chainRunnable(upstream.startHandler(), downstream.startHandler()));\n+                                           chainRunnable(downstream.startHandler(), upstream.startHandler()));\n@@ -304,1 +304,1 @@\n-                                         chainRunnable(upstream.startHandler(), downstream.startHandler()));\n+                                         chainRunnable(downstream.startHandler(), upstream.startHandler()));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/TransformImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8336010\n+ * @bug 8336010 8336588\n@@ -30,0 +30,1 @@\n+\n@@ -31,0 +32,4 @@\n+import java.lang.classfile.ClassElement;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassModel;\n+import java.lang.classfile.ClassTransform;\n@@ -33,0 +38,2 @@\n+import java.lang.classfile.CodeModel;\n+import java.lang.classfile.CodeTransform;\n@@ -36,0 +43,1 @@\n+import java.lang.classfile.MethodModel;\n@@ -38,0 +46,1 @@\n+import java.lang.classfile.instruction.ConstantInstruction;\n@@ -46,9 +55,0 @@\n-\n-import helpers.ByteArrayClassLoader;\n-import java.lang.classfile.ClassModel;\n-import java.lang.classfile.ClassTransform;\n-import java.lang.classfile.ClassFile;\n-import java.lang.classfile.CodeModel;\n-import java.lang.classfile.CodeTransform;\n-import java.lang.classfile.MethodModel;\n-import java.lang.classfile.instruction.ConstantInstruction;\n@@ -58,0 +58,1 @@\n+import helpers.ByteArrayClassLoader;\n@@ -292,0 +293,39 @@\n+    @Test\n+    void testStateOrder() throws Exception {\n+        var bytes = Files.readAllBytes(testClassPath);\n+        var cf = ClassFile.of();\n+        var cm = cf.parse(bytes);\n+\n+        int[] counter = {0};\n+\n+        enum TransformState { START, ONGOING, ENDED }\n+\n+        var ct = ClassTransform.ofStateful(() -> new ClassTransform() {\n+            TransformState state = TransformState.START;\n+\n+            @Override\n+            public void atStart(ClassBuilder builder) {\n+                assertSame(TransformState.START, state);\n+                builder.withField(\"f\" + counter[0]++, CD_int, 0);\n+                state = TransformState.ONGOING;\n+            }\n+\n+            @Override\n+            public void atEnd(ClassBuilder builder) {\n+                assertSame(TransformState.ONGOING, state);\n+                builder.withField(\"f\" + counter[0]++, CD_int, 0);\n+                state = TransformState.ENDED;\n+            }\n+\n+            @Override\n+            public void accept(ClassBuilder builder, ClassElement element) {\n+                assertSame(TransformState.ONGOING, state);\n+                builder.with(element);\n+            }\n+        });\n+\n+        cf.transformClass(cm, ct);\n+        cf.transformClass(cm, ct.andThen(ct));\n+        cf.transformClass(cm, ct.andThen(ct).andThen(ct));\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/TransformTests.java","additions":50,"deletions":10,"binary":false,"changes":60,"status":"modified"}]}