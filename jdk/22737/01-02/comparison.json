{"files":[{"patch":"@@ -1866,2 +1866,2 @@\n-                *      (ch | 0b10_0000) == lowercase-letter\n-                * is used as a shortcut for\n+         *      (ch | 0b10_0000) == lowercase-letter\n+         * is used as a shortcut for\n@@ -2016,1 +2016,1 @@\n-         * trailing zeros).\n+         * trailing zeros)\n@@ -2134,1 +2134,1 @@\n-         * |e'| < 10^14, no overflows.\n+         * |e'| < 10^14\n@@ -2274,1 +2274,1 @@\n-     * Arithmetically \"appends\" the \"digit\" ch to v >= 0.\n+     * Arithmetically \"appends the digit\" ch to v >= 0, up to 10^12.\n@@ -2288,1 +2288,1 @@\n-    \/* Returns the numeric value of ch, assuming it is a \"hexdigit\". *\/\n+    \/* Returns the numeric value of ch, assuming it is a hexdigit. *\/\n@@ -2293,1 +2293,4 @@\n-    \/* Starting at i, skip all chars in ['\\0', ' ']. Return the index after. *\/\n+    \/*\n+     * Starting at i, skips all chars in ['\\0', ' '].\n+     * Returns the index after the whitespaces.\n+     *\/\n@@ -2359,1 +2362,1 @@\n-     * Equivalently EP_MIN = floor(log10(2^(Q_MIN-1))).\n+     * Equivalently, EP_MIN = floor(log10(2^(Q_MIN-1))).\n@@ -2369,1 +2372,1 @@\n-     * Equivalently EP_MAX = ceil(log10((2^P - 1\/2) 2^Q_MAX)) + 1.\n+     * Equivalently, EP_MAX = ceil(log10((2^P - 1\/2) 2^Q_MAX)) + 1.\n@@ -2414,1 +2417,1 @@\n-     * HEX_COUNT = floor(P \/ 4) + 2\n+     * HEX_COUNT = floor(P\/4) + 2\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"}]}