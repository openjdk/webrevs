{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -490,2 +490,2 @@\n-                heapBase().map(hb -> \"heapBase: \" + hb + \", \").orElse(\"\") +\n-                \"address: \" + Utils.toHexString(address()) +\n+                heapBase().map(hb -> \"heapBase: \" + hb).orElse(isMapped() ? \"mapped\" : \"native\") +\n+                \", address: \" + Utils.toHexString(address()) +\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,1 @@\n+            assertTrue(segment.toString().contains(\"mapped\"));\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,0 +237,1 @@\n+            assertFalse(s.contains(\"native\"));\n@@ -239,0 +240,1 @@\n+            assertTrue(s.contains(\"native\"));\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}