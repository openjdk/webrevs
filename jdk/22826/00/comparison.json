{"files":[{"patch":"@@ -490,2 +490,2 @@\n-                heapBase().map(hb -> \"heapBase: \" + hb + \", \").orElse(\"\") +\n-                \"address: \" + Utils.toHexString(address()) +\n+                heapBase().map(hb -> \"heapBase: \" + hb).orElse(\"native\") +\n+                \", address: \" + Utils.toHexString(address()) +\n@@ -493,0 +493,4 @@\n+                (sessionImpl() instanceof ConfinedSession ? \", confined\" : \"\") +\n+                (!sessionImpl().isAlive() ? \", not alive\" : \"\") +\n+                (isReadOnly() ? \", read-only\" : \"\") +\n+                (isMapped() ? \", mapped\" : \"\") +\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -263,0 +263,1 @@\n+            assertTrue(segment.toString().contains(\", mapped\"));\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -237,0 +237,1 @@\n+            assertFalse(s.contains(\"native\"));\n@@ -239,0 +240,1 @@\n+            assertTrue(s.contains(\"native\"));\n@@ -241,0 +243,21 @@\n+\n+        assertFalse(s.contains(\", mapped\"));\n+        assertFalse(s.contains(\", not alive\"));\n+        var readOnlySegment = segment.asReadOnly();\n+        assertTrue(readOnlySegment.toString().contains(\", read-only\"));\n+    }\n+\n+    @Test\n+    public void testToString2() {\n+        MemorySegment segment;\n+        try (var arena = Arena.ofConfined()) {\n+            segment = arena.allocate(8);\n+            assertTrue(segment.toString().contains(\", confined\"));\n+            assertFalse(segment.toString().contains(\", not alive\"));\n+        }\n+        assertTrue(segment.toString().contains(\", not alive\"));\n+        try (var arena = Arena.ofShared()) {\n+            segment = arena.allocate(8);\n+            assertFalse(segment.toString().contains(\", confined\"));\n+            assertFalse(segment.toString().contains(\", not alive\"));\n+        }\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}