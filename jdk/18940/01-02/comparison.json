{"files":[{"patch":"@@ -1048,5 +1048,0 @@\n-bool JavaThread::is_lock_owned(address adr) const {\n-  assert(LockingMode != LM_LIGHTWEIGHT, \"should not be called with new lightweight locking\");\n-  return Thread::is_lock_owned(adr);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -675,3 +675,0 @@\n-  \/\/ Fast-locking support\n-  bool is_lock_owned(address adr) const;\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -530,5 +530,0 @@\n-\/\/ We had to move these methods here, because vm threads get into ObjectSynchronizer::enter\n-\/\/ However, there is a note in JavaThread::is_lock_owned() about the VM threads not being\n-\/\/ used for compilation in the future. If that change is made, the need for these methods\n-\/\/ should be revisited, and they should be removed if possible.\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}