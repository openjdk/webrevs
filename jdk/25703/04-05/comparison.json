{"files":[{"patch":"@@ -37,1 +37,0 @@\n-import java.nio.file.Path;\n@@ -39,1 +38,0 @@\n-import java.util.jar.*;\n@@ -43,1 +41,0 @@\n-import org.junit.jupiter.api.BeforeAll;\n@@ -46,2 +43,0 @@\n-import static org.junit.jupiter.api.Assertions.fail;\n-\n@@ -50,1 +45,0 @@\n-    private static final Path JAR_PATH = Path.of(\"testclasses.jar\");\n@@ -52,11 +46,2 @@\n-\n-    \/\/ Create the class file and write it to the testable jar\n-    @BeforeAll\n-    static void setup() throws IOException {\n-        var bytes = ClassFile.of().build(ClassDesc.of(\"fo o\"), _ -> {});\n-        try (JarOutputStream jos = new JarOutputStream(new FileOutputStream(JAR_PATH.toFile()))) {\n-            jos.putNextEntry(new JarEntry(\"fo o.class\"));\n-            jos.write(bytes, 0, bytes.length);\n-            jos.closeEntry();\n-        }\n-    }\n+    private static final byte[] bytes =\n+            ClassFile.of().build(ClassDesc.of(\"fo o\"), _ -> {});\n@@ -65,1 +50,1 @@\n-    void testClassName() throws Exception {\n+    void testClassName() throws IOException {\n@@ -69,25 +54,8 @@\n-            try {\n-                String filename = exchange.getRequestURI().getPath();\n-                System.out.println(\"getRequestURI = \" + exchange.getRequestURI());\n-                System.out.println(\"filename = \" + filename);\n-                try (FileInputStream fis = new FileInputStream(JAR_PATH.toFile());\n-                     JarInputStream jis = new JarInputStream(fis)) {\n-                    JarEntry entry;\n-                    while ((entry = jis.getNextJarEntry()) != null) {\n-                        if (filename.endsWith(entry.getName())) {\n-                            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                            byte[] buf = new byte[8092];\n-                            int count = 0;\n-                            while ((count = jis.read(buf)) != -1)\n-                                baos.write(buf, 0, count);\n-                            exchange.sendResponseHeaders(200, baos.size());\n-                            try (OutputStream os = exchange.getResponseBody()) {\n-                                baos.writeTo(os);\n-                            }\n-                            return; \/\/ success\n-                        }\n-                    }\n-                    contextFail(\"Failed to find \" + filename);\n-                }\n-            } catch (IOException e) {\n-                unexpectedFail(e);\n+            String filename = exchange.getRequestURI().getPath();\n+            System.out.println(\"getRequestURI = \" + exchange.getRequestURI());\n+            System.out.println(\"filename = \" + filename);\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            baos.write(bytes, 0, bytes.length);\n+            exchange.sendResponseHeaders(200, baos.size());\n+            try (OutputStream os = exchange.getResponseBody()) {\n+                baos.writeTo(os);\n@@ -130,5 +98,0 @@\n-            \/\/ check loaded JAR files\n-            try {\n-                return super.findClass(name);\n-            } catch (ClassNotFoundException _) {}\n-\n@@ -187,16 +150,0 @@\n-\n-    static void contextFail(String msg) {\n-        if (server != null) {\n-            server.stop(0);\n-        }\n-        Thread.dumpStack();\n-        fail(msg);\n-    }\n-\n-    static void unexpectedFail(Throwable t) {\n-        if (server != null) {\n-            server.stop(0);\n-        }\n-        t.printStackTrace();\n-        fail(\"Handler threw an unexpected IO Exception\");\n-    }\n","filename":"test\/jdk\/jdk\/internal\/loader\/URLClassPath\/ClassnameCharTest.java","additions":11,"deletions":64,"binary":false,"changes":75,"status":"modified"}]}