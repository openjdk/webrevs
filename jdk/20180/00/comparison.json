{"files":[{"patch":"@@ -71,1 +71,1 @@\n-    private static final int INT_PHI = 0x9E3779B9;\n+    static final int NON_ZERO = 0x40000000;\n@@ -74,1 +74,1 @@\n-        return phiMix(tag * TAG_SMEAR + x1);\n+        return (tag * TAG_SMEAR + x1) | NON_ZERO;\n@@ -78,1 +78,1 @@\n-        return phiMix(tag * TAG_SMEAR + x1 + 31*x2);\n+        return (tag * TAG_SMEAR + x1 + 31 * x2) | NON_ZERO;\n@@ -83,6 +83,1 @@\n-        return phiMix(stringHash | (1 << 30));\n-    }\n-\n-    public static int phiMix(int x) {\n-        int h = x * INT_PHI;\n-        return h ^ (h >> 16);\n+        return stringHash | NON_ZERO;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,3 +79,1 @@\n-        int hash = handle.hashCode();\n-        hash = 31 * hash + arguments.hashCode();\n-        return AbstractPoolEntry.phiMix(hash);\n+        return (31 * handle.hashCode() + arguments.hashCode()) | AbstractPoolEntry.NON_ZERO;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BootstrapMethodEntryImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -991,1 +991,1 @@\n-            case 0x78147009 ->\n+            case 0x46699ff2 ->\n@@ -993,1 +993,1 @@\n-            case 0x665e3a3a ->\n+            case 0x5208e184 ->\n@@ -995,1 +995,1 @@\n-            case 0xcb7e162 ->\n+            case 0xcb60907a ->\n@@ -997,1 +997,1 @@\n-            case 0x21e41e7e ->\n+            case 0x4020220d ->\n@@ -999,1 +999,1 @@\n-            case 0x5a306b41 ->\n+            case 0xc20dd1fe ->\n@@ -1001,1 +1001,1 @@\n-            case 0x3e191c7c ->\n+            case 0xcab1940d ->\n@@ -1003,1 +1003,1 @@\n-            case 0x5e88ed0c ->\n+            case 0x558641d3 ->\n@@ -1005,1 +1005,1 @@\n-            case 0x7284695e ->\n+            case 0x51d443cd ->\n@@ -1007,1 +1007,1 @@\n-            case 0x21df25db ->\n+            case 0x687c1624 ->\n@@ -1009,1 +1009,1 @@\n-            case 0x11392da9 ->\n+            case 0x7adb2910 ->\n@@ -1011,1 +1011,1 @@\n-            case 0x167536fc ->\n+            case 0x653f0551 ->\n@@ -1013,1 +1013,1 @@\n-            case 0x46939abc ->\n+            case 0x64c75927 ->\n@@ -1015,1 +1015,1 @@\n-            case 0x63ee67f4 ->\n+            case 0x6697f98d ->\n@@ -1017,1 +1017,1 @@\n-            case 0x2b597e15 ->\n+            case 0xdbb0cdcb ->\n@@ -1019,1 +1019,1 @@\n-            case 0x19f20ade ->\n+            case 0xc9b0928c ->\n@@ -1021,1 +1021,1 @@\n-            case 0x47f6395e ->\n+            case 0x41cd27e8 ->\n@@ -1023,1 +1023,1 @@\n-            case 0x54db809 ->\n+            case 0x7deb0a13 ->\n@@ -1025,1 +1025,1 @@\n-            case 0x1abd1c2c ->\n+            case 0x6706ff99 ->\n@@ -1027,1 +1027,1 @@\n-            case 0x6ba46dd ->\n+            case 0x60272858 ->\n@@ -1029,1 +1029,1 @@\n-            case 0x46f7d91d ->\n+            case 0x5646d73d ->\n@@ -1031,1 +1031,1 @@\n-            case 0x5137f53 ->\n+            case 0x50336c40 ->\n@@ -1033,1 +1033,1 @@\n-            case 0x4a8fa3b6 ->\n+            case 0x4735ab81 ->\n@@ -1035,1 +1035,1 @@\n-            case 0x55c73cb6 ->\n+            case 0x7100d9fe ->\n@@ -1037,1 +1037,1 @@\n-            case 0x3fe76d4e ->\n+            case 0xd1ab5871 ->\n@@ -1039,1 +1039,1 @@\n-            case 0x180d6925 ->\n+            case 0x7588550f ->\n@@ -1041,1 +1041,1 @@\n-            case 0x7be22752 ->\n+            case 0xcc74da30 ->\n@@ -1043,1 +1043,1 @@\n-            case 0x5299824 ->\n+            case 0xf67697f5 ->\n@@ -1045,1 +1045,1 @@\n-            case 0x3534786e ->\n+            case 0xe0837d2a ->\n@@ -1047,1 +1047,1 @@\n-            case 0xb4b4ac6 ->\n+            case 0xc945a075 ->\n@@ -1049,1 +1049,1 @@\n-            case 0x6926482 ->\n+            case 0x611a3a90 ->\n@@ -1051,1 +1051,1 @@\n-            case 0x16a42b7c ->\n+            case 0xf76fb898 ->\n@@ -1053,1 +1053,1 @@\n-            case 0x400ab245 ->\n+            case 0x6b41b047 ->\n@@ -1055,1 +1055,1 @@\n-            case 0x2af490d4 ->\n+            case 0x748c2857 ->\n@@ -1057,1 +1057,1 @@\n-            case 0x303e0c58 ->\n+            case 0x6bf13a96 ->\n@@ -1059,1 +1059,1 @@\n-            case 0x19c7d0cd ->\n+            case 0xfa85ee5a ->\n@@ -1061,1 +1061,1 @@\n-            case 0x3dc79b7a ->\n+            case 0xf2670725 ->\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BoundAttribute.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8320360 8330684 8331320 8331655 8331940 8332486\n+ * @bug 8320360 8330684 8331320 8331655 8331940 8332486 8335820\n@@ -42,0 +42,1 @@\n+import java.lang.classfile.constantpool.ConstantPoolBuilder;\n@@ -193,0 +194,6 @@\n+\n+    @Test\n+    void testZeroHashCPEntry() {\n+        var cpb = ConstantPoolBuilder.of();\n+        cpb.intEntry(-cpb.intEntry(0).hashCode());\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}