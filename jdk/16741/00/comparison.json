{"files":[{"patch":"@@ -30,1 +30,1 @@\n-  static void invokevfinal_helper(Register Rcache, Register Rscratch1, Register Rscratch2, Register Rscratch3);\n+  static void invokevfinal_helper(Register Rcache, Register Rscratch1, Register Rscratch2, Register Rscratch3, Register Rscratch4);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3489,1 +3489,1 @@\n-  invokevfinal_helper(Rcache, R11_scratch1, R12_scratch2, Rflags \/* tmp *\/);\n+  invokevfinal_helper(Rcache, R11_scratch1, R12_scratch2, Rflags \/* tmp *\/, Rrecv \/* tmp *\/);\n@@ -3512,1 +3512,1 @@\n-  invokevfinal_helper(Rcache, R11_scratch1, R12_scratch2, R22_tmp2);\n+  invokevfinal_helper(Rcache, R11_scratch1, R12_scratch2, R22_tmp2, R23_tmp3);\n@@ -3515,1 +3515,2 @@\n-void TemplateTable::invokevfinal_helper(Register Rcache, Register Rscratch1, Register Rscratch2, Register Rscratch3) {\n+void TemplateTable::invokevfinal_helper(Register Rcache,\n+                                        Register Rscratch1, Register Rscratch2, Register Rscratch3, Register Rscratch4) {\n@@ -3517,1 +3518,1 @@\n-  assert_different_registers(Rcache, Rscratch1, Rscratch2, Rscratch3);\n+  assert_different_registers(Rcache, Rscratch1, Rscratch2, Rscratch3, Rscratch4);\n@@ -3519,3 +3520,4 @@\n-  \/\/ Load receiver from stack slot.\n-  Register Rmethod = Rscratch3;\n-  __ ld(Rmethod, in_bytes(ResolvedMethodEntry::method_offset()), Rcache);\n+  Register Rrecv     = Rscratch2,\n+           Rmethod   = Rscratch3,\n+           Rret_addr = Rscratch4;\n+  prepare_invoke(Rcache, Rret_addr, Rrecv, Rscratch1);\n@@ -3523,17 +3525,1 @@\n-  \/\/ Get return address.\n-  Register Rtable_addr = Rscratch2,\n-           Rret_addr   = Rcache,\n-           Rret_type   = Rscratch1;\n-  \/\/ Get return type. It's coded into the upper 4 bits of the lower half of the 64 bit value.\n-  __ lbz(Rret_type, in_bytes(ResolvedMethodEntry::type_offset()), Rcache);\n-  __ load_dispatch_table(Rtable_addr, Interpreter::invoke_return_entry_table());\n-  __ sldi(Rret_type, Rret_type, LogBytesPerWord);\n-  __ ldx(Rret_addr, Rret_type, Rtable_addr); \/\/ kills Rcache\n-\n-  Register Rnum_params = Rscratch2,\n-           Rrecv       = Rscratch2;\n-  __ ld(Rnum_params, in_bytes(Method::const_offset()), Rmethod);\n-  __ lhz(Rnum_params \/* number of params *\/, in_bytes(ConstMethod::size_of_parameters_offset()), Rnum_params);\n-\n-  \/\/ Load receiver and receiver null check.\n-  __ load_receiver(Rnum_params, Rrecv);\n+  \/\/ Receiver null check.\n@@ -3542,0 +3528,2 @@\n+  __ ld(Rmethod, in_bytes(ResolvedMethodEntry::method_offset()), Rcache);\n+\n@@ -3560,1 +3548,1 @@\n-                                               Rmethod, \/\/ Method* or itable index\n+                                               Rmethod, \/\/ Method*\n@@ -3562,1 +3550,1 @@\n-  prepare_invoke(Rcache, Rret_addr, Rreceiver, R11_scratch1); \/\/ recv\n+  prepare_invoke(Rcache, Rret_addr, Rreceiver, R11_scratch1);\n@@ -3580,4 +3568,4 @@\n-  load_resolved_method_entry_special_or_static(Rcache,  \/\/ ResolvedMethodEntry*\n-                                               R19_method, \/\/ Method* or itable index\n-                                               noreg); \/\/ flags\n-  prepare_invoke(Rcache, Rret_addr, noreg, R11_scratch1); \/\/ recv\n+  load_resolved_method_entry_special_or_static(Rcache,     \/\/ ResolvedMethodEntry*\n+                                               R19_method, \/\/ Method*\n+                                               noreg);     \/\/ flags\n+  prepare_invoke(Rcache, Rret_addr, noreg, R11_scratch1);\n@@ -3641,1 +3629,1 @@\n-  prepare_invoke(Rcache, Rret_addr, Rreceiver, Rscratch1); \/\/ recv\n+  prepare_invoke(Rcache, Rret_addr, Rreceiver, Rscratch1);\n@@ -3759,1 +3747,1 @@\n-                                    Rmethod, \/\/ Method* or itable index\n+                                    Rmethod, \/\/ Method*\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":20,"deletions":32,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+  case Bytecodes::_fast_invokevfinal:\n","filename":"src\/hotspot\/share\/interpreter\/templateInterpreter.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}