{"files":[{"patch":"@@ -141,2 +141,2 @@\n- void CompilationPolicy::wait_replay_training_at_init(JavaThread* THREAD) {\n-    MonitorLocker locker(THREAD, TrainingReplayQueue_lock);\n+ void CompilationPolicy::wait_replay_training_at_init(JavaThread* current) {\n+    MonitorLocker locker(current, TrainingReplayQueue_lock);\n@@ -148,1 +148,1 @@\n-void CompilationPolicy::replay_training_at_init_impl(InstanceKlass* klass, TRAPS) {\n+void CompilationPolicy::replay_training_at_init_impl(InstanceKlass* klass, JavaThread* current) {\n@@ -163,2 +163,2 @@\n-              const methodHandle mh(THREAD, const_cast<Method*>(mtd->holder()));\n-              CompilationPolicy::maybe_compile_early(mh, THREAD);\n+              const methodHandle mh(current, const_cast<Method*>(mtd->holder()));\n+              CompilationPolicy::maybe_compile_early(mh, current);\n@@ -173,1 +173,1 @@\n-void CompilationPolicy::replay_training_at_init(InstanceKlass* klass, JavaThread* THREAD) {\n+void CompilationPolicy::replay_training_at_init(InstanceKlass* klass, JavaThread* current) {\n@@ -176,1 +176,1 @@\n-    _training_replay_queue.push(klass, TrainingReplayQueue_lock, THREAD);\n+    _training_replay_queue.push(klass, TrainingReplayQueue_lock, current);\n@@ -191,1 +191,1 @@\n-void CompilationPolicy::replay_training_at_init_loop(JavaThread* THREAD) {\n+void CompilationPolicy::replay_training_at_init_loop(JavaThread* current) {\n@@ -193,1 +193,1 @@\n-    InstanceKlass* ik = _training_replay_queue.pop(TrainingReplayQueue_lock, THREAD);\n+    InstanceKlass* ik = _training_replay_queue.pop(TrainingReplayQueue_lock, current);\n@@ -195,2 +195,2 @@\n-      replay_training_at_init_impl(ik, THREAD);\n-      _training_replay_queue.processing_done(TrainingReplayQueue_lock, THREAD);\n+      replay_training_at_init_impl(ik, current);\n+      _training_replay_queue.processing_done(TrainingReplayQueue_lock, current);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -83,2 +83,2 @@\n-  void push(T* value, Monitor* lock, JavaThread* THREAD) {\n-    MonitorLocker locker(THREAD, lock);\n+  void push(T* value, Monitor* lock, JavaThread* current) {\n+    MonitorLocker locker(current, lock);\n@@ -92,2 +92,2 @@\n-  T* pop(Monitor* lock, JavaThread* THREAD) {\n-    MonitorLocker locker(THREAD, lock);\n+  T* pop(Monitor* lock, JavaThread* current) {\n+    MonitorLocker locker(current, lock);\n@@ -101,2 +101,2 @@\n-  T* try_pop(Monitor* lock, JavaThread* THREAD) {\n-    MonitorLocker locker(THREAD, lock);\n+  T* try_pop(Monitor* lock, JavaThread* current) {\n+    MonitorLocker locker(current, lock);\n@@ -107,2 +107,2 @@\n-  void processing_done(Monitor* lock, JavaThread* THREAD) {\n-    MonitorLocker locker(THREAD, lock);\n+  void processing_done(Monitor* lock, JavaThread* current) {\n+    MonitorLocker locker(current, lock);\n@@ -355,1 +355,1 @@\n-  static void replay_training_at_init_impl(InstanceKlass* klass, TRAPS);\n+  static void replay_training_at_init_impl(InstanceKlass* klass, JavaThread* current);\n@@ -365,3 +365,3 @@\n-  static void wait_replay_training_at_init(JavaThread* THREAD);\n-  static void replay_training_at_init(InstanceKlass* klass, JavaThread* THREAD);\n-  static void replay_training_at_init_loop(JavaThread* THREAD);\n+  static void wait_replay_training_at_init(JavaThread* current);\n+  static void replay_training_at_init(InstanceKlass* klass, JavaThread* current);\n+  static void replay_training_at_init_loop(JavaThread* current);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-        mtd->verify(true);\n+        mtd->verify(\/*verify_dep_counter*\/true);\n@@ -113,1 +113,3 @@\n-        mtd->verify(false);\n+        \/\/ During the training run init deps tracking is not setup yet,\n+        \/\/ don't verify it.\n+        mtd->verify(\/*verify_dep_counter*\/false);\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -677,3 +677,1 @@\n-  int init_deps_left() const {\n-    return Atomic::load_acquire(&_init_deps_left);\n-  }\n+  int init_deps_left() const { return _init_deps_left; }\n","filename":"src\/hotspot\/share\/oops\/trainingData.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}