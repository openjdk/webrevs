{"files":[{"patch":"@@ -141,7 +141,0 @@\n- void CompilationPolicy::wait_replay_training_to_finish(JavaThread* current) {\n-    MonitorLocker locker(current, TrainingReplayQueue_lock);\n-    while (!_training_replay_queue.is_empty_unlocked() || _training_replay_queue.is_processing_unlocked()) {\n-      locker.wait(); \/\/ let the replay training thread drain the queue\n-    }\n- }\n-\n@@ -192,1 +185,1 @@\n-  while (!CompileBroker::is_compilation_disabled_forever() || AOTVerifyTrainingData) {\n+  while (!CompileBroker::is_compilation_disabled_forever()) {\n@@ -196,1 +189,0 @@\n-      _training_replay_queue.processing_done(TrainingReplayQueue_lock, current);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-  int _processing;\n@@ -72,1 +71,0 @@\n-      ++_processing;\n@@ -77,4 +75,0 @@\n-  void processing_done_unlocked() {\n-    precond(_processing > 0);\n-    --_processing;\n-  }\n@@ -82,1 +76,1 @@\n-  Queue() : _head(nullptr), _tail(nullptr), _processing(0) { }\n+  Queue() : _head(nullptr), _tail(nullptr) { }\n@@ -90,1 +84,0 @@\n-  bool is_processing_unlocked() const { return _processing > 0; }\n@@ -94,1 +87,1 @@\n-    while (is_empty_unlocked() && (!CompileBroker::is_compilation_disabled_forever() || AOTVerifyTrainingData)) {\n+    while (is_empty_unlocked() && !CompileBroker::is_compilation_disabled_forever()) {\n@@ -106,7 +99,0 @@\n-\n-  void processing_done(Monitor* lock, JavaThread* current) {\n-    MonitorLocker locker(current, lock);\n-    processing_done_unlocked();\n-    locker.notify_all();\n-  }\n-\n@@ -365,1 +351,0 @@\n-  static void wait_replay_training_to_finish(JavaThread* current);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -635,1 +635,2 @@\n-    if (init_deps_left1 != init_deps_left2) {\n+    bool invariant = (init_deps_left1 >= init_deps_left2);\n+    if (!invariant) {\n@@ -639,2 +640,1 @@\n-    guarantee(init_deps_left1 == init_deps_left2,\n-              \"init deps invariant violation: %d == %d\", init_deps_left1, init_deps_left2);\n+    guarantee(invariant, \"init deps invariant violation: %d >= %d\", init_deps_left1, init_deps_left2);\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -521,2 +521,0 @@\n-    EXCEPTION_MARK;\n-    CompilationPolicy::wait_replay_training_to_finish(THREAD);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}