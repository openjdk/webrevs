{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-     * setting the {@code processingEnv} field to the value of the\n+     * setting the {@link #processingEnv} field to the value of the\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/AbstractProcessor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,1 +198,1 @@\n- * to extend {@link AbstractProcessor} rather than implementing this\n+ * to extend {@link AbstractProcessor} rather than implement this\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/Processor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-     * environmental configuration. If an runtime annotation interface is\n+     * environmental configuration. If a runtime annotation interface is\n@@ -176,1 +176,1 @@\n-     * environmental configuration. If an runtime annotation interface is\n+     * environmental configuration. If a runtime annotation interface is\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/RoundEnvironment.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * <em>indirectly present<\/em>, and <em>associated <\/em> are used\n+ * <em>indirectly present<\/em>, and <em>associated<\/em> are used\n@@ -55,1 +55,1 @@\n- * interface, the type of the containing annotation is <i>AIC<\/i>.\n+ * interface, the type of the container annotation is <i>AIC<\/i>.\n@@ -81,1 +81,1 @@\n- * <i>C<\/i>, then if <i>AI<\/i> is repeatable annotation interface, an\n+ * <i>C<\/i>, then if <i>AI<\/i> is a repeatable annotation interface, an\n@@ -192,1 +192,2 @@\n-     * Returns annotations that are <em>associated<\/em> with this construct.\n+     * Returns annotations of the specified type that are <em>associated<\/em>\n+     * with this construct.\n@@ -194,2 +195,2 @@\n-     * If there are no annotations associated with this construct, the\n-     * return value is an array of length 0.\n+     * If there are no annotations of the specified type associated with this\n+     * construct, the return value is an array of length 0.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/AnnotatedConstruct.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-     RELEASE_9,\n+    RELEASE_9,\n@@ -473,1 +473,1 @@\n-     * is running on a platform version different than the latest\n+     * is running on a platform version different from the latest\n@@ -499,2 +499,1 @@\n-     * keywords, and the literals {@code \"true\"},\n-     * {@code \"false\"}, {@code \"null\"}.\n+     * keywords, boolean literals, and the null literal.\n@@ -594,1 +593,1 @@\n-     * or null literal in the latest source version.\n+     * or the null literal in the latest source version.\n@@ -599,2 +598,2 @@\n-     * @return {@code true} if {@code s} is a keyword, or boolean\n-     * literal, or null literal, {@code false} otherwise.\n+     * @return {@code true} if {@code s} is a keyword, boolean\n+     * literal, or the null literal, {@code false} otherwise.\n@@ -611,1 +610,1 @@\n-     * or null literal in the given source version.\n+     * or the null literal in the given source version.\n@@ -617,2 +616,2 @@\n-     * @return {@code true} if {@code s} is a keyword, or boolean\n-     * literal, or null literal, {@code false} otherwise.\n+     * @return {@code true} if {@code s} is a keyword, boolean\n+     * literal, or the null literal, {@code false} otherwise.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-     * This is returned in the form of a map that associates elements\n+     * These are returned in the form of a map that associates elements\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/AnnotationMirror.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * clause, among other restrictions; see JLS {@jls 9.6.1} for details\n+ * clause, among other restrictions; see JLS {@jls 9.6.1} for details.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ExecutableElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n- * backing construct. For example, multiple classes and interface can\n- * be declared in the same source file, including, but are not limited\n+ * backing construct. For example, multiple classes and interfaces can\n+ * be declared in the same source file, including, but not limited\n@@ -68,1 +68,1 @@\n- * NestingKind#isNested() nested class and interfaces} within it\n+ * NestingKind#isNested() nested classes and interfaces} within it\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/TypeElement.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * program inside a method body; for example there is no\n+ * program inside a method body; for example, there is no\n@@ -87,1 +87,1 @@\n- * operating on class files, it is helpful be able to operate on such\n+ * operating on class files, it is helpful to be able to operate on such\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-     *         where the provided ModuleSymbol is any\n+     *         where the provided ModuleElement is any\n@@ -63,1 +63,1 @@\n-     *         {@link #getAllModuleElements() all modules} for observable\n+     *         {@linkplain #getAllModuleElements() all modules} for observable\n@@ -146,1 +146,1 @@\n-     *         where the provided ModuleSymbol is any\n+     *         where the provided ModuleElement is any\n@@ -150,1 +150,1 @@\n-     *         {@link #getAllModuleElements() all modules} for observable\n+     *         {@linkplain #getAllModuleElements() all modules} for observable\n@@ -620,1 +620,1 @@\n-     * declared directly.  For a class the result also includes its\n+     * declared directly.  For a class, the result also includes its\n@@ -881,4 +881,4 @@\n-     * enclosing the accessor has kind {@link ElementKind#RECORD RECORD} if that is\n-     * the case, then all the record components on the accessor's enclosing element\n-     * are retrieved by invoking {@link ElementFilter#recordComponentsIn(Iterable)}.\n-     * If the accessor of at least one of the record components retrieved happen to\n+     * enclosing the accessor has kind {@link ElementKind#RECORD RECORD}, if that is\n+     * the case, then all the record components of the accessor's enclosing element\n+     * are isolated by invoking {@link ElementFilter#recordComponentsIn(Iterable)}.\n+     * If the accessor of at least one of the record components retrieved happens to\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * methods. One or more out of scope arguments will typically result\n+ * methods. One or more out-of-scope arguments will typically result\n@@ -168,1 +168,1 @@\n-     * Annotations on the direct super types are preserved.\n+     * Annotations on the direct supertypes are preserved.\n@@ -321,1 +321,1 @@\n-     * the number of type arguments must equal the\n+     * the number of type arguments must be equal to the\n@@ -357,1 +357,1 @@\n-     * or a wildcard type, any constitute types, such as the\n+     * or a wildcard type, any constituent types, such as the\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Types.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * should be interpreted as referring indirectly to the {@link #fileObject delegate file object}.\n+ * should be interpreted as referring indirectly to the {@linkplain #fileObject delegate file object}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/ForwardingFileObject.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * should be interpreted as referring indirectly to the {@link #fileManager delegate file manager}.\n+ * should be interpreted as referring indirectly to the {@linkplain #fileManager delegate file manager}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/ForwardingJavaFileManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * should be interpreted as referring indirectly to the {@link #fileObject delegate file object}.\n+ * should be interpreted as referring indirectly to the {@linkplain #fileObject delegate file object}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/ForwardingJavaFileObject.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * fully qualified class and interface names.  For convenience '.'\n+ * fully qualified class and interface names.  For convenience, '.'\n@@ -242,1 +242,1 @@\n-     * Compares two file objects and return true if they represent the\n+     * Compares two file objects and returns true if they represent the\n@@ -258,1 +258,1 @@\n-     * file manager it will consume any arguments to that option from\n+     * file manager, it will consume any arguments to that option from\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/JavaFileManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n- * files in the {@linkplain java.nio.file.FileSystems#getDefault() default file system.}\n+ * files in the {@linkplain java.nio.file.FileSystems#getDefault() default file system}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/StandardJavaFileManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,2 +93,2 @@\n-     * Use the {@link java.util.spi.ToolProvider system tool provider} or\n-     * {@link java.util.ServiceLoader service loader} mechanisms to\n+     * Use the {@linkplain java.util.spi.ToolProvider system tool provider} or\n+     * {@linkplain java.util.ServiceLoader service loader} mechanisms to\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/ToolProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}