{"files":[{"patch":"@@ -127,5 +127,0 @@\n-      auto stall_for_memory = [&]() {\n-        while (not_enough_memory()) {\n-          _producer_lock.wait(0);\n-        }\n-      };\n@@ -135,1 +130,4 @@\n-        stall_for_memory();\n+        ConsumerLocker cl(this);\n+        while (not_enough_memory()) {\n+          _consumer_lock.wait(0);\n+        }\n@@ -137,1 +135,4 @@\n-        stall_for_memory();\n+        ConsumerLocker cl(this);\n+        while (not_enough_memory()) {\n+          _consumer_lock.wait(0);\n+        }\n@@ -159,1 +160,1 @@\n-  \/\/ We're done, notify the reader.\n+  \/\/ We're done, notify a potentially awaiting consumer.\n@@ -166,1 +167,1 @@\n-  ProducerLocker wl(this);\n+  ProducerLocker pl(this);\n@@ -171,1 +172,1 @@\n-  ProducerLocker wl(this);\n+  ProducerLocker pl(this);\n@@ -180,1 +181,1 @@\n-  ConsumerLocker rl(this);\n+  ConsumerLocker cl(this);\n@@ -204,1 +205,1 @@\n-  _producer_lock.notify();\n+  _consumer_lock.notify();\n@@ -227,1 +228,1 @@\n-    ConsumerLocker rl(this);\n+    ConsumerLocker cl(this);\n","filename":"src\/hotspot\/share\/logging\/circularStringBuffer.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -121,0 +121,1 @@\n+  \/\/ The consumer lock's condition variable is used for communicating when messages are produced and consumed.\n","filename":"src\/hotspot\/share\/logging\/circularStringBuffer.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}