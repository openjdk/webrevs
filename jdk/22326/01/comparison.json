{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-\/*package*\/ @SuppressWarnings(\"removal\") class HttpConnectSocketImpl extends DelegatingSocketImpl {\n+\/*package*\/ class HttpConnectSocketImpl extends DelegatingSocketImpl {\n@@ -62,0 +62,1 @@\n+            httpField.setAccessible(true);\n@@ -65,9 +66,1 @@\n-\n-            java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<>() {\n-                    public Void run() {\n-                        httpField.setAccessible(true);\n-                        serverSocketField.setAccessible(true);\n-                        return null;\n-                }\n-            });\n+            serverSocketField.setAccessible(true);\n@@ -110,4 +103,0 @@\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null)\n-            security.checkConnect(destHost, destPort);\n-\n@@ -119,1 +108,1 @@\n-        Socket httpSocket = privilegedDoTunnel(urlString, timeout);\n+        Socket httpSocket = doTunnel(urlString, timeout);\n@@ -167,16 +156,0 @@\n-    private Socket privilegedDoTunnel(final String urlString,\n-                                      final int timeout)\n-        throws IOException\n-    {\n-        try {\n-            return java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedExceptionAction<>() {\n-                    public Socket run() throws IOException {\n-                        return doTunnel(urlString, timeout);\n-                }\n-            });\n-        } catch (java.security.PrivilegedActionException pae) {\n-            throw (IOException) pae.getException();\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/net\/HttpConnectSocketImpl.java","additions":5,"deletions":32,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -371,6 +371,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sec = System.getSecurityManager();\n-        if (sec != null) {\n-            \/\/ seems to be the best check here...\n-            sec.checkSetFactory();\n-        }\n@@ -455,7 +449,0 @@\n-                if (method.equals(\"TRACE\")) {\n-                    @SuppressWarnings(\"removal\")\n-                    SecurityManager s = System.getSecurityManager();\n-                    if (s != null) {\n-                        s.checkPermission(new NetPermission(\"allowHttpTrace\"));\n-                    }\n-                }\n","filename":"src\/java.base\/share\/classes\/java\/net\/HttpURLConnection.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -229,1 +229,0 @@\n-\n@@ -303,1 +302,0 @@\n-\n@@ -345,1 +343,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/HttpsURLConnection.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-    public void close() throws SecurityException {\n+    public void close() {\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/HttpURLConWithProxy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}