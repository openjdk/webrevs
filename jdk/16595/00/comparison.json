{"files":[{"patch":"@@ -584,1 +584,0 @@\n-    print_inlining(callee_method, caller_bci, caller_method, false \/* !success *\/);\n@@ -591,1 +590,0 @@\n-    print_inlining(callee_method, caller_bci, caller_method, false \/* !success *\/);\n@@ -603,1 +601,0 @@\n-    print_inlining(callee_method, caller_bci, caller_method, true \/* success *\/);\n@@ -615,1 +612,0 @@\n-    print_inlining(callee_method, caller_bci, caller_method, false \/* !success *\/ );\n","filename":"src\/hotspot\/share\/opto\/bytecodeInfo.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,1 +208,2 @@\n-            return CallGenerator::for_string_late_inline(callee, cg);\n+            cg = CallGenerator::for_string_late_inline(callee, cg);\n+            ilt->set_msg(\"late inline (string method)\");\n@@ -210,1 +211,2 @@\n-            return CallGenerator::for_boxing_late_inline(callee, cg);\n+            cg = CallGenerator::for_boxing_late_inline(callee, cg);\n+            ilt->set_msg(\"late inline (boxing method)\");\n@@ -212,1 +214,2 @@\n-            return CallGenerator::for_vector_reboxing_late_inline(callee, cg);\n+            cg = CallGenerator::for_vector_reboxing_late_inline(callee, cg);\n+            ilt->set_msg(\"late inline (vector reboxing method)\");\n@@ -214,3 +217,2 @@\n-            return CallGenerator::for_late_inline(callee, cg);\n-          } else {\n-            return cg;\n+            cg = CallGenerator::for_late_inline(callee, cg);\n+            ilt->set_msg(\"late inline (AlwaysIncrementalInline)\");\n@@ -218,0 +220,2 @@\n+          ilt->print_inlining(callee, jvms->bci(), jvms->method(), true);\n+          return cg;\n@@ -219,0 +223,2 @@\n+      } else {\n+        ilt->print_inlining(callee, jvms->bci(), jvms->method(), false);\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -90,2 +90,0 @@\n-  void        print_inlining(ciMethod* callee_method, int caller_bci,\n-                             ciMethod* caller_method, bool success) const;\n@@ -97,1 +95,0 @@\n-  void        set_msg(const char* msg)  { _msg = msg; }\n@@ -117,0 +114,1 @@\n+  void        set_msg(const char* msg)  { _msg = msg; }\n@@ -137,0 +135,3 @@\n+  void        print_inlining(ciMethod* callee_method, int caller_bci,\n+                             ciMethod* caller_method, bool success) const;\n+\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}