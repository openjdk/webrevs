{"files":[{"patch":"@@ -100,1 +100,2 @@\n-    private final ClassDesc lambdaClassDesc;         \/\/ Type descriptor for the generated class \"X$$Lambda$1\"\n+    private final ConstantPoolBuilder pool = ConstantPoolBuilder.of();\n+    private final ClassEntry lambdaClassEntry;       \/\/ Class entry for the generated class \"X$$Lambda$1\"\n@@ -160,1 +161,0 @@\n-        constructorTypeDesc = methodDesc(constructorType);\n@@ -162,1 +162,1 @@\n-        lambdaClassDesc = ClassDesc.ofInternalName(lambdaClassName);\n+        lambdaClassEntry = pool.classEntry(ReferenceClassDescImpl.ofValidated(ConstantUtils.concat(\"L\", lambdaClassName, \";\")));\n@@ -186,0 +186,1 @@\n+        constructorTypeDesc = MethodTypeDescImpl.ofValidated(CD_void, argDescs);\n@@ -194,1 +195,1 @@\n-        return name.replace('.', '\/') + \"$$Lambda\";\n+        return name.replace('.', '\/').concat(\"$$Lambda\");\n@@ -224,1 +225,1 @@\n-                    Object inst = mh.asType(methodType(Object.class)).invokeExact();\n+                    Object inst = mh.invokeBasic();\n@@ -306,1 +307,1 @@\n-        final byte[] classBytes = ClassFile.of().build(lambdaClassDesc, new Consumer<ClassBuilder>() {\n+        final byte[] classBytes = ClassFile.of().build(lambdaClassEntry, pool, new Consumer<ClassBuilder>() {\n@@ -372,1 +373,1 @@\n-                cob.new_(lambdaClassDesc)\n+                cob.new_(lambdaClassEntry)\n@@ -374,2 +375,2 @@\n-                   .invokespecial(lambdaClassDesc, INIT_NAME, constructorTypeDesc)\n-                   .putstatic(lambdaClassDesc, LAMBDA_INSTANCE_FIELD, lambdaTypeDescriptor)\n+                   .invokespecial(pool.methodRefEntry(lambdaClassEntry, pool.nameAndTypeEntry(INIT_NAME, constructorTypeDesc)))\n+                   .putstatic(pool.fieldRefEntry(lambdaClassEntry, pool.nameAndTypeEntry(LAMBDA_INSTANCE_FIELD, lambdaTypeDescriptor)))\n@@ -397,1 +398,1 @@\n-                            cob.putfield(lambdaClassDesc, argNames[i], argDescs[i]);\n+                            cob.putfield(pool.fieldRefEntry(lambdaClassEntry, pool.nameAndTypeEntry(argNames[i], argDescs[i])));\n@@ -449,1 +450,1 @@\n-                               .getfield(lambdaClassDesc, argNames[i], argDescs[i]);\n+                               .getfield(pool.fieldRefEntry(lambdaClassEntry, pool.nameAndTypeEntry(argNames[i], argDescs[i])));\n@@ -508,1 +509,1 @@\n-                       .getfield(lambdaClassDesc, argNames[i], argDescs[i]);\n+                       .getfield(pool.fieldRefEntry(lambdaClassEntry, pool.nameAndTypeEntry(argNames[i], argDescs[i])));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import java.lang.classfile.constantpool.ClassEntry;\n+import java.lang.classfile.constantpool.ConstantPoolBuilder;\n@@ -96,1 +98,2 @@\n-    private final ClassDesc classDesc;\n+    private final ConstantPoolBuilder pool = ConstantPoolBuilder.of();\n+    private final ClassEntry classEntry;\n@@ -134,1 +137,1 @@\n-        this.classDesc = ReferenceClassDescImpl.ofValidated(concat(\"L\", className, \";\"));\n+        this.classEntry = pool.classEntry(ReferenceClassDescImpl.ofValidated(concat(\"L\", className, \";\")));\n@@ -215,1 +218,1 @@\n-        var field = cfb.constantPool().fieldRefEntry(classDesc, name, desc);\n+        var field = pool.fieldRefEntry(classEntry, pool.nameAndTypeEntry(name, desc));\n@@ -246,1 +249,1 @@\n-            return ClassFile.of().build(classDesc, new Consumer<>() {\n+            return ClassFile.of().build(classEntry, pool, new Consumer<>() {\n@@ -296,1 +299,1 @@\n-    static void clinit(ClassBuilder clb, ClassDesc classDesc, List<ClassData> classData) {\n+    static void clinit(ClassBuilder clb, ClassEntry classEntry, List<ClassData> classData) {\n@@ -303,1 +306,1 @@\n-                cob.loadConstant(classDesc)\n+                cob.ldc(classEntry)\n@@ -537,1 +540,1 @@\n-                clinit(clb, classDesc, classData);\n+                clinit(clb, classEntry, classData);\n@@ -1554,1 +1557,1 @@\n-                clinit(clb, classDesc, classData);\n+                clinit(clb, classEntry, classData);\n@@ -1630,1 +1633,1 @@\n-                clinit(clb, classDesc, classData);\n+                clinit(clb, classEntry, classData);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}