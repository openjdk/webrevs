{"files":[{"patch":"@@ -1161,1 +1161,1 @@\n-    heap->clear_cancelled_gc(true \/* clear oom handler *\/);\n+    heap->clear_cancelled_gc();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  heap->clear_cancelled_gc(true \/* clear oom handler *\/);\n+  heap->clear_cancelled_gc();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1171,1 +1171,1 @@\n-    heap->clear_cancelled_gc(true \/* clear oom handler *\/);\n+    heap->clear_cancelled_gc();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    request.cause = _heap->cancelled_cause();\n+    request.cause = _heap->clear_cancellation(GCCause::_shenandoah_concurrent_gc);\n@@ -116,1 +116,0 @@\n-      _heap->clear_cancelled_gc(false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -459,3 +459,6 @@\n-  \/\/ Clears the cancellation cause and optionally resets the oom handler (cancelling an\n-  \/\/ old mark does _not_ touch the oom handler).\n-  inline void clear_cancelled_gc(bool clear_oom_handler = true);\n+  \/\/ Clears the cancellation cause and resets the oom handler\n+  inline void clear_cancelled_gc();\n+\n+  \/\/ Clears the cancellation cause iff the current cancellation reason equals the given\n+  \/\/ expected cancellation cause. Does not reset the oom handler.\n+  inline GCCause::Cause clear_cancellation(GCCause::Cause expected);\n@@ -478,0 +481,2 @@\n+  inline void reset_cancellation_time();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"gc\/shared\/gcCause.hpp\"\n@@ -271,1 +272,1 @@\n-inline void ShenandoahHeap::clear_cancelled_gc(bool clear_oom_handler) {\n+inline void ShenandoahHeap::clear_cancelled_gc() {\n@@ -273,0 +274,13 @@\n+  reset_cancellation_time();\n+  _oom_evac_handler.clear();\n+}\n+\n+inline GCCause::Cause ShenandoahHeap::clear_cancellation(const GCCause::Cause expected) {\n+  const GCCause::Cause cancellation_cause = _cancelled_gc.cmpxchg(GCCause::_no_gc, expected);\n+  if (cancellation_cause == expected) {\n+    reset_cancellation_time();\n+  }\n+  return cancellation_cause;\n+}\n+\n+inline void ShenandoahHeap::reset_cancellation_time() {\n@@ -277,4 +291,0 @@\n-\n-  if (clear_oom_handler) {\n-    _oom_evac_handler.clear();\n-  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}