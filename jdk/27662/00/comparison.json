{"files":[{"patch":"@@ -113,1 +113,1 @@\n-    request.cause = _heap->cancelled_cause();\n+    request.cause = _heap->clear_cancellation(GCCause::_shenandoah_concurrent_gc);\n@@ -116,1 +116,0 @@\n-      _heap->clear_cancelled_gc(false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -463,0 +463,4 @@\n+  \/\/ Clears the cancellation cause iff the current cancellation reason equals the given\n+  \/\/ expected cancellation cause. Does not reset the oom handler.\n+  inline GCCause::Cause clear_cancellation(GCCause::Cause expected);\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"gc\/shared\/gcCause.hpp\"\n@@ -283,0 +284,4 @@\n+inline GCCause::Cause ShenandoahHeap::clear_cancellation(GCCause::Cause expected) {\n+  return _cancelled_gc.cmpxchg(GCCause::_no_gc, expected);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}