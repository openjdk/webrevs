{"files":[{"patch":"@@ -346,1 +346,1 @@\n-  guarantee(CompressedKlassPointers::is_in_encoding_range(klass), \"klass cannot be compressed: %s\", klass->external_name());\n+  guarantee(CompressedKlassPointers::is_encodable(klass), \"klass cannot be compressed: %s\", klass->external_name());\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n- * Marker interface for hotspot specific constants.\n+ * A value in a space managed by Hotspot (e.g. heap or metaspace).\n+ * Some of these values can be referenced with a compressed pointer\n+ * instead of a full word-sized pointer.\n@@ -45,2 +47,1 @@\n-     * @throws IllegalArgumentException if this is a compressed constant\n-     *         or this constant is not compressible\n+     * @throws IllegalArgumentException if this constant is not compressible\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstant.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -91,0 +91,3 @@\n+        if (compressed) {\n+            return false;\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotMetaspaceConstantImpl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return true;\n+        return !compressed;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotObjectConstantImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}