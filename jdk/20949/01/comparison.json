{"files":[{"patch":"@@ -346,0 +346,1 @@\n+  guarantee(CompressedKlassPointers::is_encodable(klass), \"klass cannot be compressed: %s\", klass->external_name());\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -54,1 +54,3 @@\n-        assert !compressed;\n+        if (compressed) {\n+            throw new IllegalArgumentException(\"already compressed: \" + this);\n+        }\n@@ -60,1 +62,3 @@\n-        assert compressed;\n+        if (!compressed) {\n+            throw new IllegalArgumentException(\"not compressed: \" + this);\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/DirectHotSpotObjectConstantImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,0 +54,5 @@\n+    @Override\n+    public boolean isCompressible() {\n+        return false;\n+    }\n+\n@@ -56,1 +61,1 @@\n-        throw new IllegalArgumentException();\n+        throw new IllegalArgumentException(\"not compressible\");\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotCompressedNullConstant.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n- * Marker interface for hotspot specific constants.\n+ * A value in a space managed by Hotspot (e.g. heap or metaspace).\n+ * Some of these values can be referenced with a compressed pointer\n+ * instead of a full word-sized pointer.\n@@ -32,0 +34,3 @@\n+    \/**\n+     * Determines if this constant is compressed.\n+     *\/\n@@ -34,0 +39,10 @@\n+    \/**\n+     * Determines if this constant is compressible.\n+     *\/\n+    boolean isCompressible();\n+\n+    \/**\n+     * Gets a compressed version of this uncompressed constant.\n+     *\n+     * @throws IllegalArgumentException if this constant is not compressible\n+     *\/\n@@ -36,0 +51,6 @@\n+    \/**\n+     * Gets an uncompressed version of this compressed constant.\n+     *\n+     * @throws IllegalArgumentException if this is an uncompressed constant\n+     *         or this constant is not compressible\n+     *\/\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstant.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -46,0 +46,3 @@\n+        if (compressed && !isCompressible()) {\n+            throw new IllegalArgumentException(\"constant cannot be compressed: \" + metaspaceObject);\n+        }\n@@ -86,0 +89,13 @@\n+    @Override\n+    public boolean isCompressible() {\n+        if (compressed) {\n+            return false;\n+        }\n+        if (metaspaceObject instanceof HotSpotResolvedJavaType t && !t.isArray()) {\n+            \/\/ As of JDK-8338526, interface and abstract types are not stored\n+            \/\/ in compressible metaspace.\n+            return !t.isInterface() && !t.isAbstract();\n+        }\n+        return true;\n+    }\n+\n@@ -88,1 +104,3 @@\n-        assert !isCompressed();\n+        if (compressed) {\n+            throw new IllegalArgumentException(\"already compressed: \" + this);\n+        }\n@@ -96,1 +114,3 @@\n-        assert isCompressed();\n+        if (!compressed) {\n+            throw new IllegalArgumentException(\"not compressed: \" + this);\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotMetaspaceConstantImpl.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -55,0 +55,5 @@\n+    @Override\n+    public boolean isCompressible() {\n+        return !compressed;\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotObjectConstantImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -167,1 +167,3 @@\n-        assert !compressed;\n+        if (compressed) {\n+            throw new IllegalArgumentException(\"already compressed: \" + this);\n+        }\n@@ -173,1 +175,3 @@\n-        assert compressed;\n+        if (!compressed) {\n+            throw new IllegalArgumentException(\"not compressed: \" + this);\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/IndirectHotSpotObjectConstantImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}