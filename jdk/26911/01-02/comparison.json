{"files":[{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2024, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.jdk.internal.util;\n+\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.*;\n+\n+import jdk.internal.util.DecimalDigits;\n+\n+\/*\n+ * @test\n+ * @bug 0000000\n+ * @summary Test DecimalDigits.appendPair method with LATIN1 and UTF16 encoding\n+ * @modules java.base\/jdk.internal.util\n+ * @run testng test.jdk.internal.util.DecimalDigitsTest\n+ *\/\n+public class DecimalDigitsTest {\n+\n+    @Test\n+    public void testAppendPair() {\n+        \/\/ Test values from 0 to 99\n+        for (int i = 0; i <= 99; i++) {\n+            StringBuilder sb = new StringBuilder();\n+            DecimalDigits.appendPair(sb, i);\n+            String expected = String.format(\"%02d\", i);\n+            assertEquals(sb.toString(), expected, \"Failed for value: \" + i);\n+        }\n+    }\n+\n+    @Test\n+    public void testAppendPairWithLatin1Encoding() {\n+        \/\/ Test appendPair with LATIN1 encoding\n+        StringBuilder sb = new StringBuilder();\n+\n+        \/\/ Force the StringBuilder to use LATIN1 encoding by ensuring all characters are LATIN1\n+        \/\/ This is the default behavior when all characters fit in LATIN1\n+        for (int i = 0; i <= 99; i++) {\n+            sb.setLength(0); \/\/ Clear the StringBuilder\n+            DecimalDigits.appendPair(sb, i);\n+            String expected = String.format(\"%02d\", i);\n+            assertEquals(sb.toString(), expected, \"Failed for value: \" + i + \" with LATIN1 encoding\");\n+        }\n+    }\n+\n+    @Test\n+    public void testAppendPairWithUTF16Encoding() {\n+        \/\/ Test appendPair with UTF16 encoding\n+        StringBuilder sb = new StringBuilder();\n+\n+        \/\/ Force the StringBuilder to use UTF16 encoding by adding a non-LATIN1 character first\n+        sb.append('â‚¬'); \/\/ Euro sign is not in LATIN1\n+\n+        for (int i = 0; i <= 99; i++) {\n+            int currentLength = sb.length();\n+            DecimalDigits.appendPair(sb, i);\n+            String expected = String.format(\"%02d\", i);\n+\n+            \/\/ Check that the pair was appended correctly\n+            String appended = sb.substring(currentLength);\n+            assertEquals(appended, expected, \"Failed for value: \" + i + \" with UTF16 encoding\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/jdk\/internal\/util\/DecimalDigitsTest.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"}]}