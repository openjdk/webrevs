{"files":[{"patch":"@@ -89,0 +89,2 @@\n+import jdk.internal.util.DecimalDigits;\n+\n@@ -751,4 +753,6 @@\n-        return new StringBuilder(10).append(\"--\")\n-            .append(month < 10 ? \"0\" : \"\").append(month)\n-            .append(day < 10 ? \"-0\" : \"-\").append(day)\n-            .toString();\n+        StringBuilder buf = new StringBuilder(10);\n+        buf.append(\"--\");\n+        DecimalDigits.appendPair(buf, month);\n+        buf.append('-');\n+        DecimalDigits.appendPair(buf, day);\n+        return buf.toString();\n","filename":"src\/java.base\/share\/classes\/java\/time\/MonthDay.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -102,0 +102,2 @@\n+import jdk.internal.util.DecimalDigits;\n+\n@@ -1209,3 +1211,3 @@\n-        return buf.append(month < 10 ? \"-0\" : \"-\")\n-            .append(month)\n-            .toString();\n+        buf.append('-');\n+        DecimalDigits.appendPair(buf, month);\n+        return buf.toString();\n","filename":"src\/java.base\/share\/classes\/java\/time\/YearMonth.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -468,3 +469,4 @@\n-            buf.append(totalSeconds < 0 ? \"-\" : \"+\")\n-                .append(absHours < 10 ? \"0\" : \"\").append(absHours)\n-                .append(absMinutes < 10 ? \":0\" : \":\").append(absMinutes);\n+            buf.append(totalSeconds < 0 ? '-' : '+');\n+            DecimalDigits.appendPair(buf, absHours);\n+            buf.append(':');\n+            DecimalDigits.appendPair(buf, absMinutes);\n@@ -473,1 +475,2 @@\n-                buf.append(absSeconds < 10 ? \":0\" : \":\").append(absSeconds);\n+                buf.append(':');\n+                DecimalDigits.appendPair(buf, absSeconds);\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -77,0 +77,2 @@\n+import jdk.internal.util.DecimalDigits;\n+\n@@ -429,4 +431,6 @@\n-        \/\/ getLong() reduces chances of exceptions in toString()\n-        long yoe = getLong(YEAR_OF_ERA);\n-        long moy = getLong(MONTH_OF_YEAR);\n-        long dom = getLong(DAY_OF_MONTH);\n+        \/\/ Using get() instead of getLong() for performance reasons,\n+        \/\/ as the values of YEAR_OF_ERA, MONTH_OF_YEAR, and DAY_OF_MONTH\n+        \/\/ are guaranteed to be within the int range for all chronologies.\n+        int yoe = get(YEAR_OF_ERA);\n+        int moy = get(MONTH_OF_YEAR);\n+        int dom = get(DAY_OF_MONTH);\n@@ -439,2 +443,4 @@\n-                .append(moy < 10 ? \"-0\" : \"-\").append(moy)\n-                .append(dom < 10 ? \"-0\" : \"-\").append(dom);\n+                .append('-');\n+        DecimalDigits.appendPair(buf, moy);\n+        buf.append('-');\n+        DecimalDigits.appendPair(buf, dom);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDateImpl.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}