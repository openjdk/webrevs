{"files":[{"patch":"@@ -224,1 +224,1 @@\n-        DWORD error;\n+     \/\/ DWORD error;\n@@ -227,1 +227,2 @@\n-            result = FreeLibrary(theAccessBridgeInstance);\n+            \/* result = *\/ FreeLibrary(theAccessBridgeInstance);\n+            \/*\n@@ -231,0 +232,1 @@\n+            *\/\n","filename":"src\/jdk.accessibility\/windows\/native\/bridge\/AccessBridgeCalls.c","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-    DWORD retval = -1;\n+ \/\/ DWORD retval = -1;\n@@ -334,1 +334,1 @@\n-        bool freeData = false;\n+     \/\/ bool freeData = false;\n@@ -367,1 +367,1 @@\n-    DWORD retval = -1;\n+ \/\/ DWORD retval = -1;\n@@ -379,1 +379,1 @@\n-        bool freeData = false;\n+     \/\/ bool freeData = false;\n","filename":"src\/jdk.accessibility\/windows\/native\/jabswitch\/jabswitch.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -834,1 +834,1 @@\n-    DWORD lastError = 0;\n+ \/\/ DWORD lastError = 0;\n@@ -979,0 +979,1 @@\n+                \/*\n@@ -982,0 +983,1 @@\n+                *\/\n@@ -999,0 +1001,1 @@\n+                \/*\n@@ -1002,0 +1005,1 @@\n+                *\/\n@@ -1018,0 +1022,1 @@\n+                \/*\n@@ -1021,0 +1026,1 @@\n+                *\/\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-        HWND hwndEdit;    \/\/ handle of tree-view control\n+     \/\/ HWND hwndEdit;    \/\/ handle of tree-view control\n@@ -260,1 +260,2 @@\n-        hwndEdit = CreateWindow(\"Edit\",\n+     \/\/ hwndEdit =\n+                   CreateWindow(\"Edit\",\n@@ -560,1 +561,1 @@\n-        HTREEITEM treeNodeItem = TreeView_InsertItem(treeWnd, &tvis);\n+        \/* HTREEITEM treeNodeItem = *\/ TreeView_InsertItem(treeWnd, &tvis);\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccesswalker\/jaccesswalker.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-    DWORD rc = 0;\n+ \/\/ DWORD rc = 0;\n@@ -175,1 +175,2 @@\n-                    LRESULT ret = SendMessage((HWND)ABLongToHandle(event_struct->winAccessBridgeWindow), WM_COPYDATA,\n+                 \/\/ LRESULT ret =\n+                                  SendMessage((HWND)ABLongToHandle(event_struct->winAccessBridgeWindow), WM_COPYDATA,\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeATInstance.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1219,1 +1219,1 @@\n-    jsize length = 0;\n+ \/\/ jsize length = 0;\n@@ -1233,1 +1233,1 @@\n-            length = jniEnv->GetStringLength(js);\n+         \/\/ length = jniEnv->GetStringLength(js);\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeJavaEntryPoints.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-                LRESULT returnVal = theJavaAccessBridge->receiveMemoryPackage((HWND) wParam, (long) lParam);\n+             \/* LRESULT returnVal = *\/ theJavaAccessBridge->receiveMemoryPackage((HWND) wParam, (long) lParam);\n@@ -2719,1 +2719,1 @@\n-    jobject component = (jobject)0;\n+ \/\/ jobject component = (jobject)0;\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/JavaAccessBridge.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-const char fireEventDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s(%p, %p); vmID = %X\\r\\n\";\n+DEBUG_CODE(const char fireEventDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s(%p, %p); vmID = %X\\r\\n\");\n@@ -191,1 +191,1 @@\n-const char fireEventDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s(%016I64X, %016I64X); vmID = %X\\r\\n\";\n+DEBUG_CODE(const char fireEventDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s(%016I64X, %016I64X); vmID = %X\\r\\n\");\n@@ -244,1 +244,1 @@\n-const char firePropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a no-param property change (%p, %p):\\r\\n\";\n+DEBUG_CODE(const char firePropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a no-param property change (%p, %p):\\r\\n\");\n@@ -246,1 +246,1 @@\n-const char firePropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a no-param property change (%016I64X, %016I64X):\\r\\n\";\n+DEBUG_CODE(const char firePropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a no-param property change (%016I64X, %016I64X):\\r\\n\");\n@@ -272,1 +272,1 @@\n-const char fireStringPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a string property change (%p, %p, %ls, %ls):\\r\\n\";\n+DEBUG_CODE(const char fireStringPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a string property change (%p, %p, %ls, %ls):\\r\\n\");\n@@ -274,1 +274,1 @@\n-const char fireStringPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a string property change (%016I64X, %016I64X, %ls, %ls):\\r\\n\";\n+DEBUG_CODE(const char fireStringPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing a string property change (%016I64X, %016I64X, %ls, %ls):\\r\\n\");\n@@ -301,1 +301,1 @@\n-const char fireIntPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an int property change (%p, %p, %d, %d):\\r\\n\";\n+DEBUG_CODE(const char fireIntPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an int property change (%p, %p, %d, %d):\\r\\n\");\n@@ -303,1 +303,1 @@\n-const char fireIntPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an int property change (%016I64X, %016I64X, %d, %d):\\r\\n\";\n+DEBUG_CODE(const char fireIntPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an int property change (%016I64X, %016I64X, %d, %d):\\r\\n\");\n@@ -330,1 +330,1 @@\n-const char fireACPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an AC property change (%p, %p, %p, %p):\\r\\n\";\n+DEBUG_CODE(const char fireACPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an AC property change (%p, %p, %p, %p):\\r\\n\");\n@@ -332,1 +332,1 @@\n-const char fireACPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an AC property change (%016I64X, %016I64X, %016I64X, %016I64X):\\r\\n\";\n+DEBUG_CODE(const char fireACPropertyChangeDebugString[] = \"[INFO]: In AccessBridgeEventHandler::%s, Firing an AC property change (%016I64X, %016I64X, %016I64X, %016I64X):\\r\\n\");\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeEventHandler.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -271,1 +271,1 @@\n-                DEBUG_CODE(GetAccessibleTextItemsPackage *pkg = (GetAccessibleTextItemsPackage *) (buffer + sizeof(PackageType)));\n+             \/\/ DEBUG_CODE(GetAccessibleTextItemsPackage *pkg = (GetAccessibleTextItemsPackage *) (buffer + sizeof(PackageType)));\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeJavaVMInstance.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}