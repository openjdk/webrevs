{"files":[{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.arraycopy;\n+import java.util.Random;\n+\n+\/**\n+ * @test\n+ * @bug 8310159\n+ * @summary Test large arrayCopy.\n+ *\n+ * @run main\/othervm\/timeout=600 -XX:-TieredCompilation -Xbatch compiler.arraycopy.TestArrayCopyDisjointLarge\n+ *\n+ *\/\n+\n+public class TestArrayCopyDisjointLarge {\n+\n+    public static final int ARRLEN = 4194304;\n+    public static int fromPos, toPos;\n+    public static byte[] fromByteArr, toByteArr;\n+\n+    public static void setup() {\n+        fromPos = 0;\n+        toPos = 0;\n+\n+        fromByteArr = new byte[ARRLEN];\n+        toByteArr = new byte[ARRLEN];\n+        for (int i = 0 ; i < ARRLEN ; i++) {\n+            fromByteArr[i] = (byte)i;\n+        }\n+    }\n+\n+    public static void validate(String msg, byte[] toByteArr, int length, int fromPos, int toPos) {\n+        for(int i = 0 ; i < length; i++) {\n+            if (fromByteArr[i + fromPos] != toByteArr[i + toPos]) {\n+                System.out.println(msg + \"[\" + toByteArr.getClass() + \"] Result mismtach at i = \" + i\n+                                + \" expected = \" + fromByteArr[i + fromPos]\n+                                + \" actual   = \" + toByteArr[i + toPos]\n+                                + \" fromPos = \" + fromPos\n+                                + \" toPos = \" + toPos);\n+                throw new Error(\"Fail\");\n+            }\n+        }\n+    }\n+\n+    public static void testByte(int length, int fromPos, int toPos) {\n+        System.arraycopy(fromByteArr, fromPos, toByteArr, toPos, length);\n+        validate(\" Test ByteArr \", toByteArr, length, fromPos, toPos);\n+    }\n+\n+    public static void main(String [] args) {\n+        int base_size = 2621440;\n+        int [] lengths = {base_size - 1, base_size, base_size + 1, base_size + 63, base_size + 64,\n+                                base_size + 65, base_size + 255, base_size + 256, base_size + 257};\n+        setup();\n+\n+        for (int i = 0 ; i < 10 ; i++ ) {\n+            testByte(lengths[i % lengths.length], 0, 0);\n+            testByte(lengths[i % lengths.length], 0, 9);\n+            testByte(lengths[i % lengths.length], 9, 0);\n+            testByte(lengths[i % lengths.length], 9, 9);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyDisjointLarge.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"}]}