{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,9 @@\n+\/**\n+ * An enum of the defined TLS handshake message types.\n+ * <p>\n+ * These are defined in the IANA TLS Parameters.\n+ * https:\/\/www.iana.org\/assignments\/tls-parameters\/tls-parameters.xhtml#tls-parameters-7\n+ * <p>\n+ * Most of these come from the SLS\/TLS specs in RFCs 6601\/2246\/4346\/8446 and\n+ * friends.  Others are called out where defined.\n+ *\/\n@@ -84,0 +93,4 @@\n+    \/\/ Even though there is a TLS HandshakeType entry for\n+    \/\/ hello_retry_request_RESERVED (0x06), the TLSv1.3 (RFC 8446)\n+    \/\/ HelloRetryRequest is actually a ServerHello with a specific Random value\n+    \/\/ (Section 4.1.3).\n@@ -133,0 +146,1 @@\n+\n@@ -150,0 +164,4 @@\n+    \/\/ RFC 9147 - DTLS 1.3\n+    REQUEST_CONNECTION_ID       ((byte)0x09, \"request_connection_id\"),\n+    NEW_CONNECTION_ID           ((byte)0x0a, \"new_connection_id\"),\n+\n@@ -288,0 +306,3 @@\n+    \/\/ RFC 9261 - Exported Authenticators\n+    CLIENT_CERTIFICATE_REQUEST  ((byte)0x11, \"client_certificate_request\"),\n+\n@@ -350,0 +371,7 @@\n+\n+    \/\/ RFC 8879 - TLS Certificate Compression\n+    COMPRESSED_CERTIFICATE      ((byte)0x19, \"compressed_certificate\"),\n+\n+    \/\/ RFC 8870 - Encrypted Key Transport for DTLS\/Secure RTP\n+    EKT_KEY                     ((byte)0x19, \"ekt_key\"),\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLHandshake.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"}]}