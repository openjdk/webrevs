{"files":[{"patch":"@@ -86,0 +86,1 @@\n+    \/\/ The set of common CPU registers available on all x64 platforms.\n@@ -88,3 +89,1 @@\n-        r8, r9, r10, r11, r12, r13, r14, r15,\n-        r16, r17, r18, r19, r20, r21, r22, r23,\n-        r24, r25, r26, r27, r28, r29, r30, r31\n+        r8, r9, r10, r11, r12, r13, r14, r15\n@@ -165,2 +164,0 @@\n-        r16,  r17,  r18,   r19,   r20,   r21,   r22,   r23,\n-        r24,  r25,  r26,   r27,   r28,   r29,   r30,   r31,\n@@ -182,0 +179,2 @@\n+        r16,  r17,  r18,   r19,   r20,   r21,   r22,   r23,\n+        r24,  r25,  r26,   r27,   r28,   r29,   r30,   r31,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.vm.ci.common.JVMCIError;\n@@ -84,0 +85,7 @@\n+        \/\/ registers is expected to mention all registers in order of their encoding.\n+        for (int i = 0; i < registers.size(); ++i) {\n+            if (registers.get(i).number != i) {\n+                Register reg = registers.get(i);\n+                throw new JVMCIError(\"%s: %d != %d\", reg, reg.number, i);\n+            }\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/Architecture.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}