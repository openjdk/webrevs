{"files":[{"patch":"@@ -419,2 +419,5 @@\n-  bool is_normal_parse() const  { return _entry_bci == InvocationEntryBci; }\n-  bool is_osr_parse() const     { return _entry_bci != InvocationEntryBci; }\n+  bool is_osr_parse() const {\n+    assert(_entry_bci != UnknownBci, \"uninitialized _entry_bci\");\n+    return _entry_bci != InvocationEntryBci;\n+  }\n+  bool is_normal_parse() const  { return !is_osr_parse(); }\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -404,2 +404,0 @@\n-  _entry_bci = InvocationEntryBci;\n-  _tf = nullptr;\n@@ -410,2 +408,3 @@\n-  debug_only(_block_count = -1);\n-  debug_only(_blocks = (Block*)-1);\n+  DEBUG_ONLY(_entry_bci = UnknownBci);\n+  DEBUG_ONLY(_block_count = -1);\n+  DEBUG_ONLY(_blocks = (Block*)-1);\n@@ -415,2 +414,1 @@\n-    JVMState* ilt_caller = is_osr_parse() ? caller->caller() : caller;\n-    InlineTree::find_subtree_from_root(C->ilt(), ilt_caller, parse_method);\n+    InlineTree::find_subtree_from_root(C->ilt(), caller, parse_method);\n@@ -430,1 +428,0 @@\n-  _tf = TypeFunc::make(method());\n@@ -432,11 +429,0 @@\n-  _flow = method()->get_flow_analysis();\n-  if (_flow->failing()) {\n-    assert(false, \"type flow failed during parsing\");\n-    C->record_method_not_compilable(_flow->failure_reason());\n-  }\n-\n-#ifndef PRODUCT\n-  if (_flow->has_irreducible_entry()) {\n-    C->set_parsed_irreducible_loop(true);\n-  }\n-#endif\n@@ -510,0 +496,1 @@\n+    _tf = C->tf();     \/\/ the OSR entry type is different\n@@ -512,3 +499,9 @@\n-    if (_flow->failing()) {\n-      assert(false, \"type flow analysis failed for OSR compilation\");\n-      C->record_method_not_compilable(_flow->failure_reason());\n+  } else {\n+    _tf = TypeFunc::make(method());\n+    _entry_bci = InvocationEntryBci;\n+    _flow = method()->get_flow_analysis();\n+  }\n+\n+  if (_flow->failing()) {\n+    assert(false, \"type flow analysis failed during parsing\");\n+    C->record_method_not_compilable(_flow->failure_reason());\n@@ -517,1 +510,5 @@\n-        tty->print_cr(\"OSR @%d type flow bailout: %s\", _entry_bci, _flow->failure_reason());\n+        if (is_osr_parse()) {\n+          tty->print(\"OSR @%d type flow bailout: %s\", _entry_bci, _flow->failure_reason());\n+        } else {\n+          tty->print_cr(\"type flow bailout: %s\", _flow->failure_reason());\n+        }\n@@ -525,2 +522,0 @@\n-    }\n-    _tf = C->tf();     \/\/ the OSR entry type is different\n@@ -538,0 +533,4 @@\n+  if (_flow->has_irreducible_entry()) {\n+    C->set_parsed_irreducible_loop(true);\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":23,"deletions":24,"binary":false,"changes":47,"status":"modified"}]}