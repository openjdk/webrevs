{"files":[{"patch":"@@ -298,0 +298,3 @@\n+\n+  const int concat_argument_upper_bound = 100;\n+  int arguments_appended = 0;\n@@ -306,0 +309,1 @@\n+      arguments_appended += other->num_arguments();\n@@ -308,0 +312,6 @@\n+      arguments_appended++;\n+    }\n+    \/\/ Check if this concatenation would result in an excessive number\n+    \/\/ of arguments and bail out in that case.\n+    if (concat_argument_upper_bound < arguments_appended) {\n+      return nullptr;\n@@ -683,8 +693,1 @@\n-\n-            \/\/ merge(other, arg) can return a concatenation of size\n-            \/\/ sc->num_arguments() * other->num_arguments(),\n-            \/\/ which is a problem in the case of repeated stacked concats.\n-            \/\/ Put a limit at 100 arguments to guard against excessive resource use.\n-            bool n_args_is_bounded = merged->num_arguments() < 100;\n-\n-            if (n_args_is_bounded && merged->validate_control_flow() && merged->validate_mem_flow()) {\n+            if (merged != nullptr && merged->validate_control_flow() && merged->validate_mem_flow()) {\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -85,2 +85,0 @@\n-compiler\/stringopts\/TestStackedConcatsMany.java 8328078 generic-aarch64\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,3 +29,4 @@\n- * @run main\/othervm compiler.stringopts.TestStackedConcatsMany\n- * @run main\/othervm -XX:-TieredCompilation -Xcomp\n- *                   -XX:CompileOnly=compiler.stringopts.TestStackedConcatsMany::*\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:-OptoScheduling compiler.stringopts.TestStackedConcatsMany\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:-OptoScheduling\n+ *                   -XX:CompileOnly=compiler.stringopts.TestStackedConcatsMany::f\n@@ -40,2 +41,9 @@\n-        for (int i = 0; i < 10; i++) {\n-            String s = f(\" \");\n+        new StringBuilder(); \/\/ Trigger loading of the StringBuilder class.\n+        String s = f(); \/\/ warmup call\n+        s = f();\n+        String z = \"xy\";\n+        for (int i = 0; i < 24; i++) {\n+            z = z + z;\n+        }\n+        if (!(s.equals(z))) {\n+            throw new RuntimeException(\"wrong result.\");\n@@ -45,2 +53,2 @@\n-    static String f(String c) {\n-        String s = \" \";\n+    static String f() {\n+        String s = \"xy\";\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestStackedConcatsMany.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"}]}