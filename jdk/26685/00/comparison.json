{"files":[{"patch":"@@ -683,1 +683,8 @@\n-            if (merged->validate_control_flow() && merged->validate_mem_flow()) {\n+\n+            \/\/ merge(other, arg) can return a concatenation of size\n+            \/\/ sc->num_arguments() * other->num_arguments(),\n+            \/\/ which is a problem in the case of repeated stacked concats.\n+            \/\/ Put a limit at 100 arguments to guard against excessive resource use.\n+            bool n_args_is_bounded = merged->num_arguments() < 100;\n+\n+            if (n_args_is_bounded && merged->validate_control_flow() && merged->validate_mem_flow()) {\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+compiler\/stringopts\/TestStackedConcatsMany.java 8328078 generic-aarch64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8357105\n+ * @summary Test that repeated stacked string concatenations do not\n+ *          consume too many compilation resources.\n+ * @run main\/othervm compiler.stringopts.TestStackedConcatsMany\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp\n+ *                   -XX:CompileOnly=compiler.stringopts.TestStackedConcatsMany::*\n+ *                   compiler.stringopts.TestStackedConcatsMany\n+ *\/\n+\n+package compiler.stringopts;\n+\n+public class TestStackedConcatsMany {\n+\n+    public static void main (String... args) {\n+        for (int i = 0; i < 10; i++) {\n+            String s = f(\" \");\n+        }\n+    }\n+\n+    static String f(String c) {\n+        String s = \" \";\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append(s).toString();\n+\n+        return s;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestStackedConcatsMany.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}