{"files":[{"patch":"@@ -91,1 +91,1 @@\n-    u4 _value;\n+    u4 _encoded_value;\n@@ -95,1 +95,1 @@\n-    Entry(unsigned int hash, u4 val) : _hash(hash), _value(val) {}\n+    Entry(unsigned int hash, u4 val) : _hash(hash), _encoded_value(val) {}\n@@ -98,1 +98,1 @@\n-      return _value;\n+      return _encoded_value;\n@@ -105,1 +105,1 @@\n-      return (_value == other._value && _hash == other._hash);\n+      return (_encoded_value == other._encoded_value && _hash == other._hash);\n@@ -165,2 +165,0 @@\n-\/\/ The last entry is a special type. It contains the end of the last\n-\/\/ bucket.\n@@ -168,3 +166,5 @@\n-\/\/ There are three types of buckets, regular buckets and value_only buckets and table_end\n-\/\/ bucket. The value_only buckets have '01' in their highest 2-bit, and regular buckets have\n-\/\/ '00' in their highest 2-bit, and table_end bucket has '11' in its highest 2-bit.\n+\/\/ There are three types of buckets: regular, value_only, and table_end.\n+\/\/  . The regular buckets have '00' in their highest 2-bit.\n+\/\/  . The value_only buckets have '01' in their highest 2-bit.\n+\/\/  . There is only a single table_end bucket that marks the end of buckets[].\n+\/\/    It has '11' in its highest 2-bit.\n@@ -173,6 +173,5 @@\n-\/\/   u4 hash;    \/\/ entry hash\n-\/\/   u4 value;   \/\/ it could be offset or index or any payload.\n-\/\/               \/\/ e.g. if it's an offset, can be used like below:\n-\/\/               \/\/   YourEntryType* entry = (YourEntryType*)(base_address + offset)\n-\/\/               \/\/ check StringTable, SymbolTable and AdapterHandlerLibrary for its usage examples.\n-\/\/ A regular bucket could also contains zero entry for empty bucket.\n+\/\/   u4 hash;          \/\/ entry hash\n+\/\/   u4 encoded_value; \/\/ A 32-bit encoding of the template type V. The template parameter DECODE\n+\/\/                     \/\/ converts this to type V. Many CompactHashtables encode a pointer as a 32-bit offset, where\n+\/\/                     \/\/   V entry = (V)(base_address + offset)\n+\/\/                     \/\/ see StringTable, SymbolTable and AdapterHandlerLibrary for examples\n@@ -182,12 +181,25 @@\n-\/\/ For table_end bucket, there is no corresponding entry, i.e. it always contains zero entry.\n-\/\/\n-\/\/ Example -- note that the second bucket is a VALUE_ONLY_BUCKET_TYPE so the hash code\n-\/\/            is skipped, and third bucket is an empty REGULAR_BUCKET_TYPE, the last is\n-\/\/            the TABLEEND_BUCKET_TYPE.\n-\/\/ buckets[0, 4, 5(empty regular), 5, ...., N(table_end)]\n-\/\/         |  |  |                 |        |\n-\/\/         |  |  +--------+--------+        |\n-\/\/         |  |           |                 |\n-\/\/         |  +----+ +----+                 |\n-\/\/         v       v v                      v\n-\/\/ entries[H,O,H,O,O,H,O,H,O.................]\n+\/\/ The single table_end bucket has no corresponding entry.\n+\/\/\n+\/\/ The number of entries in bucket <i> can be calculated like this:\n+\/\/      my_offset   = _buckets[i]   & 0x3fffffff; \/\/ mask off top 2-bit\n+\/\/      next_offset = _buckets[i+1] & 0x3fffffff\n+\/\/  For REGULAR_BUCKET_TYPE\n+\/\/      num_entries = (next_offset - my_offset) \/ 8;\n+\/\/  For VALUE_ONLY_BUCKET_TYPE\n+\/\/      num_entries = (next_offset - my_offset) \/ 4;\n+\/\/\n+\/\/ If bucket <i> is empty, we have my_offset == next_offset. Empty buckets are\n+\/\/ always encoded as regular buckets.\n+\/\/\n+\/\/ In the following example:\n+\/\/   - The 0-th bucket is a REGULAR_BUCKET_TYPE with two entries\n+\/\/   - The 1-st bucket is a VALUE_ONLY_BUCKET_TYPE with one entry.\n+\/\/   - The 2-th bucket is a REGULAR_BUCKET_TYPE with zeo entries.\n+\/\/\n+\/\/ buckets[0, 4, 5(empty), 5, ...., N(table_end)]\n+\/\/         |  |  |         |        |\n+\/\/         |  |  +---+-----+        |\n+\/\/         |  |      |              |\n+\/\/         |  +----+ +              |\n+\/\/         v       v v              v\n+\/\/ entries[H,O,H,O,O,H,O,H,O........]\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.hpp","additions":39,"deletions":27,"binary":false,"changes":66,"status":"modified"}]}