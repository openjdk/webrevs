{"files":[{"patch":"@@ -193,7 +193,0 @@\n-size_t SimpleCompactHashtable::calculate_header_size() {\n-  \/\/ We have 5 fields. Each takes up sizeof(intptr_t). See WriteClosure::do_u4\n-  constexpr size_t bytes = sizeof(intptr_t) * 5;\n-  static_assert(bytes >= sizeof(SimpleCompactHashtable), \"must\");\n-  return bytes;\n-}\n-\n@@ -201,2 +194,0 @@\n-  \/\/ NOTE: if you change this function, you MUST change the number 5 in\n-  \/\/ calculate_header_size() accordingly.\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -236,2 +236,0 @@\n-\n-  static size_t calculate_header_size();\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}