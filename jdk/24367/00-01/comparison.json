{"files":[{"patch":"@@ -34,2 +34,0 @@\n-import java.lang.Override;\n-\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureDTLS12.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.lang.Override;\n@@ -43,6 +42,0 @@\n-    protected static final List<String> DISABLED_SIGNATURE_SCHEMES = List.of(\n-            \"ecdsa_sha1\",\n-            \"rsa_pkcs1_sha1\",\n-            \"dsa_sha1\"\n-    );\n-\n@@ -82,0 +75,9 @@\n+    \/\/ Returns SHA-1 signature schemes supported for TLSv1.2 handshake\n+    protected List<String> getDisabledSignatureSchemes() {\n+        return List.of(\n+                \"ecdsa_sha1\",\n+                \"rsa_pkcs1_sha1\",\n+                \"dsa_sha1\"\n+        );\n+    }\n+\n@@ -89,1 +91,1 @@\n-        DISABLED_SIGNATURE_SCHEMES.forEach(ss ->\n+        getDisabledSignatureSchemes().forEach(ss ->\n@@ -100,1 +102,1 @@\n-        DISABLED_SIGNATURE_SCHEMES.forEach(ss ->\n+        getDisabledSignatureSchemes().forEach(ss ->\n@@ -113,1 +115,1 @@\n-        DISABLED_SIGNATURE_SCHEMES.forEach(ss ->\n+        getDisabledSignatureSchemes().forEach(ss ->\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureTLS12.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340321\n+ * @summary Disable SHA-1 in TLS\/DTLS 1.2 signatures.\n+ *          This test only covers TLS 1.3.\n+ * @library \/javax\/net\/ssl\/templates\n+ *          \/test\/lib\n+ * @run main\/othervm DisableSHA1inHandshakeSignatureTLS13\n+ *\/\n+\n+import java.util.List;\n+\n+public class DisableSHA1inHandshakeSignatureTLS13 extends\n+        DisableSHA1inHandshakeSignatureTLS12 {\n+\n+    protected DisableSHA1inHandshakeSignatureTLS13() throws Exception {\n+        super();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        new DisableSHA1inHandshakeSignatureTLS13().run();\n+    }\n+\n+    @Override\n+    protected String getProtocol() {\n+        return \"TLSv1.3\";\n+    }\n+\n+    \/\/ Returns SHA-1 signature schemes supported for TLSv1.3 handshake\n+    @Override\n+    protected List<String> getDisabledSignatureSchemes() {\n+        return List.of(\"ecdsa_sha1\");\n+    }\n+\n+    \/\/ TLSv1.3 sends CertificateRequest signature schemes in\n+    \/\/ signature_algorithms and signature_algorithms_cert extensions. Same as\n+    \/\/ ClientHello, but they are encrypted. So we skip CertificateRequest\n+    \/\/ signature schemes verification for TLSv1.3.\n+    @Override\n+    protected void checkCertificateRequest() {\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSHA1inHandshakeSignatureTLS13.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}