{"files":[{"patch":"@@ -1697,0 +1697,1 @@\n+  size_t const _stride;\n@@ -1703,1 +1704,1 @@\n-  ShenandoahParallelHeapRegionTask(ShenandoahHeapRegionClosure* blk) :\n+  ShenandoahParallelHeapRegionTask(ShenandoahHeapRegionClosure* blk, size_t stride) :\n@@ -1705,1 +1706,1 @@\n-          _heap(ShenandoahHeap::heap()), _blk(blk), _index(0) {}\n+          _heap(ShenandoahHeap::heap()), _blk(blk), _stride(stride), _index(0) {}\n@@ -1709,1 +1710,1 @@\n-    size_t stride = ShenandoahParallelRegionStride;\n+    size_t stride = _stride;\n@@ -1728,2 +1729,14 @@\n-  if (num_regions() > ShenandoahParallelRegionStride) {\n-    ShenandoahParallelHeapRegionTask task(blk);\n+  const uint active_workers = workers()->active_workers();\n+  const size_t n_regions = num_regions();\n+  size_t stride = ShenandoahParallelRegionStride;\n+  if (stride == 0 && active_workers > 1) {\n+    \/\/ Automatically derive the stride to balance the work between threads\n+    \/\/ evenly. Do not try to split work if below the reasonable threshold.\n+    constexpr size_t threshold = 4096;\n+    stride = n_regions <= threshold ?\n+            threshold :\n+            (n_regions + active_workers - 1) \/ active_workers;\n+  }\n+\n+  if (n_regions > stride && active_workers > 1) {\n+    ShenandoahParallelHeapRegionTask task(blk, stride);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -321,1 +321,1 @@\n-  product(uintx, ShenandoahParallelRegionStride, 1024, EXPERIMENTAL,        \\\n+  product(uintx, ShenandoahParallelRegionStride, 0, EXPERIMENTAL,           \\\n@@ -323,1 +323,2 @@\n-          \"iteration. Affects heaps with lots of regions.\")                 \\\n+          \"iteration. Affects heaps with lots of regions. \"                 \\\n+          \"Set to 0 to let Shenandoah to decide the best value.\")           \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}