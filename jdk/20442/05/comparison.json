{"files":[{"patch":"@@ -366,7 +366,0 @@\n-        # Hack to get hold of the api environment variables that are only defined for actions\n-      - name: 'Get API configuration'\n-        id: api\n-        uses: actions\/github-script@v7\n-        with:\n-          script: 'return { url: process.env[\"ACTIONS_RUNTIME_URL\"], token: process.env[\"ACTIONS_RUNTIME_TOKEN\"] }'\n-\n@@ -376,11 +369,15 @@\n-          ALL_ARTIFACT_URLS=\"$(curl -s \\\n-              -H 'Accept: application\/json;api-version=6.0-preview' \\\n-              -H 'Authorization: Bearer ${{ fromJson(steps.api.outputs.result).token }}' \\\n-              '${{ fromJson(steps.api.outputs.result).url }}_apis\/pipelines\/workflows\/${{ github.run_id }}\/artifacts?api-version=6.0-preview')\"\n-          BUNDLE_ARTIFACT_URLS=\"$(echo \"$ALL_ARTIFACT_URLS\" | jq -r -c '.value | map(select(.name|startswith(\"bundles-\"))) | .[].url')\"\n-          for url in $BUNDLE_ARTIFACT_URLS; do\n-            echo \"Removing $url\"\n-            curl -s \\\n-                -H 'Accept: application\/json;api-version=6.0-preview' \\\n-                -H 'Authorization: Bearer ${{ fromJson(steps.api.outputs.result).token }}' \\\n-                -X DELETE \"$url\" \\\n+          # See: https:\/\/docs.github.com\/en\/rest\/actions\/artifacts?apiVersion=2022-11-28\n+          ALL_ARTIFACT_IDS=\"$(curl -sL \\\n+              -H 'Accept: application\/vnd.github+json' \\\n+              -H 'Authorization: Bearer ${{ github.token }}' \\\n+              -H 'X-GitHub-Api-Version: 2022-11-28' \\\n+              '${{ github.api_url }}\/repos\/${{ github.repository }}\/actions\/runs\/${{ github.run_id }}\/artifacts')\"\n+          BUNDLE_ARTIFACT_IDS=\"$(echo \"$ALL_ARTIFACT_IDS\" | jq -r -c '.artifacts | map(select(.name|startswith(\"bundles-\"))) | .[].id')\"\n+          for id in $BUNDLE_ARTIFACT_IDS; do\n+            echo \"Removing $id\"\n+            curl -sL \\\n+                -X DELETE \\\n+                -H 'Accept: application\/vnd.github+json' \\\n+                -H 'Authorization: Bearer ${{ github.token }}' \\\n+                -H 'X-GitHub-Api-Version: 2022-11-28' \\\n+                \"${{ github.api_url }}\/repos\/${{ github.repository }}\/actions\/artifacts\/$id\" \\\n","filename":".github\/workflows\/main.yml","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -751,2 +751,0 @@\n-  JTREG_TIMEOUT_FACTOR ?= 4\n-\n@@ -840,0 +838,18 @@\n+  JTREG_ALL_OPTIONS := $$(JTREG_JAVA_OPTIONS) $$(JTREG_VM_OPTIONS)\n+\n+  JTREG_AUTO_PROBLEM_LISTS :=\n+  JTREG_AUTO_TIMEOUT_FACTOR := 4\n+\n+  ifneq ($$(findstring -Xcomp, $$(JTREG_ALL_OPTIONS)), )\n+    JTREG_AUTO_PROBLEM_LISTS += ProblemList-Xcomp.txt\n+    JTREG_AUTO_TIMEOUT_FACTOR := 10\n+  endif\n+\n+  ifneq ($$(findstring -XX:+UseZGC, $$(JTREG_ALL_OPTIONS)), )\n+    ifneq ($$(findstring -XX:-ZGenerational, $$(JTREG_ALL_OPTIONS)), )\n+      JTREG_AUTO_PROBLEM_LISTS += ProblemList-zgc.txt\n+    else\n+      JTREG_AUTO_PROBLEM_LISTS += ProblemList-generational-zgc.txt\n+    endif\n+  endif\n+\n@@ -871,0 +887,12 @@\n+  # SetupRunJtregTestCustom might also adjust JTREG_AUTO_ variables\n+  # so set the final results after setting values from custom setup\n+  ifneq ($$(JTREG_AUTO_PROBLEM_LISTS), )\n+    # Accept both absolute paths as well as relative to the current test root.\n+    $1_JTREG_BASIC_OPTIONS += $$(addprefix $$(JTREG_PROBLEM_LIST_PREFIX), $$(wildcard \\\n+        $$(JTREG_AUTO_PROBLEM_LISTS) \\\n+        $$(addprefix $$($1_TEST_ROOT)\/, $$(JTREG_AUTO_PROBLEM_LISTS)) \\\n+    ))\n+  endif\n+\n+  JTREG_TIMEOUT_FACTOR ?= $$(JTREG_AUTO_TIMEOUT_FACTOR)\n+\n","filename":"make\/RunTests.gmk","additions":31,"deletions":3,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -316,1 +316,0 @@\n-BASIC_POST_CONFIG_OUTPUT\n@@ -322,0 +321,3 @@\n+\n+# All output is done. Do the post-config output management.\n+BASIC_POST_CONFIG_OUTPUT\n","filename":"make\/autoconf\/configure.ac","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -681,0 +681,3 @@\n+        AC_MSG_NOTICE([A full XCode is required to build the JDK (not only command line tools)])\n+        AC_MSG_NOTICE([If you have XCode installed, you might need to reset the Xcode active developer directory])\n+        AC_MSG_NOTICE([using 'sudo xcode-select -r'])\n","filename":"make\/autoconf\/toolchain.m4","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -112,0 +112,5 @@\n+          # 'ld -r' might invalidate the .llvm_addrsig section, and this will cause subsequent\n+          # calls to lld (with '-Wl,--icf=safe') to fail when linking with this library, so\n+          # remove that section.\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_objcopy_remove_llvm_addrsig_section, \\\n+\t      $$($1_OBJCOPY) --remove-section=.llvm_addrsig $$($1_TARGET_RELOCATABLE))\n","filename":"make\/common\/native\/Link.gmk","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,6 +32,2 @@\n-LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22\/830ec9fcccef480bb3e73fb7ecafe059\/36\/GPL\/openjdk-22_linux-x64_bin.tar.gz\n-LINUX_X64_BOOT_JDK_SHA256=4d65cc6ed28711768fd72c2043a7925f7c83f5f51bb64970bd9d52f7791fc6ac\n-\n-MACOS_X64_BOOT_JDK_EXT=tar.gz\n-MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22\/830ec9fcccef480bb3e73fb7ecafe059\/36\/GPL\/openjdk-22_macos-x64_bin.tar.gz\n-MACOS_X64_BOOT_JDK_SHA256=ae31fe10916429e3fe284266095067a5ce9fecbdc03ff1a079d20459f731ca36\n+LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22.0.2\/c9ecb94cd31b495da20a27d4581645e8\/9\/GPL\/openjdk-22.0.2_linux-x64_bin.tar.gz\n+LINUX_X64_BOOT_JDK_SHA256=41536f115668308ecf4eba92aaf6acaeb0936225828b741efd83b6173ba82963\n@@ -40,2 +36,6 @@\n-MACOS_AARCH64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22\/830ec9fcccef480bb3e73fb7ecafe059\/36\/GPL\/openjdk-22_macos-aarch64_bin.tar.gz\n-MACOS_AARCH64_BOOT_JDK_SHA256=d10f82429d01047968c52c7975c326388cb5d212791e14c1de21c987463a4b53\n+MACOS_AARCH64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22.0.2\/c9ecb94cd31b495da20a27d4581645e8\/9\/GPL\/openjdk-22.0.2_macos-aarch64_bin.tar.gz\n+MACOS_AARCH64_BOOT_JDK_SHA256=3dab98730234e1a87aec14bcb8171d2cae101e96ff4eed1dab96abbb08e843fd\n+\n+MACOS_X64_BOOT_JDK_EXT=tar.gz\n+MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22.0.2\/c9ecb94cd31b495da20a27d4581645e8\/9\/GPL\/openjdk-22.0.2_macos-x64_bin.tar.gz\n+MACOS_X64_BOOT_JDK_SHA256=e8b3ec7a7077711223d31156e771f11723cd7af31c2017f1bd2eda20855940fb\n@@ -44,2 +44,2 @@\n-WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22\/830ec9fcccef480bb3e73fb7ecafe059\/36\/GPL\/openjdk-22_windows-x64_bin.zip\n-WINDOWS_X64_BOOT_JDK_SHA256=8f5138fecb53c08c20abd4fa6812f9400051f3852582a2142ffda0dff73a5824\n+WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk22.0.2\/c9ecb94cd31b495da20a27d4581645e8\/9\/GPL\/openjdk-22.0.2_windows-x64_bin.zip\n+WINDOWS_X64_BOOT_JDK_SHA256=f2a9b9ab944e71a64637fcdc6b13a1188cf02d4eb9ecf71dc927e98b3e45f5dc\n","filename":"make\/conf\/github-actions.conf","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -60,1 +60,2 @@\n-    DISABLED_WARNINGS_gcc := undef unused-result format-nonliteral maybe-uninitialized, \\\n+    DISABLED_WARNINGS_gcc := undef unused-result format-nonliteral \\\n+        maybe-uninitialized zero-as-null-pointer-constant, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -240,1 +240,0 @@\n-      DISABLED_WARNINGS_gcc_gtk2_interface.c := parentheses type-limits, \\\n@@ -255,1 +254,0 @@\n-      DISABLED_WARNINGS_clang_gtk2_interface.c := parentheses, \\\n@@ -265,2 +263,0 @@\n-      DISABLED_WARNINGS_clang_aix_gtk2_interface.c := parentheses \\\n-          logical-op-parentheses, \\\n","filename":"make\/modules\/java.desktop\/lib\/AwtLibraries.gmk","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -16187,0 +16187,13 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b forward_exception_stub\" %}\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -650,1 +650,1 @@\n-    assert(c->as_jobject() == 0, \"should be\");\n+    assert(c->as_jobject() == nullptr, \"should be\");\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1032,1 +1032,1 @@\n-const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); return 0; }\n+const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); }\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-  assert(_pc == pc_old || pc == pc_old || pc_old == 0, \"\");\n+  assert(_pc == pc_old || pc == pc_old || pc_old == nullptr, \"\");\n@@ -500,1 +500,1 @@\n-  if (fp() == 0 || (intptr_t(fp()) & (wordSize-1)) != 0) {\n+  if (fp() == nullptr || (intptr_t(fp()) & (wordSize-1)) != 0) {\n@@ -503,1 +503,1 @@\n-  if (sp() == 0 || (intptr_t(sp()) & (wordSize-1)) != 0) {\n+  if (sp() == nullptr || (intptr_t(sp()) & (wordSize-1)) != 0) {\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -378,1 +378,1 @@\n-  __ ldrw(rscratch2, Address(rscratch1, ClassLoaderData::keep_alive_offset()));\n+  __ ldrw(rscratch2, Address(rscratch1, ClassLoaderData::keep_alive_ref_count_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/barrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-    __ lea(rscratch1, ExternalAddress(slow_case_addr));\n+    __ lea(rscratch1, RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/aarch64\/jniFastGetField_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-          assert(target == 0, \"did not expect to relocate target for polling page load\");\n+          assert(target == nullptr, \"did not expect to relocate target for polling page load\");\n@@ -739,1 +739,1 @@\n-    lea(rscratch1, CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n+    lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone)));\n@@ -1733,2 +1733,2 @@\n-  cmn(r_bitmap, (u1)1);\n-  br(EQ, L_huge);\n+  cmpw(r_array_length, (u1)(Klass::SECONDARY_SUPERS_TABLE_SIZE - 2));\n+  br(GT, L_huge);\n@@ -1882,1 +1882,1 @@\n-  lea(rscratch2, ExternalAddress(StubRoutines::verify_oop_subroutine_entry_address()));\n+  lea(rscratch2, RuntimeAddress(StubRoutines::verify_oop_subroutine_entry_address()));\n@@ -1921,1 +1921,1 @@\n-  lea(rscratch2, ExternalAddress(StubRoutines::verify_oop_subroutine_entry_address()));\n+  lea(rscratch2, RuntimeAddress(StubRoutines::verify_oop_subroutine_entry_address()));\n@@ -6457,1 +6457,1 @@\n-    lea(rscratch1, CAST_FROM_FN_PTR(address, JavaThread::verify_cross_modify_fence_failure));\n+    lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, JavaThread::verify_cross_modify_fence_failure)));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-  if ((dest == (address)this) || dest == 0) {\n+  if ((dest == (address)this) || dest == nullptr) {\n@@ -259,1 +259,1 @@\n-  if ((dest == (address)this) || dest == 0) {\n+  if ((dest == (address)this) || dest == nullptr) {\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,326 @@\n+\n+class SimpleRuntimeFrame {\n+\n+  public:\n+\n+  \/\/ Most of the runtime stubs have this simple frame layout.\n+  \/\/ This class exists to make the layout shared in one place.\n+  \/\/ Offsets are for compiler stack slots, which are jints.\n+  enum layout {\n+    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n+    \/\/ will override any oopMap setting for it. We must therefore force the layout\n+    \/\/ so that it agrees with the frame sender code.\n+    \/\/ we don't expect any arg reg save area so aarch64 asserts that\n+    \/\/ frame::arg_reg_save_area_bytes == 0\n+    rfp_off = 0,\n+    rfp_off2,\n+    return_off, return_off2,\n+    framesize\n+  };\n+};\n+\n+#define __ masm->\n+\n+\/\/------------------------------generate_uncommon_trap_blob--------------------\n+void OptoRuntime::generate_uncommon_trap_blob() {\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  address start = __ pc();\n+\n+  \/\/ Push self-frame.  We get here with a return address in LR\n+  \/\/ and sp should be 16 byte aligned\n+  \/\/ push rfp and retaddr by hand\n+  __ protect_return_address();\n+  __ stp(rfp, lr, Address(__ pre(sp, -2 * wordSize)));\n+  \/\/ we don't expect an arg reg save area\n+#ifndef PRODUCT\n+  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n+#endif\n+  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n+  \/\/ runtime expects it.\n+  if (c_rarg1 != j_rarg0) {\n+    __ movw(c_rarg1, j_rarg0);\n+  }\n+\n+  \/\/ we need to set the past SP to the stack pointer of the stub frame\n+  \/\/ and the pc to the address where this runtime call will return\n+  \/\/ although actually any pc in this code blob will do).\n+  Label retaddr;\n+  __ set_last_Java_frame(sp, noreg, retaddr, rscratch1);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ capture callee-saved registers as well as return values.\n+  \/\/\n+  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index);\n+  \/\/\n+  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n+\n+  __ mov(c_rarg0, rthread);\n+  __ movw(c_rarg2, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ lea(rscratch1,\n+         RuntimeAddress(CAST_FROM_FN_PTR(address,\n+                                         Deoptimization::uncommon_trap)));\n+  __ blr(rscratch1);\n+  __ bind(retaddr);\n+\n+  \/\/ Set an oopmap for the call site\n+  OopMapSet* oop_maps = new OopMapSet();\n+  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n+\n+  \/\/ location of rfp is known implicitly by the frame sender code\n+\n+  oop_maps->add_gc_map(__ pc() - start, map);\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ move UnrollBlock* into r4\n+  __ mov(r4, r0);\n+\n+#ifdef ASSERT\n+  { Label L;\n+    __ ldrw(rscratch1, Address(r4, Deoptimization::UnrollBlock::unpack_kind_offset()));\n+    __ cmpw(rscratch1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+    __ br(Assembler::EQ, L);\n+    __ stop(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n+    __ bind(L);\n+  }\n+#endif\n+\n+  \/\/ Pop all the frames we must move\/replace.\n+  \/\/\n+  \/\/ Frame picture (youngest to oldest)\n+  \/\/ 1: self-frame (no frame link)\n+  \/\/ 2: deopting frame  (no frame link)\n+  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n+\n+  \/\/ Pop self-frame.  We have no frame, and must rely only on r0 and sp.\n+  __ add(sp, sp, (SimpleRuntimeFrame::framesize) << LogBytesPerInt); \/\/ Epilog!\n+\n+  \/\/ Pop deoptimized frame (int)\n+  __ ldrw(r2, Address(r4,\n+                      Deoptimization::UnrollBlock::\n+                      size_of_deoptimized_frame_offset()));\n+  __ sub(r2, r2, 2 * wordSize);\n+  __ add(sp, sp, r2);\n+  __ ldp(rfp, zr, __ post(sp, 2 * wordSize));\n+\n+#ifdef ASSERT\n+  \/\/ Compilers generate code that bang the stack by as much as the\n+  \/\/ interpreter would need. So this stack banging should never\n+  \/\/ trigger a fault. Verify that it does not on non product builds.\n+  __ ldrw(r1, Address(r4,\n+                      Deoptimization::UnrollBlock::\n+                      total_frame_sizes_offset()));\n+  __ bang_stack_size(r1, r2);\n+#endif\n+\n+  \/\/ Load address of array of frame pcs into r2 (address*)\n+  __ ldr(r2, Address(r4,\n+                     Deoptimization::UnrollBlock::frame_pcs_offset()));\n+\n+  \/\/ Load address of array of frame sizes into r5 (intptr_t*)\n+  __ ldr(r5, Address(r4,\n+                     Deoptimization::UnrollBlock::\n+                     frame_sizes_offset()));\n+\n+  \/\/ Counter\n+  __ ldrw(r3, Address(r4,\n+                      Deoptimization::UnrollBlock::\n+                      number_of_frames_offset())); \/\/ (int)\n+\n+  \/\/ Now adjust the caller's stack to make up for the extra locals but\n+  \/\/ record the original sp so that we can save it in the skeletal\n+  \/\/ interpreter frame and the stack walking of interpreter_sender\n+  \/\/ will get the unextended sp value and not the \"real\" sp value.\n+\n+  const Register sender_sp = r8;\n+\n+  __ mov(sender_sp, sp);\n+  __ ldrw(r1, Address(r4,\n+                      Deoptimization::UnrollBlock::\n+                      caller_adjustment_offset())); \/\/ (int)\n+  __ sub(sp, sp, r1);\n+\n+  \/\/ Push interpreter frames in a loop\n+  Label loop;\n+  __ bind(loop);\n+  __ ldr(r1, Address(r5, 0));       \/\/ Load frame size\n+  __ sub(r1, r1, 2 * wordSize);     \/\/ We'll push pc and rfp by hand\n+  __ ldr(lr, Address(r2, 0));       \/\/ Save return address\n+  __ enter();                       \/\/ and old rfp & set new rfp\n+  __ sub(sp, sp, r1);               \/\/ Prolog\n+  __ str(sender_sp, Address(rfp, frame::interpreter_frame_sender_sp_offset * wordSize)); \/\/ Make it walkable\n+  \/\/ This value is corrected by layout_activation_impl\n+  __ str(zr, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ mov(sender_sp, sp);          \/\/ Pass sender_sp to next frame\n+  __ add(r5, r5, wordSize);       \/\/ Bump array pointer (sizes)\n+  __ add(r2, r2, wordSize);       \/\/ Bump array pointer (pcs)\n+  __ subsw(r3, r3, 1);            \/\/ Decrement counter\n+  __ br(Assembler::GT, loop);\n+  __ ldr(lr, Address(r2, 0));     \/\/ save final return address\n+  \/\/ Re-push self-frame\n+  __ enter();                     \/\/ & old rfp & set new rfp\n+\n+  \/\/ Use rfp because the frames look interpreted now\n+  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n+  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(sp, rfp, the_pc, rscratch1);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ restore return values to their stack-slots with the new SP.\n+  \/\/ Thread is in rdi already.\n+  \/\/\n+  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode);\n+  \/\/\n+  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n+\n+  \/\/ sp should already be aligned\n+  __ mov(c_rarg0, rthread);\n+  __ movw(c_rarg1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n+  __ blr(rscratch1);\n+\n+  \/\/ Set an oopmap for the call site\n+  \/\/ Use the same PC we used for the last java frame\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  \/\/ Clear fp AND pc\n+  __ reset_last_Java_frame(true);\n+\n+  \/\/ Pop self-frame.\n+  __ leave();                 \/\/ Epilog\n+\n+  \/\/ Jump to interpreter\n+  __ ret(lr);\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n+\n+  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n+                                                 SimpleRuntimeFrame::framesize >> 1);\n+}\n+\n+\/\/------------------------------generate_exception_blob---------------------------\n+\/\/ creates exception blob at the end\n+\/\/ Using exception blob, this code is jumped from a compiled method.\n+\/\/ (see emit_exception_handler in aarch64.ad file)\n+\/\/\n+\/\/ Given an exception pc at a call we call into the runtime for the\n+\/\/ handler in this method. This handler might merely restore state\n+\/\/ (i.e. callee save registers) unwind the frame and jump to the\n+\/\/ exception handler for the nmethod if there is no Java level handler\n+\/\/ for the nmethod.\n+\/\/\n+\/\/ This code is entered with a jmp.\n+\/\/\n+\/\/ Arguments:\n+\/\/   r0: exception oop\n+\/\/   r3: exception pc\n+\/\/\n+\/\/ Results:\n+\/\/   r0: exception oop\n+\/\/   r3: exception pc in caller or ???\n+\/\/   destination: exception handler of caller\n+\/\/\n+\/\/ Note: the exception pc MUST be at a call (precise debug information)\n+\/\/       Registers r0, r3, r2, r4, r5, r8-r11 are not callee saved.\n+\/\/\n+\n+void OptoRuntime::generate_exception_blob() {\n+  assert(!OptoRuntime::is_callee_saved_register(R3_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(R0_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(R2_num), \"\");\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+\n+  \/\/ TODO check various assumptions made here\n+  \/\/\n+  \/\/ make sure we do so before running this\n+\n+  address start = __ pc();\n+\n+  \/\/ push rfp and retaddr by hand\n+  \/\/ Exception pc is 'return address' for stack walker\n+  __ protect_return_address();\n+  __ stp(rfp, lr, Address(__ pre(sp, -2 * wordSize)));\n+  \/\/ there are no callee save registers and we don't expect an\n+  \/\/ arg reg save area\n+#ifndef PRODUCT\n+  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n+#endif\n+  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n+  \/\/ handle_exception call, since we do not want to make any assumption\n+  \/\/ about the size of the frame where the exception happened in.\n+  __ str(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ str(r3, Address(rthread, JavaThread::exception_pc_offset()));\n+\n+  \/\/ This call does all the hard work.  It checks if an exception handler\n+  \/\/ exists in the method.\n+  \/\/ If so, it returns the handler address.\n+  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n+  \/\/ registers of the frame being removed.\n+  \/\/\n+  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n+  \/\/\n+  \/\/ n.b. 1 gp arg, 0 fp args, integral return type\n+\n+  \/\/ the stack should always be aligned\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(sp, noreg, the_pc, rscratch1);\n+  __ mov(c_rarg0, rthread);\n+  __ lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C)));\n+  __ blr(rscratch1);\n+  \/\/ handle_exception_C is a special VM call which does not require an explicit\n+  \/\/ instruction sync afterwards.\n+\n+  \/\/ May jump to SVE compiled code\n+  __ reinitialize_ptrue();\n+\n+  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n+  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n+  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n+  \/\/ handle_exception_stub), since they were restored when we got the\n+  \/\/ exception.\n+\n+  OopMapSet* oop_maps = new OopMapSet();\n+\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ Restore callee-saved registers\n+\n+  \/\/ rfp is an implicitly saved callee saved register (i.e. the calling\n+  \/\/ convention will save restore it in prolog\/epilog) Other than that\n+  \/\/ there are no callee save registers now that adapter frames are gone.\n+  \/\/ and we dont' expect an arg reg save area\n+  __ ldp(rfp, r3, Address(__ post(sp, 2 * wordSize)));\n+  __ authenticate_return_address(r3);\n+\n+  \/\/ r0: exception handler\n+\n+  \/\/ We have a handler in r0 (could be deopt blob).\n+  __ mov(r8, r0);\n+\n+  \/\/ Get the exception oop\n+  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  \/\/ Get the exception pc in case we are deoptimized\n+  __ ldr(r4, Address(rthread, JavaThread::exception_pc_offset()));\n+#ifdef ASSERT\n+  __ str(zr, Address(rthread, JavaThread::exception_handler_pc_offset()));\n+  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n@@ -40,0 +366,17 @@\n+  \/\/ Clear the exception oop so GC no longer processes it as a root.\n+  __ str(zr, Address(rthread, JavaThread::exception_oop_offset()));\n+\n+  \/\/ r0: exception oop\n+  \/\/ r8:  exception handler\n+  \/\/ r4: exception pc\n+  \/\/ Jump to handler\n+\n+  __ br(r8);\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n+\n+  \/\/ Set exception blob\n+  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n+}\n+#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/aarch64\/runtime_aarch64.cpp","additions":343,"deletions":0,"binary":false,"changes":343,"status":"modified"},{"patch":"@@ -71,20 +71,0 @@\n-class SimpleRuntimeFrame {\n-\n-  public:\n-\n-  \/\/ Most of the runtime stubs have this simple frame layout.\n-  \/\/ This class exists to make the layout shared in one place.\n-  \/\/ Offsets are for compiler stack slots, which are jints.\n-  enum layout {\n-    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n-    \/\/ will override any oopMap setting for it. We must therefore force the layout\n-    \/\/ so that it agrees with the frame sender code.\n-    \/\/ we don't expect any arg reg save area so aarch64 asserts that\n-    \/\/ frame::arg_reg_save_area_bytes == 0\n-    rfp_off = 0,\n-    rfp_off2,\n-    return_off, return_off2,\n-    framesize\n-  };\n-};\n-\n@@ -1906,10 +1886,2 @@\n-    \/\/ We need an acquire here to ensure that any subsequent load of the\n-    \/\/ global SafepointSynchronize::_state flag is ordered after this load\n-    \/\/ of the thread-local polling word.  We don't want this poll to\n-    \/\/ return false (i.e. not safepointing) and a later poll of the global\n-    \/\/ SafepointSynchronize::_state spuriously to return true.\n-    \/\/\n-    \/\/ This is to avoid a race when we're in a native->Java transition\n-    \/\/ racing the code which wakes up from a safepoint.\n-\n-    __ safepoint_poll(safepoint_in_progress, true \/* at_return *\/, true \/* acquire *\/, false \/* in_nmethod *\/);\n+    \/\/ No need for acquire as Java threads always disarm themselves.\n+    __ safepoint_poll(safepoint_in_progress, true \/* at_return *\/, false \/* acquire *\/, false \/* in_nmethod *\/);\n@@ -2584,191 +2556,0 @@\n-#ifdef COMPILER2\n-\/\/------------------------------generate_uncommon_trap_blob--------------------\n-void SharedRuntime::generate_uncommon_trap_blob() {\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  address start = __ pc();\n-\n-  \/\/ Push self-frame.  We get here with a return address in LR\n-  \/\/ and sp should be 16 byte aligned\n-  \/\/ push rfp and retaddr by hand\n-  __ protect_return_address();\n-  __ stp(rfp, lr, Address(__ pre(sp, -2 * wordSize)));\n-  \/\/ we don't expect an arg reg save area\n-#ifndef PRODUCT\n-  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n-#endif\n-  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n-  \/\/ runtime expects it.\n-  if (c_rarg1 != j_rarg0) {\n-    __ movw(c_rarg1, j_rarg0);\n-  }\n-\n-  \/\/ we need to set the past SP to the stack pointer of the stub frame\n-  \/\/ and the pc to the address where this runtime call will return\n-  \/\/ although actually any pc in this code blob will do).\n-  Label retaddr;\n-  __ set_last_Java_frame(sp, noreg, retaddr, rscratch1);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ capture callee-saved registers as well as return values.\n-  \/\/ Thread is in rdi already.\n-  \/\/\n-  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index);\n-  \/\/\n-  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n-\n-  __ mov(c_rarg0, rthread);\n-  __ movw(c_rarg2, (unsigned)Deoptimization::Unpack_uncommon_trap);\n-  __ lea(rscratch1,\n-         RuntimeAddress(CAST_FROM_FN_PTR(address,\n-                                         Deoptimization::uncommon_trap)));\n-  __ blr(rscratch1);\n-  __ bind(retaddr);\n-\n-  \/\/ Set an oopmap for the call site\n-  OopMapSet* oop_maps = new OopMapSet();\n-  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n-\n-  \/\/ location of rfp is known implicitly by the frame sender code\n-\n-  oop_maps->add_gc_map(__ pc() - start, map);\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ move UnrollBlock* into r4\n-  __ mov(r4, r0);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    __ ldrw(rscratch1, Address(r4, Deoptimization::UnrollBlock::unpack_kind_offset()));\n-    __ cmpw(rscratch1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n-    __ br(Assembler::EQ, L);\n-    __ stop(\"SharedRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n-    __ bind(L);\n-  }\n-#endif\n-\n-  \/\/ Pop all the frames we must move\/replace.\n-  \/\/\n-  \/\/ Frame picture (youngest to oldest)\n-  \/\/ 1: self-frame (no frame link)\n-  \/\/ 2: deopting frame  (no frame link)\n-  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n-\n-  \/\/ Pop self-frame.  We have no frame, and must rely only on r0 and sp.\n-  __ add(sp, sp, (SimpleRuntimeFrame::framesize) << LogBytesPerInt); \/\/ Epilog!\n-\n-  \/\/ Pop deoptimized frame (int)\n-  __ ldrw(r2, Address(r4,\n-                      Deoptimization::UnrollBlock::\n-                      size_of_deoptimized_frame_offset()));\n-  __ sub(r2, r2, 2 * wordSize);\n-  __ add(sp, sp, r2);\n-  __ ldp(rfp, zr, __ post(sp, 2 * wordSize));\n-\n-#ifdef ASSERT\n-  \/\/ Compilers generate code that bang the stack by as much as the\n-  \/\/ interpreter would need. So this stack banging should never\n-  \/\/ trigger a fault. Verify that it does not on non product builds.\n-  __ ldrw(r1, Address(r4,\n-                      Deoptimization::UnrollBlock::\n-                      total_frame_sizes_offset()));\n-  __ bang_stack_size(r1, r2);\n-#endif\n-\n-  \/\/ Load address of array of frame pcs into r2 (address*)\n-  __ ldr(r2, Address(r4,\n-                     Deoptimization::UnrollBlock::frame_pcs_offset()));\n-\n-  \/\/ Load address of array of frame sizes into r5 (intptr_t*)\n-  __ ldr(r5, Address(r4,\n-                     Deoptimization::UnrollBlock::\n-                     frame_sizes_offset()));\n-\n-  \/\/ Counter\n-  __ ldrw(r3, Address(r4,\n-                      Deoptimization::UnrollBlock::\n-                      number_of_frames_offset())); \/\/ (int)\n-\n-  \/\/ Now adjust the caller's stack to make up for the extra locals but\n-  \/\/ record the original sp so that we can save it in the skeletal\n-  \/\/ interpreter frame and the stack walking of interpreter_sender\n-  \/\/ will get the unextended sp value and not the \"real\" sp value.\n-\n-  const Register sender_sp = r8;\n-\n-  __ mov(sender_sp, sp);\n-  __ ldrw(r1, Address(r4,\n-                      Deoptimization::UnrollBlock::\n-                      caller_adjustment_offset())); \/\/ (int)\n-  __ sub(sp, sp, r1);\n-\n-  \/\/ Push interpreter frames in a loop\n-  Label loop;\n-  __ bind(loop);\n-  __ ldr(r1, Address(r5, 0));       \/\/ Load frame size\n-  __ sub(r1, r1, 2 * wordSize);     \/\/ We'll push pc and rfp by hand\n-  __ ldr(lr, Address(r2, 0));       \/\/ Save return address\n-  __ enter();                       \/\/ and old rfp & set new rfp\n-  __ sub(sp, sp, r1);               \/\/ Prolog\n-  __ str(sender_sp, Address(rfp, frame::interpreter_frame_sender_sp_offset * wordSize)); \/\/ Make it walkable\n-  \/\/ This value is corrected by layout_activation_impl\n-  __ str(zr, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n-  __ mov(sender_sp, sp);          \/\/ Pass sender_sp to next frame\n-  __ add(r5, r5, wordSize);       \/\/ Bump array pointer (sizes)\n-  __ add(r2, r2, wordSize);       \/\/ Bump array pointer (pcs)\n-  __ subsw(r3, r3, 1);            \/\/ Decrement counter\n-  __ br(Assembler::GT, loop);\n-  __ ldr(lr, Address(r2, 0));     \/\/ save final return address\n-  \/\/ Re-push self-frame\n-  __ enter();                     \/\/ & old rfp & set new rfp\n-\n-  \/\/ Use rfp because the frames look interpreted now\n-  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n-  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(sp, rfp, the_pc, rscratch1);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ restore return values to their stack-slots with the new SP.\n-  \/\/ Thread is in rdi already.\n-  \/\/\n-  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode);\n-  \/\/\n-  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n-\n-  \/\/ sp should already be aligned\n-  __ mov(c_rarg0, rthread);\n-  __ movw(c_rarg1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n-  __ lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n-  __ blr(rscratch1);\n-\n-  \/\/ Set an oopmap for the call site\n-  \/\/ Use the same PC we used for the last java frame\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  \/\/ Clear fp AND pc\n-  __ reset_last_Java_frame(true);\n-\n-  \/\/ Pop self-frame.\n-  __ leave();                 \/\/ Epilog\n-\n-  \/\/ Jump to interpreter\n-  __ ret(lr);\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n-                                                 SimpleRuntimeFrame::framesize >> 1);\n-}\n-#endif \/\/ COMPILER2\n-\n@@ -2986,138 +2767,0 @@\n-\n-#ifdef COMPILER2\n-\/\/ This is here instead of runtime_aarch64_64.cpp because it uses SimpleRuntimeFrame\n-\/\/\n-\/\/------------------------------generate_exception_blob---------------------------\n-\/\/ creates exception blob at the end\n-\/\/ Using exception blob, this code is jumped from a compiled method.\n-\/\/ (see emit_exception_handler in x86_64.ad file)\n-\/\/\n-\/\/ Given an exception pc at a call we call into the runtime for the\n-\/\/ handler in this method. This handler might merely restore state\n-\/\/ (i.e. callee save registers) unwind the frame and jump to the\n-\/\/ exception handler for the nmethod if there is no Java level handler\n-\/\/ for the nmethod.\n-\/\/\n-\/\/ This code is entered with a jmp.\n-\/\/\n-\/\/ Arguments:\n-\/\/   r0: exception oop\n-\/\/   r3: exception pc\n-\/\/\n-\/\/ Results:\n-\/\/   r0: exception oop\n-\/\/   r3: exception pc in caller or ???\n-\/\/   destination: exception handler of caller\n-\/\/\n-\/\/ Note: the exception pc MUST be at a call (precise debug information)\n-\/\/       Registers r0, r3, r2, r4, r5, r8-r11 are not callee saved.\n-\/\/\n-\n-void OptoRuntime::generate_exception_blob() {\n-  assert(!OptoRuntime::is_callee_saved_register(R3_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(R0_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(R2_num), \"\");\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-\n-  \/\/ TODO check various assumptions made here\n-  \/\/\n-  \/\/ make sure we do so before running this\n-\n-  address start = __ pc();\n-\n-  \/\/ push rfp and retaddr by hand\n-  \/\/ Exception pc is 'return address' for stack walker\n-  __ protect_return_address();\n-  __ stp(rfp, lr, Address(__ pre(sp, -2 * wordSize)));\n-  \/\/ there are no callee save registers and we don't expect an\n-  \/\/ arg reg save area\n-#ifndef PRODUCT\n-  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n-#endif\n-  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n-  \/\/ handle_exception call, since we do not want to make any assumption\n-  \/\/ about the size of the frame where the exception happened in.\n-  __ str(r0, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(r3, Address(rthread, JavaThread::exception_pc_offset()));\n-\n-  \/\/ This call does all the hard work.  It checks if an exception handler\n-  \/\/ exists in the method.\n-  \/\/ If so, it returns the handler address.\n-  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n-  \/\/ registers of the frame being removed.\n-  \/\/\n-  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n-  \/\/\n-  \/\/ n.b. 1 gp arg, 0 fp args, integral return type\n-\n-  \/\/ the stack should always be aligned\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(sp, noreg, the_pc, rscratch1);\n-  __ mov(c_rarg0, rthread);\n-  __ lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C)));\n-  __ blr(rscratch1);\n-  \/\/ handle_exception_C is a special VM call which does not require an explicit\n-  \/\/ instruction sync afterwards.\n-\n-  \/\/ May jump to SVE compiled code\n-  __ reinitialize_ptrue();\n-\n-  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n-  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n-  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n-  \/\/ handle_exception_stub), since they were restored when we got the\n-  \/\/ exception.\n-\n-  OopMapSet* oop_maps = new OopMapSet();\n-\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ Restore callee-saved registers\n-\n-  \/\/ rfp is an implicitly saved callee saved register (i.e. the calling\n-  \/\/ convention will save restore it in prolog\/epilog) Other than that\n-  \/\/ there are no callee save registers now that adapter frames are gone.\n-  \/\/ and we dont' expect an arg reg save area\n-  __ ldp(rfp, r3, Address(__ post(sp, 2 * wordSize)));\n-  __ authenticate_return_address(r3);\n-\n-  \/\/ r0: exception handler\n-\n-  \/\/ We have a handler in r0 (could be deopt blob).\n-  __ mov(r8, r0);\n-\n-  \/\/ Get the exception oop\n-  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n-  \/\/ Get the exception pc in case we are deoptimized\n-  __ ldr(r4, Address(rthread, JavaThread::exception_pc_offset()));\n-#ifdef ASSERT\n-  __ str(zr, Address(rthread, JavaThread::exception_handler_pc_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n-#endif\n-  \/\/ Clear the exception oop so GC no longer processes it as a root.\n-  __ str(zr, Address(rthread, JavaThread::exception_oop_offset()));\n-\n-  \/\/ r0: exception oop\n-  \/\/ r8:  exception handler\n-  \/\/ r4: exception pc\n-  \/\/ Jump to handler\n-\n-  __ br(r8);\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  \/\/ Set exception blob\n-  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n-}\n-\n-#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":359,"binary":false,"changes":361,"status":"modified"},{"patch":"@@ -7048,1 +7048,1 @@\n-    __ lea(rscratch1, ExternalAddress(StubRoutines::throw_StackOverflowError_entry()));\n+    __ lea(rscratch1, RuntimeAddress(StubRoutines::throw_StackOverflowError_entry()));\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1340,2 +1340,2 @@\n-    address unsatisfied = (SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n-    __ mov(rscratch2, unsatisfied);\n+    ExternalAddress unsatisfied(SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n+    __ lea(rscratch2, unsatisfied);\n@@ -1416,9 +1416,2 @@\n-    \/\/ We need an acquire here to ensure that any subsequent load of the\n-    \/\/ global SafepointSynchronize::_state flag is ordered after this load\n-    \/\/ of the thread-local polling word.  We don't want this poll to\n-    \/\/ return false (i.e. not safepointing) and a later poll of the global\n-    \/\/ SafepointSynchronize::_state spuriously to return true.\n-    \/\/\n-    \/\/ This is to avoid a race when we're in a native->Java transition\n-    \/\/ racing the code which wakes up from a safepoint.\n-    __ safepoint_poll(L, true \/* at_return *\/, true \/* acquire *\/, false \/* in_nmethod *\/);\n+    \/\/ No need for acquire as Java threads always disarm themselves.\n+    __ safepoint_poll(L, true \/* at_return *\/, false \/* acquire *\/, false \/* in_nmethod *\/);\n@@ -1435,1 +1428,1 @@\n-    __ mov(rscratch2, CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans));\n+    __ lea(rscratch2, RuntimeAddress(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans)));\n@@ -1485,1 +1478,1 @@\n-    __ mov(rscratch2, CAST_FROM_FN_PTR(address, SharedRuntime::reguard_yellow_pages));\n+    __ lea(rscratch2, RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::reguard_yellow_pages)));\n@@ -2088,1 +2081,1 @@\n-  __ bl(Interpreter::trace_code(t->tos_in()));\n+  __ bl(RuntimeAddress(Interpreter::trace_code(t->tos_in())));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -609,1 +609,1 @@\n-    if (strcasestr(line, virt1) != 0) {\n+    if (strcasestr(line, virt1) != nullptr) {\n@@ -614,1 +614,1 @@\n-    if (virt2 != nullptr && strcasestr(line, virt2) != 0) {\n+    if (virt2 != nullptr && strcasestr(line, virt2) != nullptr) {\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8956,0 +8956,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b    forward_exception_stub\" %}\n+  ins_encode %{\n+    \/\/ OK to trash Rtemp, because Rtemp is used by stub\n+    __ jump(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type, Rtemp);\n+  %}\n+  ins_pipe(tail_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-#endif\n@@ -44,0 +43,137 @@\n+\/\/------------------------------generate_uncommon_trap_blob--------------------\n+\/\/ Ought to generate an ideal graph & compile, but here's some ASM\n+\/\/ instead.\n+void OptoRuntime::generate_uncommon_trap_blob() {\n+  \/\/ allocate space for the code\n+  ResourceMark rm;\n+\n+  \/\/ setup code generation tools\n+#ifdef _LP64\n+  CodeBuffer buffer(\"uncommon_trap_blob\", 2700, 512);\n+#else\n+  \/\/ Measured 8\/7\/03 at 660 in 32bit debug build\n+  CodeBuffer buffer(\"uncommon_trap_blob\", 2000, 512);\n+#endif\n+  \/\/ bypassed when code generation useless\n+  MacroAssembler* masm               = new MacroAssembler(&buffer);\n+  const Register Rublock = R6;\n+  const Register Rsender = altFP_7_11;\n+  assert_different_registers(Rublock, Rsender, Rexception_obj, R0, R1, R2, R3, R8, Rtemp);\n+\n+  \/\/\n+  \/\/ This is the entry point for all traps the compiler takes when it thinks\n+  \/\/ it cannot handle further execution of compilation code. The frame is\n+  \/\/ deoptimized in these cases and converted into interpreter frames for\n+  \/\/ execution\n+  \/\/ The steps taken by this frame are as follows:\n+  \/\/   - push a fake \"unpack_frame\"\n+  \/\/   - call the C routine Deoptimization::uncommon_trap (this function\n+  \/\/     packs the current compiled frame into vframe arrays and returns\n+  \/\/     information about the number and size of interpreter frames which\n+  \/\/     are equivalent to the frame which is being deoptimized)\n+  \/\/   - deallocate the \"unpack_frame\"\n+  \/\/   - deallocate the deoptimization frame\n+  \/\/   - in a loop using the information returned in the previous step\n+  \/\/     push interpreter frames;\n+  \/\/   - create a dummy \"unpack_frame\"\n+  \/\/   - call the C routine: Deoptimization::unpack_frames (this function\n+  \/\/     lays out values on the interpreter frame which was just created)\n+  \/\/   - deallocate the dummy unpack_frame\n+  \/\/   - return to the interpreter entry point\n+  \/\/\n+  \/\/  Refer to the following methods for more information:\n+  \/\/   - Deoptimization::uncommon_trap\n+  \/\/   - Deoptimization::unpack_frame\n+\n+  \/\/ the unloaded class index is in R0 (first parameter to this blob)\n+\n+  __ raw_push(FP, LR);\n+  __ set_last_Java_frame(SP, FP, false, Rtemp);\n+  __ mov(R2, Deoptimization::Unpack_uncommon_trap);\n+  __ mov(R1, R0);\n+  __ mov(R0, Rthread);\n+  __ call(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n+  __ mov(Rublock, R0);\n+  __ reset_last_Java_frame(Rtemp);\n+  __ raw_pop(FP, LR);\n+\n+#ifdef ASSERT\n+  { Label L;\n+    __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::unpack_kind_offset()));\n+    __ cmp_32(Rtemp, Deoptimization::Unpack_uncommon_trap);\n+    __ b(L, eq);\n+    __ stop(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n+    __ bind(L);\n+  }\n+#endif\n+\n+\n+  \/\/ Set initial stack state before pushing interpreter frames\n+  __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::size_of_deoptimized_frame_offset()));\n+  __ ldr(R2, Address(Rublock, Deoptimization::UnrollBlock::frame_pcs_offset()));\n+  __ ldr(R3, Address(Rublock, Deoptimization::UnrollBlock::frame_sizes_offset()));\n+\n+  __ add(SP, SP, Rtemp);\n+\n+  \/\/ See if it is enough stack to push deoptimized frames.\n+#ifdef ASSERT\n+  \/\/ Compilers generate code that bang the stack by as much as the\n+  \/\/ interpreter would need. So this stack banging should never\n+  \/\/ trigger a fault. Verify that it does not on non product builds.\n+  \/\/\n+  \/\/ The compiled method that we are deoptimizing was popped from the stack.\n+  \/\/ If the stack bang results in a stack overflow, we don't return to the\n+  \/\/ method that is being deoptimized. The stack overflow exception is\n+  \/\/ propagated to the caller of the deoptimized method. Need to get the pc\n+  \/\/ from the caller in LR and restore FP.\n+  __ ldr(LR, Address(R2, 0));\n+  __ ldr(FP, Address(Rublock, Deoptimization::UnrollBlock::initial_info_offset()));\n+  __ ldr_s32(R8, Address(Rublock, Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n+  __ arm_stack_overflow_check(R8, Rtemp);\n+#endif\n+  __ ldr_s32(R8, Address(Rublock, Deoptimization::UnrollBlock::number_of_frames_offset()));\n+  __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::caller_adjustment_offset()));\n+  __ mov(Rsender, SP);\n+  __ sub(SP, SP, Rtemp);\n+  \/\/  __ ldr(FP, Address(FP));\n+  __ ldr(FP, Address(Rublock, Deoptimization::UnrollBlock::initial_info_offset()));\n+\n+  \/\/ Push interpreter frames in a loop\n+  Label loop;\n+  __ bind(loop);\n+  __ ldr(LR, Address(R2, wordSize, post_indexed));         \/\/ load frame pc\n+  __ ldr(Rtemp, Address(R3, wordSize, post_indexed));      \/\/ load frame size\n+\n+  __ raw_push(FP, LR);                                     \/\/ create new frame\n+  __ mov(FP, SP);\n+  __ sub(Rtemp, Rtemp, 2*wordSize);\n+\n+  __ sub(SP, SP, Rtemp);\n+\n+  __ str(Rsender, Address(FP, frame::interpreter_frame_sender_sp_offset * wordSize));\n+  __ mov(LR, 0);\n+  __ str(LR, Address(FP, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ subs(R8, R8, 1);                               \/\/ decrement counter\n+  __ mov(Rsender, SP);\n+  __ b(loop, ne);\n+\n+  \/\/ Re-push self-frame\n+  __ ldr(LR, Address(R2));\n+  __ raw_push(FP, LR);\n+  __ mov(FP, SP);\n+\n+  \/\/ Call unpack_frames with proper arguments\n+  __ mov(R0, Rthread);\n+  __ mov(R1, Deoptimization::Unpack_uncommon_trap);\n+  __ set_last_Java_frame(SP, FP, true, Rtemp);\n+  __ call_VM_leaf(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n+  \/\/  oop_maps->add_gc_map(__ pc() - start, new OopMap(frame_size_in_words, 0));\n+  __ reset_last_Java_frame(Rtemp);\n+\n+  __ mov(SP, FP);\n+  __ pop(RegisterSet(FP) | RegisterSet(PC));\n+\n+  masm->flush();\n+  _uncommon_trap_blob = UncommonTrapBlob::create(&buffer, nullptr, 2 \/* LR+FP *\/);\n+}\n+\n@@ -151,0 +287,3 @@\n+\n+#endif \/\/ COMPILER2\n+\n","filename":"src\/hotspot\/cpu\/arm\/runtime_arm.cpp","additions":140,"deletions":1,"binary":false,"changes":141,"status":"modified"},{"patch":"@@ -1598,141 +1598,0 @@\n-#ifdef COMPILER2\n-\n-\/\/------------------------------generate_uncommon_trap_blob--------------------\n-\/\/ Ought to generate an ideal graph & compile, but here's some ASM\n-\/\/ instead.\n-void SharedRuntime::generate_uncommon_trap_blob() {\n-  \/\/ allocate space for the code\n-  ResourceMark rm;\n-\n-  \/\/ setup code generation tools\n-#ifdef _LP64\n-  CodeBuffer buffer(\"uncommon_trap_blob\", 2700, 512);\n-#else\n-  \/\/ Measured 8\/7\/03 at 660 in 32bit debug build\n-  CodeBuffer buffer(\"uncommon_trap_blob\", 2000, 512);\n-#endif\n-  \/\/ bypassed when code generation useless\n-  MacroAssembler* masm               = new MacroAssembler(&buffer);\n-  const Register Rublock = R6;\n-  const Register Rsender = altFP_7_11;\n-  assert_different_registers(Rublock, Rsender, Rexception_obj, R0, R1, R2, R3, R8, Rtemp);\n-\n-  \/\/\n-  \/\/ This is the entry point for all traps the compiler takes when it thinks\n-  \/\/ it cannot handle further execution of compilation code. The frame is\n-  \/\/ deoptimized in these cases and converted into interpreter frames for\n-  \/\/ execution\n-  \/\/ The steps taken by this frame are as follows:\n-  \/\/   - push a fake \"unpack_frame\"\n-  \/\/   - call the C routine Deoptimization::uncommon_trap (this function\n-  \/\/     packs the current compiled frame into vframe arrays and returns\n-  \/\/     information about the number and size of interpreter frames which\n-  \/\/     are equivalent to the frame which is being deoptimized)\n-  \/\/   - deallocate the \"unpack_frame\"\n-  \/\/   - deallocate the deoptimization frame\n-  \/\/   - in a loop using the information returned in the previous step\n-  \/\/     push interpreter frames;\n-  \/\/   - create a dummy \"unpack_frame\"\n-  \/\/   - call the C routine: Deoptimization::unpack_frames (this function\n-  \/\/     lays out values on the interpreter frame which was just created)\n-  \/\/   - deallocate the dummy unpack_frame\n-  \/\/   - return to the interpreter entry point\n-  \/\/\n-  \/\/  Refer to the following methods for more information:\n-  \/\/   - Deoptimization::uncommon_trap\n-  \/\/   - Deoptimization::unpack_frame\n-\n-  \/\/ the unloaded class index is in R0 (first parameter to this blob)\n-\n-  __ raw_push(FP, LR);\n-  __ set_last_Java_frame(SP, FP, false, Rtemp);\n-  __ mov(R2, Deoptimization::Unpack_uncommon_trap);\n-  __ mov(R1, R0);\n-  __ mov(R0, Rthread);\n-  __ call(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n-  __ mov(Rublock, R0);\n-  __ reset_last_Java_frame(Rtemp);\n-  __ raw_pop(FP, LR);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::unpack_kind_offset()));\n-    __ cmp_32(Rtemp, Deoptimization::Unpack_uncommon_trap);\n-    __ b(L, eq);\n-    __ stop(\"SharedRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n-    __ bind(L);\n-  }\n-#endif\n-\n-\n-  \/\/ Set initial stack state before pushing interpreter frames\n-  __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::size_of_deoptimized_frame_offset()));\n-  __ ldr(R2, Address(Rublock, Deoptimization::UnrollBlock::frame_pcs_offset()));\n-  __ ldr(R3, Address(Rublock, Deoptimization::UnrollBlock::frame_sizes_offset()));\n-\n-  __ add(SP, SP, Rtemp);\n-\n-  \/\/ See if it is enough stack to push deoptimized frames.\n-#ifdef ASSERT\n-  \/\/ Compilers generate code that bang the stack by as much as the\n-  \/\/ interpreter would need. So this stack banging should never\n-  \/\/ trigger a fault. Verify that it does not on non product builds.\n-  \/\/\n-  \/\/ The compiled method that we are deoptimizing was popped from the stack.\n-  \/\/ If the stack bang results in a stack overflow, we don't return to the\n-  \/\/ method that is being deoptimized. The stack overflow exception is\n-  \/\/ propagated to the caller of the deoptimized method. Need to get the pc\n-  \/\/ from the caller in LR and restore FP.\n-  __ ldr(LR, Address(R2, 0));\n-  __ ldr(FP, Address(Rublock, Deoptimization::UnrollBlock::initial_info_offset()));\n-  __ ldr_s32(R8, Address(Rublock, Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n-  __ arm_stack_overflow_check(R8, Rtemp);\n-#endif\n-  __ ldr_s32(R8, Address(Rublock, Deoptimization::UnrollBlock::number_of_frames_offset()));\n-  __ ldr_s32(Rtemp, Address(Rublock, Deoptimization::UnrollBlock::caller_adjustment_offset()));\n-  __ mov(Rsender, SP);\n-  __ sub(SP, SP, Rtemp);\n-  \/\/  __ ldr(FP, Address(FP));\n-  __ ldr(FP, Address(Rublock, Deoptimization::UnrollBlock::initial_info_offset()));\n-\n-  \/\/ Push interpreter frames in a loop\n-  Label loop;\n-  __ bind(loop);\n-  __ ldr(LR, Address(R2, wordSize, post_indexed));         \/\/ load frame pc\n-  __ ldr(Rtemp, Address(R3, wordSize, post_indexed));      \/\/ load frame size\n-\n-  __ raw_push(FP, LR);                                     \/\/ create new frame\n-  __ mov(FP, SP);\n-  __ sub(Rtemp, Rtemp, 2*wordSize);\n-\n-  __ sub(SP, SP, Rtemp);\n-\n-  __ str(Rsender, Address(FP, frame::interpreter_frame_sender_sp_offset * wordSize));\n-  __ mov(LR, 0);\n-  __ str(LR, Address(FP, frame::interpreter_frame_last_sp_offset * wordSize));\n-  __ subs(R8, R8, 1);                               \/\/ decrement counter\n-  __ mov(Rsender, SP);\n-  __ b(loop, ne);\n-\n-  \/\/ Re-push self-frame\n-  __ ldr(LR, Address(R2));\n-  __ raw_push(FP, LR);\n-  __ mov(FP, SP);\n-\n-  \/\/ Call unpack_frames with proper arguments\n-  __ mov(R0, Rthread);\n-  __ mov(R1, Deoptimization::Unpack_uncommon_trap);\n-  __ set_last_Java_frame(SP, FP, true, Rtemp);\n-  __ call_VM_leaf(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n-  \/\/  oop_maps->add_gc_map(__ pc() - start, new OopMap(frame_size_in_words, 0));\n-  __ reset_last_Java_frame(Rtemp);\n-\n-  __ mov(SP, FP);\n-  __ pop(RegisterSet(FP) | RegisterSet(PC));\n-\n-  masm->flush();\n-  _uncommon_trap_blob = UncommonTrapBlob::create(&buffer, nullptr, 2 \/* LR+FP *\/);\n-}\n-\n-#endif \/\/ COMPILER2\n-\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":0,"deletions":141,"binary":false,"changes":141,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -241,1 +241,1 @@\n-  __ lwz(tmp2, in_bytes(ClassLoaderData::keep_alive_offset()), tmp1_class_loader_data);\n+  __ lwz(tmp2, in_bytes(ClassLoaderData::keep_alive_ref_count_offset()), tmp1_class_loader_data);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -14537,0 +14537,15 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"Jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ b64_patchable(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -3081,1 +3081,1 @@\n-void SharedRuntime::generate_uncommon_trap_blob() {\n+void OptoRuntime::generate_uncommon_trap_blob() {\n@@ -3147,1 +3147,1 @@\n-  __ asm_assert_eq(\"SharedRuntime::generate_deopt_blob: expected Unpack_uncommon_trap\");\n+  __ asm_assert_eq(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1831,0 +1831,13 @@\n+#define INSN(NAME, op, width, umop, mop, mew, nf)                                               \\\n+  void NAME(VectorRegister Vd_or_Vs3, Register Rs1, VectorMask vm = unmasked) { \\\n+    patch_VLdSt(op, Vd_or_Vs3, width, Rs1, umop, vm, mop, mew, nf);                         \\\n+  }\n+\n+  \/\/ Vector Unit-Stride Segment Load Instructions\n+  INSN(vlseg3e8_v, 0b0000111, 0b000, 0b00000, 0b00, 0b0, g3);\n+\n+  \/\/ Vector Unit-Stride Segment Store Instructions\n+  INSN(vsseg4e8_v, 0b0100111, 0b000, 0b00000, 0b00, 0b0, g4);\n+\n+#undef INSN\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -545,1 +545,1 @@\n-      assert(c->as_jobject() == 0, \"should be\");\n+      assert(c->as_jobject() == nullptr, \"should be\");\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1069,1 +1069,1 @@\n-const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); return 0; }\n+const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); }\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-  assert(_pc == pc_old || pc == pc_old || pc_old == 0, \"must be\");\n+  assert(_pc == pc_old || pc == pc_old || pc_old == nullptr, \"must be\");\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -329,1 +329,1 @@\n-  __ lwu(t1, Address(t0, ClassLoaderData::keep_alive_offset()));\n+  __ lwu(t1, Address(t0, ClassLoaderData::keep_alive_ref_count_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,6 +176,1 @@\n-    ExternalAddress target(slow_case_addr);\n-    __ relocate(target.rspec(), [&] {\n-      int32_t offset;\n-      __ la(t0, target.target(), offset);\n-      __ jalr(t0, offset);\n-    });\n+    __ rt_call(slow_case_addr);\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -550,1 +550,1 @@\n-  ExternalAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n+  RuntimeAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n@@ -595,1 +595,1 @@\n-  ExternalAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n+  RuntimeAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n@@ -3976,2 +3976,2 @@\n-  addi(t0, r_bitmap, (u1)1);\n-  beqz(t0, L_bitmap_full);\n+  subw(t0, r_array_length, Klass::SECONDARY_SUPERS_TABLE_SIZE - 2);\n+  bgtz(t0, L_bitmap_full);\n@@ -4133,2 +4133,2 @@\n-    \/\/ testing if reserved zone needs to be enabled\n-    Label no_reserved_zone_enabling;\n+  \/\/ testing if reserved zone needs to be enabled\n+  Label no_reserved_zone_enabling;\n@@ -4136,2 +4136,2 @@\n-    ld(t0, Address(xthread, JavaThread::reserved_stack_activation_offset()));\n-    bltu(sp, t0, no_reserved_zone_enabling);\n+  ld(t0, Address(xthread, JavaThread::reserved_stack_activation_offset()));\n+  bltu(sp, t0, no_reserved_zone_enabling);\n@@ -4139,4 +4139,4 @@\n-    enter();   \/\/ RA and FP are live.\n-    mv(c_rarg0, xthread);\n-    rt_call(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n-    leave();\n+  enter();   \/\/ RA and FP are live.\n+  mv(c_rarg0, xthread);\n+  rt_call(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n+  leave();\n@@ -4144,10 +4144,6 @@\n-    \/\/ We have already removed our own frame.\n-    \/\/ throw_delayed_StackOverflowError will think that it's been\n-    \/\/ called by our caller.\n-    RuntimeAddress target(StubRoutines::throw_delayed_StackOverflowError_entry());\n-    relocate(target.rspec(), [&] {\n-      int32_t offset;\n-      movptr(t0, target.target(), offset);\n-      jr(t0, offset);\n-    });\n-    should_not_reach_here();\n+  \/\/ We have already removed our own frame.\n+  \/\/ throw_delayed_StackOverflowError will think that it's been\n+  \/\/ called by our caller.\n+  la(t0, RuntimeAddress(StubRoutines::throw_delayed_StackOverflowError_entry()));\n+  jr(t0);\n+  should_not_reach_here();\n@@ -4155,1 +4151,1 @@\n-    bind(no_reserved_zone_enabling);\n+  bind(no_reserved_zone_enabling);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -688,1 +688,1 @@\n-  if ((dest == (address) this) || dest == 0) {\n+  if ((dest == (address) this) || dest == nullptr) {\n@@ -717,1 +717,1 @@\n-  if ((dest == (address) this) || dest == 0) {\n+  if ((dest == (address) this) || dest == nullptr) {\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-reg_def R2      ( NS,  SOE, Op_RegI, 2,  x2->as_VMReg()         ); \/\/ sp\n-reg_def R2_H    ( NS,  SOE, Op_RegI, 2,  x2->as_VMReg()->next() );\n+reg_def R2      ( NS,  NS,  Op_RegI, 2,  x2->as_VMReg()         ); \/\/ sp\n+reg_def R2_H    ( NS,  NS,  Op_RegI, 2,  x2->as_VMReg()->next() );\n@@ -10620,0 +10620,16 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  ins_cost(BRANCH_COST);\n+\n+  format %{ \"j forward_exception_stub\\t#@ForwardException\" %}\n+\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,382 @@\n+\/*\n+ * Copyright (c) 2024, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#ifdef COMPILER2\n+#include \"asm\/macroAssembler.hpp\"\n+#include \"asm\/macroAssembler.inline.hpp\"\n+#include \"code\/vmreg.hpp\"\n+#include \"interpreter\/interpreter.hpp\"\n+#include \"opto\/runtime.hpp\"\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"runtime\/vframeArray.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"vmreg_riscv.inline.hpp\"\n+\n+class SimpleRuntimeFrame {\n+public:\n+\n+  \/\/ Most of the runtime stubs have this simple frame layout.\n+  \/\/ This class exists to make the layout shared in one place.\n+  \/\/ Offsets are for compiler stack slots, which are jints.\n+  enum layout {\n+    \/\/ The frame sender code expects that fp will be in the \"natural\" place and\n+    \/\/ will override any oopMap setting for it. We must therefore force the layout\n+    \/\/ so that it agrees with the frame sender code.\n+    \/\/ we don't expect any arg reg save area so riscv asserts that\n+    \/\/ frame::arg_reg_save_area_bytes == 0\n+    fp_off = 0, fp_off2,\n+    return_off, return_off2,\n+    framesize\n+  };\n+};\n+\n+#define __ masm->\n+\n+\/\/------------------------------generate_uncommon_trap_blob--------------------\n+void OptoRuntime::generate_uncommon_trap_blob() {\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+  assert_cond(masm != nullptr);\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  address start = __ pc();\n+\n+  \/\/ Push self-frame.  We get here with a return address in RA\n+  \/\/ and sp should be 16 byte aligned\n+  \/\/ push fp and retaddr by hand\n+  __ addi(sp, sp, -2 * wordSize);\n+  __ sd(ra, Address(sp, wordSize));\n+  __ sd(fp, Address(sp, 0));\n+  \/\/ we don't expect an arg reg save area\n+#ifndef PRODUCT\n+  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n+#endif\n+  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n+  \/\/ runtime expects it.\n+  __ sign_extend(c_rarg1, j_rarg0, 32);\n+\n+  \/\/ we need to set the past SP to the stack pointer of the stub frame\n+  \/\/ and the pc to the address where this runtime call will return\n+  \/\/ although actually any pc in this code blob will do).\n+  Label retaddr;\n+  __ set_last_Java_frame(sp, noreg, retaddr, t0);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ capture callee-saved registers as well as return values.\n+  \/\/\n+  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index, jint exec_mode)\n+  \/\/\n+  \/\/ n.b. 3 gp args, 0 fp args, integral return type\n+\n+  __ mv(c_rarg0, xthread);\n+  __ mv(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n+  __ rt_call(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n+  __ bind(retaddr);\n+\n+  \/\/ Set an oopmap for the call site\n+  OopMapSet* oop_maps = new OopMapSet();\n+  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n+  assert_cond(oop_maps != nullptr && map != nullptr);\n+\n+  \/\/ location of fp is known implicitly by the frame sender code\n+\n+  oop_maps->add_gc_map(__ pc() - start, map);\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ move UnrollBlock* into x14\n+  __ mv(x14, x10);\n+\n+#ifdef ASSERT\n+  { Label L;\n+    __ lwu(t0, Address(x14, Deoptimization::UnrollBlock::unpack_kind_offset()));\n+    __ mv(t1, Deoptimization::Unpack_uncommon_trap);\n+    __ beq(t0, t1, L);\n+    __ stop(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n+    __ bind(L);\n+  }\n+#endif\n+\n+  \/\/ Pop all the frames we must move\/replace.\n+  \/\/\n+  \/\/ Frame picture (youngest to oldest)\n+  \/\/ 1: self-frame (no frame link)\n+  \/\/ 2: deopting frame  (no frame link)\n+  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n+\n+  __ add(sp, sp, (SimpleRuntimeFrame::framesize) << LogBytesPerInt); \/\/ Epilog!\n+\n+  \/\/ Pop deoptimized frame (int)\n+  __ lwu(x12, Address(x14,\n+                      Deoptimization::UnrollBlock::\n+                      size_of_deoptimized_frame_offset()));\n+  __ sub(x12, x12, 2 * wordSize);\n+  __ add(sp, sp, x12);\n+  __ ld(fp, Address(sp, 0));\n+  __ ld(ra, Address(sp, wordSize));\n+  __ addi(sp, sp, 2 * wordSize);\n+  \/\/ RA should now be the return address to the caller (3) frame\n+\n+#ifdef ASSERT\n+  \/\/ Compilers generate code that bang the stack by as much as the\n+  \/\/ interpreter would need. So this stack banging should never\n+  \/\/ trigger a fault. Verify that it does not on non product builds.\n+  __ lwu(x11, Address(x14,\n+                      Deoptimization::UnrollBlock::\n+                      total_frame_sizes_offset()));\n+  __ bang_stack_size(x11, x12);\n+#endif\n+\n+  \/\/ Load address of array of frame pcs into x12 (address*)\n+  __ ld(x12, Address(x14,\n+                     Deoptimization::UnrollBlock::frame_pcs_offset()));\n+\n+  \/\/ Load address of array of frame sizes into x15 (intptr_t*)\n+  __ ld(x15, Address(x14,\n+                     Deoptimization::UnrollBlock::\n+                     frame_sizes_offset()));\n+\n+  \/\/ Counter\n+  __ lwu(x13, Address(x14,\n+                      Deoptimization::UnrollBlock::\n+                      number_of_frames_offset())); \/\/ (int)\n+\n+  \/\/ Now adjust the caller's stack to make up for the extra locals but\n+  \/\/ record the original sp so that we can save it in the skeletal\n+  \/\/ interpreter frame and the stack walking of interpreter_sender\n+  \/\/ will get the unextended sp value and not the \"real\" sp value.\n+\n+  const Register sender_sp = t1; \/\/ temporary register\n+\n+  __ lwu(x11, Address(x14,\n+                      Deoptimization::UnrollBlock::\n+                      caller_adjustment_offset())); \/\/ (int)\n+  __ mv(sender_sp, sp);\n+  __ sub(sp, sp, x11);\n+\n+  \/\/ Push interpreter frames in a loop\n+  Label loop;\n+  __ bind(loop);\n+  __ ld(x11, Address(x15, 0));       \/\/ Load frame size\n+  __ sub(x11, x11, 2 * wordSize);    \/\/ We'll push pc and fp by hand\n+  __ ld(ra, Address(x12, 0));        \/\/ Save return address\n+  __ enter();                        \/\/ and old fp & set new fp\n+  __ sub(sp, sp, x11);               \/\/ Prolog\n+  __ sd(sender_sp, Address(fp, frame::interpreter_frame_sender_sp_offset * wordSize)); \/\/ Make it walkable\n+  \/\/ This value is corrected by layout_activation_impl\n+  __ sd(zr, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ mv(sender_sp, sp);              \/\/ Pass sender_sp to next frame\n+  __ add(x15, x15, wordSize);        \/\/ Bump array pointer (sizes)\n+  __ add(x12, x12, wordSize);        \/\/ Bump array pointer (pcs)\n+  __ subw(x13, x13, 1);              \/\/ Decrement counter\n+  __ bgtz(x13, loop);\n+  __ ld(ra, Address(x12, 0));        \/\/ save final return address\n+  \/\/ Re-push self-frame\n+  __ enter();                        \/\/ & old fp & set new fp\n+\n+  \/\/ Use fp because the frames look interpreted now\n+  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n+  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(sp, fp, the_pc, t0);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ restore return values to their stack-slots with the new SP.\n+  \/\/\n+  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode)\n+  \/\/\n+\n+  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n+\n+  \/\/ sp should already be aligned\n+  __ mv(c_rarg0, xthread);\n+  __ mv(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n+  __ rt_call(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n+\n+  \/\/ Set an oopmap for the call site\n+  \/\/ Use the same PC we used for the last java frame\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  \/\/ Clear fp AND pc\n+  __ reset_last_Java_frame(true);\n+\n+  \/\/ Pop self-frame.\n+  __ leave();                 \/\/ Epilog\n+\n+  \/\/ Jump to interpreter\n+  __ ret();\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n+\n+  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n+                                                  SimpleRuntimeFrame::framesize >> 1);\n+}\n+\n+\/\/------------------------------generate_exception_blob---------------------------\n+\/\/ creates exception blob at the end\n+\/\/ Using exception blob, this code is jumped from a compiled method.\n+\/\/ (see emit_exception_handler in riscv.ad file)\n+\/\/\n+\/\/ Given an exception pc at a call we call into the runtime for the\n+\/\/ handler in this method. This handler might merely restore state\n+\/\/ (i.e. callee save registers) unwind the frame and jump to the\n+\/\/ exception handler for the nmethod if there is no Java level handler\n+\/\/ for the nmethod.\n+\/\/\n+\/\/ This code is entered with a jmp.\n+\/\/\n+\/\/ Arguments:\n+\/\/   x10: exception oop\n+\/\/   x13: exception pc\n+\/\/\n+\/\/ Results:\n+\/\/   x10: exception oop\n+\/\/   x13: exception pc in caller\n+\/\/   destination: exception handler of caller\n+\/\/\n+\/\/ Note: the exception pc MUST be at a call (precise debug information)\n+\/\/       Registers x10, x13, x12, x14, x15, t0 are not callee saved.\n+\/\/\n+\n+void OptoRuntime::generate_exception_blob() {\n+  assert(!OptoRuntime::is_callee_saved_register(R13_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(R10_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(R12_num), \"\");\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+  assert_cond(masm != nullptr);\n+\n+  \/\/ TODO check various assumptions made here\n+  \/\/\n+  \/\/ make sure we do so before running this\n+\n+  address start = __ pc();\n+\n+  \/\/ push fp and retaddr by hand\n+  \/\/ Exception pc is 'return address' for stack walker\n+  __ addi(sp, sp, -2 * wordSize);\n+  __ sd(ra, Address(sp, wordSize));\n+  __ sd(fp, Address(sp));\n+  \/\/ there are no callee save registers and we don't expect an\n+  \/\/ arg reg save area\n+#ifndef PRODUCT\n+  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n+#endif\n+  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n+  \/\/ handle_exception call, since we do not want to make any assumption\n+  \/\/ about the size of the frame where the exception happened in.\n+  __ sd(x10, Address(xthread, JavaThread::exception_oop_offset()));\n+  __ sd(x13, Address(xthread, JavaThread::exception_pc_offset()));\n+\n+  \/\/ This call does all the hard work.  It checks if an exception handler\n+  \/\/ exists in the method.\n+  \/\/ If so, it returns the handler address.\n+  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n+  \/\/ registers of the frame being removed.\n+  \/\/\n+  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n+  \/\/\n+  \/\/ n.b. 1 gp arg, 0 fp args, integral return type\n+\n+  \/\/ the stack should always be aligned\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(sp, noreg, the_pc, t0);\n+  __ mv(c_rarg0, xthread);\n+  __ rt_call(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C));\n+\n+  \/\/ handle_exception_C is a special VM call which does not require an explicit\n+  \/\/ instruction sync afterwards.\n+\n+  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n+  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n+  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n+  \/\/ handle_exception_stub), since they were restored when we got the\n+  \/\/ exception.\n+\n+  OopMapSet* oop_maps = new OopMapSet();\n+  assert_cond(oop_maps != nullptr);\n+\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ Restore callee-saved registers\n+\n+  \/\/ fp is an implicitly saved callee saved register (i.e. the calling\n+  \/\/ convention will save restore it in prolog\/epilog) Other than that\n+  \/\/ there are no callee save registers now that adapter frames are gone.\n+  \/\/ and we dont' expect an arg reg save area\n+  __ ld(fp, Address(sp));\n+  __ ld(x13, Address(sp, wordSize));\n+  __ addi(sp, sp , 2 * wordSize);\n+\n+  \/\/ x10: exception handler\n+\n+  \/\/ We have a handler in x10 (could be deopt blob).\n+  __ mv(t0, x10);\n+\n+  \/\/ Get the exception oop\n+  __ ld(x10, Address(xthread, JavaThread::exception_oop_offset()));\n+  \/\/ Get the exception pc in case we are deoptimized\n+  __ ld(x14, Address(xthread, JavaThread::exception_pc_offset()));\n+#ifdef ASSERT\n+  __ sd(zr, Address(xthread, JavaThread::exception_handler_pc_offset()));\n+  __ sd(zr, Address(xthread, JavaThread::exception_pc_offset()));\n+#endif\n+  \/\/ Clear the exception oop so GC no longer processes it as a root.\n+  __ sd(zr, Address(xthread, JavaThread::exception_oop_offset()));\n+\n+  \/\/ x10: exception oop\n+  \/\/ t0:  exception handler\n+  \/\/ x14: exception pc\n+  \/\/ Jump to handler\n+\n+  __ jr(t0);\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n+\n+  \/\/ Set exception blob\n+  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n+}\n+#endif \/\/ COMPILER2\n+\n+\n","filename":"src\/hotspot\/cpu\/riscv\/runtime_riscv.cpp","additions":382,"deletions":0,"binary":false,"changes":382,"status":"added"},{"patch":"@@ -70,18 +70,0 @@\n-class SimpleRuntimeFrame {\n-public:\n-\n-  \/\/ Most of the runtime stubs have this simple frame layout.\n-  \/\/ This class exists to make the layout shared in one place.\n-  \/\/ Offsets are for compiler stack slots, which are jints.\n-  enum layout {\n-    \/\/ The frame sender code expects that fp will be in the \"natural\" place and\n-    \/\/ will override any oopMap setting for it. We must therefore force the layout\n-    \/\/ so that it agrees with the frame sender code.\n-    \/\/ we don't expect any arg reg save area so riscv asserts that\n-    \/\/ frame::arg_reg_save_area_bytes == 0\n-    fp_off = 0, fp_off2,\n-    return_off, return_off2,\n-    framesize\n-  };\n-};\n-\n@@ -2444,189 +2426,0 @@\n-#ifdef COMPILER2\n-\/\/------------------------------generate_uncommon_trap_blob--------------------\n-void SharedRuntime::generate_uncommon_trap_blob() {\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-  assert_cond(masm != nullptr);\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  address start = __ pc();\n-\n-  \/\/ Push self-frame.  We get here with a return address in RA\n-  \/\/ and sp should be 16 byte aligned\n-  \/\/ push fp and retaddr by hand\n-  __ addi(sp, sp, -2 * wordSize);\n-  __ sd(ra, Address(sp, wordSize));\n-  __ sd(fp, Address(sp, 0));\n-  \/\/ we don't expect an arg reg save area\n-#ifndef PRODUCT\n-  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n-#endif\n-  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n-  \/\/ runtime expects it.\n-  __ sign_extend(c_rarg1, j_rarg0, 32);\n-\n-  \/\/ we need to set the past SP to the stack pointer of the stub frame\n-  \/\/ and the pc to the address where this runtime call will return\n-  \/\/ although actually any pc in this code blob will do).\n-  Label retaddr;\n-  __ set_last_Java_frame(sp, noreg, retaddr, t0);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ capture callee-saved registers as well as return values.\n-  \/\/\n-  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index, jint exec_mode)\n-  \/\/\n-  \/\/ n.b. 3 gp args, 0 fp args, integral return type\n-\n-  __ mv(c_rarg0, xthread);\n-  __ mv(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n-  __ rt_call(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n-  __ bind(retaddr);\n-\n-  \/\/ Set an oopmap for the call site\n-  OopMapSet* oop_maps = new OopMapSet();\n-  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n-  assert_cond(oop_maps != nullptr && map != nullptr);\n-\n-  \/\/ location of fp is known implicitly by the frame sender code\n-\n-  oop_maps->add_gc_map(__ pc() - start, map);\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ move UnrollBlock* into x14\n-  __ mv(x14, x10);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    __ lwu(t0, Address(x14, Deoptimization::UnrollBlock::unpack_kind_offset()));\n-    __ mv(t1, Deoptimization::Unpack_uncommon_trap);\n-    __ beq(t0, t1, L);\n-    __ stop(\"SharedRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n-    __ bind(L);\n-  }\n-#endif\n-\n-  \/\/ Pop all the frames we must move\/replace.\n-  \/\/\n-  \/\/ Frame picture (youngest to oldest)\n-  \/\/ 1: self-frame (no frame link)\n-  \/\/ 2: deopting frame  (no frame link)\n-  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n-\n-  __ add(sp, sp, (SimpleRuntimeFrame::framesize) << LogBytesPerInt); \/\/ Epilog!\n-\n-  \/\/ Pop deoptimized frame (int)\n-  __ lwu(x12, Address(x14,\n-                      Deoptimization::UnrollBlock::\n-                      size_of_deoptimized_frame_offset()));\n-  __ sub(x12, x12, 2 * wordSize);\n-  __ add(sp, sp, x12);\n-  __ ld(fp, Address(sp, 0));\n-  __ ld(ra, Address(sp, wordSize));\n-  __ addi(sp, sp, 2 * wordSize);\n-  \/\/ RA should now be the return address to the caller (3) frame\n-\n-#ifdef ASSERT\n-  \/\/ Compilers generate code that bang the stack by as much as the\n-  \/\/ interpreter would need. So this stack banging should never\n-  \/\/ trigger a fault. Verify that it does not on non product builds.\n-  __ lwu(x11, Address(x14,\n-                      Deoptimization::UnrollBlock::\n-                      total_frame_sizes_offset()));\n-  __ bang_stack_size(x11, x12);\n-#endif\n-\n-  \/\/ Load address of array of frame pcs into x12 (address*)\n-  __ ld(x12, Address(x14,\n-                     Deoptimization::UnrollBlock::frame_pcs_offset()));\n-\n-  \/\/ Load address of array of frame sizes into x15 (intptr_t*)\n-  __ ld(x15, Address(x14,\n-                     Deoptimization::UnrollBlock::\n-                     frame_sizes_offset()));\n-\n-  \/\/ Counter\n-  __ lwu(x13, Address(x14,\n-                      Deoptimization::UnrollBlock::\n-                      number_of_frames_offset())); \/\/ (int)\n-\n-  \/\/ Now adjust the caller's stack to make up for the extra locals but\n-  \/\/ record the original sp so that we can save it in the skeletal\n-  \/\/ interpreter frame and the stack walking of interpreter_sender\n-  \/\/ will get the unextended sp value and not the \"real\" sp value.\n-\n-  const Register sender_sp = t1; \/\/ temporary register\n-\n-  __ lwu(x11, Address(x14,\n-                      Deoptimization::UnrollBlock::\n-                      caller_adjustment_offset())); \/\/ (int)\n-  __ mv(sender_sp, sp);\n-  __ sub(sp, sp, x11);\n-\n-  \/\/ Push interpreter frames in a loop\n-  Label loop;\n-  __ bind(loop);\n-  __ ld(x11, Address(x15, 0));       \/\/ Load frame size\n-  __ sub(x11, x11, 2 * wordSize);    \/\/ We'll push pc and fp by hand\n-  __ ld(ra, Address(x12, 0));        \/\/ Save return address\n-  __ enter();                        \/\/ and old fp & set new fp\n-  __ sub(sp, sp, x11);               \/\/ Prolog\n-  __ sd(sender_sp, Address(fp, frame::interpreter_frame_sender_sp_offset * wordSize)); \/\/ Make it walkable\n-  \/\/ This value is corrected by layout_activation_impl\n-  __ sd(zr, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n-  __ mv(sender_sp, sp);              \/\/ Pass sender_sp to next frame\n-  __ add(x15, x15, wordSize);        \/\/ Bump array pointer (sizes)\n-  __ add(x12, x12, wordSize);        \/\/ Bump array pointer (pcs)\n-  __ subw(x13, x13, 1);              \/\/ Decrement counter\n-  __ bgtz(x13, loop);\n-  __ ld(ra, Address(x12, 0));        \/\/ save final return address\n-  \/\/ Re-push self-frame\n-  __ enter();                        \/\/ & old fp & set new fp\n-\n-  \/\/ Use fp because the frames look interpreted now\n-  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n-  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(sp, fp, the_pc, t0);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ restore return values to their stack-slots with the new SP.\n-  \/\/\n-  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode)\n-  \/\/\n-\n-  \/\/ n.b. 2 gp args, 0 fp args, integral return type\n-\n-  \/\/ sp should already be aligned\n-  __ mv(c_rarg0, xthread);\n-  __ mv(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n-  __ rt_call(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n-\n-  \/\/ Set an oopmap for the call site\n-  \/\/ Use the same PC we used for the last java frame\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  \/\/ Clear fp AND pc\n-  __ reset_last_Java_frame(true);\n-\n-  \/\/ Pop self-frame.\n-  __ leave();                 \/\/ Epilog\n-\n-  \/\/ Jump to interpreter\n-  __ ret();\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n-                                                  SimpleRuntimeFrame::framesize >> 1);\n-}\n-#endif \/\/ COMPILER2\n-\n@@ -2838,136 +2631,0 @@\n-\n-#ifdef COMPILER2\n-\/\/------------------------------generate_exception_blob---------------------------\n-\/\/ creates exception blob at the end\n-\/\/ Using exception blob, this code is jumped from a compiled method.\n-\/\/ (see emit_exception_handler in riscv.ad file)\n-\/\/\n-\/\/ Given an exception pc at a call we call into the runtime for the\n-\/\/ handler in this method. This handler might merely restore state\n-\/\/ (i.e. callee save registers) unwind the frame and jump to the\n-\/\/ exception handler for the nmethod if there is no Java level handler\n-\/\/ for the nmethod.\n-\/\/\n-\/\/ This code is entered with a jmp.\n-\/\/\n-\/\/ Arguments:\n-\/\/   x10: exception oop\n-\/\/   x13: exception pc\n-\/\/\n-\/\/ Results:\n-\/\/   x10: exception oop\n-\/\/   x13: exception pc in caller\n-\/\/   destination: exception handler of caller\n-\/\/\n-\/\/ Note: the exception pc MUST be at a call (precise debug information)\n-\/\/       Registers x10, x13, x12, x14, x15, t0 are not callee saved.\n-\/\/\n-\n-void OptoRuntime::generate_exception_blob() {\n-  assert(!OptoRuntime::is_callee_saved_register(R13_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(R10_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(R12_num), \"\");\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-  assert_cond(masm != nullptr);\n-\n-  \/\/ TODO check various assumptions made here\n-  \/\/\n-  \/\/ make sure we do so before running this\n-\n-  address start = __ pc();\n-\n-  \/\/ push fp and retaddr by hand\n-  \/\/ Exception pc is 'return address' for stack walker\n-  __ addi(sp, sp, -2 * wordSize);\n-  __ sd(ra, Address(sp, wordSize));\n-  __ sd(fp, Address(sp));\n-  \/\/ there are no callee save registers and we don't expect an\n-  \/\/ arg reg save area\n-#ifndef PRODUCT\n-  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n-#endif\n-  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n-  \/\/ handle_exception call, since we do not want to make any assumption\n-  \/\/ about the size of the frame where the exception happened in.\n-  __ sd(x10, Address(xthread, JavaThread::exception_oop_offset()));\n-  __ sd(x13, Address(xthread, JavaThread::exception_pc_offset()));\n-\n-  \/\/ This call does all the hard work.  It checks if an exception handler\n-  \/\/ exists in the method.\n-  \/\/ If so, it returns the handler address.\n-  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n-  \/\/ registers of the frame being removed.\n-  \/\/\n-  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n-  \/\/\n-  \/\/ n.b. 1 gp arg, 0 fp args, integral return type\n-\n-  \/\/ the stack should always be aligned\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(sp, noreg, the_pc, t0);\n-  __ mv(c_rarg0, xthread);\n-  __ rt_call(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C));\n-\n-  \/\/ handle_exception_C is a special VM call which does not require an explicit\n-  \/\/ instruction sync afterwards.\n-\n-  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n-  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n-  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n-  \/\/ handle_exception_stub), since they were restored when we got the\n-  \/\/ exception.\n-\n-  OopMapSet* oop_maps = new OopMapSet();\n-  assert_cond(oop_maps != nullptr);\n-\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ Restore callee-saved registers\n-\n-  \/\/ fp is an implicitly saved callee saved register (i.e. the calling\n-  \/\/ convention will save restore it in prolog\/epilog) Other than that\n-  \/\/ there are no callee save registers now that adapter frames are gone.\n-  \/\/ and we dont' expect an arg reg save area\n-  __ ld(fp, Address(sp));\n-  __ ld(x13, Address(sp, wordSize));\n-  __ addi(sp, sp , 2 * wordSize);\n-\n-  \/\/ x10: exception handler\n-\n-  \/\/ We have a handler in x10 (could be deopt blob).\n-  __ mv(t0, x10);\n-\n-  \/\/ Get the exception oop\n-  __ ld(x10, Address(xthread, JavaThread::exception_oop_offset()));\n-  \/\/ Get the exception pc in case we are deoptimized\n-  __ ld(x14, Address(xthread, JavaThread::exception_pc_offset()));\n-#ifdef ASSERT\n-  __ sd(zr, Address(xthread, JavaThread::exception_handler_pc_offset()));\n-  __ sd(zr, Address(xthread, JavaThread::exception_pc_offset()));\n-#endif\n-  \/\/ Clear the exception oop so GC no longer processes it as a root.\n-  __ sd(zr, Address(xthread, JavaThread::exception_oop_offset()));\n-\n-  \/\/ x10: exception oop\n-  \/\/ t0:  exception handler\n-  \/\/ x14: exception pc\n-  \/\/ Jump to handler\n-\n-  __ jr(t0);\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  \/\/ Set exception blob\n-  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n-}\n-#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":0,"deletions":343,"binary":false,"changes":343,"status":"modified"},{"patch":"@@ -3777,1 +3777,1 @@\n-    __ la(t0, ExternalAddress(StubRoutines::throw_StackOverflowError_entry()));\n+    __ la(t0, RuntimeAddress(StubRoutines::throw_StackOverflowError_entry()));\n@@ -5106,0 +5106,219 @@\n+  \/**\n+   * vector registers:\n+   *   input VectorRegister's:  intputV1-V3, for m2 they could be v2, v4, v6, for m1 they could be v1, v2, v3\n+   *   index VectorRegister's:  idxV1-V4, for m2 they could be v8, v10, v12, v14, for m1 they could be v4, v5, v6, v7\n+   *   output VectorRegister's: outputV1-V4, for m2 they could be v16, v18, v20, v22, for m1 they could be v8, v9, v10, v11\n+   *\n+   * NOTE: each field will occupy a vector register group\n+   *\/\n+  void base64_vector_encode_round(Register src, Register dst, Register codec,\n+                    Register size, Register stepSrc, Register stepDst,\n+                    VectorRegister inputV1, VectorRegister inputV2, VectorRegister inputV3,\n+                    VectorRegister idxV1, VectorRegister idxV2, VectorRegister idxV3, VectorRegister idxV4,\n+                    VectorRegister outputV1, VectorRegister outputV2, VectorRegister outputV3, VectorRegister outputV4,\n+                    Assembler::LMUL lmul) {\n+    \/\/ set vector register type\/len\n+    __ vsetvli(x0, size, Assembler::e8, lmul);\n+\n+    \/\/ segmented load src into v registers: mem(src) => vr(3)\n+    __ vlseg3e8_v(inputV1, src);\n+\n+    \/\/ src = src + register_group_len_bytes * 3\n+    __ add(src, src, stepSrc);\n+\n+    \/\/ encoding\n+    \/\/   1. compute index into lookup table: vr(3) => vr(4)\n+    __ vsrl_vi(idxV1, inputV1, 2);\n+\n+    __ vsrl_vi(idxV2, inputV2, 2);\n+    __ vsll_vi(inputV1, inputV1, 6);\n+    __ vor_vv(idxV2, idxV2, inputV1);\n+    __ vsrl_vi(idxV2, idxV2, 2);\n+\n+    __ vsrl_vi(idxV3, inputV3, 4);\n+    __ vsll_vi(inputV2, inputV2, 4);\n+    __ vor_vv(idxV3, inputV2, idxV3);\n+    __ vsrl_vi(idxV3, idxV3, 2);\n+\n+    __ vsll_vi(idxV4, inputV3, 2);\n+    __ vsrl_vi(idxV4, idxV4, 2);\n+\n+    \/\/   2. indexed load: vr(4) => vr(4)\n+    __ vluxei8_v(outputV1, codec, idxV1);\n+    __ vluxei8_v(outputV2, codec, idxV2);\n+    __ vluxei8_v(outputV3, codec, idxV3);\n+    __ vluxei8_v(outputV4, codec, idxV4);\n+\n+    \/\/ segmented store encoded data in v registers back to dst: vr(4) => mem(dst)\n+    __ vsseg4e8_v(outputV1, dst);\n+\n+    \/\/ dst = dst + register_group_len_bytes * 4\n+    __ add(dst, dst, stepDst);\n+  }\n+\n+  \/**\n+   *  void j.u.Base64.Encoder.encodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL)\n+   *\n+   *  Input arguments:\n+   *  c_rarg0   - src, source array\n+   *  c_rarg1   - sp, src start offset\n+   *  c_rarg2   - sl, src end offset\n+   *  c_rarg3   - dst, dest array\n+   *  c_rarg4   - dp, dst start offset\n+   *  c_rarg5   - isURL, Base64 or URL character set\n+   *\/\n+  address generate_base64_encodeBlock() {\n+    alignas(64) static const char toBase64[64] = {\n+      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+      'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+      'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '\/'\n+    };\n+\n+    alignas(64) static const char toBase64URL[64] = {\n+      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+      'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+      'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n+    };\n+\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"encodeBlock\");\n+    address start = __ pc();\n+    __ enter();\n+\n+    Register src    = c_rarg0;\n+    Register soff   = c_rarg1;\n+    Register send   = c_rarg2;\n+    Register dst    = c_rarg3;\n+    Register doff   = c_rarg4;\n+    Register isURL  = c_rarg5;\n+\n+    Register codec  = c_rarg6;\n+    Register length = c_rarg7; \/\/ total length of src data in bytes\n+\n+    Label ProcessData, Exit;\n+\n+    \/\/ length should be multiple of 3\n+    __ sub(length, send, soff);\n+    \/\/ real src\/dst to process data\n+    __ add(src, src, soff);\n+    __ add(dst, dst, doff);\n+\n+    \/\/ load the codec base address\n+    __ la(codec, ExternalAddress((address) toBase64));\n+    __ beqz(isURL, ProcessData);\n+    __ la(codec, ExternalAddress((address) toBase64URL));\n+    __ BIND(ProcessData);\n+\n+    \/\/ vector version\n+    if (UseRVV) {\n+      Label ProcessM2, ProcessM1, ProcessScalar;\n+\n+      Register size      = soff;\n+      Register stepSrcM1 = send;\n+      Register stepSrcM2 = doff;\n+      Register stepDst   = isURL;\n+\n+      __ mv(size, MaxVectorSize * 2);\n+      __ mv(stepSrcM1, MaxVectorSize * 3);\n+      __ slli(stepSrcM2, stepSrcM1, 1);\n+      __ mv(stepDst, MaxVectorSize * 2 * 4);\n+\n+      __ blt(length, stepSrcM2, ProcessM1);\n+\n+      __ BIND(ProcessM2);\n+      base64_vector_encode_round(src, dst, codec,\n+                    size, stepSrcM2, stepDst,\n+                    v2, v4, v6,         \/\/ inputs\n+                    v8, v10, v12, v14,  \/\/ indexes\n+                    v16, v18, v20, v22, \/\/ outputs\n+                    Assembler::m2);\n+\n+      __ sub(length, length, stepSrcM2);\n+      __ bge(length, stepSrcM2, ProcessM2);\n+\n+      __ BIND(ProcessM1);\n+      __ blt(length, stepSrcM1, ProcessScalar);\n+\n+      __ srli(size, size, 1);\n+      __ srli(stepDst, stepDst, 1);\n+      base64_vector_encode_round(src, dst, codec,\n+                    size, stepSrcM1, stepDst,\n+                    v1, v2, v3,         \/\/ inputs\n+                    v4, v5, v6, v7,     \/\/ indexes\n+                    v8, v9, v10, v11,   \/\/ outputs\n+                    Assembler::m1);\n+      __ sub(length, length, stepSrcM1);\n+\n+      __ BIND(ProcessScalar);\n+    }\n+\n+    \/\/ scalar version\n+    {\n+      Register byte1 = soff, byte0 = send, byte2 = doff;\n+      Register combined24Bits = isURL;\n+\n+      __ beqz(length, Exit);\n+\n+      Label ScalarLoop;\n+      __ BIND(ScalarLoop);\n+      {\n+        \/\/ plain:   [byte0[7:0] : byte1[7:0] : byte2[7:0]] =>\n+        \/\/ encoded: [byte0[7:2] : byte0[1:0]+byte1[7:4] : byte1[3:0]+byte2[7:6] : byte2[5:0]]\n+\n+        \/\/ load 3 bytes src data\n+        __ lbu(byte0, Address(src, 0));\n+        __ lbu(byte1, Address(src, 1));\n+        __ lbu(byte2, Address(src, 2));\n+        __ addi(src, src, 3);\n+\n+        \/\/ construct 24 bits from 3 bytes\n+        __ slliw(byte0, byte0, 16);\n+        __ slliw(byte1, byte1, 8);\n+        __ orr(combined24Bits, byte0, byte1);\n+        __ orr(combined24Bits, combined24Bits, byte2);\n+\n+        \/\/ get codec index and encode(ie. load from codec by index)\n+        __ slliw(byte0, combined24Bits, 8);\n+        __ srliw(byte0, byte0, 26);\n+        __ add(byte0, codec, byte0);\n+        __ lbu(byte0, byte0);\n+\n+        __ slliw(byte1, combined24Bits, 14);\n+        __ srliw(byte1, byte1, 26);\n+        __ add(byte1, codec, byte1);\n+        __ lbu(byte1, byte1);\n+\n+        __ slliw(byte2, combined24Bits, 20);\n+        __ srliw(byte2, byte2, 26);\n+        __ add(byte2, codec, byte2);\n+        __ lbu(byte2, byte2);\n+\n+        __ andi(combined24Bits, combined24Bits, 0x3f);\n+        __ add(combined24Bits, codec, combined24Bits);\n+        __ lbu(combined24Bits, combined24Bits);\n+\n+        \/\/ store 4 bytes encoded data\n+        __ sb(byte0, Address(dst, 0));\n+        __ sb(byte1, Address(dst, 1));\n+        __ sb(byte2, Address(dst, 2));\n+        __ sb(combined24Bits, Address(dst, 3));\n+\n+        __ sub(length, length, 3);\n+        __ addi(dst, dst, 4);\n+        \/\/ loop back\n+        __ bnez(length, ScalarLoop);\n+      }\n+    }\n+\n+    __ BIND(Exit);\n+\n+    __ leave();\n+    __ ret();\n+\n+    return (address) start;\n+  }\n+\n@@ -5999,0 +6218,4 @@\n+    if (UseBASE64Intrinsics) {\n+      StubRoutines::_base64_encodeBlock = generate_base64_encodeBlock();\n+    }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":224,"deletions":1,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -1114,2 +1114,2 @@\n-    address unsatisfied = (SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n-    __ mv(t, unsatisfied);\n+    ExternalAddress unsatisfied(SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n+    __ la(t, unsatisfied);\n@@ -1818,1 +1818,1 @@\n-  __ call(Interpreter::trace_code(t->tos_in()));\n+  __ rt_call(Interpreter::trace_code(t->tos_in()));\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -268,0 +268,5 @@\n+  \/\/ Base64\n+  if (FLAG_IS_DEFAULT(UseBASE64Intrinsics)) {\n+    FLAG_SET_DEFAULT(UseBASE64Intrinsics, true);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -9520,0 +9520,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp() %{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+  format %{ \"Jmp    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ load_const_optimized(Z_R1_scratch, (address)StubRoutines::forward_exception_entry());\n+    __ z_br(Z_R1_scratch);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2709,1 +2709,1 @@\n-void SharedRuntime::generate_uncommon_trap_blob() {\n+void OptoRuntime::generate_uncommon_trap_blob() {\n@@ -2772,1 +2772,1 @@\n-  __ asm_assert(Assembler::bcondEqual, \"SharedRuntime::generate_deopt_blob: expected Unpack_uncommon_trap\", 0);\n+  __ asm_assert(Assembler::bcondEqual, \"OptoRuntime::generate_deopt_blob: expected Unpack_uncommon_trap\", 0);\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1783,0 +1783,1 @@\n+  assert(!adr._rspec.reloc()->is_data(), \"should not use ExternalAddress for call\");\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -282,1 +282,1 @@\n-  assert(_pc == *pc_addr || pc == *pc_addr || *pc_addr == 0, \"\");\n+  assert(_pc == *pc_addr || pc == *pc_addr || *pc_addr == nullptr, \"\");\n@@ -486,1 +486,1 @@\n-  if (fp() == 0 || (intptr_t(fp()) & (wordSize-1)) != 0) {\n+  if (fp() == nullptr || (intptr_t(fp()) & (wordSize-1)) != 0) {\n@@ -489,1 +489,1 @@\n-  if (sp() == 0 || (intptr_t(sp()) & (wordSize-1)) != 0) {\n+  if (sp() == nullptr || (intptr_t(sp()) & (wordSize-1)) != 0) {\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -426,1 +426,1 @@\n-  __ cmpl(Address(tmp1, ClassLoaderData::keep_alive_offset()), 0);\n+  __ cmpl(Address(tmp1, ClassLoaderData::keep_alive_ref_count_offset()), 0);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shared\/barrierSetAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -254,1 +254,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -353,1 +353,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_32.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n@@ -209,1 +209,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2332,1 +2332,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump\");\n@@ -2343,1 +2343,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump_cc\");\n@@ -4948,3 +4948,2 @@\n-  assert(Klass::SECONDARY_SUPERS_BITMAP_FULL == ~uintx(0), \"\");\n-  cmpq(r_bitmap, (int32_t)-1); \/\/ sign-extends immediate to 64-bit value\n-  jcc(Assembler::equal, L_huge);\n+  cmpl(r_array_length, (int32_t)Klass::SECONDARY_SUPERS_TABLE_SIZE - 2);\n+  jcc(Assembler::greater, L_huge);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (c) 2016, 2024, Intel Corporation. All rights reserved.\n@@ -692,1 +692,1 @@\n-  address pshuffle_byte_flip_mask_addr = 0;\n+  address pshuffle_byte_flip_mask_addr = nullptr;\n@@ -1250,1 +1250,1 @@\n-    address pshuffle_byte_flip_mask_addr = 0;\n+    address pshuffle_byte_flip_mask_addr = nullptr;\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_sha.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -575,1 +575,1 @@\n-      if (cur_frame.fp() != 0) {  \/\/ not walkable\n+      if (cur_frame.fp() != nullptr) { \/\/ not walkable\n","filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,174 @@\n+\/\/------------------------------generate_uncommon_trap_blob--------------------\n+void OptoRuntime::generate_uncommon_trap_blob() {\n+  \/\/ allocate space for the code\n+  ResourceMark rm;\n+  \/\/ setup code generation tools\n+  CodeBuffer   buffer(\"uncommon_trap_blob\", 512, 512);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+\n+  enum frame_layout {\n+    arg0_off,      \/\/ thread                     sp + 0 \/\/ Arg location for\n+    arg1_off,      \/\/ unloaded_class_index       sp + 1 \/\/ calling C\n+    arg2_off,      \/\/ exec_mode                  sp + 2\n+    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n+    \/\/ will override any oopMap setting for it. We must therefore force the layout\n+    \/\/ so that it agrees with the frame sender code.\n+    rbp_off,       \/\/ callee saved register      sp + 3\n+    return_off,    \/\/ slot for return address    sp + 4\n+    framesize\n+  };\n+\n+  address start = __ pc();\n+\n+  \/\/ Push self-frame.\n+  __ subptr(rsp, return_off*wordSize);     \/\/ Epilog!\n+\n+  \/\/ rbp, is an implicitly saved callee saved register (i.e. the calling\n+  \/\/ convention will save restore it in prolog\/epilog) Other than that\n+  \/\/ there are no callee save registers no that adapter frames are gone.\n+  __ movptr(Address(rsp, rbp_off*wordSize), rbp);\n+\n+  \/\/ Clear the floating point exception stack\n+  __ empty_FPU_stack();\n+\n+  \/\/ set last_Java_sp\n+  __ get_thread(rdx);\n+  __ set_last_Java_frame(rdx, noreg, noreg, nullptr, noreg);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ capture callee-saved registers as well as return values.\n+  __ movptr(Address(rsp, arg0_off*wordSize), rdx);\n+  \/\/ argument already in ECX\n+  __ movl(Address(rsp, arg1_off*wordSize),rcx);\n+  __ movl(Address(rsp, arg2_off*wordSize), Deoptimization::Unpack_uncommon_trap);\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap)));\n+\n+  \/\/ Set an oopmap for the call site\n+  OopMapSet *oop_maps = new OopMapSet();\n+  OopMap* map =  new OopMap( framesize, 0 );\n+  \/\/ No oopMap for rbp, it is known implicitly\n+\n+  oop_maps->add_gc_map( __ pc()-start, map);\n+\n+  __ get_thread(rcx);\n+\n+  __ reset_last_Java_frame(rcx, false);\n+\n+  \/\/ Load UnrollBlock into EDI\n+  __ movptr(rdi, rax);\n+\n+#ifdef ASSERT\n+  { Label L;\n+    __ cmpptr(Address(rdi, Deoptimization::UnrollBlock::unpack_kind_offset()),\n+            (int32_t)Deoptimization::Unpack_uncommon_trap);\n+    __ jcc(Assembler::equal, L);\n+    __ stop(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n+    __ bind(L);\n+  }\n+#endif\n+\n+  \/\/ Pop all the frames we must move\/replace.\n+  \/\/\n+  \/\/ Frame picture (youngest to oldest)\n+  \/\/ 1: self-frame (no frame link)\n+  \/\/ 2: deopting frame  (no frame link)\n+  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n+\n+  \/\/ Pop self-frame.  We have no frame, and must rely only on EAX and ESP.\n+  __ addptr(rsp,(framesize-1)*wordSize);     \/\/ Epilog!\n+\n+  \/\/ Pop deoptimized frame\n+  __ movl2ptr(rcx, Address(rdi,Deoptimization::UnrollBlock::size_of_deoptimized_frame_offset()));\n+  __ addptr(rsp, rcx);\n+\n+  \/\/ sp should be pointing at the return address to the caller (3)\n+\n+  \/\/ Pick up the initial fp we should save\n+  \/\/ restore rbp before stack bang because if stack overflow is thrown it needs to be pushed (and preserved)\n+  __ movptr(rbp, Address(rdi, Deoptimization::UnrollBlock::initial_info_offset()));\n+\n+#ifdef ASSERT\n+  \/\/ Compilers generate code that bang the stack by as much as the\n+  \/\/ interpreter would need. So this stack banging should never\n+  \/\/ trigger a fault. Verify that it does not on non product builds.\n+  __ movl(rbx, Address(rdi ,Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n+  __ bang_stack_size(rbx, rcx);\n+#endif\n+\n+  \/\/ Load array of frame pcs into ECX\n+  __ movl(rcx,Address(rdi,Deoptimization::UnrollBlock::frame_pcs_offset()));\n+\n+  __ pop(rsi); \/\/ trash the pc\n+\n+  \/\/ Load array of frame sizes into ESI\n+  __ movptr(rsi,Address(rdi,Deoptimization::UnrollBlock::frame_sizes_offset()));\n+\n+  Address counter(rdi, Deoptimization::UnrollBlock::counter_temp_offset());\n+\n+  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock::number_of_frames_offset()));\n+  __ movl(counter, rbx);\n+\n+  \/\/ Now adjust the caller's stack to make up for the extra locals\n+  \/\/ but record the original sp so that we can save it in the skeletal interpreter\n+  \/\/ frame and the stack walking of interpreter_sender will get the unextended sp\n+  \/\/ value and not the \"real\" sp value.\n+\n+  Address sp_temp(rdi, Deoptimization::UnrollBlock::sender_sp_temp_offset());\n+  __ movptr(sp_temp, rsp);\n+  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock::caller_adjustment_offset()));\n+  __ subptr(rsp, rbx);\n+\n+  \/\/ Push interpreter frames in a loop\n+  Label loop;\n+  __ bind(loop);\n+  __ movptr(rbx, Address(rsi, 0));      \/\/ Load frame size\n+  __ subptr(rbx, 2*wordSize);           \/\/ we'll push pc and rbp, by hand\n+  __ pushptr(Address(rcx, 0));          \/\/ save return address\n+  __ enter();                           \/\/ save old & set new rbp,\n+  __ subptr(rsp, rbx);                  \/\/ Prolog!\n+  __ movptr(rbx, sp_temp);              \/\/ sender's sp\n+  \/\/ This value is corrected by layout_activation_impl\n+  __ movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), NULL_WORD );\n+  __ movptr(Address(rbp, frame::interpreter_frame_sender_sp_offset * wordSize), rbx); \/\/ Make it walkable\n+  __ movptr(sp_temp, rsp);              \/\/ pass to next frame\n+  __ addptr(rsi, wordSize);             \/\/ Bump array pointer (sizes)\n+  __ addptr(rcx, wordSize);             \/\/ Bump array pointer (pcs)\n+  __ decrementl(counter);             \/\/ decrement counter\n+  __ jcc(Assembler::notZero, loop);\n+  __ pushptr(Address(rcx, 0));            \/\/ save final return address\n+\n+  \/\/ Re-push self-frame\n+  __ enter();                           \/\/ save old & set new rbp,\n+  __ subptr(rsp, (framesize-2) * wordSize);   \/\/ Prolog!\n+\n+\n+  \/\/ set last_Java_sp, last_Java_fp\n+  __ get_thread(rdi);\n+  __ set_last_Java_frame(rdi, noreg, rbp, nullptr, noreg);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ restore return values to their stack-slots with the new SP.\n+  __ movptr(Address(rsp,arg0_off*wordSize),rdi);\n+  __ movl(Address(rsp,arg1_off*wordSize), Deoptimization::Unpack_uncommon_trap);\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n+  \/\/ Set an oopmap for the call site\n+  oop_maps->add_gc_map( __ pc()-start, new OopMap( framesize, 0 ) );\n+\n+  __ get_thread(rdi);\n+  __ reset_last_Java_frame(rdi, true);\n+\n+  \/\/ Pop self-frame.\n+  __ leave();     \/\/ Epilog!\n+\n+  \/\/ Jump to interpreter\n+  __ ret(0);\n+\n+  \/\/ -------------\n+  \/\/ make sure all code is generated\n+  masm->flush();\n+\n+   _uncommon_trap_blob = UncommonTrapBlob::create(&buffer, oop_maps, framesize);\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/runtime_x86_32.cpp","additions":174,"deletions":0,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -37,0 +37,78 @@\n+\n+class SimpleRuntimeFrame {\n+\n+  public:\n+\n+  \/\/ Most of the runtime stubs have this simple frame layout.\n+  \/\/ This class exists to make the layout shared in one place.\n+  \/\/ Offsets are for compiler stack slots, which are jints.\n+  enum layout {\n+    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n+    \/\/ will override any oopMap setting for it. We must therefore force the layout\n+    \/\/ so that it agrees with the frame sender code.\n+    rbp_off = frame::arg_reg_save_area_bytes\/BytesPerInt,\n+    rbp_off2,\n+    return_off, return_off2,\n+    framesize\n+  };\n+};\n+\n+#define __ masm->\n+\n+\/\/------------------------------generate_uncommon_trap_blob--------------------\n+void OptoRuntime::generate_uncommon_trap_blob() {\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  address start = __ pc();\n+\n+  \/\/ Push self-frame.  We get here with a return address on the\n+  \/\/ stack, so rsp is 8-byte aligned until we allocate our frame.\n+  __ subptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Epilog!\n+\n+  \/\/ No callee saved registers. rbp is assumed implicitly saved\n+  __ movptr(Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt), rbp);\n+\n+  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n+  \/\/ runtime expects it.\n+  __ movl(c_rarg1, j_rarg0);\n+\n+  __ set_last_Java_frame(noreg, noreg, nullptr, rscratch1);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ capture callee-saved registers as well as return values.\n+  \/\/ Thread is in rdi already.\n+  \/\/\n+  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index);\n+\n+  __ mov(c_rarg0, r15_thread);\n+  __ movl(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap)));\n+\n+  \/\/ Set an oopmap for the call site\n+  OopMapSet* oop_maps = new OopMapSet();\n+  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n+\n+  \/\/ location of rbp is known implicitly by the frame sender code\n+\n+  oop_maps->add_gc_map(__ pc() - start, map);\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ Load UnrollBlock* into rdi\n+  __ mov(rdi, rax);\n+\n+#ifdef ASSERT\n+  { Label L;\n+    __ cmpptr(Address(rdi, Deoptimization::UnrollBlock::unpack_kind_offset()),\n+              Deoptimization::Unpack_uncommon_trap);\n+    __ jcc(Assembler::equal, L);\n+    __ stop(\"OptoRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n+    __ bind(L);\n+  }\n@@ -39,0 +117,240 @@\n+  \/\/ Pop all the frames we must move\/replace.\n+  \/\/\n+  \/\/ Frame picture (youngest to oldest)\n+  \/\/ 1: self-frame (no frame link)\n+  \/\/ 2: deopting frame  (no frame link)\n+  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n+\n+  \/\/ Pop self-frame.  We have no frame, and must rely only on rax and rsp.\n+  __ addptr(rsp, (SimpleRuntimeFrame::framesize - 2) << LogBytesPerInt); \/\/ Epilog!\n+\n+  \/\/ Pop deoptimized frame (int)\n+  __ movl(rcx, Address(rdi,\n+                       Deoptimization::UnrollBlock::\n+                       size_of_deoptimized_frame_offset()));\n+  __ addptr(rsp, rcx);\n+\n+  \/\/ rsp should be pointing at the return address to the caller (3)\n+\n+  \/\/ Pick up the initial fp we should save\n+  \/\/ restore rbp before stack bang because if stack overflow is thrown it needs to be pushed (and preserved)\n+  __ movptr(rbp, Address(rdi, Deoptimization::UnrollBlock::initial_info_offset()));\n+\n+#ifdef ASSERT\n+  \/\/ Compilers generate code that bang the stack by as much as the\n+  \/\/ interpreter would need. So this stack banging should never\n+  \/\/ trigger a fault. Verify that it does not on non product builds.\n+  __ movl(rbx, Address(rdi ,Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n+  __ bang_stack_size(rbx, rcx);\n+#endif\n+\n+  \/\/ Load address of array of frame pcs into rcx (address*)\n+  __ movptr(rcx, Address(rdi, Deoptimization::UnrollBlock::frame_pcs_offset()));\n+\n+  \/\/ Trash the return pc\n+  __ addptr(rsp, wordSize);\n+\n+  \/\/ Load address of array of frame sizes into rsi (intptr_t*)\n+  __ movptr(rsi, Address(rdi, Deoptimization::UnrollBlock:: frame_sizes_offset()));\n+\n+  \/\/ Counter\n+  __ movl(rdx, Address(rdi, Deoptimization::UnrollBlock:: number_of_frames_offset())); \/\/ (int)\n+\n+  \/\/ Now adjust the caller's stack to make up for the extra locals but\n+  \/\/ record the original sp so that we can save it in the skeletal\n+  \/\/ interpreter frame and the stack walking of interpreter_sender\n+  \/\/ will get the unextended sp value and not the \"real\" sp value.\n+\n+  const Register sender_sp = r8;\n+\n+  __ mov(sender_sp, rsp);\n+  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock:: caller_adjustment_offset())); \/\/ (int)\n+  __ subptr(rsp, rbx);\n+\n+  \/\/ Push interpreter frames in a loop\n+  Label loop;\n+  __ bind(loop);\n+  __ movptr(rbx, Address(rsi, 0)); \/\/ Load frame size\n+  __ subptr(rbx, 2 * wordSize);    \/\/ We'll push pc and rbp by hand\n+  __ pushptr(Address(rcx, 0));     \/\/ Save return address\n+  __ enter();                      \/\/ Save old & set new rbp\n+  __ subptr(rsp, rbx);             \/\/ Prolog\n+  __ movptr(Address(rbp, frame::interpreter_frame_sender_sp_offset * wordSize),\n+            sender_sp);            \/\/ Make it walkable\n+  \/\/ This value is corrected by layout_activation_impl\n+  __ movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), NULL_WORD);\n+  __ mov(sender_sp, rsp);          \/\/ Pass sender_sp to next frame\n+  __ addptr(rsi, wordSize);        \/\/ Bump array pointer (sizes)\n+  __ addptr(rcx, wordSize);        \/\/ Bump array pointer (pcs)\n+  __ decrementl(rdx);              \/\/ Decrement counter\n+  __ jcc(Assembler::notZero, loop);\n+  __ pushptr(Address(rcx, 0));     \/\/ Save final return address\n+\n+  \/\/ Re-push self-frame\n+  __ enter();                 \/\/ Save old & set new rbp\n+  __ subptr(rsp, (SimpleRuntimeFrame::framesize - 4) << LogBytesPerInt);\n+                              \/\/ Prolog\n+\n+  \/\/ Use rbp because the frames look interpreted now\n+  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n+  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(noreg, rbp, the_pc, rscratch1);\n+\n+  \/\/ Call C code.  Need thread but NOT official VM entry\n+  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n+  \/\/ restore return values to their stack-slots with the new SP.\n+  \/\/ Thread is in rdi already.\n+  \/\/\n+  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode);\n+\n+  __ andptr(rsp, -(StackAlignmentInBytes)); \/\/ Align SP as required by ABI\n+  __ mov(c_rarg0, r15_thread);\n+  __ movl(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n+\n+  \/\/ Set an oopmap for the call site\n+  \/\/ Use the same PC we used for the last java frame\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  \/\/ Clear fp AND pc\n+  __ reset_last_Java_frame(true);\n+\n+  \/\/ Pop self-frame.\n+  __ leave();                 \/\/ Epilog\n+\n+  \/\/ Jump to interpreter\n+  __ ret(0);\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n+\n+  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n+                                                 SimpleRuntimeFrame::framesize >> 1);\n+}\n+\n+\/\/------------------------------generate_exception_blob---------------------------\n+\/\/ creates exception blob at the end\n+\/\/ Using exception blob, this code is jumped from a compiled method.\n+\/\/ (see emit_exception_handler in x86_64.ad file)\n+\/\/\n+\/\/ Given an exception pc at a call we call into the runtime for the\n+\/\/ handler in this method. This handler might merely restore state\n+\/\/ (i.e. callee save registers) unwind the frame and jump to the\n+\/\/ exception handler for the nmethod if there is no Java level handler\n+\/\/ for the nmethod.\n+\/\/\n+\/\/ This code is entered with a jmp.\n+\/\/\n+\/\/ Arguments:\n+\/\/   rax: exception oop\n+\/\/   rdx: exception pc\n+\/\/\n+\/\/ Results:\n+\/\/   rax: exception oop\n+\/\/   rdx: exception pc in caller or ???\n+\/\/   destination: exception handler of caller\n+\/\/\n+\/\/ Note: the exception pc MUST be at a call (precise debug information)\n+\/\/       Registers rax, rdx, rcx, rsi, rdi, r8-r11 are not callee saved.\n+\/\/\n+\n+void OptoRuntime::generate_exception_blob() {\n+  assert(!OptoRuntime::is_callee_saved_register(RDX_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(RAX_num), \"\");\n+  assert(!OptoRuntime::is_callee_saved_register(RCX_num), \"\");\n+\n+  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n+\n+  \/\/ Allocate space for the code\n+  ResourceMark rm;\n+  \/\/ Setup code generation tools\n+  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n+  MacroAssembler* masm = new MacroAssembler(&buffer);\n+\n+\n+  address start = __ pc();\n+\n+  \/\/ Exception pc is 'return address' for stack walker\n+  __ push(rdx);\n+  __ subptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Prolog\n+\n+  \/\/ Save callee-saved registers.  See x86_64.ad.\n+\n+  \/\/ rbp is an implicitly saved callee saved register (i.e., the calling\n+  \/\/ convention will save\/restore it in the prolog\/epilog). Other than that\n+  \/\/ there are no callee save registers now that adapter frames are gone.\n+\n+  __ movptr(Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt), rbp);\n+\n+  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n+  \/\/ handle_exception call, since we do not want to make any assumption\n+  \/\/ about the size of the frame where the exception happened in.\n+  \/\/ c_rarg0 is either rdi (Linux) or rcx (Windows).\n+  __ movptr(Address(r15_thread, JavaThread::exception_oop_offset()),rax);\n+  __ movptr(Address(r15_thread, JavaThread::exception_pc_offset()), rdx);\n+\n+  \/\/ This call does all the hard work.  It checks if an exception handler\n+  \/\/ exists in the method.\n+  \/\/ If so, it returns the handler address.\n+  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n+  \/\/ registers of the frame being removed.\n+  \/\/\n+  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n+\n+  \/\/ At a method handle call, the stack may not be properly aligned\n+  \/\/ when returning with an exception.\n+  address the_pc = __ pc();\n+  __ set_last_Java_frame(noreg, noreg, the_pc, rscratch1);\n+  __ mov(c_rarg0, r15_thread);\n+  __ andptr(rsp, -(StackAlignmentInBytes));    \/\/ Align stack\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C)));\n+\n+  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n+  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n+  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n+  \/\/ handle_exception_stub), since they were restored when we got the\n+  \/\/ exception.\n+\n+  OopMapSet* oop_maps = new OopMapSet();\n+\n+  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n+\n+  __ reset_last_Java_frame(false);\n+\n+  \/\/ Restore callee-saved registers\n+\n+  \/\/ rbp is an implicitly saved callee-saved register (i.e., the calling\n+  \/\/ convention will save restore it in prolog\/epilog) Other than that\n+  \/\/ there are no callee save registers now that adapter frames are gone.\n+\n+  __ movptr(rbp, Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt));\n+\n+  __ addptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Epilog\n+  __ pop(rdx);                  \/\/ No need for exception pc anymore\n+\n+  \/\/ rax: exception handler\n+\n+  \/\/ We have a handler in rax (could be deopt blob).\n+  __ mov(r8, rax);\n+\n+  \/\/ Get the exception oop\n+  __ movptr(rax, Address(r15_thread, JavaThread::exception_oop_offset()));\n+  \/\/ Get the exception pc in case we are deoptimized\n+  __ movptr(rdx, Address(r15_thread, JavaThread::exception_pc_offset()));\n+#ifdef ASSERT\n+  __ movptr(Address(r15_thread, JavaThread::exception_handler_pc_offset()), NULL_WORD);\n+  __ movptr(Address(r15_thread, JavaThread::exception_pc_offset()), NULL_WORD);\n+#endif\n+  \/\/ Clear the exception oop so GC no longer processes it as a root.\n+  __ movptr(Address(r15_thread, JavaThread::exception_oop_offset()), NULL_WORD);\n+\n+  \/\/ rax: exception oop\n+  \/\/ r8:  exception handler\n+  \/\/ rdx: exception pc\n+  \/\/ Jump to handler\n+\n+  __ jmp(r8);\n+\n+  \/\/ Make sure all code is generated\n+  masm->flush();\n@@ -40,5 +358,4 @@\n-\/\/ This file should really contain the code for generating the OptoRuntime\n-\/\/ exception_blob. However that code uses SimpleRuntimeFrame which only\n-\/\/ exists in sharedRuntime_x86_64.cpp. When there is a sharedRuntime_<arch>.hpp\n-\/\/ file and SimpleRuntimeFrame is able to move there then the exception_blob\n-\/\/ code will move here where it belongs.\n+  \/\/ Set exception blob\n+  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n+}\n+#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/x86\/runtime_x86_64.cpp","additions":322,"deletions":5,"binary":false,"changes":327,"status":"modified"},{"patch":"@@ -707,1 +707,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -710,1 +710,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n@@ -2392,177 +2392,0 @@\n-\n-#ifdef COMPILER2\n-\/\/------------------------------generate_uncommon_trap_blob--------------------\n-void SharedRuntime::generate_uncommon_trap_blob() {\n-  \/\/ allocate space for the code\n-  ResourceMark rm;\n-  \/\/ setup code generation tools\n-  CodeBuffer   buffer(\"uncommon_trap_blob\", 512, 512);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-\n-  enum frame_layout {\n-    arg0_off,      \/\/ thread                     sp + 0 \/\/ Arg location for\n-    arg1_off,      \/\/ unloaded_class_index       sp + 1 \/\/ calling C\n-    arg2_off,      \/\/ exec_mode                  sp + 2\n-    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n-    \/\/ will override any oopMap setting for it. We must therefore force the layout\n-    \/\/ so that it agrees with the frame sender code.\n-    rbp_off,       \/\/ callee saved register      sp + 3\n-    return_off,    \/\/ slot for return address    sp + 4\n-    framesize\n-  };\n-\n-  address start = __ pc();\n-\n-  \/\/ Push self-frame.\n-  __ subptr(rsp, return_off*wordSize);     \/\/ Epilog!\n-\n-  \/\/ rbp, is an implicitly saved callee saved register (i.e. the calling\n-  \/\/ convention will save restore it in prolog\/epilog) Other than that\n-  \/\/ there are no callee save registers no that adapter frames are gone.\n-  __ movptr(Address(rsp, rbp_off*wordSize), rbp);\n-\n-  \/\/ Clear the floating point exception stack\n-  __ empty_FPU_stack();\n-\n-  \/\/ set last_Java_sp\n-  __ get_thread(rdx);\n-  __ set_last_Java_frame(rdx, noreg, noreg, nullptr, noreg);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ capture callee-saved registers as well as return values.\n-  __ movptr(Address(rsp, arg0_off*wordSize), rdx);\n-  \/\/ argument already in ECX\n-  __ movl(Address(rsp, arg1_off*wordSize),rcx);\n-  __ movl(Address(rsp, arg2_off*wordSize), Deoptimization::Unpack_uncommon_trap);\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap)));\n-\n-  \/\/ Set an oopmap for the call site\n-  OopMapSet *oop_maps = new OopMapSet();\n-  OopMap* map =  new OopMap( framesize, 0 );\n-  \/\/ No oopMap for rbp, it is known implicitly\n-\n-  oop_maps->add_gc_map( __ pc()-start, map);\n-\n-  __ get_thread(rcx);\n-\n-  __ reset_last_Java_frame(rcx, false);\n-\n-  \/\/ Load UnrollBlock into EDI\n-  __ movptr(rdi, rax);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    __ cmpptr(Address(rdi, Deoptimization::UnrollBlock::unpack_kind_offset()),\n-            (int32_t)Deoptimization::Unpack_uncommon_trap);\n-    __ jcc(Assembler::equal, L);\n-    __ stop(\"SharedRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n-    __ bind(L);\n-  }\n-#endif\n-\n-  \/\/ Pop all the frames we must move\/replace.\n-  \/\/\n-  \/\/ Frame picture (youngest to oldest)\n-  \/\/ 1: self-frame (no frame link)\n-  \/\/ 2: deopting frame  (no frame link)\n-  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n-\n-  \/\/ Pop self-frame.  We have no frame, and must rely only on EAX and ESP.\n-  __ addptr(rsp,(framesize-1)*wordSize);     \/\/ Epilog!\n-\n-  \/\/ Pop deoptimized frame\n-  __ movl2ptr(rcx, Address(rdi,Deoptimization::UnrollBlock::size_of_deoptimized_frame_offset()));\n-  __ addptr(rsp, rcx);\n-\n-  \/\/ sp should be pointing at the return address to the caller (3)\n-\n-  \/\/ Pick up the initial fp we should save\n-  \/\/ restore rbp before stack bang because if stack overflow is thrown it needs to be pushed (and preserved)\n-  __ movptr(rbp, Address(rdi, Deoptimization::UnrollBlock::initial_info_offset()));\n-\n-#ifdef ASSERT\n-  \/\/ Compilers generate code that bang the stack by as much as the\n-  \/\/ interpreter would need. So this stack banging should never\n-  \/\/ trigger a fault. Verify that it does not on non product builds.\n-  __ movl(rbx, Address(rdi ,Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n-  __ bang_stack_size(rbx, rcx);\n-#endif\n-\n-  \/\/ Load array of frame pcs into ECX\n-  __ movl(rcx,Address(rdi,Deoptimization::UnrollBlock::frame_pcs_offset()));\n-\n-  __ pop(rsi); \/\/ trash the pc\n-\n-  \/\/ Load array of frame sizes into ESI\n-  __ movptr(rsi,Address(rdi,Deoptimization::UnrollBlock::frame_sizes_offset()));\n-\n-  Address counter(rdi, Deoptimization::UnrollBlock::counter_temp_offset());\n-\n-  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock::number_of_frames_offset()));\n-  __ movl(counter, rbx);\n-\n-  \/\/ Now adjust the caller's stack to make up for the extra locals\n-  \/\/ but record the original sp so that we can save it in the skeletal interpreter\n-  \/\/ frame and the stack walking of interpreter_sender will get the unextended sp\n-  \/\/ value and not the \"real\" sp value.\n-\n-  Address sp_temp(rdi, Deoptimization::UnrollBlock::sender_sp_temp_offset());\n-  __ movptr(sp_temp, rsp);\n-  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock::caller_adjustment_offset()));\n-  __ subptr(rsp, rbx);\n-\n-  \/\/ Push interpreter frames in a loop\n-  Label loop;\n-  __ bind(loop);\n-  __ movptr(rbx, Address(rsi, 0));      \/\/ Load frame size\n-  __ subptr(rbx, 2*wordSize);           \/\/ we'll push pc and rbp, by hand\n-  __ pushptr(Address(rcx, 0));          \/\/ save return address\n-  __ enter();                           \/\/ save old & set new rbp,\n-  __ subptr(rsp, rbx);                  \/\/ Prolog!\n-  __ movptr(rbx, sp_temp);              \/\/ sender's sp\n-  \/\/ This value is corrected by layout_activation_impl\n-  __ movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), NULL_WORD );\n-  __ movptr(Address(rbp, frame::interpreter_frame_sender_sp_offset * wordSize), rbx); \/\/ Make it walkable\n-  __ movptr(sp_temp, rsp);              \/\/ pass to next frame\n-  __ addptr(rsi, wordSize);             \/\/ Bump array pointer (sizes)\n-  __ addptr(rcx, wordSize);             \/\/ Bump array pointer (pcs)\n-  __ decrementl(counter);             \/\/ decrement counter\n-  __ jcc(Assembler::notZero, loop);\n-  __ pushptr(Address(rcx, 0));            \/\/ save final return address\n-\n-  \/\/ Re-push self-frame\n-  __ enter();                           \/\/ save old & set new rbp,\n-  __ subptr(rsp, (framesize-2) * wordSize);   \/\/ Prolog!\n-\n-\n-  \/\/ set last_Java_sp, last_Java_fp\n-  __ get_thread(rdi);\n-  __ set_last_Java_frame(rdi, noreg, rbp, nullptr, noreg);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ restore return values to their stack-slots with the new SP.\n-  __ movptr(Address(rsp,arg0_off*wordSize),rdi);\n-  __ movl(Address(rsp,arg1_off*wordSize), Deoptimization::Unpack_uncommon_trap);\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n-  \/\/ Set an oopmap for the call site\n-  oop_maps->add_gc_map( __ pc()-start, new OopMap( framesize, 0 ) );\n-\n-  __ get_thread(rdi);\n-  __ reset_last_Java_frame(rdi, true);\n-\n-  \/\/ Pop self-frame.\n-  __ leave();     \/\/ Epilog!\n-\n-  \/\/ Jump to interpreter\n-  __ ret(0);\n-\n-  \/\/ -------------\n-  \/\/ make sure all code is generated\n-  masm->flush();\n-\n-   _uncommon_trap_blob = UncommonTrapBlob::create(&buffer, oop_maps, framesize);\n-}\n-#endif \/\/ COMPILER2\n-\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":2,"deletions":179,"binary":false,"changes":181,"status":"modified"},{"patch":"@@ -75,18 +75,0 @@\n-class SimpleRuntimeFrame {\n-\n-  public:\n-\n-  \/\/ Most of the runtime stubs have this simple frame layout.\n-  \/\/ This class exists to make the layout shared in one place.\n-  \/\/ Offsets are for compiler stack slots, which are jints.\n-  enum layout {\n-    \/\/ The frame sender code expects that rbp will be in the \"natural\" place and\n-    \/\/ will override any oopMap setting for it. We must therefore force the layout\n-    \/\/ so that it agrees with the frame sender code.\n-    rbp_off = frame::arg_reg_save_area_bytes\/BytesPerInt,\n-    rbp_off2,\n-    return_off, return_off2,\n-    framesize\n-  };\n-};\n-\n@@ -845,1 +827,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -848,1 +830,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n@@ -2990,176 +2972,0 @@\n-#ifdef COMPILER2\n-\/\/------------------------------generate_uncommon_trap_blob--------------------\n-void SharedRuntime::generate_uncommon_trap_blob() {\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"uncommon_trap_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  address start = __ pc();\n-\n-  \/\/ Push self-frame.  We get here with a return address on the\n-  \/\/ stack, so rsp is 8-byte aligned until we allocate our frame.\n-  __ subptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Epilog!\n-\n-  \/\/ No callee saved registers. rbp is assumed implicitly saved\n-  __ movptr(Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt), rbp);\n-\n-  \/\/ compiler left unloaded_class_index in j_rarg0 move to where the\n-  \/\/ runtime expects it.\n-  __ movl(c_rarg1, j_rarg0);\n-\n-  __ set_last_Java_frame(noreg, noreg, nullptr, rscratch1);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ capture callee-saved registers as well as return values.\n-  \/\/ Thread is in rdi already.\n-  \/\/\n-  \/\/ UnrollBlock* uncommon_trap(JavaThread* thread, jint unloaded_class_index);\n-\n-  __ mov(c_rarg0, r15_thread);\n-  __ movl(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap)));\n-\n-  \/\/ Set an oopmap for the call site\n-  OopMapSet* oop_maps = new OopMapSet();\n-  OopMap* map = new OopMap(SimpleRuntimeFrame::framesize, 0);\n-\n-  \/\/ location of rbp is known implicitly by the frame sender code\n-\n-  oop_maps->add_gc_map(__ pc() - start, map);\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ Load UnrollBlock* into rdi\n-  __ mov(rdi, rax);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    __ cmpptr(Address(rdi, Deoptimization::UnrollBlock::unpack_kind_offset()),\n-              Deoptimization::Unpack_uncommon_trap);\n-    __ jcc(Assembler::equal, L);\n-    __ stop(\"SharedRuntime::generate_uncommon_trap_blob: expected Unpack_uncommon_trap\");\n-    __ bind(L);\n-  }\n-#endif\n-\n-  \/\/ Pop all the frames we must move\/replace.\n-  \/\/\n-  \/\/ Frame picture (youngest to oldest)\n-  \/\/ 1: self-frame (no frame link)\n-  \/\/ 2: deopting frame  (no frame link)\n-  \/\/ 3: caller of deopting frame (could be compiled\/interpreted).\n-\n-  \/\/ Pop self-frame.  We have no frame, and must rely only on rax and rsp.\n-  __ addptr(rsp, (SimpleRuntimeFrame::framesize - 2) << LogBytesPerInt); \/\/ Epilog!\n-\n-  \/\/ Pop deoptimized frame (int)\n-  __ movl(rcx, Address(rdi,\n-                       Deoptimization::UnrollBlock::\n-                       size_of_deoptimized_frame_offset()));\n-  __ addptr(rsp, rcx);\n-\n-  \/\/ rsp should be pointing at the return address to the caller (3)\n-\n-  \/\/ Pick up the initial fp we should save\n-  \/\/ restore rbp before stack bang because if stack overflow is thrown it needs to be pushed (and preserved)\n-  __ movptr(rbp, Address(rdi, Deoptimization::UnrollBlock::initial_info_offset()));\n-\n-#ifdef ASSERT\n-  \/\/ Compilers generate code that bang the stack by as much as the\n-  \/\/ interpreter would need. So this stack banging should never\n-  \/\/ trigger a fault. Verify that it does not on non product builds.\n-  __ movl(rbx, Address(rdi ,Deoptimization::UnrollBlock::total_frame_sizes_offset()));\n-  __ bang_stack_size(rbx, rcx);\n-#endif\n-\n-  \/\/ Load address of array of frame pcs into rcx (address*)\n-  __ movptr(rcx, Address(rdi, Deoptimization::UnrollBlock::frame_pcs_offset()));\n-\n-  \/\/ Trash the return pc\n-  __ addptr(rsp, wordSize);\n-\n-  \/\/ Load address of array of frame sizes into rsi (intptr_t*)\n-  __ movptr(rsi, Address(rdi, Deoptimization::UnrollBlock:: frame_sizes_offset()));\n-\n-  \/\/ Counter\n-  __ movl(rdx, Address(rdi, Deoptimization::UnrollBlock:: number_of_frames_offset())); \/\/ (int)\n-\n-  \/\/ Now adjust the caller's stack to make up for the extra locals but\n-  \/\/ record the original sp so that we can save it in the skeletal\n-  \/\/ interpreter frame and the stack walking of interpreter_sender\n-  \/\/ will get the unextended sp value and not the \"real\" sp value.\n-\n-  const Register sender_sp = r8;\n-\n-  __ mov(sender_sp, rsp);\n-  __ movl(rbx, Address(rdi, Deoptimization::UnrollBlock:: caller_adjustment_offset())); \/\/ (int)\n-  __ subptr(rsp, rbx);\n-\n-  \/\/ Push interpreter frames in a loop\n-  Label loop;\n-  __ bind(loop);\n-  __ movptr(rbx, Address(rsi, 0)); \/\/ Load frame size\n-  __ subptr(rbx, 2 * wordSize);    \/\/ We'll push pc and rbp by hand\n-  __ pushptr(Address(rcx, 0));     \/\/ Save return address\n-  __ enter();                      \/\/ Save old & set new rbp\n-  __ subptr(rsp, rbx);             \/\/ Prolog\n-  __ movptr(Address(rbp, frame::interpreter_frame_sender_sp_offset * wordSize),\n-            sender_sp);            \/\/ Make it walkable\n-  \/\/ This value is corrected by layout_activation_impl\n-  __ movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), NULL_WORD);\n-  __ mov(sender_sp, rsp);          \/\/ Pass sender_sp to next frame\n-  __ addptr(rsi, wordSize);        \/\/ Bump array pointer (sizes)\n-  __ addptr(rcx, wordSize);        \/\/ Bump array pointer (pcs)\n-  __ decrementl(rdx);              \/\/ Decrement counter\n-  __ jcc(Assembler::notZero, loop);\n-  __ pushptr(Address(rcx, 0));     \/\/ Save final return address\n-\n-  \/\/ Re-push self-frame\n-  __ enter();                 \/\/ Save old & set new rbp\n-  __ subptr(rsp, (SimpleRuntimeFrame::framesize - 4) << LogBytesPerInt);\n-                              \/\/ Prolog\n-\n-  \/\/ Use rbp because the frames look interpreted now\n-  \/\/ Save \"the_pc\" since it cannot easily be retrieved using the last_java_SP after we aligned SP.\n-  \/\/ Don't need the precise return PC here, just precise enough to point into this code blob.\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(noreg, rbp, the_pc, rscratch1);\n-\n-  \/\/ Call C code.  Need thread but NOT official VM entry\n-  \/\/ crud.  We cannot block on this call, no GC can happen.  Call should\n-  \/\/ restore return values to their stack-slots with the new SP.\n-  \/\/ Thread is in rdi already.\n-  \/\/\n-  \/\/ BasicType unpack_frames(JavaThread* thread, int exec_mode);\n-\n-  __ andptr(rsp, -(StackAlignmentInBytes)); \/\/ Align SP as required by ABI\n-  __ mov(c_rarg0, r15_thread);\n-  __ movl(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)));\n-\n-  \/\/ Set an oopmap for the call site\n-  \/\/ Use the same PC we used for the last java frame\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  \/\/ Clear fp AND pc\n-  __ reset_last_Java_frame(true);\n-\n-  \/\/ Pop self-frame.\n-  __ leave();                 \/\/ Epilog\n-\n-  \/\/ Jump to interpreter\n-  __ ret(0);\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  _uncommon_trap_blob =  UncommonTrapBlob::create(&buffer, oop_maps,\n-                                                 SimpleRuntimeFrame::framesize >> 1);\n-}\n-#endif \/\/ COMPILER2\n-\n@@ -3672,133 +3478,0 @@\n-#ifdef COMPILER2\n-\/\/ This is here instead of runtime_x86_64.cpp because it uses SimpleRuntimeFrame\n-\/\/\n-\/\/------------------------------generate_exception_blob---------------------------\n-\/\/ creates exception blob at the end\n-\/\/ Using exception blob, this code is jumped from a compiled method.\n-\/\/ (see emit_exception_handler in x86_64.ad file)\n-\/\/\n-\/\/ Given an exception pc at a call we call into the runtime for the\n-\/\/ handler in this method. This handler might merely restore state\n-\/\/ (i.e. callee save registers) unwind the frame and jump to the\n-\/\/ exception handler for the nmethod if there is no Java level handler\n-\/\/ for the nmethod.\n-\/\/\n-\/\/ This code is entered with a jmp.\n-\/\/\n-\/\/ Arguments:\n-\/\/   rax: exception oop\n-\/\/   rdx: exception pc\n-\/\/\n-\/\/ Results:\n-\/\/   rax: exception oop\n-\/\/   rdx: exception pc in caller or ???\n-\/\/   destination: exception handler of caller\n-\/\/\n-\/\/ Note: the exception pc MUST be at a call (precise debug information)\n-\/\/       Registers rax, rdx, rcx, rsi, rdi, r8-r11 are not callee saved.\n-\/\/\n-\n-void OptoRuntime::generate_exception_blob() {\n-  assert(!OptoRuntime::is_callee_saved_register(RDX_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(RAX_num), \"\");\n-  assert(!OptoRuntime::is_callee_saved_register(RCX_num), \"\");\n-\n-  assert(SimpleRuntimeFrame::framesize % 4 == 0, \"sp not 16-byte aligned\");\n-\n-  \/\/ Allocate space for the code\n-  ResourceMark rm;\n-  \/\/ Setup code generation tools\n-  CodeBuffer buffer(\"exception_blob\", 2048, 1024);\n-  MacroAssembler* masm = new MacroAssembler(&buffer);\n-\n-\n-  address start = __ pc();\n-\n-  \/\/ Exception pc is 'return address' for stack walker\n-  __ push(rdx);\n-  __ subptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Prolog\n-\n-  \/\/ Save callee-saved registers.  See x86_64.ad.\n-\n-  \/\/ rbp is an implicitly saved callee saved register (i.e., the calling\n-  \/\/ convention will save\/restore it in the prolog\/epilog). Other than that\n-  \/\/ there are no callee save registers now that adapter frames are gone.\n-\n-  __ movptr(Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt), rbp);\n-\n-  \/\/ Store exception in Thread object. We cannot pass any arguments to the\n-  \/\/ handle_exception call, since we do not want to make any assumption\n-  \/\/ about the size of the frame where the exception happened in.\n-  \/\/ c_rarg0 is either rdi (Linux) or rcx (Windows).\n-  __ movptr(Address(r15_thread, JavaThread::exception_oop_offset()),rax);\n-  __ movptr(Address(r15_thread, JavaThread::exception_pc_offset()), rdx);\n-\n-  \/\/ This call does all the hard work.  It checks if an exception handler\n-  \/\/ exists in the method.\n-  \/\/ If so, it returns the handler address.\n-  \/\/ If not, it prepares for stack-unwinding, restoring the callee-save\n-  \/\/ registers of the frame being removed.\n-  \/\/\n-  \/\/ address OptoRuntime::handle_exception_C(JavaThread* thread)\n-\n-  \/\/ At a method handle call, the stack may not be properly aligned\n-  \/\/ when returning with an exception.\n-  address the_pc = __ pc();\n-  __ set_last_Java_frame(noreg, noreg, the_pc, rscratch1);\n-  __ mov(c_rarg0, r15_thread);\n-  __ andptr(rsp, -(StackAlignmentInBytes));    \/\/ Align stack\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C)));\n-\n-  \/\/ Set an oopmap for the call site.  This oopmap will only be used if we\n-  \/\/ are unwinding the stack.  Hence, all locations will be dead.\n-  \/\/ Callee-saved registers will be the same as the frame above (i.e.,\n-  \/\/ handle_exception_stub), since they were restored when we got the\n-  \/\/ exception.\n-\n-  OopMapSet* oop_maps = new OopMapSet();\n-\n-  oop_maps->add_gc_map(the_pc - start, new OopMap(SimpleRuntimeFrame::framesize, 0));\n-\n-  __ reset_last_Java_frame(false);\n-\n-  \/\/ Restore callee-saved registers\n-\n-  \/\/ rbp is an implicitly saved callee-saved register (i.e., the calling\n-  \/\/ convention will save restore it in prolog\/epilog) Other than that\n-  \/\/ there are no callee save registers now that adapter frames are gone.\n-\n-  __ movptr(rbp, Address(rsp, SimpleRuntimeFrame::rbp_off << LogBytesPerInt));\n-\n-  __ addptr(rsp, SimpleRuntimeFrame::return_off << LogBytesPerInt); \/\/ Epilog\n-  __ pop(rdx);                  \/\/ No need for exception pc anymore\n-\n-  \/\/ rax: exception handler\n-\n-  \/\/ We have a handler in rax (could be deopt blob).\n-  __ mov(r8, rax);\n-\n-  \/\/ Get the exception oop\n-  __ movptr(rax, Address(r15_thread, JavaThread::exception_oop_offset()));\n-  \/\/ Get the exception pc in case we are deoptimized\n-  __ movptr(rdx, Address(r15_thread, JavaThread::exception_pc_offset()));\n-#ifdef ASSERT\n-  __ movptr(Address(r15_thread, JavaThread::exception_handler_pc_offset()), NULL_WORD);\n-  __ movptr(Address(r15_thread, JavaThread::exception_pc_offset()), NULL_WORD);\n-#endif\n-  \/\/ Clear the exception oop so GC no longer processes it as a root.\n-  __ movptr(Address(r15_thread, JavaThread::exception_oop_offset()), NULL_WORD);\n-\n-  \/\/ rax: exception oop\n-  \/\/ r8:  exception handler\n-  \/\/ rdx: exception pc\n-  \/\/ Jump to handler\n-\n-  __ jmp(r8);\n-\n-  \/\/ Make sure all code is generated\n-  masm->flush();\n-\n-  \/\/ Set exception blob\n-  _exception_blob =  ExceptionBlob::create(&buffer, oop_maps, SimpleRuntimeFrame::framesize >> 1);\n-}\n-#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":329,"binary":false,"changes":331,"status":"modified"},{"patch":"@@ -3705,1 +3705,1 @@\n-  __ jump(ExternalAddress(StubRoutines::throw_StackOverflowError_entry()));\n+  __ jump(RuntimeAddress(StubRoutines::throw_StackOverflowError_entry()));\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    ExternalAddress no_overlap(no_overlap_target);\n+    RuntimeAddress no_overlap(no_overlap_target);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_arraycopy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,1 +181,1 @@\n-  __ jump(ExternalAddress(Interpreter::throw_exception_entry()));\n+  __ jump(RuntimeAddress(Interpreter::throw_exception_entry()));\n@@ -549,1 +549,1 @@\n-  __ jump(ExternalAddress(StubRoutines::throw_StackOverflowError_entry()));\n+  __ jump(RuntimeAddress(StubRoutines::throw_StackOverflowError_entry()));\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -777,1 +777,1 @@\n-  __ jump(ExternalAddress(Interpreter::_throw_ArrayIndexOutOfBoundsException_entry));\n+  __ jump(RuntimeAddress(Interpreter::_throw_ArrayIndexOutOfBoundsException_entry));\n@@ -1155,1 +1155,1 @@\n-  __ jump(ExternalAddress(Interpreter::_throw_ArrayStoreException_entry));\n+  __ jump(RuntimeAddress(Interpreter::_throw_ArrayStoreException_entry));\n@@ -1435,1 +1435,1 @@\n-             ExternalAddress(Interpreter::_throw_ArithmeticException_entry));\n+             RuntimeAddress(Interpreter::_throw_ArithmeticException_entry));\n@@ -1448,1 +1448,1 @@\n-             ExternalAddress(Interpreter::_throw_ArithmeticException_entry));\n+             RuntimeAddress(Interpreter::_throw_ArithmeticException_entry));\n@@ -1461,1 +1461,1 @@\n-             ExternalAddress(Interpreter::_throw_ArithmeticException_entry));\n+             RuntimeAddress(Interpreter::_throw_ArithmeticException_entry));\n@@ -1475,1 +1475,1 @@\n-             ExternalAddress(Interpreter::_throw_ArithmeticException_entry));\n+             RuntimeAddress(Interpreter::_throw_ArithmeticException_entry));\n@@ -4225,1 +4225,1 @@\n-  __ jump(ExternalAddress(Interpreter::_throw_ClassCastException_entry));\n+  __ jump(RuntimeAddress(Interpreter::_throw_ClassCastException_entry));\n@@ -4343,1 +4343,1 @@\n-  __ jump(ExternalAddress(Interpreter::throw_exception_entry()));\n+  __ jump(RuntimeAddress(Interpreter::throw_exception_entry()));\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-address VM_Version::_cpuinfo_segv_addr = 0;\n+address VM_Version::_cpuinfo_segv_addr = nullptr;\n@@ -58,1 +58,1 @@\n-address VM_Version::_cpuinfo_cont_addr = 0;\n+address VM_Version::_cpuinfo_cont_addr = nullptr;\n@@ -60,1 +60,1 @@\n-address VM_Version::_cpuinfo_segv_addr_apx = 0;\n+address VM_Version::_cpuinfo_segv_addr_apx = nullptr;\n@@ -62,1 +62,1 @@\n-address VM_Version::_cpuinfo_cont_addr_apx = 0;\n+address VM_Version::_cpuinfo_cont_addr_apx = nullptr;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -13586,0 +13586,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"JMP    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -12595,0 +12595,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -867,1 +867,1 @@\n-  return 0;\n+  return nullptr;\n@@ -4452,1 +4452,1 @@\n-  FLAG_SET_DEFAULT(UseMadvPopulateWrite, (::madvise(0, 0, MADV_POPULATE_WRITE) == 0));\n+  FLAG_SET_DEFAULT(UseMadvPopulateWrite, (::madvise(nullptr, 0, MADV_POPULATE_WRITE) == 0));\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -433,0 +433,2 @@\n+  PRAGMA_DIAG_PUSH\n+  PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n@@ -434,0 +436,1 @@\n+  PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/os\/linux\/os_perf_linux.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/z\/zUtils.hpp\"\n-#include \"utilities\/debug.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-#include <stdlib.h>\n-\n-uintptr_t ZUtils::alloc_aligned(size_t alignment, size_t size) {\n-  void* res = nullptr;\n-\n-  \/\/ Use raw posix_memalign as long as we have no wrapper for it\n-  ALLOW_C_FUNCTION(::posix_memalign, int rc = posix_memalign(&res, alignment, size);)\n-  if (rc != 0) {\n-    fatal(\"posix_memalign() failed\");\n-  }\n-\n-  memset(res, 0, size);\n-\n-  return (uintptr_t)res;\n-}\n","filename":"src\/hotspot\/os\/posix\/gc\/z\/zUtils_posix.cpp","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -502,2 +502,2 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-                  \"Process not found\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                     \"Process not found\");\n@@ -506,1 +506,1 @@\n-      THROW_MSG_0(vmSymbols::java_io_IOException(), os::strerror(errno));\n+      THROW_MSG_NULL(vmSymbols::java_io_IOException(), os::strerror(errno));\n@@ -1332,1 +1332,1 @@\n-  assert(addr != 0, \"address sanity check\");\n+  assert(addr != nullptr, \"address sanity check\");\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1722,1 +1722,1 @@\n-  if ((s = ::getenv(\"_JAVA_SR_SIGNUM\")) != 0) {\n+  if ((s = ::getenv(\"_JAVA_SR_SIGNUM\")) != nullptr) {\n@@ -1745,1 +1745,1 @@\n-  if (sigaction(PosixSignals::SR_signum, &act, 0) == -1) {\n+  if (sigaction(PosixSignals::SR_signum, &act, nullptr) == -1) {\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"utilities\/compilerWarnings.hpp\"\n@@ -38,0 +39,3 @@\n+\n+PRAGMA_DIAG_PUSH\n+PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n@@ -39,0 +43,2 @@\n+PRAGMA_DIAG_POP\n+\n","filename":"src\/hotspot\/os\/posix\/threadCritical_posix.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/z\/zUtils.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-#include <malloc.h>\n-\n-uintptr_t ZUtils::alloc_aligned(size_t alignment, size_t size) {\n-  void* const res = _aligned_malloc(size, alignment);\n-\n-  if (res == nullptr) {\n-    fatal(\"_aligned_malloc failed\");\n-  }\n-\n-  memset(res, 0, size);\n-\n-  return (uintptr_t)res;\n-}\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zUtils_windows.cpp","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -3465,1 +3465,2 @@\n-  assert(aligned_base != nullptr, \"Did not manage to re-map after %d attempts?\", max_attempts);\n+  assert(aligned_base != nullptr,\n+      \"Did not manage to re-map after %d attempts (size %zu, alignment %zu, file descriptor %d)\", max_attempts, size, alignment, file_desc);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-    if (sig == SIGSEGV && info->si_addr == 0 && info->si_code == SI_KERNEL) {\n+    if (sig == SIGSEGV && info->si_addr == nullptr && info->si_code == SI_KERNEL) {\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#include \"runtime\/atomic.hpp\"\n+\n@@ -31,0 +33,17 @@\n+template <typename T>\n+static void pd_conjoint_atomic_helper(const T* from, T* to, size_t count) {\n+  if (from > to) {\n+    while (count-- > 0) {\n+      \/\/ Copy forwards\n+      Atomic::store(to++, Atomic::load(from++));\n+    }\n+  } else {\n+    from += count - 1;\n+    to   += count - 1;\n+    while (count-- > 0) {\n+      \/\/ Copy backwards\n+      Atomic::store(to--, Atomic::load(from--));\n+    }\n+  }\n+}\n+\n@@ -74,13 +93,1 @@\n-  if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -90,13 +97,1 @@\n-  if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -106,1 +101,1 @@\n-  pd_conjoint_oops_atomic((const oop*)from, (oop*)to, count);\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -110,13 +105,1 @@\n- if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+ pd_conjoint_atomic_helper(from, to, count);\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/copy_windows_aarch64.hpp","additions":23,"deletions":40,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-  masm->jump(ExternalAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n+  masm->jump(RuntimeAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,9 +213,10 @@\n-  if (_matrule->find_type(\"Goto\",          index)) return true;\n-  if (_matrule->find_type(\"If\",            index)) return true;\n-  if (_matrule->find_type(\"CountedLoopEnd\",index)) return true;\n-  if (_matrule->find_type(\"Return\",        index)) return true;\n-  if (_matrule->find_type(\"Rethrow\",       index)) return true;\n-  if (_matrule->find_type(\"TailCall\",      index)) return true;\n-  if (_matrule->find_type(\"TailJump\",      index)) return true;\n-  if (_matrule->find_type(\"Halt\",          index)) return true;\n-  if (_matrule->find_type(\"Jump\",          index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"If\",               index)) return true;\n+  if (_matrule->find_type(\"CountedLoopEnd\",   index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n+  if (_matrule->find_type(\"Jump\",             index)) return true;\n@@ -231,6 +232,7 @@\n-  if (_matrule->find_type(\"Goto\",    index)) return true;\n-  if (_matrule->find_type(\"Return\",  index)) return true;\n-  if (_matrule->find_type(\"Rethrow\", index)) return true;\n-  if (_matrule->find_type(\"TailCall\",index)) return true;\n-  if (_matrule->find_type(\"TailJump\",index)) return true;\n-  if (_matrule->find_type(\"Halt\",    index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n@@ -379,0 +381,1 @@\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n@@ -897,0 +900,1 @@\n+      strcmp(_matrule->_opType,\"ForwardException\")==0 ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2181,10 +2181,1 @@\n-  char* base = map_memory(_fd, _full_path, r->file_offset(),\n-                          addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n-                          r->allow_exec());\n-  if (base == nullptr || base != addr) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n-                  INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n-                  p2i(addr), _mapped_heap_memregion.byte_size());\n-    return false;\n-  }\n+  char* base;\n@@ -2192,4 +2183,27 @@\n-  if (VerifySharedSpaces && !r->check_region_crc(base)) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n-    return false;\n+  if (MetaspaceShared::use_windows_memory_mapping()) {\n+    if (!read_region(MetaspaceShared::hp, addr,\n+                     align_up(_mapped_heap_memregion.byte_size(), os::vm_page_size()),\n+                     \/* do_commit = *\/ true)) {\n+      dealloc_heap_region();\n+      log_error(cds)(\"Failed to read archived heap region into \" INTPTR_FORMAT, p2i(addr));\n+      return false;\n+    }\n+    \/\/ Checks for VerifySharedSpaces is already done inside read_region()\n+    base = addr;\n+  } else {\n+    base = map_memory(_fd, _full_path, r->file_offset(),\n+                      addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n+                      r->allow_exec());\n+    if (base == nullptr || base != addr) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+                    INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n+                    p2i(addr), _mapped_heap_memregion.byte_size());\n+      return false;\n+    }\n+\n+    if (VerifySharedSpaces && !r->check_region_crc(base)) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      return false;\n+    }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1557,1 +1557,0 @@\n-  int i;\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-  _keep_alive((has_class_mirror_holder || h_class_loader.is_null()) ? 1 : 0),\n+  _keep_alive_ref_count((has_class_mirror_holder || h_class_loader.is_null()) ? 1 : 0),\n@@ -348,2 +348,2 @@\n-\/\/ it is being defined, therefore _keep_alive is not volatile or atomic.\n-void ClassLoaderData::inc_keep_alive() {\n+\/\/ it is being defined, therefore _keep_alive_ref_count is not volatile or atomic.\n+void ClassLoaderData::inc_keep_alive_ref_count() {\n@@ -351,2 +351,2 @@\n-    assert(_keep_alive > 0, \"Invalid keep alive increment count\");\n-    _keep_alive++;\n+    assert(_keep_alive_ref_count > 0, \"Invalid keep alive increment count\");\n+    _keep_alive_ref_count++;\n@@ -356,1 +356,1 @@\n-void ClassLoaderData::dec_keep_alive() {\n+void ClassLoaderData::dec_keep_alive_ref_count() {\n@@ -358,3 +358,3 @@\n-    assert(_keep_alive > 0, \"Invalid keep alive decrement count\");\n-    if (_keep_alive == 1) {\n-      \/\/ When the keep_alive counter is 1, the oop handle area is a strong root,\n+    assert(_keep_alive_ref_count > 0, \"Invalid keep alive decrement count\");\n+    if (_keep_alive_ref_count == 1) {\n+      \/\/ When the keep_alive_ref_count counter is 1, the oop handle area is a strong root,\n@@ -367,1 +367,1 @@\n-    _keep_alive--;\n+    _keep_alive_ref_count--;\n@@ -683,2 +683,2 @@\n-  bool alive = keep_alive()         \/\/ null class loader and incomplete non-strong hidden class.\n-      || (_holder.peek() != nullptr);  \/\/ and not cleaned by the GC weak handle processing.\n+  bool alive = (_keep_alive_ref_count > 0) \/\/ null class loader and incomplete non-strong hidden class.\n+      || (_holder.peek() != nullptr);      \/\/ and not cleaned by the GC weak handle processing.\n@@ -1012,1 +1012,1 @@\n-  out->print_cr(\" - keep alive          %d\", _keep_alive);\n+  out->print_cr(\" - _keep_alive_ref_count %d\", _keep_alive_ref_count);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,4 +128,4 @@\n-  int _keep_alive;         \/\/ if this CLD is kept alive.\n-                           \/\/ Used for non-strong hidden classes and the\n-                           \/\/ boot class loader. _keep_alive does not need to be volatile or\n-                           \/\/ atomic since there is one unique CLD per non-strong hidden class.\n+  int _keep_alive_ref_count; \/\/ if this CLD should not be considered eligible for unloading.\n+                             \/\/ Used for non-strong hidden classes and the\n+                             \/\/ boot class loader. _keep_alive_ref_count does not need to be volatile or\n+                             \/\/ atomic since there is one unique CLD per non-strong hidden class.\n@@ -208,0 +208,1 @@\n+  \/\/ Resolving the holder keeps this CLD alive for the current GC cycle.\n@@ -209,0 +210,1 @@\n+  void keep_alive() const { (void)holder(); }\n@@ -213,1 +215,1 @@\n-  bool keep_alive() const       { return _keep_alive > 0; }\n+  int keep_alive_ref_count() const { return _keep_alive_ref_count; }\n@@ -305,3 +307,4 @@\n-  \/\/ Used to refcount a non-strong hidden class's s CLD in order to indicate their aliveness.\n-  void inc_keep_alive();\n-  void dec_keep_alive();\n+  \/\/ Used to refcount a non-strong hidden class's CLD in order to force its aliveness during\n+  \/\/ loading, when gc tracing may not find this CLD alive through the holder.\n+  void inc_keep_alive_ref_count();\n+  void dec_keep_alive_ref_count();\n@@ -338,2 +341,2 @@\n-  static ByteSize holder_offset()     { return byte_offset_of(ClassLoaderData, _holder); }\n-  static ByteSize keep_alive_offset() { return byte_offset_of(ClassLoaderData, _keep_alive); }\n+  static ByteSize holder_offset() { return byte_offset_of(ClassLoaderData, _holder); }\n+  static ByteSize keep_alive_ref_count_offset() { return byte_offset_of(ClassLoaderData, _keep_alive_ref_count); }\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.hpp","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-    CLDClosure* closure = cld->keep_alive() ? strong : weak;\n+    CLDClosure* closure = (cld->keep_alive_ref_count() > 0) ? strong : weak;\n@@ -312,2 +312,1 @@\n-    \/\/ Keep the holder alive.\n-    (void)cld->holder();\n+    cld->keep_alive();\n@@ -337,2 +336,1 @@\n-    \/\/ Keep the holder alive.\n-    (void)cld->holder();\n+    cld->keep_alive();\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_OutOfMemoryError(), \"could not allocate Unicode string\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_OutOfMemoryError(), \"could not allocate Unicode string\");\n@@ -966,1 +966,1 @@\n-        k->class_loader_data()->inc_keep_alive();\n+        k->class_loader_data()->inc_keep_alive_ref_count();\n@@ -1455,6 +1455,0 @@\n-\n-  \/\/ Init lock is a C union with component_mirror.  Only instanceKlass mirrors have\n-  \/\/ init_lock and only ArrayKlass mirrors have component_mirror.  Since both are oops\n-  \/\/ GC treats them the same.\n-  _init_lock_offset = _component_mirror_offset;\n-\n@@ -1467,1 +1461,0 @@\n-  f->do_u4((u4*)&_init_lock_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -212,0 +212,1 @@\n+  macro(java_lang_Class, init_lock,              object_signature,  false)\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -708,1 +708,1 @@\n-    k->class_loader_data()->dec_keep_alive();\n+    k->class_loader_data()->dec_keep_alive_ref_count();\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-    THROW_MSG_0(exception, \"No class name given\");\n+    THROW_MSG_NULL(exception, \"No class name given\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -223,0 +224,5 @@\n+#ifndef PRODUCT\n+static int total_access_count = 0;\n+static GrowableArray<int>* extern_hist = nullptr;\n+#endif\n+\n@@ -231,0 +237,6 @@\n+#ifndef PRODUCT\n+  if (PrintNMethodStatistics) {\n+    Arena* arena = &_recorder->_arena;\n+    extern_hist = new(arena) GrowableArray<int>(arena, 512, 512, 0);\n+  }\n+#endif\n@@ -234,1 +246,0 @@\n-  MutexLocker ml(ExternalsRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -236,1 +247,10 @@\n-  return _recorder->_externals.find_index(adr);\n+  MutexLocker ml(ExternalsRecorder_lock, Mutex::_no_safepoint_check_flag);\n+  int index = _recorder->_externals.find_index(adr);\n+#ifndef PRODUCT\n+  if (PrintNMethodStatistics) {\n+    total_access_count++;\n+    int n = extern_hist->at_grow(index, 0);\n+    extern_hist->at_put(index, (n + 1));\n+  }\n+#endif\n+  return index;\n@@ -240,0 +260,1 @@\n+  assert(_recorder != nullptr, \"sanity\");\n@@ -243,1 +264,0 @@\n-  assert(_recorder != nullptr, \"sanity\");\n@@ -248,1 +268,0 @@\n-  MutexLocker ml(ExternalsRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -250,0 +269,1 @@\n+  MutexLocker ml(ExternalsRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -254,0 +274,9 @@\n+extern \"C\" {\n+  \/\/ Order from large to small values\n+  static int count_cmp(const void *i, const void *j) {\n+    int a = *(int*)i;\n+    int b = *(int*)j;\n+    return a < b ? 1 : a > b ? -1 : 0;\n+  }\n+}\n+\n@@ -255,1 +284,54 @@\n-  tty->print_cr(\"External addresses table: %d entries\", count());\n+  int cnt = count();\n+  tty->print_cr(\"External addresses table: %d entries, %d accesses\", cnt, total_access_count);\n+  { \/\/ Print most accessed entries in the table.\n+    int* array = NEW_C_HEAP_ARRAY(int, (2 * cnt), mtCode);\n+    for (int i = 0; i < cnt; i++) {\n+      array[(2 * i) + 0] = extern_hist->at(i);\n+      array[(2 * i) + 1] = i;\n+    }\n+    \/\/ Reverse sort to have \"hottest\" addresses first.\n+    qsort(array, cnt, 2*sizeof(int), count_cmp);\n+    \/\/ Print all entries with Verbose flag otherwise only top 5.\n+    int limit = (Verbose || cnt <= 5) ? cnt : 5;\n+    int j = 0;\n+    for (int i = 0; i < limit; i++) {\n+      int index = array[(2 * i) + 1];\n+      int n = extern_hist->at(index);\n+      if (n > 0) {\n+        address addr = at(index);\n+        tty->print(\"%d: %8d \" INTPTR_FORMAT \" :\", j++, n, p2i(addr));\n+        if (addr != nullptr) {\n+          if (StubRoutines::contains(addr)) {\n+            StubCodeDesc* desc = StubCodeDesc::desc_for(addr);\n+            if (desc == nullptr) {\n+              desc = StubCodeDesc::desc_for(addr + frame::pc_return_offset);\n+            }\n+            const char* stub_name = (desc != nullptr) ? desc->name() : \"<unknown>\";\n+            tty->print(\" stub: %s\", stub_name);\n+          } else {\n+            ResourceMark rm;\n+            const int buflen = 1024;\n+            char* buf = NEW_RESOURCE_ARRAY(char, buflen);\n+            int offset = 0;\n+            if (os::dll_address_to_function_name(addr, buf, buflen, &offset)) {\n+              tty->print(\" extn: %s\", buf);\n+              if (offset != 0) {\n+                tty->print(\"+%d\", offset);\n+              }\n+            } else {\n+              if (CodeCache::contains((void*)addr)) {\n+                \/\/ Something in CodeCache\n+                tty->print(\" in CodeCache\");\n+              } else {\n+                \/\/ It could be string\n+                memcpy(buf, (char*)addr, 80);\n+                buf[80] = '\\0';\n+                tty->print(\" '%s'\", buf);\n+              }\n+            }\n+          }\n+        }\n+        tty->cr();\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/code\/oopRecorder.cpp","additions":87,"deletions":5,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -2339,10 +2339,0 @@\n-G1HeapVerifier::G1VerifyType G1CollectedHeap::young_collection_verify_type() const {\n-  if (collector_state()->in_concurrent_start_gc()) {\n-    return G1HeapVerifier::G1VerifyConcurrentStart;\n-  } else if (collector_state()->in_young_only_phase()) {\n-    return G1HeapVerifier::G1VerifyYoungNormal;\n-  } else {\n-    return G1HeapVerifier::G1VerifyMixed;\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -755,1 +755,0 @@\n-  G1HeapVerifier::G1VerifyType young_collection_verify_type() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  Atomic::add(&_direct_allocated, value);\n+  Atomic::add(&_direct_allocated, value, memory_order_relaxed);\n@@ -37,1 +37,1 @@\n-  Atomic::add(&_num_plab_filled, value);\n+  Atomic::add(&_num_plab_filled, value, memory_order_relaxed);\n@@ -41,1 +41,1 @@\n-  Atomic::add(&_num_direct_allocated, value);\n+  Atomic::add(&_num_direct_allocated, value, memory_order_relaxed);\n@@ -45,2 +45,2 @@\n-  Atomic::add(&_region_end_waste, value);\n-  Atomic::inc(&_regions_filled);\n+  Atomic::add(&_region_end_waste, value, memory_order_relaxed);\n+  Atomic::inc(&_regions_filled, memory_order_relaxed);\n@@ -50,2 +50,2 @@\n-  Atomic::add(&_failure_used, used);\n-  Atomic::add(&_failure_waste, waste);\n+  Atomic::add(&_failure_used, used, memory_order_relaxed);\n+  Atomic::add(&_failure_waste, waste, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacStats.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -46,0 +47,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -64,1 +66,2 @@\n-                                           G1EvacFailureRegions* evac_failure_regions)\n+                                           G1EvacFailureRegions* evac_failure_regions,\n+                                           PartialArrayStateAllocator* pas_allocator)\n@@ -83,2 +86,2 @@\n-    _partial_objarray_chunk_size(ParGCArrayScanChunk),\n-    _partial_array_stepper(num_workers),\n+    _partial_array_state_allocator(pas_allocator),\n+    _partial_array_stepper(num_workers, ParGCArrayScanChunk),\n@@ -172,1 +175,1 @@\n-void G1ParScanThreadState::verify_task(PartialArrayScanTask task) const {\n+void G1ParScanThreadState::verify_task(PartialArrayState* task) const {\n@@ -174,1 +177,1 @@\n-  oop p = task.to_source_array();\n+  oop p = task->source();\n@@ -183,2 +186,2 @@\n-  } else if (task.is_partial_array_task()) {\n-    verify_task(task.to_partial_array_task());\n+  } else if (task.is_partial_array_state()) {\n+    verify_task(task.to_partial_array_state());\n@@ -226,2 +229,2 @@\n-void G1ParScanThreadState::do_partial_array(PartialArrayScanTask task) {\n-  oop from_obj = task.to_source_array();\n+void G1ParScanThreadState::do_partial_array(PartialArrayState* state) {\n+  oop to_obj = state->destination();\n@@ -229,0 +232,2 @@\n+#ifdef ASSERT\n+  oop from_obj = state->source();\n@@ -232,2 +237,0 @@\n-\n-  oop to_obj = from_obj->forwardee();\n@@ -236,0 +239,2 @@\n+#endif \/\/ ASSERT\n+\n@@ -238,6 +243,9 @@\n-  PartialArrayTaskStepper::Step step\n-    = _partial_array_stepper.next(objArrayOop(from_obj),\n-                                  to_array,\n-                                  _partial_objarray_chunk_size);\n-  for (uint i = 0; i < step._ncreate; ++i) {\n-    push_on_queue(ScannerTask(PartialArrayScanTask(from_obj)));\n+  \/\/ Claim a chunk and get number of additional tasks to enqueue.\n+  PartialArrayTaskStepper::Step step = _partial_array_stepper.next(state);\n+  \/\/ Push any additional partial scan tasks needed.  Pushed before processing\n+  \/\/ the claimed chunk to allow other workers to steal while we're processing.\n+  if (step._ncreate > 0) {\n+    state->add_references(step._ncreate);\n+    for (uint i = 0; i < step._ncreate; ++i) {\n+      push_on_queue(ScannerTask(state));\n+    }\n@@ -248,3 +256,1 @@\n-  \/\/ Process claimed task.  The length of to_array is not correct, but\n-  \/\/ fortunately the iteration ignores the length field and just relies\n-  \/\/ on start\/end.\n+  \/\/ Process claimed task.\n@@ -252,2 +258,4 @@\n-                              step._index,\n-                              step._index + _partial_objarray_chunk_size);\n+                              checked_cast<int>(step._index),\n+                              checked_cast<int>(step._index + _partial_array_stepper.chunk_size()));\n+  \/\/ Release reference to the state, now that we're done with it.\n+  _partial_array_state_allocator->release(_worker_id, state);\n@@ -263,1 +271,0 @@\n-  assert(from_obj != to_obj, \"should not be scanning self-forwarded objects\");\n@@ -268,4 +275,2 @@\n-  PartialArrayTaskStepper::Step step\n-    = _partial_array_stepper.start(objArrayOop(from_obj),\n-                                   to_array,\n-                                   _partial_objarray_chunk_size);\n+  size_t array_length = to_array->length();\n+  PartialArrayTaskStepper::Step step = _partial_array_stepper.start(array_length);\n@@ -275,2 +280,15 @@\n-  for (uint i = 0; i < step._ncreate; ++i) {\n-    push_on_queue(ScannerTask(PartialArrayScanTask(from_obj)));\n+  if (step._ncreate > 0) {\n+    assert(step._index < array_length, \"invariant\");\n+    assert(((array_length - step._index) % _partial_array_stepper.chunk_size()) == 0,\n+           \"invariant\");\n+    PartialArrayState* state =\n+      _partial_array_state_allocator->allocate(_worker_id,\n+                                               from_obj, to_obj,\n+                                               step._index,\n+                                               array_length,\n+                                               step._ncreate);\n+    for (uint i = 0; i < step._ncreate; ++i) {\n+      push_on_queue(ScannerTask(state));\n+    }\n+  } else {\n+    assert(step._index == array_length, \"invariant\");\n@@ -287,3 +305,2 @@\n-  \/\/ module. The length of to_array is not correct, but fortunately\n-  \/\/ the iteration ignores that length field and relies on start\/end.\n-  to_array->oop_iterate_range(&_scanner, 0, step._index);\n+  \/\/ module.\n+  to_array->oop_iterate_range(&_scanner, 0, checked_cast<int>(step._index));\n@@ -300,1 +317,1 @@\n-    do_partial_array(task.to_partial_array_task());\n+    do_partial_array(task.to_partial_array_state());\n@@ -585,1 +602,2 @@\n-                               _evac_failure_regions);\n+                               _evac_failure_regions,\n+                               &_partial_array_state_allocator);\n@@ -718,1 +736,3 @@\n-    _evac_failure_regions(evac_failure_regions) {\n+    _evac_failure_regions(evac_failure_regions),\n+    _partial_array_state_allocator(num_workers)\n+{\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":55,"deletions":35,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -90,1 +91,2 @@\n-  int _partial_objarray_chunk_size;\n+  size_t _partial_objarray_chunk_size;\n+  PartialArrayStateAllocator* _partial_array_state_allocator;\n@@ -132,1 +134,2 @@\n-                       G1EvacFailureRegions* evac_failure_regions);\n+                       G1EvacFailureRegions* evac_failure_regions,\n+                       PartialArrayStateAllocator* partial_array_state_allocator);\n@@ -143,1 +146,1 @@\n-  void verify_task(PartialArrayScanTask task) const NOT_DEBUG_RETURN;\n+  void verify_task(PartialArrayState* task) const NOT_DEBUG_RETURN;\n@@ -172,1 +175,1 @@\n-  void do_partial_array(PartialArrayScanTask task);\n+  void do_partial_array(PartialArrayState* state);\n@@ -255,0 +258,1 @@\n+  PartialArrayStateAllocator _partial_array_state_allocator;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -226,4 +226,0 @@\n-\n-  virtual GCPolicyCounters::Name kind() const {\n-    return GCPolicyCounters::GCAdaptivePolicyCountersKind;\n-  }\n","filename":"src\/hotspot\/share\/gc\/parallel\/gcAdaptivePolicyCounters.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -183,4 +183,0 @@\n-\n-  virtual GCPolicyCounters::Name kind() const {\n-    return GCPolicyCounters::PSGCAdaptivePolicyCountersKind;\n-  }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psGCAdaptivePolicyCounters.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -575,5 +575,0 @@\n-HeapWord* DefNewGeneration::expand_and_allocate(size_t size, bool is_tlab) {\n-  \/\/ We don't attempt to expand the young generation (but perhaps we should.)\n-  return allocate(size, is_tlab);\n-}\n-\n@@ -836,1 +831,0 @@\n-  SerialHeap::heap()->counters()->update_counters();\n@@ -869,1 +863,1 @@\n-HeapWord* DefNewGeneration::allocate(size_t word_size, bool is_tlab) {\n+HeapWord* DefNewGeneration::allocate(size_t word_size) {\n@@ -879,2 +873,1 @@\n-HeapWord* DefNewGeneration::par_allocate(size_t word_size,\n-                                         bool is_tlab) {\n+HeapWord* DefNewGeneration::par_allocate(size_t word_size) {\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -212,3 +212,3 @@\n-  HeapWord* allocate(size_t word_size, bool is_tlab);\n-\n-  HeapWord* par_allocate(size_t word_size, bool is_tlab);\n+  \/\/ Allocate requested size or return null; single-threaded and lock-free versions.\n+  HeapWord* allocate(size_t word_size);\n+  HeapWord* par_allocate(size_t word_size);\n@@ -230,2 +230,0 @@\n-  HeapWord* expand_and_allocate(size_t size, bool is_tlab);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -106,14 +106,0 @@\n-  \/\/ Allocate and returns a block of the requested size, or returns \"null\".\n-  \/\/ Assumes the caller has done any necessary locking.\n-  virtual HeapWord* allocate(size_t word_size, bool is_tlab) = 0;\n-\n-  \/\/ Like \"allocate\", but performs any necessary locking internally.\n-  virtual HeapWord* par_allocate(size_t word_size, bool is_tlab) = 0;\n-\n-  \/\/ Perform a heap collection, attempting to create (at least) enough\n-  \/\/ space to support an allocation of the given \"word_size\".  If\n-  \/\/ successful, perform the allocation and return the resulting\n-  \/\/ \"oop\" (initializing the allocated block). If the allocation is\n-  \/\/ still unsuccessful, return \"null\".\n-  virtual HeapWord* expand_and_allocate(size_t word_size, bool is_tlab) = 0;\n-\n@@ -131,2 +117,1 @@\n-  virtual void update_counters() = 0;\n-  virtual CollectorCounters* counters() { return _gc_counters; }\n+  CollectorCounters* counters() { return _gc_counters; }\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  return old_gen()->allocate(word_size, false \/* is_tlab *\/);\n+  return old_gen()->allocate(word_size);\n@@ -295,1 +295,1 @@\n-    result = _old_gen->expand_and_allocate(size, is_tlab);\n+    result = _old_gen->expand_and_allocate(size);\n@@ -299,1 +299,2 @@\n-      result = _young_gen->expand_and_allocate(size, is_tlab);\n+      \/\/ Young-gen is not expanded.\n+      result = _young_gen->allocate(size);\n@@ -317,1 +318,1 @@\n-      result = young->par_allocate(size, is_tlab);\n+      result = young->par_allocate(size);\n@@ -409,1 +410,1 @@\n-    res = _young_gen->allocate(size, is_tlab);\n+    res = _young_gen->allocate(size);\n@@ -416,1 +417,1 @@\n-    res = _old_gen->allocate(size, is_tlab);\n+    res = _old_gen->allocate(size);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-  HeapWord* result = allocate(obj_size, false);\n+  HeapWord* result = allocate(obj_size);\n@@ -403,1 +403,1 @@\n-    result = expand_and_allocate(obj_size, false);\n+    result = expand_and_allocate(obj_size);\n@@ -410,2 +410,1 @@\n-TenuredGeneration::expand_and_allocate(size_t word_size, bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n+TenuredGeneration::expand_and_allocate(size_t word_size) {\n@@ -413,1 +412,1 @@\n-  return allocate(word_size, is_tlab);\n+  return allocate(word_size);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -133,2 +133,3 @@\n-  virtual inline HeapWord* allocate(size_t word_size, bool is_tlab);\n-  virtual inline HeapWord* par_allocate(size_t word_size, bool is_tlab);\n+  \/\/ Allocate and returns a block of the requested size, or returns \"null\".\n+  \/\/ Assumes the caller has done any necessary locking.\n+  inline HeapWord* allocate(size_t word_size);\n@@ -136,1 +137,2 @@\n-  HeapWord* expand_and_allocate(size_t size, bool is_tlab);\n+  \/\/ Expand the old-gen then invoke allocate above.\n+  HeapWord* expand_and_allocate(size_t size);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,3 +51,1 @@\n-HeapWord* TenuredGeneration::allocate(size_t word_size,\n-                                      bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n+HeapWord* TenuredGeneration::allocate(size_t word_size) {\n@@ -61,10 +59,0 @@\n-HeapWord* TenuredGeneration::par_allocate(size_t word_size,\n-                                          bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n-  HeapWord* res = _the_space->par_allocate(word_size);\n-  if (res != nullptr) {\n-    _bts->update_for_block(res, res + word_size);\n-  }\n-  return res;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -49,7 +49,0 @@\n-  enum Name {\n-    NONE,\n-    GCPolicyCountersKind,\n-    GCAdaptivePolicyCountersKind,\n-    PSGCAdaptivePolicyCountersKind\n-  };\n-\n@@ -71,6 +64,0 @@\n-\n-  virtual void update_counters() {}\n-\n-  virtual GCPolicyCounters::Name kind() const {\n-    return GCPolicyCounters::GCPolicyCountersKind;\n-  }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcPolicyCounters.hpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shared\/partialArrayState.hpp\"\n+#include \"memory\/allocation.inline.hpp\"\n+#include \"memory\/arena.hpp\"\n+#include \"nmt\/memflags.hpp\"\n+#include \"oops\/oopsHierarchy.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"runtime\/orderAccess.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+#include <new>\n+\n+PartialArrayState::PartialArrayState(oop src, oop dst,\n+                                     size_t index, size_t length,\n+                                     size_t initial_refcount)\n+  : _source(src),\n+    _destination(dst),\n+    _length(length),\n+    _index(index),\n+    _refcount(initial_refcount)\n+{\n+  assert(index <= length, \"precondition\");\n+}\n+\n+void PartialArrayState::add_references(size_t count) {\n+  size_t new_count = Atomic::add(&_refcount, count, memory_order_relaxed);\n+  assert(new_count >= count, \"reference count overflow\");\n+}\n+\n+class PartialArrayStateAllocator::Impl : public CHeapObj<mtGC> {\n+  struct FreeListEntry;\n+\n+  Arena* _arenas;\n+  FreeListEntry** _free_lists;\n+  uint _num_workers;\n+\n+public:\n+  Impl(uint num_workers);\n+  ~Impl();\n+\n+  NONCOPYABLE(Impl);\n+\n+  PartialArrayState* allocate(uint worker_id,\n+                              oop src, oop dst,\n+                              size_t index, size_t length,\n+                              size_t initial_refcount);\n+  void release(uint worker_id, PartialArrayState* state);\n+};\n+\n+struct PartialArrayStateAllocator::Impl::FreeListEntry {\n+  FreeListEntry* _next;\n+\n+  FreeListEntry(FreeListEntry* next) : _next(next) {}\n+  ~FreeListEntry() = default;\n+\n+  NONCOPYABLE(FreeListEntry);\n+};\n+\n+PartialArrayStateAllocator::Impl::Impl(uint num_workers)\n+  : _arenas(NEW_C_HEAP_ARRAY(Arena, num_workers, mtGC)),\n+    _free_lists(NEW_C_HEAP_ARRAY(FreeListEntry*, num_workers, mtGC)),\n+    _num_workers(num_workers)\n+{\n+  for (uint i = 0; i < _num_workers; ++i) {\n+    ::new (&_arenas[i]) Arena(mtGC);\n+    _free_lists[i] = nullptr;\n+  }\n+}\n+\n+PartialArrayStateAllocator::Impl::~Impl() {\n+  \/\/ We don't need to clean up the free lists.  Deallocating the entries\n+  \/\/ does nothing, since we're using arena allocation.  Instead, leave it\n+  \/\/ to the arena destructor to release the memory.\n+  FREE_C_HEAP_ARRAY(FreeListEntry*, _free_lists);\n+  for (uint i = 0; i < _num_workers; ++i) {\n+    _arenas[i].~Arena();\n+  }\n+  FREE_C_HEAP_ARRAY(Arena*, _arenas);\n+}\n+\n+PartialArrayState* PartialArrayStateAllocator::Impl::allocate(uint worker_id,\n+                                                              oop src, oop dst,\n+                                                              size_t index,\n+                                                              size_t length,\n+                                                              size_t initial_refcount) {\n+  void* p;\n+  FreeListEntry* head = _free_lists[worker_id];\n+  if (head == nullptr) {\n+    p = NEW_ARENA_OBJ(&_arenas[worker_id], PartialArrayState);\n+  } else {\n+    _free_lists[worker_id] = head->_next;\n+    head->~FreeListEntry();\n+    p = head;\n+  }\n+  return ::new (p) PartialArrayState(src, dst, index, length, initial_refcount);\n+}\n+\n+void PartialArrayStateAllocator::Impl::release(uint worker_id, PartialArrayState* state) {\n+  size_t refcount = Atomic::sub(&state->_refcount, size_t(1), memory_order_release);\n+  if (refcount != 0) {\n+    assert(refcount + 1 != 0, \"refcount underflow\");\n+  } else {\n+    OrderAccess::acquire();\n+    state->~PartialArrayState();\n+    _free_lists[worker_id] = ::new (state) FreeListEntry(_free_lists[worker_id]);\n+  }\n+}\n+\n+PartialArrayStateAllocator::PartialArrayStateAllocator(uint num_workers)\n+  : _impl(new Impl(num_workers))\n+{}\n+\n+PartialArrayStateAllocator::~PartialArrayStateAllocator() {\n+  delete _impl;\n+}\n+\n+PartialArrayState* PartialArrayStateAllocator::allocate(uint worker_id,\n+                                                        oop src, oop dst,\n+                                                        size_t index,\n+                                                        size_t length,\n+                                                        size_t initial_refcount) {\n+  return _impl->allocate(worker_id, src, dst, index, length, initial_refcount);\n+}\n+\n+void PartialArrayStateAllocator::release(uint worker_id, PartialArrayState* state) {\n+  _impl->release(worker_id, state);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayState.cpp","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n+#define SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n+\n+#include \"oops\/oopsHierarchy.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+class PartialArrayStateAllocator;\n+\n+\/\/ Instances of this class are used to represent processing progress for an\n+\/\/ array task in a taskqueue.  When a sufficiently large array needs to be\n+\/\/ processed, such that it is desirable to split up the processing into\n+\/\/ parallelizable subtasks, a state object is allocated for the array.\n+\/\/ Multiple tasks referring to the state can then be added to the taskqueue\n+\/\/ for later processing, either by the current thread or by some other thread\n+\/\/ that steals one of those tasks.\n+\/\/\n+\/\/ Processing a state involves using the state to claim a segment of the\n+\/\/ array, and processing that segment.  Claiming is done by atomically\n+\/\/ incrementing the index, thereby claiming the segment from the old to new\n+\/\/ index values.  New tasks should also be added as needed to ensure the\n+\/\/ entire array will be processed.  A PartialArrayTaskStepper can be used to\n+\/\/ help with this.\n+\/\/\n+\/\/ States are allocated and released using a PartialArrayStateAllocator.\n+\/\/ States are reference counted to aid in that management.  Each task\n+\/\/ referring to a given state that is added to a taskqueue must increase the\n+\/\/ reference count by one.  When the processing of a task referring to a state\n+\/\/ is complete, the reference count must be decreased by one.  When the\n+\/\/ reference count reaches zero the state should be released to the allocator\n+\/\/ for later reuse.\n+class PartialArrayState {\n+  oop _source;\n+  oop _destination;\n+  size_t _length;\n+  volatile size_t _index;\n+  volatile size_t _refcount;\n+\n+  friend class PartialArrayStateAllocator;\n+\n+  PartialArrayState(oop src, oop dst,\n+                    size_t index, size_t length,\n+                    size_t initial_refcount);\n+  ~PartialArrayState() = default;\n+\n+  NONCOPYABLE(PartialArrayState);\n+\n+public:\n+  \/\/ Add count references, one per referring task being added to a taskqueue.\n+  void add_references(size_t count);\n+\n+  \/\/ The source array oop.\n+  oop source() const { return _source; }\n+\n+  \/\/ The destination array oop.  In some circumstances the source and\n+  \/\/ destination may be the same.\n+  oop destination() const { return _destination; }\n+\n+  \/\/ The length of the array oop.\n+  size_t length() const { return _length; }\n+\n+  \/\/ A pointer to the start index for the next segment to process, for atomic\n+  \/\/ update.\n+  volatile size_t* index_addr() { return &_index; }\n+};\n+\n+\/\/ This class provides memory management for PartialArrayStates.\n+\/\/\n+\/\/ States are initially allocated from a set of arenas owned by the allocator.\n+\/\/ This allows the entire set of allocated states to be discarded without the\n+\/\/ need to keep track of or find them under some circumstances.  For example,\n+\/\/ if G1 concurrent marking is aborted and needs to restart because of a full\n+\/\/ marking queue, the queue doesn't need to be searched for tasks referring to\n+\/\/ states to allow releasing them.  Instead the queue contents can just be\n+\/\/ discarded, and the memory for the no longer referenced states will\n+\/\/ eventually be reclaimed when the arenas are reset.\n+\/\/\n+\/\/ A set of free-lists is placed in front of the arena allocators.  This\n+\/\/ causes the maximum number of allocated states to be based on the number of\n+\/\/ in-progress arrays, rather than the total number of arrays that need to be\n+\/\/ processed.  The use of free-list allocators is the reason for reference\n+\/\/ counting states.\n+\/\/\n+\/\/ The arena and free-list to use for an allocation operation is designated by\n+\/\/ the worker_id used in the operation.  This avoids locking and such on those\n+\/\/ data structures, at the cost of possibly doing more total arena allocation\n+\/\/ that would be needed with a single shared arena and free-list.\n+class PartialArrayStateAllocator {\n+  class Impl;\n+  Impl* _impl;\n+\n+public:\n+  PartialArrayStateAllocator(uint num_workers);\n+  ~PartialArrayStateAllocator();\n+\n+  NONCOPYABLE(PartialArrayStateAllocator);\n+\n+  \/\/ Create a new state, obtaining the memory for it from the free-list or\n+  \/\/ arena associated with worker_id.\n+  PartialArrayState* allocate(uint worker_id,\n+                              oop src, oop dst,\n+                              size_t index, size_t length,\n+                              size_t initial_refcount);\n+\n+  \/\/ Decrement the state's refcount.  If the new refcount is zero, add the\n+  \/\/ state to the free-list associated with worker_id.  The state must have\n+  \/\/ been allocated by this allocator, but that allocation doesn't need to\n+  \/\/ have been associated with worker_id.\n+  void release(uint worker_id, PartialArrayState* state);\n+};\n+\n+#endif \/\/ SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayState.hpp","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -51,1 +52,2 @@\n-PartialArrayTaskStepper::PartialArrayTaskStepper(uint n_workers) :\n+PartialArrayTaskStepper::PartialArrayTaskStepper(uint n_workers, size_t chunk_size) :\n+  _chunk_size(chunk_size),\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,3 @@\n-\/\/ Helper for handling PartialArrayTasks.\n+class PartialArrayState;\n+\n+\/\/ Helper for partial array chunking tasks.\n@@ -34,11 +36,4 @@\n-\/\/ processed in parallel.  Each task (implicitly) represents such a chunk.\n-\/\/ We can enqueue multiple tasks at the same time.  We want to enqueue\n-\/\/ enough tasks to benefit from the available parallelism, while not so many\n-\/\/ as to substantially expand the task queues.\n-\/\/\n-\/\/ A task directly refers to the from-space array.  The from-space array's\n-\/\/ forwarding pointer refers to the associated to-space array, and its\n-\/\/ length is the actual length. The to-space array's length field is used to\n-\/\/ indicate processing progress.  It is the starting index of the next chunk\n-\/\/ to process, or equals the actual length when there are no more chunks to\n-\/\/ be processed.\n+\/\/ processed in parallel.  Each task (implicitly) represents such a chunk.  We\n+\/\/ can enqueue multiple tasks at the same time.  We want to enqueue enough\n+\/\/ tasks to benefit from the available parallelism, while not so many as to\n+\/\/ substantially expand the task queues.\n@@ -47,1 +42,1 @@\n-  PartialArrayTaskStepper(uint n_workers);\n+  PartialArrayTaskStepper(uint n_workers, size_t chunk_size);\n@@ -50,1 +45,1 @@\n-    int _index;                 \/\/ Array index for the step.\n+    size_t _index;              \/\/ Array index for the step.\n@@ -54,5 +49,12 @@\n-  \/\/ Set to's length to the end of the initial chunk, which is the start of\n-  \/\/ the first partial task if the array is large enough to need splitting.\n-  \/\/ Returns a Step with _index being that index and _ncreate being the\n-  \/\/ initial number of partial tasks to enqueue.\n-  inline Step start(arrayOop from, arrayOop to, int chunk_size) const;\n+  \/\/ Called with the length of the array to be processed.  Returns a Step with\n+  \/\/ _index being the end of the initial chunk, which the caller should\n+  \/\/ process.  This is also the starting index for the next chunk to process.\n+  \/\/ The _ncreate is the number of tasks to enqueue to continue processing the\n+  \/\/ array.  If _ncreate is zero then _index will be length.\n+  inline Step start(size_t length) const;\n+\n+  \/\/ Atomically increment state's index by chunk_size() to claim the next\n+  \/\/ chunk.  Returns a Step with _index being the starting index of the\n+  \/\/ claimed chunk and _ncreate being the number of additional partial tasks\n+  \/\/ to enqueue.\n+  inline Step next(PartialArrayState* state) const;\n@@ -60,5 +62,2 @@\n-  \/\/ Increment to's length by chunk_size to claim the next chunk.  Returns a\n-  \/\/ Step with _index being the starting index of the claimed chunk and\n-  \/\/ _ncreate being the number of additional partial tasks to enqueue.\n-  \/\/ precondition: chunk_size must be the same as used to start the task sequence.\n-  inline Step next(arrayOop from, arrayOop to, int chunk_size) const;\n+  \/\/ The size of chunks to claim for each task.\n+  inline size_t chunk_size() const;\n@@ -69,0 +68,2 @@\n+  \/\/ Size (number of elements) of a chunk to process.\n+  size_t _chunk_size;\n@@ -74,6 +75,2 @@\n-  \/\/ Split start\/next into public part dealing with oops and private\n-  \/\/ impl dealing with lengths and pointers to lengths, for unit testing.\n-  \/\/ length is the actual length obtained from the from-space object.\n-  \/\/ to_length_addr is the address of the to-space object's length value.\n-  inline Step start_impl(int length, int* to_length_addr, int chunk_size) const;\n-  inline Step next_impl(int length, int* to_length_addr, int chunk_size) const;\n+  \/\/ For unit tests.\n+  inline Step next_impl(size_t length, volatile size_t* index_addr) const;\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.hpp","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -29,2 +30,0 @@\n-\n-#include \"oops\/arrayOop.hpp\"\n@@ -32,0 +31,2 @@\n+#include \"utilities\/checkedCast.hpp\"\n+#include \"utilities\/debug.hpp\"\n@@ -33,17 +34,3 @@\n-PartialArrayTaskStepper::Step\n-PartialArrayTaskStepper::start_impl(int length,\n-                                    int* to_length_addr,\n-                                    int chunk_size) const {\n-  assert(chunk_size > 0, \"precondition\");\n-\n-  int end = length % chunk_size; \/\/ End of initial chunk.\n-  \/\/ Set to's length to end of initial chunk.  Partial tasks use that length\n-  \/\/ field as the start of the next chunk to process.  Must be done before\n-  \/\/ enqueuing partial scan tasks, in case other threads steal any of those\n-  \/\/ tasks.\n-  \/\/\n-  \/\/ The value of end can be 0, either because of a 0-length array or\n-  \/\/ because length is a multiple of the chunk size.  Both of those are\n-  \/\/ relatively rare and handled in the normal course of the iteration, so\n-  \/\/ not worth doing anything special about here.\n-  *to_length_addr = end;\n+size_t PartialArrayTaskStepper::chunk_size() const {\n+  return _chunk_size;\n+}\n@@ -51,0 +38,3 @@\n+PartialArrayTaskStepper::Step\n+PartialArrayTaskStepper::start(size_t length) const {\n+  size_t end = length % _chunk_size; \/\/ End of initial chunk.\n@@ -54,2 +44,1 @@\n-  Step result = { end, (length > end) ? 1u : 0u };\n-  return result;\n+  return Step{ end, (length > end) ? 1u : 0u };\n@@ -59,11 +48,2 @@\n-PartialArrayTaskStepper::start(arrayOop from, arrayOop to, int chunk_size) const {\n-  return start_impl(from->length(), to->length_addr(), chunk_size);\n-}\n-\n-PartialArrayTaskStepper::Step\n-PartialArrayTaskStepper::next_impl(int length,\n-                                   int* to_length_addr,\n-                                   int chunk_size) const {\n-  assert(chunk_size > 0, \"precondition\");\n-\n-  \/\/ The start of the next task is in the length field of the to-space object.\n+PartialArrayTaskStepper::next_impl(size_t length, volatile size_t* index_addr) const {\n+  \/\/ The start of the next task is in the state's index.\n@@ -74,3 +54,3 @@\n-  int start = Atomic::fetch_then_add(to_length_addr,\n-                                     chunk_size,\n-                                     memory_order_relaxed);\n+  size_t start = Atomic::fetch_then_add(index_addr,\n+                                        _chunk_size,\n+                                        memory_order_relaxed);\n@@ -78,4 +58,4 @@\n-  assert(start < length, \"invariant: start %d, length %d\", start, length);\n-  assert(((length - start) % chunk_size) == 0,\n-         \"invariant: start %d, length %d, chunk size %d\",\n-         start, length, chunk_size);\n+  assert(start < length, \"invariant: start %zu, length %zu\", start, length);\n+  assert(((length - start) % _chunk_size) == 0,\n+         \"invariant: start %zu, length %zu, chunk size %zu\",\n+         start, length, _chunk_size);\n@@ -85,1 +65,1 @@\n-  uint task_num = (start \/ chunk_size);\n+  uint task_num = checked_cast<uint>(start \/ _chunk_size);\n@@ -87,1 +67,1 @@\n-  uint remaining_tasks = (length - start) \/ chunk_size;\n+  uint remaining_tasks = checked_cast<uint>((length - start) \/ _chunk_size);\n@@ -109,2 +89,1 @@\n-  Step result = { start, ncreate };\n-  return result;\n+  return Step{ start, ncreate };\n@@ -114,2 +93,2 @@\n-PartialArrayTaskStepper::next(arrayOop from, arrayOop to, int chunk_size) const {\n-  return next_impl(from->length(), to->length_addr(), chunk_size);\n+PartialArrayTaskStepper::next(PartialArrayState* state) const {\n+  return next_impl(state->length(), state->index_addr());\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.inline.hpp","additions":25,"deletions":46,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -579,0 +579,1 @@\n+\/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -589,1 +590,3 @@\n-\/\/ Discriminated union over oop*, narrowOop*, and PartialArrayScanTask.\n+class PartialArrayState;\n+\n+\/\/ Discriminated union over oop*, narrowOop*, and PartialArrayState.\n@@ -627,0 +630,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -630,0 +634,3 @@\n+  explicit ScannerTask(PartialArrayState* state) :\n+    _p(encode(state, PartialArrayTag)) {}\n+\n@@ -642,0 +649,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -646,0 +654,4 @@\n+  bool is_partial_array_state() const {\n+    return (raw_value() & PartialArrayTag) != 0;\n+  }\n+\n@@ -654,0 +666,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -657,0 +670,4 @@\n+\n+  PartialArrayState* to_partial_array_state() const {\n+    return static_cast<PartialArrayState*>(decode(PartialArrayTag));\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.hpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -826,1 +826,1 @@\n-    heap->rendezvous_threads();\n+    heap->rendezvous_threads(\"Shenandoah Concurrent Weak Roots\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-    HandshakeClosure(\"Shenandoah Flush SATB Handshake\"),\n+    HandshakeClosure(\"Shenandoah Flush SATB\"),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1747,1 +1747,1 @@\n-  inline ShenandoahRendezvousClosure() : HandshakeClosure(\"ShenandoahRendezvous\") {}\n+  inline ShenandoahRendezvousClosure(const char* name) : HandshakeClosure(name) {}\n@@ -1751,2 +1751,2 @@\n-void ShenandoahHeap::rendezvous_threads() {\n-  ShenandoahRendezvousClosure cl;\n+void ShenandoahHeap::rendezvous_threads(const char* name) {\n+  ShenandoahRendezvousClosure cl(name);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-  void rendezvous_threads();\n+  void rendezvous_threads(const char* name);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-    heap->rendezvous_threads();\n+    heap->rendezvous_threads(\"Shenandoah Class Unloading\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -330,1 +330,1 @@\n-    CodeBuffer cb(blob->content_begin(), (address)C->output()->scratch_locs_memory() - blob->content_begin());\n+    CodeBuffer cb(blob->content_begin(), checked_cast<CodeBuffer::csize_t>((address)C->output()->scratch_locs_memory() - blob->content_begin()));\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,3 +96,1 @@\n-    check_oop_function = [](oopDesc* obj) {\n-      (void)to_zaddress(obj);\n-    };\n+    check_oop_function = &check_is_valid_zaddress;\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -336,2 +336,1 @@\n-inline zaddress to_zaddress(uintptr_t value) {\n-  const zaddress addr = zaddress(value);\n+inline void check_is_valid_zaddress(zaddress addr) {\n@@ -340,0 +339,13 @@\n+}\n+\n+inline void check_is_valid_zaddress(uintptr_t value) {\n+  check_is_valid_zaddress(zaddress(value));\n+}\n+\n+inline void check_is_valid_zaddress(oopDesc* o) {\n+  check_is_valid_zaddress(uintptr_t(o));\n+}\n+\n+inline zaddress to_zaddress(uintptr_t value) {\n+  const zaddress addr = zaddress(value);\n+  check_is_valid_zaddress(addr);\n@@ -347,1 +359,1 @@\n-inline oop to_oop(zaddress addr) {\n+inline void assert_is_oop_or_null(zaddress addr) {\n@@ -355,1 +367,10 @@\n-  return obj;\n+}\n+\n+inline void assert_is_oop(zaddress addr) {\n+  assert(!is_null(addr), \"Should not be null\");\n+  assert_is_oop_or_null(addr);\n+}\n+\n+inline oop to_oop(zaddress addr) {\n+  assert_is_oop_or_null(addr);\n+  return cast_to_oop(addr);\n@@ -381,1 +402,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.inline.hpp","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    FLAG_SET_ERGO_IF_DEFAULT(MaxTenuringThreshold, ZTenuringThreshold);\n+    FLAG_SET_ERGO_IF_DEFAULT(MaxTenuringThreshold, (uint)ZTenuringThreshold);\n","filename":"src\/hotspot\/share\/gc\/z\/zArguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-  : ZArrayIteratorImpl<T, Parallel>(array->is_empty() ? nullptr : array->adr_at(0), array->length()) {}\n+  : ZArrayIteratorImpl<T, Parallel>(array->is_empty() ? nullptr : array->adr_at(0), (size_t)array->length()) {}\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -294,1 +294,1 @@\n-    const uintptr_t base = (uintptr_t)referent_addr - java_lang_ref_Reference::referent_offset();\n+    const uintptr_t base = (uintptr_t)referent_addr - (size_t)java_lang_ref_Reference::referent_offset();\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -748,1 +748,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr), false), \"must be oop\");\n+  assert_is_oop(addr);\n@@ -760,1 +760,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr), false), \"must be oop\");\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -433,1 +433,1 @@\n-  assert_is_valid(to_zaddress(src));\n+  check_is_valid_zaddress(src);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-  const uintptr_t new_color = *(int*)ZPointerStoreGoodMaskLowOrderBitsAddr;\n+  const uintptr_t new_color = *ZPointerStoreGoodMaskLowOrderBitsAddr;\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSetNMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-  return os::processor_count();\n+  return (uint32_t)os::processor_count();\n","filename":"src\/hotspot\/share\/gc\/z\/zCPU.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  return clamp<uint>(ceil(gc_workers), 1, ZYoungGCThreads);\n+  return clamp<uint>((uint)ceil(gc_workers), 1, ZYoungGCThreads);\n@@ -429,1 +429,1 @@\n-  const size_t used_threshold = soft_max_capacity * used_threshold_percent;\n+  const size_t used_threshold = (size_t)(soft_max_capacity * used_threshold_percent);\n@@ -500,1 +500,1 @@\n-  const int lookahead = stats._heap._total_collections - stats._old_stats._general._total_collections_at_start;\n+  const uint lookahead = stats._heap._total_collections - stats._old_stats._general._total_collections_at_start;\n@@ -506,1 +506,1 @@\n-  log_debug(gc, director)(\"Rule Major: Allocation Rate, ExtraYoungGCTime: %.3fs, OldGCTime: %.3fs, Lookahead: %d, ExtraYoungGCTimeForLookahead: %.3fs\",\n+  log_debug(gc, director)(\"Rule Major: Allocation Rate, ExtraYoungGCTime: %.3fs, OldGCTime: %.3fs, Lookahead: %u, ExtraYoungGCTimeForLookahead: %.3fs\",\n@@ -568,1 +568,1 @@\n-  const size_t used_increase_threshold = stats._heap._soft_max_heap_size * 0.10; \/\/ 10%\n+  const size_t used_increase_threshold = (size_t)(stats._heap._soft_max_heap_size * 0.10); \/\/ 10%\n","filename":"src\/hotspot\/share\/gc\/z\/zDirector.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-  return _end - _start;\n+  return (size_t)(_end - _start);\n","filename":"src\/hotspot\/share\/gc\/z\/zForwardingAllocator.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -302,1 +302,1 @@\n-ssize_t ZGeneration::freed() const {\n+size_t ZGeneration::freed() const {\n@@ -451,1 +451,1 @@\n-    ZStatSample(ZSamplerJavaThreads, Threads::number_of_threads());\n+    ZStatSample(ZSamplerJavaThreads, (uint64_t)Threads::number_of_threads());\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-  ssize_t freed() const;\n+  size_t freed() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-    assert_is_valid(to_zaddress(o));\n+    check_is_valid_zaddress(o);\n@@ -207,1 +207,1 @@\n-      return HeapAccess<AS_NO_KEEPALIVE | ON_UNKNOWN_OOP_REF>::oop_load_at(_base, _base->field_offset(p));\n+      return HeapAccess<AS_NO_KEEPALIVE | ON_UNKNOWN_OOP_REF>::oop_load_at(_base, (ptrdiff_t)_base->field_offset(p));\n@@ -450,1 +450,1 @@\n-  const int stride = MIN2<int>(length - start, ObjArrayMarkingStride);\n+  const int stride = MIN2<int>(length - start, (int)ObjArrayMarkingStride);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  const size_t unclamped = MaxHeapSize * 0.03125;\n+  const size_t unclamped = (size_t)(MaxHeapSize * 0.03125);\n@@ -49,1 +49,1 @@\n-    ZPageSizeMediumShift        = log2i_exact(ZPageSizeMedium);\n+    ZPageSizeMediumShift        = (size_t)log2i_exact(ZPageSizeMedium);\n@@ -71,1 +71,1 @@\n-  return ceil(os::initial_active_processor_count() * cpu_share_in_percent \/ 100.0);\n+  return (uint)ceil(os::initial_active_processor_count() * cpu_share_in_percent \/ 100.0);\n@@ -75,1 +75,1 @@\n-  return (MaxHeapSize * (heap_share_in_percent \/ 100.0)) \/ ZPageSizeSmall;\n+  return (uint)(MaxHeapSize * (heap_share_in_percent \/ 100.0) \/ ZPageSizeSmall);\n@@ -104,1 +104,1 @@\n-  return MaxHeapSize * (ZFragmentationLimit \/ 100);\n+  return (size_t)(MaxHeapSize * (ZFragmentationLimit \/ 100));\n@@ -108,1 +108,1 @@\n-  return MaxHeapSize * (ZYoungCompactionLimit \/ 100);\n+  return (size_t)(MaxHeapSize * (ZYoungCompactionLimit \/ 100));\n","filename":"src\/hotspot\/share\/gc\/z\/zHeuristics.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    return (volatile int*)(align_up(_mem, ZCacheLineSize) + index * ZCacheLineSize);\n+    return (volatile int*)(align_up(_mem, ZCacheLineSize) + (size_t)index * ZCacheLineSize);\n@@ -139,1 +139,1 @@\n-    return sizeof(int) * claim_level_end_index(ClaimLevels);\n+    return sizeof(int) * (size_t)claim_level_end_index(ClaimLevels);\n","filename":"src\/hotspot\/share\/gc\/z\/zIndexDistributor.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    _segment_shift(exact_log2(segment_size())) {}\n+    _segment_shift(log2i_exact(segment_size())) {}\n@@ -133,1 +133,1 @@\n-    _segment_shift = exact_log2(segment_size());\n+    _segment_shift = log2i_exact(segment_size());\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  size_t            _segment_shift;\n+  int               _segment_shift;\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -368,1 +368,1 @@\n-  assert_is_valid(to_zaddress(obj));\n+  check_is_valid_zaddress(obj);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr)), \"Should be oop\");\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-  return ZMarkStripeShift + exact_log2(nstripes);\n+  return ZMarkStripeShift + (size_t)log2i_exact(nstripes);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkCache.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-    index = spillover_worker_id * spillover_chunk;\n+    index = (size_t)(spillover_worker_id * spillover_chunk);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStack.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    _start_ms = TimeHelper::counter_to_millis(now.value());\n+    _start_ms = (uint64_t)TimeHelper::counter_to_millis(now.value());\n@@ -50,1 +50,1 @@\n-    const uint64_t now_ms = TimeHelper::counter_to_millis(now.value());\n+    const uint64_t now_ms = (uint64_t)TimeHelper::counter_to_millis(now.value());\n@@ -52,1 +52,1 @@\n-    const int64_t timeout_ms = next_ms - now_ms;\n+    const int64_t timeout_ms = (int64_t)(next_ms - now_ms);\n@@ -60,1 +60,1 @@\n-        const uint64_t overslept = -timeout_ms;\n+        const uint64_t overslept = (uint64_t)-timeout_ms;\n","filename":"src\/hotspot\/share\/gc\/z\/zMetronome.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -305,2 +305,2 @@\n-  \/\/ color is stored at low order bits of int; implicit conversion to uintptr_t is fine\n-  return bs_nm->guard_value(nm);\n+  \/\/ color is stored at low order bits of int; conversion to uintptr_t is fine\n+  return (uintptr_t)bs_nm->guard_value(nm);\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,3 +147,3 @@\n-  const size_t shrink_threshold = _size * 0.30;\n-  const size_t prune_threshold = _size * 0.65;\n-  const size_t grow_threshold = _size * 0.70;\n+  const size_t shrink_threshold = (size_t)(_size * 0.30);\n+  const size_t prune_threshold = (size_t)(_size * 0.65);\n+  const size_t grow_threshold = (size_t)(_size * 0.70);\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethodTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,2 +79,2 @@\n-  const size_t base_offset_in_bytes = arrayOopDesc::base_offset_in_bytes(element_type);\n-  const size_t process_start_offset_in_bytes = align_up(base_offset_in_bytes, BytesPerWord);\n+  const size_t base_offset_in_bytes = (size_t)arrayOopDesc::base_offset_in_bytes(element_type);\n+  const size_t process_start_offset_in_bytes = align_up(base_offset_in_bytes, (size_t)BytesPerWord);\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    return ZObjectAlignmentSmallShift;\n+    return (size_t)ZObjectAlignmentSmallShift;\n@@ -89,1 +89,1 @@\n-    return ZObjectAlignmentMediumShift;\n+    return (size_t)ZObjectAlignmentMediumShift;\n@@ -92,1 +92,1 @@\n-    return ZObjectAlignmentLargeShift;\n+    return (size_t)ZObjectAlignmentLargeShift;\n@@ -103,1 +103,1 @@\n-    return ZObjectAlignmentSmall;\n+    return (size_t)ZObjectAlignmentSmall;\n@@ -106,1 +106,1 @@\n-    return ZObjectAlignmentMedium;\n+    return (size_t)ZObjectAlignmentMedium;\n@@ -109,1 +109,1 @@\n-    return ZObjectAlignmentLarge;\n+    return (size_t)ZObjectAlignmentLarge;\n@@ -314,1 +314,1 @@\n-  (void)to_oop(addr);\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -311,1 +311,1 @@\n-  const uint64_t now = os::elapsedTime();\n+  const uint64_t now = (uint64_t)os::elapsedTime();\n@@ -332,1 +332,1 @@\n-  _last_commit = ceil(os::elapsedTime());\n+  _last_commit = (uint64_t)ceil(os::elapsedTime());\n","filename":"src\/hotspot\/share\/gc\/z\/zPageCache.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    ZPage* const page = _table->at(index);\n+    ZPage* const page = _table->at(size_t(index));\n","filename":"src\/hotspot\/share\/gc\/z\/zPageTable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-    (void)to_zaddress(referent);\n+    check_is_valid_zaddress(referent);\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-      _nforwardings(selector->selected_small()->length() + selector->selected_medium()->length()),\n+      _nforwardings((size_t)selector->selected_small()->length() + (size_t)selector->selected_medium()->length()),\n@@ -116,1 +116,1 @@\n-      install_small(forwarding, _medium->length() + page_index);\n+      install_small(forwarding, (size_t)_medium->length() + page_index);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    _page_fragmentation_limit(page_size * (fragmentation_limit \/ 100)),\n+    _page_fragmentation_limit((size_t)(page_size * (fragmentation_limit \/ 100))),\n@@ -75,1 +75,1 @@\n-  const size_t partition_size_shift = exact_log2(partition_size);\n+  const int partition_size_shift = log2i_exact(partition_size);\n@@ -138,1 +138,1 @@\n-    const int to = ceil((double)(from_live_bytes) \/ (double)(_page_size - _object_size_limit));\n+    const int to = (int)ceil(from_live_bytes \/ (double)(_page_size - _object_size_limit));\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSetSelector.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-#include \"gc\/z\/zUtils.hpp\"\n+#include \"gc\/z\/zUtils.inline.hpp\"\n@@ -253,8 +253,8 @@\n-            TimeHelper::counter_to_millis(history.avg_10_seconds()),\n-            TimeHelper::counter_to_millis(history.max_10_seconds()),\n-            TimeHelper::counter_to_millis(history.avg_10_minutes()),\n-            TimeHelper::counter_to_millis(history.max_10_minutes()),\n-            TimeHelper::counter_to_millis(history.avg_10_hours()),\n-            TimeHelper::counter_to_millis(history.max_10_hours()),\n-            TimeHelper::counter_to_millis(history.avg_total()),\n-            TimeHelper::counter_to_millis(history.max_total()));\n+            TimeHelper::counter_to_millis((jlong)history.avg_10_seconds()),\n+            TimeHelper::counter_to_millis((jlong)history.max_10_seconds()),\n+            TimeHelper::counter_to_millis((jlong)history.avg_10_minutes()),\n+            TimeHelper::counter_to_millis((jlong)history.max_10_minutes()),\n+            TimeHelper::counter_to_millis((jlong)history.avg_10_hours()),\n+            TimeHelper::counter_to_millis((jlong)history.max_10_hours()),\n+            TimeHelper::counter_to_millis((jlong)history.avg_total()),\n+            TimeHelper::counter_to_millis((jlong)history.max_total()));\n@@ -367,1 +367,1 @@\n-  _base = ZUtils::alloc_aligned(ZCacheLineSize, size);\n+  _base = ZUtils::alloc_aligned_unfreeable(ZCacheLineSize, size);\n@@ -680,1 +680,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -721,1 +721,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -769,1 +769,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -801,1 +801,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -838,1 +838,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -865,1 +865,1 @@\n-  ZStatSample(_sampler, duration.value());\n+  ZStatDurationSample(_sampler, duration);\n@@ -917,0 +917,4 @@\n+void ZStatDurationSample(const ZStatSampler& sampler, const Tickspan& duration) {\n+  ZStatSample(sampler, (uint64_t)duration.value());\n+}\n+\n@@ -1039,1 +1043,1 @@\n-  const uint64_t now = os::elapsedTime();\n+  const uint64_t now = (uint64_t)os::elapsedTime();\n@@ -1849,1 +1853,1 @@\n-  return _reclaimed_bytes.davg();\n+  return (size_t)_reclaimed_bytes.davg();\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.cpp","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -348,0 +348,1 @@\n+void ZStatDurationSample(const ZStatSampler& sampler, const Tickspan& duration);\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-  for (int i = current(); i < (int)_buffer_length; ++i) {\n+  for (size_t i = current(); i < _buffer_length; ++i) {\n@@ -144,1 +144,1 @@\n-void ZStoreBarrierBuffer::on_new_phase_relocate(int i) {\n+void ZStoreBarrierBuffer::on_new_phase_relocate(size_t i) {\n@@ -163,1 +163,1 @@\n-void ZStoreBarrierBuffer::on_new_phase_remember(int i) {\n+void ZStoreBarrierBuffer::on_new_phase_remember(size_t i) {\n@@ -200,1 +200,1 @@\n-void ZStoreBarrierBuffer::on_new_phase_mark(int i) {\n+void ZStoreBarrierBuffer::on_new_phase_mark(size_t i) {\n@@ -232,1 +232,1 @@\n-  for (int i = current(); i < (int)_buffer_length; ++i) {\n+  for (size_t i = current(); i < _buffer_length; ++i) {\n@@ -262,2 +262,2 @@\n-  for (int i = current(); i < (int)_buffer_length; ++i) {\n-    st->print_cr(\" [%2d]: base: \" PTR_FORMAT \" p: \" PTR_FORMAT \" prev: \" PTR_FORMAT,\n+  for (size_t i = current(); i < _buffer_length; ++i) {\n+    st->print_cr(\" [%2zu]: base: \" PTR_FORMAT \" p: \" PTR_FORMAT \" prev: \" PTR_FORMAT,\n@@ -279,1 +279,1 @@\n-  for (int i = current(); i < (int)_buffer_length; ++i) {\n+  for (size_t i = current(); i < _buffer_length; ++i) {\n@@ -299,1 +299,1 @@\n-    for (int i = buffer->current(); i < (int)_buffer_length; ++i) {\n+    for (size_t i = buffer->current(); i < _buffer_length; ++i) {\n","filename":"src\/hotspot\/share\/gc\/z\/zStoreBarrierBuffer.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,3 +62,3 @@\n-  void on_new_phase_relocate(int i);\n-  void on_new_phase_remember(int i);\n-  void on_new_phase_mark(int i);\n+  void on_new_phase_relocate(size_t i);\n+  void on_new_phase_remember(size_t i);\n+  void on_new_phase_mark(size_t i);\n@@ -71,1 +71,1 @@\n-  intptr_t current() const;\n+  size_t current() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zStoreBarrierBuffer.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-inline intptr_t ZStoreBarrierBuffer::current() const {\n+inline size_t ZStoreBarrierBuffer::current() const {\n","filename":"src\/hotspot\/share\/gc\/z\/zStoreBarrierBuffer.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-  return align_up<size_t>(_page_allocator->max_capacity() * ZAsyncUnmappingLimit \/ 100.0, ZGranuleSize);\n+  return align_up((size_t)(_page_allocator->max_capacity() * ZAsyncUnmappingLimit \/ 100.0), ZGranuleSize);\n","filename":"src\/hotspot\/share\/gc\/z\/zUnmapper.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  static uintptr_t alloc_aligned(size_t alignment, size_t size);\n+  static uintptr_t alloc_aligned_unfreeable(size_t alignment, size_t size);\n","filename":"src\/hotspot\/share\/gc\/z\/zUtils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -36,0 +37,12 @@\n+inline uintptr_t ZUtils::alloc_aligned_unfreeable(size_t alignment, size_t size) {\n+  const size_t padded_size = size + (alignment - 1);\n+  void* const addr = os::malloc(padded_size, mtGC);\n+  void* const aligned_addr = align_up(addr, alignment);\n+\n+  memset(aligned_addr, 0, size);\n+\n+  \/\/ Since free expects pointers returned by malloc, aligned_addr cannot be\n+  \/\/ freed since it is most likely not the same as addr after alignment.\n+  return (uintptr_t)aligned_addr;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zUtils.inline.hpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-#include \"gc\/z\/zUtils.hpp\"\n+#include \"gc\/z\/zUtils.inline.hpp\"\n@@ -61,1 +61,1 @@\n-  _top = ZUtils::alloc_aligned(block_alignment, block_size);\n+  _top = ZUtils::alloc_aligned_unfreeable(block_alignment, block_size);\n","filename":"src\/hotspot\/share\/gc\/z\/zValue.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,10 @@\n+static void z_verify_oop_object(zaddress addr, zpointer o, void* p) {\n+  const oop obj = cast_to_oop(addr);\n+  guarantee(oopDesc::is_oop(obj), BAD_OOP_ARG(o, p));\n+}\n+\n+static void z_verify_root_oop_object(zaddress addr, void* p) {\n+  const oop obj = cast_to_oop(addr);\n+  guarantee(oopDesc::is_oop(obj), BAD_OOP_ARG(addr, p));\n+}\n+\n@@ -124,1 +134,1 @@\n-      guarantee(oopDesc::is_oop(to_oop(addr)), BAD_OOP_ARG(o, p));\n+      z_verify_oop_object(addr, o, p);\n@@ -146,1 +156,1 @@\n-      guarantee(oopDesc::is_oop(to_oop(ZPointer::uncolor(o))), BAD_OOP_ARG(o, p));\n+      z_verify_oop_object(ZPointer::uncolor(o), o, p);\n@@ -151,4 +161,0 @@\n-static void z_verify_root_oop_object(zaddress o, void* p) {\n-  guarantee(oopDesc::is_oop(to_oop(o)), BAD_OOP_ARG(o, p));\n-}\n-\n@@ -171,1 +177,1 @@\n-    guarantee(oopDesc::is_oop(to_oop(addr)), BAD_OOP_ARG(o, p));\n+    z_verify_oop_object(addr, o, p);\n@@ -214,1 +220,1 @@\n-      z_verify_root_oop_object(addr, p);\n+      z_verify_oop_object(addr, o, p);\n@@ -221,1 +227,1 @@\n-        z_verify_root_oop_object(addr, p);\n+        z_verify_oop_object(addr, o, p);\n@@ -586,1 +592,1 @@\n-    for (int i = buffer->current(); i < (int)ZStoreBarrierBuffer::_buffer_length; ++i) {\n+    for (size_t i = buffer->current(); i < ZStoreBarrierBuffer::_buffer_length; ++i) {\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -886,0 +886,9 @@\n+  if (is_initial_typeset_for_chunk()) {\n+    CldPtr bootloader = get_cld(Universe::boolArrayKlass());\n+    assert(bootloader != nullptr, \"invariant\");\n+    if (IS_NOT_SERIALIZED(bootloader)) {\n+      write__cld(_writer, bootloader);\n+      assert(IS_SERIALIZED(bootloader), \"invariant\");\n+      cldw.add(1);\n+    }\n+  }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -642,5 +642,1 @@\n-  const size_t storage_elements = flush_storage(_storage, _chunkwriter);\n-  if (0 == storage_elements) {\n-    return total_elements;\n-  }\n-  total_elements += storage_elements;\n+  total_elements = flush_storage(_storage, _chunkwriter);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderService.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -139,1 +139,3 @@\n-  assert(h_array_list.not_null(), \"invariant\");\n+  if (h_array_list.is_null()) {\n+    return empty_java_util_arraylist;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -725,0 +725,1 @@\n+  bool has_scoped_access = false;\n@@ -732,0 +733,1 @@\n+    has_scoped_access = stream->read_bool(\"hasScopedAccess\");\n@@ -798,0 +800,1 @@\n+                                        has_scoped_access,\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2081,0 +2081,1 @@\n+                                                       bool has_scoped_access,\n@@ -2186,1 +2187,1 @@\n-        nm->set_has_scoped_access(true); \/\/ conservative\n+        nm->set_has_scoped_access(has_scoped_access);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -455,0 +455,1 @@\n+                                           bool                      has_scoped_access,\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -658,0 +658,1 @@\n+  declare_constant(ConstMethodFlags::_misc_is_scoped)                     \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -181,2 +181,0 @@\n-\n-  #undef assrt0n\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    size_t hs = length_offset_in_bytes() + sizeof(int);\n+    int hs = length_offset_in_bytes() + (int)sizeof(int);\n@@ -74,1 +74,1 @@\n-    static size_t arrayoopdesc_hs = 0;\n+    static int arrayoopdesc_hs = 0;\n@@ -86,1 +86,1 @@\n-                               sizeof(arrayOopDesc);\n+                               (int)sizeof(arrayOopDesc);\n@@ -91,2 +91,2 @@\n-    size_t hs = header_size_in_bytes();\n-    return (int)(element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs);\n+    int hs = header_size_in_bytes();\n+    return element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs;\n@@ -137,1 +137,1 @@\n-    size_t hdr_size_in_bytes = base_offset_in_bytes(type);\n+    int hdr_size_in_bytes = base_offset_in_bytes(type);\n@@ -139,1 +139,1 @@\n-    size_t hdr_size_in_words = align_up(hdr_size_in_bytes, HeapWordSize) \/ HeapWordSize;\n+    int hdr_size_in_words = align_up(hdr_size_in_bytes, HeapWordSize) \/ HeapWordSize;\n@@ -142,1 +142,1 @@\n-      align_down((SIZE_MAX\/HeapWordSize - hdr_size_in_words), MinObjAlignment);\n+      align_down((SIZE_MAX\/HeapWordSize - (size_t)hdr_size_in_words), MinObjAlignment);\n@@ -144,1 +144,1 @@\n-      HeapWordSize * max_element_words_per_size_t \/ type2aelembytes(type);\n+      HeapWordSize * max_element_words_per_size_t \/ (size_t)type2aelembytes(type);\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -309,0 +309,1 @@\n+    assert(secondaries->length() >= (int)population_count(bitmap), \"must be\");\n@@ -347,5 +348,6 @@\n-  \/\/ For performance reasons we don't use a hashed table unless there\n-  \/\/ are at least two empty slots in it. If there were only one empty\n-  \/\/ slot it'd take a long time to create the table and the resulting\n-  \/\/ search would be no faster than linear probing.\n-  if (length > SECONDARY_SUPERS_TABLE_SIZE - 2) {\n+  \/\/ Invariant: _secondary_supers.length >= population_count(_secondary_supers_bitmap)\n+\n+  \/\/ Don't attempt to hash a table that's completely full, because in\n+  \/\/ the case of an absent interface linear probing would not\n+  \/\/ terminate.\n+  if (length >= SECONDARY_SUPERS_TABLE_SIZE) {\n@@ -791,0 +793,1 @@\n+  assert(secondary_supers()->length() >= (int)population_count(_bitmap), \"must be\");\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-          THROW_MSG_0(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", *sizes));\n+          THROW_MSG_NULL(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", *sizes));\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,0 +155,11 @@\n+\/\/------------------------------ForwardExceptionNode---------------------------\n+\/\/ Pop stack frame and jump to StubRoutines::forward_exception_entry()\n+class ForwardExceptionNode : public ReturnNode {\n+public:\n+  ForwardExceptionNode(Node* cntrl, Node* i_o, Node* memory, Node* frameptr, Node* retadr)\n+    : ReturnNode(TypeFunc::Parms, cntrl, i_o, memory, frameptr, retadr) {\n+  }\n+\n+  virtual int Opcode() const;\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -452,0 +452,4 @@\n+  AssertionPredicateType assertion_predicate_type() const {\n+    return _assertion_predicate_type;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,0 +187,1 @@\n+macro(ForwardException)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -242,0 +242,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/domgraph.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2034,0 +2034,1 @@\n+  case Op_ForwardException:\n@@ -2087,0 +2088,1 @@\n+  case Op_ForwardException:\n@@ -2132,0 +2134,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,7 +258,5 @@\n-  Node *exc_target = makecon(TypeRawPtr::make( StubRoutines::forward_exception_entry() ));\n-  Node *to_exc = new TailCallNode(if_not_null,\n-                                  i_o(),\n-                                  exit_memory,\n-                                  frameptr(),\n-                                  returnadr(),\n-                                  exc_target, null());\n+  Node *to_exc = new ForwardExceptionNode(if_not_null,\n+                                          i_o(),\n+                                          exit_memory,\n+                                          frameptr(),\n+                                          returnadr());\n","filename":"src\/hotspot\/share\/opto\/generateOptoStub.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2154,1 +2154,1 @@\n-  address call_addr = SharedRuntime::uncommon_trap_blob()->entry_point();\n+  address call_addr = OptoRuntime::uncommon_trap_blob()->entry_point();\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1846,1 +1846,1 @@\n-    case AssertionPredicateType::Init_value:\n+    case AssertionPredicateType::InitValue:\n@@ -1849,1 +1849,1 @@\n-    case AssertionPredicateType::Last_value:\n+    case AssertionPredicateType::LastValue:\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-          nn->as_MachCall()->entry_point() == SharedRuntime::uncommon_trap_blob()->entry_point()) {\n+          nn->as_MachCall()->entry_point() == OptoRuntime::uncommon_trap_blob()->entry_point()) {\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5952,1 +5952,1 @@\n-          (obs->as_CallStaticJava()->entry_point() == SharedRuntime::uncommon_trap_blob()->entry_point())) {\n+          (obs->as_CallStaticJava()->entry_point() == OptoRuntime::uncommon_trap_blob()->entry_point())) {\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -377,4 +377,4 @@\n-  TemplateAssertionPredicateExpression template_assertion_predicate_expression(\n-      template_assertion_predicate->in(1)->as_Opaque4());\n-  Opaque4Node* cloned_opaque4_node = template_assertion_predicate_expression.clone(parse_predicate_proj->in(0)->in(0), this);\n-  IfProjNode* if_proj = create_new_if_for_predicate(parse_predicate_proj, nullptr, reason, template_assertion_predicate->Opcode(), false);\n+  TemplateAssertionExpression template_assertion_expression(template_assertion_predicate->in(1)->as_Opaque4());\n+  Opaque4Node* cloned_opaque4_node = template_assertion_expression.clone(parse_predicate_proj->in(0)->in(0), this);\n+  IfProjNode* if_proj = create_new_if_for_predicate(parse_predicate_proj, nullptr, reason,\n+                                                    template_assertion_predicate->Opcode(), false);\n@@ -1327,1 +1327,1 @@\n-                                                     false NOT_PRODUCT(COMMA AssertionPredicateType::Init_value));\n+                                                     false NOT_PRODUCT(COMMA AssertionPredicateType::InitValue));\n@@ -1353,1 +1353,1 @@\n-                                         false NOT_PRODUCT(COMMA AssertionPredicateType::Last_value));\n+                                         false NOT_PRODUCT(COMMA AssertionPredicateType::LastValue));\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1376,1 +1376,0 @@\n-        assert(assertion_predicate_has_loop_opaque_node(iff), \"must find OpaqueLoop* nodes\");\n@@ -1380,7 +1379,3 @@\n-        prev_proj = clone_assertion_predicate_and_initialize(iff, opaque_init, nullptr, predicate_proj, uncommon_proj,\n-                                                             current_proj, outer_loop, prev_proj);\n-        assert(assertion_predicate_has_loop_opaque_node(prev_proj->in(0)->as_If()), \"\");\n-\n-        prev_proj = clone_assertion_predicate_and_initialize(iff, init, stride, predicate_proj, uncommon_proj,\n-                                                             current_proj, outer_loop, prev_proj);\n-        assert(!assertion_predicate_has_loop_opaque_node(prev_proj->in(0)->as_If()), \"\");\n+        prev_proj = clone_template_assertion_predicate(iff, opaque_init, predicate_proj, uncommon_proj,\n+                                                       current_proj, outer_loop, prev_proj);\n+        prev_proj = create_initialized_assertion_predicate(iff, init, stride, prev_proj);\n@@ -1463,1 +1458,1 @@\n-    if (TemplateAssertionPredicateExpressionNode::is_maybe_in_expression(n)) {\n+    if (TemplateAssertionExpressionNode::is_maybe_in_expression(n)) {\n@@ -1480,21 +1475,22 @@\n-\/\/ Clone an Assertion Predicate for the main loop. new_init and new_stride are set as new inputs. Since the predicates\n-\/\/ cannot fail at runtime, Halt nodes are inserted instead of uncommon traps.\n-Node* PhaseIdealLoop::clone_assertion_predicate_and_initialize(Node* iff, Node* new_init, Node* new_stride, Node* predicate,\n-                                                               Node* uncommon_proj, Node* control, IdealLoopTree* outer_loop,\n-                                                               Node* input_proj) {\n-  TemplateAssertionPredicateExpression template_assertion_predicate_expression(iff->in(1)->as_Opaque4());\n-  Node* new_opaque_node;\n-  if (new_stride == nullptr) {\n-    \/\/ Clone the Template Assertion Predicate and set a new OpaqueLoopInitNode to create a new Template Assertion Predicate.\n-    \/\/ This is done when creating a new Template Assertion Predicate for the main loop which requires a new init node.\n-    \/\/ We keep the Opaque4 node since it's still a template.\n-    assert(new_init->is_OpaqueLoopInit(), \"only for creating new Template Assertion Predicates\");\n-    new_opaque_node = template_assertion_predicate_expression.clone_and_replace_init(new_init, control, this);\n-  } else {\n-    \/\/ Create an Initialized Assertion Predicate from the Template Assertion Predicate.\n-    new_opaque_node = template_assertion_predicate_expression.clone_and_replace_init_and_stride(new_init, new_stride,\n-                                                                                                 control, this);\n-    \/\/ Since this is an Initialized Assertion Predicate, we use the dedicated opaque node.\n-    new_opaque_node = new OpaqueInitializedAssertionPredicateNode(new_opaque_node->in(1)->as_Bool(), C);\n-    register_new_node(new_opaque_node, control);\n-  }\n+\/\/ Create an Initialized Assertion Predicate from the template_assertion_predicate\n+IfTrueNode* PhaseIdealLoop::create_initialized_assertion_predicate(IfNode* template_assertion_predicate, Node* new_init,\n+                                                                   Node* new_stride, Node* control) {\n+  assert(assertion_predicate_has_loop_opaque_node(template_assertion_predicate),\n+         \"must find OpaqueLoop* nodes for Template Assertion Predicate\");\n+  InitializedAssertionPredicate initialized_assertion_predicate(template_assertion_predicate, new_init, new_stride, this);\n+  IfTrueNode* success_proj = initialized_assertion_predicate.create(control);\n+  assert(!assertion_predicate_has_loop_opaque_node(success_proj->in(0)->as_If()),\n+         \"Initialized Assertion Predicates do not have OpaqueLoop* nodes in the bool expression anymore\");\n+  return success_proj;\n+}\n+\n+\/\/ Clone the Template Assertion Predicate and set a new OpaqueLoopInitNode to create a new Template Assertion Predicate.\n+\/\/ This is done when creating a new Template Assertion Predicate for the main loop which requires a new init node.\n+\/\/ We keep the Opaque4 node since it's still a template. Since the templates are eventually removed after loop opts,\n+\/\/ these are never executed. We therefore insert a Halt node instead of an uncommon trap.\n+Node* PhaseIdealLoop::clone_template_assertion_predicate(IfNode* iff, Node* new_init, Node* predicate, Node* uncommon_proj,\n+                                                         Node* control, IdealLoopTree* outer_loop, Node* input_proj) {\n+  assert(assertion_predicate_has_loop_opaque_node(iff), \"must find OpaqueLoop* nodes for Template Assertion Predicate\");\n+  TemplateAssertionExpression template_assertion_expression(iff->in(1)->as_Opaque4());\n+  assert(new_init->is_OpaqueLoopInit(), \"only for creating new Template Assertion Predicates\");\n+  Opaque4Node* new_opaque_node = template_assertion_expression.clone_and_replace_init(new_init, control, this);\n@@ -1509,2 +1505,1 @@\n-  \/\/ It's impossible for the predicate to fail at runtime. Use a Halt node.\n-  Node* halt = new HaltNode(other_proj, frame, \"duplicated predicate failed which is impossible\");\n+  Node* halt = new HaltNode(other_proj, frame, \"Template Assertion Predicates are always removed before code generation\");\n@@ -1518,0 +1513,2 @@\n+  assert(assertion_predicate_has_loop_opaque_node(proj->in(0)->as_If()),\n+         \"Template Assertion Predicates must have OpaqueLoop* nodes in the bool expression\");\n@@ -1970,3 +1967,1 @@\n-        prev_proj = clone_assertion_predicate_and_initialize(iff, init, max_value, entry, proj, ctrl, outer_loop,\n-                                                             prev_proj);\n-        assert(!assertion_predicate_has_loop_opaque_node(prev_proj->in(0)->as_If()), \"unexpected\");\n+        prev_proj = create_initialized_assertion_predicate(iff, init, max_value, prev_proj);\n@@ -2011,4 +2006,1 @@\n-      assert(assertion_predicate_has_loop_opaque_node(iff), \"must find OpaqueLoop* nodes\");\n-      prev_proj = clone_assertion_predicate_and_initialize(iff, init, stride, ctrl, proj, post_loop_entry,\n-                                                           post_loop, prev_proj);\n-      assert(!assertion_predicate_has_loop_opaque_node(prev_proj->in(0)->as_If()), \"must not find OpaqueLoop* nodes\");\n+      prev_proj = create_initialized_assertion_predicate(iff, init, stride, prev_proj);\n@@ -2033,3 +2025,1 @@\n-  Node* control = outer_loop_head->in(LoopNode::EntryControl);\n-  Node* input_proj = control;\n-\n+  Node* input_proj = outer_loop_head->in(LoopNode::EntryControl);\n@@ -2049,3 +2039,1 @@\n-      assert(assertion_predicate_has_loop_opaque_node(iff), \"must find OpaqueLoop* nodes\");\n-      input_proj = clone_assertion_predicate_and_initialize(iff, init, stride, next_regular_predicate_proj, uncommon_proj, control,\n-                                                            outer_loop, input_proj);\n+      input_proj = create_initialized_assertion_predicate(iff, init, stride, input_proj);\n@@ -3021,1 +3009,1 @@\n-              NOT_PRODUCT(COMMA AssertionPredicateType::Init_value));\n+              NOT_PRODUCT(COMMA AssertionPredicateType::InitValue));\n@@ -3035,1 +3023,1 @@\n-              NOT_PRODUCT(COMMA AssertionPredicateType::Last_value));\n+              NOT_PRODUCT(COMMA AssertionPredicateType::LastValue));\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":35,"deletions":47,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -570,1 +570,1 @@\n-    address call_addr = SharedRuntime::uncommon_trap_blob()->entry_point();\n+    address call_addr = OptoRuntime::uncommon_trap_blob()->entry_point();\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -955,3 +955,4 @@\n-  Node* clone_assertion_predicate_and_initialize(Node* iff, Node* new_init, Node* new_stride, Node* predicate,\n-                                                 Node* uncommon_proj, Node* control, IdealLoopTree* outer_loop,\n-                                                 Node* input_proj);\n+  Node* clone_template_assertion_predicate(IfNode* iff, Node* new_init, Node* predicate, Node* uncommon_proj, Node* control,\n+                                           IdealLoopTree* outer_loop, Node* input_proj);\n+  IfTrueNode* create_initialized_assertion_predicate(IfNode* template_assertion_predicate, Node* new_init,\n+                                                     Node* new_stride, Node* control);\n@@ -1777,1 +1778,1 @@\n-  void clone_template_assertion_predicate_expression_down(Node* node);\n+  void clone_template_assertion_expression_down(Node* node);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -807,0 +807,4 @@\n+  \/\/ Input RegMask array shared by all ForwardExceptions\n+  uint forw_exc_edge_cnt = TypeFunc::Parms;\n+  RegMask* forw_exc_rms  = init_input_masks( forw_exc_edge_cnt + soe_cnt, _return_addr_mask, c_frame_ptr_mask );\n+\n@@ -866,0 +870,1 @@\n+      case Op_ForwardException: exit->_in_rms = forw_exc_rms; break;\n@@ -885,0 +890,1 @@\n+      forw_exc_rms [ forw_exc_edge_cnt] = mreg2regmask[i];\n@@ -902,0 +908,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -914,0 +921,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -928,0 +936,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -940,0 +949,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -951,0 +961,1 @@\n+      forw_exc_edge_cnt++;\n@@ -954,1 +965,1 @@\n-      for( uint j=1; j < root->req(); j++ )\n+      for (uint j=1; j < root->req(); j++) {\n@@ -956,0 +967,1 @@\n+      }\n@@ -1073,0 +1085,1 @@\n+    case Op_ForwardException:\n@@ -2963,1 +2976,1 @@\n-        call->entry_point() == SharedRuntime::uncommon_trap_blob()->entry_point()) {\n+        call->entry_point() == OptoRuntime::uncommon_trap_blob()->entry_point()) {\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"opto\/rootnode.hpp\"\n@@ -242,5 +243,5 @@\n-\/\/ Creates an identical clone of this Template Assertion Predicate Expression (i.e.cloning all nodes from the Opaque4Node\n-\/\/ to and including the OpaqueLoop* nodes). The cloned nodes are rewired to reflect the same graph structure as found for\n-\/\/ this Template Assertion Predicate Expression. The cloned nodes get 'new_ctrl' as ctrl. There is no other update done\n-\/\/ for the cloned nodes. Return the newly cloned Opaque4Node.\n-Opaque4Node* TemplateAssertionPredicateExpression::clone(Node* new_ctrl, PhaseIdealLoop* phase) {\n+\/\/ Creates an identical clone of this Template Assertion Expression (i.e.cloning all nodes from the Opaque4Node to and\n+\/\/ including the OpaqueLoop* nodes). The cloned nodes are rewired to reflect the same graph structure as found for this\n+\/\/ Template Assertion Expression. The cloned nodes get 'new_ctrl' as ctrl. There is no other update done for the cloned\n+\/\/ nodes. Return the newly cloned Opaque4Node.\n+Opaque4Node* TemplateAssertionExpression::clone(Node* new_ctrl, PhaseIdealLoop* phase) {\n@@ -252,2 +253,2 @@\n-Opaque4Node* TemplateAssertionPredicateExpression::clone_and_replace_init(Node* new_init, Node* new_ctrl,\n-                                                                          PhaseIdealLoop* phase) {\n+Opaque4Node* TemplateAssertionExpression::clone_and_replace_init(Node* new_init, Node* new_ctrl,\n+                                                                 PhaseIdealLoop* phase) {\n@@ -260,3 +261,3 @@\n-Opaque4Node* TemplateAssertionPredicateExpression::clone_and_replace_init_and_stride(Node* new_init, Node* new_stride,\n-                                                                                     Node* new_ctrl,\n-                                                                                     PhaseIdealLoop* phase) {\n+Opaque4Node* TemplateAssertionExpression::clone_and_replace_init_and_stride(Node* new_init, Node* new_stride,\n+                                                                            Node* new_ctrl,\n+                                                                            PhaseIdealLoop* phase) {\n@@ -310,2 +311,1 @@\n-  \/\/       Given that the typical Template Assertion Predicate Expression only consists of a few nodes, we aim for\n-  \/\/       simplicity here.\n+  \/\/       Given that the typical Template Assertion Expression only consists of a few nodes, we aim for simplicity here.\n@@ -345,3 +345,3 @@\n-\/\/ Clones this Template Assertion Predicate Expression and applies the given strategy to transform the OpaqueLoop* nodes.\n-Opaque4Node* TemplateAssertionPredicateExpression::clone(const TransformStrategyForOpaqueLoopNodes& transform_strategy,\n-                                                         Node* new_ctrl, PhaseIdealLoop* phase) {\n+\/\/ Clones this Template Assertion Expression and applies the given strategy to transform the OpaqueLoop* nodes.\n+Opaque4Node* TemplateAssertionExpression::clone(const TransformStrategyForOpaqueLoopNodes& transform_strategy,\n+                                                Node* new_ctrl, PhaseIdealLoop* phase) {\n@@ -352,1 +352,1 @@\n-  DataNodesOnPathsToTargets data_nodes_on_path_to_targets(TemplateAssertionPredicateExpressionNode::is_maybe_in_expression,\n+  DataNodesOnPathsToTargets data_nodes_on_path_to_targets(TemplateAssertionExpressionNode::is_maybe_in_expression,\n@@ -362,2 +362,2 @@\n-\/\/ Check if this node belongs a Template Assertion Predicate Expression (including OpaqueLoop* nodes).\n-bool TemplateAssertionPredicateExpressionNode::is_in_expression(Node* node) {\n+\/\/ Check if this node belongs a Template Assertion Expression (including OpaqueLoop* nodes).\n+bool TemplateAssertionExpressionNode::is_in_expression(Node* node) {\n@@ -380,1 +380,1 @@\n-bool TemplateAssertionPredicateExpressionNode::is_template_assertion_predicate(Node* node) {\n+bool TemplateAssertionExpressionNode::is_template_assertion_predicate(Node* node) {\n@@ -384,0 +384,80 @@\n+InitializedAssertionPredicate::InitializedAssertionPredicate(IfNode* template_assertion_predicate, Node* new_init,\n+                                                             Node* new_stride, PhaseIdealLoop* phase)\n+    : _template_assertion_predicate(template_assertion_predicate),\n+      _new_init(new_init),\n+      _new_stride(new_stride),\n+      _phase(phase) {}\n+\n+\/\/ Create an Initialized Assertion Predicate at the provided control from the _template_assertion_predicate.\n+\/\/ We clone the Template Assertion Expression and replace:\n+\/\/ - Opaque4 with OpaqueInitializedAssertionPredicate\n+\/\/ - OpaqueLoop*Nodes with _new_init and _new_stride, respectively.\n+\/\/\n+\/\/             \/         init                 stride\n+\/\/             |           |                    |\n+\/\/             |  OpaqueLoopInitNode  OpaqueLoopStrideNode                      \/       _new_init    _new_stride\n+\/\/  Template   |                 \\     \/                                        |              \\     \/\n+\/\/  Assertion  |                   ...                               Assertion  |                ...\n+\/\/  Expression |                    |                                Expression |                 |\n+\/\/             |                   Bool                                         |              new Bool\n+\/\/             |                    |                                           |                 |\n+\/\/             \\                 Opaque4           ======>          control     \\  OpaqueInitializedAssertionPredicate\n+\/\/                                  |                                      \\      \/\n+\/\/                                 If                                       new If\n+\/\/                               \/    \\                                     \/    \\\n+\/\/                         success     fail path                   new success   new Halt\n+\/\/                           proj    (Halt or UCT)                     proj\n+\/\/\n+IfTrueNode* InitializedAssertionPredicate::create(Node* control) {\n+  IdealLoopTree* loop = _phase->get_loop(control);\n+  OpaqueInitializedAssertionPredicateNode* assertion_expression = create_assertion_expression(control);\n+  IfNode* if_node = create_if_node(control, assertion_expression, loop);\n+  create_fail_path(if_node, loop);\n+  return create_success_path(if_node, loop);\n+}\n+\n+\/\/ Create a new Assertion Expression to be used as bool input for the Initialized Assertion Predicate IfNode.\n+OpaqueInitializedAssertionPredicateNode* InitializedAssertionPredicate::create_assertion_expression(Node* control) {\n+  Opaque4Node* template_opaque = _template_assertion_predicate->in(1)->as_Opaque4();\n+  TemplateAssertionExpression template_assertion_expression(template_opaque);\n+  Opaque4Node* tmp_opaque = template_assertion_expression.clone_and_replace_init_and_stride(_new_init, _new_stride,\n+                                                                                            control, _phase);\n+  OpaqueInitializedAssertionPredicateNode* assertion_expression =\n+      new OpaqueInitializedAssertionPredicateNode(tmp_opaque->in(1)->as_Bool(), _phase->C);\n+  _phase->register_new_node(assertion_expression, control);\n+  return assertion_expression;\n+}\n+\n+IfNode* InitializedAssertionPredicate::create_if_node(Node* control,\n+                                                      OpaqueInitializedAssertionPredicateNode* assertion_expression,\n+                                                      IdealLoopTree* loop) {\n+  const int if_opcode = _template_assertion_predicate->Opcode();\n+  NOT_PRODUCT(const AssertionPredicateType assertion_predicate_type = _template_assertion_predicate->assertion_predicate_type();)\n+  IfNode* if_node = if_opcode == Op_If ?\n+      new IfNode(control, assertion_expression, PROB_MAX, COUNT_UNKNOWN NOT_PRODUCT(COMMA assertion_predicate_type)) :\n+      new RangeCheckNode(control, assertion_expression, PROB_MAX, COUNT_UNKNOWN NOT_PRODUCT(COMMA assertion_predicate_type));\n+  _phase->register_control(if_node, loop, control);\n+  return if_node;\n+}\n+\n+IfTrueNode* InitializedAssertionPredicate::create_success_path(IfNode* if_node, IdealLoopTree* loop) {\n+  IfTrueNode* success_proj = new IfTrueNode(if_node);\n+  _phase->register_control(success_proj, loop, if_node);\n+  return success_proj;\n+}\n+\n+void InitializedAssertionPredicate::create_fail_path(IfNode* if_node, IdealLoopTree* loop) {\n+  IfFalseNode* fail_proj = new IfFalseNode(if_node);\n+  _phase->register_control(fail_proj, loop, if_node);\n+  create_halt_node(fail_proj, loop);\n+}\n+\n+void InitializedAssertionPredicate::create_halt_node(IfFalseNode* fail_proj, IdealLoopTree* loop) {\n+  StartNode* start_node = _phase->C->start();\n+  Node* frame = new ParmNode(start_node, TypeFunc::FramePtr);\n+  _phase->register_new_node(frame, start_node);\n+  Node* halt = new HaltNode(fail_proj, frame, \"Initialized Assertion Predicate cannot fail\");\n+  _phase->igvn().add_input_to(_phase->C->root(), halt);\n+  _phase->register_control(halt, loop, fail_proj);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/predicates.cpp","additions":99,"deletions":19,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+class IdealLoopTree;\n+\n@@ -201,2 +203,2 @@\n-  Init_value,\n-  Last_value\n+  InitValue,\n+  LastValue\n@@ -297,1 +299,1 @@\n-\/\/ Interface to transform OpaqueLoopInit and OpaqueLoopStride nodes of a Template Assertion Predicate Expression.\n+\/\/ Interface to transform OpaqueLoopInit and OpaqueLoopStride nodes of a Template Assertion Expression.\n@@ -304,1 +306,1 @@\n-\/\/ A Template Assertion Predicate Expression represents the Opaque4Node for the initial value or the last value of a\n+\/\/ A Template Assertion Predicate represents the Opaque4Node for the initial value or the last value of a\n@@ -306,1 +308,1 @@\n-class TemplateAssertionPredicateExpression : public StackObj {\n+class TemplateAssertionExpression : public StackObj {\n@@ -310,1 +312,1 @@\n-  explicit TemplateAssertionPredicateExpression(Opaque4Node* opaque4_node) : _opaque4_node(opaque4_node) {}\n+  explicit TemplateAssertionExpression(Opaque4Node* opaque4_node) : _opaque4_node(opaque4_node) {}\n@@ -321,1 +323,1 @@\n-\/\/ Class to represent a node being part of a Template Assertion Predicate Expression.\n+\/\/ Class to represent a node being part of a Template Assertion Expression. Note that this is not an IR node.\n@@ -327,1 +329,1 @@\n-class TemplateAssertionPredicateExpressionNode : public StackObj {\n+class TemplateAssertionExpressionNode : public StackObj {\n@@ -331,1 +333,1 @@\n-  explicit TemplateAssertionPredicateExpressionNode(Node* node) : _node(node) {\n+  explicit TemplateAssertionExpressionNode(Node* node) : _node(node) {\n@@ -334,1 +336,1 @@\n-  NONCOPYABLE(TemplateAssertionPredicateExpressionNode);\n+  NONCOPYABLE(TemplateAssertionExpressionNode);\n@@ -340,1 +342,1 @@\n-  \/\/ Check whether the provided node is part of a Template Assertion Predicate Expression or not.\n+  \/\/ Check whether the provided node is part of a Template Assertion Expression or not.\n@@ -343,1 +345,1 @@\n-  \/\/ Check if the opcode of node could be found in a Template Assertion Predicate Expression.\n+  \/\/ Check if the opcode of node could be found in a Template Assertion Expression.\n@@ -380,1 +382,1 @@\n-        assert(!next->is_CFG(), \"no CFG expected in Template Assertion Predicate Expression\");\n+        assert(!next->is_CFG(), \"no CFG expected in Template Assertion Expression\");\n@@ -385,5 +387,5 @@\n-    \/\/ Each node inside a Template Assertion Predicate Expression is in between a Template Assertion Predicate and\n-    \/\/ its OpaqueLoop* nodes (or an OpaqueLoop* node itself). The OpaqueLoop* nodes do not common up. Therefore, each\n-    \/\/ Template Assertion Predicate Expression node belongs to a single expression - except for OpaqueLoopInitNodes.\n-    \/\/ An OpaqueLoopInitNode is shared between the init and last value Template Assertion Predicate at creation.\n-    \/\/ Later, when cloning the expressions, they are no longer shared.\n+    \/\/ Each node inside a Template Assertion Expression is in between a Template Assertion Predicate and its OpaqueLoop*\n+    \/\/ nodes (or an OpaqueLoop* node itself). The OpaqueLoop* nodes do not common up. Therefore, each Template Assertion\n+    \/\/ Expression node belongs to a single expression - except for OpaqueLoopInitNodes. An OpaqueLoopInitNode is shared\n+    \/\/ between the init and last value Template Assertion Predicate at creation. Later, when cloning the expressions,\n+    \/\/ they are no longer shared.\n@@ -395,0 +397,23 @@\n+\/\/ This class creates a new Initialized Assertion Predicate.\n+class InitializedAssertionPredicate : public StackObj {\n+  IfNode* const _template_assertion_predicate;\n+  Node* const _new_init;\n+  Node* const _new_stride;\n+  PhaseIdealLoop* const _phase;\n+\n+ public:\n+  InitializedAssertionPredicate(IfNode* template_assertion_predicate, Node* new_init, Node* new_stride,\n+                                PhaseIdealLoop* phase);\n+  NONCOPYABLE(InitializedAssertionPredicate);\n+\n+  IfTrueNode* create(Node* control);\n+\n+ private:\n+  OpaqueInitializedAssertionPredicateNode* create_assertion_expression(Node* control);\n+  IfNode* create_if_node(Node* control, OpaqueInitializedAssertionPredicateNode* assertion_expression, IdealLoopTree* loop);\n+  void create_fail_path(IfNode* if_node, IdealLoopTree* loop);\n+  void create_halt_node(IfFalseNode* fail_proj, IdealLoopTree* loop);\n+  IfTrueNode* create_success_path(IfNode* if_node, IdealLoopTree* loop);\n+};\n+\n+\n","filename":"src\/hotspot\/share\/opto\/predicates.hpp","additions":43,"deletions":18,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -117,1 +117,2 @@\n-ExceptionBlob* OptoRuntime::_exception_blob;\n+UncommonTrapBlob*   OptoRuntime::_uncommon_trap_blob;\n+ExceptionBlob*      OptoRuntime::_exception_blob;\n@@ -141,0 +142,1 @@\n+  generate_uncommon_trap_blob();\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -171,0 +171,1 @@\n+  static UncommonTrapBlob*   _uncommon_trap_blob;\n@@ -172,0 +173,2 @@\n+\n+  static void generate_uncommon_trap_blob(void);\n@@ -211,0 +214,1 @@\n+  static UncommonTrapBlob* uncommon_trap_blob()                  { return _uncommon_trap_blob; }\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  clone_template_assertion_predicate_expression_down(n);\n+  clone_template_assertion_expression_down(n);\n@@ -412,7 +412,7 @@\n-\/\/ 'n' could be a node belonging to a Template Assertion Predicate Expression (i.e. any node between a Template\n-\/\/ Assertion Predicate and its OpaqueLoop* nodes (included)). We cannot simply split this node up since this would\n-\/\/ create a phi node inside the Template Assertion Predicate Expression - making it unrecognizable as such. Therefore,\n-\/\/ we completely clone the entire Template Assertion Predicate Expression \"down\". This ensures that we have an\n-\/\/ untouched copy that is still recognized by the Template Assertion Predicate matching code.\n-void PhaseIdealLoop::clone_template_assertion_predicate_expression_down(Node* node) {\n-  if (!TemplateAssertionPredicateExpressionNode::is_in_expression(node)) {\n+\/\/ 'n' could be a node belonging to a Template Assertion Expression (i.e. any node between a Template Assertion Predicate\n+\/\/ and its OpaqueLoop* nodes (included)). We cannot simply split this node up since this would  create a phi node inside\n+\/\/ the Template Assertion Expression - making it unrecognizable as such. Therefore, we completely clone the entire\n+\/\/ Template Assertion Expression \"down\". This ensures that we have an untouched copy that is still recognized by the\n+\/\/ Template Assertion Predicate matching code.\n+void PhaseIdealLoop::clone_template_assertion_expression_down(Node* node) {\n+  if (!TemplateAssertionExpressionNode::is_in_expression(node)) {\n@@ -422,1 +422,1 @@\n-  TemplateAssertionPredicateExpressionNode template_assertion_predicate_expression_node(node);\n+  TemplateAssertionExpressionNode template_assertion_expression_node(node);\n@@ -425,1 +425,1 @@\n-    TemplateAssertionPredicateExpression template_assertion_predicate_expression(opaque4_node);\n+    TemplateAssertionExpression template_assertion_expression(opaque4_node);\n@@ -427,1 +427,1 @@\n-    Opaque4Node* cloned_opaque4_node = template_assertion_predicate_expression.clone(new_ctrl, this);\n+    Opaque4Node* cloned_opaque4_node = template_assertion_expression.clone(new_ctrl, this);\n@@ -430,1 +430,1 @@\n-  template_assertion_predicate_expression_node.for_each_template_assertion_predicate(clone_expression);\n+  template_assertion_expression_node.for_each_template_assertion_predicate(clone_expression);\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-      address call_addr = SharedRuntime::uncommon_trap_blob()->entry_point();\n+      address call_addr = OptoRuntime::uncommon_trap_blob()->entry_point();\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -694,3 +694,1 @@\n-  BasicType longer_bt = longer_type_for_conversion(s1);\n-  if (Matcher::max_vector_size_auto_vectorization(bt1) < 2 ||\n-      (longer_bt != T_ILLEGAL && Matcher::max_vector_size_auto_vectorization(longer_bt) < 2)) {\n+  if (Matcher::max_vector_size_auto_vectorization(bt1) < 2) {\n@@ -2275,1 +2273,1 @@\n-  for (uint i = 1; i < pack->size(); i++) {\n+  for (uint i = 0; i < pack->size(); i++) {\n@@ -2445,21 +2443,0 @@\n-BasicType SuperWord::longer_type_for_conversion(Node* n) const {\n-  if (!(VectorNode::is_convert_opcode(n->Opcode()) ||\n-        VectorNode::is_scalar_op_that_returns_int_but_vector_op_returns_long(n->Opcode())) ||\n-      !in_bb(n->in(1))) {\n-    return T_ILLEGAL;\n-  }\n-  assert(in_bb(n), \"must be in the bb\");\n-  BasicType src_t = velt_basic_type(n->in(1));\n-  BasicType dst_t = velt_basic_type(n);\n-  \/\/ Do not use superword for non-primitives.\n-  \/\/ Superword does not support casting involving unsigned types.\n-  if (!is_java_primitive(src_t) || is_unsigned_subword_type(src_t) ||\n-      !is_java_primitive(dst_t) || is_unsigned_subword_type(dst_t)) {\n-    return T_ILLEGAL;\n-  }\n-  int src_size = type2aelembytes(src_t);\n-  int dst_size = type2aelembytes(dst_t);\n-  return src_size == dst_size ? T_ILLEGAL\n-                              : (src_size > dst_size ? src_t : dst_t);\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":2,"deletions":25,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -626,3 +626,0 @@\n-  \/\/ Return the longer type for vectorizable type-conversion node or illegal type for other nodes.\n-  BasicType longer_type_for_conversion(Node* n) const;\n-\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-\/\/ *.include.hpp, since including them decreased build performance.\n+\/\/ *.inline.hpp, since including them decreased build performance.\n","filename":"src\/hotspot\/share\/precompiled\/precompiled.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1077,1 +1077,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchMethodError(), name_str);\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchMethodError(), name_str);\n@@ -1087,1 +1087,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchMethodError(), err_msg(\"%s%s.%s%s\", is_static ? \"static \" : \"\", klass->signature_name(), name_str, sig));\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchMethodError(), err_msg(\"%s%s.%s%s\", is_static ? \"static \" : \"\", klass->signature_name(), name_str, sig));\n@@ -1111,1 +1111,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchMethodError(), err_msg(\"%s%s.%s%s\", is_static ? \"static \" : \"\", klass->signature_name(), name_str, sig));\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchMethodError(), err_msg(\"%s%s.%s%s\", is_static ? \"static \" : \"\", klass->signature_name(), name_str, sig));\n@@ -1765,1 +1765,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchFieldError(), err_msg(\"%s.%s %s\", k->external_name(), name, sig));\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchFieldError(), err_msg(\"%s.%s %s\", k->external_name(), name, sig));\n@@ -1775,1 +1775,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchFieldError(), err_msg(\"%s.%s %s\", k->external_name(), name, sig));\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchFieldError(), err_msg(\"%s.%s %s\", k->external_name(), name, sig));\n@@ -1989,1 +1989,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchFieldError(), (char*) name);\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchFieldError(), (char*) name);\n@@ -1998,1 +1998,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchFieldError(), (char*) name);\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchFieldError(), (char*) name);\n@@ -2312,1 +2312,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_ArrayIndexOutOfBoundsException(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_ArrayIndexOutOfBoundsException(), ss.as_string());\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_CloneNotSupportedException(), klass->external_name());\n+    THROW_MSG_NULL(vmSymbols::java_lang_CloneNotSupportedException(), klass->external_name());\n@@ -794,1 +794,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_ClassNotFoundException(), (char*) utf);\n+    THROW_MSG_NULL(vmSymbols::java_lang_ClassNotFoundException(), (char*) utf);\n@@ -955,1 +955,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class is null\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class is null\");\n@@ -982,1 +982,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"classData is only applicable for hidden classes\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"classData is only applicable for hidden classes\");\n@@ -985,1 +985,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"dynamic nestmate is only applicable for hidden classes\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"dynamic nestmate is only applicable for hidden classes\");\n@@ -988,1 +988,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"an ordinary class must be strongly referenced by its defining loader\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"an ordinary class must be strongly referenced by its defining loader\");\n@@ -991,1 +991,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"vm annotations only allowed for hidden classes\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"vm annotations only allowed for hidden classes\");\n@@ -994,2 +994,2 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-                  err_msg(\"invalid flag 0x%x\", flags));\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                     err_msg(\"invalid flag 0x%x\", flags));\n@@ -1035,1 +1035,1 @@\n-    ik->class_loader_data()->dec_keep_alive();\n+    ik->class_loader_data()->dec_keep_alive_ref_count();\n@@ -1050,1 +1050,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class and defined class are in different packages\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class and defined class are in different packages\");\n@@ -1081,1 +1081,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class is null\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Lookup class is null\");\n@@ -1706,2 +1706,2 @@\n-        THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-                    \"Wrong type at constant pool index\");\n+        THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                       \"Wrong type at constant pool index\");\n@@ -2136,1 +2136,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2149,1 +2149,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2160,1 +2160,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2175,1 +2175,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_RuntimeException(), \"Unable to look up method in target class\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_RuntimeException(), \"Unable to look up method in target class\");\n@@ -2209,1 +2209,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2225,1 +2225,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_RuntimeException(), \"Unable to look up field in target class\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_RuntimeException(), \"Unable to look up field in target class\");\n@@ -2258,1 +2258,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2309,1 +2309,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2377,1 +2377,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -2391,1 +2391,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Wrong type at constant pool index\");\n@@ -3295,1 +3295,1 @@\n-    THROW_0(vmSymbols::java_lang_NullPointerException());\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -3299,1 +3299,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Argument is not an array\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Argument is not an array\");\n@@ -3301,1 +3301,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"Argument is not an array of primitive type\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"Argument is not an array of primitive type\");\n@@ -3538,1 +3538,1 @@\n-    THROW_0(vmSymbols::java_lang_StackOverflowError());\n+    THROW_NULL(vmSymbols::java_lang_StackOverflowError());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -985,0 +985,2 @@\n+  JvmtiVTMSTransitionDisabler disabler;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -932,3 +932,2 @@\n-    if (_thread->is_in_any_VTMS_transition()) {\n-      return; \/\/ no events should be posted if thread is in any VTMS transition\n-    }\n+    assert(!_thread->is_in_any_VTMS_transition(), \"CFLH events are not allowed in any VTMS transition\");\n+\n@@ -1094,2 +1093,3 @@\n-  if (JavaThread::current()->is_in_tmp_VTMS_transition()) {\n-    return false; \/\/ skip CFLH events in tmp VTMS transition\n+\n+  if (JavaThread::current()->is_in_any_VTMS_transition()) {\n+    return false; \/\/ no events should be posted if thread is in any VTMS transition\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,1 +290,1 @@\n-  static address  get_field_access_count_addr() NOT_JVMTI_RETURN_(0);\n+  static address  get_field_access_count_addr() NOT_JVMTI_RETURN_(nullptr);\n@@ -293,1 +293,1 @@\n-  static address  get_field_modification_count_addr() NOT_JVMTI_RETURN_(0);\n+  static address  get_field_modification_count_addr() NOT_JVMTI_RETURN_(nullptr);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -417,1 +417,1 @@\n-  THROW_MSG_0(vmSymbols::java_lang_UnsatisfiedLinkError(), ss.as_string());\n+  THROW_MSG_NULL(vmSymbols::java_lang_UnsatisfiedLinkError(), ss.as_string());\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    THROW_0(vmSymbols::java_lang_NullPointerException());\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -116,1 +116,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -131,1 +131,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"PerfLong name already exists\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"PerfLong name already exists\");\n@@ -155,1 +155,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -177,1 +177,1 @@\n-    THROW_0(vmSymbols::java_lang_NullPointerException());\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -184,1 +184,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -191,1 +191,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -214,1 +214,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"PerfByteArray name already exists\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"PerfByteArray name already exists\");\n","filename":"src\/hotspot\/share\/prims\/perf.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -555,1 +555,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -593,1 +593,1 @@\n-  THROW_MSG_0(vmSymbols::java_lang_UnsupportedOperationException(), \"WB_G1AuxiliaryMemoryUsage: G1 GC is not enabled\");\n+  THROW_MSG_NULL(vmSymbols::java_lang_UnsupportedOperationException(), \"WB_G1AuxiliaryMemoryUsage: G1 GC is not enabled\");\n@@ -802,0 +802,1 @@\n+    ResourceMark rm(THREAD);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+#include \"utilities\/checkedCast.hpp\"\n@@ -1121,1 +1122,1 @@\n-  size_t offset = pointer_delta(dest, aligned_dest, 1);\n+  uint32_t offset = checked_cast<uint32_t>(pointer_delta(dest, aligned_dest, 1));\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -272,1 +272,0 @@\n-  MUTEX_DEFN(JvmtiVTMSTransition_lock        , PaddedMonitor, safepoint);   \/\/ used for Virtual Thread Mount State transition management\n@@ -358,0 +357,1 @@\n+  MUTEX_DEFL(JvmtiVTMSTransition_lock        , PaddedMonitor, JvmtiThreadState_lock); \/\/ used for Virtual Thread Mount State transition management\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,1 +364,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -382,1 +382,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -405,1 +405,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -423,1 +423,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -445,1 +445,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -463,1 +463,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n@@ -485,1 +485,1 @@\n-    THROW_0(vmSymbols::java_lang_OutOfMemoryError());\n+    THROW_NULL(vmSymbols::java_lang_OutOfMemoryError());\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,1 +328,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -337,1 +337,1 @@\n-    THROW_0(vmSymbols::java_lang_NullPointerException());\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -340,1 +340,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", length));\n+    THROW_MSG_NULL(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", length));\n@@ -348,1 +348,1 @@\n-      THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+      THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -360,1 +360,1 @@\n-    THROW_0(vmSymbols::java_lang_NullPointerException());\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -365,1 +365,1 @@\n-    THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+    THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -372,1 +372,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", d));\n+      THROW_MSG_NULL(vmSymbols::java_lang_NegativeArraySizeException(), err_msg(\"%d\", d));\n@@ -386,1 +386,1 @@\n-        THROW_0(vmSymbols::java_lang_IllegalArgumentException());\n+        THROW_NULL(vmSymbols::java_lang_IllegalArgumentException());\n@@ -980,1 +980,1 @@\n-      THROW_0(vmSymbols::java_lang_NullPointerException());\n+      THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -984,1 +984,1 @@\n-      THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"object is not an instance of declaring class\");\n+      THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"object is not an instance of declaring class\");\n@@ -1050,1 +1050,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_NoSuchMethodError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchMethodError(), ss.as_string());\n@@ -1057,2 +1057,2 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-                \"wrong number of arguments\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   \"wrong number of arguments\");\n@@ -1088,1 +1088,1 @@\n-          THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(), \"argument type mismatch\");\n+          THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(), \"argument type mismatch\");\n@@ -1094,2 +1094,2 @@\n-          THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-                      \"argument type mismatch\");\n+          THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                         \"argument type mismatch\");\n@@ -1151,1 +1151,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_InternalError(), \"invoke\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), \"invoke\");\n@@ -1168,1 +1168,1 @@\n-    THROW_MSG_0(vmSymbols::java_lang_InternalError(), \"invoke\");\n+    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), \"invoke\");\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -103,4 +103,0 @@\n-#ifdef COMPILER2\n-UncommonTrapBlob*   SharedRuntime::_uncommon_trap_blob;\n-#endif \/\/ COMPILER2\n-\n@@ -132,4 +128,0 @@\n-\n-#ifdef COMPILER2\n-  generate_uncommon_trap_blob();\n-#endif \/\/ COMPILER2\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,4 +65,0 @@\n-#ifdef COMPILER2\n-  static UncommonTrapBlob*   _uncommon_trap_blob;\n-#endif \/\/ COMPILER2\n-\n@@ -226,5 +222,0 @@\n-#ifdef COMPILER2\n-  static void generate_uncommon_trap_blob(void);\n-  static UncommonTrapBlob* uncommon_trap_blob()                  { return _uncommon_trap_blob; }\n-#endif \/\/ COMPILER2\n-\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1425,0 +1425,1 @@\n+  declare_c2_type(ForwardExceptionNode, ReturnNode)                       \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1823,1 +1823,1 @@\n-    THROW_(vmSymbols::java_lang_NullPointerException(), 0);\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -1831,2 +1831,2 @@\n-    THROW_MSG_(vmSymbols::java_lang_IllegalArgumentException(),\n-               \"The length of the given MemoryUsage array does not match the number of memory pools.\", 0);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   \"The length of the given MemoryUsage array does not match the number of memory pools.\");\n@@ -1839,2 +1839,2 @@\n-    THROW_MSG_(vmSymbols::java_lang_IllegalArgumentException(),\n-               \"The element type is not MemoryUsage class\", 0);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   \"The element type is not MemoryUsage class\");\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/checkedCast.hpp\"\n@@ -66,1 +67,1 @@\n-    return (((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n+    return checked_cast<uint16_t>(((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n","filename":"src\/hotspot\/share\/utilities\/byteswap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,4 @@\n+#ifndef PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n+#define PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,3 @@\n+#define PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED \\\n+  PRAGMA_DISABLE_GCC_WARNING(\"-Wzero-as-null-pointer-constant\")\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings_gcc.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+    DEBUG_ONLY(size_t _saved_hash);\n@@ -80,0 +81,4 @@\n+#ifdef ASSERT\n+    size_t saved_hash() const         { return _saved_hash; }\n+    void set_saved_hash(size_t hash)  { _saved_hash = hash; }\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -682,1 +682,3 @@\n-        fatal(\"aux_index does not match even or odd indices\");\n+        const char* msg = \"Cannot resize table: Node hash code has changed possibly due to corruption of the contents.\";\n+        DEBUG_ONLY(fatal(\"%s Node hash code changed from \" SIZE_FORMAT \" to \" SIZE_FORMAT, msg, aux->saved_hash(), aux_hash);)\n+        NOT_DEBUG(fatal(\"%s\", msg);)\n@@ -895,0 +897,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n@@ -1120,0 +1123,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,0 @@\n-  _line_ending = 0;\n@@ -97,1 +96,0 @@\n-  _line_ending = 0;\n@@ -149,1 +147,0 @@\n-      _line_ending = 0;\n@@ -227,1 +224,0 @@\n-    _line_ending = 0;\n@@ -250,1 +246,0 @@\n-    _line_ending = (int)(_next - end);\n@@ -302,1 +297,1 @@\n-  tty->print_cr(\"%s%sistream %s%s%s%s%s [%d<%.*s>%d\/%d..%d] LE=%d,\"\n+  tty->print_cr(\"%s%sistream %s%s%s%s%s [%d<%.*s>%d\/%d..%d] \"\n@@ -315,1 +310,0 @@\n-                _line_ending,\n","filename":"src\/hotspot\/share\/utilities\/istream.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-  char   _line_ending;  \/\/ one of {0,1,2} for \"\", \"\\n\", \"\\r\\n\"\n@@ -228,1 +227,0 @@\n-    _line_ending(0),\n","filename":"src\/hotspot\/share\/utilities\/istream.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -624,1 +624,1 @@\n-#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64) && !defined(_WINDOWS)\n+#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64)\n","filename":"src\/hotspot\/share\/utilities\/macros.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1275,1 +1275,1 @@\n-        if (cl != null && isCustomSubclass()) {\n+        if (isCustomSubclass()) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * modifying Java class files, as specified in Chapter {@jvms 4} of the <cite>Java\n- * Java Virtual Machine Specification<\/cite>.\n+ * modifying Java class files, as specified in Chapter {@jvms 4} of the\n+ * <cite>Java Virtual Machine Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+import java.util.Arrays;\n@@ -98,3 +99,1 @@\n-        private static final MethodHandle NULL_CHECK;\n-        private static final MethodHandle IS_ZERO;\n-        private static final MethodHandle MAPPED_ENUM_LOOKUP;\n+        private static final MethodHandle MAPPED_ENUM_SWITCH;\n@@ -104,7 +103,3 @@\n-                NULL_CHECK = LOOKUP.findStatic(Objects.class, \"isNull\",\n-                                               MethodType.methodType(boolean.class, Object.class));\n-                IS_ZERO = LOOKUP.findStatic(SwitchBootstraps.class, \"isZero\",\n-                                               MethodType.methodType(boolean.class, int.class));\n-                MAPPED_ENUM_LOOKUP = LOOKUP.findStatic(SwitchBootstraps.class, \"mappedEnumLookup\",\n-                                                       MethodType.methodType(int.class, Enum.class, MethodHandles.Lookup.class,\n-                                                                             Class.class, EnumDesc[].class, EnumMap.class));\n+                MAPPED_ENUM_SWITCH = LOOKUP.findStatic(SwitchBootstraps.class, \"mappedEnumSwitch\",\n+                                                       MethodType.methodType(int.class, Enum.class, int.class, MethodHandles.Lookup.class,\n+                                                                             Class.class, EnumDesc[].class, MappedEnumCache.class));\n@@ -214,4 +209,0 @@\n-    private static boolean isZero(int value) {\n-        return value == 0;\n-    }\n-\n@@ -289,1 +280,10 @@\n-        labels = Stream.of(labels).map(l -> convertEnumConstants(lookup, enumClass, l)).toArray();\n+        boolean constantsOnly = true;\n+        int len = labels.length;\n+\n+        for (int i = 0; i < len; i++) {\n+            Object convertedLabel =\n+                    convertEnumConstants(lookup, enumClass, labels[i]);\n+            labels[i] = convertedLabel;\n+            if (constantsOnly)\n+                constantsOnly = convertedLabel instanceof EnumDesc;\n+        }\n@@ -292,1 +292,0 @@\n-        boolean constantsOnly = Stream.of(labels).allMatch(l -> enumClass.isAssignableFrom(EnumDesc.class));\n@@ -299,7 +298,3 @@\n-            MethodHandle body =\n-                    MethodHandles.guardWithTest(MethodHandles.dropArguments(StaticHolders.NULL_CHECK, 0, int.class),\n-                                                MethodHandles.dropArguments(MethodHandles.constant(int.class, -1), 0, int.class, Object.class),\n-                                                MethodHandles.guardWithTest(MethodHandles.dropArguments(StaticHolders.IS_ZERO, 1, Object.class),\n-                                                                            generateTypeSwitch(lookup, invocationType.parameterType(0), labels),\n-                                                                            MethodHandles.insertArguments(StaticHolders.MAPPED_ENUM_LOOKUP, 1, lookup, enumClass, labels, new EnumMap())));\n-            target = MethodHandles.permuteArguments(body, MethodType.methodType(int.class, Object.class, int.class), 1, 0);\n+            EnumDesc<?>[] enumDescLabels =\n+                    Arrays.copyOf(labels, labels.length, EnumDesc[].class);\n+            target = MethodHandles.insertArguments(StaticHolders.MAPPED_ENUM_SWITCH, 2, lookup, enumClass, enumDescLabels, new MappedEnumCache());\n@@ -334,8 +329,4 @@\n-    private static <T extends Enum<T>> int mappedEnumLookup(T value, MethodHandles.Lookup lookup, Class<T> enumClass, EnumDesc<?>[] labels, EnumMap enumMap) {\n-        if (enumMap.map == null) {\n-            T[] constants = SharedSecrets.getJavaLangAccess().getEnumConstantsShared(enumClass);\n-            int[] map = new int[constants.length];\n-            int ordinal = 0;\n-\n-            for (T constant : constants) {\n-                map[ordinal] = labels.length;\n+    private static <T extends Enum<T>> int mappedEnumSwitch(T value, int restartIndex, MethodHandles.Lookup lookup, Class<T> enumClass, EnumDesc<?>[] labels, MappedEnumCache enumCache) throws Throwable {\n+        if (value == null) {\n+            return -1;\n+        }\n@@ -343,4 +334,13 @@\n-                for (int i = 0; i < labels.length; i++) {\n-                    if (Objects.equals(labels[i].constantName(), constant.name())) {\n-                        map[ordinal] = i;\n-                        break;\n+        if (restartIndex != 0) {\n+            MethodHandle generatedSwitch = enumCache.generatedSwitch;\n+            if (generatedSwitch == null) {\n+                synchronized (enumCache) {\n+                    generatedSwitch = enumCache.generatedSwitch;\n+\n+                    if (generatedSwitch == null) {\n+                        generatedSwitch =\n+                                generateTypeSwitch(lookup, enumClass, labels)\n+                                        .asType(MethodType.methodType(int.class,\n+                                                                      Enum.class,\n+                                                                      int.class));\n+                        enumCache.generatedSwitch = generatedSwitch;\n@@ -349,0 +349,6 @@\n+            }\n+\n+            return (int) generatedSwitch.invokeExact(value, restartIndex);\n+        }\n+\n+        int[] constantsMap = enumCache.constantsMap;\n@@ -350,1 +356,26 @@\n-                ordinal++;\n+        if (constantsMap == null) {\n+            synchronized (enumCache) {\n+                constantsMap = enumCache.constantsMap;\n+\n+                if (constantsMap == null) {\n+                    T[] constants = SharedSecrets.getJavaLangAccess()\n+                                                 .getEnumConstantsShared(enumClass);\n+                    constantsMap = new int[constants.length];\n+                    int ordinal = 0;\n+\n+                    for (T constant : constants) {\n+                        constantsMap[ordinal] = labels.length;\n+\n+                        for (int i = 0; i < labels.length; i++) {\n+                            if (Objects.equals(labels[i].constantName(),\n+                                               constant.name())) {\n+                                constantsMap[ordinal] = i;\n+                                break;\n+                            }\n+                        }\n+\n+                        ordinal++;\n+                    }\n+\n+                    enumCache.constantsMap = constantsMap;\n+                }\n@@ -353,1 +384,2 @@\n-        return enumMap.map[value.ordinal()];\n+\n+        return constantsMap[value.ordinal()];\n@@ -398,1 +430,3 @@\n-    private static final class EnumMap {\n+    private static final class MappedEnumCache {\n+        @Stable\n+        public int[] constantsMap;\n@@ -400,1 +434,1 @@\n-        public int[] map;\n+        public MethodHandle generatedSwitch;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":73,"deletions":39,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -2726,1 +2726,1 @@\n-        return new MutableBigInteger(this.mag).sqrt().toBigInteger();\n+        return new MutableBigInteger(this.mag).sqrtRem(false)[0].toBigInteger();\n@@ -2745,4 +2745,6 @@\n-        BigInteger s = sqrt();\n-        BigInteger r = this.subtract(s.square());\n-        assert r.compareTo(BigInteger.ZERO) >= 0;\n-        return new BigInteger[] {s, r};\n+        if (this.signum < 0) {\n+            throw new ArithmeticException(\"Negative BigInteger\");\n+        }\n+\n+        MutableBigInteger[] sqrtRem = new MutableBigInteger(this.mag).sqrtRem(true);\n+        return new BigInteger[] { sqrtRem[0].toBigInteger(), sqrtRem[1].toBigInteger() };\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -112,3 +112,20 @@\n-        value = new int[1];\n-        intLen = 1;\n-        value[0] = val;\n+        init(val);\n+    }\n+\n+    \/**\n+     * Construct a new MutableBigInteger with a magnitude specified by\n+     * the long val.\n+     *\/\n+    MutableBigInteger(long val) {\n+        int hi = (int) (val >>> 32);\n+        if (hi == 0) {\n+            init((int) val);\n+        } else {\n+            value = new int[] { hi, (int) val };\n+            intLen = 2;\n+        }\n+    }\n+\n+    private void init(int val) {\n+        value = new int[] { val };\n+        intLen = val != 0 ? 1 : 0;\n@@ -263,0 +280,1 @@\n+     * Assumes no leading unnecessary zeros.\n@@ -288,0 +306,1 @@\n+     * Assumes no leading unnecessary zeros.\n@@ -541,0 +560,1 @@\n+     * Assumes {@code Math.ceilDiv(n, 32) <= intLen || intLen == 0}\n@@ -914,0 +934,52 @@\n+    \/**\n+     * Shifts {@code this} of {@code n} ints to the left and adds {@code addend}.\n+     * Assumes {@code n > 0} for speed.\n+     *\/\n+    void shiftAdd(MutableBigInteger addend, int n) {\n+        \/\/ Fast cases\n+        if (addend.intLen <= n) {\n+            shiftAddDisjoint(addend, n);\n+        } else if (intLen == 0) {\n+            copyValue(addend);\n+        } else {\n+            leftShift(n << 5);\n+            add(addend);\n+        }\n+    }\n+\n+    \/**\n+     * Shifts {@code this} of {@code n} ints to the left and adds {@code addend}.\n+     * Assumes {@code addend.intLen <= n}.\n+     *\/\n+    void shiftAddDisjoint(MutableBigInteger addend, int n) {\n+        if (intLen == 0) { \/\/ Avoid unnormal values\n+            copyValue(addend);\n+            return;\n+        }\n+\n+        int[] res;\n+        final int resLen = intLen + n, resOffset;\n+        if (resLen > value.length) {\n+            res = new int[resLen];\n+            System.arraycopy(value, offset, res, 0, intLen);\n+            resOffset = 0;\n+        } else {\n+            res = value;\n+            if (offset + resLen > value.length) {\n+                System.arraycopy(value, offset, res, 0, intLen);\n+                resOffset = 0;\n+            } else {\n+                resOffset = offset;\n+            }\n+            \/\/ Clear words where necessary\n+            if (addend.intLen < n)\n+                Arrays.fill(res, resOffset + intLen, resOffset + resLen - addend.intLen, 0);\n+        }\n+\n+        System.arraycopy(addend.value, addend.offset, res, resOffset + resLen - addend.intLen, addend.intLen);\n+\n+        value = res;\n+        offset = resOffset;\n+        intLen = resLen;\n+    }\n+\n@@ -1006,0 +1078,1 @@\n+     * Assume {@code intLen > 0}\n@@ -1796,4 +1869,4 @@\n-     * Calculate the integer square root {@code floor(sqrt(this))} where\n-     * {@code sqrt(.)} denotes the mathematical square root. The contents of\n-     * {@code this} are <b>not<\/b> changed. The value of {@code this} is assumed\n-     * to be non-negative.\n+     * Calculate the integer square root {@code floor(sqrt(this))} and the remainder\n+     * if needed, where {@code sqrt(.)} denotes the mathematical square root.\n+     * The contents of {@code this} are <em>not<\/em> changed.\n+     * The value of {@code this} is assumed to be non-negative.\n@@ -1801,7 +1874,1 @@\n-     * @implNote The implementation is based on the material in Henry S. Warren,\n-     * Jr., <i>Hacker's Delight (2nd ed.)<\/i> (Addison Wesley, 2013), 279-282.\n-     *\n-     * @throws ArithmeticException if the value returned by {@code bitLength()}\n-     * overflows the range of {@code int}.\n-     * @return the integer square root of {@code this}\n-     * @since 9\n+     * @return the integer square root of {@code this} and the remainder if needed\n@@ -1809,1 +1876,1 @@\n-    MutableBigInteger sqrt() {\n+    MutableBigInteger[] sqrtRem(boolean needRemainder) {\n@@ -1811,21 +1878,36 @@\n-        if (this.isZero()) {\n-            return new MutableBigInteger(0);\n-        } else if (this.value.length == 1\n-                && (this.value[0] & LONG_MASK) < 4) { \/\/ result is unity\n-            return ONE;\n-        }\n-\n-        if (bitLength() <= 63) {\n-            \/\/ Initial estimate is the square root of the positive long value.\n-            long v = new BigInteger(this.value, 1).longValueExact();\n-            long xk = (long)Math.floor(Math.sqrt(v));\n-\n-            \/\/ Refine the estimate.\n-            do {\n-                long xk1 = (xk + v\/xk)\/2;\n-\n-                \/\/ Terminate when non-decreasing.\n-                if (xk1 >= xk) {\n-                    return new MutableBigInteger(new int[] {\n-                        (int)(xk >>> 32), (int)(xk & LONG_MASK)\n-                    });\n+        if (this.intLen <= 2) {\n+            final long x = this.toLong(); \/\/ unsigned\n+            long s = unsignedLongSqrt(x);\n+\n+            return new MutableBigInteger[] {\n+                    new MutableBigInteger((int) s),\n+                    needRemainder ? new MutableBigInteger(x - s * s) : null\n+            };\n+        }\n+\n+        \/\/ Normalize\n+        MutableBigInteger x = this;\n+        final int shift = (Integer.numberOfLeadingZeros(x.value[x.offset]) & ~1) \/\/ shift must be even\n+                + ((x.intLen & 1) << 5); \/\/ x.intLen must be even\n+\n+        if (shift != 0) {\n+            x = new MutableBigInteger(x);\n+            x.leftShift(shift);\n+        }\n+\n+        \/\/ Compute sqrt and remainder\n+        MutableBigInteger[] sqrtRem = x.sqrtRemKaratsuba(x.intLen, needRemainder);\n+\n+        \/\/ Unnormalize\n+        if (shift != 0) {\n+            final int halfShift = shift >> 1;\n+            if (needRemainder) {\n+                \/\/ shift <= 62, so s0 is at most 31 bit long\n+                final long s0 = sqrtRem[0].value[sqrtRem[0].offset + sqrtRem[0].intLen - 1]\n+                        & (-1 >>> -halfShift); \/\/ Remove excess bits\n+                if (s0 != 0L) { \/\/ An optimization\n+                    MutableBigInteger doubleProd = new MutableBigInteger();\n+                    sqrtRem[0].mul((int) (s0 << 1), doubleProd);\n+\n+                    sqrtRem[1].add(doubleProd);\n+                    sqrtRem[1].subtract(new MutableBigInteger(s0 * s0));\n@@ -1833,0 +1915,6 @@\n+                sqrtRem[1].rightShift(shift);\n+            }\n+            sqrtRem[0].primitiveRightShift(halfShift);\n+        }\n+        return sqrtRem;\n+    }\n@@ -1834,4 +1922,18 @@\n-                xk = xk1;\n-            } while (true);\n-        } else {\n-            \/\/ Set up the initial estimate of the iteration.\n+    private static long unsignedLongSqrt(long x) {\n+        \/* For every long value s in [0, 2^32) such that x == s * s,\n+         * it is true that s - 1 <= (long) Math.sqrt(x >= 0 ? x : x + 0x1p64) <= s,\n+         * and if x == 2^64 - 1, then (long) Math.sqrt(x >= 0 ? x : x + 0x1p64) == 2^32.\n+         * Since both cast to long and `Math.sqrt()` are (weakly) increasing,\n+         * this means that the value returned by Math.sqrt()\n+         * for a long value in the range [0, 2^64) is either correct,\n+         * or rounded up\/down by one if the value is too high\n+         * and too close to a perfect square.\n+         *\/\n+        long s = (long) Math.sqrt(x >= 0 ? x : x + 0x1p64);\n+        long s2 = s * s;  \/\/ overflows iff s == 2^32\n+        return Long.compareUnsigned(x, s2) < 0 || s > LONG_MASK\n+                ? s - 1\n+                : (Long.compareUnsigned(x, s2 + (s << 1)) <= 0 \/\/ x <= (s + 1)^2 - 1, does not overflow\n+                        ? s\n+                        : s + 1);\n+    }\n@@ -1839,5 +1941,11 @@\n-            \/\/ Obtain the bitLength > 63.\n-            int bitLength = (int) this.bitLength();\n-            if (bitLength != this.bitLength()) {\n-                throw new ArithmeticException(\"bitLength() integer overflow\");\n-            }\n+    \/**\n+     * Assumes {@code 2 <= len <= intLen && len % 2 == 0\n+     * && Integer.numberOfLeadingZeros(value[offset]) <= 1}\n+     * @implNote The implementation is based on Zimmermann's works available\n+     * <a href=\"https:\/\/inria.hal.science\/inria-00072854v1\/document\">  here<\/a> and\n+     * <a href=\"https:\/\/inria.hal.science\/inria-00072113\/document\">  here<\/a>\n+     *\/\n+    private MutableBigInteger[] sqrtRemKaratsuba(int len, boolean needRemainder) {\n+        if (len == 2) { \/\/ Base case\n+            long x = ((value[offset] & LONG_MASK) << 32) | (value[offset + 1] & LONG_MASK);\n+            long s = unsignedLongSqrt(x);\n@@ -1845,5 +1953,2 @@\n-            \/\/ Determine an even valued right shift into positive long range.\n-            int shift = bitLength - 63;\n-            if (shift % 2 == 1) {\n-                shift++;\n-            }\n+            \/\/ Allocate sufficient space to hold the final square root, assuming intLen % 2 == 0\n+            MutableBigInteger sqrt = new MutableBigInteger(new int[intLen >> 1]);\n@@ -1851,25 +1956,8 @@\n-            \/\/ Shift the value into positive long range.\n-            MutableBigInteger xk = new MutableBigInteger(this);\n-            xk.rightShift(shift);\n-            xk.normalize();\n-\n-            \/\/ Use the square root of the shifted value as an approximation.\n-            double d = new BigInteger(xk.value, 1).doubleValue();\n-            BigInteger bi = BigInteger.valueOf((long)Math.ceil(Math.sqrt(d)));\n-            xk = new MutableBigInteger(bi.mag);\n-\n-            \/\/ Shift the approximate square root back into the original range.\n-            xk.leftShift(shift \/ 2);\n-\n-            \/\/ Refine the estimate.\n-            MutableBigInteger xk1 = new MutableBigInteger();\n-            do {\n-                \/\/ xk1 = (xk + n\/xk)\/2\n-                this.divide(xk, xk1, false);\n-                xk1.add(xk);\n-                xk1.rightShift(1);\n-\n-                \/\/ Terminate when non-decreasing.\n-                if (xk1.compare(xk) >= 0) {\n-                    return xk;\n-                }\n+            \/\/ Place the partial square root\n+            sqrt.intLen = 1;\n+            sqrt.value[0] = (int) s;\n+\n+            return new MutableBigInteger[] { sqrt, new MutableBigInteger(x - s * s) };\n+        }\n+\n+        \/\/ Recursive step (len >= 4)\n@@ -1877,2 +1965,3 @@\n-                \/\/ xk = xk1\n-                xk.copyValue(xk1);\n+        final int halfLen = len >> 1;\n+        \/\/ Recursive invocation\n+        MutableBigInteger[] sr = sqrtRemKaratsuba(halfLen + (halfLen & 1), true);\n@@ -1880,2 +1969,36 @@\n-                xk1.reset();\n-            } while (true);\n+        final int blockLen = halfLen >> 1;\n+        MutableBigInteger dividend = sr[1];\n+        dividend.shiftAddDisjoint(getBlockForSqrt(1, len, blockLen), blockLen);\n+\n+        \/\/ Compute dividend \/ (2*sqrt)\n+        MutableBigInteger sqrt = sr[0];\n+        MutableBigInteger q = new MutableBigInteger();\n+        MutableBigInteger u = dividend.divide(sqrt, q);\n+        if (q.isOdd())\n+            u.add(sqrt);\n+        q.rightShift(1);\n+\n+        sqrt.shiftAdd(q, blockLen);\n+        \/\/ Corresponds to ub + a_0 in the paper\n+        u.shiftAddDisjoint(getBlockForSqrt(0, len, blockLen), blockLen);\n+        BigInteger qBig = q.toBigInteger(); \/\/ Cast to BigInteger to use fast multiplication\n+        MutableBigInteger qSqr = new MutableBigInteger(qBig.multiply(qBig).mag);\n+\n+        MutableBigInteger rem;\n+        if (needRemainder) {\n+            rem = u;\n+            if (rem.subtract(qSqr) < 0) {\n+                MutableBigInteger twiceSqrt = new MutableBigInteger(sqrt);\n+                twiceSqrt.leftShift(1);\n+\n+                \/\/ Since subtract() performs an absolute difference, to get the correct algebraic sum\n+                \/\/ we must first add the sum of absolute values of addends concordant with the sign of rem\n+                \/\/ and then subtract the sum of absolute values of addends that are discordant\n+                rem.add(ONE);\n+                rem.subtract(twiceSqrt);\n+                sqrt.subtract(ONE);\n+            }\n+        } else {\n+            rem = null;\n+            if (u.compare(qSqr) < 0)\n+                sqrt.subtract(ONE);\n@@ -1883,0 +2006,26 @@\n+\n+        sr[1] = rem;\n+        return sr;\n+    }\n+\n+    \/**\n+     * Returns a {@code MutableBigInteger} obtained by taking {@code blockLen} ints from\n+     * {@code this} number, ending at {@code blockIndex*blockLen} (exclusive).<br\/>\n+     * Used in Karatsuba square root.\n+     * @param blockIndex the block index, starting from the lowest\n+     * @param len the logical length of the input value in units of 32 bits\n+     * @param blockLen the length of the block in units of 32 bits\n+     *\n+     * @return a {@code MutableBigInteger} obtained by taking {@code blockLen} ints from\n+     * {@code this} number, ending at {@code blockIndex*blockLen} (exclusive).\n+     *\/\n+    private MutableBigInteger getBlockForSqrt(int blockIndex, int len, int blockLen) {\n+        final int to = offset + len - blockIndex * blockLen;\n+\n+        \/\/ Skip leading zeros\n+        int from;\n+        for (from = to - blockLen; from < to && value[from] == 0; from++);\n+\n+        return from == to\n+                ? new MutableBigInteger()\n+                : new MutableBigInteger(Arrays.copyOfRange(value, from, to));\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":228,"deletions":79,"binary":false,"changes":307,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import jdk.internal.util.ArraysSupport;\n@@ -709,3 +708,0 @@\n-    public int hashCode() {\n-        return ArraysSupport.hashCode(hb, ix(position()), remaining(), 1);\n-    }\n@@ -740,3 +736,0 @@\n-    public int hashCode() {\n-        return ArraysSupport.hashCode(hb, ix(position()), remaining(), 1);\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1015,1 +1015,1 @@\n-     *     {@code 61}, as two decimal digits.\n+     *     {@code 61}), as two decimal digits.\n","filename":"src\/java.base\/share\/classes\/java\/util\/Date.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n- *    <td>{@link #getFirst() getFirst()}<\/td>\n+ *    <td>{@link #peekFirst() peekFirst()}<\/td>\n","filename":"src\/java.base\/share\/classes\/java\/util\/Deque.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,8 +192,3 @@\n-     * <p>Beware that, unlike in most collections, this method is\n-     * <em>NOT<\/em> a constant-time operation. Because of the\n-     * asynchronous nature of these sets, determining the current\n-     * number of elements requires traversing them all to count them.\n-     * Additionally, it is possible for the size to change during\n-     * execution of this method, in which case the returned result\n-     * will be inaccurate. Thus, this method is typically not very\n-     * useful in concurrent applications.\n+     * <p>It is possible for the size to change during execution of this method,\n+     * in which case the returned result will be inaccurate.\n+     * Thus, this method is typically not very useful in concurrent applications.\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentSkipListSet.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -372,1 +372,0 @@\n-                long nanos;\n@@ -374,6 +373,12 @@\n-                if (!timed)\n-                    LockSupport.park(this);\n-                else if ((nanos = time - System.nanoTime()) > 0L)\n-                    LockSupport.parkNanos(this, nanos);\n-                else\n-                    break;\n+                try {\n+                    long nanos;\n+                    if (!timed)\n+                        LockSupport.park(this);\n+                    else if ((nanos = time - System.nanoTime()) > 0L)\n+                        LockSupport.parkNanos(this, nanos);\n+                    else\n+                        break;\n+                } catch (Error | RuntimeException ex) {\n+                    cancelAcquire(node, interrupted, interruptible); \/\/ cancel & rethrow\n+                    throw ex;\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -751,1 +751,0 @@\n-                long nanos;\n@@ -753,6 +752,12 @@\n-                if (!timed)\n-                    LockSupport.park(this);\n-                else if ((nanos = time - System.nanoTime()) > 0L)\n-                    LockSupport.parkNanos(this, nanos);\n-                else\n-                    break;\n+                try {\n+                    long nanos;\n+                    if (!timed)\n+                        LockSupport.park(this);\n+                    else if ((nanos = time - System.nanoTime()) > 0L)\n+                        LockSupport.parkNanos(this, nanos);\n+                    else\n+                        break;\n+                } catch (Error | RuntimeException ex) {\n+                    cancelAcquire(node, interrupted, interruptible); \/\/ cancel & rethrow\n+                    throw ex;\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,0 @@\n-        Objects.requireNonNull(key, \"key must not be null\");\n@@ -224,0 +223,7 @@\n+        return getNoCheckStale(key);\n+    }\n+\n+    \/\/ Internal get(key) without removing stale references that would modify the keyset.\n+    \/\/ Use when iterating or streaming over the keys to avoid ConcurrentModificationException.\n+    private V getNoCheckStale(Object key) {\n+        Objects.requireNonNull(key, \"key must not be null\");\n@@ -294,1 +300,1 @@\n-                .map(k -> new AbstractMap.SimpleEntry<>(k, get(k)))\n+                .map(k -> new AbstractMap.SimpleEntry<>(k, getNoCheckStale(k)))\n@@ -338,1 +344,1 @@\n-                .map(k -> k + \"=\" + get(k))\n+                .map(k -> k + \"=\" + getNoCheckStale(k))\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeyMap.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+import jdk.internal.util.StaticProperty;\n@@ -292,0 +293,10 @@\n+        \/\/ Get names for old ISO codes with new ISO code resources\n+        if (StaticProperty.javaLocaleUseOldISOCodes().equalsIgnoreCase(\"true\")) {\n+            key = switch (key) {\n+                case \"iw\" -> \"he\";\n+                case \"in\" -> \"id\";\n+                case \"ji\" -> \"yi\";\n+                default -> key;\n+            };\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleResources.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,19 @@\n-    JLI_CmdToArgs(GetCommandLine());\n+\n+    \/\/ Obtain the command line in UTF-16, then convert it to ANSI code page\n+    \/\/ without the \"best-fit\" option\n+    LPWSTR wcCmdline = GetCommandLineW();\n+    int mbSize = WideCharToMultiByte(CP_ACP,\n+        WC_NO_BEST_FIT_CHARS | WC_COMPOSITECHECK | WC_DEFAULTCHAR,\n+        wcCmdline, -1, NULL, 0, NULL, NULL);\n+    \/\/ If the call to WideCharToMultiByte() fails, it returns 0, which\n+    \/\/ will then make the following JLI_MemAlloc() to issue exit(1)\n+    LPSTR mbCmdline = JLI_MemAlloc(mbSize);\n+    if (WideCharToMultiByte(CP_ACP, WC_NO_BEST_FIT_CHARS | WC_COMPOSITECHECK | WC_DEFAULTCHAR,\n+        wcCmdline, -1, mbCmdline, mbSize, NULL, NULL) == 0) {\n+        perror(\"command line encoding conversion failure\");\n+        exit(1);\n+    }\n+\n+    JLI_CmdToArgs(mbCmdline);\n+    JLI_MemFree(mbCmdline);\n+\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.awt.image.BufferedImage;\n@@ -922,2 +923,14 @@\n-            Rectangle rect = new Rectangle(minX, row, width, 1);\n-            Raster ras = image.getData(rect);\n+            Raster ras;\n+            if (image instanceof BufferedImage bi) {\n+                \/\/ Use the raster directly (no copy).\n+                ras = bi.getRaster();\n+            } else if (image.getNumXTiles() == 1 && image.getNumYTiles() == 1 &&\n+                       image.getTileWidth() == width && image.getTileHeight() == height) {\n+                \/\/ Use the single tile directly (no copy).\n+                ras = image.getTile(image.getMinTileX(), image.getMinTileY());\n+            } else {\n+                \/\/ Make a copy of the raster data.\n+                Rectangle rect = new Rectangle(minX, row, width, 1);\n+                ras = image.getData(rect);\n+            }\n+\n@@ -925,2 +938,1 @@\n-                ras = ras.createChild(minX, row, width, 1, minX, row,\n-                                      sourceBands);\n+                ras = ras.createChild(minX, row, width, 1, minX, row, sourceBands);\n@@ -932,1 +944,1 @@\n-                WritableRaster wr = ras.createCompatibleWritableRaster();\n+                WritableRaster wr = ras.createCompatibleWritableRaster(minX, row, width, 1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageWriter.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    \/** This enum mirrors that in gtk2_interface.h *\/\n+    \/** This enum mirrors that in gtk_interface.h *\/\n@@ -496,5 +496,4 @@\n-        if(GTKLookAndFeel.is3()) {\n-            if (parent != null && parent.getParent() instanceof JComboBox) {\n-                if (parent.getParent().hasFocus()) {\n-                    synthState |= SynthConstants.FOCUSED;\n-                }\n+\n+        if (parent != null && parent.getParent() instanceof JComboBox) {\n+            if (parent.getParent().hasFocus()) {\n+                synthState |= SynthConstants.FOCUSED;\n@@ -503,0 +502,1 @@\n+\n@@ -631,1 +631,1 @@\n-    \/* GtkSettings enum mirrors that in gtk2_interface.h *\/\n+    \/* GtkSettings enum mirrors that in gtk_interface.h *\/\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKEngine.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    static final int DEFAULT_TOGGLE_MENU_ITEM_SIZE = 12; \/\/ For pre-gtk2.4\n+    static final int DEFAULT_TOGGLE_MENU_ITEM_SIZE = 12;\n@@ -217,1 +217,1 @@\n-            if (GTKLookAndFeel.is3() && region == Region.MENU) {\n+            if (region == Region.MENU) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKIconFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,1 +80,0 @@\n-    private static boolean IS_22;\n@@ -127,11 +126,0 @@\n-    \/**\n-     * Returns true if running on system containing at least 2.2.\n-     *\/\n-    static boolean is2_2() {\n-        \/\/ NOTE: We're currently hard coding to use 2.2.\n-        \/\/ If we want to support both GTK 2.0 and 2.2, we'll\n-        \/\/ need to get the major\/minor\/micro version from the .so.\n-        \/\/ Refer to bug 4912613 for details.\n-        return IS_22;\n-    }\n-\n@@ -1457,11 +1445,1 @@\n-        if (UNIXToolkit.getGtkVersion() == UNIXToolkit.GtkVersions.GTK2) {\n-            @SuppressWarnings(\"removal\")\n-            String version = AccessController.doPrivileged(\n-                    new GetPropertyAction(\"jdk.gtk.version\"));\n-            if (version != null) {\n-                IS_22 = version.equals(\"2.2\");\n-            } else {\n-                IS_22 = true;\n-            }\n-        } else if (UNIXToolkit.getGtkVersion() ==\n-                                UNIXToolkit.GtkVersions.GTK3) {\n+        if (UNIXToolkit.getGtkVersion() == UNIXToolkit.GtkVersions.GTK3) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -214,14 +214,1 @@\n-            if (GTKLookAndFeel.is3()) {\n-                paintComponentBackground(context, g, x, y, w, h);\n-                return;\n-            }\n-            synchronized (UNIXToolkit.GTK_LOCK) {\n-                if (! ENGINE.paintCachedImage(g, x, y, w, h, id)) {\n-                    ShadowType shadow = (GTKLookAndFeel.is2_2() ?\n-                        ShadowType.NONE : ShadowType.OUT);\n-                    ENGINE.startPainting(g, x, y, w, h, id);\n-                    ENGINE.paintBox(g, context, id, gtkState,\n-                            shadow, \"menuitem\", x, y, w, h);\n-                    ENGINE.finishPainting();\n-                }\n-            }\n+            paintComponentBackground(context, g, x, y, w, h);\n@@ -573,15 +560,1 @@\n-            if (GTKLookAndFeel.is3()) {\n-                paintComponentBackground(context, g, x, y, w, h);\n-                return;\n-            }\n-            Region id = Region.MENU_ITEM;\n-            synchronized (UNIXToolkit.GTK_LOCK) {\n-                if (! ENGINE.paintCachedImage(g, x, y, w, h, id)) {\n-                    ShadowType shadow = (GTKLookAndFeel.is2_2() ?\n-                        ShadowType.NONE : ShadowType.OUT);\n-                    ENGINE.startPainting(g, x, y, w, h, id);\n-                    ENGINE.paintBox(g, context, id, gtkState, shadow,\n-                            \"menuitem\", x, y, w, h);\n-                    ENGINE.finishPainting();\n-                }\n-            }\n+            paintComponentBackground(context, g, x, y, w, h);\n@@ -701,7 +674,4 @@\n-            if (GTKLookAndFeel.is3()) {\n-                if (id == Region.POPUP_MENU_SEPARATOR) {\n-                    detail = \"menuitem\";\n-                    h -= (insets.top + insets.bottom);\n-                } else {\n-                    detail = \"separator\";\n-                }\n+\n+            if (id == Region.POPUP_MENU_SEPARATOR) {\n+                detail = \"menuitem\";\n+                h -= (insets.top + insets.bottom);\n@@ -709,2 +679,1 @@\n-                detail = orientation == JSeparator.HORIZONTAL ?\n-                                                    \"hseparator\" : \"vseparator\";\n+                detail = \"separator\";\n@@ -712,0 +681,1 @@\n+\n@@ -826,8 +796,7 @@\n-        if (GTKLookAndFeel.is3()) {\n-            if (slider.getOrientation() == JSlider.VERTICAL) {\n-                y += 1;\n-                h -= 2;\n-            } else {\n-                x += 1;\n-                w -= 2;\n-            }\n+\n+        if (slider.getOrientation() == JSlider.VERTICAL) {\n+            y += 1;\n+            h -= 2;\n+        } else {\n+            x += 1;\n+            w -= 2;\n@@ -835,0 +804,1 @@\n+\n@@ -868,1 +838,1 @@\n-        boolean hasFocus = GTKLookAndFeel.is3() &&\n+        boolean hasFocus =\n@@ -968,4 +938,0 @@\n-        Region id = context.getRegion();\n-        int state = context.getComponentState();\n-        int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n-            SynthConstants.ENABLED : SynthConstants.PRESSED);\n@@ -973,1 +939,6 @@\n-        int placement = pane.getTabPlacement();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            Region id = context.getRegion();\n+            int state = context.getComponentState();\n+            int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n+                    SynthConstants.ENABLED : SynthConstants.PRESSED);\n+            int placement = pane.getTabPlacement();\n@@ -975,2 +946,2 @@\n-        \/\/ Fill the tab rect area\n-        g.fillRect(x, y, w, h);\n+            \/\/ Fill the tab rect area\n+            g.fillRect(x, y, w, h);\n@@ -978,9 +949,10 @@\n-        synchronized (UNIXToolkit.GTK_LOCK) {\n-            if (! ENGINE.paintCachedImage(g, x, y, w, h,\n-                    id, gtkState, placement, tabIndex)) {\n-                PositionType side = POSITIONS[placement - 1];\n-                ENGINE.startPainting(g, x, y, w, h,\n-                        id, gtkState, placement, tabIndex);\n-                ENGINE.paintExtension(g, context, id, gtkState,\n-                        ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n-                ENGINE.finishPainting();\n+            synchronized (UNIXToolkit.GTK_LOCK) {\n+                if (!ENGINE.paintCachedImage(g, x, y, w, h,\n+                        id, gtkState, placement, tabIndex)) {\n+                    PositionType side = POSITIONS[placement - 1];\n+                    ENGINE.startPainting(g, x, y, w, h,\n+                            id, gtkState, placement, tabIndex);\n+                    ENGINE.paintExtension(g, context, id, gtkState,\n+                            ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n+                    ENGINE.finishPainting();\n+                }\n@@ -1062,4 +1034,2 @@\n-            if (GTKLookAndFeel.is3()) {\n-                ENGINE.paintBackground(g, context, id, gtkState, null,\n-                                                                    x, y, w, h);\n-            }\n+            ENGINE.paintBackground(g, context, id, gtkState, null,\n+                                                                x, y, w, h);\n@@ -1068,9 +1038,0 @@\n-            if (!GTKLookAndFeel.is3()) {\n-                ENGINE.paintFlatBox(g, context, id,\n-                        gtkState, ShadowType.NONE, \"entry_bg\",\n-                        x + xThickness,\n-                        y + yThickness,\n-                        w - (2 * xThickness),\n-                        h - (2 * yThickness),\n-                        ColorType.TEXT_BACKGROUND);\n-            }\n@@ -1087,3 +1048,3 @@\n-                        y += focusSize + (GTKLookAndFeel.is3() ? 3 : 1);\n-                        w -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 1);\n-                        h -= 2 * focusSize + (GTKLookAndFeel.is3() ? 6 : 2);\n+                        y += focusSize + 3;\n+                        w -= 2 * focusSize + 4;\n+                        h -= 2 * focusSize + 6;\n@@ -1091,4 +1052,4 @@\n-                        x += focusSize + (GTKLookAndFeel.is3() ? 2 : 0);\n-                        y += focusSize + (GTKLookAndFeel.is3() ? 2 :0 );\n-                        w -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 0);\n-                        h -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 0);\n+                        x += focusSize + 2;\n+                        y += focusSize + 2;\n+                        w -= 2 * focusSize + 4;\n+                        h -= 2 * focusSize + 4;\n@@ -1440,5 +1401,0 @@\n-        if (!GTKLookAndFeel.is3()) {\n-            x += 3;\n-            y += 3;\n-            w = h = 7;\n-        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKPainter.java","additions":44,"deletions":88,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -754,8 +754,1 @@\n-        if (!GTKLookAndFeel.is3()) {\n-            if (region == Region.FORMATTED_TEXT_FIELD ||\n-                  region == Region.PASSWORD_FIELD ||\n-                  region == Region.SPINNER ||\n-                  region == Region.TEXT_FIELD) {\n-                return true;\n-            }\n-        }\n+\n@@ -887,1 +880,1 @@\n-        } else if (GTKLookAndFeel.is3() && \"ComboBox.forceOpaque\".equals(key)) {\n+        } else if (\"ComboBox.forceOpaque\".equals(key)) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKStyle.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -886,0 +886,5 @@\n+        if (parentComponent != null) {\n+            parentComponent.revalidate();\n+            parentComponent.repaint();\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JOptionPane.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2101,18 +2101,21 @@\n-        if (orientation == JTabbedPane.LEFT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.scale(-1, 1);\n-            transform.rotate(Math.toRadians(90));\n-            paintBackground(context, g, y, x, h, w, transform);\n-        } else if (orientation == JTabbedPane.RIGHT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.rotate(Math.toRadians(90));\n-            transform.translate(0, -(x + w));\n-            paintBackground(context, g, y, 0, h, w, transform);\n-        } else if (orientation == JTabbedPane.BOTTOM) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.translate(x,y);\n-            transform.scale(1, -1);\n-            transform.translate(0,-h);\n-            paintBackground(context, g, 0, 0, w, h, transform);\n-        } else {\n-            paintBackground(context, g, x, y, w, h, null);\n+        JTabbedPane pane = (JTabbedPane)context.getComponent();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            if (orientation == JTabbedPane.LEFT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.scale(-1, 1);\n+                transform.rotate(Math.toRadians(90));\n+                paintBackground(context, g, y, x, h, w, transform);\n+            } else if (orientation == JTabbedPane.RIGHT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.rotate(Math.toRadians(90));\n+                transform.translate(0, -(x + w));\n+                paintBackground(context, g, y, 0, h, w, transform);\n+            } else if (orientation == JTabbedPane.BOTTOM) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.translate(x, y);\n+                transform.scale(1, -1);\n+                transform.translate(0, -h);\n+                paintBackground(context, g, 0, 0, w, h, transform);\n+            } else {\n+                paintBackground(context, g, x, y, w, h, null);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/SynthPainterImpl.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -130,1 +130,0 @@\n-    private boolean tabsOpaque = true;\n@@ -159,1 +158,0 @@\n-        tabsOpaque = UIManager.getBoolean(\"TabbedPane.tabsOpaque\");\n@@ -658,4 +656,2 @@\n-        if (tabsOpaque || tabPane.isOpaque()) {\n-            tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n-                    x, y, width, height, tabIndex, placement);\n-        }\n+        tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n+                x, y, width, height, tabIndex, placement);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTabbedPaneUI.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -727,1 +727,1 @@\n-     * @param a The set of attributes to be represented in the\n+     * @param a The set of attributes to be represented in\n@@ -743,1 +743,1 @@\n-     * @param a The set of attributes to be represented in the\n+     * @param a The set of attributes to be represented in\n@@ -2176,1 +2176,1 @@\n-         * If this attributes is not defined, then\n+         * If this attributes is not defined,\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2477,5 +2477,1 @@\n-    \/**\n-     * Returns true is a print job is ongoing but will\n-     * be cancelled and the next opportunity. false is\n-     * returned otherwise.\n-     *\/\n+    @Override\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,5 +73,0 @@\n-    private static final String GTK2_DEPRECATION_MESSAGE =\n-            \"WARNING: the GTK 2 library is deprecated and \" +\n-                    \"its support will be removed in a future release\";\n-    private static volatile boolean gtk2WarningIssued = false;\n-\n@@ -81,1 +76,0 @@\n-        GTK2(Constants.GTK2_MAJOR_NUMBER),\n@@ -85,1 +79,0 @@\n-            static final int GTK2_MAJOR_NUMBER = 2;\n@@ -97,2 +90,0 @@\n-                case Constants.GTK2_MAJOR_NUMBER:\n-                    return GTK2;\n@@ -501,9 +492,1 @@\n-        if (version == null) {\n-            return GtkVersions.ANY;\n-        } else if (version.startsWith(\"2\")) {\n-            if (!gtk2WarningIssued) {\n-                System.err.println(GTK2_DEPRECATION_MESSAGE);\n-                gtk2WarningIssued = true;\n-            }\n-            return GtkVersions.GTK2;\n-        } else if(\"3\".equals(version) ){\n+        if (\"3\".equals(version)) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,0 +365,3 @@\n+                AffineTransform af = g2.getTransform();\n+                double scaleX = af.getScaleX();\n+                double scaleY = af.getScaleY();\n@@ -369,2 +372,2 @@\n-                AffineTransform af = g2.getTransform();\n-                g2.setTransform(AffineTransform.getTranslateInstance(rx,ry));\n+                g2.setTransform(AffineTransform.getTranslateInstance(rx * scaleX, ry * scaleY));\n+                g2.scale(scaleX, scaleY);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XCheckboxPeer.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -63,1 +63,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -69,0 +68,2 @@\n+            \".java\/robot\/screencast-tokens.properties\";\n+    private static final String REL_NAME_SECONDARY =\n@@ -75,0 +76,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -76,6 +78,3 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            @Override\n-            public Void run() {\n-                runnable.run();\n-                return null;\n-            }\n+        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+            runnable.run();\n+            return null;\n@@ -86,6 +85,5 @@\n-        PROPS_PATH = AccessController.doPrivileged(new PrivilegedAction<Path>() {\n-            @Override\n-            public Path run() {\n-                return setupPath();\n-            }\n-        });\n+        @SuppressWarnings(\"removal\")\n+        Path propsPath = AccessController\n+                .doPrivileged((PrivilegedAction<Path>) () -> setupPath());\n+\n+        PROPS_PATH = propsPath;\n@@ -113,0 +111,5 @@\n+        Path secondaryPath = Path.of(userHome, REL_NAME_SECONDARY);\n+\n+        boolean copyFromSecondary = !Files.isWritable(path)\n+                && Files.isWritable(secondaryPath);\n+\n@@ -115,7 +118,10 @@\n-        if (!Files.exists(workdir)) {\n-            try {\n-                Files.createDirectories(workdir);\n-            } catch (Exception e) {\n-                if (SCREENCAST_DEBUG) {\n-                    System.err.printf(\"Token storage: cannot create\" +\n-                                    \" directory %s %s\\n\", workdir, e);\n+        if (!Files.isWritable(path)) {\n+            if (!Files.exists(workdir)) {\n+                try {\n+                    Files.createDirectories(workdir);\n+                } catch (Exception e) {\n+                    if (SCREENCAST_DEBUG) {\n+                        System.err.printf(\"Token storage: cannot create\" +\n+                                \" directory %s %s\\n\", workdir, e);\n+                    }\n+                    return null;\n@@ -123,1 +129,0 @@\n-                return null;\n@@ -125,1 +130,0 @@\n-        }\n@@ -127,3 +131,5 @@\n-        if (!Files.isWritable(workdir)) {\n-            if (SCREENCAST_DEBUG) {\n-                System.err.printf(\"Token storage: %s is not writable\\n\", workdir);\n+            if (!Files.isWritable(workdir)) {\n+                if (SCREENCAST_DEBUG) {\n+                    System.err.printf(\"Token storage: %s is not writable\\n\", workdir);\n+                }\n+                return null;\n@@ -131,1 +137,0 @@\n-            return null;\n@@ -148,1 +153,11 @@\n-        if (Files.exists(path)) {\n+        if (copyFromSecondary) {\n+            if (SCREENCAST_DEBUG) {\n+                System.out.println(\"Token storage: copying from the secondary location \"\n+                                        + secondaryPath);\n+            }\n+            synchronized (PROPS) {\n+                if (readTokens(secondaryPath)) {\n+                    store(path, \"copy from the secondary location\");\n+                }\n+            }\n+        } else if (Files.exists(path)) {\n@@ -305,1 +320,1 @@\n-                doPrivilegedRunnable(() -> store(\"save tokens\"));\n+                doPrivilegedRunnable(() -> store(PROPS_PATH, \"save tokens\"));\n@@ -318,1 +333,1 @@\n-        } catch (IOException e) {\n+        } catch (IOException | IllegalArgumentException e) {\n@@ -413,1 +428,1 @@\n-        if (!isWritable()\n+        if (!isWritable(PROPS_PATH)\n@@ -427,1 +442,1 @@\n-            store(\"remove malformed records\");\n+            store(PROPS_PATH, \"remove malformed records\");\n@@ -431,2 +446,2 @@\n-    private static void store(String failMsg) {\n-        if (!isWritable()) {\n+    private static void store(Path path, String failMsg) {\n+        if (!isWritable(path)) {\n@@ -437,1 +452,1 @@\n-            try (BufferedWriter writer = Files.newBufferedWriter(PROPS_PATH)) {\n+            try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n@@ -448,3 +463,3 @@\n-    private static boolean isWritable() {\n-        if (PROPS_PATH == null\n-            || (Files.exists(PROPS_PATH) && !Files.isWritable(PROPS_PATH))) {\n+    private static boolean isWritable(Path path) {\n+        if (path == null\n+            || (Files.exists(path) && !Files.isWritable(path))) {\n@@ -454,1 +469,1 @@\n-                        \"Token storage: %s is not writable\\n\", PROPS_PATH);\n+                        \"Token storage: %s is not writable\\n\", path);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":53,"deletions":38,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -1,2603 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef HEADLESS\n-    #error This file should not be included in headless library\n-#endif\n-\n-#include <dlfcn.h>\n-#include <setjmp.h>\n-#include <X11\/Xlib.h>\n-#include <limits.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include \"gtk2_interface.h\"\n-#include \"java_awt_Transparency.h\"\n-#include \"jvm_md.h\"\n-#include \"sizecalc.h\"\n-#include <jni_util.h>\n-#include \"awt.h\"\n-\n-#define GTK_TYPE_BORDER                 ((*fp_gtk_border_get_type)())\n-\n-#define G_TYPE_FUNDAMENTAL_SHIFT        (2)\n-#define G_TYPE_MAKE_FUNDAMENTAL(x)      ((GType) ((x) << G_TYPE_FUNDAMENTAL_SHIFT))\n-\n-#define CONV_BUFFER_SIZE 128\n-\n-#define NO_SYMBOL_EXCEPTION 1\n-\n-static void *gtk2_libhandle = NULL;\n-static void *gthread_libhandle = NULL;\n-\n-static jmp_buf j;\n-\n-\/* Widgets *\/\n-static GtkWidget *gtk2_widget = NULL;\n-static GtkWidget *gtk2_window = NULL;\n-static GtkFixed  *gtk2_fixed  = NULL;\n-\n-\/* Paint system *\/\n-static GdkPixmap *gtk2_white_pixmap = NULL;\n-static GdkPixmap *gtk2_black_pixmap = NULL;\n-static GdkPixbuf *gtk2_white_pixbuf = NULL;\n-static GdkPixbuf *gtk2_black_pixbuf = NULL;\n-static int gtk2_pixbuf_width = 0;\n-static int gtk2_pixbuf_height = 0;\n-\n-\/* Static buffer for conversion from java.lang.String to UTF-8 *\/\n-static char convertionBuffer[CONV_BUFFER_SIZE];\n-\n-static gboolean new_combo = TRUE;\n-const char ENV_PREFIX[] = \"GTK_MODULES=\";\n-\n-\n-static GtkWidget *gtk2_widgets[_GTK_WIDGET_TYPE_SIZE];\n-\n-\/*************************\n- * Glib function pointers\n- *************************\/\n-\n-static gboolean (*fp_g_main_context_iteration)(GMainContext *context,\n-                                             gboolean may_block);\n-\n-static GValue*      (*fp_g_value_init)(GValue *value, GType g_type);\n-static gboolean     (*fp_g_type_is_a)(GType type, GType is_a_type);\n-static gboolean     (*fp_g_value_get_boolean)(const GValue *value);\n-static gchar        (*fp_g_value_get_char)(const GValue *value);\n-static guchar       (*fp_g_value_get_uchar)(const GValue *value);\n-static gint         (*fp_g_value_get_int)(const GValue *value);\n-static guint        (*fp_g_value_get_uint)(const GValue *value);\n-static glong        (*fp_g_value_get_long)(const GValue *value);\n-static gulong       (*fp_g_value_get_ulong)(const GValue *value);\n-static gint64       (*fp_g_value_get_int64)(const GValue *value);\n-static guint64      (*fp_g_value_get_uint64)(const GValue *value);\n-static gfloat       (*fp_g_value_get_float)(const GValue *value);\n-static gdouble      (*fp_g_value_get_double)(const GValue *value);\n-static const gchar* (*fp_g_value_get_string)(const GValue *value);\n-static gint         (*fp_g_value_get_enum)(const GValue *value);\n-static guint        (*fp_g_value_get_flags)(const GValue *value);\n-static GParamSpec*  (*fp_g_value_get_param)(const GValue *value);\n-static gpointer*    (*fp_g_value_get_boxed)(const GValue *value);\n-static gpointer*    (*fp_g_value_get_pointer)(const GValue *value);\n-static GObject*     (*fp_g_value_get_object)(const GValue *value);\n-static GParamSpec*  (*fp_g_param_spec_int)(const gchar *name,\n-        const gchar *nick, const gchar *blurb,\n-        gint minimum, gint maximum, gint default_value,\n-        GParamFlags flags);\n-static void         (*fp_g_object_get)(gpointer object,\n-                                       const gchar* fpn, ...);\n-static void         (*fp_g_object_set)(gpointer object,\n-                                       const gchar *first_property_name,\n-                                       ...);\n-\/************************\n- * GDK function pointers\n- ************************\/\n-static GdkPixmap *(*fp_gdk_pixmap_new)(GdkDrawable *drawable,\n-        gint width, gint height, gint depth);\n-static GdkGC *(*fp_gdk_gc_new)(GdkDrawable*);\n-static void (*fp_gdk_rgb_gc_set_foreground)(GdkGC*, guint32);\n-static void (*fp_gdk_draw_rectangle)(GdkDrawable*, GdkGC*, gboolean,\n-        gint, gint, gint, gint);\n-static GdkPixbuf *(*fp_gdk_pixbuf_new)(GdkColorspace colorspace,\n-        gboolean has_alpha, int bits_per_sample, int width, int height);\n-static void (*fp_gdk_drawable_get_size)(GdkDrawable *drawable,\n-        gint* width, gint* height);\n-\n-\/************************\n- * Gtk function pointers\n- ************************\/\n-static gboolean (*fp_gtk_init_check)(int* argc, char** argv);\n-\n-\/* Painting *\/\n-static void (*fp_gtk_paint_hline)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x1, gint x2, gint y);\n-static void (*fp_gtk_paint_vline)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint y1, gint y2, gint x);\n-static void (*fp_gtk_paint_shadow)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_arrow)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        GtkArrowType arrow_type, gboolean fill, gint x, gint y,\n-        gint width, gint height);\n-static void (*fp_gtk_paint_box)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_flat_box)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_check)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_option)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_box_gap)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkPositionType gap_side, gint gap_x, gint gap_width);\n-static void (*fp_gtk_paint_extension)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkPositionType gap_side);\n-static void (*fp_gtk_paint_focus)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_slider)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation);\n-static void (*fp_gtk_paint_handle)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation);\n-static void (*fp_gtk_paint_expander)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x, gint y, GtkExpanderStyle expander_style);\n-static void (*fp_gtk_style_apply_default_background)(GtkStyle* style,\n-        GdkWindow* window, gboolean set_bg, GtkStateType state_type,\n-        GdkRectangle* area, gint x, gint y, gint width, gint height);\n-\n-\/* Widget creation *\/\n-static GtkWidget* (*fp_gtk_arrow_new)(GtkArrowType arrow_type,\n-                                      GtkShadowType shadow_type);\n-static GtkWidget* (*fp_gtk_button_new)();\n-static GtkWidget* (*fp_gtk_check_button_new)();\n-static GtkWidget* (*fp_gtk_check_menu_item_new)();\n-static GtkWidget* (*fp_gtk_color_selection_dialog_new)(const gchar* title);\n-static GtkWidget* (*fp_gtk_combo_box_new)();\n-static GtkWidget* (*fp_gtk_combo_box_entry_new)();\n-static GtkWidget* (*fp_gtk_entry_new)();\n-static GtkWidget* (*fp_gtk_fixed_new)();\n-static GtkWidget* (*fp_gtk_handle_box_new)();\n-static GtkWidget* (*fp_gtk_hpaned_new)();\n-static GtkWidget* (*fp_gtk_vpaned_new)();\n-static GtkWidget* (*fp_gtk_hscale_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_vscale_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_hscrollbar_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_vscrollbar_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_hseparator_new)();\n-static GtkWidget* (*fp_gtk_vseparator_new)();\n-static GtkWidget* (*fp_gtk_image_new)();\n-static GtkWidget* (*fp_gtk_label_new)(const gchar* str);\n-static GtkWidget* (*fp_gtk_menu_new)();\n-static GtkWidget* (*fp_gtk_menu_bar_new)();\n-static GtkWidget* (*fp_gtk_menu_item_new)();\n-static GtkWidget* (*fp_gtk_notebook_new)();\n-static GtkWidget* (*fp_gtk_progress_bar_new)();\n-static GtkWidget* (*fp_gtk_progress_bar_set_orientation)(\n-        GtkProgressBar *pbar,\n-        GtkProgressBarOrientation orientation);\n-static GtkWidget* (*fp_gtk_radio_button_new)(GSList *group);\n-static GtkWidget* (*fp_gtk_radio_menu_item_new)(GSList *group);\n-static GtkWidget* (*fp_gtk_scrolled_window_new)(GtkAdjustment *hadjustment,\n-        GtkAdjustment *vadjustment);\n-static GtkWidget* (*fp_gtk_separator_menu_item_new)();\n-static GtkWidget* (*fp_gtk_separator_tool_item_new)();\n-static GtkWidget* (*fp_gtk_text_view_new)();\n-static GtkWidget* (*fp_gtk_toggle_button_new)();\n-static GtkWidget* (*fp_gtk_toolbar_new)();\n-static GtkWidget* (*fp_gtk_tree_view_new)();\n-static GtkWidget* (*fp_gtk_viewport_new)(GtkAdjustment *hadjustment,\n-        GtkAdjustment *vadjustment);\n-static GtkWidget* (*fp_gtk_window_new)(GtkWindowType type);\n-static GtkWidget* (*fp_gtk_dialog_new)();\n-static GtkWidget* (*fp_gtk_spin_button_new)(GtkAdjustment *adjustment,\n-        gdouble climb_rate, guint digits);\n-static GtkWidget* (*fp_gtk_frame_new)(const gchar *label);\n-\n-\/* Other widget operations *\/\n-static GtkObject* (*fp_gtk_adjustment_new)(gdouble value,\n-        gdouble lower, gdouble upper, gdouble step_increment,\n-        gdouble page_increment, gdouble page_size);\n-static void (*fp_gtk_container_add)(GtkContainer *window, GtkWidget *widget);\n-static void (*fp_gtk_menu_shell_append)(GtkMenuShell *menu_shell,\n-        GtkWidget *child);\n-static void (*fp_gtk_menu_item_set_submenu)(GtkMenuItem *menu_item,\n-        GtkWidget *submenu);\n-static void (*fp_gtk_widget_realize)(GtkWidget *widget);\n-static GdkPixbuf* (*fp_gtk_widget_render_icon)(GtkWidget *widget,\n-        const gchar *stock_id, GtkIconSize size, const gchar *detail);\n-static void (*fp_gtk_widget_set_name)(GtkWidget *widget, const gchar *name);\n-static void (*fp_gtk_widget_set_parent)(GtkWidget *widget, GtkWidget *parent);\n-static void (*fp_gtk_widget_set_direction)(GtkWidget *widget,\n-        GtkTextDirection direction);\n-static void (*fp_gtk_widget_style_get)(GtkWidget *widget,\n-        const gchar *first_property_name, ...);\n-static void (*fp_gtk_widget_class_install_style_property)(\n-        GtkWidgetClass* class, GParamSpec *pspec);\n-static GParamSpec* (*fp_gtk_widget_class_find_style_property)(\n-        GtkWidgetClass* class, const gchar* property_name);\n-static void (*fp_gtk_widget_style_get_property)(GtkWidget* widget,\n-        const gchar* property_name, GValue* value);\n-static char* (*fp_pango_font_description_to_string)(\n-        const PangoFontDescription* fd);\n-static GtkSettings* (*fp_gtk_settings_get_default)();\n-static GtkSettings* (*fp_gtk_widget_get_settings)(GtkWidget *widget);\n-static GType        (*fp_gtk_border_get_type)();\n-static void (*fp_gtk_arrow_set)(GtkWidget* arrow,\n-                                GtkArrowType arrow_type,\n-                                GtkShadowType shadow_type);\n-static void (*fp_gtk_widget_size_request)(GtkWidget *widget,\n-                                          GtkRequisition *requisition);\n-static GtkAdjustment* (*fp_gtk_range_get_adjustment)(GtkRange* range);\n-\n-\/* Method bodies *\/\n-\n-static void throw_exception(JNIEnv *env, const char* name, const char* message)\n-{\n-    jclass class = (*env)->FindClass(env, name);\n-\n-    if (class != NULL)\n-        (*env)->ThrowNew(env, class, message);\n-\n-    (*env)->DeleteLocalRef(env, class);\n-}\n-\n-\/* This is a workaround for the bug:\n- * http:\/\/sourceware.org\/bugzilla\/show_bug.cgi?id=1814\n- * (dlsym\/dlopen clears dlerror state)\n- * This bug is specific to Linux, but there is no harm in\n- * applying this workaround on Solaris as well.\n- *\/\n-static void* dl_symbol(const char* name)\n-{\n-    void* result = dlsym(gtk2_libhandle, name);\n-    if (!result)\n-        longjmp(j, NO_SYMBOL_EXCEPTION);\n-\n-    return result;\n-}\n-\n-static void* dl_symbol_gthread(const char* name)\n-{\n-    void* result = dlsym(gthread_libhandle, name);\n-    if (!result)\n-        longjmp(j, NO_SYMBOL_EXCEPTION);\n-\n-    return result;\n-}\n-\n-gboolean gtk2_check(const char* lib_name, gboolean load)\n-{\n-    if (gtk2_libhandle != NULL) {\n-        \/* We've already successfully opened the GTK libs, so return true. *\/\n-        return TRUE;\n-    } else {\n-        void *lib = NULL;\n-\n-#ifdef RTLD_NOLOAD\n-        \/* Just check if gtk libs are already in the process space *\/\n-        lib = dlopen(lib_name, RTLD_LAZY | RTLD_NOLOAD);\n-        if (!load || lib != NULL) {\n-            return lib != NULL;\n-        }\n-#else\n-#ifdef _AIX\n-        \/* On AIX we could implement this with the help of loadquery(L_GETINFO, ..)  *\/\n-        \/* (see reload_table() in hotspot\/src\/os\/aix\/vm\/loadlib_aix.cpp) but it is   *\/\n-        \/* probably not worth it because most AIX servers don't have GTK libs anyway *\/\n-#endif\n-#endif\n-\n-        lib = dlopen(lib_name, RTLD_LAZY | RTLD_LOCAL);\n-        if (lib == NULL) {\n-            return FALSE;\n-        }\n-\n-        fp_gtk_check_version = dlsym(lib, \"gtk_check_version\");\n-        \/* Check for GTK 2.2+ *\/\n-        if (!fp_gtk_check_version(2, 2, 0)) {\n-            return TRUE;\n-        }\n-\n-        \/\/ 8048289: workaround for https:\/\/bugzilla.gnome.org\/show_bug.cgi?id=733065\n-        \/\/ dlclose(lib);\n-\n-        return FALSE;\n-    }\n-}\n-\n-#define ADD_SUPPORTED_ACTION(actionStr) \\\n-do { \\\n-    jfieldID fld_action = (*env)->GetStaticFieldID(env, cls_action, actionStr, \"Ljava\/awt\/Desktop$Action;\"); \\\n-    if (!(*env)->ExceptionCheck(env)) { \\\n-        jobject action = (*env)->GetStaticObjectField(env, cls_action, fld_action); \\\n-        (*env)->CallBooleanMethod(env, supportedActions, mid_arrayListAdd, action); \\\n-    } else { \\\n-        (*env)->ExceptionClear(env); \\\n-    } \\\n-} while(0);\n-\n-\n-static void update_supported_actions(JNIEnv *env) {\n-    GVfs * (*fp_g_vfs_get_default) (void);\n-    const gchar * const * (*fp_g_vfs_get_supported_uri_schemes) (GVfs * vfs);\n-    const gchar * const * schemes = NULL;\n-\n-    jclass cls_action = (*env)->FindClass(env, \"java\/awt\/Desktop$Action\");\n-    CHECK_NULL(cls_action);\n-    jclass cls_xDesktopPeer = (*env)->FindClass(env, \"sun\/awt\/X11\/XDesktopPeer\");\n-    CHECK_NULL(cls_xDesktopPeer);\n-    jfieldID fld_supportedActions = (*env)->GetStaticFieldID(env, cls_xDesktopPeer, \"supportedActions\", \"Ljava\/util\/List;\");\n-    CHECK_NULL(fld_supportedActions);\n-    jobject supportedActions = (*env)->GetStaticObjectField(env, cls_xDesktopPeer, fld_supportedActions);\n-\n-    jclass cls_arrayList = (*env)->FindClass(env, \"java\/util\/ArrayList\");\n-    CHECK_NULL(cls_arrayList);\n-    jmethodID mid_arrayListAdd = (*env)->GetMethodID(env, cls_arrayList, \"add\", \"(Ljava\/lang\/Object;)Z\");\n-    CHECK_NULL(mid_arrayListAdd);\n-    jmethodID mid_arrayListClear = (*env)->GetMethodID(env, cls_arrayList, \"clear\", \"()V\");\n-    CHECK_NULL(mid_arrayListClear);\n-\n-    (*env)->CallVoidMethod(env, supportedActions, mid_arrayListClear);\n-\n-    ADD_SUPPORTED_ACTION(\"OPEN\");\n-\n-    \/**\n-     * gtk_show_uri() documentation says:\n-     *\n-     * > you need to install gvfs to get support for uri schemes such as http:\/\/\n-     * > or ftp:\/\/, as only local files are handled by GIO itself.\n-     *\n-     * So OPEN action was safely added here.\n-     * However, it looks like Solaris 11 have gvfs support only for 32-bit\n-     * applications only by default.\n-     *\/\n-\n-    fp_g_vfs_get_default = dl_symbol(\"g_vfs_get_default\");\n-    fp_g_vfs_get_supported_uri_schemes = dl_symbol(\"g_vfs_get_supported_uri_schemes\");\n-    dlerror();\n-\n-    if (fp_g_vfs_get_default && fp_g_vfs_get_supported_uri_schemes) {\n-        GVfs * vfs = fp_g_vfs_get_default();\n-        schemes = vfs ? fp_g_vfs_get_supported_uri_schemes(vfs) : NULL;\n-        if (schemes) {\n-            int i = 0;\n-            while (schemes[i]) {\n-                if (strcmp(schemes[i], \"http\") == 0) {\n-                    ADD_SUPPORTED_ACTION(\"BROWSE\");\n-                    ADD_SUPPORTED_ACTION(\"MAIL\");\n-                    break;\n-                }\n-                i++;\n-            }\n-        }\n-    } else {\n-#ifdef DEBUG\n-        fprintf(stderr, \"Cannot load g_vfs_get_supported_uri_schemes\\n\");\n-#endif \/* DEBUG *\/\n-    }\n-\n-}\n-\/**\n- * Functions for awt_Desktop.c\n- *\/\n-static gboolean gtk2_show_uri_load(JNIEnv *env) {\n-     gboolean success = FALSE;\n-     dlerror();\n-     const char *gtk_version = fp_gtk_check_version(2, 14, 0);\n-     if (gtk_version != NULL) {\n-         \/\/ The gtk_show_uri is available from GTK+ 2.14\n-#ifdef DEBUG\n-         fprintf (stderr, \"The version of GTK is %s. \"\n-             \"The gtk_show_uri function is supported \"\n-             \"since GTK+ 2.14.\\n\", gtk_version);\n-#endif \/* DEBUG *\/\n-     } else {\n-         \/\/ Loading symbols only if the GTK version is 2.14 and higher\n-         fp_gtk_show_uri = dl_symbol(\"gtk_show_uri\");\n-         const char *dlsym_error = dlerror();\n-         if (dlsym_error) {\n-#ifdef DEBUG\n-             fprintf (stderr, \"Cannot load symbol: %s \\n\", dlsym_error);\n-#endif \/* DEBUG *\/\n-         } else if (fp_gtk_show_uri == NULL) {\n-#ifdef DEBUG\n-             fprintf(stderr, \"dlsym(gtk_show_uri) returned NULL\\n\");\n-#endif \/* DEBUG *\/\n-        } else {\n-            gtk->gtk_show_uri = fp_gtk_show_uri;\n-            update_supported_actions(env);\n-            success = TRUE;\n-        }\n-     }\n-     return success;\n-}\n-\n-\/**\n- * Functions for sun_awt_X11_GtkFileDialogPeer.c\n- *\/\n-static void gtk2_file_chooser_load()\n-{\n-    fp_gtk_file_chooser_get_filename = dl_symbol(\n-            \"gtk_file_chooser_get_filename\");\n-    fp_gtk_file_chooser_dialog_new = dl_symbol(\"gtk_file_chooser_dialog_new\");\n-    fp_gtk_file_chooser_set_current_folder = dl_symbol(\n-            \"gtk_file_chooser_set_current_folder\");\n-    fp_gtk_file_chooser_set_filename = dl_symbol(\n-            \"gtk_file_chooser_set_filename\");\n-    fp_gtk_file_chooser_set_current_name = dl_symbol(\n-            \"gtk_file_chooser_set_current_name\");\n-    fp_gtk_file_filter_add_custom = dl_symbol(\"gtk_file_filter_add_custom\");\n-    fp_gtk_file_chooser_set_filter = dl_symbol(\"gtk_file_chooser_set_filter\");\n-    fp_gtk_file_chooser_get_type = dl_symbol(\"gtk_file_chooser_get_type\");\n-    fp_gtk_file_filter_new = dl_symbol(\"gtk_file_filter_new\");\n-    if (fp_gtk_check_version(2, 8, 0) == NULL) {\n-        fp_gtk_file_chooser_set_do_overwrite_confirmation = dl_symbol(\n-                \"gtk_file_chooser_set_do_overwrite_confirmation\");\n-    }\n-    fp_gtk_file_chooser_set_select_multiple = dl_symbol(\n-            \"gtk_file_chooser_set_select_multiple\");\n-    fp_gtk_file_chooser_get_current_folder = dl_symbol(\n-            \"gtk_file_chooser_get_current_folder\");\n-    fp_gtk_file_chooser_get_filenames = dl_symbol(\n-            \"gtk_file_chooser_get_filenames\");\n-    fp_gtk_g_slist_length = dl_symbol(\"g_slist_length\");\n-    fp_gdk_x11_drawable_get_xid = dl_symbol(\"gdk_x11_drawable_get_xid\");\n-}\n-\n-GtkApi* gtk2_load(JNIEnv *env, const char* lib_name)\n-{\n-    gboolean result;\n-    int i;\n-    int (*handler)();\n-    int (*io_handler)();\n-    char *gtk_modules_env;\n-\n-    gtk2_libhandle = dlopen(lib_name, RTLD_LAZY | RTLD_LOCAL);\n-    if (gtk2_libhandle == NULL) {\n-        return FALSE;\n-    }\n-\n-    gthread_libhandle = dlopen(GTHREAD_LIB_VERSIONED, RTLD_LAZY | RTLD_LOCAL);\n-    if (gthread_libhandle == NULL) {\n-        gthread_libhandle = dlopen(GTHREAD_LIB, RTLD_LAZY | RTLD_LOCAL);\n-        if (gthread_libhandle == NULL)\n-            return FALSE;\n-    }\n-\n-    if (setjmp(j) == 0)\n-    {\n-        fp_gtk_check_version = dl_symbol(\"gtk_check_version\");\n-        \/* Check for GTK 2.2+ *\/\n-        if (fp_gtk_check_version(2, 2, 0)) {\n-            longjmp(j, NO_SYMBOL_EXCEPTION);\n-        }\n-\n-        \/* GLib *\/\n-        fp_glib_check_version = dlsym(gtk2_libhandle, \"glib_check_version\");\n-        if (!fp_glib_check_version) {\n-            dlerror();\n-        }\n-        fp_g_free = dl_symbol(\"g_free\");\n-        fp_g_object_unref = dl_symbol(\"g_object_unref\");\n-\n-        fp_g_main_context_iteration =\n-            dl_symbol(\"g_main_context_iteration\");\n-\n-        fp_g_value_init = dl_symbol(\"g_value_init\");\n-        fp_g_type_is_a = dl_symbol(\"g_type_is_a\");\n-\n-        fp_g_value_get_boolean = dl_symbol(\"g_value_get_boolean\");\n-        fp_g_value_get_char = dl_symbol(\"g_value_get_char\");\n-        fp_g_value_get_uchar = dl_symbol(\"g_value_get_uchar\");\n-        fp_g_value_get_int = dl_symbol(\"g_value_get_int\");\n-        fp_g_value_get_uint = dl_symbol(\"g_value_get_uint\");\n-        fp_g_value_get_long = dl_symbol(\"g_value_get_long\");\n-        fp_g_value_get_ulong = dl_symbol(\"g_value_get_ulong\");\n-        fp_g_value_get_int64 = dl_symbol(\"g_value_get_int64\");\n-        fp_g_value_get_uint64 = dl_symbol(\"g_value_get_uint64\");\n-        fp_g_value_get_float = dl_symbol(\"g_value_get_float\");\n-        fp_g_value_get_double = dl_symbol(\"g_value_get_double\");\n-        fp_g_value_get_string = dl_symbol(\"g_value_get_string\");\n-        fp_g_value_get_enum = dl_symbol(\"g_value_get_enum\");\n-        fp_g_value_get_flags = dl_symbol(\"g_value_get_flags\");\n-        fp_g_value_get_param = dl_symbol(\"g_value_get_param\");\n-        fp_g_value_get_boxed = dl_symbol(\"g_value_get_boxed\");\n-        fp_g_value_get_pointer = dl_symbol(\"g_value_get_pointer\");\n-        fp_g_value_get_object = dl_symbol(\"g_value_get_object\");\n-        fp_g_param_spec_int = dl_symbol(\"g_param_spec_int\");\n-        fp_g_object_get = dl_symbol(\"g_object_get\");\n-        fp_g_object_set = dl_symbol(\"g_object_set\");\n-\n-        \/* GDK *\/\n-        fp_gdk_get_default_root_window =\n-            dl_symbol(\"gdk_get_default_root_window\");\n-        fp_gdk_pixmap_new = dl_symbol(\"gdk_pixmap_new\");\n-        fp_gdk_pixbuf_get_from_drawable =\n-            dl_symbol(\"gdk_pixbuf_get_from_drawable\");\n-        fp_gdk_pixbuf_scale_simple =\n-            dl_symbol(\"gdk_pixbuf_scale_simple\");\n-        fp_gdk_gc_new = dl_symbol(\"gdk_gc_new\");\n-        fp_gdk_rgb_gc_set_foreground =\n-            dl_symbol(\"gdk_rgb_gc_set_foreground\");\n-        fp_gdk_draw_rectangle = dl_symbol(\"gdk_draw_rectangle\");\n-        fp_gdk_drawable_get_size = dl_symbol(\"gdk_drawable_get_size\");\n-\n-        \/* Pixbuf *\/\n-        fp_gdk_pixbuf_new = dl_symbol(\"gdk_pixbuf_new\");\n-        fp_gdk_pixbuf_new_from_file =\n-                dl_symbol(\"gdk_pixbuf_new_from_file\");\n-        fp_gdk_pixbuf_get_width = dl_symbol(\"gdk_pixbuf_get_width\");\n-        fp_gdk_pixbuf_get_height = dl_symbol(\"gdk_pixbuf_get_height\");\n-        fp_gdk_pixbuf_get_pixels = dl_symbol(\"gdk_pixbuf_get_pixels\");\n-        fp_gdk_pixbuf_get_rowstride =\n-                dl_symbol(\"gdk_pixbuf_get_rowstride\");\n-        fp_gdk_pixbuf_get_has_alpha =\n-                dl_symbol(\"gdk_pixbuf_get_has_alpha\");\n-        fp_gdk_pixbuf_get_bits_per_sample =\n-                dl_symbol(\"gdk_pixbuf_get_bits_per_sample\");\n-        fp_gdk_pixbuf_get_n_channels =\n-                dl_symbol(\"gdk_pixbuf_get_n_channels\");\n-        fp_gdk_pixbuf_get_colorspace =\n-                dl_symbol(\"gdk_pixbuf_get_colorspace\");\n-\n-        \/* GTK painting *\/\n-        fp_gtk_init_check = dl_symbol(\"gtk_init_check\");\n-        fp_gtk_paint_hline = dl_symbol(\"gtk_paint_hline\");\n-        fp_gtk_paint_vline = dl_symbol(\"gtk_paint_vline\");\n-        fp_gtk_paint_shadow = dl_symbol(\"gtk_paint_shadow\");\n-        fp_gtk_paint_arrow = dl_symbol(\"gtk_paint_arrow\");\n-        fp_gtk_paint_box = dl_symbol(\"gtk_paint_box\");\n-        fp_gtk_paint_flat_box = dl_symbol(\"gtk_paint_flat_box\");\n-        fp_gtk_paint_check = dl_symbol(\"gtk_paint_check\");\n-        fp_gtk_paint_option = dl_symbol(\"gtk_paint_option\");\n-        fp_gtk_paint_box_gap = dl_symbol(\"gtk_paint_box_gap\");\n-        fp_gtk_paint_extension = dl_symbol(\"gtk_paint_extension\");\n-        fp_gtk_paint_focus = dl_symbol(\"gtk_paint_focus\");\n-        fp_gtk_paint_slider = dl_symbol(\"gtk_paint_slider\");\n-        fp_gtk_paint_handle = dl_symbol(\"gtk_paint_handle\");\n-        fp_gtk_paint_expander = dl_symbol(\"gtk_paint_expander\");\n-        fp_gtk_style_apply_default_background =\n-                dl_symbol(\"gtk_style_apply_default_background\");\n-\n-        \/* GTK widgets *\/\n-        fp_gtk_arrow_new = dl_symbol(\"gtk_arrow_new\");\n-        fp_gtk_button_new = dl_symbol(\"gtk_button_new\");\n-        fp_gtk_spin_button_new = dl_symbol(\"gtk_spin_button_new\");\n-        fp_gtk_check_button_new = dl_symbol(\"gtk_check_button_new\");\n-        fp_gtk_check_menu_item_new =\n-                dl_symbol(\"gtk_check_menu_item_new\");\n-        fp_gtk_color_selection_dialog_new =\n-                dl_symbol(\"gtk_color_selection_dialog_new\");\n-        fp_gtk_entry_new = dl_symbol(\"gtk_entry_new\");\n-        fp_gtk_fixed_new = dl_symbol(\"gtk_fixed_new\");\n-        fp_gtk_handle_box_new = dl_symbol(\"gtk_handle_box_new\");\n-        fp_gtk_image_new = dl_symbol(\"gtk_image_new\");\n-        fp_gtk_hpaned_new = dl_symbol(\"gtk_hpaned_new\");\n-        fp_gtk_vpaned_new = dl_symbol(\"gtk_vpaned_new\");\n-        fp_gtk_hscale_new = dl_symbol(\"gtk_hscale_new\");\n-        fp_gtk_vscale_new = dl_symbol(\"gtk_vscale_new\");\n-        fp_gtk_hscrollbar_new = dl_symbol(\"gtk_hscrollbar_new\");\n-        fp_gtk_vscrollbar_new = dl_symbol(\"gtk_vscrollbar_new\");\n-        fp_gtk_hseparator_new = dl_symbol(\"gtk_hseparator_new\");\n-        fp_gtk_vseparator_new = dl_symbol(\"gtk_vseparator_new\");\n-        fp_gtk_label_new = dl_symbol(\"gtk_label_new\");\n-        fp_gtk_menu_new = dl_symbol(\"gtk_menu_new\");\n-        fp_gtk_menu_bar_new = dl_symbol(\"gtk_menu_bar_new\");\n-        fp_gtk_menu_item_new = dl_symbol(\"gtk_menu_item_new\");\n-        fp_gtk_menu_item_set_submenu =\n-                dl_symbol(\"gtk_menu_item_set_submenu\");\n-        fp_gtk_notebook_new = dl_symbol(\"gtk_notebook_new\");\n-        fp_gtk_progress_bar_new =\n-            dl_symbol(\"gtk_progress_bar_new\");\n-        fp_gtk_progress_bar_set_orientation =\n-            dl_symbol(\"gtk_progress_bar_set_orientation\");\n-        fp_gtk_radio_button_new =\n-            dl_symbol(\"gtk_radio_button_new\");\n-        fp_gtk_radio_menu_item_new =\n-            dl_symbol(\"gtk_radio_menu_item_new\");\n-        fp_gtk_scrolled_window_new =\n-            dl_symbol(\"gtk_scrolled_window_new\");\n-        fp_gtk_separator_menu_item_new =\n-            dl_symbol(\"gtk_separator_menu_item_new\");\n-        fp_gtk_text_view_new = dl_symbol(\"gtk_text_view_new\");\n-        fp_gtk_toggle_button_new =\n-            dl_symbol(\"gtk_toggle_button_new\");\n-        fp_gtk_toolbar_new = dl_symbol(\"gtk_toolbar_new\");\n-        fp_gtk_tree_view_new = dl_symbol(\"gtk_tree_view_new\");\n-        fp_gtk_viewport_new = dl_symbol(\"gtk_viewport_new\");\n-        fp_gtk_window_new = dl_symbol(\"gtk_window_new\");\n-        fp_gtk_window_present = dl_symbol(\"gtk_window_present\");\n-        fp_gtk_window_move = dl_symbol(\"gtk_window_move\");\n-        fp_gtk_window_resize = dl_symbol(\"gtk_window_resize\");\n-\n-          fp_gtk_dialog_new = dl_symbol(\"gtk_dialog_new\");\n-        fp_gtk_frame_new = dl_symbol(\"gtk_frame_new\");\n-\n-        fp_gtk_adjustment_new = dl_symbol(\"gtk_adjustment_new\");\n-        fp_gtk_container_add = dl_symbol(\"gtk_container_add\");\n-        fp_gtk_menu_shell_append =\n-            dl_symbol(\"gtk_menu_shell_append\");\n-        fp_gtk_widget_realize = dl_symbol(\"gtk_widget_realize\");\n-        fp_gtk_widget_destroy = dl_symbol(\"gtk_widget_destroy\");\n-        fp_gtk_widget_render_icon =\n-            dl_symbol(\"gtk_widget_render_icon\");\n-        fp_gtk_widget_set_name =\n-            dl_symbol(\"gtk_widget_set_name\");\n-        fp_gtk_widget_set_parent =\n-            dl_symbol(\"gtk_widget_set_parent\");\n-        fp_gtk_widget_set_direction =\n-            dl_symbol(\"gtk_widget_set_direction\");\n-        fp_gtk_widget_style_get =\n-            dl_symbol(\"gtk_widget_style_get\");\n-        fp_gtk_widget_class_install_style_property =\n-            dl_symbol(\"gtk_widget_class_install_style_property\");\n-        fp_gtk_widget_class_find_style_property =\n-            dl_symbol(\"gtk_widget_class_find_style_property\");\n-        fp_gtk_widget_style_get_property =\n-            dl_symbol(\"gtk_widget_style_get_property\");\n-        fp_pango_font_description_to_string =\n-            dl_symbol(\"pango_font_description_to_string\");\n-        fp_gtk_settings_get_default =\n-            dl_symbol(\"gtk_settings_get_default\");\n-        fp_gtk_widget_get_settings =\n-            dl_symbol(\"gtk_widget_get_settings\");\n-        fp_gtk_border_get_type =  dl_symbol(\"gtk_border_get_type\");\n-        fp_gtk_arrow_set = dl_symbol(\"gtk_arrow_set\");\n-        fp_gtk_widget_size_request =\n-            dl_symbol(\"gtk_widget_size_request\");\n-        fp_gtk_range_get_adjustment =\n-            dl_symbol(\"gtk_range_get_adjustment\");\n-\n-        fp_gtk_widget_hide = dl_symbol(\"gtk_widget_hide\");\n-        fp_gtk_main_quit = dl_symbol(\"gtk_main_quit\");\n-        fp_g_signal_connect_data = dl_symbol(\"g_signal_connect_data\");\n-        fp_gtk_widget_show = dl_symbol(\"gtk_widget_show\");\n-        fp_gtk_main = dl_symbol(\"gtk_main\");\n-\n-        fp_g_path_get_dirname = dl_symbol(\"g_path_get_dirname\");\n-\n-        \/**\n-         * GLib thread system\n-         *\/\n-        if (GLIB_CHECK_VERSION(2, 20, 0)) {\n-            fp_g_thread_get_initialized = dl_symbol_gthread(\"g_thread_get_initialized\");\n-        }\n-        fp_g_thread_init = dl_symbol_gthread(\"g_thread_init\");\n-        fp_gdk_threads_init = dl_symbol(\"gdk_threads_init\");\n-        fp_gdk_threads_enter = dl_symbol(\"gdk_threads_enter\");\n-        fp_gdk_threads_leave = dl_symbol(\"gdk_threads_leave\");\n-\n-        \/**\n-         * Functions for sun_awt_X11_GtkFileDialogPeer.c\n-         *\/\n-        if (fp_gtk_check_version(2, 4, 0) == NULL) {\n-            \/\/ The current GtkFileChooser is available from GTK+ 2.4\n-            gtk2_file_chooser_load();\n-        }\n-\n-        \/* Some functions may be missing in pre-2.4 GTK.\n-           We handle them specially here.\n-         *\/\n-        fp_gtk_combo_box_new = dlsym(gtk2_libhandle, \"gtk_combo_box_new\");\n-        if (fp_gtk_combo_box_new == NULL) {\n-            fp_gtk_combo_box_new = dl_symbol(\"gtk_combo_new\");\n-        }\n-\n-        fp_gtk_combo_box_entry_new =\n-            dlsym(gtk2_libhandle, \"gtk_combo_box_entry_new\");\n-        if (fp_gtk_combo_box_entry_new == NULL) {\n-            fp_gtk_combo_box_entry_new = dl_symbol(\"gtk_combo_new\");\n-            new_combo = FALSE;\n-        }\n-\n-        fp_gtk_separator_tool_item_new =\n-            dlsym(gtk2_libhandle, \"gtk_separator_tool_item_new\");\n-        if (fp_gtk_separator_tool_item_new == NULL) {\n-            fp_gtk_separator_tool_item_new =\n-                dl_symbol(\"gtk_vseparator_new\");\n-        }\n-\n-        fp_g_list_append = dl_symbol(\"g_list_append\");\n-        fp_g_list_free = dl_symbol(\"g_list_free\");\n-        fp_g_list_free_full = dl_symbol(\"g_list_free_full\");\n-    }\n-    \/* Now we have only one kind of exceptions: NO_SYMBOL_EXCEPTION\n-     * Otherwise we can check the return value of setjmp method.\n-     *\/\n-    else\n-    {\n-        dlclose(gtk2_libhandle);\n-        gtk2_libhandle = NULL;\n-\n-        dlclose(gthread_libhandle);\n-        gthread_libhandle = NULL;\n-\n-        return FALSE;\n-    }\n-\n-    \/*\n-     * Strip the AT-SPI GTK_MODULES if present\n-     *\/\n-    gtk_modules_env = getenv (\"GTK_MODULES\");\n-    if ((gtk_modules_env && strstr(gtk_modules_env, \"atk-bridge\")) ||\n-        (gtk_modules_env && strstr(gtk_modules_env, \"gail\"))) {\n-        \/* careful, strtok modifies its args *\/\n-        gchar *tmp_env = strdup(gtk_modules_env);\n-        if (tmp_env) {\n-            \/* the new env will be smaller than the old one *\/\n-            gchar *s, *new_env = SAFE_SIZE_STRUCT_ALLOC(malloc,\n-                    sizeof(ENV_PREFIX), 1, strlen (gtk_modules_env));\n-\n-            if (new_env) {\n-                strcpy(new_env, ENV_PREFIX);\n-\n-                \/* strip out 'atk-bridge' and 'gail' *\/\n-                size_t PREFIX_LENGTH = strlen(ENV_PREFIX);\n-                gchar *tmp_ptr = NULL;\n-                for (s = strtok_r(tmp_env, \":\", &tmp_ptr); s;\n-                     s = strtok_r(NULL, \":\", &tmp_ptr)) {\n-                    if ((!strstr(s, \"atk-bridge\")) && (!strstr(s, \"gail\"))) {\n-                        if (strlen(new_env) > PREFIX_LENGTH) {\n-                            new_env = strcat(new_env, \":\");\n-                        }\n-                        new_env = strcat(new_env, s);\n-                    }\n-                }\n-                if (putenv(new_env) != 0) {\n-                    \/* no free() on success, putenv() doesn't copy string *\/\n-                    free(new_env);\n-                }\n-            }\n-            free(tmp_env);\n-        }\n-    }\n-    \/*\n-     * GTK should be initialized with gtk_init_check() before use.\n-     *\n-     * gtk_init_check installs its own error handlers. It is critical that\n-     * we preserve error handler set from AWT. Otherwise we'll crash on\n-     * BadMatch errors which we would normally ignore. The IO error handler\n-     * is preserved here, too, just for consistency.\n-    *\/\n-    AWT_LOCK();\n-    handler = XSetErrorHandler(NULL);\n-    io_handler = XSetIOErrorHandler(NULL);\n-\n-    if (fp_gtk_check_version(2, 2, 0) == NULL) {\n-\n-        \/\/ Calling g_thread_init() multiple times leads to crash on GLib < 2.24\n-        \/\/ We can use g_thread_get_initialized () but it is available only for\n-        \/\/ GLib >= 2.20.\n-        gboolean is_g_thread_get_initialized = FALSE;\n-        if (GLIB_CHECK_VERSION(2, 20, 0)) {\n-            is_g_thread_get_initialized = fp_g_thread_get_initialized();\n-        }\n-\n-        if (!is_g_thread_get_initialized) {\n-            fp_g_thread_init(NULL);\n-        }\n-\n-        \/\/According the GTK documentation, gdk_threads_init() should be\n-        \/\/called before gtk_init() or gtk_init_check()\n-        fp_gdk_threads_init();\n-    }\n-    result = (*fp_gtk_init_check)(NULL, NULL);\n-\n-    XSetErrorHandler(handler);\n-    XSetIOErrorHandler(io_handler);\n-    AWT_UNLOCK();\n-\n-    \/* Initialize widget array. *\/\n-    for (i = 0; i < _GTK_WIDGET_TYPE_SIZE; i++)\n-    {\n-        gtk2_widgets[i] = NULL;\n-    }\n-    if (result) {\n-        GtkApi* gtk = (GtkApi*)malloc(sizeof(GtkApi));\n-        gtk2_init(gtk);\n-        return gtk;\n-    }\n-    return NULL;\n-}\n-\n-int gtk2_unload()\n-{\n-    int i;\n-    char *gtk2_error;\n-\n-    if (!gtk2_libhandle)\n-        return TRUE;\n-\n-    \/* Release painting objects *\/\n-    if (gtk2_white_pixmap != NULL) {\n-        (*fp_g_object_unref)(gtk2_white_pixmap);\n-        (*fp_g_object_unref)(gtk2_black_pixmap);\n-        (*fp_g_object_unref)(gtk2_white_pixbuf);\n-        (*fp_g_object_unref)(gtk2_black_pixbuf);\n-        gtk2_white_pixmap = gtk2_black_pixmap =\n-            gtk2_white_pixbuf = gtk2_black_pixbuf = NULL;\n-    }\n-    gtk2_pixbuf_width = 0;\n-    gtk2_pixbuf_height = 0;\n-\n-    if (gtk2_window != NULL) {\n-        \/* Destroying toplevel widget will destroy all contained widgets *\/\n-        (*fp_gtk_widget_destroy)(gtk2_window);\n-\n-        \/* Unset some static data so they get reinitialized on next load *\/\n-        gtk2_window = NULL;\n-    }\n-\n-    dlerror();\n-    dlclose(gtk2_libhandle);\n-    dlclose(gthread_libhandle);\n-    if ((gtk2_error = dlerror()) != NULL)\n-    {\n-        return FALSE;\n-    }\n-    return TRUE;\n-}\n-\n-\/* Dispatch all pending events from the GTK event loop.\n- * This is needed to catch theme change and update widgets' style.\n- *\/\n-static void flush_gtk_event_loop()\n-{\n-    while( (*fp_g_main_context_iteration)(NULL, FALSE));\n-}\n-\n-\/*\n- * Initialize components of containment hierarchy. This creates a GtkFixed\n- * inside a GtkWindow. All widgets get realized.\n- *\/\n-static void init_containers()\n-{\n-    if (gtk2_window == NULL)\n-    {\n-        gtk2_window = (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-        gtk2_fixed = (GtkFixed *)(*fp_gtk_fixed_new)();\n-        (*fp_gtk_container_add)((GtkContainer*)gtk2_window,\n-                                (GtkWidget *)gtk2_fixed);\n-        (*fp_gtk_widget_realize)(gtk2_window);\n-        (*fp_gtk_widget_realize)((GtkWidget *)gtk2_fixed);\n-    }\n-}\n-\n-\/*\n- * Ensure everything is ready for drawing an element of the specified width\n- * and height.\n- *\n- * We should somehow handle translucent images. GTK can draw to X Drawables\n- * only, which don't support alpha. When we retrieve the image back from\n- * the server, translucency information is lost. There're several ways to\n- * work around this:\n- * 1) Subclass GdkPixmap and cache translucent objects on client side. This\n- * requires us to implement parts of X server drawing logic on client side.\n- * Many X requests can potentially be \"translucent\"; e.g. XDrawLine with\n- * fill=tile and a translucent tile is a \"translucent\" operation, whereas\n- * XDrawLine with fill=solid is an \"opaque\" one. Moreover themes can (and some\n- * do) intermix transparent and opaque operations which makes caching even\n- * more problematic.\n- * 2) Use Xorg 32bit ARGB visual when available. GDK has no native support\n- * for it (as of version 2.6). Also even in JDS 3 Xorg does not support\n- * these visuals by default, which makes optimizing for them pointless.\n- * We can consider doing this at a later point when ARGB visuals become more\n- * popular.\n- * 3') GTK has plans to use Cairo as its graphical backend (presumably in\n- * 2.8), and Cairo supports alpha. With it we could also get rid of the\n- * unnecessary round trip to server and do all the drawing on client side.\n- * 4) For now we draw to two different pixmaps and restore alpha channel by\n- * comparing results. This can be optimized by using subclassed pixmap and\n- * doing the second drawing only if necessary.\n-*\/\n-static void gtk2_init_painting(JNIEnv *env, gint width, gint height)\n-{\n-    GdkGC *gc;\n-    GdkPixbuf *white, *black;\n-\n-    init_containers();\n-\n-    if (gtk2_pixbuf_width < width || gtk2_pixbuf_height < height)\n-    {\n-        white = (*fp_gdk_pixbuf_new)(GDK_COLORSPACE_RGB, TRUE, 8, width, height);\n-        black = (*fp_gdk_pixbuf_new)(GDK_COLORSPACE_RGB, TRUE, 8, width, height);\n-\n-        if (white == NULL || black == NULL)\n-        {\n-            snprintf(convertionBuffer, CONV_BUFFER_SIZE, \"Couldn't create pixbuf of size %dx%d\", width, height);\n-            throw_exception(env, \"java\/lang\/RuntimeException\", convertionBuffer);\n-            fp_gdk_threads_leave();\n-            return;\n-        }\n-\n-        if (gtk2_white_pixmap != NULL) {\n-            \/* free old stuff *\/\n-            (*fp_g_object_unref)(gtk2_white_pixmap);\n-            (*fp_g_object_unref)(gtk2_black_pixmap);\n-            (*fp_g_object_unref)(gtk2_white_pixbuf);\n-            (*fp_g_object_unref)(gtk2_black_pixbuf);\n-        }\n-\n-        gtk2_white_pixmap = (*fp_gdk_pixmap_new)(gtk2_window->window, width, height, -1);\n-        gtk2_black_pixmap = (*fp_gdk_pixmap_new)(gtk2_window->window, width, height, -1);\n-\n-        gtk2_white_pixbuf = white;\n-        gtk2_black_pixbuf = black;\n-\n-        gtk2_pixbuf_width = width;\n-        gtk2_pixbuf_height = height;\n-    }\n-\n-    \/* clear the pixmaps *\/\n-    gc = (*fp_gdk_gc_new)(gtk2_white_pixmap);\n-    (*fp_gdk_rgb_gc_set_foreground)(gc, 0xffffff);\n-    (*fp_gdk_draw_rectangle)(gtk2_white_pixmap, gc, TRUE, 0, 0, width, height);\n-    (*fp_g_object_unref)(gc);\n-\n-    gc = (*fp_gdk_gc_new)(gtk2_black_pixmap);\n-    (*fp_gdk_rgb_gc_set_foreground)(gc, 0x000000);\n-    (*fp_gdk_draw_rectangle)(gtk2_black_pixmap, gc, TRUE, 0, 0, width, height);\n-    (*fp_g_object_unref)(gc);\n-}\n-\n-\/*\n- * Restore image from white and black pixmaps and copy it into destination\n- * buffer. This method compares two pixbufs taken from white and black\n- * pixmaps and decodes color and alpha components. Pixbufs are RGB without\n- * alpha, destination buffer is ABGR.\n- *\n- * The return value is the transparency type of the resulting image, either\n- * one of java_awt_Transparency_OPAQUE, java_awt_Transparency_BITMASK, and\n- * java_awt_Transparency_TRANSLUCENT.\n- *\/\n-static gint gtk2_copy_image(gint *dst, gint width, gint height)\n-{\n-    gint i, j, r, g, b;\n-    guchar *white, *black;\n-    gint stride, padding;\n-    gboolean is_opaque = TRUE;\n-    gboolean is_bitmask = TRUE;\n-\n-    (*fp_gdk_pixbuf_get_from_drawable)(gtk2_white_pixbuf, gtk2_white_pixmap,\n-            NULL, 0, 0, 0, 0, width, height);\n-    (*fp_gdk_pixbuf_get_from_drawable)(gtk2_black_pixbuf, gtk2_black_pixmap,\n-            NULL, 0, 0, 0, 0, width, height);\n-\n-    white = (*fp_gdk_pixbuf_get_pixels)(gtk2_white_pixbuf);\n-    black = (*fp_gdk_pixbuf_get_pixels)(gtk2_black_pixbuf);\n-    stride = (*fp_gdk_pixbuf_get_rowstride)(gtk2_black_pixbuf);\n-    padding = stride - width * 4;\n-    if (padding >= 0 && stride > 0) {\n-        for (i = 0; i < height; i++) {\n-            for (j = 0; j < width; j++) {\n-                int r1 = *white++;\n-                int r2 = *black++;\n-                int alpha = 0xff + r2 - r1;\n-\n-                switch (alpha) {\n-                    case 0:       \/* transparent pixel *\/\n-                        r = g = b = 0;\n-                        black += 3;\n-                        white += 3;\n-                        is_opaque = FALSE;\n-                        break;\n-\n-                    case 0xff:    \/* opaque pixel *\/\n-                        r = r2;\n-                        g = *black++;\n-                        b = *black++;\n-                        black++;\n-                        white += 3;\n-                        break;\n-\n-                    default:      \/* translucent pixel *\/\n-                        r = 0xff * r2 \/ alpha;\n-                        g = 0xff * *black++ \/ alpha;\n-                        b = 0xff * *black++ \/ alpha;\n-                        black++;\n-                        white += 3;\n-                        is_opaque = FALSE;\n-                        is_bitmask = FALSE;\n-                        break;\n-                }\n-\n-                *dst++ = (alpha << 24 | r << 16 | g << 8 | b);\n-            }\n-\n-            white += padding;\n-            black += padding;\n-        }\n-    }\n-    return is_opaque ? java_awt_Transparency_OPAQUE :\n-                       (is_bitmask ? java_awt_Transparency_BITMASK :\n-                                     java_awt_Transparency_TRANSLUCENT);\n-}\n-\n-static void\n-gtk2_set_direction(GtkWidget *widget, GtkTextDirection dir)\n-{\n-    \/*\n-     * Some engines (inexplicably) look at the direction of the widget's\n-     * parent, so we need to set the direction of both the widget and its\n-     * parent.\n-     *\/\n-    (*fp_gtk_widget_set_direction)(widget, dir);\n-    if (widget->parent != NULL) {\n-        (*fp_gtk_widget_set_direction)(widget->parent, dir);\n-    }\n-}\n-\n-\/*\n- * Initializes the widget to correct state for some engines.\n- * This is a pure empirical method.\n- *\/\n-static void init_toggle_widget(WidgetType widget_type, gint synth_state)\n-{\n-    gboolean is_active = ((synth_state & SELECTED) != 0);\n-\n-    if (widget_type == RADIO_BUTTON ||\n-        widget_type == CHECK_BOX ||\n-        widget_type == TOGGLE_BUTTON) {\n-        ((GtkToggleButton*)gtk2_widget)->active = is_active;\n-    }\n-\n-    if ((synth_state & FOCUSED) != 0) {\n-        ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-    } else {\n-        ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-    }\n-\n-    if ((((synth_state & MOUSE_OVER) != 0) && ((synth_state & PRESSED) == 0)) ||\n-           (((synth_state & FOCUSED) != 0) && ((synth_state & PRESSED) != 0))) {\n-        gtk2_widget->state = GTK_STATE_PRELIGHT;\n-    } else if ((synth_state & DISABLED) != 0) {\n-        gtk2_widget->state = GTK_STATE_INSENSITIVE;\n-    } else {\n-        gtk2_widget->state = is_active ? GTK_STATE_ACTIVE : GTK_STATE_NORMAL;\n-    }\n-}\n-\n-\/* GTK state_type filter *\/\n-static GtkStateType get_gtk_state_type(WidgetType widget_type, gint synth_state)\n-{\n-    GtkStateType result = GTK_STATE_NORMAL;\n-\n-    if ((synth_state & DISABLED) != 0) {\n-        result = GTK_STATE_INSENSITIVE;\n-    } else if ((synth_state & PRESSED) != 0) {\n-        result = GTK_STATE_ACTIVE;\n-    } else if ((synth_state & MOUSE_OVER) != 0) {\n-        result = GTK_STATE_PRELIGHT;\n-    }\n-    return result;\n-}\n-\n-\/* GTK shadow_type filter *\/\n-static GtkShadowType get_gtk_shadow_type(WidgetType widget_type, gint synth_state)\n-{\n-    GtkShadowType result = GTK_SHADOW_OUT;\n-\n-    if ((synth_state & SELECTED) != 0) {\n-        result = GTK_SHADOW_IN;\n-    }\n-    return result;\n-}\n-\n-\n-static GtkWidget* gtk2_get_arrow(GtkArrowType arrow_type, GtkShadowType shadow_type)\n-{\n-    GtkWidget *arrow = NULL;\n-    if (NULL == gtk2_widgets[_GTK_ARROW_TYPE])\n-    {\n-        gtk2_widgets[_GTK_ARROW_TYPE] = (*fp_gtk_arrow_new)(arrow_type, shadow_type);\n-        (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, gtk2_widgets[_GTK_ARROW_TYPE]);\n-        (*fp_gtk_widget_realize)(gtk2_widgets[_GTK_ARROW_TYPE]);\n-    }\n-    arrow = gtk2_widgets[_GTK_ARROW_TYPE];\n-\n-    (*fp_gtk_arrow_set)(arrow, arrow_type, shadow_type);\n-    return arrow;\n-}\n-\n-static GtkAdjustment* create_adjustment()\n-{\n-    return (GtkAdjustment *)\n-            (*fp_gtk_adjustment_new)(50.0, 0.0, 100.0, 10.0, 20.0, 20.0);\n-}\n-\n-\/**\n- * Returns a pointer to the cached native widget for the specified widget\n- * type.\n- *\/\n-static GtkWidget *gtk2_get_widget(WidgetType widget_type)\n-{\n-    gboolean init_result = FALSE;\n-    GtkWidget *result = NULL;\n-    switch (widget_type)\n-    {\n-        case BUTTON:\n-        case TABLE_HEADER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_BUTTON_TYPE] = (*fp_gtk_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_BUTTON_TYPE];\n-            break;\n-        case CHECK_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CHECK_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_CHECK_BUTTON_TYPE] =\n-                    (*fp_gtk_check_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CHECK_BUTTON_TYPE];\n-            break;\n-        case CHECK_BOX_MENU_ITEM:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_check_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE];\n-            break;\n-        \/************************************************************\n-         *    Creation a dedicated color chooser is dangerous because\n-         * it deadlocks the EDT\n-         ************************************************************\/\n-\/*        case COLOR_CHOOSER:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE] =\n-                    (*fp_gtk_color_selection_dialog_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE];\n-            break;*\/\n-        case COMBO_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_COMBO_BOX_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COMBO_BOX_TYPE] =\n-                    (*fp_gtk_combo_box_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_TYPE];\n-            break;\n-        case COMBO_BOX_ARROW_BUTTON:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE] =\n-                     (*fp_gtk_toggle_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE];\n-            break;\n-        case COMBO_BOX_TEXT_FIELD:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE]))\n-            {\n-                result = gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE] =\n-                     (*fp_gtk_entry_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE];\n-            break;\n-        case DESKTOP_ICON:\n-        case INTERNAL_FRAME_TITLE_PANE:\n-        case LABEL:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_LABEL_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_LABEL_TYPE] =\n-                    (*fp_gtk_label_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_LABEL_TYPE];\n-            break;\n-        case DESKTOP_PANE:\n-        case PANEL:\n-        case ROOT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CONTAINER_TYPE]))\n-            {\n-                \/* There is no constructor for a container type.  I've\n-                 * chosen GtkFixed container since it has a default\n-                 * constructor.\n-                 *\/\n-                gtk2_widgets[_GTK_CONTAINER_TYPE] =\n-                    (*fp_gtk_fixed_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CONTAINER_TYPE];\n-            break;\n-        case EDITOR_PANE:\n-        case TEXT_AREA:\n-        case TEXT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TEXT_VIEW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TEXT_VIEW_TYPE] =\n-                    (*fp_gtk_text_view_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TEXT_VIEW_TYPE];\n-            break;\n-        case FORMATTED_TEXT_FIELD:\n-        case PASSWORD_FIELD:\n-        case TEXT_FIELD:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_ENTRY_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_ENTRY_TYPE] =\n-                    (*fp_gtk_entry_new)();\n-            }\n-            result = gtk2_widgets[_GTK_ENTRY_TYPE];\n-            break;\n-        case HANDLE_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HANDLE_BOX_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HANDLE_BOX_TYPE] =\n-                    (*fp_gtk_handle_box_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HANDLE_BOX_TYPE];\n-            break;\n-        case HSCROLL_BAR:\n-        case HSCROLL_BAR_BUTTON_LEFT:\n-        case HSCROLL_BAR_BUTTON_RIGHT:\n-        case HSCROLL_BAR_TRACK:\n-        case HSCROLL_BAR_THUMB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSCROLLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSCROLLBAR_TYPE] =\n-                    (*fp_gtk_hscrollbar_new)(create_adjustment());\n-            }\n-            result = gtk2_widgets[_GTK_HSCROLLBAR_TYPE];\n-            break;\n-        case HSEPARATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSEPARATOR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSEPARATOR_TYPE] =\n-                    (*fp_gtk_hseparator_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HSEPARATOR_TYPE];\n-            break;\n-        case HSLIDER:\n-        case HSLIDER_THUMB:\n-        case HSLIDER_TRACK:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSCALE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSCALE_TYPE] =\n-                    (*fp_gtk_hscale_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_HSCALE_TYPE];\n-            break;\n-        case HSPLIT_PANE_DIVIDER:\n-        case SPLIT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HPANED_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HPANED_TYPE] = (*fp_gtk_hpaned_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HPANED_TYPE];\n-            break;\n-        case IMAGE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_IMAGE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_IMAGE_TYPE] = (*fp_gtk_image_new)();\n-            }\n-            result = gtk2_widgets[_GTK_IMAGE_TYPE];\n-            break;\n-        case INTERNAL_FRAME:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_WINDOW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_WINDOW_TYPE] =\n-                    (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-            }\n-            result = gtk2_widgets[_GTK_WINDOW_TYPE];\n-            break;\n-        case TOOL_TIP:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOOLTIP_TYPE]))\n-            {\n-                result = (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-                (*fp_gtk_widget_set_name)(result, \"gtk-tooltips\");\n-                gtk2_widgets[_GTK_TOOLTIP_TYPE] = result;\n-            }\n-            result = gtk2_widgets[_GTK_TOOLTIP_TYPE];\n-            break;\n-        case LIST:\n-        case TABLE:\n-        case TREE:\n-        case TREE_CELL:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TREE_VIEW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TREE_VIEW_TYPE] =\n-                    (*fp_gtk_tree_view_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TREE_VIEW_TYPE];\n-            break;\n-        case TITLED_BORDER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_FRAME_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_FRAME_TYPE] = fp_gtk_frame_new(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_FRAME_TYPE];\n-            break;\n-        case POPUP_MENU:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_TYPE] =\n-                    (*fp_gtk_menu_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_TYPE];\n-            break;\n-        case MENU:\n-        case MENU_ITEM:\n-        case MENU_ITEM_ACCELERATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_ITEM_TYPE];\n-            break;\n-        case MENU_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_BAR_TYPE] =\n-                    (*fp_gtk_menu_bar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_BAR_TYPE];\n-            break;\n-        case COLOR_CHOOSER:\n-        case OPTION_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_DIALOG_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_DIALOG_TYPE] =\n-                    (*fp_gtk_dialog_new)();\n-            }\n-            result = gtk2_widgets[_GTK_DIALOG_TYPE];\n-            break;\n-        case POPUP_MENU_SEPARATOR:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_separator_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE];\n-            break;\n-        case HPROGRESS_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE] =\n-                    (*fp_gtk_progress_bar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE];\n-            break;\n-        case VPROGRESS_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE] =\n-                    (*fp_gtk_progress_bar_new)();\n-                \/*\n-                 * Vertical JProgressBars always go bottom-to-top,\n-                 * regardless of the ComponentOrientation.\n-                 *\/\n-                (*fp_gtk_progress_bar_set_orientation)(\n-                    (GtkProgressBar *)gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE],\n-                    GTK_PROGRESS_BOTTOM_TO_TOP);\n-            }\n-            result = gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE];\n-            break;\n-        case RADIO_BUTTON:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_RADIO_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_RADIO_BUTTON_TYPE] =\n-                    (*fp_gtk_radio_button_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_RADIO_BUTTON_TYPE];\n-            break;\n-        case RADIO_BUTTON_MENU_ITEM:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_radio_menu_item_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE];\n-            break;\n-        case SCROLL_PANE:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE] =\n-                    (*fp_gtk_scrolled_window_new)(NULL, NULL);\n-            }\n-            result = gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE];\n-            break;\n-        case SPINNER:\n-        case SPINNER_ARROW_BUTTON:\n-        case SPINNER_TEXT_FIELD:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_SPIN_BUTTON_TYPE]))\n-            {\n-                result = gtk2_widgets[_GTK_SPIN_BUTTON_TYPE] =\n-                    (*fp_gtk_spin_button_new)(NULL, 0, 0);\n-            }\n-            result = gtk2_widgets[_GTK_SPIN_BUTTON_TYPE];\n-            break;\n-        case TABBED_PANE:\n-        case TABBED_PANE_TAB_AREA:\n-        case TABBED_PANE_CONTENT:\n-        case TABBED_PANE_TAB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_NOTEBOOK_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_NOTEBOOK_TYPE] =\n-                    (*fp_gtk_notebook_new)();\n-            }\n-            result = gtk2_widgets[_GTK_NOTEBOOK_TYPE];\n-            break;\n-        case TOGGLE_BUTTON:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE] =\n-                    (*fp_gtk_toggle_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE];\n-            break;\n-        case TOOL_BAR:\n-        case TOOL_BAR_DRAG_WINDOW:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOOLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TOOLBAR_TYPE] =\n-                    (*fp_gtk_toolbar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TOOLBAR_TYPE];\n-            break;\n-        case TOOL_BAR_SEPARATOR:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE] =\n-                    (*fp_gtk_separator_tool_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE];\n-            break;\n-        case VIEWPORT:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VIEWPORT_TYPE]))\n-            {\n-                GtkAdjustment *adjustment = create_adjustment();\n-                gtk2_widgets[_GTK_VIEWPORT_TYPE] =\n-                    (*fp_gtk_viewport_new)(adjustment, adjustment);\n-            }\n-            result = gtk2_widgets[_GTK_VIEWPORT_TYPE];\n-            break;\n-        case VSCROLL_BAR:\n-        case VSCROLL_BAR_BUTTON_UP:\n-        case VSCROLL_BAR_BUTTON_DOWN:\n-        case VSCROLL_BAR_TRACK:\n-        case VSCROLL_BAR_THUMB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSCROLLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSCROLLBAR_TYPE] =\n-                    (*fp_gtk_vscrollbar_new)(create_adjustment());\n-            }\n-            result = gtk2_widgets[_GTK_VSCROLLBAR_TYPE];\n-            break;\n-        case VSEPARATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSEPARATOR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSEPARATOR_TYPE] =\n-                    (*fp_gtk_vseparator_new)();\n-            }\n-            result = gtk2_widgets[_GTK_VSEPARATOR_TYPE];\n-            break;\n-        case VSLIDER:\n-        case VSLIDER_THUMB:\n-        case VSLIDER_TRACK:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSCALE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSCALE_TYPE] =\n-                    (*fp_gtk_vscale_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_VSCALE_TYPE];\n-            \/*\n-             * Vertical JSliders start at the bottom, while vertical\n-             * GtkVScale widgets start at the top (by default), so to fix\n-             * this we set the \"inverted\" flag to get the Swing behavior.\n-             *\/\n-            ((GtkRange*)result)->inverted = 1;\n-            break;\n-        case VSPLIT_PANE_DIVIDER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VPANED_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VPANED_TYPE] = (*fp_gtk_vpaned_new)();\n-            }\n-            result = gtk2_widgets[_GTK_VPANED_TYPE];\n-            break;\n-        default:\n-            result = NULL;\n-            break;\n-    }\n-\n-    if (result != NULL && init_result)\n-    {\n-        if (widget_type == RADIO_BUTTON_MENU_ITEM ||\n-                widget_type == CHECK_BOX_MENU_ITEM ||\n-                widget_type == MENU_ITEM ||\n-                widget_type == MENU ||\n-                widget_type == POPUP_MENU_SEPARATOR)\n-        {\n-            GtkWidget *menu = gtk2_get_widget(POPUP_MENU);\n-            (*fp_gtk_menu_shell_append)((GtkMenuShell *)menu, result);\n-        }\n-        else if (widget_type == POPUP_MENU)\n-        {\n-            GtkWidget *menu_bar = gtk2_get_widget(MENU_BAR);\n-            GtkWidget *root_menu = (*fp_gtk_menu_item_new)();\n-            (*fp_gtk_menu_item_set_submenu)((GtkMenuItem*)root_menu, result);\n-            (*fp_gtk_menu_shell_append)((GtkMenuShell *)menu_bar, root_menu);\n-        }\n-        else if (widget_type == COMBO_BOX_ARROW_BUTTON ||\n-                 widget_type == COMBO_BOX_TEXT_FIELD)\n-        {\n-            \/*\n-            * We add a regular GtkButton\/GtkEntry to a GtkComboBoxEntry\n-            * in order to trick engines into thinking it's a real combobox\n-            * arrow button\/text field.\n-            *\/\n-            GtkWidget *combo = (*fp_gtk_combo_box_entry_new)();\n-\n-            if (new_combo && widget_type == COMBO_BOX_ARROW_BUTTON) {\n-                (*fp_gtk_widget_set_parent)(result, combo);\n-                ((GtkBin*)combo)->child = result;\n-            } else {\n-                (*fp_gtk_container_add)((GtkContainer *)combo, result);\n-            }\n-            (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, combo);\n-        }\n-        else if (widget_type != TOOL_TIP &&\n-                 widget_type != INTERNAL_FRAME &&\n-                 widget_type != OPTION_PANE)\n-        {\n-            (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, result);\n-        }\n-        (*fp_gtk_widget_realize)(result);\n-    }\n-    return result;\n-}\n-\n-void gtk2_paint_arrow(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkArrowType arrow_type, gboolean fill)\n-{\n-    static int w, h;\n-    static GtkRequisition size;\n-\n-    if (widget_type == COMBO_BOX_ARROW_BUTTON || widget_type == TABLE)\n-        gtk2_widget = gtk2_get_arrow(arrow_type, shadow_type);\n-    else\n-        gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    switch (widget_type)\n-    {\n-        case SPINNER_ARROW_BUTTON:\n-            x = 1;\n-            y = ((arrow_type == GTK_ARROW_UP) ? 2 : 0);\n-            height -= 2;\n-            width -= 3;\n-\n-            w = width \/ 2;\n-            w -= w % 2 - 1;\n-            h = (w + 1) \/ 2;\n-            break;\n-\n-        case HSCROLL_BAR_BUTTON_LEFT:\n-        case HSCROLL_BAR_BUTTON_RIGHT:\n-        case VSCROLL_BAR_BUTTON_UP:\n-        case VSCROLL_BAR_BUTTON_DOWN:\n-            w = width \/ 2;\n-            h = height \/ 2;\n-            break;\n-\n-        case COMBO_BOX_ARROW_BUTTON:\n-        case TABLE:\n-            x = 1;\n-            (*fp_gtk_widget_size_request)(gtk2_widget, &size);\n-            w = size.width - ((GtkMisc*)gtk2_widget)->xpad * 2;\n-            h = size.height - ((GtkMisc*)gtk2_widget)->ypad * 2;\n-            w = h = MIN(MIN(w, h), MIN(width,height)) * 0.7;\n-            break;\n-\n-        default:\n-            w = width;\n-            h = height;\n-            break;\n-    }\n-    x += (width - w) \/ 2;\n-    y += (height - h) \/ 2;\n-\n-    (*fp_gtk_paint_arrow)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, arrow_type, fill,\n-            x, y, w, h);\n-    (*fp_gtk_paint_arrow)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, arrow_type, fill,\n-            x, y, w, h);\n-}\n-\n-static void gtk2_paint_box(WidgetType widget_type, GtkStateType state_type,\n-                    GtkShadowType shadow_type, const gchar *detail,\n-                    gint x, gint y, gint width, gint height,\n-                    gint synth_state, GtkTextDirection dir)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    \/*\n-     * The clearlooks engine sometimes looks at the widget's state field\n-     * instead of just the state_type variable that we pass in, so to account\n-     * for those cases we set the widget's state field accordingly.  The\n-     * flags field is similarly important for things like focus\/default state.\n-     *\/\n-    gtk2_widget->state = state_type;\n-\n-    if (widget_type == HSLIDER_TRACK) {\n-        \/*\n-         * For horizontal JSliders with right-to-left orientation, we need\n-         * to set the \"inverted\" flag to match the native GTK behavior where\n-         * the foreground highlight is on the right side of the slider thumb.\n-         * This is needed especially for the ubuntulooks engine, which looks\n-         * exclusively at the \"inverted\" flag to determine on which side of\n-         * the thumb to paint the highlight...\n-         *\/\n-        ((GtkRange*)gtk2_widget)->inverted = (dir == GTK_TEXT_DIR_RTL);\n-\n-        \/*\n-         * Note however that other engines like clearlooks will look at both\n-         * the \"inverted\" field and the text direction to determine how\n-         * the foreground highlight is painted:\n-         *     !inverted && ltr --> paint highlight on left side\n-         *     !inverted && rtl --> paint highlight on right side\n-         *      inverted && ltr --> paint highlight on right side\n-         *      inverted && rtl --> paint highlight on left side\n-         * So the only way to reliably get the desired results for horizontal\n-         * JSlider (i.e., highlight on left side for LTR ComponentOrientation\n-         * and highlight on right side for RTL ComponentOrientation) is to\n-         * always override text direction as LTR, and then set the \"inverted\"\n-         * flag accordingly (as we have done above).\n-         *\/\n-        dir = GTK_TEXT_DIR_LTR;\n-    }\n-\n-    \/*\n-     * Some engines (e.g. clearlooks) will paint the shadow of certain\n-     * widgets (e.g. COMBO_BOX_ARROW_BUTTON) differently depending on the\n-     * the text direction.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, dir);\n-\n-    switch (widget_type) {\n-    case BUTTON:\n-        if (synth_state & DEFAULT) {\n-            ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_DEFAULT;\n-        } else {\n-            ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_DEFAULT;\n-        }\n-        break;\n-    case TOGGLE_BUTTON:\n-        init_toggle_widget(widget_type, synth_state);\n-        break;\n-    case HSCROLL_BAR_BUTTON_LEFT:\n-        \/*\n-         * The clearlooks engine will draw a \"left\" button when:\n-         *   x == w->allocation.x\n-         *\n-         * The ubuntulooks engine will draw a \"left\" button when:\n-         *   [x,y,width,height]\n-         *     intersects\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that a \"left\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case HSCROLL_BAR_BUTTON_RIGHT:\n-        \/*\n-         * The clearlooks engine will draw a \"right\" button when:\n-         *   x + width == w->allocation.x + w->allocation.width\n-         *\n-         * The ubuntulooks engine will draw a \"right\" button when:\n-         *   [x,y,width,height]\n-         *     does not intersect\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *     but does intersect\n-         *   [w->alloc.x+width,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that a \"right\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x+width;\n-        gtk2_widget->allocation.y = 0;\n-        gtk2_widget->allocation.width = 0;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case VSCROLL_BAR_BUTTON_UP:\n-        \/*\n-         * The clearlooks engine will draw an \"up\" button when:\n-         *   y == w->allocation.y\n-         *\n-         * The ubuntulooks engine will draw an \"up\" button when:\n-         *   [x,y,width,height]\n-         *     intersects\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that an \"up\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case VSCROLL_BAR_BUTTON_DOWN:\n-        \/*\n-         * The clearlooks engine will draw a \"down\" button when:\n-         *   y + height == w->allocation.y + w->allocation.height\n-         *\n-         * The ubuntulooks engine will draw a \"down\" button when:\n-         *   [x,y,width,height]\n-         *     does not intersect\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *     but does intersect\n-         *   [w->alloc.x,w->alloc.y+height,width,height]\n-         *\n-         * The values that are set below should ensure that a \"down\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y+height;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = 0;\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    (*fp_gtk_paint_box)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_box)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-\n-    \/*\n-     * Reset the text direction to the default value so that we don't\n-     * accidentally affect other operations and widgets.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, GTK_TEXT_DIR_LTR);\n-}\n-\n-void gtk2_paint_box_gap(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkPositionType gap_side, gint gap_x, gint gap_width)\n-{\n-    \/* Clearlooks needs a real clip area to paint the gap properly *\/\n-    GdkRectangle area = { x, y, width, height };\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_box_gap)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, &area, gtk2_widget, detail,\n-            x, y, width, height, gap_side, gap_x, gap_width);\n-    (*fp_gtk_paint_box_gap)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, &area, gtk2_widget, detail,\n-            x, y, width, height, gap_side, gap_x, gap_width);\n-}\n-\n-static void gtk2_paint_check(WidgetType widget_type, gint synth_state,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    GtkStateType state_type = get_gtk_state_type(widget_type, synth_state);\n-    GtkShadowType shadow_type = get_gtk_shadow_type(widget_type, synth_state);\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    init_toggle_widget(widget_type, synth_state);\n-\n-    (*fp_gtk_paint_check)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_check)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_expander(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height,\n-        GtkExpanderStyle expander_style)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_expander)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, NULL, gtk2_widget, detail,\n-            x + width \/ 2, y + height \/ 2, expander_style);\n-    (*fp_gtk_paint_expander)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, NULL, gtk2_widget, detail,\n-            x + width \/ 2, y + height \/ 2, expander_style);\n-}\n-\n-static void gtk2_paint_extension(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkPositionType gap_side)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_extension)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, gap_side);\n-    (*fp_gtk_paint_extension)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, gap_side);\n-}\n-\n-static void gtk2_paint_flat_box(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, gboolean has_focus)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    if (has_focus)\n-        ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-    else\n-        ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-\n-    (*fp_gtk_paint_flat_box)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_flat_box)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_focus(WidgetType widget_type, GtkStateType state_type,\n-        const char *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_focus)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_focus)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, y, width, height);\n-}\n-\n-static void gtk2_paint_handle(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_handle)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-    (*fp_gtk_paint_handle)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-}\n-\n-static void gtk2_paint_hline(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_hline)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, x + width, y);\n-    (*fp_gtk_paint_hline)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, x + width, y);\n-}\n-\n-static void gtk2_paint_option(WidgetType widget_type, gint synth_state,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    GtkStateType state_type = get_gtk_state_type(widget_type, synth_state);\n-    GtkShadowType shadow_type = get_gtk_shadow_type(widget_type, synth_state);\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    init_toggle_widget(widget_type, synth_state);\n-\n-    (*fp_gtk_paint_option)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_option)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_shadow(WidgetType widget_type, GtkStateType state_type,\n-                       GtkShadowType shadow_type, const gchar *detail,\n-                       gint x, gint y, gint width, gint height,\n-                       gint synth_state, GtkTextDirection dir)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    \/*\n-     * The clearlooks engine sometimes looks at the widget's state field\n-     * instead of just the state_type variable that we pass in, so to account\n-     * for those cases we set the widget's state field accordingly.  The\n-     * flags field is similarly important for things like focus state.\n-     *\/\n-    gtk2_widget->state = state_type;\n-\n-    \/*\n-     * Some engines (e.g. clearlooks) will paint the shadow of certain\n-     * widgets (e.g. COMBO_BOX_TEXT_FIELD) differently depending on the\n-     * the text direction.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, dir);\n-\n-    switch (widget_type) {\n-    case COMBO_BOX_TEXT_FIELD:\n-    case FORMATTED_TEXT_FIELD:\n-    case PASSWORD_FIELD:\n-    case SPINNER_TEXT_FIELD:\n-    case TEXT_FIELD:\n-        if (synth_state & FOCUSED) {\n-            ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-        } else {\n-            ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-        }\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    (*fp_gtk_paint_shadow)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_shadow)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-\n-    \/*\n-     * Reset the text direction to the default value so that we don't\n-     * accidentally affect other operations and widgets.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, GTK_TEXT_DIR_LTR);\n-}\n-\n-static void gtk2_paint_slider(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation,\n-        gboolean has_focus)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_slider)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-    (*fp_gtk_paint_slider)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-}\n-\n-static void gtk2_paint_vline(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_vline)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, y, y + height, x);\n-    (*fp_gtk_paint_vline)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, y, y + height, x);\n-}\n-\n-static void gtk_paint_background(WidgetType widget_type, GtkStateType state_type,\n-        gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_style_apply_default_background)(gtk2_widget->style,\n-            gtk2_white_pixmap, TRUE, state_type, NULL, x, y, width, height);\n-    (*fp_gtk_style_apply_default_background)(gtk2_widget->style,\n-            gtk2_black_pixmap, TRUE, state_type, NULL, x, y, width, height);\n-}\n-\n-static GdkPixbuf *gtk2_get_stock_icon(gint widget_type, const gchar *stock_id,\n-        GtkIconSize size, GtkTextDirection direction, const char *detail)\n-{\n-    init_containers();\n-    gtk2_widget = gtk2_get_widget((widget_type < 0) ? IMAGE : widget_type);\n-    gtk2_widget->state = GTK_STATE_NORMAL;\n-    (*fp_gtk_widget_set_direction)(gtk2_widget, direction);\n-    return (*fp_gtk_widget_render_icon)(gtk2_widget, stock_id, size, detail);\n-}\n-\n-static jboolean gtk2_get_pixbuf_data(JNIEnv *env, GdkPixbuf* pixbuf,\n-                              jmethodID icon_upcall_method, jobject this) {\n-    if (!pixbuf) {\n-        return JNI_FALSE;\n-    }\n-    guchar *pixbuf_data = (*fp_gdk_pixbuf_get_pixels)(pixbuf);\n-    if (pixbuf_data) {\n-        int row_stride = (*fp_gdk_pixbuf_get_rowstride)(pixbuf);\n-        int width = (*fp_gdk_pixbuf_get_width)(pixbuf);\n-        int height = (*fp_gdk_pixbuf_get_height)(pixbuf);\n-        int bps = (*fp_gdk_pixbuf_get_bits_per_sample)(pixbuf);\n-        int channels = (*fp_gdk_pixbuf_get_n_channels)(pixbuf);\n-        gboolean alpha = (*fp_gdk_pixbuf_get_has_alpha)(pixbuf);\n-\n-        jbyteArray data = (*env)->NewByteArray(env, (row_stride * height));\n-        JNU_CHECK_EXCEPTION_RETURN(env, JNI_FALSE);\n-\n-        (*env)->SetByteArrayRegion(env, data, 0, (row_stride * height),\n-                                   (jbyte *)pixbuf_data);\n-        (*fp_g_object_unref)(pixbuf);\n-\n-        \/* Call the callback method to create the image on the Java side. *\/\n-        (*env)->CallVoidMethod(env, this, icon_upcall_method, data,\n-                width, height, row_stride, bps, channels, alpha);\n-        return JNI_TRUE;\n-    }\n-    return JNI_FALSE;\n-}\n-\n-static jboolean gtk2_get_file_icon_data(JNIEnv *env, const char *filename,\n-                 GError **error, jmethodID icon_upcall_method, jobject this) {\n-    GdkPixbuf* pixbuf = fp_gdk_pixbuf_new_from_file(filename, error);\n-    return gtk2_get_pixbuf_data(env, pixbuf, icon_upcall_method, this);\n-}\n-\n-static jboolean gtk2_get_icon_data(JNIEnv *env, gint widget_type,\n-                              const gchar *stock_id, GtkIconSize size,\n-                              GtkTextDirection direction, const char *detail,\n-                              jmethodID icon_upcall_method, jobject this) {\n-    GdkPixbuf* pixbuf = gtk2_get_stock_icon(widget_type, stock_id, size,\n-                                       direction, detail);\n-    return gtk2_get_pixbuf_data(env, pixbuf, icon_upcall_method, this);\n-}\n-\n-\/*************************************************\/\n-static gint gtk2_get_xthickness(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-    return style->xthickness;\n-}\n-\n-static gint gtk2_get_ythickness(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-    return style->ythickness;\n-}\n-\n-\/*************************************************\/\n-static guint8 recode_color(guint16 channel)\n-{\n-    return (guint8)(channel>>8);\n-}\n-\n-static gint gtk2_get_color_for_state(JNIEnv *env, WidgetType widget_type,\n-                              GtkStateType state_type, ColorType color_type)\n-{\n-    gint result = 0;\n-    GdkColor *color = NULL;\n-\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-\n-    switch (color_type)\n-    {\n-        case FOREGROUND:\n-            color = &(style->fg[state_type]);\n-            break;\n-        case BACKGROUND:\n-            color = &(style->bg[state_type]);\n-            break;\n-        case TEXT_FOREGROUND:\n-            color = &(style->text[state_type]);\n-            break;\n-        case TEXT_BACKGROUND:\n-            color = &(style->base[state_type]);\n-            break;\n-        case LIGHT:\n-            color = &(style->light[state_type]);\n-            break;\n-        case DARK:\n-            color = &(style->dark[state_type]);\n-            break;\n-        case MID:\n-            color = &(style->mid[state_type]);\n-            break;\n-        case FOCUS:\n-        case BLACK:\n-            color = &(style->black);\n-            break;\n-        case WHITE:\n-            color = &(style->white);\n-            break;\n-    }\n-\n-    if (color)\n-        result = recode_color(color->red)   << 16 |\n-                 recode_color(color->green) << 8  |\n-                 recode_color(color->blue);\n-\n-    return result;\n-}\n-\n-\/*************************************************\/\n-static jobject create_Boolean(JNIEnv *env, jboolean boolean_value);\n-static jobject create_Integer(JNIEnv *env, jint int_value);\n-static jobject create_Long(JNIEnv *env, jlong long_value);\n-static jobject create_Float(JNIEnv *env, jfloat float_value);\n-static jobject create_Double(JNIEnv *env, jdouble double_value);\n-static jobject create_Character(JNIEnv *env, jchar char_value);\n-static jobject create_Insets(JNIEnv *env, GtkBorder *border);\n-\n-static jobject gtk2_get_class_value(JNIEnv *env, WidgetType widget_type,\n-                              const char* key)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    GValue value;\n-    value.g_type = 0;\n-\n-    GParamSpec* param = (*fp_gtk_widget_class_find_style_property)(\n-                                    ((GTypeInstance*)gtk2_widget)->g_class, key);\n-    if( param )\n-    {\n-        (*fp_g_value_init)( &value, param->value_type );\n-        (*fp_gtk_widget_style_get_property)(gtk2_widget, key, &value);\n-\n-        if( (*fp_g_type_is_a)( param->value_type, G_TYPE_BOOLEAN ))\n-        {\n-            gboolean val = (*fp_g_value_get_boolean)(&value);\n-            return create_Boolean(env, (jboolean)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_CHAR ))\n-        {\n-            gchar val = (*fp_g_value_get_char)(&value);\n-            return create_Character(env, (jchar)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UCHAR ))\n-        {\n-            guchar val = (*fp_g_value_get_uchar)(&value);\n-            return create_Character(env, (jchar)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_INT ))\n-        {\n-            gint val = (*fp_g_value_get_int)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UINT ))\n-        {\n-            guint val = (*fp_g_value_get_uint)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_LONG ))\n-        {\n-            glong val = (*fp_g_value_get_long)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_ULONG ))\n-        {\n-            gulong val = (*fp_g_value_get_ulong)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_INT64 ))\n-        {\n-            gint64 val = (*fp_g_value_get_int64)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UINT64 ))\n-        {\n-            guint64 val = (*fp_g_value_get_uint64)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_FLOAT ))\n-        {\n-            gfloat val = (*fp_g_value_get_float)(&value);\n-            return create_Float(env, (jfloat)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_DOUBLE ))\n-        {\n-            gdouble val = (*fp_g_value_get_double)(&value);\n-            return create_Double(env, (jdouble)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_ENUM ))\n-        {\n-            gint val = (*fp_g_value_get_enum)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_FLAGS ))\n-        {\n-            guint val = (*fp_g_value_get_flags)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_STRING ))\n-        {\n-            const gchar* val = (*fp_g_value_get_string)(&value);\n-\n-            \/* We suppose that all values come in C locale and\n-             * utf-8 representation of a string is the same as\n-             * the string itself. If this isn't so we should\n-             * use g_convert.\n-             *\/\n-            return (*env)->NewStringUTF(env, val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, GTK_TYPE_BORDER ))\n-        {\n-            GtkBorder *border = (GtkBorder*)(*fp_g_value_get_boxed)(&value);\n-            return border ? create_Insets(env, border) : NULL;\n-        }\n-\n-        \/*      TODO: Other types are not supported yet.*\/\n-\/*        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_PARAM ))\n-        {\n-            GParamSpec* val = (*fp_g_value_get_param)(&value);\n-            printf( \"Param: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_BOXED ))\n-        {\n-            gpointer* val = (*fp_g_value_get_boxed)(&value);\n-            printf( \"Boxed: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_POINTER ))\n-        {\n-            gpointer* val = (*fp_g_value_get_pointer)(&value);\n-            printf( \"Pointer: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_OBJECT ))\n-        {\n-            GObject* val = (GObject*)(*fp_g_value_get_object)(&value);\n-            printf( \"Object: %p\\n\", val );\n-        }*\/\n-    }\n-\n-    return NULL;\n-}\n-\n-static void gtk2_set_range_value(WidgetType widget_type, jdouble value,\n-                          jdouble min, jdouble max, jdouble visible)\n-{\n-    GtkAdjustment *adj;\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    adj = (*fp_gtk_range_get_adjustment)((GtkRange *)gtk2_widget);\n-    adj->value = (gdouble)value;\n-    adj->lower = (gdouble)min;\n-    adj->upper = (gdouble)max;\n-    adj->page_size = (gdouble)visible;\n-}\n-\n-\/*************************************************\/\n-static jobject create_Object(JNIEnv *env, jmethodID *cid,\n-                             const char* class_name,\n-                             const char* signature,\n-                             jvalue* value)\n-{\n-    jclass  class;\n-    jobject result;\n-\n-    class = (*env)->FindClass(env, class_name);\n-    if( class == NULL )\n-        return NULL; \/* can't find\/load the class, exception thrown *\/\n-\n-    if( *cid == NULL)\n-    {\n-        *cid = (*env)->GetMethodID(env, class, \"<init>\", signature);\n-        if( *cid == NULL )\n-        {\n-            (*env)->DeleteLocalRef(env, class);\n-            return NULL; \/* can't find\/get the method, exception thrown *\/\n-        }\n-    }\n-\n-    result = (*env)->NewObjectA(env, class, *cid, value);\n-\n-    (*env)->DeleteLocalRef(env, class);\n-    return result;\n-}\n-\n-jobject create_Boolean(JNIEnv *env, jboolean boolean_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.z = boolean_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Boolean\", \"(Z)V\", &value);\n-}\n-\n-jobject create_Integer(JNIEnv *env, jint int_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.i = int_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Integer\", \"(I)V\", &value);\n-}\n-\n-jobject create_Long(JNIEnv *env, jlong long_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.j = long_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Long\", \"(J)V\", &value);\n-}\n-\n-jobject create_Float(JNIEnv *env, jfloat float_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.f = float_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Float\", \"(F)V\", &value);\n-}\n-\n-jobject create_Double(JNIEnv *env, jdouble double_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.d = double_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Double\", \"(D)V\", &value);\n-}\n-\n-jobject create_Character(JNIEnv *env, jchar char_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.c = char_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Character\", \"(C)V\", &value);\n-}\n-\n-\n-jobject create_Insets(JNIEnv *env, GtkBorder *border)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue values[4];\n-\n-    values[0].i = border->top;\n-    values[1].i = border->left;\n-    values[2].i = border->bottom;\n-    values[3].i = border->right;\n-\n-    return create_Object(env, &cid, \"java\/awt\/Insets\", \"(IIII)V\", values);\n-}\n-\n-\/*********************************************\/\n-static jstring gtk2_get_pango_font_name(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    jstring  result = NULL;\n-    GtkStyle* style = gtk2_widget->style;\n-\n-    if (style && style->font_desc)\n-    {\n-        gchar* val = (*fp_pango_font_description_to_string)(style->font_desc);\n-        result = (*env)->NewStringUTF(env, val);\n-        (*fp_g_free)( val );\n-    }\n-\n-    return result;\n-}\n-\n-\/***********************************************\/\n-static jobject get_string_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    jobject result = NULL;\n-    gchar*  strval = NULL;\n-\n-    (*fp_g_object_get)(settings, key, &strval, NULL);\n-    result = (*env)->NewStringUTF(env, strval);\n-    (*fp_g_free)(strval);\n-\n-    return result;\n-}\n-\n-static jobject get_integer_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    gint intval = 0;\n-    (*fp_g_object_get)(settings, key, &intval, NULL);\n-    return create_Integer(env, intval);\n-}\n-\n-static jobject get_boolean_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    gint intval = 0;\n-    (*fp_g_object_get)(settings, key, &intval, NULL);\n-    return create_Boolean(env, intval);\n-}\n-\n-static jobject gtk2_get_setting(JNIEnv *env, Setting property)\n-{\n-    GtkSettings* settings = (*fp_gtk_settings_get_default)();\n-\n-    switch (property)\n-    {\n-        case GTK_FONT_NAME:\n-            return get_string_property(env, settings, \"gtk-font-name\");\n-        case GTK_ICON_SIZES:\n-            return get_string_property(env, settings, \"gtk-icon-sizes\");\n-        case GTK_CURSOR_BLINK:\n-            return get_boolean_property(env, settings, \"gtk-cursor-blink\");\n-        case GTK_CURSOR_BLINK_TIME:\n-            return get_integer_property(env, settings, \"gtk-cursor-blink-time\");\n-    }\n-\n-    return NULL;\n-}\n-\n-static gboolean gtk2_get_drawable_data(JNIEnv *env, jintArray pixelArray, jint x,\n-     jint y, jint width, jint height, jint jwidth, int dx, int dy) {\n-    GdkPixbuf *pixbuf;\n-    jint *ary;\n-\n-    GdkWindow *root = (*fp_gdk_get_default_root_window)();\n-\n-    pixbuf = (*fp_gdk_pixbuf_get_from_drawable)(NULL, root, NULL, x, y,\n-                                                    0, 0, width, height);\n-\n-    if (pixbuf) {\n-        int nchan = (*fp_gdk_pixbuf_get_n_channels)(pixbuf);\n-        int stride = (*fp_gdk_pixbuf_get_rowstride)(pixbuf);\n-\n-        if ((*fp_gdk_pixbuf_get_width)(pixbuf) == width\n-                && (*fp_gdk_pixbuf_get_height)(pixbuf) == height\n-                && (*fp_gdk_pixbuf_get_bits_per_sample)(pixbuf) == 8\n-                && (*fp_gdk_pixbuf_get_colorspace)(pixbuf) == GDK_COLORSPACE_RGB\n-                && nchan >= 3\n-                ) {\n-            guchar *p, *pix = (*fp_gdk_pixbuf_get_pixels)(pixbuf);\n-\n-            ary = (*env)->GetPrimitiveArrayCritical(env, pixelArray, NULL);\n-            if (ary) {\n-                jint _x, _y;\n-                int index;\n-                for (_y = 0; _y < height; _y++) {\n-                    for (_x = 0; _x < width; _x++) {\n-                        p = pix + (intptr_t) _y * stride + _x * nchan;\n-\n-                        index = (_y + dy) * jwidth + (_x + dx);\n-                        ary[index] = 0xff000000\n-                                        | (p[0] << 16)\n-                                        | (p[1] << 8)\n-                                        | (p[2]);\n-\n-                    }\n-                }\n-                (*env)->ReleasePrimitiveArrayCritical(env, pixelArray, ary, 0);\n-            }\n-        }\n-        (*fp_g_object_unref)(pixbuf);\n-    }\n-    return JNI_FALSE;\n-}\n-\n-static GdkWindow* gtk2_get_window(void *widget) {\n-    return ((GtkWidget*)widget)->window;\n-}\n-\n-void gtk2_init(GtkApi* gtk) {\n-    gtk->version = GTK_2;\n-\n-    gtk->show_uri_load = &gtk2_show_uri_load;\n-    gtk->unload = &gtk2_unload;\n-    gtk->flush_event_loop = &flush_gtk_event_loop;\n-    gtk->gtk_check_version = fp_gtk_check_version;\n-    gtk->get_setting = &gtk2_get_setting;\n-\n-    gtk->paint_arrow = &gtk2_paint_arrow;\n-    gtk->paint_box = &gtk2_paint_box;\n-    gtk->paint_box_gap = &gtk2_paint_box_gap;\n-    gtk->paint_expander = &gtk2_paint_expander;\n-    gtk->paint_extension = &gtk2_paint_extension;\n-    gtk->paint_flat_box = &gtk2_paint_flat_box;\n-    gtk->paint_focus = &gtk2_paint_focus;\n-    gtk->paint_handle = &gtk2_paint_handle;\n-    gtk->paint_hline = &gtk2_paint_hline;\n-    gtk->paint_vline = &gtk2_paint_vline;\n-    gtk->paint_option = &gtk2_paint_option;\n-    gtk->paint_shadow = &gtk2_paint_shadow;\n-    gtk->paint_slider = &gtk2_paint_slider;\n-    gtk->paint_background = &gtk_paint_background;\n-    gtk->paint_check = &gtk2_paint_check;\n-    gtk->set_range_value = &gtk2_set_range_value;\n-\n-    gtk->init_painting = &gtk2_init_painting;\n-    gtk->copy_image = &gtk2_copy_image;\n-\n-    gtk->get_xthickness = &gtk2_get_xthickness;\n-    gtk->get_ythickness = &gtk2_get_ythickness;\n-    gtk->get_color_for_state = &gtk2_get_color_for_state;\n-    gtk->get_class_value = &gtk2_get_class_value;\n-\n-    gtk->get_pango_font_name = &gtk2_get_pango_font_name;\n-    gtk->get_icon_data = &gtk2_get_icon_data;\n-    gtk->get_file_icon_data = &gtk2_get_file_icon_data;\n-    gtk->gdk_threads_enter = fp_gdk_threads_enter;\n-    gtk->gdk_threads_leave = fp_gdk_threads_leave;\n-    gtk->gtk_show_uri = fp_gtk_show_uri;\n-    gtk->get_drawable_data = &gtk2_get_drawable_data;\n-    gtk->g_free = fp_g_free;\n-\n-    gtk->gtk_file_chooser_get_filename = fp_gtk_file_chooser_get_filename;\n-    gtk->gtk_widget_hide = fp_gtk_widget_hide;\n-    gtk->gtk_main_quit = fp_gtk_main_quit;\n-    gtk->gtk_file_chooser_dialog_new = fp_gtk_file_chooser_dialog_new;\n-    gtk->gtk_file_chooser_set_current_folder =\n-                          fp_gtk_file_chooser_set_current_folder;\n-    gtk->gtk_file_chooser_set_filename = fp_gtk_file_chooser_set_filename;\n-    gtk->gtk_file_chooser_set_current_name =\n-                          fp_gtk_file_chooser_set_current_name;\n-    gtk->gtk_file_filter_add_custom = fp_gtk_file_filter_add_custom;\n-    gtk->gtk_file_chooser_set_filter = fp_gtk_file_chooser_set_filter;\n-    gtk->gtk_file_chooser_get_type = fp_gtk_file_chooser_get_type;\n-    gtk->gtk_file_filter_new = fp_gtk_file_filter_new;\n-    gtk->gtk_file_chooser_set_do_overwrite_confirmation =\n-                          fp_gtk_file_chooser_set_do_overwrite_confirmation;\n-    gtk->gtk_file_chooser_set_select_multiple =\n-                          fp_gtk_file_chooser_set_select_multiple;\n-    gtk->gtk_file_chooser_get_current_folder =\n-                          fp_gtk_file_chooser_get_current_folder;\n-    gtk->gtk_file_chooser_get_filenames = fp_gtk_file_chooser_get_filenames;\n-    gtk->gtk_g_slist_length = fp_gtk_g_slist_length;\n-    gtk->g_signal_connect_data = fp_g_signal_connect_data;\n-    gtk->gtk_widget_show = fp_gtk_widget_show;\n-    gtk->gtk_main = fp_gtk_main;\n-    gtk->gtk_main_level = fp_gtk_main_level;\n-    gtk->g_path_get_dirname = fp_g_path_get_dirname;\n-    gtk->gdk_x11_drawable_get_xid = fp_gdk_x11_drawable_get_xid;\n-    gtk->gtk_widget_destroy = fp_gtk_widget_destroy;\n-    gtk->gtk_window_present = fp_gtk_window_present;\n-    gtk->gtk_window_move = fp_gtk_window_move;\n-    gtk->gtk_window_resize = fp_gtk_window_resize;\n-    gtk->get_window = &gtk2_get_window;\n-\n-    gtk->g_object_unref = fp_g_object_unref;\n-    gtk->g_list_append = fp_g_list_append;\n-    gtk->g_list_free = fp_g_list_free;\n-    gtk->g_list_free_full = fp_g_list_free_full;\n-}\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk2_interface.c","additions":0,"deletions":2603,"binary":false,"changes":2603,"status":"deleted"},{"patch":"@@ -1,448 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef HEADLESS\n-    #error This file should not be included in headless library\n-#endif\n-\n-#ifndef _GTK2_INTERFACE_H\n-#define _GTK2_INTERFACE_H\n-\n-#include <stdlib.h>\n-#include <jni.h>\n-#include <X11\/X.h>\n-#include \"gtk_interface.h\"\n-\n-#define GTK_HAS_FOCUS   (1 << 12)\n-#define GTK_HAS_DEFAULT (1 << 14)\n-\n-typedef enum\n-{\n-  GTK_WINDOW_TOPLEVEL,\n-  GTK_WINDOW_POPUP\n-} GtkWindowType;\n-\n-typedef enum\n-{\n-  G_PARAM_READABLE            = 1 << 0,\n-  G_PARAM_WRITABLE            = 1 << 1,\n-  G_PARAM_CONSTRUCT           = 1 << 2,\n-  G_PARAM_CONSTRUCT_ONLY      = 1 << 3,\n-  G_PARAM_LAX_VALIDATION      = 1 << 4,\n-  G_PARAM_PRIVATE             = 1 << 5\n-} GParamFlags;\n-\n-\/* We define all structure pointers to be void* *\/\n-typedef void GVfs;\n-\n-typedef void GdkColormap;\n-typedef void GdkDrawable;\n-typedef void GdkGC;\n-typedef void GdkPixmap;\n-\n-typedef void GtkFixed;\n-typedef void GtkMenuItem;\n-typedef void GtkMenuShell;\n-typedef void GtkWidgetClass;\n-typedef void PangoFontDescription;\n-typedef void GtkSettings;\n-\n-\/* Some real structures *\/\n-typedef struct\n-{\n-  guint32 pixel;\n-  guint16 red;\n-  guint16 green;\n-  guint16 blue;\n-} GdkColor;\n-\n-typedef struct {\n-  gint      fd;\n-  gushort   events;\n-  gushort   revents;\n-} GPollFD;\n-\n-typedef struct {\n-  gint x;\n-  gint y;\n-  gint width;\n-  gint height;\n-} GtkAllocation;\n-\n-typedef struct {\n-  gint width;\n-  gint height;\n-} GtkRequisition;\n-\n-typedef struct {\n-  GtkWidgetClass *g_class;\n-} GTypeInstance;\n-\n-typedef struct {\n-  gint left;\n-  gint right;\n-  gint top;\n-  gint bottom;\n-} GtkBorder;\n-\n-\/******************************************************\n- * FIXME: it is more safe to include gtk headers for\n- * the precise type definition of GType and other\n- * structures. This is a place where getting rid of gtk\n- * headers may be dangerous.\n- ******************************************************\/\n-\n-typedef struct\n-{\n-  GType         g_type;\n-\n-  union {\n-    gint        v_int;\n-    guint       v_uint;\n-    glong       v_long;\n-    gulong      v_ulong;\n-    gint64      v_int64;\n-    guint64     v_uint64;\n-    gfloat      v_float;\n-    gdouble     v_double;\n-    gpointer    v_pointer;\n-  } data[2];\n-} GValue;\n-\n-typedef struct\n-{\n-  GTypeInstance  g_type_instance;\n-\n-  gchar         *name;\n-  GParamFlags    flags;\n-  GType          value_type;\n-  GType          owner_type;\n-} GParamSpec;\n-\n-typedef struct {\n-  GTypeInstance g_type_instance;\n-  guint         ref_count;\n-  void         *qdata;\n-} GObject;\n-\n-typedef struct {\n-  GObject parent_instance;\n-  guint32 flags;\n-} GtkObject;\n-\n-typedef struct\n-{\n-  GObject parent_instance;\n-\n-  GdkColor fg[5];\n-  GdkColor bg[5];\n-  GdkColor light[5];\n-  GdkColor dark[5];\n-  GdkColor mid[5];\n-  GdkColor text[5];\n-  GdkColor base[5];\n-  GdkColor text_aa[5];          \/* Halfway between text\/base *\/\n-\n-  GdkColor black;\n-  GdkColor white;\n-  PangoFontDescription *font_desc;\n-\n-  gint xthickness;\n-  gint ythickness;\n-\n-  GdkGC *fg_gc[5];\n-  GdkGC *bg_gc[5];\n-  GdkGC *light_gc[5];\n-  GdkGC *dark_gc[5];\n-  GdkGC *mid_gc[5];\n-  GdkGC *text_gc[5];\n-  GdkGC *base_gc[5];\n-  GdkGC *text_aa_gc[5];\n-  GdkGC *black_gc;\n-  GdkGC *white_gc;\n-\n-  GdkPixmap *bg_pixmap[5];\n-} GtkStyle;\n-\n-typedef struct _GtkWidget GtkWidget;\n-struct _GtkWidget\n-{\n-  GtkObject object;\n-  guint16 private_flags;\n-  guint8 state;\n-  guint8 saved_state;\n-  gchar *name;\n-  GtkStyle *style;\n-  GtkRequisition requisition;\n-  GtkAllocation allocation;\n-  GdkWindow *window;\n-  GtkWidget *parent;\n-};\n-\n-typedef struct\n-{\n-  GtkWidget widget;\n-\n-  gfloat xalign;\n-  gfloat yalign;\n-\n-  guint16 xpad;\n-  guint16 ypad;\n-} GtkMisc;\n-\n-typedef struct {\n-  GtkWidget widget;\n-  GtkWidget *focus_child;\n-  guint border_width : 16;\n-  guint need_resize : 1;\n-  guint resize_mode : 2;\n-  guint reallocate_redraws : 1;\n-  guint has_focus_chain : 1;\n-} GtkContainer;\n-\n-typedef struct {\n-  GtkContainer container;\n-  GtkWidget *child;\n-} GtkBin;\n-\n-typedef struct {\n-  GtkBin bin;\n-  GdkWindow *event_window;\n-  gchar *label_text;\n-  guint activate_timeout;\n-  guint constructed : 1;\n-  guint in_button : 1;\n-  guint button_down : 1;\n-  guint relief : 2;\n-  guint use_underline : 1;\n-  guint use_stock : 1;\n-  guint depressed : 1;\n-  guint depress_on_activate : 1;\n-  guint focus_on_click : 1;\n-} GtkButton;\n-\n-typedef struct {\n-  GtkButton button;\n-  guint active : 1;\n-  guint draw_indicator : 1;\n-  guint inconsistent : 1;\n-} GtkToggleButton;\n-\n-typedef struct _GtkAdjustment GtkAdjustment;\n-struct _GtkAdjustment\n-{\n-  GtkObject parent_instance;\n-\n-  gdouble lower;\n-  gdouble upper;\n-  gdouble value;\n-  gdouble step_increment;\n-  gdouble page_increment;\n-  gdouble page_size;\n-};\n-\n-typedef enum\n-{\n-  GTK_UPDATE_CONTINUOUS,\n-  GTK_UPDATE_DISCONTINUOUS,\n-  GTK_UPDATE_DELAYED\n-} GtkUpdateType;\n-\n-typedef struct _GtkRange GtkRange;\n-struct _GtkRange\n-{\n-  GtkWidget widget;\n-  GtkAdjustment *adjustment;\n-  GtkUpdateType update_policy;\n-  guint inverted : 1;\n-  \/*< protected >*\/\n-  guint flippable : 1;\n-  guint has_stepper_a : 1;\n-  guint has_stepper_b : 1;\n-  guint has_stepper_c : 1;\n-  guint has_stepper_d : 1;\n-  guint need_recalc : 1;\n-  guint slider_size_fixed : 1;\n-  gint min_slider_size;\n-  GtkOrientation orientation;\n-  GdkRectangle range_rect;\n-  gint slider_start, slider_end;\n-  gint round_digits;\n-  \/*< private >*\/\n-  guint trough_click_forward : 1;\n-  guint update_pending : 1;\n-  \/*GtkRangeLayout * *\/ void *layout;\n-  \/*GtkRangeStepTimer * *\/ void* timer;\n-  gint slide_initial_slider_position;\n-  gint slide_initial_coordinate;\n-  guint update_timeout_id;\n-  GdkWindow *event_window;\n-};\n-\n-typedef struct _GtkProgressBar       GtkProgressBar;\n-\n-typedef enum\n-{\n-  GTK_PROGRESS_CONTINUOUS,\n-  GTK_PROGRESS_DISCRETE\n-} GtkProgressBarStyle;\n-\n-typedef enum\n-{\n-  GTK_PROGRESS_LEFT_TO_RIGHT,\n-  GTK_PROGRESS_RIGHT_TO_LEFT,\n-  GTK_PROGRESS_BOTTOM_TO_TOP,\n-  GTK_PROGRESS_TOP_TO_BOTTOM\n-} GtkProgressBarOrientation;\n-\n-typedef struct _GtkProgress       GtkProgress;\n-\n-struct _GtkProgress\n-{\n-  GtkWidget widget;\n-  GtkAdjustment *adjustment;\n-  GdkPixmap     *offscreen_pixmap;\n-  gchar         *format;\n-  gfloat         x_align;\n-  gfloat         y_align;\n-  guint          show_text : 1;\n-  guint          activity_mode : 1;\n-  guint          use_text_format : 1;\n-};\n-\n-struct _GtkProgressBar\n-{\n-  GtkProgress progress;\n-  GtkProgressBarStyle bar_style;\n-  GtkProgressBarOrientation orientation;\n-  guint blocks;\n-  gint  in_block;\n-  gint  activity_pos;\n-  guint activity_step;\n-  guint activity_blocks;\n-  gdouble pulse_fraction;\n-  guint activity_dir : 1;\n-  guint ellipsize : 3;\n-};\n-\n-\/**\n- * Returns :\n- * NULL if the GLib library is compatible with the given version, or a string\n- * describing the version mismatch.\n- * Please note that the glib_check_version() is available since 2.6,\n- * so you should use GLIB_CHECK_VERSION macro instead.\n- *\/\n-static gchar* (*fp_glib_check_version)(guint required_major, guint required_minor,\n-                       guint required_micro);\n-\n-\/**\n- * Returns :\n- *  TRUE if the GLib library is compatible with the given version\n- *\/\n-#define GLIB_CHECK_VERSION(major, minor, micro) \\\n-    (fp_glib_check_version && fp_glib_check_version(major, minor, micro) == NULL)\n-\n-\/**\n- * Returns :\n- * NULL if the GTK+ library is compatible with the given version, or a string\n- * describing the version mismatch.\n- *\/\n-static gchar* (*fp_gtk_check_version)(guint required_major, guint required_minor,\n-                       guint required_micro);\n-\n-static void gtk2_init(GtkApi* gtk);\n-\n-static void (*fp_g_free)(gpointer mem);\n-static void (*fp_g_object_unref)(gpointer object);\n-static GdkWindow *(*fp_gdk_get_default_root_window) (void);\n-\n-static int (*fp_gdk_pixbuf_get_bits_per_sample)(const GdkPixbuf *pixbuf);\n-static guchar *(*fp_gdk_pixbuf_get_pixels)(const GdkPixbuf *pixbuf);\n-static gboolean (*fp_gdk_pixbuf_get_has_alpha)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_height)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_n_channels)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_rowstride)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_width)(const GdkPixbuf *pixbuf);\n-static GdkPixbuf *(*fp_gdk_pixbuf_new_from_file)(const char *filename, GError **error);\n-static GdkColorspace (*fp_gdk_pixbuf_get_colorspace)(const GdkPixbuf *pixbuf);\n-\n-static GdkPixbuf *(*fp_gdk_pixbuf_get_from_drawable)(GdkPixbuf *dest,\n-        GdkDrawable *src, GdkColormap *cmap, int src_x, int src_y,\n-        int dest_x, int dest_y, int width, int height);\n-static GdkPixbuf *(*fp_gdk_pixbuf_scale_simple)(GdkPixbuf *src,\n-        int dest_width, int dest_heigh, GdkInterpType interp_type);\n-\n-\n-static void (*fp_gtk_widget_destroy)(void *widget);\n-static void (*fp_gtk_window_present)(GtkWindow *window);\n-static void (*fp_gtk_window_move)(GtkWindow *window, gint x, gint y);\n-static void (*fp_gtk_window_resize)(GtkWindow *window, gint width, gint height);\n-\n-\/**\n- * Function Pointers for GtkFileChooser\n- *\/\n-static gchar* (*fp_gtk_file_chooser_get_filename)(GtkFileChooser *chooser);\n-static void (*fp_gtk_widget_hide)(void *widget);\n-static void (*fp_gtk_main_quit)(void);\n-static void* (*fp_gtk_file_chooser_dialog_new)(const gchar *title,\n-    GtkWindow *parent, GtkFileChooserAction action,\n-    const gchar *first_button_text, ...);\n-static gboolean (*fp_gtk_file_chooser_set_current_folder)(GtkFileChooser *chooser,\n-    const gchar *filename);\n-static gboolean (*fp_gtk_file_chooser_set_filename)(GtkFileChooser *chooser,\n-    const char *filename);\n-static void (*fp_gtk_file_chooser_set_current_name)(GtkFileChooser *chooser,\n-    const gchar *name);\n-static void (*fp_gtk_file_filter_add_custom)(GtkFileFilter *filter,\n-    GtkFileFilterFlags needed, GtkFileFilterFunc func, gpointer data,\n-    GDestroyNotify notify);\n-static void (*fp_gtk_file_chooser_set_filter)(GtkFileChooser *chooser,\n-    GtkFileFilter *filter);\n-static GType (*fp_gtk_file_chooser_get_type)(void);\n-static GtkFileFilter* (*fp_gtk_file_filter_new)(void);\n-static void (*fp_gtk_file_chooser_set_do_overwrite_confirmation)(\n-    GtkFileChooser *chooser, gboolean do_overwrite_confirmation);\n-static void (*fp_gtk_file_chooser_set_select_multiple)(\n-    GtkFileChooser *chooser, gboolean select_multiple);\n-static gchar* (*fp_gtk_file_chooser_get_current_folder)(GtkFileChooser *chooser);\n-static GSList* (*fp_gtk_file_chooser_get_filenames)(GtkFileChooser *chooser);\n-static guint (*fp_gtk_g_slist_length)(GSList *list);\n-static gulong (*fp_g_signal_connect_data)(gpointer instance,\n-    const gchar *detailed_signal, GCallback c_handler, gpointer data,\n-    GClosureNotify destroy_data, GConnectFlags connect_flags);\n-static void (*fp_gtk_widget_show)(void *widget);\n-static void (*fp_gtk_main)(void);\n-static guint (*fp_gtk_main_level)(void);\n-static gchar* (*fp_g_path_get_dirname) (const gchar *file_name);\n-static XID (*fp_gdk_x11_drawable_get_xid) (GdkWindow *drawable);\n-\n-static GList* (*fp_g_list_append) (GList *list, gpointer data);\n-static void (*fp_g_list_free) (GList *list);\n-static void (*fp_g_list_free_full) (GList *list, GDestroyNotify free_func);\n-\n-static gboolean (*fp_gtk_show_uri)(GdkScreen *screen, const gchar *uri,\n-    guint32 timestamp, GError **error);\n-\n-#endif \/* !_GTK2_INTERFACE_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk2_interface.h","additions":0,"deletions":448,"binary":false,"changes":448,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-GtkApi* gtk2_load(JNIEnv *env, const char* lib_name);\n@@ -38,1 +37,0 @@\n-gboolean gtk2_check(const char* lib_name, gboolean load);\n@@ -59,7 +57,0 @@\n-    {\n-        GTK_2,\n-        JNI_LIB_NAME(\"gtk-x11-2.0\"),\n-        VERSIONED_JNI_LIB_NAME(\"gtk-x11-2.0\", \"0\"),\n-        &gtk2_load,\n-        &gtk2_check\n-    }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.c","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -678,1 +678,0 @@\n-\/\/glib_version_2_68 false for gtk2, as it comes from gtk3_interface.c\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3365,2 +3365,2 @@\n-resetKbdState( BYTE kstate[256]) {\n-    BYTE tmpState[256];\n+resetKbdState( BYTE (&kstate)[AwtToolkit::KB_STATE_SIZE]) {\n+    BYTE tmpState[AwtToolkit::KB_STATE_SIZE];\n@@ -3368,1 +3368,1 @@\n-    memmove(tmpState, kstate, 256 * sizeof(BYTE));\n+    memmove(tmpState, kstate, sizeof(kstate));\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,4 @@\n+    \/\/ this will be set to true only when the peer explicitly states (through a GOAWAY frame or\n+    \/\/ a relevant error code in reset frame) that the corresponding stream (id) wasn't processed\n+    private volatile boolean unprocessedByPeer;\n+\n@@ -268,0 +272,9 @@\n+\n+    final boolean isUnprocessedByPeer() {\n+        return this.unprocessedByPeer;\n+    }\n+\n+    \/\/ Marks the exchange as unprocessed by the peer\n+    final void markUnprocessedByPeer() {\n+        this.unprocessedByPeer = true;\n+    }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ExchangeImpl.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n@@ -361,0 +363,1 @@\n+    private final AtomicLong lastProcessedStreamInGoAway = new AtomicLong(-1);\n@@ -728,1 +731,3 @@\n-            if (connection.channel().isOpen()) {\n+            \/\/ we send a GOAWAY frame only if the remote side hasn't already indicated\n+            \/\/ the intention to close the connection by previously sending a GOAWAY of its own\n+            if (connection.channel().isOpen() && !isMarked(closedState, HALF_CLOSED_REMOTE)) {\n@@ -1208,7 +1213,40 @@\n-    private void handleGoAway(GoAwayFrame frame)\n-        throws IOException\n-    {\n-        if (markHalfClosedLRemote()) {\n-            shutdown(new IOException(\n-                    connection.channel().getLocalAddress()\n-                            + \": GOAWAY received\"));\n+    private void handleGoAway(final GoAwayFrame frame) {\n+        final long lastProcessedStream = frame.getLastStream();\n+        assert lastProcessedStream >= 0 : \"unexpected last stream id: \"\n+                + lastProcessedStream + \" in GOAWAY frame\";\n+\n+        markHalfClosedRemote();\n+        setFinalStream(); \/\/ don't allow any new streams on this connection\n+        if (debug.on()) {\n+            debug.log(\"processing incoming GOAWAY with last processed stream id:%s in frame %s\",\n+                    lastProcessedStream, frame);\n+        }\n+        \/\/ see if this connection has previously received a GOAWAY from the peer and if yes\n+        \/\/ then check if this new last processed stream id is lesser than the previous\n+        \/\/ known last processed stream id. Only update the last processed stream id if the new\n+        \/\/ one is lesser than the previous one.\n+        long prevLastProcessed = lastProcessedStreamInGoAway.get();\n+        while (prevLastProcessed == -1 || lastProcessedStream < prevLastProcessed) {\n+            if (lastProcessedStreamInGoAway.compareAndSet(prevLastProcessed,\n+                    lastProcessedStream)) {\n+                break;\n+            }\n+            prevLastProcessed = lastProcessedStreamInGoAway.get();\n+        }\n+        handlePeerUnprocessedStreams(lastProcessedStreamInGoAway.get());\n+    }\n+\n+    private void handlePeerUnprocessedStreams(final long lastProcessedStream) {\n+        final AtomicInteger numClosed = new AtomicInteger(); \/\/ atomic merely to allow usage within lambda\n+        streams.forEach((id, exchange) -> {\n+            if (id > lastProcessedStream) {\n+                \/\/ any streams with an stream id higher than the last processed stream\n+                \/\/ can be retried (on a new connection). we close the exchange as unprocessed\n+                \/\/ to facilitate the retrying.\n+                client2.client().theExecutor().ensureExecutedAsync(exchange::closeAsUnprocessed);\n+                numClosed.incrementAndGet();\n+            }\n+        });\n+        if (debug.on()) {\n+            debug.log(numClosed.get() + \" stream(s), with id greater than \" + lastProcessedStream\n+                    + \", will be closed as unprocessed\");\n@@ -1748,1 +1786,1 @@\n-    private boolean markHalfClosedLRemote() {\n+    private boolean markHalfClosedRemote() {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":48,"deletions":10,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    volatile boolean expiredOnce;\n+    volatile boolean retriedOnce;\n@@ -472,1 +472,1 @@\n-                                expiredOnce = false;\n+                                retriedOnce = false;\n@@ -485,1 +485,1 @@\n-                        CompletableFuture<Response> errorCF = getExceptionalCF(ex);\n+                        CompletableFuture<Response> errorCF = getExceptionalCF(ex, exch.exchImpl);\n@@ -557,1 +557,1 @@\n-    private CompletableFuture<Response> getExceptionalCF(Throwable t) {\n+    private CompletableFuture<Response> getExceptionalCF(Throwable t, ExchangeImpl<?> exchImpl) {\n@@ -563,0 +563,1 @@\n+        final boolean retryAsUnprocessed = exchImpl != null && exchImpl.isUnprocessedByPeer();\n@@ -567,1 +568,1 @@\n-        } else if (retryOnFailure(t)) {\n+        } else if (retryAsUnprocessed || retryOnFailure(t)) {\n@@ -574,2 +575,4 @@\n-                if (!canRetryRequest(currentreq)) {\n-                    return failedFuture(cause); \/\/ fails with original cause\n+                if (!retryAsUnprocessed && !canRetryRequest(currentreq)) {\n+                    \/\/ a (peer) processed request which cannot be retried, fail with\n+                    \/\/ the original cause\n+                    return failedFuture(cause);\n@@ -581,1 +584,1 @@\n-            if (!expiredOnce) {\n+            if (!retriedOnce) {\n@@ -584,1 +587,1 @@\n-                            + \" (async): retrying due to: \", t);\n+                            + \" (async): retrying \" + currentreq + \" due to: \", t);\n@@ -586,1 +589,1 @@\n-                expiredOnce = true;\n+                retriedOnce = true;\n@@ -597,1 +600,1 @@\n-                            + \" (async): already retried once.\", t);\n+                            + \" (async): already retried once \" + currentreq, t);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/MultiExchange.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -644,4 +644,17 @@\n-                int error = frame.getErrorCode();\n-                IOException e = new IOException(\"Received RST_STREAM: \"\n-                        + ErrorFrame.stringForCode(error));\n-                if (errorRef.compareAndSet(null, e)) {\n+                final int error = frame.getErrorCode();\n+                if (error == ErrorFrame.REFUSED_STREAM) {\n+                    \/\/ A REFUSED_STREAM error code implies that the stream wasn't processed by the\n+                    \/\/ peer and the client is free to retry the request afresh.\n+                    \/\/ Here we arrange for the request to be retried.\n+                    if (debug.on()) {\n+                        debug.log(\"request unprocessed by peer (REFUSED_STREAM) \" + this.request);\n+                    }\n+                    closeAsUnprocessed();\n+                    return;\n+                }\n+                final String reason = ErrorFrame.stringForCode(error);\n+                final IOException ioe = new IOException(\"Received RST_STREAM: \" + reason);\n+                if (debug.on()) {\n+                    debug.log(streamid + \" received RST_STREAM with code: \" + reason);\n+                }\n+                if (errorRef.compareAndSet(null, ioe)) {\n@@ -649,1 +662,1 @@\n-                        subscriber.onError(e);\n+                        subscriber.onError(ioe);\n@@ -652,1 +665,2 @@\n-                completeResponseExceptionally(e);\n+                final Throwable failureCause = errorRef.get();\n+                completeResponseExceptionally(failureCause);\n@@ -654,1 +668,1 @@\n-                    requestBodyCF.completeExceptionally(errorRef.get()); \/\/ we may be sending the body..\n+                    requestBodyCF.completeExceptionally(failureCause); \/\/ we may be sending the body..\n@@ -657,1 +671,1 @@\n-                    responseBodyCF.completeExceptionally(errorRef.get());\n+                    responseBodyCF.completeExceptionally(failureCause);\n@@ -1666,1 +1680,23 @@\n-        return connection.dbgString() + \"\/Stream(\"+streamid+\")\";\n+        final int id = streamid;\n+        final String sid = id == 0 ? \"?\" : String.valueOf(id);\n+        return connection.dbgString() + \"\/Stream(\" + sid + \")\";\n+    }\n+\n+    \/**\n+     * An unprocessed exchange is one that hasn't been processed by a peer. The local end of the\n+     * connection would be notified about such exchanges when it receives a GOAWAY frame with\n+     * a stream id that tells which exchanges have been unprocessed.\n+     * This method is called on such unprocessed exchanges and the implementation of this method\n+     * will arrange for the request, corresponding to this exchange, to be retried afresh on a\n+     * new connection.\n+     *\/\n+    void closeAsUnprocessed() {\n+        \/\/ We arrange for the request to be retried on a new connection as allowed by the RFC-9113\n+        markUnprocessedByPeer();\n+        this.errorRef.compareAndSet(null, new IOException(\"request not processed by peer\"));\n+        if (debug.on()) {\n+            debug.log(\"closing \" + this.request + \" as unprocessed by peer\");\n+        }\n+        \/\/ close the exchange and complete the response CF exceptionally\n+        close();\n+        completeResponseExceptionally(this.errorRef.get());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":45,"deletions":9,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,6 @@\n-            \/\/ Odd stream numbers (client streams) should have been registered.\n+            \/\/ A client initiated stream might be closed (as unprocessed, due to a\n+            \/\/ GOAWAY received on the connection) even before the stream is\n+            \/\/ registered with this WindowController instance (when sending out request headers).\n+            \/\/ Thus, for client initiated streams, we don't enforce the presence of the\n+            \/\/ stream in the registered \"streams\" map.\n+\n@@ -107,3 +112,1 @@\n-            if (old == null && isClientStream) {\n-                throw new InternalError(\"Expected entry for streamid: \" + streamid);\n-            } else if (old != null && !isClientStream) {\n+            if (old != null && !isClientStream) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/WindowController.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,3 @@\n-        return super.toString() + \" Debugdata: \" + new String(debugData, UTF_8);\n+        return super.toString()\n+                + \" lastStreamId=\" + lastStream\n+                + \", Debugdata: \" + new String(debugData, UTF_8);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/GoAwayFrame.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1222,3 +1222,11 @@\n-                Type tDesc = types.findDescriptorType(types.capture(t));\n-                Type tDescNoCapture = types.findDescriptorType(t);\n-                Type sDesc = types.findDescriptorType(s);\n+                Type tDesc;\n+                Type tDescNoCapture;\n+                Type sDesc;\n+                try {\n+                    tDesc = types.findDescriptorType(types.capture(t));\n+                    tDescNoCapture = types.findDescriptorType(t);\n+                    sDesc = types.findDescriptorType(s);\n+                } catch (Types.FunctionDescriptorLookupError ex) {\n+                    \/\/ don't report, a more meaningful error should be reported upstream\n+                    return false;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.function.BiFunction;\n@@ -42,0 +41,1 @@\n+import java.util.stream.IntStream;\n@@ -2464,4 +2464,0 @@\n-            \/\/ Search the structure of the type to find the contained types at each type path\n-            Map<Type, List<Attribute.TypeCompound>> attributesByType = new HashMap<>();\n-            new TypeAnnotationLocator(attributesByPath, attributesByType).visit(type, List.nil());\n-\n@@ -2469,2 +2465,1 @@\n-            type = new TypeAnnotationTypeMapping(attributesByType).visit(type, null);\n-            Assert.check(attributesByType.isEmpty(), \"Failed to apply annotations to types\");\n+            type = new TypeAnnotationStructuralTypeMapping(attributesByPath).visit(type, List.nil());\n@@ -2498,2 +2493,4 @@\n-     * Visit all contained types, assembling a type path to represent the current location, and\n-     * record the types at each type path that need to be annotated.\n+     * A type mapping that rewrites the type to include type annotations.\n+     *\n+     * <p>This logic is similar to {@link Type.StructuralTypeMapping}, but also tracks the path to\n+     * the contained types being rewritten, and so cannot easily share the existing logic.\n@@ -2501,2 +2498,3 @@\n-    private static class TypeAnnotationLocator\n-            extends Types.DefaultTypeVisitor<Void, List<TypeAnnotationPosition.TypePathEntry>> {\n+    private static final class TypeAnnotationStructuralTypeMapping\n+            extends Types.TypeMapping<List<TypeAnnotationPosition.TypePathEntry>> {\n+\n@@ -2504,2 +2502,1 @@\n-                          ListBuffer<Attribute.TypeCompound>> attributesByPath;\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n+                ListBuffer<Attribute.TypeCompound>> attributesByPath;\n@@ -2507,1 +2504,1 @@\n-        private TypeAnnotationLocator(\n+        private TypeAnnotationStructuralTypeMapping(\n@@ -2509,2 +2506,1 @@\n-                        attributesByPath,\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n+                    attributesByPath) {\n@@ -2512,1 +2508,0 @@\n-            this.attributesByType = attributesByType;\n@@ -2515,0 +2510,1 @@\n+\n@@ -2516,1 +2512,1 @@\n-        public Void visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+        public Type visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n@@ -2522,3 +2518,4 @@\n-            List<ClassType> enclosing = List.nil();\n-            for (Type curr = t;\n-                    curr != null && curr != Type.noType;\n+            Type outer = t.getEnclosingType();\n+            Type outer1 = outer != Type.noType ? visit(outer, path) : outer;\n+            for (Type curr = t.getEnclosingType();\n+                    curr != Type.noType;\n@@ -2526,11 +2523,0 @@\n-                enclosing = enclosing.prepend((ClassType) curr);\n-            }\n-            for (ClassType te : enclosing) {\n-                if (te.typarams_field != null) {\n-                    int i = 0;\n-                    for (Type typaram : te.typarams_field) {\n-                        visit(typaram, path.append(new TypeAnnotationPosition.TypePathEntry(\n-                                TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i++)));\n-                    }\n-                }\n-                visitType(te, path);\n@@ -2539,1 +2525,6 @@\n-            return null;\n+            List<Type> typarams = t.getTypeArguments();\n+            List<Type> typarams1 = rewriteTypeParams(path, typarams);\n+            if (outer1 != outer || typarams != typarams1) {\n+                t = new ClassType(outer1, typarams1, t.tsym, t.getMetadata());\n+            }\n+            return reannotate(t, path);\n@@ -2542,5 +2533,6 @@\n-        @Override\n-        public Void visitWildcardType(\n-                WildcardType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.type, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n-            return super.visitWildcardType(t, path);\n+        private List<Type> rewriteTypeParams(\n+                List<TypeAnnotationPosition.TypePathEntry> path, List<Type> typarams) {\n+            var i = IntStream.iterate(0, x -> x + 1).iterator();\n+            return typarams.map(typaram -> visit(typaram,\n+                    path.append(new TypeAnnotationPosition.TypePathEntry(\n+                            TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i.nextInt()))));\n@@ -2550,3 +2542,10 @@\n-        public Void visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n-            return super.visitArrayType(t, path);\n+        public Type visitWildcardType(\n+                WildcardType wt, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type t = wt.type;\n+            if (t != null) {\n+                t = visit(t, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n+            }\n+            if (t != wt.type) {\n+                wt = new WildcardType(t, wt.kind, wt.tsym, wt.bound, wt.getMetadata());\n+            }\n+            return reannotate(wt, path);\n@@ -2556,4 +2555,6 @@\n-        public Void visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n-            if (attributes != null) {\n-                attributesByType.put(t, attributes.toList());\n+        public Type visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type elemtype = t.elemtype;\n+            Type elemtype1 =\n+                    visit(elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n+            if (elemtype1 != elemtype)  {\n+                t = new ArrayType(elemtype1, t.tsym, t.getMetadata());\n@@ -2561,1 +2562,1 @@\n-            return null;\n+            return reannotate(t, path);\n@@ -2563,4 +2564,0 @@\n-    }\n-\n-    \/** A type mapping that rewrites the type to include type annotations. *\/\n-    private static class TypeAnnotationTypeMapping extends Type.StructuralTypeMapping<Void> {\n@@ -2568,5 +2565,3 @@\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n-\n-        private TypeAnnotationTypeMapping(\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n-            this.attributesByType = attributesByType;\n+        @Override\n+        public Type visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            return reannotate(t, path);\n@@ -2575,8 +2570,4 @@\n-        private <T extends Type> Type reannotate(T t, BiFunction<T, Void, Type> f) {\n-            \/\/ We're relying on object identify of Type instances to record where the annotations\n-            \/\/ need to be added, so we have to retrieve the annotations for each type before\n-            \/\/ rewriting it, and then add them after its contained types have been rewritten.\n-            List<Attribute.TypeCompound> attributes = attributesByType.remove(t);\n-            Type mapped = f.apply(t, null);\n-            if (attributes == null) {\n-                return mapped;\n+        Type reannotate(Type type, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            List<Attribute.TypeCompound> attributes = attributesForPath(path);\n+            if (attributes.isEmpty()) {\n+                return type;\n@@ -2586,1 +2577,1 @@\n-            TypeMetadata.Annotations existing = mapped.getMetadata(TypeMetadata.Annotations.class);\n+            TypeMetadata.Annotations existing = type.getMetadata(TypeMetadata.Annotations.class);\n@@ -2589,1 +2580,1 @@\n-                return mapped;\n+                return type;\n@@ -2591,1 +2582,1 @@\n-            return mapped.annotatedType(attributes);\n+            return type.annotatedType(attributes);\n@@ -2594,18 +2585,4 @@\n-        @Override\n-        public Type visitClassType(ClassType t, Void unused) {\n-            return reannotate(t, super::visitClassType);\n-        }\n-\n-        @Override\n-        public Type visitWildcardType(WildcardType t, Void unused) {\n-            return reannotate(t, super::visitWildcardType);\n-        }\n-\n-        @Override\n-        public Type visitArrayType(ArrayType t, Void unused) {\n-            return reannotate(t, super::visitArrayType);\n-        }\n-\n-        @Override\n-        public Type visitType(Type t, Void unused) {\n-            return reannotate(t, (x, u) -> x);\n+        List<Attribute.TypeCompound> attributesForPath(\n+                List<TypeAnnotationPosition.TypePathEntry> path) {\n+            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n+            return attributes != null ? attributes.toList() : List.nil();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":61,"deletions":84,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible={0} wurde hier nicht erwartet\\n(Um einen qualifizierten Typ zu annotieren, schreiben Sie {1}.{2})\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=Scoping-Konstrukt kann nicht mit type-use-Annotation versehen werden: {0}\n+compiler.misc.type.annotation.1=Typannotation {0} ist\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=Scoping-Konstrukt kann nicht mit type-use-Annotationen versehen werden: {0}\n+compiler.misc.type.annotation=Typannotationen {0} sind\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_de.properties","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible=ここでは{0}は予期されていません\\n(修飾されたタイプに注釈を付けるには、{1}.{2}と記述します)\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=スコープ・コンストラクトを型使用注釈で注釈付けすることはできません: {0}\n+compiler.misc.type.annotation.1=タイプ注釈{0}は\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=スコープ・コンストラクトを型使用注釈で注釈付けすることはできません: {0}\n+compiler.misc.type.annotation=タイプ注釈{0}は\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_ja.properties","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-compiler.err.already.annotated={0} {1}已进行注释\n+compiler.err.already.annotated={0} {1} 已进行批注\n@@ -645,1 +645,1 @@\n-compiler.err.static.methods.cannot.be.annotated.with.override=不能使用 @Override 注释静态方法\n+compiler.err.static.methods.cannot.be.annotated.with.override=不能使用 @Override 对静态方法进行批注\n@@ -1641,1 +1641,1 @@\n-compiler.warn.missing.deprecated.annotation=未使用 @Deprecated 对已过时的项目进行注释\n+compiler.warn.missing.deprecated.annotation=未使用 @Deprecated 对已过时的项目进行批注\n@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible={0} 不应出现在此处\\n（要对限定类型进行批注，请编写 {1}.{2}）\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=无法使用 type-use 批注 {0} 来批注确定作用域结构\n+compiler.misc.type.annotation.1=类型批注 {0} 为\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=无法使用 type-use 批注 {0} 来批注确定作用域结构\n+compiler.misc.type.annotation=类型批注 {0} 为\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_zh_CN.properties","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-launcher.err.invalid.value.for.source=--source 选项的值无效：{0}\\n\n+launcher.err.invalid.value.for.source=--source 选项的值无效：{0}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/launcher_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+ *\n+ * The value returned by {@code Architecture#getName} for an instance of this class is {@code \"aarch64\"}.\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/aarch64\/AArch64.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+ *\n+ * The value returned by {@code Architecture#getName} for an instance of this class is {@code \"AMD64\"}.\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-     * @return the string representation of this architecture\n+     * @return a lowercase version of {@linkplain #getName name}\n@@ -129,3 +129,8 @@\n-    \/**\n-     * Gets the name of this architecture.\n-     *\/\n+    \/\/\/ Gets the name of this architecture. The value returned for\n+    \/\/\/ each architecture is shown in the table below.\n+    \/\/\/\n+    \/\/\/ | Name      | Receiver type               |\n+    \/\/\/ |-----------|-----------------------------|\n+    \/\/\/ | \"aarch64\" | [jdk.vm.ci.aarch64.AArch64] |\n+    \/\/\/ | \"AMD64\"   | [jdk.vm.ci.amd64.AMD64]     |\n+    \/\/\/ | \"riscv64\" | [jdk.vm.ci.riscv64.RISCV64] |\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/Architecture.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -566,0 +566,1 @@\n+            writeBoolean(\"hasScopedAccess\", nmethod.hasScopedAccess());\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotCompiledCodeStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,18 @@\n+\n+    \/**\n+     * Determines if {@code methods} contains at least one entry for which {@code HotSpotResolvedJavaMethod.isScoped()} returns true.\n+     *\/\n+    public boolean hasScopedAccess() {\n+        if (methods == null) {\n+            return false;\n+        }\n+        for (ResolvedJavaMethod method : methods) {\n+            if (method instanceof HotSpotResolvedJavaMethod hotSpotMethod) {\n+                if (hotSpotMethod.isScoped()) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotCompiledNmethod.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-        return UNSAFE.getShort(getMethodPointer() + config().methodFlagsOffset);\n+        return UNSAFE.getInt(getMethodPointer() + config().methodFlagsOffset);\n@@ -182,1 +182,1 @@\n-        return UNSAFE.getChar(getConstMethod() + config().constMethodFlagsOffset);\n+        return UNSAFE.getInt(getConstMethod() + config().constMethodFlagsOffset);\n@@ -327,0 +327,11 @@\n+    \/**\n+     * Returns true if this method has a\n+     * {@code jdk.internal.misc.ScopedMemoryAccess.Scoped} annotation.\n+     *\n+     * @return true if Scoped annotation present, false otherwise\n+     *\/\n+    @Override\n+    public boolean isScoped() {\n+        return (getConstMethodFlags() & config().constMethodFlagsIsScoped) != 0;\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedJavaMethodImpl.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -197,0 +197,1 @@\n+    final int constMethodFlagsIsScoped = getConstant(\"ConstMethodFlags::_misc_is_scoped\", Integer.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -466,0 +466,10 @@\n+    \/**\n+     * Returns true if this method has a\n+     * {@code jdk.internal.misc.ScopedMemoryAccess.Scoped} annotation.\n+     *\n+     * @return true if Scoped annotation present, false otherwise.\n+     *\/\n+    default boolean isScoped() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/ResolvedJavaMethod.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+ *\n+ * The value returned by {@code Architecture#getName} for an instance of this class is {@code \"riscv64\"}.\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/riscv64\/RISCV64.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,6 +41,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -48,0 +43,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -111,1 +112,1 @@\n-            content.add(new HtmlTree(TagName.WBR));\n+            content.add(new HtmlTree(HtmlTag.WBR));\n@@ -123,1 +124,1 @@\n-        Content memberLink = writer.getDocLink(context, te, ee, name(ee), HtmlStyle.memberNameLink);\n+        Content memberLink = writer.getDocLink(context, te, ee, name(ee), HtmlStyles.memberNameLink);\n@@ -146,1 +147,1 @@\n-            target.add(new HtmlTree(TagName.BR));\n+            target.add(new HtmlTree(HtmlTag.BR));\n@@ -235,1 +236,1 @@\n-            target.add(new HtmlTree(TagName.WBR));\n+            target.add(new HtmlTree(HtmlTag.WBR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -47,5 +47,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -453,1 +454,1 @@\n-        var code = new HtmlTree(TagName.CODE);\n+        var code = new HtmlTree(HtmlTag.CODE);\n@@ -521,1 +522,1 @@\n-            target.add(HtmlTree.DIV(HtmlStyle.deprecationBlock, output));\n+            target.add(HtmlTree.DIV(HtmlStyles.deprecationBlock, output));\n@@ -573,1 +574,1 @@\n-        var useTable = new Table<Void>(HtmlStyle.summaryTable)\n+        var useTable = new Table<Void>(HtmlStyles.summaryTable)\n@@ -575,1 +576,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -591,1 +592,1 @@\n-                var name = HtmlTree.SPAN(HtmlStyle.typeNameLabel);\n+                var name = HtmlTree.SPAN(HtmlStyles.typeNameLabel);\n@@ -672,1 +673,1 @@\n-        return new HtmlTree(TagName.CODE);\n+        return new HtmlTree(HtmlTag.CODE);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -28,4 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -33,1 +29,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -36,0 +33,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n@@ -138,2 +139,2 @@\n-                    HtmlStyle.title, title);\n-            var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                    HtmlStyles.title, title);\n+            var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractOverviewIndexWriter.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,8 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.toolkit.util.ClassTree;\n-import jdk.javadoc.internal.doclets.toolkit.util.ClassTree.Hierarchy;\n-import jdk.javadoc.internal.doclets.toolkit.util.DocPath;\n-\n-import javax.lang.model.element.TypeElement;\n@@ -40,0 +32,10 @@\n+import javax.lang.model.element.TypeElement;\n+\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.doclets.toolkit.util.ClassTree;\n+import jdk.javadoc.internal.doclets.toolkit.util.ClassTree.Hierarchy;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocPath;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+\n@@ -80,1 +82,1 @@\n-            var ul = new HtmlTree(TagName.UL);\n+            var ul = new HtmlTree(HtmlTag.UL);\n@@ -82,2 +84,2 @@\n-                var li = new HtmlTree(TagName.LI);\n-                li.setStyle(HtmlStyle.circle);\n+                var li = new HtmlTree(HtmlTag.LI);\n+                li.setStyle(HtmlStyles.circle);\n@@ -107,1 +109,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.hierarchy, sectionHeading);\n+            var section = HtmlTree.SECTION(HtmlStyles.hierarchy, sectionHeading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -36,4 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+\n@@ -41,0 +38,2 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -44,0 +43,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -82,1 +84,1 @@\n-        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyles.summaryTable)\n@@ -84,1 +86,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -99,2 +101,2 @@\n-                HtmlStyle.title, titleContent);\n-        var headerDiv = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                HtmlStyles.title, titleContent);\n+        var headerDiv = HtmlTree.DIV(HtmlStyles.header, pHeading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +35,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -63,2 +64,2 @@\n-                HtmlStyle.title, titleContent);\n-        var headerDiv = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                HtmlStyles.title, titleContent);\n+        var headerDiv = HtmlTree.DIV(HtmlStyles.header, pHeading);\n@@ -80,1 +81,1 @@\n-        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -83,1 +84,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllPackagesIndexWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Comment;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +38,5 @@\n+import jdk.javadoc.internal.html.Comment;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -99,1 +100,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -184,1 +185,1 @@\n-        writer.addSummary(HtmlStyle.memberSummary,\n+        writer.addSummary(HtmlStyles.memberSummary,\n@@ -212,1 +213,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -241,1 +242,1 @@\n-        return getMember(HtmlTree.SECTION(HtmlStyle.memberDetails, c));\n+        return getMember(HtmlTree.SECTION(HtmlStyles.memberDetails, c));\n@@ -281,1 +282,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -284,1 +285,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -295,1 +296,1 @@\n-                name(member), HtmlStyle.memberNameLink);\n+                name(member), HtmlStyles.memberNameLink);\n@@ -334,1 +335,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -46,0 +42,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -53,0 +50,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -247,1 +248,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -250,1 +251,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -273,1 +274,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -276,1 +277,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -291,1 +292,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.blockList);\n+        var ul = HtmlTree.UL(HtmlStyles.blockList);\n@@ -293,1 +294,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.detail)\n+            var section = HtmlTree.SECTION(HtmlStyles.detail)\n@@ -304,1 +305,1 @@\n-        var li = HtmlTree.SECTION(HtmlStyle.classUses, ul);\n+        var li = HtmlTree.SECTION(HtmlStyles.classUses, ul);\n@@ -425,1 +426,1 @@\n-        headingContent.add(new HtmlTree(TagName.BR));\n+        headingContent.add(new HtmlTree(HtmlTag.BR));\n@@ -428,2 +429,2 @@\n-                HtmlStyle.title, headingContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headingContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javax.lang.model.element.TypeParameterElement;\n@@ -48,6 +49,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -61,0 +57,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -157,1 +159,1 @@\n-        Content c = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        var c = new ContentBuilder();\n@@ -166,5 +168,7 @@\n-        buildClassSignature(c);\n-        buildDeprecationInfo(c);\n-        buildClassDescription(c);\n-        buildClassTagInfo(c);\n-\n+        c.add(new HtmlTree(HtmlTag.HR));\n+        var div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n+        buildClassSignature(div);\n+        buildDeprecationInfo(div);\n+        buildClassDescription(div);\n+        buildClassTagInfo(div);\n+        c.add(div);\n@@ -433,4 +437,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n-        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n-                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n-                .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -438,2 +439,2 @@\n-                HtmlStyle.title, Text.of(header));\n-        heading.add(getTypeParameterLinks(linkInfo));\n+                HtmlStyles.title, Text.of(header));\n+        heading.add(getTypeParameters());\n@@ -447,0 +448,29 @@\n+    \/\/ Renders type parameters for the class heading, creating id attributes\n+    \/\/ if @param block tags are missing in doc comment.\n+    private Content getTypeParameters() {\n+        var content = new ContentBuilder();\n+        var typeParams = typeElement.getTypeParameters();\n+        if (!typeParams.isEmpty()) {\n+            \/\/ Generate id attributes if @param tags are missing for type parameters.\n+            \/\/ Note that this does not handle the case where some but not all @param tags are missing.\n+            var needsId = !utils.hasBlockTag(typeElement, DocTree.Kind.PARAM);\n+            var linkInfo = new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n+                    .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n+            content.add(\"<\");\n+            var first = true;\n+            for (TypeParameterElement t : typeParams) {\n+                if (!first) {\n+                    content.add(\",\").add(new HtmlTree(HtmlTag.WBR));\n+                }\n+                var typeParamLink = getLink(linkInfo.forType(t.asType()));\n+                content.add(needsId\n+                        ? HtmlTree.SPAN_ID(htmlIds.forTypeParam(t.getSimpleName().toString(), typeElement), typeParamLink)\n+                        : typeParamLink);\n+                first = false;\n+            }\n+            content.add(\">\");\n+        }\n+        return content;\n+    }\n+\n@@ -466,1 +496,1 @@\n-        return getMember(HtmlIds.CLASS_DESCRIPTION, HtmlStyle.classDescription, classInfo);\n+        return getMember(HtmlIds.CLASS_DESCRIPTION, HtmlStyles.classDescription, classInfo);\n@@ -475,1 +505,0 @@\n-        classInfo.add(new HtmlTree(TagName.HR));\n@@ -517,1 +546,1 @@\n-            var entry = HtmlTree.DIV(HtmlStyle.inheritance, getClassHelperContent(type));\n+            var entry = HtmlTree.DIV(HtmlStyles.inheritance, getClassHelperContent(type));\n@@ -567,1 +596,1 @@\n-                target.add(HtmlTree.DL(HtmlStyle.notes, paramInfo));\n+                target.add(HtmlTree.DL(HtmlStyles.notes, paramInfo));\n@@ -581,1 +610,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -593,1 +622,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -612,1 +641,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -623,1 +652,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -636,1 +665,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -650,1 +679,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -663,1 +692,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -665,1 +694,1 @@\n-            var dd = new HtmlTree(TagName.DD);\n+            var dd = new HtmlTree(HtmlTag.DD);\n@@ -675,2 +704,2 @@\n-            var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(typeElement));\n-            var div = HtmlTree.DIV(HtmlStyle.deprecationBlock, deprLabel);\n+            var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(typeElement));\n+            var div = HtmlTree.DIV(HtmlStyles.deprecationBlock, deprLabel);\n@@ -729,1 +758,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.details, content);\n+        var section = HtmlTree.SECTION(HtmlStyles.details, content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":62,"deletions":33,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -42,7 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -50,1 +43,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +50,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -331,2 +332,2 @@\n-                 HtmlStyle.title, titleContent);\n-         var div = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                 HtmlStyles.title, titleContent);\n+         var div = HtmlTree.DIV(HtmlStyles.header, pHeading);\n@@ -338,1 +339,1 @@\n-        return HtmlTree.UL(HtmlStyle.contentsList);\n+        return HtmlTree.UL(HtmlStyles.contentsList);\n@@ -364,1 +365,1 @@\n-        summarySection = HtmlTree.SECTION(HtmlStyle.constantsSummary, heading)\n+        summarySection = HtmlTree.SECTION(HtmlStyles.constantsSummary, heading)\n@@ -371,1 +372,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -397,1 +398,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -400,1 +401,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -416,1 +417,1 @@\n-        var code = new HtmlTree(TagName.CODE)\n+        var code = new HtmlTree(HtmlTag.CODE)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -36,7 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -45,0 +39,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -114,1 +115,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -196,1 +197,1 @@\n-        writer.addSummary(HtmlStyle.constructorSummary,\n+        writer.addSummary(HtmlStyles.constructorSummary,\n@@ -219,1 +220,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -250,1 +251,1 @@\n-                HtmlTree.SECTION(HtmlStyle.constructorDetails)\n+                HtmlTree.SECTION(HtmlStyles.constructorDetails)\n@@ -282,2 +283,2 @@\n-            bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colConstructorName,\n-                    HtmlStyle.colLast);\n+            bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colConstructorName,\n+                    HtmlStyles.colLast);\n@@ -285,1 +286,1 @@\n-            bodyRowStyles = Arrays.asList(HtmlStyle.colConstructorName, HtmlStyle.colLast);\n+            bodyRowStyles = Arrays.asList(HtmlStyles.colConstructorName, HtmlStyles.colLast);\n@@ -289,1 +290,1 @@\n-                HtmlStyle.summaryTable)\n+                HtmlStyles.summaryTable)\n@@ -302,1 +303,1 @@\n-            var code = new HtmlTree(TagName.CODE);\n+            var code = new HtmlTree(HtmlTag.CODE);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -39,0 +36,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Contents.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,3 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,0 +38,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -82,1 +84,1 @@\n-            Content tabs = HtmlTree.DIV(HtmlStyle.checkboxes, contents.getContent(\n+            Content tabs = HtmlTree.DIV(HtmlStyles.checkboxes, contents.getContent(\n@@ -128,1 +130,1 @@\n-            table.setGridStyle(HtmlStyle.threeColumnReleaseSummary);\n+            table.setGridStyle(HtmlStyles.threeColumnReleaseSummary);\n@@ -173,1 +175,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,10 @@\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ModuleElement;\n+import javax.lang.model.element.PackageElement;\n+import javax.tools.JavaFileManager.Location;\n+\n@@ -32,0 +42,2 @@\n+\n+import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n@@ -33,1 +45,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -41,13 +52,3 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n-\n-import javax.lang.model.element.Element;\n-import javax.lang.model.element.ModuleElement;\n-import javax.lang.model.element.PackageElement;\n-import javax.tools.JavaFileManager.Location;\n-\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -252,1 +253,1 @@\n-                        switch (HtmlTag.get(startElem.getName())) {\n+                        switch (HtmlTag.of(startElem.getName())) {\n@@ -270,1 +271,1 @@\n-                        switch (HtmlTag.get(endElem.getName())) {\n+                        switch (HtmlTag.of(endElem.getName())) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandler.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +35,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -78,1 +79,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -141,1 +142,1 @@\n-        writer.addSummary(HtmlStyle.constantsSummary,\n+        writer.addSummary(HtmlStyles.constantsSummary,\n@@ -159,1 +160,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, enumConstantsContent)\n+        return HtmlTree.SECTION(HtmlStyles.detail, enumConstantsContent)\n@@ -189,1 +190,1 @@\n-                HtmlTree.SECTION(HtmlStyle.constantDetails)\n+                HtmlTree.SECTION(HtmlStyles.constantDetails)\n@@ -209,1 +210,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -212,1 +213,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -223,1 +224,1 @@\n-                name(member), HtmlStyle.memberNameLink);\n+                name(member), HtmlStyles.memberNameLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriter.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -52,4 +52,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -61,0 +58,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -106,1 +107,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -195,1 +196,1 @@\n-        var table = new Table<URI>(HtmlStyle.summaryTable)\n+        var table = new Table<URI>(HtmlStyles.summaryTable)\n@@ -198,1 +199,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -214,1 +215,1 @@\n-            Content referencesList = HtmlTree.UL(HtmlStyle.refList, searchIndexItems,\n+            Content referencesList = HtmlTree.UL(HtmlStyles.refList, searchIndexItems,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ExternalSpecsWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +38,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -88,1 +90,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -150,1 +152,1 @@\n-        writer.addSummary(HtmlStyle.fieldSummary,\n+        writer.addSummary(HtmlStyles.fieldSummary,\n@@ -168,1 +170,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -199,1 +201,1 @@\n-                HtmlTree.SECTION(HtmlStyle.fieldDetails)\n+                HtmlTree.SECTION(HtmlStyles.fieldDetails)\n@@ -220,2 +222,2 @@\n-        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colSecond,\n-                HtmlStyle.colLast);\n+        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colSecond,\n+                HtmlStyles.colLast);\n@@ -223,1 +225,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -255,1 +257,1 @@\n-                HtmlStyle.memberNameLink);\n+                HtmlStyles.memberNameLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriter.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -37,1 +37,1 @@\n-    static final TagName PAGE_TITLE_HEADING = TagName.H1;\n+    static final HtmlTag PAGE_TITLE_HEADING = HtmlTag.H1;\n@@ -43,1 +43,1 @@\n-    static final TagName CONTENT_HEADING = TagName.H2;\n+    static final HtmlTag CONTENT_HEADING = HtmlTag.H2;\n@@ -49,1 +49,1 @@\n-    static final TagName SUB_HEADING = TagName.H3;\n+    static final HtmlTag SUB_HEADING = HtmlTag.H3;\n@@ -55,1 +55,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n@@ -67,1 +67,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n@@ -73,1 +73,1 @@\n-        static final TagName INHERITED_SUMMARY_HEADING = TagName.H3;\n+        static final HtmlTag INHERITED_SUMMARY_HEADING = HtmlTag.H3;\n@@ -79,1 +79,1 @@\n-        static final TagName DETAILS_HEADING = TagName.H2;\n+        static final HtmlTag DETAILS_HEADING = HtmlTag.H2;\n@@ -84,1 +84,1 @@\n-        static final TagName MEMBER_HEADING = TagName.H3;\n+        static final HtmlTag MEMBER_HEADING = HtmlTag.H3;\n@@ -91,1 +91,1 @@\n-        static final TagName PACKAGE_HEADING = TagName.H2;\n+        static final HtmlTag PACKAGE_HEADING = HtmlTag.H2;\n@@ -101,1 +101,1 @@\n-        static final TagName PACKAGE_HEADING = TagName.H2;\n+        static final HtmlTag PACKAGE_HEADING = HtmlTag.H2;\n@@ -106,1 +106,1 @@\n-        static final TagName CLASS_HEADING = TagName.H3;\n+        static final HtmlTag CLASS_HEADING = HtmlTag.H3;\n@@ -111,1 +111,1 @@\n-        static final TagName CLASS_SUBHEADING = TagName.H4;\n+        static final HtmlTag CLASS_SUBHEADING = HtmlTag.H4;\n@@ -116,1 +116,1 @@\n-        static final TagName MEMBER_HEADING = TagName.H5;\n+        static final HtmlTag MEMBER_HEADING = HtmlTag.H5;\n@@ -123,1 +123,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Headings.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -30,6 +30,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -37,1 +31,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -41,0 +36,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -106,2 +107,2 @@\n-        content.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyle.title, mainHeading))\n-                .add(new HtmlTree(TagName.HR))\n+        content.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyles.title, mainHeading))\n+                .add(new HtmlTree(HtmlTag.HR))\n@@ -109,1 +110,1 @@\n-                .add(new HtmlTree(TagName.HR))\n+                .add(new HtmlTree(HtmlTag.HR))\n@@ -111,2 +112,2 @@\n-                .add(new HtmlTree(TagName.HR))\n-                .add(HtmlTree.SPAN(HtmlStyle.helpFootnote,\n+                .add(new HtmlTree(HtmlTag.HR))\n+                .add(HtmlTree.SPAN(HtmlStyles.helpFootnote,\n@@ -132,1 +133,1 @@\n-        var navSection = HtmlTree.DIV(HtmlStyle.subTitle)\n+        var navSection = HtmlTree.DIV(HtmlStyles.subTitle)\n@@ -156,1 +157,1 @@\n-            var searchExamples = HtmlTree.OL(HtmlStyle.tocList);\n+            var searchExamples = HtmlTree.OL(HtmlStyles.tocList);\n@@ -193,1 +194,1 @@\n-        var pageKindsSection = HtmlTree.DIV(HtmlStyle.subTitle)\n+        var pageKindsSection = HtmlTree.DIV(HtmlStyles.subTitle)\n@@ -238,1 +239,1 @@\n-                HtmlTree.SPAN(HtmlStyle.helpNote, getContent(\"doclet.help.class_interface.note\")),\n+                HtmlTree.SPAN(HtmlStyles.helpNote, getContent(\"doclet.help.class_interface.note\")),\n@@ -257,1 +258,1 @@\n-                .add(new HtmlTree(TagName.BR))\n+                .add(new HtmlTree(HtmlTag.BR))\n@@ -267,1 +268,1 @@\n-                .add(new HtmlTree(TagName.BR))\n+                .add(new HtmlTree(HtmlTag.BR))\n@@ -415,1 +416,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.helpSection,\n+        return HtmlTree.SECTION(HtmlStyles.helpSection,\n@@ -425,1 +426,1 @@\n-        var list = HtmlTree.UL(HtmlStyle.helpSectionList, HtmlTree.LI(first));\n+        var list = HtmlTree.UL(HtmlStyles.helpSectionList, HtmlTree.LI(first));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -97,3 +97,0 @@\n-\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n@@ -102,3 +99,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -106,5 +101,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TextBuilder;\n@@ -129,1 +119,11 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n+import jdk.javadoc.internal.html.TextBuilder;\n@@ -364,1 +364,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.notes);\n+        var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -613,1 +613,1 @@\n-                if (first instanceof HtmlTree htmlTree && htmlTree.tagName.equals(TagName.H1)) {\n+                if (first instanceof HtmlTree htmlTree && htmlTree.tag.equals(HtmlTag.H1)) {\n@@ -688,2 +688,2 @@\n-                    .add(new HtmlTree(TagName.HR))\n-                    .add(HtmlTree.P(HtmlStyle.legalCopy,\n+                    .add(new HtmlTree(HtmlTag.HR))\n+                    .add(HtmlTree.P(HtmlStyles.legalCopy,\n@@ -920,1 +920,1 @@\n-                                    Content label, HtmlStyle style, boolean code) {\n+                                     Content label, HtmlStyle style, boolean code) {\n@@ -1050,1 +1050,1 @@\n-        addPreQualifiedClassLink(context, typeElement, HtmlStyle.typeNameLink, content);\n+        addPreQualifiedClassLink(context, typeElement, HtmlStyles.typeNameLink, content);\n@@ -1258,1 +1258,1 @@\n-                div = HtmlTree.DIV(HtmlStyle.deprecationComment, result);\n+                div = HtmlTree.DIV(HtmlStyles.deprecationComment, result);\n@@ -1261,1 +1261,1 @@\n-                div = HtmlTree.DIV(HtmlStyle.block, result);\n+                div = HtmlTree.DIV(HtmlStyles.block, result);\n@@ -1280,1 +1280,1 @@\n-            HtmlTag htmlTag = HtmlTag.get(name);\n+            HtmlTag htmlTag = HtmlTag.of(name);\n@@ -1947,1 +1947,1 @@\n-            return HtmlTree.SPAN(HtmlStyle.invalidTag, Text.of(summary));\n+            return HtmlTree.SPAN(HtmlStyles.invalidTag, Text.of(summary));\n@@ -1949,1 +1949,1 @@\n-        return HtmlTree.DETAILS(HtmlStyle.invalidTag)\n+        return HtmlTree.DETAILS(HtmlStyles.invalidTag)\n@@ -2408,1 +2408,1 @@\n-        var body = new HtmlTree(TagName.BODY).setStyle(getBodyStyle());\n+        var body = new HtmlTree(HtmlTag.BODY).setStyle(getBodyStyle());\n@@ -2426,1 +2426,1 @@\n-        return HtmlStyle.valueOf(page);\n+        return HtmlStyles.valueOf(page);\n@@ -2476,2 +2476,2 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block);\n-            div.add(HtmlTree.SPAN(HtmlStyle.previewLabel, contents.previewPhrase));\n+            var div = HtmlTree.DIV(HtmlStyles.block);\n+            div.add(HtmlTree.SPAN(HtmlStyles.previewLabel, contents.previewPhrase));\n@@ -2484,2 +2484,2 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block);\n-            div.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel, contents.restrictedPhrase));\n+            var div = HtmlTree.DIV(HtmlStyles.block);\n+            div.add(HtmlTree.SPAN(HtmlStyles.restrictedLabel, contents.restrictedPhrase));\n@@ -2493,1 +2493,1 @@\n-            var previewDiv = HtmlTree.DIV(HtmlStyle.previewBlock);\n+            var previewDiv = HtmlTree.DIV(HtmlStyles.previewBlock);\n@@ -2509,1 +2509,1 @@\n-            previewDiv.add(HtmlTree.SPAN(HtmlStyle.previewLabel,\n+            previewDiv.add(HtmlTree.SPAN(HtmlStyles.previewLabel,\n@@ -2513,1 +2513,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note1));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note1));\n@@ -2516,1 +2516,1 @@\n-            previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note2));\n+            previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note2));\n@@ -2524,1 +2524,1 @@\n-                var previewDiv = HtmlTree.DIV(HtmlStyle.previewBlock);\n+                var previewDiv = HtmlTree.DIV(HtmlStyles.previewBlock);\n@@ -2527,1 +2527,1 @@\n-                previewDiv.add(HtmlTree.SPAN(HtmlStyle.previewLabel,\n+                previewDiv.add(HtmlTree.SPAN(HtmlStyles.previewLabel,\n@@ -2529,1 +2529,1 @@\n-                var ul = HtmlTree.UL(HtmlStyle.previewComment);\n+                var ul = HtmlTree.UL(HtmlStyles.previewComment);\n@@ -2537,1 +2537,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note1));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note1));\n@@ -2541,1 +2541,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note2));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note2));\n@@ -2604,1 +2604,1 @@\n-                                   new HtmlTree(TagName.EM).add(featureName),\n+                                   new HtmlTree(HtmlTag.EM).add(featureName),\n@@ -2643,1 +2643,1 @@\n-            var restrictedDiv = HtmlTree.DIV(HtmlStyle.restrictedBlock);\n+            var restrictedDiv = HtmlTree.DIV(HtmlStyles.restrictedBlock);\n@@ -2650,1 +2650,1 @@\n-            restrictedDiv.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel,\n+            restrictedDiv.add(HtmlTree.SPAN(HtmlStyles.restrictedLabel,\n@@ -2653,1 +2653,1 @@\n-            restrictedDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note1));\n+            restrictedDiv.add(HtmlTree.DIV(HtmlStyles.restrictedComment, note1));\n@@ -2655,1 +2655,1 @@\n-            restrictedDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note2));\n+            restrictedDiv.add(HtmlTree.DIV(HtmlStyles.restrictedComment, note2));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+\n@@ -49,1 +50,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n@@ -53,0 +53,1 @@\n+import jdk.javadoc.internal.html.HtmlId;\n@@ -464,0 +465,16 @@\n+    \/**\n+     * Returns an id for text documenting a type parameter of a class or method.\n+     *\n+     * @param paramName the name of the type parameter\n+     * @param owner the enclosing element\n+     *\n+     * @return the id\n+     *\/\n+    public HtmlId forTypeParam(String paramName, Element owner) {\n+        if (utils.isExecutableElement(owner)) {\n+            return HtmlId.of(forMember((ExecutableElement) owner).getFirst().name()\n+                    + \"-type-param-\" + paramName);\n+        }\n+        return HtmlId.of(\"type-param-\" + paramName);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+\n@@ -37,1 +38,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -45,0 +45,1 @@\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIndexBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,5 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -57,0 +52,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -164,3 +165,5 @@\n-                        Content label = newContent();\n-                        label.add(utils.getTypeName(type, false));\n-                        linkInfo.label(label).skipPreview(true);\n+                        if (linkInfo.getLabel() == null || linkInfo.getLabel().isEmpty()) {\n+                            Content label = newContent();\n+                            label.add(utils.getTypeName(type, false));\n+                            linkInfo.label(label).skipPreview(true);\n+                        }\n@@ -244,0 +247,5 @@\n+            if (isTypeLink) {\n+                linkInfo.fragment(m_writer.configuration.htmlIds.forTypeParam(\n+                        utils.getTypeName(utils.getComponentType(linkInfo.getType()), false),\n+                        typeElement).name());\n+            }\n@@ -380,1 +388,1 @@\n-                links.add(new HtmlTree(TagName.WBR));\n+                links.add(new HtmlTree(HtmlTag.WBR));\n@@ -387,1 +395,1 @@\n-                    links.add(new HtmlTree(TagName.WBR));\n+                    links.add(new HtmlTree(HtmlTag.WBR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +37,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkInfo.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n@@ -35,5 +33,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -44,0 +38,6 @@\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n@@ -95,1 +95,1 @@\n-        var metaRefresh = new HtmlTree(TagName.META)\n+        var metaRefresh = new HtmlTree(HtmlTag.META)\n@@ -106,1 +106,1 @@\n-        var body = new HtmlTree(TagName.BODY).setStyle(HtmlStyle.indexRedirectPage);\n+        var body = new HtmlTree(HtmlTag.BODY).setStyle(HtmlStyles.indexRedirectPage);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,8 +39,0 @@\n-import com.sun.source.doctree.DeprecatedTree;\n-\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -48,1 +40,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +48,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -132,1 +131,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -152,1 +151,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.index);\n+        var dl = HtmlTree.DL(HtmlStyles.index);\n@@ -167,1 +166,1 @@\n-        var heading = HtmlTree.HEADING(Headings.CONTENT_HEADING, HtmlStyle.title, headContent)\n+        var heading = HtmlTree.HEADING(Headings.CONTENT_HEADING, HtmlStyles.title, headContent)\n@@ -212,1 +211,1 @@\n-                        HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_IN_LABEL, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n+                        HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_IN_LABEL, (TypeElement) element).style(HtmlStyles.typeNameLink)));\n@@ -220,1 +219,1 @@\n-                        label, HtmlStyle.memberNameLink));\n+                        label, HtmlStyles.memberNameLink));\n@@ -228,1 +227,1 @@\n-        var dd = new HtmlTree(TagName.DD);\n+        var dd = new HtmlTree(HtmlTag.DD);\n@@ -261,1 +260,1 @@\n-        var dt = HtmlTree.DT(labelLink.setStyle(HtmlStyle.searchTagLink));\n+        var dt = HtmlTree.DT(labelLink.setStyle(HtmlStyles.searchTagLink));\n@@ -265,1 +264,1 @@\n-        var dd = new HtmlTree(TagName.DD);\n+        var dd = new HtmlTree(HtmlTag.DD);\n@@ -284,2 +283,2 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(element));\n-        var div = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n+        var span = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(element));\n+        var div = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n@@ -352,1 +351,1 @@\n-        content.add(new HtmlTree(TagName.BR));\n+        content.add(new HtmlTree(HtmlTag.BR));\n@@ -364,1 +363,1 @@\n-        return HtmlTree.SPAN(HtmlStyle.verticalSeparator, Text.of(\"|\"));\n+        return HtmlTree.SPAN(HtmlStyles.verticalSeparator, Text.of(\"|\"));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Comment;\n+import jdk.javadoc.internal.html.Comment;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MarkerComments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,6 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -48,0 +43,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -110,1 +110,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -190,1 +190,1 @@\n-        writer.addSummary(HtmlStyle.methodSummary,\n+        writer.addSummary(HtmlStyles.methodSummary,\n@@ -212,1 +212,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -254,1 +254,1 @@\n-                    var descriptionFromTypeLabel = HtmlTree.SPAN(HtmlStyle.descriptionFromTypeLabel,\n+                    var descriptionFromTypeLabel = HtmlTree.SPAN(HtmlStyles.descriptionFromTypeLabel,\n@@ -260,1 +260,1 @@\n-                    methodContent.add(HtmlTree.DIV(HtmlStyle.block, descriptionFromTypeLabel));\n+                    methodContent.add(HtmlTree.DIV(HtmlStyles.block, descriptionFromTypeLabel));\n@@ -273,1 +273,1 @@\n-        return getMember(HtmlTree.SECTION(HtmlStyle.methodDetails, c)\n+        return getMember(HtmlTree.SECTION(HtmlStyles.methodDetails, c)\n@@ -292,1 +292,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -294,1 +294,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +36,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -81,1 +82,1 @@\n-            var table = new Table<ModuleElement>(HtmlStyle.summaryTable)\n+            var table = new Table<ModuleElement>(HtmlStyles.summaryTable)\n@@ -83,1 +84,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+\n@@ -45,6 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -52,1 +47,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -194,2 +197,2 @@\n-        moduleContent.add(new HtmlTree(TagName.HR));\n-        Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        moduleContent.add(new HtmlTree(HtmlTag.HR));\n+        Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -264,1 +267,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -270,1 +273,1 @@\n-                HtmlStyle.title, moduleHead);\n+                HtmlStyles.title, moduleHead);\n@@ -282,1 +285,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -286,1 +289,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, source);\n+        return HtmlTree.SECTION(HtmlStyles.summary, source);\n@@ -505,1 +508,1 @@\n-        return new Table<Void>(HtmlStyle.detailsTable)\n+        return new Table<Void>(HtmlStyles.detailsTable)\n@@ -508,1 +511,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -519,1 +522,1 @@\n-        return new Table<Void>(HtmlStyle.detailsTable)\n+        return new Table<Void>(HtmlStyles.detailsTable)\n@@ -522,1 +525,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -531,1 +534,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.modulesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.modulesSummary)\n@@ -573,1 +576,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.packagesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.packagesSummary)\n@@ -603,1 +606,1 @@\n-        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -639,1 +642,1 @@\n-        colStyles.add(HtmlStyle.colFirst);\n+        colStyles.add(HtmlStyles.colFirst);\n@@ -643,1 +646,1 @@\n-            colStyles.add(HtmlStyle.colSecond);\n+            colStyles.add(HtmlStyles.colSecond);\n@@ -648,1 +651,1 @@\n-            colStyles.add(HtmlStyle.colSecond);\n+            colStyles.add(HtmlStyles.colSecond);\n@@ -652,1 +655,1 @@\n-        colStyles.add(HtmlStyle.colLast);\n+        colStyles.add(HtmlStyles.colLast);\n@@ -744,1 +747,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.servicesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.servicesSummary)\n@@ -786,1 +789,1 @@\n-                    summary.add(HtmlTree.DIV(HtmlStyle.block, description));\n+                    summary.add(HtmlTree.DIV(HtmlStyles.block, description));\n@@ -816,1 +819,1 @@\n-                    desc.add(HtmlTree.DIV(HtmlStyle.block, description));\n+                    desc.add(HtmlTree.DIV(HtmlStyles.block, description));\n@@ -825,1 +828,1 @@\n-                desc.add(new HtmlTree(TagName.BR));\n+                desc.add(new HtmlTree(HtmlTag.BR));\n@@ -827,1 +830,1 @@\n-                var implSpan = HtmlTree.SPAN(HtmlStyle.implementationLabel, contents.implementation);\n+                var implSpan = HtmlTree.SPAN(HtmlStyles.implementationLabel, contents.implementation);\n@@ -851,2 +854,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(mdle));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(mdle));\n@@ -867,1 +870,1 @@\n-            var tree = HtmlTree.SECTION(HtmlStyle.moduleDescription)\n+            var tree = HtmlTree.SECTION(HtmlStyles.moduleDescription)\n@@ -905,2 +908,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(pkg));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(pkg));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":37,"deletions":34,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -38,6 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -45,1 +40,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -50,1 +44,7 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -329,1 +329,1 @@\n-            target.add(HtmlTree.LI(HtmlStyle.navBarCell1Rev, label));\n+            target.add(HtmlTree.LI(HtmlStyles.navBarCell1Rev, label));\n@@ -412,1 +412,1 @@\n-            link.setStyle(HtmlStyle.currentSelection);\n+            link.setStyle(HtmlStyles.currentSelection);\n@@ -502,1 +502,1 @@\n-        var searchDiv = HtmlTree.DIV(HtmlStyle.navListSearch)\n+        var searchDiv = HtmlTree.DIV(HtmlStyles.navListSearch)\n@@ -519,1 +519,1 @@\n-        var navContent = new HtmlTree(TagName.DIV);\n+        var navContent = new HtmlTree(HtmlTag.DIV);\n@@ -524,3 +524,3 @@\n-        HtmlTree iconSpan = HtmlTree.SPAN(HtmlStyle.navBarToggleIcon).add(Entity.NO_BREAK_SPACE);\n-        navContent.setStyle(HtmlStyle.navContent).add(HtmlTree.DIV(HtmlStyle.navMenuButton,\n-                        new HtmlTree(TagName.BUTTON).setId(HtmlIds.NAVBAR_TOGGLE_BUTTON)\n+        HtmlTree iconSpan = HtmlTree.SPAN(HtmlStyles.navBarToggleIcon).add(Entity.NO_BREAK_SPACE);\n+        navContent.setStyle(HtmlStyles.navContent).add(HtmlTree.DIV(HtmlStyles.navMenuButton,\n+                        new HtmlTree(HtmlTag.BUTTON).setId(HtmlIds.NAVBAR_TOGGLE_BUTTON)\n@@ -533,1 +533,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.skipNav,\n+                .add(HtmlTree.DIV(HtmlStyles.skipNav,\n@@ -538,1 +538,1 @@\n-        var navList = new HtmlTree(TagName.UL)\n+        var navList = new HtmlTree(HtmlTag.UL)\n@@ -540,1 +540,1 @@\n-                .setStyle(HtmlStyle.navList)\n+                .setStyle(HtmlStyles.navList)\n@@ -544,1 +544,1 @@\n-        var aboutDiv = HtmlTree.DIV(HtmlStyle.aboutLanguage, aboutContent);\n+        var aboutDiv = HtmlTree.DIV(HtmlStyles.aboutLanguage, aboutContent);\n@@ -546,1 +546,1 @@\n-        navigationBar.add(HtmlTree.DIV(HtmlStyle.topNav, navContent).setId(HtmlIds.NAVBAR_TOP));\n+        navigationBar.add(HtmlTree.DIV(HtmlStyles.topNav, navContent).setId(HtmlIds.NAVBAR_TOP));\n@@ -548,1 +548,1 @@\n-        var subNavContent = HtmlTree.DIV(HtmlStyle.navContent);\n+        var subNavContent = HtmlTree.DIV(HtmlStyles.navContent);\n@@ -556,1 +556,1 @@\n-        var breadcrumbNav = HtmlTree.OL(HtmlStyle.subNavList);\n+        var breadcrumbNav = HtmlTree.OL(HtmlStyles.subNavList);\n@@ -563,1 +563,1 @@\n-        navigationBar.add(HtmlTree.DIV(HtmlStyle.subNav, subNavContent));\n+        navigationBar.add(HtmlTree.DIV(HtmlStyles.subNav, subNavContent));\n@@ -566,1 +566,1 @@\n-        navigationBar.add(HtmlTree.SPAN(HtmlStyle.skipNav)\n+        navigationBar.add(HtmlTree.SPAN(HtmlStyles.skipNav)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -34,5 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,0 +36,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -74,1 +76,1 @@\n-        writer.addSummary(HtmlStyle.nestedClassSummary,\n+        writer.addSummary(HtmlStyles.nestedClassSummary,\n@@ -95,2 +97,2 @@\n-        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colSecond,\n-                HtmlStyle.colLast);\n+        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colSecond,\n+                HtmlStyles.colLast);\n@@ -98,1 +100,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -128,1 +130,1 @@\n-                .style(HtmlStyle.typeNameLink));\n+                .style(HtmlStyles.typeNameLink));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriter.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +39,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +84,1 @@\n-            Content tabs = HtmlTree.DIV(HtmlStyle.checkboxes,\n+            Content tabs = HtmlTree.DIV(HtmlStyles.checkboxes,\n@@ -99,1 +99,1 @@\n-        table.setGridStyle(HtmlStyle.threeColumnReleaseSummary);\n+        table.setGridStyle(HtmlStyles.threeColumnReleaseSummary);\n@@ -152,1 +152,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NewAPIListWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +37,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +85,1 @@\n-            var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+            var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -86,1 +87,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import javax.lang.model.element.Element;\n@@ -33,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,3 +36,3 @@\n-\n-import java.util.ArrayList;\n-import java.util.List;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -103,2 +99,2 @@\n-                HtmlStyle.title, headContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -139,1 +135,1 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.packageHierarchyLabel,\n+        var span = HtmlTree.SPAN(HtmlStyles.packageHierarchyLabel,\n@@ -142,1 +138,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n+        var ul = HtmlTree.UL(HtmlStyles.horizontal).addStyle(HtmlStyles.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.util.ArrayList;\n-import java.util.List;\n@@ -35,1 +33,0 @@\n-import javax.lang.model.element.Element;\n@@ -39,5 +36,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -45,1 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,0 +42,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -141,1 +139,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -144,1 +142,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -168,1 +166,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.blockList);\n+        var ul = HtmlTree.UL(HtmlStyles.blockList);\n@@ -171,1 +169,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.detail)\n+            var section = HtmlTree.SECTION(HtmlStyles.detail)\n@@ -177,1 +175,1 @@\n-            var table = new Table<Void>(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -180,1 +178,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -195,1 +193,1 @@\n-        var li = HtmlTree.SECTION(HtmlStyle.packageUses, ul);\n+        var li = HtmlTree.SECTION(HtmlStyles.packageUses, ul);\n@@ -209,1 +207,1 @@\n-        headingContent.add(new HtmlTree(TagName.BR));\n+        headingContent.add(new HtmlTree(HtmlTag.BR));\n@@ -212,2 +210,2 @@\n-                HtmlStyle.title, headingContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headingContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javax.lang.model.element.Element;\n@@ -43,5 +42,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+\n@@ -49,1 +44,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +51,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -74,1 +75,1 @@\n-    private final HtmlTree section = HtmlTree.SECTION(HtmlStyle.packageDescription, new ContentBuilder());\n+    private final HtmlTree section = HtmlTree.SECTION(HtmlStyles.packageDescription, new ContentBuilder());\n@@ -130,2 +131,2 @@\n-        packageContent.add(new HtmlTree(TagName.HR));\n-        Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        packageContent.add(new HtmlTree(HtmlTag.HR));\n+        Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -205,1 +206,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -212,1 +213,1 @@\n-                HtmlStyle.title, packageHead);\n+                HtmlStyles.title, packageHead);\n@@ -280,2 +281,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(packageElement));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(packageElement));\n@@ -294,1 +295,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -311,1 +312,1 @@\n-        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyles.summaryTable)\n@@ -313,1 +314,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -350,1 +351,1 @@\n-            var table = new Table<Void>(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -355,1 +356,1 @@\n-                table.setColumnStyles(HtmlStyle.colPlain, HtmlStyle.colFirst, HtmlStyle.colLast);\n+                table.setColumnStyles(HtmlStyles.colPlain, HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -357,1 +358,1 @@\n-                table.setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                table.setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -426,1 +427,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, summaryContent);\n+        return HtmlTree.SECTION(HtmlStyles.summary, summaryContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":22,"deletions":21,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -36,4 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +39,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +86,1 @@\n-            Content list = HtmlTree.UL(HtmlStyle.previewFeatureList).addStyle(HtmlStyle.checkboxes);\n+            Content list = HtmlTree.UL(HtmlStyles.previewFeatureList).addStyle(HtmlStyles.checkboxes);\n@@ -109,1 +111,1 @@\n-        table.setGridStyle(HtmlStyle.threeColumnSummary)\n+        table.setGridStyle(HtmlStyles.threeColumnSummary)\n@@ -134,1 +136,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,5 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -46,0 +42,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -83,1 +84,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -164,1 +165,1 @@\n-        writer.addSummary(HtmlStyle.propertySummary,\n+        writer.addSummary(HtmlStyles.propertySummary,\n@@ -182,1 +183,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -213,1 +214,1 @@\n-                    var descriptionFromLabel = HtmlTree.SPAN(HtmlStyle.descriptionFromTypeLabel,\n+                    var descriptionFromLabel = HtmlTree.SPAN(HtmlStyles.descriptionFromTypeLabel,\n@@ -219,1 +220,1 @@\n-                    propertyContent.add(HtmlTree.DIV(HtmlStyle.block, descriptionFromLabel));\n+                    propertyContent.add(HtmlTree.DIV(HtmlStyles.block, descriptionFromLabel));\n@@ -232,1 +233,1 @@\n-                HtmlTree.SECTION(HtmlStyle.propertyDetails)\n+                HtmlTree.SECTION(HtmlStyles.propertyDetails)\n@@ -253,1 +254,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -256,1 +257,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -287,1 +288,1 @@\n-                HtmlStyle.memberNameLink,\n+                HtmlStyles.memberNameLink,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/RestrictedListWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,7 +30,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +33,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -82,1 +83,1 @@\n-        contentTree.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyle.title,\n+        contentTree.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyles.title,\n@@ -91,1 +92,1 @@\n-                        .add(HtmlTree.DETAILS(HtmlStyle.pageSearchDetails)\n+                        .add(HtmlTree.DETAILS(HtmlStyles.pageSearchDetails)\n@@ -94,1 +95,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.pageSearchInfo, helpSection)\n+                .add(HtmlTree.DIV(HtmlStyles.pageSearchInfo, helpSection)\n@@ -99,2 +100,2 @@\n-                        .add(new HtmlTree(TagName.BUTTON)\n-                                .add(new HtmlTree(TagName.IMG)\n+                        .add(new HtmlTree(HtmlTag.BUTTON)\n+                                .add(new HtmlTree(HtmlTag.IMG)\n@@ -106,1 +107,1 @@\n-                                .addStyle(HtmlStyle.copy)\n+                                .addStyle(HtmlStyles.copy)\n@@ -112,1 +113,1 @@\n-                .add(new HtmlTree(TagName.P)\n+                .add(new HtmlTree(HtmlTag.P)\n@@ -115,1 +116,1 @@\n-                .add(HtmlTree.DIV(new HtmlTree(TagName.DIV)\n+                .add(HtmlTree.DIV(new HtmlTree(HtmlTag.DIV)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SearchWriter.java","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -38,4 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +40,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -56,1 +57,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -60,1 +61,1 @@\n-        return new HtmlTree(TagName.LI).setStyle(HtmlStyle.blockList);\n+        return new HtmlTree(HtmlTag.LI).setStyle(HtmlStyles.blockList);\n@@ -64,1 +65,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.detail);\n+        var section = HtmlTree.SECTION(HtmlStyles.detail);\n@@ -78,1 +79,1 @@\n-        var pre = new HtmlTree(TagName.PRE);\n+        var pre = new HtmlTree(HtmlTag.PRE);\n@@ -125,1 +126,1 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block, serialFieldContent);\n+            var div = HtmlTree.DIV(HtmlStyles.block, serialFieldContent);\n@@ -139,1 +140,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerialFieldWriter.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,4 +31,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -36,0 +33,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -49,1 +50,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -53,1 +54,1 @@\n-        return new HtmlTree(TagName.LI);\n+        return new HtmlTree(HtmlTag.LI);\n@@ -67,1 +68,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.detail, serialHeading);\n+        var section = HtmlTree.SECTION(HtmlStyles.detail, serialHeading);\n@@ -124,1 +125,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.notes);\n+        var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerialMethodWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -44,4 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -49,1 +45,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -565,2 +566,2 @@\n-                HtmlStyle.title, h1Content);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, h1Content);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -578,1 +579,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -587,1 +588,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.serializedPackageContainer);\n+        return HtmlTree.SECTION(HtmlStyles.serializedPackageContainer);\n@@ -599,1 +600,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -618,1 +619,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.serializedClassDetails)\n+        var section = HtmlTree.SECTION(HtmlStyles.serializedClassDetails)\n@@ -643,1 +644,1 @@\n-        section.add(HtmlTree.DIV(HtmlStyle.typeSignature, signature));\n+        section.add(HtmlTree.DIV(HtmlStyles.typeSignature, signature));\n@@ -648,1 +649,1 @@\n-        return HtmlTree.DL(HtmlStyle.nameValue);\n+        return HtmlTree.DL(HtmlStyles.nameValue);\n@@ -670,1 +671,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -28,8 +28,6 @@\n-import jdk.javadoc.doclet.DocletEnvironment;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n@@ -46,6 +44,10 @@\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.SortedSet;\n-import java.util.TreeSet;\n-import java.util.stream.Collectors;\n+\n+import jdk.javadoc.doclet.DocletEnvironment;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -66,1 +68,1 @@\n-        var signature = HtmlTree.DIV(HtmlStyle.moduleSignature);\n+        var signature = HtmlTree.DIV(HtmlStyles.moduleSignature);\n@@ -69,1 +71,1 @@\n-            signature.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+            signature.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -76,1 +78,1 @@\n-        var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+        var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -86,1 +88,1 @@\n-        var signature = HtmlTree.DIV(HtmlStyle.packageSignature);\n+        var signature = HtmlTree.DIV(HtmlStyles.packageSignature);\n@@ -89,1 +91,1 @@\n-            signature.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+            signature.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -92,1 +94,1 @@\n-        var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+        var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -125,1 +127,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.annotations, annotationInfo));\n+                content.add(HtmlTree.SPAN(HtmlStyles.annotations, annotationInfo));\n@@ -127,1 +129,1 @@\n-            content.add(HtmlTree.SPAN(HtmlStyle.modifiers, modifiers));\n+            content.add(HtmlTree.SPAN(HtmlStyles.modifiers, modifiers));\n@@ -129,1 +131,1 @@\n-            var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+            var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -134,1 +136,1 @@\n-                nameSpan.addStyle(HtmlStyle.typeNameLabel).add(className);\n+                nameSpan.addStyle(HtmlStyles.typeNameLabel).add(className);\n@@ -147,1 +149,1 @@\n-                var extendsImplements = HtmlTree.SPAN(HtmlStyle.extendsImplements);\n+                var extendsImplements = HtmlTree.SPAN(HtmlStyles.extendsImplements);\n@@ -189,1 +191,1 @@\n-                var permitsSpan = HtmlTree.SPAN(HtmlStyle.permits);\n+                var permitsSpan = HtmlTree.SPAN(HtmlStyles.permits);\n@@ -208,1 +210,1 @@\n-                    permitsSpan.add(HtmlTree.SPAN(HtmlStyle.permitsNote, c));\n+                    permitsSpan.add(HtmlTree.SPAN(HtmlStyles.permitsNote, c));\n@@ -212,1 +214,1 @@\n-            return HtmlTree.DIV(HtmlStyle.typeSignature, content);\n+            return HtmlTree.DIV(HtmlStyles.typeSignature, content);\n@@ -453,1 +455,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+                content.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -467,1 +469,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.returnType, returnType));\n+                content.add(HtmlTree.SPAN(HtmlStyles.returnType, returnType));\n@@ -472,1 +474,1 @@\n-            var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+            var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -486,1 +488,1 @@\n-            return HtmlTree.DIV(HtmlStyle.memberSignature, content);\n+            return HtmlTree.DIV(HtmlStyles.memberSignature, content);\n@@ -517,1 +519,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.modifiers, Text.of(mods)))\n+                target.add(HtmlTree.SPAN(HtmlStyles.modifiers, Text.of(mods)))\n@@ -536,1 +538,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.typeParametersLong, typeParameters));\n+                target.add(HtmlTree.SPAN(HtmlStyles.typeParametersLong, typeParameters));\n@@ -538,1 +540,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.typeParameters, typeParameters));\n+                target.add(HtmlTree.SPAN(HtmlStyles.typeParameters, typeParameters));\n@@ -570,2 +572,2 @@\n-                target.add(new HtmlTree(TagName.WBR))\n-                        .add(HtmlTree.SPAN(HtmlStyle.parameters, parameters));\n+                target.add(new HtmlTree(HtmlTag.WBR))\n+                        .add(HtmlTree.SPAN(HtmlStyles.parameters, parameters));\n@@ -580,1 +582,1 @@\n-                        .add(HtmlTree.SPAN(HtmlStyle.exceptions, exceptions));\n+                        .add(HtmlTree.SPAN(HtmlStyles.exceptions, exceptions));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":40,"deletions":38,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Head;\n-\n@@ -41,0 +39,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Head;\n@@ -42,5 +41,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +50,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -204,1 +204,1 @@\n-            var pre = new HtmlTree(TagName.PRE);\n+            var pre = new HtmlTree(HtmlTag.PRE);\n@@ -213,1 +213,1 @@\n-            var div = HtmlTree.DIV(HtmlStyle.sourceContainer, pre);\n+            var div = HtmlTree.DIV(HtmlStyles.sourceContainer, pre);\n@@ -249,1 +249,1 @@\n-        return new HtmlTree(TagName.BODY).setStyle(HtmlStyle.sourcePage);\n+        return new HtmlTree(HtmlTag.BODY).setStyle(HtmlStyles.sourcePage);\n@@ -259,1 +259,1 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.sourceLineNo);\n+        var span = HtmlTree.SPAN(HtmlStyles.sourceLineNo);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.util.*;\n+import java.util.List;\n@@ -35,0 +35,1 @@\n+\n@@ -36,4 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +40,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -120,2 +123,2 @@\n-            var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(member));\n-            div = HtmlTree.DIV(HtmlStyle.block, deprLabel);\n+            var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(member));\n+            div = HtmlTree.DIV(HtmlStyles.block, deprLabel);\n@@ -130,2 +133,2 @@\n-                var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(te));\n-                div = HtmlTree.DIV(HtmlStyle.block, deprLabel);\n+                var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(te));\n+                div = HtmlTree.DIV(HtmlStyles.block, deprLabel);\n@@ -203,1 +206,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -222,1 +225,1 @@\n-        return HtmlTree.UL(HtmlStyle.detailsList);\n+        return HtmlTree.UL(HtmlStyles.detailsList);\n@@ -239,1 +242,1 @@\n-        return HtmlTree.UL(HtmlStyle.memberList);\n+        return HtmlTree.UL(HtmlStyles.memberList);\n@@ -252,1 +255,1 @@\n-        return HtmlTree.DIV(HtmlStyle.inheritedList);\n+        return HtmlTree.DIV(HtmlStyles.inheritedList);\n@@ -284,1 +287,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, memberContent);\n+        return HtmlTree.SECTION(HtmlStyles.summary, memberContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -34,6 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -41,1 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -46,0 +40,8 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n@@ -142,2 +144,2 @@\n-                HtmlStyle.title, getHeadContent());\n-        content.add(HtmlTree.DIV(HtmlStyle.header, heading));\n+                HtmlStyles.title, getHeadContent());\n+        content.add(HtmlTree.DIV(HtmlStyles.header, heading));\n@@ -204,1 +206,1 @@\n-        var ul= HtmlTree.UL(HtmlStyle.contentsList);\n+        var ul= HtmlTree.UL(HtmlStyles.contentsList);\n@@ -241,1 +243,1 @@\n-            var table = new Table<Element>(HtmlStyle.summaryTable)\n+            var table = new Table<Element>(HtmlStyles.summaryTable)\n@@ -270,1 +272,1 @@\n-            content.add(HtmlTree.UL(HtmlStyle.blockList, HtmlTree.LI(table)));\n+            content.add(HtmlTree.UL(HtmlStyles.blockList, HtmlTree.LI(table)));\n@@ -373,1 +375,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -41,4 +41,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,0 +47,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -89,1 +90,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -109,1 +110,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -112,1 +113,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -122,1 +123,1 @@\n-            table.addRow(propertyName, HtmlTree.DIV(HtmlStyle.block, separatedReferenceLinks));\n+            table.addRow(propertyName, HtmlTree.DIV(HtmlStyles.block, separatedReferenceLinks));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SystemPropertiesWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -37,7 +37,9 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -306,1 +308,1 @@\n-        HtmlStyle rowStyle = rowIndex % 2 == 0 ? HtmlStyle.evenRowColor : HtmlStyle.oddRowColor;\n+        HtmlStyle rowStyle = rowIndex % 2 == 0 ? HtmlStyles.evenRowColor : HtmlStyles.oddRowColor;\n@@ -362,1 +364,1 @@\n-            main = new HtmlTree(TagName.DIV).setId(id);\n+            main = new HtmlTree(HtmlTag.DIV).setId(id);\n@@ -369,3 +371,3 @@\n-                case 2 -> HtmlStyle.twoColumnSummary;\n-                case 3 -> HtmlStyle.threeColumnSummary;\n-                case 4 -> HtmlStyle.fourColumnSummary;\n+                case 2 -> HtmlStyles.twoColumnSummary;\n+                case 3 -> HtmlStyles.threeColumnSummary;\n+                case 4 -> HtmlStyles.fourColumnSummary;\n@@ -386,1 +388,1 @@\n-            var tablist = HtmlTree.DIV(HtmlStyle.tableTabs)\n+            var tablist = HtmlTree.DIV(HtmlStyles.tableTabs)\n@@ -392,1 +394,1 @@\n-                tablist.add(createTab(defaultTabId, HtmlStyle.activeTableTab, true, defaultTab));\n+                tablist.add(createTab(defaultTabId, HtmlStyles.activeTableTab, true, defaultTab));\n@@ -395,1 +397,1 @@\n-                        tablist.add(createTab(HtmlIds.forTab(id, tab.index()), HtmlStyle.tableTab, false, tab.label()));\n+                        tablist.add(createTab(HtmlIds.forTab(id, tab.index()), HtmlStyles.tableTab, false, tab.label()));\n@@ -404,1 +406,1 @@\n-            var tabpanel = new HtmlTree(TagName.DIV)\n+            var tabpanel = new HtmlTree(HtmlTag.DIV)\n@@ -417,1 +419,1 @@\n-        var tab = new HtmlTree(TagName.BUTTON)\n+        var tab = new HtmlTree(HtmlTag.BUTTON)\n@@ -439,1 +441,1 @@\n-        return HtmlTree.DIV(HtmlStyle.caption, HtmlTree.SPAN(title));\n+        return HtmlTree.DIV(HtmlStyles.caption, HtmlTree.SPAN(title));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -33,4 +33,6 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -155,4 +157,4 @@\n-                    : (i == 0) ? HtmlStyle.colFirst\n-                    : (i == (cellContents.size() - 1)) ? HtmlStyle.colLast\n-                    : (i == 1) ? HtmlStyle.colSecond : null;\n-            var cell = HtmlTree.DIV(HtmlStyle.tableHeader, cellContent);\n+                    : (i == 0) ? HtmlStyles.colFirst\n+                    : (i == (cellContents.size() - 1)) ? HtmlStyles.colLast\n+                    : (i == 1) ? HtmlStyles.colSecond : null;\n+            var cell = HtmlTree.DIV(HtmlStyles.tableHeader, cellContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableHeader.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,8 +27,9 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.ListBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -49,1 +50,1 @@\n-        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyles.tocList));\n@@ -67,1 +68,1 @@\n-        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyle.tocList));\n+        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyles.tocList));\n@@ -90,1 +91,1 @@\n-                .setStyle(HtmlStyle.toc)\n+                .setStyle(HtmlStyles.toc)\n@@ -92,1 +93,1 @@\n-        var header = HtmlTree.DIV(HtmlStyle.tocHeader, writer.contents.contentsHeading);\n+        var header = HtmlTree.DIV(HtmlStyles.tocHeader, writer.contents.contentsHeading);\n@@ -95,1 +96,1 @@\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyle.filterInput)\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyles.filterInput)\n@@ -99,1 +100,1 @@\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyle.resetFilter)\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyles.resetFilter)\n@@ -103,1 +104,1 @@\n-        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n+        content.add(new HtmlTree(HtmlTag.BUTTON).addStyle(HtmlStyles.hideSidebar)\n@@ -106,1 +107,1 @@\n-        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n+        content.add(new HtmlTree(HtmlTag.BUTTON).addStyle(HtmlStyles.showSidebar)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -37,0 +33,2 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -41,0 +39,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -81,2 +82,2 @@\n-                HtmlStyle.title, headContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -108,1 +109,1 @@\n-            var span = HtmlTree.SPAN(HtmlStyle.packageHierarchyLabel,\n+            var span = HtmlTree.SPAN(HtmlStyles.packageHierarchyLabel,\n@@ -111,1 +112,1 @@\n-            var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n+            var ul = HtmlTree.UL(HtmlStyles.horizontal).addStyle(HtmlStyles.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -36,0 +34,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n+\n@@ -99,1 +102,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.mainGrid)\n+                .add(HtmlTree.DIV(HtmlStyles.mainGrid)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/BodyContents.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -41,0 +40,6 @@\n+import jdk.javadoc.internal.html.Comment;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n@@ -270,1 +275,1 @@\n-        var head = new HtmlTree(TagName.HEAD);\n+        var head = new HtmlTree(HtmlTag.HEAD);\n@@ -298,1 +303,1 @@\n-            var link = new HtmlTree(TagName.LINK);\n+            var link = new HtmlTree(HtmlTag.LINK);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,123 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n-\n-\/**\n- * Enum representing HTML tag attributes.\n- *\/\n-public enum HtmlAttr {\n-    ALT,\n-    ARIA_CONTROLS(\"aria-controls\"),\n-    ARIA_EXPANDED(\"aria-expanded\"),\n-    ARIA_LABEL(\"aria-label\"),\n-    ARIA_LABELLEDBY(\"aria-labelledby\"),\n-    ARIA_ORIENTATION(\"aria-orientation\"),\n-    ARIA_SELECTED(\"aria-selected\"),\n-    AUTOCOMPLETE,\n-    CHECKED,\n-    CLASS,\n-    CLEAR,\n-    COLS,\n-    CONTENT,\n-    DATA_COPIED(\"data-copied\"), \/\/ custom HTML5 data attribute\n-    DISABLED,\n-    FOR,\n-    HREF,\n-    HTTP_EQUIV(\"http-equiv\"),\n-    ID,\n-    LANG,\n-    NAME,\n-    ONCLICK,\n-    ONKEYDOWN,\n-    ONLOAD,\n-    PLACEHOLDER,\n-    REL,\n-    ROLE,\n-    ROWS,\n-    SCOPE,\n-    SCROLLING,\n-    SRC,\n-    STYLE,\n-    SUMMARY,\n-    TABINDEX,\n-    TARGET,\n-    TITLE,\n-    TYPE,\n-    VALUE,\n-    WIDTH;\n-\n-    private final String value;\n-\n-    public enum Role {\n-\n-        BANNER,\n-        CONTENTINFO,\n-        MAIN,\n-        NAVIGATION,\n-        REGION;\n-\n-        private final String role;\n-\n-        Role() {\n-            role = Utils.toLowerCase(name());\n-        }\n-\n-        public String toString() {\n-            return role;\n-        }\n-    }\n-\n-    public enum InputType {\n-\n-        CHECKBOX,\n-        RESET,\n-        TEXT;\n-\n-        private final String type;\n-\n-        InputType() {\n-            type = Utils.toLowerCase(name());\n-        }\n-\n-        public String toString() {\n-            return type;\n-        }\n-    }\n-\n-    HtmlAttr() {\n-        this.value = Utils.toLowerCase(name());\n-    }\n-\n-    HtmlAttr(String name) {\n-        this.value = name;\n-    }\n-\n-    public String toString() {\n-        return value;\n-    }\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlAttr.java","additions":0,"deletions":123,"binary":false,"changes":123,"status":"deleted"},{"patch":"@@ -32,1 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -35,0 +34,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.DocType;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -46,1 +48,1 @@\n-     * @param html the {@link TagName#HTML HTML} element of the document\n+     * @param html the {@link HtmlTag#HTML HTML} element of the document\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlDocument.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import jdk.javadoc.internal.html.HtmlStyle;\n+\n@@ -52,1 +54,1 @@\n-public enum HtmlStyle {\n+public enum HtmlStyles implements HtmlStyle {\n@@ -1101,1 +1103,1 @@\n-    HtmlStyle() {\n+    HtmlStyles() {\n@@ -1107,1 +1109,1 @@\n-    HtmlStyle(String cssName) {\n+    HtmlStyles(String cssName) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyles.java","additions":5,"deletions":3,"binary":false,"changes":8,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","status":"renamed"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -31,0 +30,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -200,1 +205,1 @@\n-            l.addStyle(HtmlStyle.externalLink);\n+            l.addStyle(HtmlStyles.externalLink);\n@@ -214,1 +219,1 @@\n-            .setStyle(HtmlStyle.externalLink);\n+            .setStyle(HtmlStyles.externalLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Links.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,118 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import java.util.Locale;\n-\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n-\n-\/**\n- * Enum representing the names for HTML elements.\n- *\n- * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/syntax.html#syntax-tag-name\">WhatWG: Tag Name<\/a>\n- * @see <a href=\"https:\/\/www.w3.org\/TR\/html51\/syntax.html#tag-name\">HTML 5.1: Tag Name<\/a>\n- *\/\n-public enum TagName {\n-    A(true),\n-    ASIDE,\n-    BUTTON(true),\n-    BLOCKQUOTE,\n-    BODY,\n-    BR(true),\n-    CAPTION,\n-    CODE(true),\n-    DD,\n-    DETAILS,\n-    DIV,\n-    DL,\n-    DT,\n-    EM(true),\n-    FOOTER,\n-    FORM,\n-    H1,\n-    H2,\n-    H3,\n-    H4,\n-    H5,\n-    H6,\n-    HEAD,\n-    HEADER,\n-    HR,\n-    HTML,\n-    I(true),\n-    IMG(true),\n-    INPUT(true),\n-    LABEL(true),\n-    LI,\n-    LISTING,\n-    LINK(true),\n-    MAIN,\n-    MENU,\n-    META,\n-    NAV,\n-    NOSCRIPT(true),\n-    OL,\n-    P,\n-    PRE,\n-    SCRIPT(true),\n-    SECTION,\n-    SMALL(true),\n-    SPAN(true),\n-    STRONG(true),\n-    SUB(true),\n-    SUMMARY,\n-    SUP(true),\n-    TABLE,\n-    TBODY,\n-    THEAD,\n-    TD,\n-    TH,\n-    TITLE,\n-    TR,\n-    UL,\n-    WBR(true);\n-\n-    public final String value;\n-    public final boolean phrasingContent;\n-\n-    static TagName of(String s) {\n-        return valueOf(s.toUpperCase(Locale.ROOT));\n-    }\n-\n-    TagName() {\n-        this(false);\n-    }\n-\n-    TagName(boolean phrasingContent) {\n-        this.value = Utils.toLowerCase(name());\n-        this.phrasingContent = phrasingContent;\n-    }\n-\n-    public String toString() {\n-        return value;\n-    }\n-\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/TagName.java","additions":0,"deletions":118,"binary":false,"changes":118,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n- * {@link jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree HtmlTree}\n+ * {@link jdk.javadoc.internal.html.HtmlTree HtmlTree}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -235,0 +235,14 @@\n+    \/\/ Reset animation for type parameter target highlight\n+    document.querySelectorAll(\"a\").forEach((link) => {\n+        link.addEventListener(\"click\", (e) => {\n+            const href = e.currentTarget.getAttribute(\"href\");\n+            if (href && href.startsWith(\"#\") && href.indexOf(\"type-param-\") > -1) {\n+                const target = document.getElementById(decodeURI(href.substring(1)));\n+                if (target) {\n+                    target.style.animation = \"none\";\n+                    void target.offsetHeight;\n+                    target.style.removeProperty(\"animation\");\n+                }\n+            }\n+        })\n+    });\n@@ -289,1 +303,1 @@\n-    function collapse() {\n+    function collapse(e) {\n@@ -339,1 +353,1 @@\n-            var id = hdr.getAttribute(\"id\") || hdr.parentElement.getAttribute(\"id\")\n+            var id = hdr.parentElement.getAttribute(\"id\") || hdr.getAttribute(\"id\")\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    --search-tag-highlight-color: #ffff00;\n+    --search-tag-highlight-color: #ffff66;\n@@ -310,1 +310,1 @@\n-    margin:10px 0;\n+    margin:10px 0 12px 0;\n@@ -991,0 +991,16 @@\n+dd > span:target,\n+h1 > span:target {\n+    animation: 2.4s ease-out highlight;\n+}\n+section.class-description dd > span:target,\n+section.class-description h1 > span:target {\n+    scroll-margin-top: 20em;\n+}\n+@keyframes highlight {\n+    from {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+    60% {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+}\n@@ -1043,1 +1059,1 @@\n-    margin: 10px 0 10px 0;\n+    margin: 10px 0;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -40,0 +39,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/BaseTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,4 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +40,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -64,1 +64,1 @@\n-                result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n@@ -75,1 +75,1 @@\n-                result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n@@ -81,1 +81,1 @@\n-                        result.add(HtmlTree.DIV(HtmlStyle.deprecationComment, body));\n+                        result.add(HtmlTree.DIV(HtmlStyles.deprecationComment, body));\n@@ -86,1 +86,1 @@\n-                    result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                    result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/DeprecatedTaglet.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/DocRootTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/IndexTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -48,0 +47,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/InheritDocTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,3 +49,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -55,0 +52,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -179,1 +179,1 @@\n-                String refModuleName =  ch.getReferencedModuleName(refSignature);\n+                String refModuleName = ch.getReferencedModuleName(refSignature);\n@@ -193,1 +193,1 @@\n-                                new Object[] { refSignature});\n+                                new Object[] {refSignature});\n@@ -196,1 +196,1 @@\n-                            Optional.of(labelContent.isEmpty() ? text: labelContent));\n+                            Optional.of(labelContent.isEmpty() ? text : labelContent));\n@@ -199,0 +199,16 @@\n+        } else if (utils.isTypeParameterElement(ref)) {\n+            \/\/ This is a type parameter of a generic class, method or constructor\n+            if (labelContent.isEmpty()) {\n+                labelContent = plainOrCode(isPlain, Text.of(utils.getSimpleName(ref)));\n+            }\n+            if (refMem == null) {\n+                return htmlWriter.getLink(\n+                        new HtmlLinkInfo(config, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS, ref.asType())\n+                                .label(labelContent));\n+            } else {\n+                \/\/ HtmlLinkFactory does not render type parameters of generic methods as links, so instead of\n+                \/\/ teaching it how to do it (making the code even more complex) just create the link directly.\n+                return htmlWriter.getLink(new HtmlLinkInfo(config, HtmlLinkInfo.Kind.PLAIN, refClass)\n+                        .fragment(config.htmlIds.forTypeParam(ref.getSimpleName().toString(), refMem).name())\n+                        .label((labelContent)));\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LinkTaglet.java","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -37,3 +37,3 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LiteralTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,4 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -53,0 +49,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -281,1 +281,3 @@\n-        return HtmlTree.DD(body);\n+        return HtmlTree.DD(paramTag.isTypeParameter()\n+                ? HtmlTree.SPAN_ID(config.htmlIds.forTypeParam(paramName, element), body)\n+                : body);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ParamTaglet.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,3 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -49,0 +46,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ReturnTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -58,0 +54,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SeeTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,4 +45,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -50,0 +46,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SimpleTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,5 +54,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -64,1 +60,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -69,0 +64,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -125,1 +125,1 @@\n-        var pre = new HtmlTree(TagName.PRE).setStyle(HtmlStyle.snippet);\n+        var pre = new HtmlTree(HtmlTag.PRE).setStyle(HtmlStyles.snippet);\n@@ -131,1 +131,1 @@\n-        var code = new HtmlTree(TagName.CODE)\n+        var code = new HtmlTree(HtmlTag.CODE)\n@@ -199,2 +199,2 @@\n-        var snippetContainer = HtmlTree.DIV(HtmlStyle.snippetContainer,\n-                new HtmlTree(TagName.BUTTON)\n+        var snippetContainer = HtmlTree.DIV(HtmlStyles.snippetContainer,\n+                new HtmlTree(HtmlTag.BUTTON)\n@@ -203,1 +203,1 @@\n-                        .add(new HtmlTree(TagName.IMG)\n+                        .add(new HtmlTree(HtmlTag.IMG)\n@@ -207,2 +207,2 @@\n-                        .addStyle(HtmlStyle.copy)\n-                        .addStyle(HtmlStyle.snippetCopy)\n+                        .addStyle(HtmlStyles.copy)\n+                        .addStyle(HtmlStyles.snippetCopy)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.stream.Collectors;\n@@ -45,7 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TextBuilder;\n@@ -55,0 +47,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n+import jdk.javadoc.internal.html.Text;\n+import jdk.javadoc.internal.html.TextBuilder;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SpecTaglet.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SummaryTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SystemPropertyTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+\n@@ -32,0 +33,1 @@\n+\n@@ -33,2 +35,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/Taglet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-\n@@ -48,0 +47,1 @@\n+\n@@ -52,8 +52,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.IndexWriter;\n-import jdk.javadoc.internal.doclets.formats.html.SummaryListWriter;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -67,0 +60,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -380,1 +378,1 @@\n-            result = HtmlTree.SPAN(id, HtmlStyle.searchTagResult, tagContent);\n+            result = HtmlTree.SPAN(id, HtmlStyles.searchTagResult, tagContent);\n@@ -460,1 +458,1 @@\n-        var list = HtmlTree.UL(hasLongLabels ? HtmlStyle.tagListLong : HtmlStyle.tagList);\n+        var list = HtmlTree.UL(hasLongLabels ? HtmlStyles.tagListLong : HtmlStyles.tagList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/TagletWriter.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -60,3 +60,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -66,0 +63,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ThrowsTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.RawHtml;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/UserTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -44,1 +43,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -46,0 +44,2 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ValueTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=Referenzkomponenten werden verglichen mit {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}; primitive Komponenten werden verglichen mit \"==\".\n+doclet.record_equals_doc.fullbody.tail.both=Referenzkomponenten werden verglichen mit {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}. Primitive Komponenten werden mit der <code>compare<\/code>-Methode aus den entsprechenden Wrapper-Klassen verglichen.\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=Alle Komponenten in dieser Datensatzklasse werden verglichen mit \"==\".\n+doclet.record_equals_doc.fullbody.tail.primitive=Alle Komponenten dieser Datensatzklasse werden mit der <code>compare<\/code>-Methode aus den entsprechenden Wrapper-Klassen verglichen.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_de.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=参照コンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}と比較され、プリミティブ・コンポーネントは'=='と比較されます。\n+doclet.record_equals_doc.fullbody.tail.both=参照コンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}と比較され、プリミティブ・コンポーネントは対応するラッパー・クラスの<code>compare<\/code>メソッドで比較されます。\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=このレコード・クラスのすべてのコンポーネントは'=='と比較されます。\n+doclet.record_equals_doc.fullbody.tail.primitive=このレコード・クラスのすべてのコンポーネントは対応するラッパー・クラスの<code>compare<\/code>メソッドで比較されます。\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_ja.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=使用 {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)} 对参考组件进行比较；使用 '==' 对基元组件进行比较\n+doclet.record_equals_doc.fullbody.tail.both=使用 {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)} 对参考组件进行比较；使用 <code>compare<\/code> 方法从对应的包装类对基元组件进行比较。\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=此记录类中的所有组件都使用 '==' 进行比较。\n+doclet.record_equals_doc.fullbody.tail.primitive=此记录类中的所有组件都使用 <code>compare<\/code> 方法从对应的包装类进行比较。\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,0 +191,6 @@\n+        } else if (utils.isTypeParameterElement(e)) {\n+            \/\/ Return the enclosing member for type parameters of generic methods or constructors.\n+            Element encl = e.getEnclosingElement();\n+            if (utils.isExecutableElement(encl)) {\n+                return encl;\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,3 +104,10 @@\n-import jdk.javadoc.internal.doclint.HtmlTag.AttrKind;\n-import jdk.javadoc.internal.doclint.HtmlTag.ElemKind;\n-import static jdk.javadoc.internal.doclint.Messages.Group.*;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlAttr.AttrKind;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTag.ElemKind;\n+\n+import static jdk.javadoc.internal.doclint.Messages.Group.ACCESSIBILITY;\n+import static jdk.javadoc.internal.doclint.Messages.Group.HTML;\n+import static jdk.javadoc.internal.doclint.Messages.Group.MISSING;\n+import static jdk.javadoc.internal.doclint.Messages.Group.REFERENCE;\n+import static jdk.javadoc.internal.doclint.Messages.Group.SYNTAX;\n@@ -135,1 +142,1 @@\n-        final Set<HtmlTag.Attr> attrs;\n+        final Set<HtmlAttr> attrs;\n@@ -140,1 +147,1 @@\n-            attrs = EnumSet.noneOf(HtmlTag.Attr.class);\n+            attrs = EnumSet.noneOf(HtmlAttr.class);\n@@ -402,1 +409,1 @@\n-        final HtmlTag t = HtmlTag.get(treeName);\n+        final HtmlTag t = HtmlTag.of(treeName);\n@@ -475,1 +482,1 @@\n-                        if (!top.attrs.contains(HtmlTag.Attr.ALT))\n+                        if (!top.attrs.contains(HtmlAttr.ALT))\n@@ -595,1 +602,1 @@\n-        final HtmlTag t = HtmlTag.get(treeName);\n+        final HtmlTag t = HtmlTag.of(treeName);\n@@ -608,1 +615,1 @@\n-                                    && !top.attrs.contains(HtmlTag.Attr.SUMMARY)\n+                                    && !top.attrs.contains(HtmlAttr.SUMMARY)\n@@ -685,1 +692,1 @@\n-            HtmlTag.Attr attr = currTag.getAttr(name);\n+            HtmlAttr attr = currTag.getAttr(name);\n@@ -761,1 +768,2 @@\n-                                    env.messages.error(HTML, tree, \"dc.attr.table.border.not.valid\", attr);\n+                                    env.messages.error(HTML, tree, \"dc.attr.table.border.not.valid\",\n+                                            (v == null ? tree : v));\n@@ -764,1 +772,1 @@\n-                                env.messages.error(HTML, tree, \"dc.attr.table.border.not.number\", attr);\n+                                env.messages.error(HTML, tree, \"dc.attr.table.border.not.number\", v);\n@@ -770,1 +778,2 @@\n-                                    env.messages.error(HTML, tree, \"dc.attr.img.border.not.valid\", attr);\n+                                    env.messages.error(HTML, tree, \"dc.attr.img.border.not.valid\",\n+                                            (v == null ? tree : v));\n@@ -773,1 +782,1 @@\n-                                env.messages.error(HTML, tree, \"dc.attr.img.border.not.number\", attr);\n+                                env.messages.error(HTML, tree, \"dc.attr.img.border.not.number\", v);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1,674 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclint;\n-\n-import java.util.EnumMap;\n-import java.util.EnumSet;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Set;\n-import javax.lang.model.element.Name;\n-\n-import com.sun.tools.javac.util.StringUtils;\n-\n-import static jdk.javadoc.internal.doclint.HtmlTag.Attr.*;\n-\n-\/**\n- * Enum representing HTML tags.\n- *\n- * The intent of this class is to embody the semantics of the current HTML standard,\n- * to the extent supported\/used by javadoc.\n- *\n- * This class is derivative of {@link jdk.javadoc.internal.doclets.formats.html.markup.TagName}.\n- * Eventually, these two should be merged back together, and possibly made\n- * public.\n- *\n- * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/\">HTML Living Standard<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/html5\/\">HTML 5 Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/REC-html40\/\">HTML 4.01 Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/wai-aria\/\">WAI-ARIA Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/aria-in-html\/#recommendations-table\">WAI-ARIA Recommendations Table<\/a>\n- *\/\n-public enum HtmlTag {\n-    A(BlockType.INLINE, EndKind.REQUIRED,\n-            attrs(AttrKind.OK, HREF, TARGET, ID),\n-            attrs(AttrKind.HTML4, REV, CHARSET, SHAPE, COORDS, NAME)),\n-\n-    ABBR(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ACRONYM(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ADDRESS(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ARTICLE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    ASIDE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    B(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    BDI(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    BIG(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    BLOCKQUOTE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    BODY(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    BR(BlockType.INLINE, EndKind.NONE,\n-            attrs(AttrKind.HTML4, CLEAR)),\n-\n-    CAPTION(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    CENTER(ElemKind.HTML4, BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    CITE(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    CODE(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    COL(BlockType.TABLE_ITEM, EndKind.NONE,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)),\n-\n-    COLGROUP(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == COL);\n-        }\n-    },\n-\n-    DD(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n-\n-    DEL(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n-            attrs(AttrKind.OK, Attr.CITE, Attr.DATETIME)),\n-\n-    DFN(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    DIV(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    DL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, COMPACT)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == DT) || (t == DD);\n-        }\n-    },\n-\n-    DT(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n-\n-    EM(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.NO_NEST)),\n-\n-    FONT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED, \/\/ tag itself is deprecated\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, SIZE, COLOR, FACE)),\n-\n-    FOOTER(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case HEADER: case FOOTER: case MAIN:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    FIGURE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    FIGCAPTION(BlockType.BLOCK, EndKind.REQUIRED),\n-\n-    FRAME(ElemKind.HTML4, BlockType.OTHER, EndKind.NONE),\n-\n-    FRAMESET(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n-\n-    H1(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H2(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H3(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H4(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H5(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H6(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    HEAD(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    HEADER(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case HEADER: case FOOTER: case MAIN:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    HR(BlockType.BLOCK, EndKind.NONE,\n-            attrs(AttrKind.HTML4, WIDTH, ALIGN, NOSHADE, SIZE)),\n-\n-    HTML(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    I(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    IFRAME(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    IMG(BlockType.INLINE, EndKind.NONE,\n-            attrs(AttrKind.OK, SRC, ALT, HEIGHT, WIDTH, CROSSORIGIN),\n-            attrs(AttrKind.HTML4, NAME, ALIGN, HSPACE, VSPACE, BORDER)),\n-\n-    INS(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n-            attrs(AttrKind.OK, Attr.CITE, Attr.DATETIME)),\n-\n-    KBD(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    LI(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, VALUE),\n-            attrs(AttrKind.HTML4, TYPE)),\n-\n-    LINK(BlockType.OTHER, EndKind.NONE),\n-\n-    MAIN(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    MARK(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    MENU(BlockType.BLOCK, EndKind.REQUIRED) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    META(BlockType.OTHER, EndKind.NONE),\n-\n-    NAV(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    NOFRAMES(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n-\n-    NOSCRIPT(BlockType.BLOCK, EndKind.REQUIRED),\n-\n-    OL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.OK, START, TYPE, REVERSED),\n-            attrs(AttrKind.HTML4, COMPACT)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    P(BlockType.BLOCK, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    PRE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, WIDTH)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case IMG: case BIG: case SMALL: case SUB: case SUP:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    Q(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    S(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SAMP(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SCRIPT(BlockType.OTHER, EndKind.REQUIRED,\n-            attrs(AttrKind.OK, SRC)),\n-\n-    SECTION(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    SMALL(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    SPAN(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STRIKE(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STRONG(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STYLE(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    SUB(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SUP(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    TABLE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.OK, BORDER),\n-            attrs(AttrKind.HTML4, SUMMARY, CELLPADDING, CELLSPACING,\n-                    Attr.FRAME, RULES, WIDTH, ALIGN, BGCOLOR)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case CAPTION:\n-                case COLGROUP:\n-                case THEAD: case TBODY: case TFOOT:\n-                case TR: \/\/ HTML 3.2\n-                    return true;\n-                default:\n-                    return false;\n-            }\n-        }\n-    },\n-\n-    TBODY(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TD(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS),\n-            attrs(AttrKind.HTML4, AXIS, Attr.ABBR, SCOPE, ALIGN, VALIGN, CHAR, CHAROFF,\n-                    WIDTH, BGCOLOR, HEIGHT, NOWRAP)),\n-\n-    TEMPLATE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    TFOOT(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TH(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS, SCOPE, Attr.ABBR),\n-            attrs(AttrKind.HTML4, WIDTH, BGCOLOR, HEIGHT, NOWRAP, AXIS, ALIGN, CHAR, CHAROFF, VALIGN)),\n-\n-    THEAD(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TIME(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    TITLE(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    TR(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, BGCOLOR, VALIGN)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TH) || (t == TD);\n-        }\n-    },\n-\n-    TT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    U(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    UL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, COMPACT, TYPE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    WBR(BlockType.INLINE, EndKind.NONE),\n-\n-    VAR(BlockType.INLINE, EndKind.REQUIRED);\n-\n-    \/**\n-     * Enum representing the supportability of HTML element.\n-     *\/\n-    public enum ElemKind {\n-        OK,\n-        INVALID,\n-        OBSOLETE,\n-        HTML4\n-    }\n-\n-    \/**\n-     * Enum representing the type of HTML element.\n-     *\/\n-    public enum BlockType {\n-        BLOCK,\n-        INLINE,\n-        LIST_ITEM,\n-        TABLE_ITEM,\n-        OTHER\n-    }\n-\n-    \/**\n-     * Enum representing HTML end tag requirement.\n-     *\/\n-    public enum EndKind {\n-        NONE,\n-        OPTIONAL,\n-        REQUIRED\n-    }\n-\n-    public enum Flag {\n-        ACCEPTS_BLOCK,\n-        ACCEPTS_INLINE,\n-        EXPECT_CONTENT,\n-        NO_NEST\n-    }\n-\n-    public enum Attr {\n-        ABBR,\n-        ACCESSKEY(true),\n-        ALIGN,\n-        ALINK,\n-        ALT,\n-        ARIA_ACTIVEDESCENDANT(true),\n-        ARIA_CONTROLS(true),\n-        ARIA_DESCRIBEDBY(true),\n-        ARIA_EXPANDED(true),\n-        ARIA_LABEL(true),\n-        ARIA_LABELLEDBY(true),\n-        ARIA_LEVEL(true),\n-        ARIA_MULTISELECTABLE(true),\n-        ARIA_OWNS(true),\n-        ARIA_POSINSET(true),\n-        ARIA_READONLY(true),\n-        ARIA_REQUIRED(true),\n-        ARIA_SELECTED(true),\n-        ARIA_SETSIZE(true),\n-        ARIA_SORT(true),\n-        AUTOCAPITALIZE(true),\n-        AUTOFOCUS(true),\n-        AXIS,\n-        BACKGROUND,\n-        BGCOLOR,\n-        BORDER,\n-        CELLPADDING,\n-        CELLSPACING,\n-        CHAR,\n-        CHAROFF,\n-        CHARSET,\n-        CITE,\n-        CLASS(true),\n-        CLEAR,\n-        COLOR,\n-        COLSPAN,\n-        COMPACT,\n-        CONTENTEDITABLE(true),\n-        COORDS,\n-        CROSSORIGIN,\n-        DATETIME,\n-        DIR(true),\n-        DRAGGABLE(true),\n-        ENTERKEYHINT(true),\n-        FACE,\n-        FRAME,\n-        FRAMEBORDER,\n-        HEADERS,\n-        HEIGHT,\n-        HIDDEN(true),\n-        HREF,\n-        HSPACE,\n-        ID(true),\n-        INERT(true),\n-        INPUTMODE(true),\n-        IS(true),\n-        ITEMID(true),\n-        ITEMPROP(true),\n-        ITEMREF(true),\n-        ITEMSCOPE(true),\n-        ITEMTYPE(true),\n-        LANG(true),\n-        LINK,\n-        LONGDESC,\n-        MARGINHEIGHT,\n-        MARGINWIDTH,\n-        NAME,\n-        NONCE(true),\n-        NOSHADE,\n-        NOWRAP,\n-        POPOVER(true),\n-        PROFILE,\n-        REV,\n-        REVERSED,\n-        ROLE(true),\n-        ROWSPAN,\n-        RULES,\n-        SCHEME,\n-        SCOPE,\n-        SCROLLING,\n-        SHAPE,\n-        SIZE,\n-        SPACE,\n-        SPELLCHECK(true),\n-        SRC,\n-        START,\n-        STYLE(true),\n-        SUMMARY,\n-        TABINDEX(true),\n-        TARGET,\n-        TEXT,\n-        TITLE(true),\n-        TRANSLATE(true),\n-        TYPE,\n-        VALIGN,\n-        VALUE,\n-        VERSION,\n-        VLINK,\n-        VSPACE,\n-        WIDTH,\n-        WRITINGSUGGESTIONS(true);\n-\n-        private final String name;\n-        private final boolean isGlobal;\n-\n-        Attr() {\n-            this(false);\n-        }\n-\n-        Attr(boolean flag) {\n-            name = StringUtils.toLowerCase(name().replace(\"_\", \"-\"));\n-            isGlobal = flag;\n-        }\n-\n-        public boolean isGlobal() {\n-            return isGlobal;\n-        }\n-\n-        public String getText() {\n-            return name;\n-        }\n-\n-        static final Map<String,Attr> index = new HashMap<>();\n-        static {\n-            for (Attr t: values()) {\n-                index.put(t.getText(), t);\n-            }\n-        }\n-    }\n-\n-    public enum AttrKind {\n-        OK,\n-        INVALID,\n-        OBSOLETE,\n-        HTML4\n-    }\n-\n-    \/\/ This class exists to avoid warnings from using parameterized vararg type\n-    \/\/ Map<Attr,AttrKind> in signature of HtmlTag constructor.\n-    private static class AttrMap extends EnumMap<Attr,AttrKind>  {\n-        private static final long serialVersionUID = 0;\n-        AttrMap() {\n-            super(Attr.class);\n-        }\n-    }\n-\n-\n-    public final ElemKind elemKind;\n-    public final BlockType blockType;\n-    public final EndKind endKind;\n-    public final Set<Flag> flags;\n-    private final Map<Attr,AttrKind> attrs;\n-\n-    HtmlTag(BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n-        this(ElemKind.OK, blockType, endKind, Set.of(), attrMaps);\n-    }\n-\n-    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n-        this(elemKind, blockType, endKind, Set.of(), attrMaps);\n-    }\n-\n-    HtmlTag(BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n-        this(ElemKind.OK, blockType, endKind, flags, attrMaps);\n-    }\n-\n-    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n-        this.elemKind = elemKind;\n-        this.blockType = blockType;\n-        this.endKind = endKind;\n-        this.flags = flags;\n-        this.attrs = new EnumMap<>(Attr.class);\n-        for (Map<Attr,AttrKind> m: attrMaps)\n-            this.attrs.putAll(m);\n-    }\n-\n-    public boolean accepts(HtmlTag t) {\n-        if (flags.contains(Flag.ACCEPTS_BLOCK) && flags.contains(Flag.ACCEPTS_INLINE)) {\n-            return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-        } else if (flags.contains(Flag.ACCEPTS_BLOCK)) {\n-            return (t.blockType == BlockType.BLOCK);\n-        } else if (flags.contains(Flag.ACCEPTS_INLINE)) {\n-            return (t.blockType == BlockType.INLINE);\n-        } else\n-            switch (blockType) {\n-                case BLOCK:\n-                case INLINE:\n-                    return (t.blockType == BlockType.INLINE);\n-                case OTHER:\n-                    \/\/ OTHER tags are invalid in doc comments, and will be\n-                    \/\/ reported separately, so silently accept\/ignore any content\n-                    return true;\n-                default:\n-                    \/\/ any combination which could otherwise arrive here\n-                    \/\/ ought to have been handled in an overriding method\n-                    throw new AssertionError(this + \":\" + t);\n-            }\n-    }\n-\n-    public boolean acceptsText() {\n-        \/\/ generally, anywhere we can put text we can also put inline tag\n-        \/\/ so check if a typical inline tag is allowed\n-        return accepts(B);\n-    }\n-\n-    public String getText() {\n-        return StringUtils.toLowerCase(name());\n-    }\n-\n-    public Attr getAttr(Name attrName) {\n-        return Attr.index.get(StringUtils.toLowerCase(attrName.toString()));\n-    }\n-\n-    public AttrKind getAttrKind(Name attrName) {\n-        Attr attr = getAttr(attrName);\n-        if (attr == null) {\n-            return AttrKind.INVALID;\n-        }\n-        return attr.isGlobal() ?\n-                AttrKind.OK :\n-                attrs.getOrDefault(attr, AttrKind.INVALID);\n-    }\n-\n-    private static AttrMap attrs(AttrKind k, Attr... attrs) {\n-        AttrMap map = new AttrMap();\n-        for (Attr a: attrs) map.put(a, k);\n-        return map;\n-    }\n-\n-    private static final Map<String, HtmlTag> index = new HashMap<>();\n-    static {\n-        for (HtmlTag t: values()) {\n-            index.put(t.getText(), t);\n-        }\n-    }\n-\n-    public static HtmlTag get(Name tagName) {\n-        return index.get(StringUtils.toLowerCase(tagName.toString()));\n-    }\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":0,"deletions":674,"binary":false,"changes":674,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -32,2 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Comment.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Comment.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Content.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Content.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -34,2 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/ContentBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/DocType.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/DocType.java","status":"renamed"},{"patch":"@@ -26,3 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Entity.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Entity.java","status":"renamed"},{"patch":"@@ -0,0 +1,275 @@\n+\/*\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Locale;\n+\n+\n+\/**\n+ * An abstraction for the type-safe representation and use of HTML attributes.\n+ *\n+ * @apiNote\n+ * Attributes are used when performing simple validity checks on HTML in\n+ * documentation comments, and when generating HTML for output.\n+ *\n+ * @see HtmlTree#put(HtmlAttr, String)\n+ *\/\n+public enum HtmlAttr {\n+    ABBR,\n+    ACCESSKEY(true),\n+    ALIGN,\n+    ALINK,\n+    ALT,\n+    ARIA_ACTIVEDESCENDANT(true),\n+    ARIA_CONTROLS(true),\n+    ARIA_DESCRIBEDBY(true),\n+    ARIA_EXPANDED(true),\n+    ARIA_LABEL(true),\n+    ARIA_LABELLEDBY(true),\n+    ARIA_LEVEL(true),\n+    ARIA_MULTISELECTABLE(true),\n+    ARIA_ORIENTATION(true),\n+    ARIA_OWNS(true),\n+    ARIA_POSINSET(true),\n+    ARIA_READONLY(true),\n+    ARIA_REQUIRED(true),\n+    ARIA_SELECTED(true),\n+    ARIA_SETSIZE(true),\n+    ARIA_SORT(true),\n+    AUTOCAPITALIZE(true),\n+    AUTOCOMPLETE,\n+    AUTOFOCUS(true),\n+    AXIS,\n+    BACKGROUND,\n+    BGCOLOR,\n+    BORDER,\n+    CELLPADDING,\n+    CELLSPACING,\n+    CHAR,\n+    CHAROFF,\n+    CHARSET,\n+    CHECKED,\n+    CITE,\n+    CLASS(true),\n+    CLEAR,\n+    COLOR,\n+    COLS,\n+    COLSPAN,\n+    COMPACT,\n+    CONTENT,\n+    CONTENTEDITABLE(true),\n+    COORDS,\n+    CROSSORIGIN,\n+    DATA_COPIED, \/\/ custom HTML5 data attribute\n+    DATETIME,\n+    DIR(true),\n+    DISABLED,\n+    DRAGGABLE(true),\n+    ENTERKEYHINT(true),\n+    FACE,\n+    FOR,\n+    FORM,\n+    FRAME,\n+    FRAMEBORDER,\n+    HEADERS,\n+    HEIGHT,\n+    HIDDEN(true),\n+    HREF,\n+    HSPACE,\n+    HTTP_EQUIV,\n+    ID(true),\n+    INERT(true),\n+    INPUTMODE(true),\n+    IS(true),\n+    ITEMID(true),\n+    ITEMPROP(true),\n+    ITEMREF(true),\n+    ITEMSCOPE(true),\n+    ITEMTYPE(true),\n+    LANG(true),\n+    LINK,\n+    LONGDESC,\n+    MARGINHEIGHT,\n+    MARGINWIDTH,\n+    NAME,\n+    NONCE(true),\n+    NOSHADE,\n+    NOWRAP,\n+    ONCLICK,\n+    ONKEYDOWN,\n+    ONLOAD,\n+    PLACEHOLDER,\n+    POPOVER(true),\n+    PROFILE,\n+    REL,\n+    REV,\n+    REVERSED,\n+    ROLE(true),\n+    ROWS,\n+    ROWSPAN,\n+    RULES,\n+    SCHEME,\n+    SCOPE,\n+    SCROLLING,\n+    SHAPE,\n+    SIZE,\n+    SPACE,\n+    SPELLCHECK(true),\n+    SRC,\n+    START,\n+    STYLE(true),\n+    SUMMARY,\n+    TABINDEX(true),\n+    TARGET,\n+    TEXT,\n+    TITLE(true),\n+    TRANSLATE(true),\n+    TYPE,\n+    VALIGN,\n+    VALUE,\n+    VERSION,\n+    VLINK,\n+    VSPACE,\n+    WIDTH,\n+    WRITINGSUGGESTIONS(true);\n+\n+    \/**\n+     * The \"external\" name of this attribute.\n+     *\/\n+    private final String name;\n+\n+    \/**\n+     * Whether this is a global attribute, that can be used with all HTML tags.\n+     *\/\n+    private final boolean isGlobal;\n+\n+    \/**\n+     * An abstraction for the type-safe representation and use of ARIA roles.\n+     *\n+     * @see HtmlTree#setRole(Role)\n+     *\/\n+    public enum Role {\n+\n+        BANNER,\n+        CONTENTINFO,\n+        MAIN,\n+        NAVIGATION,\n+        REGION;\n+\n+        private final String role;\n+\n+        Role() {\n+            role = name().toLowerCase(Locale.ROOT);\n+        }\n+\n+        public String toString() {\n+            return role;\n+        }\n+    }\n+\n+    \/**\n+     * An abstraction for the type-safe representation and use of \"input\" types.\n+     *\n+     * @see HtmlTree#INPUT(InputType, HtmlId)\n+     * @see HtmlTree#INPUT(InputType, HtmlStyle)\n+     *\/\n+    public enum InputType {\n+\n+        CHECKBOX,\n+        RESET,\n+        TEXT;\n+\n+        private final String type;\n+\n+        InputType() {\n+            type = name().toLowerCase(Locale.ROOT);\n+        }\n+\n+        public String toString() {\n+            return type;\n+        }\n+    }\n+\n+    \/**\n+     * An abstraction for the kind of an attribute in the context of an HTML tag.\n+     *\n+     * @see HtmlTag#attrs(AttrKind,HtmlAttr...)\n+     *\/\n+    public enum AttrKind {\n+        OK,\n+        INVALID,\n+        OBSOLETE,\n+        HTML4\n+    }\n+\n+    HtmlAttr() {\n+        this(false);\n+    }\n+\n+    HtmlAttr(boolean flag) {\n+        name = name().toLowerCase(Locale.ROOT).replace(\"_\", \"-\");\n+        isGlobal = flag;\n+    }\n+\n+    \/**\n+     * {@return the \"external\" name of this attribute}\n+     * The external name is the name of the enum member in lower case with {@code _} replaced by {@code -}.\n+     *\/\n+    public String getName() {\n+        return name;\n+    }\n+\n+    \/**\n+     * {@return whether this attribute is a global attribute, that may appear on all tags}\n+     *\/\n+    public boolean isGlobal() {\n+        return isGlobal;\n+    }\n+\n+    \/\/ FIXME: this is used in doclint Checker, when generating messages\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+    private static final Map<String, HtmlAttr> index = new HashMap<>();\n+    static {\n+        for (HtmlAttr t : values()) {\n+            index.put(t.getName(), t);\n+        }\n+    }\n+\n+    \/**\n+     * {@return the attribute with the given name, or {@code null} if there is no known attribute}\n+     *\n+     * @param name the name\n+     *\/\n+    public static HtmlAttr of(CharSequence name) {\n+        return index.get(name.toString().toLowerCase(Locale.ROOT));\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlAttr.java","additions":275,"deletions":0,"binary":false,"changes":275,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlId.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlId.java","status":"renamed"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+\/**\n+ * An abstraction for the type-safe representation and use of CSS class names.\n+ *\n+ * @apiNote\n+ * Despite the name, implementations of this interface provide values for the HTML\n+ * {@code class} attribute, and <strong>not<\/strong> the HTML {@code style} attribute.\n+ * This is to avoid confusion with the widespread use of the word \"class\" in the Java ecosystem,\n+ * and the potential for clashes with methods called {@code setClass} instead of {@code setStyle}.\n+ *\n+ * @see HtmlTree#addStyle(HtmlStyle)\n+ * @see HtmlTree#setStyle(HtmlStyle)\n+ *\/\n+public interface HtmlStyle {\n+    String cssName();\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlStyle.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,535 @@\n+\/*\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+import java.io.Serial;\n+import java.util.EnumMap;\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.lang.model.element.Name;\n+\n+import static jdk.javadoc.internal.html.HtmlAttr.*;\n+\n+\/**\n+ * Enum representing HTML tags.\n+ *\n+ * The intent of this class is to embody the semantics of the current HTML standard,\n+ * to the extent supported\/used by javadoc.\n+ *\n+ * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/\">HTML Living Standard<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/html5\/\">HTML 5 Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/REC-html40\/\">HTML 4.01 Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/wai-aria\/\">WAI-ARIA Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/aria-in-html\/#recommendations-table\">WAI-ARIA Recommendations Table<\/a>\n+ *\/\n+public enum HtmlTag {\n+    A(BlockType.INLINE, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, HREF, TARGET, ID),\n+            attrs(AttrKind.HTML4, REV, CHARSET, SHAPE, COORDS, NAME)),\n+\n+    ABBR(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ACRONYM(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ADDRESS(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ARTICLE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    ASIDE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    B(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    BDI(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    BIG(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    BLOCKQUOTE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    BODY(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    BR(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.HTML4, CLEAR)),\n+\n+    BUTTON(BlockType.INLINE, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, FORM, NAME, TYPE, VALUE)),\n+\n+    CAPTION(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    CENTER(ElemKind.HTML4, BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    CITE(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    CODE(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    COL(BlockType.TABLE_ITEM, EndKind.NONE,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)),\n+\n+    COLGROUP(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == COL);\n+        }\n+    },\n+\n+    DD(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n+\n+    DEL(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n+            attrs(AttrKind.OK, HtmlAttr.CITE, HtmlAttr.DATETIME)),\n+\n+    DETAILS(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    DFN(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    DIV(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    DL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, COMPACT)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == DT) || (t == DD);\n+        }\n+    },\n+\n+    DT(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n+\n+    EM(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.NO_NEST)),\n+\n+    FONT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED, \/\/ tag itself is deprecated\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, SIZE, COLOR, FACE)),\n+\n+    FOOTER(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case HEADER, FOOTER, MAIN -> false;\n+                default -> (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    FIGURE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    FIGCAPTION(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    FRAME(ElemKind.HTML4, BlockType.OTHER, EndKind.NONE),\n+\n+    FRAMESET(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n+\n+    H1(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H2(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H3(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H4(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H5(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H6(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    HEAD(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    HEADER(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case HEADER, FOOTER, MAIN -> false;\n+                default -> (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    HR(BlockType.BLOCK, EndKind.NONE,\n+            attrs(AttrKind.HTML4, WIDTH, ALIGN, NOSHADE, SIZE)),\n+\n+    HTML(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    I(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    IFRAME(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    IMG(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.OK, SRC, ALT, HEIGHT, WIDTH, CROSSORIGIN),\n+            attrs(AttrKind.HTML4, NAME, ALIGN, HSPACE, VSPACE, BORDER)),\n+\n+    INPUT(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.OK, NAME, TYPE, VALUE)),\n+\n+    INS(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n+            attrs(AttrKind.OK, HtmlAttr.CITE, HtmlAttr.DATETIME)),\n+\n+    KBD(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    LABEL(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    LI(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, VALUE),\n+            attrs(AttrKind.HTML4, TYPE)),\n+\n+    LINK(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.OK, REL)),\n+\n+    MAIN(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    MARK(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    MENU(BlockType.BLOCK, EndKind.REQUIRED) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    META(BlockType.OTHER, EndKind.NONE),\n+\n+    NAV(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    NOFRAMES(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n+\n+    NOSCRIPT(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    OL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.OK, START, TYPE, REVERSED),\n+            attrs(AttrKind.HTML4, COMPACT)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    P(BlockType.BLOCK, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    PRE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, WIDTH)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case IMG, BIG, SMALL, SUB, SUP -> false;\n+                default -> (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    Q(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    S(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SAMP(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SCRIPT(BlockType.INLINE, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, SRC, TYPE)),\n+\n+    SECTION(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    SMALL(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    SPAN(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STRIKE(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STRONG(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STYLE(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    SUB(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SUMMARY(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    SUP(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    TABLE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.OK, BORDER),\n+            attrs(AttrKind.HTML4, HtmlAttr.SUMMARY, CELLPADDING, CELLSPACING,\n+                    HtmlAttr.FRAME, RULES, WIDTH, ALIGN, BGCOLOR)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case CAPTION, COLGROUP, THEAD, TBODY, TFOOT, TR -> true;\n+                default -> false;\n+            };\n+        }\n+    },\n+\n+    TBODY(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TD(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS),\n+            attrs(AttrKind.HTML4, AXIS, HtmlAttr.ABBR, SCOPE, ALIGN, VALIGN, CHAR, CHAROFF,\n+                    WIDTH, BGCOLOR, HEIGHT, NOWRAP)),\n+\n+    TEMPLATE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    TFOOT(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TH(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS, SCOPE, HtmlAttr.ABBR),\n+            attrs(AttrKind.HTML4, WIDTH, BGCOLOR, HEIGHT, NOWRAP, AXIS, ALIGN, CHAR, CHAROFF, VALIGN)),\n+\n+    THEAD(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TIME(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    TITLE(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    TR(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, BGCOLOR, VALIGN)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TH) || (t == TD);\n+        }\n+    },\n+\n+    TT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    U(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    UL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, COMPACT, TYPE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    WBR(BlockType.INLINE, EndKind.NONE),\n+\n+    VAR(BlockType.INLINE, EndKind.REQUIRED);\n+\n+    \/**\n+     * Enum representing the supportability of HTML element.\n+     *\/\n+    public enum ElemKind {\n+        OK,\n+        INVALID,\n+        OBSOLETE,\n+        HTML4\n+    }\n+\n+    \/**\n+     * Enum representing the type of HTML element.\n+     *\/\n+    \/\/ See JDK-8337586 for suggestions\n+    public enum BlockType {\n+        BLOCK,\n+        INLINE,\n+        LIST_ITEM,\n+        TABLE_ITEM,\n+        OTHER\n+    }\n+\n+    \/**\n+     * Enum representing HTML end tag requirement.\n+     *\/\n+    public enum EndKind {\n+        NONE,\n+        OPTIONAL,\n+        REQUIRED\n+    }\n+\n+    public enum Flag {\n+        ACCEPTS_BLOCK,\n+        ACCEPTS_INLINE,\n+        EXPECT_CONTENT,\n+        NO_NEST\n+    }\n+\n+    \/\/ This class exists to avoid warnings from using parameterized vararg type\n+    \/\/ Map<Attr,AttrKind> in signature of HtmlTag constructor.\n+    private static class AttrMap extends EnumMap<HtmlAttr,AttrKind> {\n+        @Serial\n+        private static final long serialVersionUID = 0;\n+        AttrMap() {\n+            super(HtmlAttr.class);\n+        }\n+    }\n+\n+\n+    public final ElemKind elemKind;\n+    public final BlockType blockType;\n+    public final EndKind endKind;\n+    public final Set<Flag> flags;\n+    private final Map<HtmlAttr,AttrKind> attrs;\n+\n+    HtmlTag(BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n+        this(ElemKind.OK, blockType, endKind, Set.of(), attrMaps);\n+    }\n+\n+    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n+        this(elemKind, blockType, endKind, Set.of(), attrMaps);\n+    }\n+\n+    HtmlTag(BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n+        this(ElemKind.OK, blockType, endKind, flags, attrMaps);\n+    }\n+\n+    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n+        this.elemKind = elemKind;\n+        this.blockType = blockType;\n+        this.endKind = endKind;\n+        this.flags = flags;\n+        this.attrs = new EnumMap<>(HtmlAttr.class);\n+        for (Map<HtmlAttr,AttrKind> m: attrMaps)\n+            this.attrs.putAll(m);\n+    }\n+\n+    public boolean accepts(HtmlTag t) {\n+        if (flags.contains(Flag.ACCEPTS_BLOCK) && flags.contains(Flag.ACCEPTS_INLINE)) {\n+            return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+        } else if (flags.contains(Flag.ACCEPTS_BLOCK)) {\n+            return (t.blockType == BlockType.BLOCK);\n+        } else if (flags.contains(Flag.ACCEPTS_INLINE)) {\n+            return (t.blockType == BlockType.INLINE);\n+        } else {\n+            \/\/ any combination which could otherwise arrive here\n+            \/\/ ought to have been handled in an overriding method\n+            return switch (blockType) {\n+                case BLOCK, INLINE -> (t.blockType == BlockType.INLINE);\n+                case OTHER ->\n+                    \/\/ OTHER tags are invalid in doc comments, and will be\n+                    \/\/ reported separately, so silently accept\/ignore any content\n+                        true;\n+                default -> throw new AssertionError(this + \":\" + t);\n+            };\n+        }\n+    }\n+\n+    public boolean acceptsText() {\n+        \/\/ generally, anywhere we can put text we can also put inline tag\n+        \/\/ so check if a typical inline tag is allowed\n+        return accepts(B);\n+    }\n+\n+    public String getName() {\n+        return name().toLowerCase(Locale.ROOT).replace(\"_\", \"-\");\n+    }\n+\n+    public HtmlAttr getAttr(Name attrName) {\n+        return HtmlAttr.of(attrName);\n+    }\n+\n+    public AttrKind getAttrKind(Name attrName) {\n+        HtmlAttr attr = getAttr(attrName);\n+        if (attr == null) {\n+            return AttrKind.INVALID;\n+        }\n+        return attr.isGlobal() ?\n+                AttrKind.OK :\n+                attrs.getOrDefault(attr, AttrKind.INVALID);\n+    }\n+\n+    private static AttrMap attrs(AttrKind k, HtmlAttr... attrs) {\n+        AttrMap map = new AttrMap();\n+        for (HtmlAttr a : attrs) map.put(a, k);\n+        return map;\n+    }\n+\n+    private static final Map<String, HtmlTag> index = new HashMap<>();\n+    static {\n+        for (HtmlTag t: values()) {\n+            index.put(t.getName(), t);\n+        }\n+    }\n+\n+    public static HtmlTag of(CharSequence tagName) {\n+        return index.get(tagName.toString().toLowerCase(Locale.ROOT));\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlTag.java","additions":535,"deletions":0,"binary":false,"changes":535,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -41,3 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr.Role;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -66,1 +63,1 @@\n-     * The name of the HTML element.\n+     * The tag for the HTML element.\n@@ -69,1 +66,1 @@\n-    public final TagName tagName;\n+    public final HtmlTag tag;\n@@ -87,1 +84,1 @@\n-     * @param tagName the name\n+     * @param tag the name\n@@ -89,2 +86,2 @@\n-    public HtmlTree(TagName tagName) {\n-        this.tagName = Objects.requireNonNull(tagName);\n+    public HtmlTree(HtmlTag tag) {\n+        this.tag = Objects.requireNonNull(tag);\n@@ -134,1 +131,1 @@\n-    public HtmlTree setRole(Role role) {\n+    public HtmlTree setRole(HtmlAttr.Role role) {\n@@ -350,1 +347,1 @@\n-        return new HtmlTree(TagName.A)\n+        return new HtmlTree(HtmlTag.A)\n@@ -366,1 +363,1 @@\n-        return new HtmlTree(TagName.A)\n+        return new HtmlTree(HtmlTag.A)\n@@ -378,1 +375,1 @@\n-        return new HtmlTree(TagName.CAPTION)\n+        return new HtmlTree(HtmlTag.CAPTION)\n@@ -389,1 +386,1 @@\n-        return new HtmlTree(TagName.CODE)\n+        return new HtmlTree(HtmlTag.CODE)\n@@ -400,1 +397,1 @@\n-        return new HtmlTree(TagName.DD)\n+        return new HtmlTree(HtmlTag.DD)\n@@ -410,1 +407,1 @@\n-        return new HtmlTree(TagName.DETAILS);\n+        return new HtmlTree(HtmlTag.DETAILS);\n@@ -419,1 +416,1 @@\n-        return new HtmlTree(TagName.DETAILS)\n+        return new HtmlTree(HtmlTag.DETAILS)\n@@ -430,1 +427,1 @@\n-        return new HtmlTree(TagName.DL)\n+        return new HtmlTree(HtmlTag.DL)\n@@ -442,1 +439,1 @@\n-        return new HtmlTree(TagName.DL)\n+        return new HtmlTree(HtmlTag.DL)\n@@ -454,1 +451,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -466,1 +463,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -478,1 +475,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -489,1 +486,1 @@\n-        return new HtmlTree(TagName.DT)\n+        return new HtmlTree(HtmlTag.DT)\n@@ -500,2 +497,2 @@\n-        return new HtmlTree(TagName.FOOTER)\n-                .setRole(Role.CONTENTINFO);\n+        return new HtmlTree(HtmlTag.FOOTER)\n+                .setRole(HtmlAttr.Role.CONTENTINFO);\n@@ -511,2 +508,2 @@\n-        return new HtmlTree(TagName.HEADER)\n-                .setRole(Role.BANNER);\n+        return new HtmlTree(HtmlTag.HEADER)\n+                .setRole(HtmlAttr.Role.BANNER);\n@@ -522,1 +519,1 @@\n-    public static HtmlTree HEADING(TagName headingTag, Content body) {\n+    public static HtmlTree HEADING(HtmlTag headingTag, Content body) {\n@@ -535,1 +532,1 @@\n-    public static HtmlTree HEADING(TagName headingTag, HtmlStyle style, Content body) {\n+    public static HtmlTree HEADING(HtmlTag headingTag, HtmlStyle style, Content body) {\n@@ -550,1 +547,1 @@\n-    public static HtmlTree HEADING_TITLE(TagName headingTag,\n+    public static HtmlTree HEADING_TITLE(HtmlTag headingTag,\n@@ -566,1 +563,1 @@\n-    public static HtmlTree HEADING_TITLE(TagName headingTag, Content body) {\n+    public static HtmlTree HEADING_TITLE(HtmlTag headingTag, Content body) {\n@@ -572,1 +569,1 @@\n-    private static TagName checkHeading(TagName headingTag) {\n+    private static HtmlTag checkHeading(HtmlTag headingTag) {\n@@ -589,1 +586,1 @@\n-        return new HtmlTree(TagName.HTML)\n+        return new HtmlTree(HtmlTag.HTML)\n@@ -604,1 +601,1 @@\n-        return new HtmlTree(TagName.INPUT)\n+        return new HtmlTree(HtmlTag.INPUT)\n@@ -618,1 +615,1 @@\n-        return new HtmlTree(TagName.INPUT)\n+        return new HtmlTree(HtmlTag.INPUT)\n@@ -631,1 +628,1 @@\n-        return new HtmlTree(TagName.LABEL)\n+        return new HtmlTree(HtmlTag.LABEL)\n@@ -643,1 +640,1 @@\n-        return new HtmlTree(TagName.LI)\n+        return new HtmlTree(HtmlTag.LI)\n@@ -669,1 +666,1 @@\n-        return new HtmlTree(TagName.LINK)\n+        return new HtmlTree(HtmlTag.LINK)\n@@ -683,2 +680,2 @@\n-        return new HtmlTree(TagName.MAIN)\n-                .setRole(Role.MAIN);\n+        return new HtmlTree(HtmlTag.MAIN)\n+                .setRole(HtmlAttr.Role.MAIN);\n@@ -694,2 +691,2 @@\n-        return new HtmlTree(TagName.MAIN)\n-                .setRole(Role.MAIN)\n+        return new HtmlTree(HtmlTag.MAIN)\n+                .setRole(HtmlAttr.Role.MAIN)\n@@ -708,1 +705,1 @@\n-        return new HtmlTree(TagName.META)\n+        return new HtmlTree(HtmlTag.META)\n@@ -721,1 +718,1 @@\n-        return new HtmlTree(TagName.META)\n+        return new HtmlTree(HtmlTag.META)\n@@ -733,2 +730,2 @@\n-        return new HtmlTree(TagName.NAV)\n-                .setRole(Role.NAVIGATION);\n+        return new HtmlTree(HtmlTag.NAV)\n+                .setRole(HtmlAttr.Role.NAVIGATION);\n@@ -744,1 +741,1 @@\n-        return new HtmlTree(TagName.NOSCRIPT)\n+        return new HtmlTree(HtmlTag.NOSCRIPT)\n@@ -755,1 +752,1 @@\n-        return new HtmlTree(TagName.OL)\n+        return new HtmlTree(HtmlTag.OL)\n@@ -766,1 +763,1 @@\n-        return new HtmlTree(TagName.P)\n+        return new HtmlTree(HtmlTag.P)\n@@ -789,1 +786,1 @@\n-        return new HtmlTree(TagName.PRE).add(body);\n+        return new HtmlTree(HtmlTag.PRE).add(body);\n@@ -800,1 +797,1 @@\n-        return new HtmlTree(TagName.SCRIPT)\n+        return new HtmlTree(HtmlTag.SCRIPT)\n@@ -813,1 +810,1 @@\n-        return new HtmlTree(TagName.SECTION)\n+        return new HtmlTree(HtmlTag.SECTION)\n@@ -825,1 +822,1 @@\n-        return new HtmlTree(TagName.SECTION)\n+        return new HtmlTree(HtmlTag.SECTION)\n@@ -837,1 +834,1 @@\n-        return new HtmlTree(TagName.SMALL)\n+        return new HtmlTree(HtmlTag.SMALL)\n@@ -848,1 +845,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -859,1 +856,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -883,1 +880,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -897,1 +894,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -910,1 +907,1 @@\n-        return new HtmlTree(TagName.SUMMARY)\n+        return new HtmlTree(HtmlTag.SUMMARY)\n@@ -921,1 +918,1 @@\n-        return new HtmlTree(TagName.SUP)\n+        return new HtmlTree(HtmlTag.SUP)\n@@ -933,1 +930,1 @@\n-        return new HtmlTree(TagName.TD)\n+        return new HtmlTree(HtmlTag.TD)\n@@ -947,1 +944,1 @@\n-        return new HtmlTree(TagName.TH)\n+        return new HtmlTree(HtmlTag.TH)\n@@ -961,1 +958,1 @@\n-        return new HtmlTree(TagName.TH)\n+        return new HtmlTree(HtmlTag.TH)\n@@ -973,1 +970,1 @@\n-        return new HtmlTree(TagName.TITLE)\n+        return new HtmlTree(HtmlTag.TITLE)\n@@ -984,1 +981,1 @@\n-        return new HtmlTree(TagName.UL)\n+        return new HtmlTree(HtmlTag.UL)\n@@ -997,1 +994,1 @@\n-        var ul = new HtmlTree(TagName.UL)\n+        var ul = new HtmlTree(HtmlTag.UL)\n@@ -1016,1 +1013,1 @@\n-        return new HtmlTree(TagName.UL)\n+        return new HtmlTree(HtmlTag.UL)\n@@ -1028,1 +1025,1 @@\n-        return tagName.phrasingContent;\n+        return tag.blockType == HtmlTag.BlockType.INLINE;\n@@ -1072,1 +1069,1 @@\n-            && tagName != TagName.SCRIPT;\n+            && tag != HtmlTag.SCRIPT;\n@@ -1083,1 +1080,1 @@\n-        return switch (tagName) {\n+        return switch (tag) {\n@@ -1090,1 +1087,1 @@\n-     * Returns whether or not this is a <em>void<\/em> element.\n+     * Returns whether this is a <em>void<\/em> element.\n@@ -1092,1 +1089,1 @@\n-     * @return whether or not this is a void element\n+     * @return whether this is a void element\n@@ -1097,2 +1094,2 @@\n-        return switch (tagName) {\n-            case BR, HR, IMG, INPUT, LINK, META, WBR -> true;\n+        return switch (tag) {\n+            case BR, COL, FRAME, HR, IMG, INPUT, LINK, META, WBR -> true;\n@@ -1109,1 +1106,1 @@\n-        String tagString = tagName.toString();\n+        String tagString = tag.getName();\n@@ -1116,1 +1113,1 @@\n-            out.write(key.toString());\n+            out.write(key.getName());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlTree.java","additions":73,"deletions":76,"binary":false,"changes":149,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -35,2 +35,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/ListBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ListBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -33,2 +33,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -150,2 +148,2 @@\n-                var tn = TagName.of(m.group(\"tag\"));\n-                if (!tn.phrasingContent) {\n+                var tn = HtmlTag.of(m.group(\"tag\"));\n+                if (tn.blockType != HtmlTag.BlockType.INLINE) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/RawHtml.java","additions":3,"deletions":5,"binary":false,"changes":8,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/RawHtml.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -103,1 +101,1 @@\n-        var script = new HtmlTree(TagName.SCRIPT) {\n+        var script = new HtmlTree(HtmlTag.SCRIPT) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Script.java","additions":2,"deletions":4,"binary":false,"changes":6,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Script.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Text.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Text.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/TextBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/TextBuilder.java","status":"renamed"},{"patch":"@@ -71,1 +71,1 @@\n- *          {@linkplain jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree HTML tree nodes}.\n+ *          {@linkplain jdk.javadoc.internal.html.HtmlTree HTML tree nodes}.\n@@ -73,1 +73,1 @@\n- *          {@link jdk.javadoc.internal.doclets.formats.html.Content}, the {@code markup} library\n+ *          {@link jdk.javadoc.internal.html.Content}, the {@code markup} library\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-@Label(\"Event Emission Throttle\")\n+@Label(\"Throttle\")\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/ThrottleSetting.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,7 +35,0 @@\n-  static Step start(const Stepper* stepper,\n-                    int length,\n-                    int* to_length_addr,\n-                    uint chunk_size) {\n-    return stepper->start_impl(length, to_length_addr, chunk_size);\n-  }\n-\n@@ -43,4 +36,3 @@\n-                   int length,\n-                   int* to_length_addr,\n-                   uint chunk_size) {\n-    return stepper->next_impl(length, to_length_addr, chunk_size);\n+                   size_t length,\n+                   size_t* to_length_addr) {\n+    return stepper->next_impl(length, to_length_addr);\n@@ -52,5 +44,5 @@\n-static int simulate(const Stepper* stepper,\n-                    int length,\n-                    int* to_length_addr,\n-                    uint chunk_size) {\n-  Step init = StepperSupport::start(stepper, length, to_length_addr, chunk_size);\n+static uint simulate(const Stepper* stepper,\n+                     size_t length,\n+                     size_t* to_length_addr) {\n+  Step init = stepper->start(length);\n+  *to_length_addr = init._index;\n@@ -58,1 +50,1 @@\n-  int task = 0;\n+  uint task = 0;\n@@ -61,1 +53,1 @@\n-    Step step = StepperSupport::next(stepper, length, to_length_addr, chunk_size);\n+    Step step = StepperSupport::next(stepper, length, to_length_addr);\n@@ -67,4 +59,4 @@\n-static void run_test(int length, int chunk_size, uint n_workers) {\n-  const PartialArrayTaskStepper stepper(n_workers);\n-  int to_length;\n-  int tasks = simulate(&stepper, length, &to_length, chunk_size);\n+static void run_test(size_t length, size_t chunk_size, uint n_workers) {\n+  const PartialArrayTaskStepper stepper(n_workers, chunk_size);\n+  size_t to_length;\n+  uint tasks = simulate(&stepper, length, &to_length);\n@@ -76,1 +68,1 @@\n-  for (int chunk_size = 50; chunk_size <= 500; chunk_size += 50) {\n+  for (size_t chunk_size = 50; chunk_size <= 500; chunk_size += 50) {\n@@ -78,1 +70,1 @@\n-      for (int length = 0; length <= 1000000; length = (length * 2 + 1)) {\n+      for (size_t length = 0; length <= 1000000; length = (length * 2 + 1)) {\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_partialArrayTaskStepper.cpp","additions":17,"deletions":25,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-  return 0;\n+  return nullptr;\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,0 +62,2 @@\n+compiler\/vectorapi\/VectorRebracket128Test.java#ZSinglegen 8330538 generic-all\n+compiler\/vectorapi\/VectorRebracket128Test.java#ZGenerational 8330538 generic-all\n@@ -64,0 +66,6 @@\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/DataPatchTest.java 8331704 linux-riscv64\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/MaxOopMapStackOffsetTest.java 8331704 linux-riscv64\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/NativeCallTest.java 8331704 linux-riscv64\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/SimpleDebugInfoTest.java 8331704 linux-riscv64\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/SimpleCodeInstallationTest.java 8331704 linux-riscv64\n+compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/VirtualObjectDebugInfoTest.java 8331704 linux-riscv64\n@@ -112,0 +120,1 @@\n+runtime\/Thread\/TestAlwaysPreTouchStacks.java 8335167 macosx-aarch64\n@@ -114,0 +123,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -478,0 +478,18 @@\n+    @Test\n+    public void isScopedTest() throws NoSuchMethodException, ClassNotFoundException {\n+        \/\/ Must use reflection as ScopedMemoryAccess$Scoped is package-private\n+        Class<? extends Annotation> scopedAnnotationClass = Class.forName(\"jdk.internal.misc.ScopedMemoryAccess$Scoped\").asSubclass(Annotation.class);\n+        boolean scopedMethodFound = false;\n+        for (Map.Entry<Method, ResolvedJavaMethod> e : methods.entrySet()) {\n+            ResolvedJavaMethod m = e.getValue();\n+            Method key = e.getKey();\n+            boolean expect = key.isAnnotationPresent(scopedAnnotationClass);\n+            boolean actual = m.isScoped();\n+            assertEquals(m.toString(), expect, actual);\n+            if (expect) {\n+                scopedMethodFound = true;\n+            }\n+        }\n+        assertTrue(\"At least one scoped method must be present\", scopedMethodFound);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaMethod.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+import jdk.internal.misc.ScopedMemoryAccess;\n@@ -118,1 +119,1 @@\n-                        InnerStaticFinalClass.class, PrivateInnerClass.class, ProtectedInnerClass.class};\n+                        InnerStaticFinalClass.class, PrivateInnerClass.class, ProtectedInnerClass.class, ScopedMemoryAccess.class};\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TypeUniverse.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -160,1 +160,10 @@\n-### 2.5 Framework Debug and Stress Flags\n+### 2.5 IR Tests with Privileged Classes\n+To run tests in a privileged mode (e.g. when using `@Stable`, `@Contended`, `@ReservedStackAccess` etc.), one need to add the test classes to the boot classpath. This can easily be achieved by calling `TestFramework.addTestClassesToBootClassPath()` on the test framework object:\n+```\n+TestFramework testFramework = new TestFramework();\n+testFramework\n+        .addTestClassesToBootClassPath()\n+        .start();\n+```\n+\n+### 2.6 Framework Debug and Stress Flags\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -175,0 +175,1 @@\n+    private boolean testClassesOnBootClassPath;\n@@ -326,0 +327,9 @@\n+    \/**\n+     * Add test classes to boot classpath. This adds all classes found on path {@link jdk.test.lib.Utils#TEST_CLASSES}\n+     * to the boot classpath with \"-Xbootclasspath\/a\". This is useful when trying to run tests in a privileged mode.\n+     *\/\n+    public TestFramework addTestClassesToBootClassPath() {\n+        this.testClassesOnBootClassPath = true;\n+        return this;\n+    }\n+\n@@ -747,1 +757,2 @@\n-        TestVMProcess testVMProcess = new TestVMProcess(additionalFlags, testClass, helperClasses, defaultWarmup);\n+        TestVMProcess testVMProcess = new TestVMProcess(additionalFlags, testClass, helperClasses, defaultWarmup,\n+                                                        testClassesOnBootClassPath);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.io.File;\n@@ -66,1 +67,2 @@\n-    public TestVMProcess(List<String> additionalFlags, Class<?> testClass, Set<Class<?>> helperClasses, int defaultWarmup) {\n+    public TestVMProcess(List<String> additionalFlags, Class<?> testClass, Set<Class<?>> helperClasses, int defaultWarmup,\n+                         boolean testClassesOnBootClassPath) {\n@@ -70,1 +72,1 @@\n-            prepareTestVMFlags(additionalFlags, socket, testClass, helperClasses, defaultWarmup);\n+            prepareTestVMFlags(additionalFlags, socket, testClass, helperClasses, defaultWarmup, testClassesOnBootClassPath);\n@@ -94,1 +96,1 @@\n-                                    Set<Class<?>> helperClasses, int defaultWarmup) {\n+                                    Set<Class<?>> helperClasses, int defaultWarmup, boolean testClassesOnBootClassPath) {\n@@ -98,1 +100,6 @@\n-        cmds.add(\"-Xbootclasspath\/a:.\");\n+        String bootClassPath = \"-Xbootclasspath\/a:.\";\n+        if (testClassesOnBootClassPath) {\n+            \/\/ Add test classes themselves to boot classpath to make them privileged.\n+            bootClassPath += File.pathSeparator + Utils.TEST_CLASSES;\n+        }\n+        cmds.add(bootClassPath);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/TestVMProcess.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    static final int[] GOLDEN_M;\n@@ -74,0 +75,1 @@\n+        GOLDEN_M = testm(new int[ITER]);\n@@ -83,1 +85,1 @@\n-                 \"testi\", \"testj\", \"testk\", \"testl\"})\n+                 \"testi\", \"testj\", \"testk\", \"testl\", \"testm\"})\n@@ -98,0 +100,1 @@\n+        compare(testm(new int[ITER]), GOLDEN_M, \"testm\");\n@@ -302,0 +305,13 @@\n+    @Test\n+    @IR(counts = {IRNode.MUL_ADD_S2I, \"> 0\"},\n+        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n+    @IR(counts = {IRNode.MUL_ADD_VS2VI, \"= 0\"})\n+    public static int[] testm(int[] out) {\n+        for (int i = 0; i < ITER-4; i+=4) {\n+            \/\/ Unrolled, with some swaps that prevent vectorization.\n+            out[i+0] += ((sArr1[2*i+0] * sArr2[2*i+1]) + (sArr1[2*i+1] * sArr2[2*i+0])); \/\/ bad\n+            out[i+1] += ((sArr1[2*i+2] * sArr2[2*i+2]) + (sArr1[2*i+3] * sArr2[2*i+3])); \/\/ ok\n+            \/\/ 2-element gap\n+        }\n+        return out;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMulAddS2I.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:NativeMemoryTracking=summary -Xms32m -Xmx32m TotalMallocMmapDiffTest\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:TieredStopAtLevel=1 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:NativeMemoryTracking=summary -Xms32m -Xmx32m TotalMallocMmapDiffTest\n@@ -46,3 +46,4 @@\n-    private static final double FUDGE_FACTOR = 0.2;\n-    private static final double UPPER_BOUND = ALLOCATE_SIZE * (1 + FUDGE_FACTOR);\n-    private static final double LOWER_BOUND = ALLOCATE_SIZE * (1 - FUDGE_FACTOR);\n+    private static final double FUDGE_FACTOR_UPPER = 0.3;\n+    private static final double FUDGE_FACTOR_LOWER = 0.2;\n+    private static final double UPPER_BOUND = ALLOCATE_SIZE * (1 + FUDGE_FACTOR_UPPER);\n+    private static final double LOWER_BOUND = ALLOCATE_SIZE * (1 - FUDGE_FACTOR_LOWER);\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/TotalMallocMmapDiffTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337622\n+ * @summary (reflect) java.lang.Class componentType field not found.\n+ * @library \/test\/lib\n+ * @modules java.base\/java.lang:open\n+ * @run main ComponentTypeFieldTest\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import static jdk.test.lib.Asserts.*;\n+\n+public class ComponentTypeFieldTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        Field f = Class.class.getDeclaredField(\"componentType\");\n+        f.setAccessible(true);\n+        Object val = f.get(Runnable.class);\n+        assertTrue(val == null);\n+        System.out.println(\"val is \" + val);\n+\n+        Object arrayVal = f.get(Integer[].class);\n+        System.out.println(\"val is \" + arrayVal);\n+        String arrayValString = arrayVal.toString();\n+        assertTrue(arrayValString.equals(\"class java.lang.Integer\"));\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/reflect\/ComponentTypeFieldTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8333356\n+ * @summary Verify new error message for corrupting string table contents.\n+ * @requires vm.flagless\n+ * @modules java.base\/java.lang:open\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver StringTableCorruptionTest test\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class StringTableCorruptionTest {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length > 0) {\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--add-opens\", \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                             \"-XX:-CreateCoredumpOnCrash\", \"StringTableCorruptionTest\");\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldContain(\"Node hash code has changed possibly due to corruption of the contents.\");\n+            output.shouldNotHaveExitValue(0);\n+            return;\n+        }\n+\n+        Field f = String.class.getDeclaredField(\"value\");\n+        f.setAccessible(true);\n+        f.set(\"s1\".intern(), f.get(\"s2\"));\n+        for (int i = 0; i < 4_000_000; i++) {\n+            (\"s_\" + i).intern();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableCorruptionTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+static jrawMonitorID event_mon = NULL;\n+static jboolean is_vm_dead = JNI_FALSE;\n@@ -71,1 +73,1 @@\n-        exit(err);\n+        abort();\n@@ -320,1 +322,1 @@\n-VMInit(jvmtiEnv *jvmti, JNIEnv* jnii, jthread thread) {\n+VMInit(jvmtiEnv *jvmti, JNIEnv* jni, jthread thread) {\n@@ -332,0 +334,15 @@\n+static void JNICALL\n+VMDeath(jvmtiEnv *jvmti, JNIEnv* jni) {\n+    jvmtiError err;\n+\n+    \/\/ Block ClassPrepare events while this callback is executed.\n+    err  = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorEnter\", err);\n+\n+    is_vm_dead = JNI_TRUE;\n+    printf(\"VMDeath event\\n\");\n+\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorExit\", err);\n+}\n+\n@@ -336,1 +353,0 @@\n-    jthread cur_thread = get_cur_thread(jvmti);\n@@ -340,0 +356,6 @@\n+    jvmtiError err;\n+\n+    \/\/ Block VMDeath event and other ClassPrepare events while this callback is executed.\n+    \/\/ Sync with VMDeath event and check for is_vm_dead guard against JVMTI_ERROR WRONG_PHASE.\n+    err = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorEnter\", err);\n@@ -341,0 +363,6 @@\n+    if (is_vm_dead) {\n+        printf(\"\\nIgnoring ClassPrepare event during the dead phase\\n\");\n+        err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+        check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n+        return;\n+    }\n@@ -345,0 +373,3 @@\n+        result = FAILED;\n+        err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+        check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -348,0 +379,1 @@\n+        jthread cur_thread = get_cur_thread(jvmti);\n@@ -363,0 +395,2 @@\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -403,0 +437,3 @@\n+    err = (*jvmti)->CreateRawMonitor(jvmti, \"Events Monitor\", &event_mon);\n+    check_jvmti_error(jvmti, \"## Agent_Initialize: CreateRawMonitor\", err);\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/StartPhase\/AllowedFunctions\/libAllowedFunctions.c","additions":41,"deletions":4,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import java.lang.instrument.ClassFileTransformer;\n+import java.lang.instrument.IllegalClassFormatException;\n+import java.lang.instrument.Instrumentation;\n+import java.security.ProtectionDomain;\n+import jdk.test.lib.thread.VThreadPinner;\n+\n+\/*\n+ * @test\n+ * @summary javaagent + tracePinnedThreads will cause jvm crash\/ run into deadlock when the virtual thread is pinned\n+ * @library \/test\/lib\n+ * @requires vm.continuations\n+ * @requires vm.jvmti\n+ * @modules java.base\/java.lang:+open\n+ * @compile TestPinCaseWithCFLH.java\n+ * @build jdk.test.lib.Utils\n+ * @run driver jdk.test.lib.util.JavaAgentBuilder\n+ *             TestPinCaseWithCFLH TestPinCaseWithCFLH.jar\n+ * @run main\/othervm\/timeout=100  -Djdk.virtualThreadScheduler.maxPoolSize=1\n+ *       -Djdk.tracePinnedThreads=full --enable-native-access=ALL-UNNAMED\n+ *       -javaagent:TestPinCaseWithCFLH.jar TestPinCaseWithCFLH\n+ *\/\n+public class TestPinCaseWithCFLH {\n+\n+    public static class TestClassFileTransformer implements ClassFileTransformer {\n+        public byte[] transform(ClassLoader loader, String className, Class<?> classBeingRedefined,\n+                                ProtectionDomain protectionDomain, byte[] classfileBuffer)\n+                                throws IllegalClassFormatException {\n+            return classfileBuffer;\n+        }\n+    }\n+\n+    \/\/ Called when agent is loaded at startup\n+    public static void premain(String agentArgs, Instrumentation instrumentation) throws Exception {\n+        instrumentation.addTransformer(new TestClassFileTransformer());\n+    }\n+\n+    private static int result = 0;\n+\n+    public static void main(String[] args) throws Exception{\n+        Thread t1 = Thread.ofVirtual().name(\"vthread-1\").start(() -> {\n+            VThreadPinner.runPinned(() -> {\n+                try {\n+                    \/\/ try yield, will pin,\n+                    \/\/ javaagent + tracePinnedThreads should not lead to crash\n+                    \/\/ (because of the class `PinnedThreadPrinter`)\n+                    Thread.sleep(500);\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                }\n+            });\n+        });\n+        t1.join();\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/TestPinCaseWithCFLH\/TestPinCaseWithCFLH.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -69,1 +69,1 @@\n-        TestVMProcess testVMProcess = new TestVMProcess(testVMFlags, testClass, null, -1);\n+        TestVMProcess testVMProcess = new TestVMProcess(testVMFlags, testClass, null, -1, false);\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPhaseIRMatching.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package ir_framework.tests;\n+\n+import compiler.lib.ir_framework.*;\n+import compiler.lib.ir_framework.driver.irmatching.IRViolationException;\n+\n+import jdk.internal.vm.annotation.Stable;\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @requires vm.debug == true & vm.compiler2.enabled & vm.flagless\n+ * @summary Test that IR framework successfully adds test class to boot classpath in order to run in privileged mode.\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @library \/test\/lib \/\n+ * @run driver ir_framework.tests.TestPrivilegedMode\n+ *\/\n+\n+public class TestPrivilegedMode {\n+    static @Stable int iFld; \/\/ Treated as constant after first being set.\n+\n+    public static void main(String[] args) {\n+        try {\n+            TestFramework.run();\n+            Asserts.fail(\"should not reach\");\n+        } catch (IRViolationException e) {\n+            \/\/ Without adding test class to boot classpath, we fail to replace the field load by a constant.\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"Matched forbidden node\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"LoadI\"));\n+        }\n+\n+        \/\/ When adding the test class to the boot classpath, we can replace the field load by a constant.\n+        new TestFramework().addTestClassesToBootClassPath().start();\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setup\")\n+    @IR(failOn = IRNode.LOAD_I)\n+    public int test() {\n+        return iFld;\n+    }\n+\n+    @Setup\n+    public void setup() {\n+        iFld = 34;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPrivilegedMode.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new caught_exception002().runTest(argv, out);\n+        new caught_exception002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/caught_exception\/caught_exception002\/caught_exception002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -70,1 +66,1 @@\n-        return new classes001().runTest(argv, out);\n+        new classes001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classes\/classes001\/classes001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -62,4 +62,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -69,1 +65,1 @@\n-        return new classpath001().runTest(argv, out);\n+        new classpath001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classpath\/classpath001\/classpath001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -64,4 +64,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -71,1 +67,1 @@\n-        return new clear002().runTest(argv, out);\n+        new clear002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear002\/clear002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -65,4 +65,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -72,1 +68,1 @@\n-        return new clear003().runTest(argv, out);\n+        new clear003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear003\/clear003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new clear004().runTest(argv, out);\n+        new clear004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear004\/clear004.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new down002().runTest(argv, out);\n+        new down002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/down\/down002\/down002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,4 +73,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new dump002().runTest(argv, out);\n+        new dump002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/dump\/dump002\/dump002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new eval001().runTest(argv, out);\n+        new eval001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n- * @run main\/othervm\/timeout=600\n+ * @run driver\/timeout=600\n@@ -85,4 +85,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -92,1 +88,1 @@\n-        return new exclude001().runTest(argv, out);\n+        new exclude001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/exclude\/exclude001\/exclude001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new fields001().runTest(argv, out);\n+        new fields001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/fields\/fields001\/fields001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -69,1 +65,1 @@\n-        return new hc001().runTest(argv, out);\n+        new hc001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/hidden_class\/hc001\/hc001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new ignore001().runTest(argv, out);\n+        new ignore001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/ignore\/ignore001\/ignore001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new interrupt001().runTest(argv, out);\n+        new interrupt001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -77,4 +77,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new kill001().runTest(argv, out);\n+        new kill001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new kill002().runTest(argv, out);\n+        new kill002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill002\/kill002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new class001().runTest(argv, out);\n+        new class001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/klass\/class001\/class001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -78,1 +74,1 @@\n-        return new list002().runTest(argv, out);\n+        new list002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list002\/list002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -50,0 +50,1 @@\n+ *      -jdb.option=\"-sourcepath ${test.src}\/..\/..\/..\/..\"\n@@ -101,4 +102,0 @@\n-        System.exit(run(args, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String[] args, PrintStream out) {\n@@ -107,1 +104,1 @@\n-        return new list003().runTest(args, out);\n+        new list003().runTest(args);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list003\/list003.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new locals002().runTest(argv, out);\n+        new locals002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/locals\/locals002\/locals002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new methods002().runTest(argv, out);\n+        new methods002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/methods\/methods002\/methods002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new monitor001().runTest(argv, out);\n+        new monitor001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new monitor002().runTest(argv, out);\n+        new monitor002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor002\/monitor002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new next001().runTest(argv, out);\n+        new next001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/next\/next001\/next001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect001().runTest(argv, out);\n+        new connect001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect001\/connect001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect002().runTest(argv, out);\n+        new connect002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect002\/connect002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect003().runTest(argv, out);\n+        new connect003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect003\/connect003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect004().runTest(argv, out);\n+        new connect004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect004\/connect004.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,6 +73,1 @@\n-    public static void main (String argv[]) {\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static void main (String argv[]) {    debuggeeClass =  DEBUGGEE_CLASS;\n@@ -81,1 +76,1 @@\n-        return new connect005().runTest(argv, out);\n+        new connect005().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect005\/connect005.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new listconnectors001().runTest(argv, out);\n+        new listconnectors001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/listconnectors\/listconnectors001\/listconnectors001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,4 +73,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -80,1 +76,1 @@\n-        return new pop001().runTest(argv, out);\n+        new pop001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop\/pop001\/pop001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new pop_exception001().runTest(argv, out);\n+        new pop_exception001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new print002().runTest(argv, out);\n+        new print002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/print\/print002\/print002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new read001().runTest(argv, out);\n+        new read001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/read\/read001\/read001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -83,4 +83,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -90,1 +86,1 @@\n-        return new redefine001().runTest(argv, out);\n+        new redefine001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/redefine001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new reenter001().runTest(argv, out);\n+        new reenter001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/reenter\/reenter001\/reenter001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -134,4 +134,0 @@\n-                System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-        }\n-\n-        public static int run(String argv[], PrintStream out) {\n@@ -140,1 +136,1 @@\n-                return new b4689395().runTest(argv, out);\n+                new b4689395().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/b4689395.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(args, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String[] args, PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new repeat001().runTest(args, out);\n+        new repeat001().runTest(args);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/repeat\/repeat001\/repeat001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new resume002().runTest(argv, out);\n+        new resume002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/resume\/resume002\/resume002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new run002().runTest(argv, out);\n+        new run002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/run\/run002\/run002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new set001().runTest(argv, out);\n+        new set001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set001\/set001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -87,1 +83,1 @@\n-        return new set002().runTest(argv, out);\n+        new set002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set002\/set002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new step002().runTest(argv, out);\n+        new step002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step\/step002\/step002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -78,1 +74,1 @@\n-        return new step_up001().runTest(argv, out);\n+        new step_up001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step_up\/step_up001\/step_up001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new stop_at002().runTest(argv, out);\n+        new stop_at002().runTest(argv);\n@@ -85,3 +81,2 @@\n-    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:43\";\n-    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:57\";\n-    static final String FAILURE_PATTERN = \"Unable to set\";\n+    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:64\";\n+    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:78\";\n@@ -90,6 +85,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -104,1 +93,9 @@\n-        jdb.contToExit(3);\n+        if (!checkBreakpointHit(DEBUGGEE_LOCATION1)) {\n+            success = false;\n+        }\n+\n+        if (!checkBreakpointHit(DEBUGGEE_LOCATION2)) {\n+            success = false;\n+        }\n+\n+        jdb.contToExit(1);\n@@ -107,1 +104,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n@@ -111,1 +108,0 @@\n-        boolean result = true;\n@@ -117,1 +113,19 @@\n-        found = grep.findFirst(FAILURE_PATTERN);\n+        found = grep.findFirst(\"Deferring breakpoint \" + location);\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to setup deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    private boolean checkBreakpointHit(String location) {\n+        Paragrep grep;\n+        String[] reply;\n+        String found;\n+\n+        log.display(\"continuing to breakpoint at line: \" + location);\n+        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        grep = new Paragrep(reply);\n+\n+        found = grep.findFirst(\"Unable to set deferred breakpoint\");\n@@ -119,2 +133,14 @@\n-            log.complain(\"jdb failed to set line breakpoint at line: \" + found);\n-            result = false;\n+            log.complain(\"jdb failed to set deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        found = grep.findFirst(\"Set deferred breakpoint \" + location);\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to set deferred breakpoint at line: \" + location);\n+            return false;\n+        }\n+\n+        found = grep.findFirst(\"Breakpoint hit: \\\"thread=main\\\", \");\n+        if (found.length() == 0) {\n+            log.complain(\"jdb failed to hit breakpoint at line: \" + location);\n+            return false;\n@@ -123,1 +149,1 @@\n-        return result;\n+        return true;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002.java","additions":49,"deletions":23,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+\/\/    THIS TEST IS LINE NUMBER SENSITIVE\n+\n@@ -62,1 +64,1 @@\n-                    flag = input; \/* <--------  This is line number 43 *\/\n+                    flag = input; \/* <--------  This is line number 64 *\/\n@@ -76,1 +78,1 @@\n-                content += input; \/* <--------  This is line number 57 *\/\n+                content += input; \/* <--------  This is line number 78 *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002a.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new stop_at003().runTest(argv, out);\n+        new stop_at003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at003\/stop_at003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -83,4 +83,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -90,1 +86,1 @@\n-        return new stop_in002().runTest(argv, out);\n+        new stop_in002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_in\/stop_in002\/stop_in002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new suspend001().runTest(argv, out);\n+        new suspend001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/suspend\/suspend001\/suspend001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new thread002().runTest(argv, out);\n+        new thread002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/thread\/thread002\/thread002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new threadgroup002().runTest(argv, out);\n+        new threadgroup002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroup\/threadgroup002\/threadgroup002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new threadgroups002().runTest(argv, out);\n+        new threadgroups002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroups\/threadgroups002\/threadgroups002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new threads002().runTest(argv, out);\n+        new threads002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new threads003().runTest(argv, out);\n+        new threads003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads003\/threads003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new trace001().runTest(argv, out);\n+        new trace001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new uncaught_exception002(true).runTest(argv, out);\n+        new uncaught_exception002(true).runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/uncaught_exception\/uncaught_exception002\/uncaught_exception002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new unmonitor001().runTest(argv, out);\n+        new unmonitor001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -80,4 +80,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -87,1 +83,1 @@\n-        return new untrace001().runTest(argv, out);\n+        new untrace001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/untrace\/untrace001\/untrace001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new unwatch001().runTest(argv, out);\n+        new unwatch001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch001\/unwatch001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -77,4 +77,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -84,1 +80,1 @@\n-        return new unwatch002().runTest(argv, out);\n+        new unwatch002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch002\/unwatch002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new up002().runTest(argv, out);\n+        new up002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/up\/up002\/up002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new use001().runTest(argv, out);\n+        new use001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/use\/use001\/use001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new watch001().runTest(argv, out);\n+        new watch001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch001\/watch001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new watch002().runTest(argv, out);\n+        new watch002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch002\/watch002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new where004().runTest(argv, out);\n+        new where004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where004\/where004.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new where005(true).runTest(argv, out);\n+        new where005(true).runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where005\/where005.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new where006().runTest(argv, out);\n+        new where006().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where006\/where006.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -70,1 +66,1 @@\n-        return new wherei001().runTest(argv, out);\n+        new wherei001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/wherei\/wherei001\/wherei001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-    protected int runTest(String argv[], PrintStream out) {\n+    protected void runTest(String argv[]) {\n+        PrintStream out = System.out;\n@@ -135,1 +136,1 @@\n-                return PASSED;\n+                return;\n@@ -229,1 +230,1 @@\n-                return FAILED;\n+                throw new RuntimeException(\"TEST FAILED\");\n@@ -235,2 +236,1 @@\n-            out.println(\"TEST FAILED\");\n-            return FAILED;\n+            throw new RuntimeException(\"TEST FAILED\", t);\n@@ -239,1 +239,0 @@\n-        return PASSED;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/JdbTest.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -183,0 +183,4 @@\n+                connect.append(\",options=\");\n+                connect.append(\" \\\"-cp\\\"\");\n+                connect.append(\" \\\"\" + System.getProperty(\"test.class.path\") + \"\\\"\");\n+\n@@ -185,2 +189,0 @@\n-                    \/\/connect.append(\",options=\" + debuggeeOpts.trim());\n-                    connect.append(\",options=\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021 macosx-all\n+java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021,8332158 macosx-all,linux-x64\n@@ -476,0 +476,5 @@\n+# Wayland related\n+\n+java\/awt\/FullScreen\/FullscreenWindowProps\/FullscreenWindowProps.java 8280991 linux-x64\n+java\/awt\/FullScreen\/SetFullScreenTest.java 8332155 linux-x64\n+\n@@ -609,1 +614,0 @@\n-com\/sun\/security\/auth\/callback\/TextCallbackHandler\/Password.java 8039280 generic-all\n@@ -643,0 +647,1 @@\n+javax\/swing\/plaf\/basic\/BasicDirectoryModel\/LoaderThreadCount.java 8333880 windows-all\n@@ -741,1 +746,0 @@\n-jdk\/jfr\/event\/compiler\/TestCodeSweeper.java                     8225209 generic-all\n@@ -743,2 +747,0 @@\n-jdk\/jfr\/startupargs\/TestStartName.java                          8214685 windows-x64\n-jdk\/jfr\/startupargs\/TestStartDuration.java                      8214685 windows-x64\n@@ -746,1 +748,0 @@\n-jdk\/jfr\/api\/consumer\/recordingstream\/TestOnEvent.java           8255404 linux-x64,linux-aarch64\n","filename":"test\/jdk\/ProblemList.txt","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -626,1 +626,0 @@\n-    com\/sun\/security\/auth\/callback\/TextCallbackHandler\/Password.java \\\n@@ -655,0 +654,1 @@\n+    com\/sun\/security\/auth\/callback\/TextCallbackHandler\/Password.java \\\n","filename":"test\/jdk\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,2 @@\n-    private static boolean allowNegativeTesting = false;\n+    private static boolean allowNegativeTesting =\n+        \"true\".equalsIgnoreCase(System.getProperty(\"jdk.jdi.allowNegativeTesting\"));\n","filename":"test\/jdk\/com\/sun\/jdi\/JdwpListenTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,0 +52,5 @@\n+    \/\/ Set to true to allow testing of attach from wrong address (expected to fail).\n+    \/\/ It's off by default as it causes test interference (see JDK-8311990).\n+    private static boolean allowNegativeAttachTesting =\n+        \"true\".equalsIgnoreCase(System.getProperty(\"jdk.jdi.allowNegativeTesting\"));\n+\n@@ -174,0 +179,8 @@\n+            log(\"\\nTest: listen at \" + listenAddress + \", attaching to \" + connectAddress\n+                + \", preferIPv4Stack = \" + preferIPv4Stack\n+                + \", preferIPv6Addresses = \" + preferIPv6Addresses\n+                + \", expectedResult = \" + expectedResult);\n+            if (expectedResult == TestResult.AttachFailed && !allowNegativeAttachTesting) {\n+                log(\"SKIPPED: negative attach testing is disabled\");\n+                return;\n+            }\n","filename":"test\/jdk\/com\/sun\/jdi\/JdwpNetProps.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6825240\n+ * @bug 6825240 6829785\n@@ -31,0 +31,12 @@\n+\/*\n+ * This scenario cannot be automated because util\/Password.java verifies the given input stream is\n+ * equal to the initialSystemIn. This prevents the test from providing a custom input stream.\n+ *\n+ *  Steps to run the test:\n+ *  1) Compile the class using the JDK version being tested: '<JdkBin>\/javac Password.java'\n+ *  2) Run the test using the JDK version being tested: '<JdkBin>\/java -cp . Password'\n+ *  3) Type in the first password, it should not be visible in the console\n+ *  4) Type in the second password, it should be visible in the console\n+ *  5) The final output line displays the entered passwords, both should be visible\n+ *\/\n+\n","filename":"test\/jdk\/com\/sun\/security\/auth\/callback\/TextCallbackHandler\/Password.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Checkbox;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8233068\n+ * @summary Tests checkbox checker on scaling\n+ * @requires (os.family == \"linux\")\n+ * @run main CheckboxCheckerScalingTest\n+ *\/\n+\n+public class CheckboxCheckerScalingTest {\n+    private static Frame frame;\n+    private static Checkbox checkbox;\n+    private static BufferedImage imageAfterChecked;\n+    private static volatile boolean checkmarkFound = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"sun.java2d.uiScale\", \"2\");\n+        Robot robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new Frame(\"ComboBox checker scaling test\");\n+                checkbox = new Checkbox(\"one\");\n+                checkbox.setState(true);\n+                frame.add(checkbox);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            EventQueue.invokeAndWait(() -> {\n+                Point point = checkbox.getLocationOnScreen();\n+                Rectangle rect = new Rectangle(point.x + 5, point.y + 7, 8, 8);\n+                imageAfterChecked = robot.createScreenCapture(rect);\n+\n+                check: {\n+                    for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n+                        for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n+                            if (Color.black.getRGB() == imageAfterChecked.getRGB(i, j)) {\n+                                checkmarkFound = true;\n+                                break check;\n+                            }\n+                        }\n+                    }\n+                }\n+            });\n+\n+            if (!checkmarkFound) {\n+                throw new RuntimeException(\"Checkmark not scaled\");\n+            }\n+            System.out.println(\"Test Passed\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxCheckerScalingTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,2 +48,3 @@\n-        test(\"2\", \"2\");\n-        test(\"2.2\", \"2\");\n+\/\/        GTK 2 is removed, but the test can still be useful.\n+\/\/        test(\"2\", \"2\");\n+\/\/        test(\"2.2\", \"2\");\n","filename":"test\/jdk\/java\/awt\/Gtk\/GtkVersionTest\/GtkVersionTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @summary  Verifies Robot screen capture capabilities with different\n+ * @summary  Verifies Robot screen capture capabilities with available\n@@ -47,1 +47,0 @@\n- * @run main\/othervm -Djdk.gtk.version=2 -Dsun.java2d.uiScale=1 ScreenCaptureGtkTest\n@@ -56,6 +55,0 @@\n-        if (\"2\".equals(System.getProperty(\"jdk.gtk.version\"))\n-                && System.getenv(\"WAYLAND_DISPLAY\") != null) {\n-            \/\/ screen capture is not supported with gtk2 on Wayland\n-            return;\n-        }\n-\n","filename":"test\/jdk\/java\/awt\/Robot\/HiDPIScreenCapture\/ScreenCaptureGtkTest.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -296,0 +296,21 @@\n+    private static void perfectSquaresLong() {\n+        \/* For every long value n in [0, 2^32) such that x == n * n,\n+         * n - 1 <= (long) Math.sqrt(x >= 0 ? x : x + 0x1p64) <= n\n+         * must be true.\n+         * This property is used to implement MutableBigInteger.unsignedLongSqrt().\n+         *\/\n+        int failCount = 0;\n+\n+        long limit = 1L << 32;\n+        for (long n = 0; n < limit; n++) {\n+            long x = n * n;\n+            long s = (long) Math.sqrt(x >= 0 ? x : x + 0x1p64);\n+            if (!(s == n || s == n - 1)) {\n+                failCount++;\n+                System.err.println(s + \"^2 != \" + x + \" && (\" + s + \"+1)^2 != \" + x);\n+            }\n+        }\n+\n+        report(\"perfectSquaresLong\", failCount);\n+    }\n+\n@@ -298,0 +319,1 @@\n+        perfectSquaresLong();\n","filename":"test\/jdk\/java\/math\/BigInteger\/BigIntegerTest.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,336 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.net.http.HttpResponse.BodyHandlers;\n+import java.util.ArrayList;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.net.ssl.SSLContext;\n+\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestExchange;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestHandler;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestServer;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import jdk.test.lib.net.URIBuilder;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+\/*\n+ * @test\n+ * @bug 8335181\n+ * @summary verify that the HttpClient correctly handles incoming GOAWAY frames and\n+ *          retries any unprocessed requests on a new connection\n+ * @library \/test\/lib \/test\/jdk\/java\/net\/httpclient\/lib\n+ * @build jdk.httpclient.test.lib.common.HttpServerAdapters\n+ *        jdk.test.lib.net.SimpleSSLContext\n+ * @run junit H2GoAwayTest\n+ *\/\n+public class H2GoAwayTest {\n+    private static final String REQ_PATH = \"\/test\";\n+    private static HttpTestServer server;\n+    private static String REQ_URI_BASE;\n+    private static SSLContext sslCtx;\n+\n+    @BeforeAll\n+    static void beforeAll() throws Exception {\n+        sslCtx = new SimpleSSLContext().get();\n+        assertNotNull(sslCtx, \"SSLContext couldn't be created\");\n+        server = HttpTestServer.create(HTTP_2, sslCtx);\n+        server.addHandler(new Handler(), REQ_PATH);\n+        server.start();\n+        System.out.println(\"Server started at \" + server.getAddress());\n+        REQ_URI_BASE = URIBuilder.newBuilder().scheme(\"https\")\n+                .loopback()\n+                .port(server.getAddress().getPort())\n+                .path(REQ_PATH)\n+                .build().toString();\n+    }\n+\n+    @AfterAll\n+    static void afterAll() {\n+        if (server != null) {\n+            System.out.println(\"Stopping server at \" + server.getAddress());\n+            server.stop();\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when several requests are sent using send() and the server\n+     * connection is configured to send a GOAWAY after processing only a few requests, then\n+     * the remaining requests are retried on a different connection\n+     *\/\n+    @Test\n+    public void testSequential() throws Exception {\n+        final LimitedPerConnRequestApprover reqApprover = new LimitedPerConnRequestApprover();\n+        server.setRequestApprover(reqApprover::allowNewRequest);\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int numReqs = LimitedPerConnRequestApprover.MAX_REQS_PER_CONN + 3;\n+                final Set<String> connectionKeys = new LinkedHashSet<>();\n+                for (int i = 1; i <= numReqs; i++) {\n+                    final URI reqURI = new URI(REQ_URI_BASE + \"?seq&\" + reqMethod + \"=\" + i);\n+                    final HttpRequest req = HttpRequest.newBuilder()\n+                            .uri(reqURI)\n+                            .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                            .build();\n+                    System.out.println(\"initiating request \" + req);\n+                    final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                    final String respBody = resp.body();\n+                    System.out.println(\"received response: \" + respBody);\n+                    assertEquals(200, resp.statusCode(),\n+                            \"unexpected status code for request \" + resp.request());\n+                    \/\/ response body is the logical key of the connection on which the\n+                    \/\/ request was handled\n+                    connectionKeys.add(respBody);\n+                }\n+                System.out.println(\"connections involved in handling the requests: \"\n+                        + connectionKeys);\n+                \/\/ all requests have finished, we now just do a basic check that\n+                \/\/ more than one connection was involved in processing these requests\n+                assertEquals(2, connectionKeys.size(),\n+                        \"unexpected number of connections \" + connectionKeys);\n+            }\n+        } finally {\n+            server.setRequestApprover(null); \/\/ reset\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when a server responds with a GOAWAY and then never processes the new retried\n+     * requests on a new connection too, then the application code receives the request failure.\n+     * This tests the send() API of the HttpClient.\n+     *\/\n+    @Test\n+    public void testUnprocessedRaisesException() throws Exception {\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final Random random = new Random();\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int maxAllowedReqs = 2;\n+                final int numReqs = maxAllowedReqs + 3; \/\/ 3 more requests than max allowed\n+                \/\/ configure the approver\n+                final LimitedRequestApprover reqApprover = new LimitedRequestApprover(maxAllowedReqs);\n+                server.setRequestApprover(reqApprover::allowNewRequest);\n+                try {\n+                    int numSuccess = 0;\n+                    int numFailed = 0;\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final String reqQueryPart = \"?sync&\" + reqMethod + \"=\" + i;\n+                        final URI reqURI = new URI(REQ_URI_BASE + reqQueryPart);\n+                        final HttpRequest req = HttpRequest.newBuilder()\n+                                .uri(reqURI)\n+                                .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                                .build();\n+                        System.out.println(\"initiating request \" + req);\n+                        if (i <= maxAllowedReqs) {\n+                            \/\/ expected to successfully complete\n+                            numSuccess++;\n+                            final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                            final String respBody = resp.body();\n+                            System.out.println(\"received response: \" + respBody);\n+                            assertEquals(200, resp.statusCode(),\n+                                    \"unexpected status code for request \" + resp.request());\n+                        } else {\n+                            \/\/ expected to fail as unprocessed\n+                            try {\n+                                final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                                fail(\"Request was expected to fail as unprocessed,\"\n+                                        + \" but got response: \" + resp.body() + \", status code: \"\n+                                        + resp.statusCode());\n+                            } catch (IOException ioe) {\n+                                \/\/ verify it failed for the right reason\n+                                if (ioe.getMessage() == null\n+                                        || !ioe.getMessage().contains(\"request not processed by peer\")) {\n+                                    \/\/ propagate the original failure\n+                                    throw ioe;\n+                                }\n+                                numFailed++; \/\/ failed due to right reason\n+                                System.out.println(\"received expected failure: \" + ioe\n+                                        + \", for request \" + reqURI);\n+                            }\n+                        }\n+                    }\n+                    \/\/ verify the correct number of requests succeeded\/failed\n+                    assertEquals(maxAllowedReqs, numSuccess, \"unexpected number of requests succeeded\");\n+                    assertEquals((numReqs - maxAllowedReqs), numFailed, \"unexpected number of requests failed\");\n+                } finally {\n+                    server.setRequestApprover(null); \/\/ reset\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when a server responds with a GOAWAY and then never processes the new retried\n+     * requests on a new connection too, then the application code receives the request failure.\n+     * This tests the sendAsync() API of the HttpClient.\n+     *\/\n+    @Test\n+    public void testUnprocessedRaisesExceptionAsync() throws Throwable {\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final Random random = new Random();\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int maxAllowedReqs = 2;\n+                final int numReqs = maxAllowedReqs + 3; \/\/ 3 more requests than max allowed\n+                \/\/ configure the approver\n+                final LimitedRequestApprover reqApprover = new LimitedRequestApprover(maxAllowedReqs);\n+                server.setRequestApprover(reqApprover::allowNewRequest);\n+                try {\n+                    final List<Future<HttpResponse<String>>> futures = new ArrayList<>();\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final URI reqURI = new URI(REQ_URI_BASE + \"?async&\" + reqMethod + \"=\" + i);\n+                        final HttpRequest req = HttpRequest.newBuilder()\n+                                .uri(reqURI)\n+                                .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                                .build();\n+                        System.out.println(\"initiating request \" + req);\n+                        final Future<HttpResponse<String>> f = client.sendAsync(req, BodyHandlers.ofString());\n+                        futures.add(f);\n+                    }\n+                    \/\/ wait for responses\n+                    int numFailed = 0;\n+                    int numSuccess = 0;\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final String reqQueryPart = \"?async&\" + reqMethod + \"=\" + i;\n+                        try {\n+                            System.out.println(\"waiting response of request \"\n+                                    + REQ_URI_BASE + reqQueryPart);\n+                            final HttpResponse<String> resp = futures.get(i - 1).get();\n+                            numSuccess++;\n+                            final String respBody = resp.body();\n+                            System.out.println(\"request: \" + resp.request()\n+                                    + \", received response: \" + respBody);\n+                            assertEquals(200, resp.statusCode(),\n+                                    \"unexpected status code for request \" + resp.request());\n+                        } catch (ExecutionException ee) {\n+                            final Throwable cause = ee.getCause();\n+                            if (!(cause instanceof IOException ioe)) {\n+                                throw cause;\n+                            }\n+                            \/\/ verify it failed for the right reason\n+                            if (ioe.getMessage() == null\n+                                    || !ioe.getMessage().contains(\"request not processed by peer\")) {\n+                                \/\/ propagate the original failure\n+                                throw ioe;\n+                            }\n+                            numFailed++; \/\/ failed due to the right reason\n+                            System.out.println(\"received expected failure: \" + ioe\n+                                    + \", for request \" + REQ_URI_BASE + reqQueryPart);\n+                        }\n+                    }\n+                    \/\/ verify the correct number of requests succeeded\/failed\n+                    assertEquals(maxAllowedReqs, numSuccess, \"unexpected number of requests succeeded\");\n+                    assertEquals((numReqs - maxAllowedReqs), numFailed, \"unexpected number of requests failed\");\n+                } finally {\n+                    server.setRequestApprover(null); \/\/ reset\n+                }\n+            }\n+        }\n+    }\n+\n+    \/\/ only allows fixed number of requests, irrespective of which server connection handles\n+    \/\/ it. requests that are rejected will either be sent a GOAWAY on the connection\n+    \/\/ or a RST_FRAME with a REFUSED_STREAM on the stream\n+    private static final class LimitedRequestApprover {\n+        private final int maxAllowedReqs;\n+        private final AtomicInteger numApproved = new AtomicInteger();\n+\n+        private LimitedRequestApprover(final int maxAllowedReqs) {\n+            this.maxAllowedReqs = maxAllowedReqs;\n+        }\n+\n+        public boolean allowNewRequest(final String serverConnKey) {\n+            final int approved = numApproved.incrementAndGet();\n+            return approved <= maxAllowedReqs;\n+        }\n+    }\n+\n+    \/\/ allows a certain number of requests per server connection.\n+    \/\/ requests that are rejected will either be sent a GOAWAY on the connection\n+    \/\/ or a RST_FRAME with a REFUSED_STREAM on the stream\n+    private static final class LimitedPerConnRequestApprover {\n+        private static final int MAX_REQS_PER_CONN = 6;\n+        private final Map<String, AtomicInteger> numApproved =\n+                new ConcurrentHashMap<>();\n+        private final Map<String, AtomicInteger> numDisapproved =\n+                new ConcurrentHashMap<>();\n+\n+        public boolean allowNewRequest(final String serverConnKey) {\n+            final AtomicInteger approved = numApproved.computeIfAbsent(serverConnKey,\n+                    (k) -> new AtomicInteger());\n+            int curr = approved.get();\n+            while (curr < MAX_REQS_PER_CONN) {\n+                if (approved.compareAndSet(curr, curr + 1)) {\n+                    return true; \/\/ new request allowed\n+                }\n+                curr = approved.get();\n+            }\n+            final AtomicInteger disapproved = numDisapproved.computeIfAbsent(serverConnKey,\n+                    (k) -> new AtomicInteger());\n+            final int numUnprocessed = disapproved.incrementAndGet();\n+            System.out.println(approved.get() + \" processed, \"\n+                    + numUnprocessed + \" unprocessed requests on connection \" + serverConnKey);\n+            return false;\n+        }\n+    }\n+\n+    private static final class Handler implements HttpTestHandler {\n+\n+        @Override\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n+            final String connectionKey = exchange.getConnectionKey();\n+            System.out.println(\"responding to request: \" + exchange.getRequestURI()\n+                    + \" on connection \" + connectionKey);\n+            final byte[] response = connectionKey.getBytes(UTF_8);\n+            exchange.sendResponseHeaders(200, response.length);\n+            try (final OutputStream os = exchange.getResponseBody()) {\n+                os.write(response);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/H2GoAwayTest.java","additions":336,"deletions":0,"binary":false,"changes":336,"status":"added"},{"patch":"@@ -61,0 +61,1 @@\n+import java.util.function.Predicate;\n@@ -242,0 +243,1 @@\n+        public abstract String getConnectionKey();\n@@ -256,1 +258,1 @@\n-            return new Http2TestExchangeImpl(exchange);\n+            return new H2ExchangeImpl(exchange);\n@@ -309,0 +311,6 @@\n+\n+            @Override\n+            public String getConnectionKey() {\n+                return exchange.getLocalAddress() + \"->\" + exchange.getRemoteAddress();\n+            }\n+\n@@ -315,1 +323,1 @@\n-        private static final class Http2TestExchangeImpl extends HttpTestExchange {\n+        private static final class H2ExchangeImpl extends HttpTestExchange {\n@@ -317,1 +325,1 @@\n-            Http2TestExchangeImpl(Http2TestExchange exch) {\n+            H2ExchangeImpl(Http2TestExchange exch) {\n@@ -366,0 +374,5 @@\n+            @Override\n+            public String getConnectionKey() {\n+                return exchange.getConnectionKey();\n+            }\n+\n@@ -711,0 +724,1 @@\n+        public abstract void setRequestApprover(final Predicate<String> approver);\n@@ -859,0 +873,5 @@\n+\n+            @Override\n+            public void setRequestApprover(final Predicate<String> approver) {\n+                throw new UnsupportedOperationException(\"not supported\");\n+            }\n@@ -910,0 +929,5 @@\n+\n+            @Override\n+            public void setRequestApprover(final Predicate<String> approver) {\n+                this.impl.setRequestApprover(approver);\n+            }\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/common\/HttpServerAdapters.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,6 @@\n+\n+    \/**\n+     * {@return the identification of the connection on which this exchange is being\n+     * processed}\n+     *\/\n+    String getConnectionKey();\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestExchange.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -223,0 +223,5 @@\n+    @Override\n+    public String getConnectionKey() {\n+        return conn.connectionKey();\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestExchangeImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import java.util.function.Predicate;\n+\n@@ -62,0 +64,2 @@\n+    \/\/ request approver which takes the server connection key as the input\n+    private volatile Predicate<String> newRequestApprover;\n@@ -288,0 +292,8 @@\n+    public void setRequestApprover(final Predicate<String> approver) {\n+        this.newRequestApprover = approver;\n+    }\n+\n+    Predicate<String> getRequestApprover() {\n+        return this.newRequestApprover;\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServer.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+import java.util.Set;\n@@ -81,0 +82,2 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiPredicate;\n@@ -82,0 +85,1 @@\n+import java.util.function.Predicate;\n@@ -85,0 +89,1 @@\n+import static jdk.internal.net.http.frame.ErrorFrame.REFUSED_STREAM;\n@@ -113,0 +118,4 @@\n+    \/\/ the max stream id of a processed H2 request. -1 implies none were processed.\n+    private final AtomicInteger maxProcessedRequestStreamId = new AtomicInteger(-1);\n+    \/\/ the stream id that was sent in a GOAWAY frame. -1 implies no GOAWAY frame was sent.\n+    private final AtomicInteger goAwayRequestStreamId = new AtomicInteger(-1);\n@@ -237,5 +246,23 @@\n-    void goAway(int error) throws IOException {\n-        int laststream = nextstream >= 3 ? nextstream - 2 : 1;\n-\n-        GoAwayFrame go = new GoAwayFrame(laststream, error);\n-        outputQ.put(go);\n+    private void sendGoAway(final int error) throws IOException {\n+        int maxProcessedStreamId = maxProcessedRequestStreamId.get();\n+        if (maxProcessedStreamId == -1) {\n+            maxProcessedStreamId = 0;\n+        }\n+        boolean send = false;\n+        int currentGoAwayReqStrmId = goAwayRequestStreamId.get();\n+        \/\/ update the last processed stream id and send a goaway frame if the new last processed\n+        \/\/ stream id is lesser than the last processed stream id sent in\n+        \/\/ a previous goaway frame (if any)\n+        while (currentGoAwayReqStrmId == -1 || maxProcessedStreamId < currentGoAwayReqStrmId) {\n+            if (goAwayRequestStreamId.compareAndSet(currentGoAwayReqStrmId, maxProcessedStreamId)) {\n+                send = true;\n+                break;\n+            }\n+            currentGoAwayReqStrmId = goAwayRequestStreamId.get();\n+        }\n+        if (!send) {\n+            return;\n+        }\n+        final GoAwayFrame frame = new GoAwayFrame(maxProcessedStreamId, error);\n+        outputQ.put(frame);\n+        System.err.println(\"Sending GOAWAY frame \" + frame + \" from server connection \" + this);\n@@ -334,2 +361,3 @@\n-            if (error != -1)\n-                goAway(error);\n+            if (error != -1) {\n+                sendGoAway(error);\n+            }\n@@ -615,0 +643,8 @@\n+        \/\/ skip processing the request if configured to do so\n+        final String connKey = connectionKey();\n+        if (!shouldProcessNewHTTPRequest(connKey)) {\n+            System.err.println(\"Rejecting primordial stream 1 and sending GOAWAY\" +\n+                    \" on server connection \" + connKey + \", for request: \" + path);\n+            sendGoAway(ErrorFrame.NO_ERROR);\n+            return;\n+        }\n@@ -623,0 +659,1 @@\n+        maxProcessedRequestStreamId.set(1);\n@@ -628,0 +665,12 @@\n+    private boolean shouldProcessNewHTTPRequest(final String serverConnKey) {\n+        final Predicate<String> approver = this.server.getRequestApprover();\n+        if (approver == null) {\n+            return true; \/\/ process the request\n+        }\n+        return approver.test(serverConnKey);\n+    }\n+\n+    final String connectionKey() {\n+        return this.server.getAddress() + \"->\" + this.socket.getRemoteSocketAddress();\n+    }\n+\n@@ -635,1 +684,1 @@\n-            throw new IOException(\"unexpected stream id\");\n+            throw new IOException(\"unexpected stream id: \" + streamid);\n@@ -666,1 +715,1 @@\n-        if (disallowedHeader.isPresent())\n+        if (disallowedHeader.isPresent()) {\n@@ -668,0 +717,1 @@\n+        }\n@@ -669,1 +719,10 @@\n-\n+        \/\/ skip processing the request if the server is configured to do so\n+        final String connKey = connectionKey();\n+        final String path = headers.firstValue(\":path\").orElse(\"\");\n+        if (!shouldProcessNewHTTPRequest(connKey)) {\n+            System.err.println(\"Rejecting stream \" + streamid\n+                    + \" and sending GOAWAY on server connection \"\n+                    + connKey + \", for request: \" + path);\n+            sendGoAway(ErrorFrame.NO_ERROR);\n+            return;\n+        }\n@@ -672,0 +731,8 @@\n+        \/\/ keep track of the largest request id that we have processed\n+        int currentLargest = maxProcessedRequestStreamId.get();\n+        while (streamid > currentLargest) {\n+            if (maxProcessedRequestStreamId.compareAndSet(currentLargest, streamid)) {\n+                break;\n+            }\n+            currentLargest = maxProcessedRequestStreamId.get();\n+        }\n@@ -766,0 +833,2 @@\n+                    System.err.println(\"EOF reached on connection \" + connectionKey()\n+                            + \", will no longer accept incoming frames\");\n@@ -789,0 +858,11 @@\n+                            final int streamId = frame.streamid();\n+                            final int finalProcessedStreamId = goAwayRequestStreamId.get();\n+                            \/\/ if we already sent a goaway, then don't create new streams with\n+                            \/\/ higher stream ids.\n+                            if (finalProcessedStreamId != -1 && streamId > finalProcessedStreamId) {\n+                                System.err.println(connectionKey() + \" resetting stream \" + streamId\n+                                        + \" as REFUSED_STREAM\");\n+                                final ResetFrame rst = new ResetFrame(streamId, REFUSED_STREAM);\n+                                outputQ.put(rst);\n+                                continue;\n+                            }\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServerConnection.java","additions":91,"deletions":11,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -39,0 +40,1 @@\n+import java.nio.MappedByteBuffer;\n@@ -40,0 +42,3 @@\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -42,0 +47,1 @@\n+import java.util.Set;\n@@ -46,0 +52,3 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.nio.file.StandardOpenOption.*;\n+\n@@ -716,0 +725,13 @@\n+\n+    @Test\n+    void testHashCode() throws IOException {\n+        byte[] bytes = \"hello world\".getBytes(UTF_8);\n+        Path path = Files.createTempFile(\"\", \"\");\n+        Files.write(path, bytes);\n+        try (FileChannel fc = FileChannel.open(path, READ, DELETE_ON_CLOSE)) {\n+            MappedByteBuffer one = fc.map(FileChannel.MapMode.READ_ONLY, 0, bytes.length);\n+            ByteBuffer two = ByteBuffer.wrap(bytes);\n+            Assert.assertEquals(one, two);\n+            Assert.assertEquals(one.hashCode(), two.hashCode());\n+        }\n+    }\n","filename":"test\/jdk\/java\/nio\/Buffer\/EqualsCompareTest.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,11 +39,11 @@\n- * @run main\/othervm OCSPTimeout 1000 true\n- * @run main\/othervm -Dcom.sun.security.ocsp.readtimeout=5\n- *      OCSPTimeout 1000 true\n- * @run main\/othervm -Dcom.sun.security.ocsp.readtimeout=1\n- *      OCSPTimeout 5000 false\n- * @run main\/othervm -Dcom.sun.security.ocsp.readtimeout=1s\n- *      OCSPTimeout 5000 false\n- * @run main\/othervm -Dcom.sun.security.ocsp.readtimeout=1500ms\n- *      OCSPTimeout 5000 false\n- * @run main\/othervm -Dcom.sun.security.ocsp.readtimeout=4500ms\n- *      OCSPTimeout 1000 true\n+ * @run main\/othervm -Djava.security.debug=certpath OCSPTimeout 1000 true\n+ * @run main\/othervm -Djava.security.debug=certpath\n+ *      -Dcom.sun.security.ocsp.readtimeout=5 OCSPTimeout 1000 true\n+ * @run main\/othervm -Djava.security.debug=certpath\n+ *      -Dcom.sun.security.ocsp.readtimeout=1 OCSPTimeout 5000 false\n+ * @run main\/othervm -Djava.security.debug=certpath\n+ *      -Dcom.sun.security.ocsp.readtimeout=1s OCSPTimeout 5000 false\n+ * @run main\/othervm -Djava.security.debug=certpath\n+ *      -Dcom.sun.security.ocsp.readtimeout=1500ms OCSPTimeout 5000 false\n+ * @run main\/othervm -Djava.security.debug=certpath\n+ *      -Dcom.sun.security.ocsp.readtimeout=4500ms OCSPTimeout 1000 true\n@@ -85,1 +85,1 @@\n-    public static void main(String args[]) throws Exception {\n+    public static void main(String[] args) throws Exception {\n@@ -91,26 +91,3 @@\n-        if (args[0] != null) {\n-            ocspTimeout = Integer.parseInt(args[0]);\n-        }\n-        rootOcsp.setDelay(ocspTimeout);\n-\n-        expected = (args[1] != null && Boolean.parseBoolean(args[1]));\n-        log(\"Test case expects to \" + (expected ? \"pass\" : \"fail\"));\n-\n-        \/\/ validate chain\n-        CertPathValidator cpv = CertPathValidator.getInstance(\"PKIX\");\n-        PKIXRevocationChecker prc =\n-                (PKIXRevocationChecker) cpv.getRevocationChecker();\n-        prc.setOptions(EnumSet.of(NO_FALLBACK, SOFT_FAIL));\n-        PKIXParameters params =\n-                new PKIXParameters(Set.of(new TrustAnchor(rootCert, null)));\n-        params.addCertPathChecker(prc);\n-        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n-        CertPath cp = cf.generateCertPath(List.of(eeCert));\n-        cpv.validate(cp, params);\n-\n-        \/\/ unwrap soft fail exceptions and check for SocketTimeoutException\n-        List<CertPathValidatorException> softExc = prc.getSoftFailExceptions();\n-        if (expected) {\n-            if (softExc.size() > 0) {\n-                throw new RuntimeException(\"Expected to pass, found \" +\n-                        softExc.size() + \" soft fail exceptions\");\n+        try {\n+            if (args[0] != null) {\n+                ocspTimeout = Integer.parseInt(args[0]);\n@@ -118,12 +95,25 @@\n-        } else {\n-            \/\/ If we expect to fail the validation then there should be a\n-            \/\/ SocketTimeoutException\n-            boolean found = false;\n-            for (CertPathValidatorException softFail : softExc) {\n-                log(\"CPVE: \" + softFail);\n-                Throwable cause = softFail.getCause();\n-                log(\"Cause: \" + cause);\n-                while (cause != null) {\n-                    if (cause instanceof SocketTimeoutException) {\n-                        found = true;\n-                        break;\n+            rootOcsp.setDelay(ocspTimeout);\n+\n+            expected = (args[1] != null && Boolean.parseBoolean(args[1]));\n+            log(\"Test case expects to \" + (expected ? \"pass\" : \"fail\"));\n+\n+            \/\/ validate chain\n+            CertPathValidator cpv = CertPathValidator.getInstance(\"PKIX\");\n+            PKIXRevocationChecker prc =\n+                    (PKIXRevocationChecker) cpv.getRevocationChecker();\n+            prc.setOptions(EnumSet.of(NO_FALLBACK, SOFT_FAIL));\n+            PKIXParameters params =\n+                    new PKIXParameters(Set.of(new TrustAnchor(rootCert, null)));\n+            params.addCertPathChecker(prc);\n+            CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+            CertPath cp = cf.generateCertPath(List.of(eeCert));\n+            cpv.validate(cp, params);\n+\n+            \/\/ unwrap soft fail exceptions and check for SocketTimeoutException\n+            List<CertPathValidatorException> softExc = prc.getSoftFailExceptions();\n+            if (expected) {\n+                if (!softExc.isEmpty()) {\n+                    log(\"Expected to pass, found \" + softExc.size() +\n+                            \" soft fail exceptions\");\n+                    for (CertPathValidatorException cpve : softExc) {\n+                        log(\"Exception: \" + cpve);\n@@ -131,1 +121,2 @@\n-                    cause = cause.getCause();\n+                    throw new RuntimeException(\"Expected to pass, found \" +\n+                            softExc.size() + \" soft fail exceptions\");\n@@ -133,2 +124,18 @@\n-                if (found) {\n-                    break;\n+            } else {\n+                \/\/ If we expect to fail the validation then there should be a\n+                \/\/ SocketTimeoutException\n+                boolean found = false;\n+                for (CertPathValidatorException softFail : softExc) {\n+                    log(\"CPVE: \" + softFail);\n+                    Throwable cause = softFail.getCause();\n+                    log(\"Cause: \" + cause);\n+                    while (cause != null) {\n+                        if (cause instanceof SocketTimeoutException) {\n+                            found = true;\n+                            break;\n+                        }\n+                        cause = cause.getCause();\n+                    }\n+                    if (found) {\n+                        break;\n+                    }\n@@ -136,1 +143,0 @@\n-            }\n@@ -138,2 +144,3 @@\n-            if (!found) {\n-                throw new RuntimeException(\"SocketTimeoutException not thrown\");\n+                if (!found) {\n+                    throw new RuntimeException(\"SocketTimeoutException not thrown\");\n+                }\n@@ -141,0 +148,3 @@\n+        } finally {\n+            rootOcsp.stop();\n+            rootOcsp.shutdownNow();\n","filename":"test\/jdk\/java\/security\/cert\/CertPathValidator\/OCSP\/OCSPTimeout.java","additions":67,"deletions":57,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -575,2 +575,2 @@\n-            System.out.println(\"[\" + Thread.currentThread().getName() + \"]: \" +\n-                    message);\n+            System.out.println(\"[\" + Thread.currentThread().getName() + \"][\" +\n+                    System.currentTimeMillis() + \"]: \" + message);\n@@ -730,0 +730,1 @@\n+                    log(\"Delaying response for \" + delayMsec + \" milliseconds.\");\n@@ -911,0 +912,7 @@\n+            \/\/ Display the whole request\n+            StringBuilder sb = new StringBuilder(\"OCSP GET REQUEST\\n\");\n+            for (String hTok : headerTokens) {\n+                sb.append(hTok).append(\"\\n\");\n+            }\n+            log(sb.toString());\n+\n@@ -1003,0 +1011,4 @@\n+            \/\/ Display the DER encoding before parsing\n+            log(\"Local OCSP Request Constructor, parsing bytes:\\n\" +\n+                    dumpHexBytes(requestBytes));\n+\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-\/**\n+\/*\n@@ -29,0 +29,1 @@\n+ * 8337603\n@@ -87,0 +88,1 @@\n+import java.util.stream.Stream;\n@@ -89,1 +91,4 @@\n-\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -737,0 +742,26 @@\n+    \/**\n+     * @bug 8337603\n+     *\/\n+    static Stream<Arguments> changedISOCodes() {\n+        var hebrew = \"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea\";\n+        var yiddish = \"\\u05d9\\u05d9\\u05b4\\u05d3\\u05d9\\u05e9\";\n+        var indonesian = \"Indonesia\";\n+\n+        return Stream.of(\n+            Arguments.of(\"he\", hebrew),\n+            Arguments.of(\"iw\", hebrew),\n+            Arguments.of(\"yi\", yiddish),\n+            Arguments.of(\"ji\", yiddish),\n+            Arguments.of(\"id\", indonesian),\n+            Arguments.of(\"in\", indonesian)\n+        );\n+    }\n+    @ParameterizedTest\n+    @MethodSource(\"changedISOCodes\")\n+    public void TestOldISOCodeLanguageName(String code, String expected) {\n+        var loc = Locale.of(code);\n+        assertEquals(expected,\n+            loc.getDisplayName(loc),\n+            \"java.locale.useOldISOCodes=\" + System.getProperty(\"java.locale.useOldISOCodes\"));\n+    }\n+\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleTest.java","additions":33,"deletions":2,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,182 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337681\n+ * @summary Test that raster use optimization does not cause any regressions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.RenderedImage;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import javax.imageio.IIOImage;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageReader;\n+import javax.imageio.ImageWriteParam;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.stream.MemoryCacheImageOutputStream;\n+\n+public class RasterReuseWriteTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        test(BufferedImage.TYPE_INT_RGB);\n+        test(BufferedImage.TYPE_INT_ARGB);\n+        test(BufferedImage.TYPE_INT_ARGB_PRE);\n+        test(BufferedImage.TYPE_4BYTE_ABGR);\n+        test(BufferedImage.TYPE_4BYTE_ABGR_PRE);\n+    }\n+\n+    private static void test(int type) throws Exception {\n+\n+        \/\/ swaps blue and red\n+        int bands = (type == BufferedImage.TYPE_INT_RGB ? 3 : 4);\n+        int[] sourceBands = bands == 3 ? new int[] { 2, 1, 0 } :\n+                                         new int[] { 2, 1, 0, 3 };\n+\n+        \/\/ test writing a BufferedImage without source bands\n+        BufferedImage img1 = createImage(256, 256, type);\n+        byte[] bytes1 = writePng(img1, null);\n+        BufferedImage img2 = ImageIO.read(new ByteArrayInputStream(bytes1));\n+        compare(img1, img2, false);\n+\n+        \/\/ test writing a BufferedImage with source bands\n+        BufferedImage img3 = createImage(256, 256, type);\n+        byte[] bytes3 = writePng(img3, sourceBands);\n+        BufferedImage img4 = ImageIO.read(new ByteArrayInputStream(bytes3));\n+        compare(img3, img4, true);\n+\n+        \/\/ test writing a non-BufferedImage with source bands and one tile\n+        RenderedImage img5 = toTiledImage(img1, 256);\n+        byte[] bytes5 = writePng(img5, sourceBands);\n+        BufferedImage img6 = ImageIO.read(new ByteArrayInputStream(bytes5));\n+        compare(img5, img6, true);\n+\n+        \/\/ test writing a non-BufferedImage with source bands and multiple tiles\n+        RenderedImage img7 = toTiledImage(img1, 128);\n+        byte[] bytes7 = writePng(img7, sourceBands);\n+        BufferedImage img8 = ImageIO.read(new ByteArrayInputStream(bytes7));\n+        compare(img7, img8, true);\n+    }\n+\n+    private static BufferedImage createImage(int w, int h, int type) throws Exception {\n+        BufferedImage img = new BufferedImage(w, h, type);\n+        Graphics2D g2d = img.createGraphics();\n+        g2d.setColor(Color.WHITE);\n+        g2d.fillRect(0, 0, w, h);\n+        g2d.setColor(Color.GREEN);\n+        g2d.drawRect(20, 20, 100, 50);\n+        g2d.setColor(Color.RED);\n+        g2d.drawRect(80, 10, 100, 40);\n+        g2d.setColor(Color.BLUE);\n+        g2d.fillRect(40, 60, 120, 30);\n+        g2d.dispose();\n+        return img;\n+    }\n+\n+    private static byte[] writePng(RenderedImage img, int[] sourceBands) throws Exception {\n+        ImageWriter writer = ImageIO.getImageWritersByFormatName(\"png\").next();\n+        ImageWriteParam param = writer.getDefaultWriteParam();\n+        param.setSourceBands(sourceBands);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ImageOutputStream stream = new MemoryCacheImageOutputStream(baos);\n+        writer.setOutput(stream);\n+        writer.write(null, new IIOImage(img, null, null), param);\n+        writer.dispose();\n+        stream.flush();\n+        return baos.toByteArray();\n+    }\n+\n+    private static void compare(RenderedImage img1, RenderedImage img2, boolean blueAndRedSwapped) {\n+        int[] pixels1 = getRgbPixels(img1);\n+        int[] pixels2 = getRgbPixels(img2);\n+        for (int i = 0; i < pixels1.length; i++) {\n+            int expected;\n+            if (blueAndRedSwapped && pixels1[i] == 0xFFFF0000) {\n+                expected = 0xFF0000FF; \/\/ red -> blue\n+            } else if (blueAndRedSwapped && pixels1[i] == 0xFF0000FF) {\n+                expected = 0xFFFF0000; \/\/ blue -> red\n+            } else {\n+                expected = pixels1[i]; \/\/ no change\n+            }\n+            int actual = pixels2[i];\n+            if (actual != expected) {\n+                throw new RuntimeException(\"Pixel \" + i + \": expected \" +\n+                    Integer.toHexString(expected) + \", but got \" +\n+                    Integer.toHexString(actual));\n+            }\n+        }\n+    }\n+\n+    private static int[] getRgbPixels(RenderedImage img) {\n+        int w = img.getWidth();\n+        int h = img.getHeight();\n+        if (img instanceof BufferedImage bi) {\n+            return bi.getRGB(0, 0, w, h, null, 0, w);\n+        } else {\n+            BufferedImage bi = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);\n+            Graphics2D g2d = bi.createGraphics();\n+            g2d.drawRenderedImage(img, new AffineTransform());\n+            g2d.dispose();\n+            return bi.getRGB(0, 0, w, h, null, 0, w);\n+        }\n+    }\n+\n+    private static RenderedImage toTiledImage(BufferedImage img, int tileSize) throws Exception {\n+\n+        \/\/ write to TIFF\n+        ImageWriter writer = ImageIO.getImageWritersByFormatName(\"tiff\").next();\n+        ImageWriteParam param = writer.getDefaultWriteParam();\n+        param.setTilingMode(ImageWriteParam.MODE_EXPLICIT);\n+        param.setTiling(tileSize, tileSize, 0, 0);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ImageOutputStream stream = new MemoryCacheImageOutputStream(baos);\n+        writer.setOutput(stream);\n+        writer.write(null, new IIOImage(img, null, null), param);\n+        writer.dispose();\n+        stream.flush();\n+        byte[] bytes = baos.toByteArray();\n+\n+        \/\/ read from TIFF\n+        ImageReader reader = ImageIO.getImageReadersByFormatName(\"tiff\").next();\n+        ImageInputStream input = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes));\n+        reader.setInput(input);\n+        RenderedImage ri = reader.readAsRenderedImage(0, null);\n+        if (ri instanceof BufferedImage) {\n+            throw new RuntimeException(\"Unexpected BufferedImage\");\n+        }\n+        int tw = ri.getTileWidth();\n+        int th = ri.getTileHeight();\n+        if (tw != tileSize || th != tileSize) {\n+            throw new RuntimeException(\"Expected tile size \" + tileSize +\n+                \", but found \" + tw + \"x\" + th);\n+        }\n+        return ri;\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/png\/RasterReuseWriteTest.java","additions":182,"deletions":0,"binary":false,"changes":182,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 8235404\n+ * @summary Checks that JOptionPane doesn't block drawing strings on another component\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual OptionPaneInput\n+ *\/\n+public class OptionPaneInput {\n+    private static JFrame f;\n+    private static Canvas c;\n+    private static JTextField t;\n+    private static final String instructions = \"\"\"\n+            1. Type \"test\" into the message dialog.\n+            2. Press enter key.\n+            3. Press OK button.\n+            4. If the OptionPaneInput frame has test drawn on it, pass. Otherwise fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame testFrame = new PassFailJFrame(instructions);\n+\n+        SwingUtilities.invokeAndWait(() -> createGUI());\n+        testFrame.awaitAndCheck();\n+    }\n+\n+    public static void createGUI() {\n+        f = new JFrame(\"OptionPaneInput\");\n+        c = new Canvas();\n+        t = new JTextField();\n+        f.add(c);\n+\n+        t.addActionListener(e -> {\n+            String text = t.getText();\n+            Graphics2D g2 = (Graphics2D)(c.getGraphics());\n+            g2.setColor(Color.BLACK);\n+            g2.drawString(text, 10, 10);\n+            System.out.println(\"drawing \"+text);\n+            g2.dispose();\n+        });\n+\n+        f.setSize(300, 100);\n+        PassFailJFrame.addTestWindow(f);\n+        PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n+        f.setVisible(true);\n+\n+        JOptionPane.showMessageDialog(f, t);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/OptionPaneInput.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-  @run main\/othervm -Djdk.gtk.version=2 DemandGTK\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,91 +0,0 @@\n-#!\/bin\/ksh -p\n-\n-#\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#   @test\n-#   @summary  Try to force GTK2. We must bail out to GTK3 (if any) if no 2 available.\n-#\n-#   @key headful\n-#   @bug 8156128 8212903\n-#   @compile ProvokeGTK.java\n-#   @requires os.family == \"linux\"\n-#   @run shell\/timeout=400 DemandGTK2.sh\n-\n-#\n-# Note that we depend on\n-# strace in the PATH\n-# \/sbin\/ldconfig (which may be not in PATH)\n-# It is true for OEL 7 and Ubuntu 14, 16\n-# but may fail in future. Save tomorrow for tomorrow.\n-#\n-# Read DemandGTK2.txt how to prepare GTK2-less machine.\n-#\n-\n-which strace\n-if [ $?  -ne 0 ]\n-then\n-    echo \"Please provide strace: \\\"which strace\\\" failed.\"\n-    exit 1\n-fi\n-\n-HAVE_2=`\/sbin\/ldconfig -v 2>\/dev\/null | grep libgtk-x11-2 | wc -l`\n-HAVE_3=`\/sbin\/ldconfig -v 2>\/dev\/null | grep libgtk-3.so | wc -l`\n-\n-\n-if [ \"${HAVE_2}\" = \"0\" ]\n-then\n-    \n-    if [ \"${HAVE_3}\" = \"0\" ]\n-    then\n-        echo \"Neither GTK2 nor GTK3 found: system misconfiguration. Exit.\"\n-        exit 1\n-    fi\n-    echo \"No GTK 2 library found: we should bail out to 3\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=2 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-3.*=\\ *[0-9]*$' strace.log > logg\n-else\n-    echo \"There is GTK 2 library: we should use it\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=2 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-x11.*=\\ *[0-9]*$' strace.log > logg\n-fi\n-\n-if [ ${EXECRES}  -ne 0 ]\n-then\n-    echo \"java execution failed for unknown reason, see logs\"\n-    exit 2\n-fi\n-\n-cat logg\n-if [ -s logg ]\n-then\n-    echo \"Success.\"\n-    exit 0\n-else\n-    echo \"Failed. Examine logs.\"\n-    exit 3\n-fi\n-\n-\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK2.sh","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-How to prepare an Ubuntu machine for GTK-2-less test run.\n-\n-The test DemandGTK2.sh should work well without GTK-2 switching to version 3\n-if there's no GTK-2 library available. \n-At the moment, it's not easy to find a system with GTK-3 and without GTK-2:\n-many programs still depend on version 2.\n-We can, however, rename GTK-2 library for a single test run and then restore\n-it back.\n-\n-(1) Find GTK2 library: run\n-  \/sbin\/ldconfig -v 2>\/dev\/null |  grep libgtk-x11-2\n-\n-It will output one or two lines like \n-libgtk-x11-2.0.so.0 -> libgtk-x11-2.0.so.0.2400.23\n-Search for the target of that symlink for instance with locate:\n-locate libgtk-x11-2.0.so.0.2400.23\n-Finally, you'll find the libraries. On my current machine they are\n-\/usr\/lib\/i386-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-I'm running 64-bit JDK and need to tamper with x86_64 copy only.\n-\n-(2) Find running programs depending on this library. They probably would crash\n-if you rename it. Stop them for this test run.\n-That said, I'm afraid it would be impossible to do on a system older than Ubuntu 16.04.\n-On my Ubuntu 16.04 I have only hud-service using this library, and that's OK, it will restart\n-after a crash, if any.\n-To find these programs, run\n-lsof \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-(3) Now,\n-sudo mv  \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23  \/usr\/lib\/x86_64-linux-gnu\/bak.libgtk-x11-2.0.so.0.2400.23\n-jtreg DemandGTK2.sh \n-sudo mv  \/usr\/lib\/x86_64-linux-gnu\/bak.libgtk-x11-2.0.so.0.2400.23  \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-Needless to say, you should substitute your own library path and however you run jtreg.\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK2.txt","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#   @summary  Try to force GTK3. We must bail out to GTK2 if no 3 available.\n+#   @summary  Try to force GTK3.\n@@ -56,5 +56,2 @@\n-    \n-    echo \"No GTK 3 library found: we should bail out to 2\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=3 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-x11.*=\\ *[0-9]*$' strace.log > logg\n+    echo \"No GTK 3 library found, do nothing\"\n+    exit 0\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK3.sh","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8285932 8310913\n+ * @bug 8285932 8310913 8336390 8338060\n@@ -39,0 +39,1 @@\n+import java.util.List;\n@@ -43,0 +44,1 @@\n+import java.util.function.Function;\n@@ -44,0 +46,1 @@\n+import java.util.stream.IntStream;\n@@ -46,1 +49,11 @@\n-    static long BASE_KEY = 10_000_000L;\n+    private static String BASE_KEY = \"BASEKEY-\";\n+\n+    \/\/ Return a String (identity object) that can be a key in WeakHashMap.\n+    private static String genKey(int i) {\n+        return BASE_KEY + i;\n+    }\n+\n+    \/\/ Return a String of the letter 'a' plus the integer (0..0xffff)\n+    private static String genValue(int i) {\n+        return String.valueOf((char) ('a' + i));\n+    }\n@@ -66,3 +79,7 @@\n-    static void mapTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, String>> supplier) {\n-        Map<Long, String> map = ReferencedKeyMap.create(isSoft, supplier);\n-        populate(map);\n+    static void mapTest(boolean isSoft, Supplier<Map<ReferenceKey<String>, String>> supplier) {\n+        Map<String, String> map = ReferencedKeyMap.create(isSoft, supplier);\n+        var strongKeys = populate(map);      \/\/ Retain references to the keys\n+        methods(map);\n+        Reference.reachabilityFence(strongKeys);\n+\n+        strongKeys = null;      \/\/ drop strong key references\n@@ -74,2 +91,0 @@\n-        populate(map);\n-        methods(map);\n@@ -78,3 +93,7 @@\n-    static void setTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, ReferenceKey<Long>>> supplier) {\n-        ReferencedKeySet<Long> set = ReferencedKeySet.create(isSoft, supplier);\n-        populate(set);\n+    static void setTest(boolean isSoft, Supplier<Map<ReferenceKey<String>, ReferenceKey<String>>> supplier) {\n+        ReferencedKeySet<String> set = ReferencedKeySet.create(isSoft, supplier);\n+        var strongKeys = populate(set);      \/\/ Retain references to the keys\n+        methods(set);\n+        Reference.reachabilityFence(strongKeys);\n+\n+        strongKeys = null;          \/\/ drop strong key references\n@@ -86,2 +105,0 @@\n-        populate(set);\n-        methods(set);\n@@ -90,1 +107,1 @@\n-    static void methods(Map<Long, String> map) {\n+    static void methods(Map<String, String> map) {\n@@ -92,2 +109,2 @@\n-        assertTrue(map.containsKey(BASE_KEY + 'a' -'a'), \"missing key\");\n-        assertTrue(map.get(BASE_KEY + 'b' -'a').equals(\"b\"), \"wrong key\");\n+        assertTrue(map.containsKey(genKey('a' -'a')), \"missing key\");\n+        assertTrue(map.get(genKey('b' -'a')).equals(\"b\"), \"wrong key\");\n@@ -95,5 +112,5 @@\n-        map.remove(BASE_KEY + 'd' -'a');\n-        assertTrue(map.get(BASE_KEY + 'd' -'a') == null, \"not removed\");\n-        map.putAll(Map.of(1L, \"A\", 2L, \"B\"));\n-        assertTrue(map.get(2L).equals(\"B\"), \"collection not added\");\n-        assertTrue(map.containsKey(1L), \"key missing\");\n+        map.remove(genKey('d' -'a'));\n+        assertTrue(map.get(genKey('d' -'a')) == null, \"not removed\");\n+        map.putAll(Map.of(genKey(1), \"A\", genKey(2), \"B\"));\n+        assertTrue(map.get(genKey(2)).equals(\"B\"), \"collection not added\");\n+        assertTrue(map.containsKey(genKey(1)), \"key missing\");\n@@ -101,11 +118,11 @@\n-        assertTrue(map.entrySet().contains(Map.entry(1L, \"A\")), \"key missing\");\n-        map.putIfAbsent(3L, \"C\");\n-        assertTrue(map.get(3L).equals(\"C\"), \"key missing\");\n-        map.putIfAbsent(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"B\"), \"key replaced\");\n-        map.remove(3L);\n-        assertTrue(map.get(3L) == null, \"key not removed\");\n-        map.replace(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key not replaced\");\n-        map.replace(2L, \"B\", \"E\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key replaced\");\n+        assertTrue(map.entrySet().contains(Map.entry(genKey(1), \"A\")), \"key missing\");\n+        map.putIfAbsent(genKey(3), \"C\");\n+        assertTrue(map.get(genKey(3)).equals(\"C\"), \"key missing\");\n+        map.putIfAbsent(genKey(2), \"D\");\n+        assertTrue(map.get(genKey(2)).equals(\"B\"), \"key replaced\");\n+        map.remove(genKey(3));\n+        assertTrue(map.get(genKey(3)) == null, \"key not removed\");\n+        map.replace(genKey(2), \"D\");\n+        assertTrue(map.get(genKey(2)).equals(\"D\"), \"key not replaced\");\n+        map.replace(genKey(2), \"B\", \"E\");\n+        assertTrue(map.get(genKey(2)).equals(\"D\"), \"key replaced\");\n@@ -114,1 +131,1 @@\n-    static void methods(ReferencedKeySet<Long> set) {\n+    static void methods(ReferencedKeySet<String> set) {\n@@ -116,9 +133,9 @@\n-        assertTrue(set.contains(BASE_KEY + 3), \"missing key\");\n-        set.remove(BASE_KEY + 3);\n-        assertTrue(!set.contains(BASE_KEY + 3), \"not removed\");\n-        Long element1 = set.get(BASE_KEY + 2);\n-        Long element2 = set.get(BASE_KEY + 3);\n-        Long element3 = set.get(BASE_KEY + 4);\n-        Long intern1 = set.intern(BASE_KEY + 2);\n-        Long intern2 = set.intern(BASE_KEY + 3);\n-        Long intern3 = set.intern(BASE_KEY + 4, e -> e);\n+        assertTrue(set.contains(genKey(3)), \"missing key\");\n+        set.remove(genKey(3));\n+        assertTrue(!set.contains(genKey(3)), \"not removed\");\n+        String element1 = set.get(genKey(2));\n+        String element2 = set.get(genKey(3));\n+        String element3 = set.get(genKey(4));\n+        String intern1 = set.intern(genKey(2));\n+        String intern2 = set.intern(genKey(3));\n+        String intern3 = set.intern(genKey(4), e -> e);\n@@ -131,2 +148,2 @@\n-        Long value1 = Long.valueOf(BASE_KEY + 999);\n-        Long value2 = Long.valueOf(BASE_KEY + 999);\n+        String value1 = genKey(999);\n+        String value2 = genKey(999);\n@@ -167,5 +184,5 @@\n-    static void populate(Map<Long, String> map) {\n-        for (int i = 0; i < 26; i++) {\n-            Long key = BASE_KEY + i;\n-            String value = String.valueOf((char) ('a' + i));\n-            map.put(key, value);\n+    static List<String> populate(Map<String, String> map) {\n+        var keyRefs = genStrings(0, 26, ReferencedKeyTest::genKey);\n+        var valueRefs = genStrings(0, 26, ReferencedKeyTest::genValue);\n+        for (int i = 0; i < keyRefs.size(); i++) {\n+            map.put(keyRefs.get(i), valueRefs.get(i));\n@@ -173,0 +190,1 @@\n+        return keyRefs;\n@@ -175,5 +193,9 @@\n-    static void populate(Set<Long> set) {\n-        for (int i = 0; i < 26; i++) {\n-            Long value = BASE_KEY + i;\n-            set.add(value);\n-        }\n+    static List<String> populate(Set<String> set) {\n+        var keyRefs = genStrings(0, 26, ReferencedKeyTest::genKey);\n+        set.addAll(keyRefs);\n+        return keyRefs;\n+    }\n+\n+    \/\/ Generate a List of consecutive strings using a function int -> String\n+    static List<String> genStrings(int min, int maxExclusive, Function<Integer, String> genString) {\n+        return IntStream.range(min, maxExclusive).mapToObj(i -> genString.apply(i)).toList();\n","filename":"test\/jdk\/jdk\/internal\/util\/ReferencedKeyTest.java","additions":76,"deletions":54,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Collections;\n@@ -32,1 +33,2 @@\n-import jdk.jfr.Recording;\n+import jdk.jfr.Event;\n+import jdk.jfr.consumer.RecordingStream;\n@@ -42,1 +44,1 @@\n- * Test for events: vm\/code_cache\/full vm\/compiler\/failure\n+ * Test for events: jdk.CodeCacheFull jdk.CompilationFailure\n@@ -61,0 +63,2 @@\n+    static class ProvocationEvent extends Event {\n+    }\n@@ -66,2 +70,2 @@\n-    private static final String pathFull = EventNames.CodeCacheFull;\n-    private static final String pathFailure = EventNames.CompilationFailure;\n+    private static final String EVENT_CODE_CACHE_FULL = EventNames.CodeCacheFull;\n+    private static final String EVENT_COMPILATION_FAILURE = EventNames.CompilationFailure;\n@@ -80,7 +84,24 @@\n-\n-        Recording r = new Recording();\n-        r.enable(pathFull);\n-        r.enable(pathFailure);\n-        r.start();\n-        provokeEvents();\n-        r.stop();\n+        List<RecordedEvent> events = Collections.synchronizedList(new ArrayList<>());\n+        try (RecordingStream rs = new RecordingStream()) {\n+            rs.setReuse(false);\n+            rs.enable(EVENT_CODE_CACHE_FULL);\n+            rs.enable(EVENT_COMPILATION_FAILURE);\n+            rs.onEvent(EVENT_CODE_CACHE_FULL, events::add);\n+            rs.onEvent(EVENT_COMPILATION_FAILURE, events::add);\n+            rs.onEvent(ProvocationEvent.class.getName(), e -> {\n+                if (!events.isEmpty()) {\n+                    rs.close();\n+                    return;\n+                }\n+                \/\/ Retry if CodeCacheFull or CompilationFailure events weren't provoked\n+                try {\n+                    provokeEvents();\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                    rs.close();\n+                }\n+            });\n+            rs.startAsync();\n+            provokeEvents();\n+            rs.awaitTermination();\n+        }\n@@ -90,2 +111,0 @@\n-\n-        List<RecordedEvent> events = Events.fromRecording(r);\n@@ -93,1 +112,1 @@\n-        for (RecordedEvent event : events) {\n+        for (RecordedEvent event : new ArrayList<>(events)) {\n@@ -95,1 +114,1 @@\n-            case pathFull:\n+            case EVENT_CODE_CACHE_FULL:\n@@ -99,1 +118,1 @@\n-            case pathFailure:\n+            case EVENT_COMPILATION_FAILURE:\n@@ -118,0 +137,2 @@\n+        System.out.println(\"provokeEvents()\");\n+        ProvocationEvent provocationEvent = new ProvocationEvent();\n@@ -162,0 +183,1 @@\n+        provocationEvent.commit();\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCodeSweeper.java","additions":39,"deletions":17,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -80,0 +80,9 @@\n+            \/\/ Only keep events from the test thread and the JFR threads\n+            String testThread = Thread.currentThread().getName();\n+            events.removeIf(event -> {\n+               String threadName = event.getThread().getJavaName();\n+               if (threadName.equals(testThread) || threadName.contains(\"JFR\")) {\n+                   return false;\n+               }\n+               return true;\n+            });\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestHiddenWait.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+import jdk.test.lib.Platform;\n+\n@@ -50,2 +52,4 @@\n-        verifyOutputFilenames(\"Compiler.perfmap\", FILENAME);\n-        verifyOutputFilenames(\"System.dump_map\", \"-F=%s\".formatted(FILENAME));\n+        if (Platform.isLinux()) {\n+            verifyOutputFilenames(\"Compiler.perfmap\", FILENAME);\n+            verifyOutputFilenames(\"System.dump_map\", \"-F=%s\".formatted(FILENAME));\n+        }\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdPIDSubstitution.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337506\n+ * @summary Verify Command Line arguments are not mapped with\n+ *     \"best-fit\" mappings on Windows\n+ * @requires (os.family == \"windows\")\n+ * @library \/test\/lib\n+ * @run junit DisableBestFitMappingTest\n+ *\/\n+import java.nio.ByteBuffer;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetEncoder;\n+import java.util.stream.Stream;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assumptions.*;\n+\n+public class DisableBestFitMappingTest {\n+    private static final CharsetEncoder NATIVE_ENC =\n+            Charset.forName(System.getProperty(\"native.encoding\")).newEncoder();\n+    private static final String REPLACEMENT =\n+            NATIVE_ENC.charset().decode(ByteBuffer.wrap(NATIVE_ENC.replacement())).toString();\n+    private static final int EXIT_SUCCESS = 0;\n+    private static final int EXIT_FAILURE = -1;\n+\n+    static Stream<Arguments> CMD_ARGS() {\n+        return Stream.of(\n+                Arguments.of(\"aa\\uff02 \\uff02bb\", \"aa\" + REPLACEMENT + \" \" + REPLACEMENT + \"bb\"),\n+                Arguments.of(\"aa\\uff01bb\", \"aa\" + REPLACEMENT + \"bb\"),\n+                Arguments.of(\"aa\\u221ebb\", \"aa\" + REPLACEMENT + \"bb\")\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"CMD_ARGS\")\n+    void testDisableBestFitMapping(String arg, String expected) throws Exception {\n+        \/\/ Only execute if the arg cannot be encoded\n+        assumeFalse(NATIVE_ENC.canEncode(arg),\n+                \"native.encoding (%s) can encode the argument '%s'. Test ignored.\"\n+                        .formatted(NATIVE_ENC.charset(), arg));\n+\n+        var result= ProcessTools.executeTestJava(\n+                DisableBestFitMappingTest.class.getSimpleName(), arg, expected);\n+        result.asLines().forEach(System.out::println);\n+        assertEquals(EXIT_SUCCESS, result.getExitValue(),\n+                \"Disabling best-fit mapping failed\");\n+    }\n+\n+    public static void main(String... args) {\n+        System.out.println(args[0]);\n+        System.out.println(args[1]);\n+        System.exit(args[0].equals(args[1]) ? EXIT_SUCCESS : EXIT_FAILURE);\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/DisableBestFitMappingTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -45,1 +45,2 @@\n-    vm.continuations\n+    vm.continuations \\\n+    vm.debug\n","filename":"test\/langtools\/TEST.ROOT","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @modules jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.html\n+ *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n@@ -47,1 +48,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,1 +52,1 @@\n- * This test compares the set of CSS class names defined in HtmlStyle\n+ * This test compares the set of CSS class names defined in HtmlStyles\n@@ -188,1 +190,1 @@\n-        return Arrays.stream(HtmlStyle.values())\n+        return Arrays.stream(HtmlStyles.values())\n@@ -196,1 +198,1 @@\n-        URL url = HtmlStyle.class.getResource(stylesheet);\n+        URL url = HtmlStyles.class.getResource(stylesheet);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkStylesheetClasses\/CheckStylesheetClasses.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,0 @@\n-                    <hr>\n@@ -138,1 +137,0 @@\n-                    <hr>\n@@ -215,1 +213,0 @@\n-                    <hr>\n@@ -236,1 +233,0 @@\n-                    <hr>\n@@ -247,1 +243,0 @@\n-                    <hr>\n@@ -258,1 +253,0 @@\n-                    <hr>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDeprecatedDocs\/TestDeprecatedDocs.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,2 +157,2 @@\n-                <dd><code>E<\/code> - I2: first type parameter<\/dd>\n-                <dd><code>F<\/code> - I2: second type parameter<\/dd>\n+                <dd><span id=\"m(E)-type-param-E\"><code>E<\/code> - I2: first type parameter<\/span><\/dd>\n+                <dd><span id=\"m(E)-type-param-F\"><code>F<\/code> - I2: second type parameter<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDirectedInheritance\/TestDirectedInheritance.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -230,1 +230,1 @@\n-                method-summary-table-tab3\"><code>abstract <a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n+                method-summary-table-tab3\"><code>abstract <a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n@@ -233,1 +233,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -388,1 +388,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testErasure\/TestErasure.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8188248\n+ * @bug      8188248 8313931\n@@ -70,1 +70,1 @@\n-                    <a href=\"A.html\" title=\"class in pkg\"><code>A<\/code><\/a>\"\"\");\n+                    param <a href=\"#m1(T)-type-param-T\"><code>T<\/code><\/a>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testGenericMethodLinkTaglet\/TestGenericMethodLinkTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-                \"Class C4&lt;E extends C4&lt;E&gt;&gt;<\/h1>\",\n+                \"\"\"\n+                    Class C4&lt;<span id=\"type-param-E\">E extends C4&lt;E&gt;<\/span>&gt;<\/h1>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHref\/TestHref.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -38,0 +39,1 @@\n+import jdk.javadoc.internal.html.*;\n@@ -71,3 +73,3 @@\n-        HtmlTree html = new HtmlTree(TagName.HTML);\n-        HtmlTree head = new HtmlTree(TagName.HEAD);\n-        HtmlTree title = new HtmlTree(TagName.TITLE);\n+        HtmlTree html = new HtmlTree(HtmlTag.HTML);\n+        HtmlTree head = new HtmlTree(HtmlTag.HEAD);\n+        HtmlTree title = new HtmlTree(HtmlTag.TITLE);\n@@ -79,1 +81,1 @@\n-        HtmlTree meta = new HtmlTree(TagName.META);\n+        HtmlTree meta = new HtmlTree(HtmlTag.META);\n@@ -83,1 +85,1 @@\n-        HtmlTree link = new HtmlTree(TagName.LINK);\n+        HtmlTree link = new HtmlTree(HtmlTag.LINK);\n@@ -91,1 +93,1 @@\n-        HtmlTree body = new HtmlTree(TagName.BODY);\n+        HtmlTree body = new HtmlTree(HtmlTag.BODY);\n@@ -94,1 +96,1 @@\n-        HtmlTree p = new HtmlTree(TagName.P);\n+        HtmlTree p = new HtmlTree(HtmlTag.P);\n@@ -107,1 +109,1 @@\n-        HtmlTree p1 = new HtmlTree(TagName.P);\n+        HtmlTree p1 = new HtmlTree(HtmlTag.P);\n@@ -109,1 +111,1 @@\n-        HtmlTree anchor = new HtmlTree(TagName.A);\n+        HtmlTree anchor = new HtmlTree(HtmlTag.A);\n@@ -115,1 +117,1 @@\n-        HtmlTree dl = new HtmlTree(TagName.DL);\n+        HtmlTree dl = new HtmlTree(HtmlTag.DL);\n@@ -118,3 +120,3 @@\n-        HtmlTree dlTree = new HtmlTree(TagName.DL);\n-        dlTree.add(new HtmlTree(TagName.DT));\n-        dlTree.add(new HtmlTree (TagName.DD));\n+        HtmlTree dlTree = new HtmlTree(HtmlTag.DL);\n+        dlTree.add(new HtmlTree(HtmlTag.DT));\n+        dlTree.add(new HtmlTree (HtmlTag.DD));\n@@ -122,3 +124,3 @@\n-        HtmlTree dlDisplay = new HtmlTree(TagName.DL);\n-        dlDisplay.add(new HtmlTree(TagName.DT));\n-        HtmlTree dd = new HtmlTree (TagName.DD);\n+        HtmlTree dlDisplay = new HtmlTree(HtmlTag.DL);\n+        dlDisplay.add(new HtmlTree(HtmlTag.DT));\n+        HtmlTree dd = new HtmlTree (HtmlTag.DD);\n@@ -133,1 +135,1 @@\n-        HtmlTree hr = new HtmlTree(TagName.HR);\n+        HtmlTree hr = new HtmlTree(HtmlTag.HR);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDocument\/TestHtmlDocument.java","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                    attribute \"border\" for table only accepts \"\" or \"1\": BORDER\"\"\",\n+                    attribute \"border\" for table only accepts \"\" or \"1\": border\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlTableStyles\/TestHtmlTableStyles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-                     href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n+                     href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n@@ -107,1 +107,1 @@\n-                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"Child.html\\\n+                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"#type-param-CE\\\n@@ -193,1 +193,1 @@\n-                a href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n+                a href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n@@ -212,1 +212,1 @@\n-                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html\" title=\"type parameter in Spli\\\n+                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spli\\\n@@ -215,3 +215,3 @@\n-                .html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n-                iterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n-                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spl\\\n+                .html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n+                iterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n+                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spl\\\n@@ -220,3 +220,3 @@\n-                OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n-                a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPri\\\n-                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n+                a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPri\\\n+                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type param\\\n@@ -239,1 +239,1 @@\n-                Spliterator.OfInt.html\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n+                Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n@@ -245,2 +245,2 @@\n-                &lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.\\\n-                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                &lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.\\\n+                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type param\\\n@@ -248,1 +248,1 @@\n-                e.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n+                e.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n@@ -250,2 +250,2 @@\n-                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in S\\\n-                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\\\n+                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in S\\\n+                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\\\n@@ -253,1 +253,1 @@\n-                .OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n+                .OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInterface\/TestInterface.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8313931\n+ * @summary  Javadoc: links to type parameters actually generate links to classes\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestLinkTagletTypeParam\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+public class TestLinkTagletTypeParam extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestLinkTagletTypeParam();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @JavadocTester.Test\n+    public void testClassTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    \/**\n+                     * Link to {@link F}.\n+                     *\n+                     * @param <F> the first type param\n+                     * @param <APND> an Appendable\n+                     *\n+                     * @see APND the second type parameter\n+                     *\/\n+                    public class Test<F, APND extends Appendable> {\n+                        private Test() {}\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:none\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+        checkExit(JavadocTester.Exit.OK);\n+\n+        checkOrder(\"Test.html\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"type-param-F\"><code>F<\/code> - the first type param<\/span><\/dd>\n+                    <dd><span id=\"type-param-APND\"><code>APND<\/code> - an Appendable<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    Link to <a href=\"#type-param-F\" title=\"type parameter in Test\"><code>F<\/code><\/a>.\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#type-param-APND\" title=\"type parameter in Test\">the second type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n+    }\n+\n+    @JavadocTester.Test\n+    public void testMethodTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+               \"\"\"\n+                    \/**\n+                     * Class comment.\n+                     *\/\n+                    public class Test {\n+                        \/**\n+                         * Link to {@link T} and {@linkplain T link with label}.\n+                         *\n+                         * @param <T> the T\n+                         * @param appendable the appendable\n+                         *\/\n+                        public <T extends Appendable> T append(final T appendable) {\n+                            return appendable;\n+                        }\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+\n+        checkOutput(JavadocTester.Output.OUT, true,\n+                \"\");\n+\n+        checkOutput(\"Test.html\", true,\n+                \"\"\"\n+                    Link to <a href=\"#append(T)-type-param-T\"><code>T<\/code><\/a> and <a href=\"#appe\\\n+                    nd(T)-type-param-T\">link with label<\/a>.\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkTagletTypeParam.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -125,0 +124,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/TestMemberInheritance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1363,1 +1363,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -1365,0 +1364,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-                    <dd><code>E<\/code> - the type parameter for this class.\"\"\",\n+                    <dd><span id=\"type-param-E\"><code>E<\/code> - the type parameter for this class.<\/span><\/dd>\"\"\",\n@@ -133,1 +133,1 @@\n-                    (<a href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n+                    (<a href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n@@ -137,2 +137,4 @@\n-                    <dd><code>T<\/code> - This is the first type parameter.<\/dd>\n-                    <dd><code>V<\/code> - This is the second type parameter.\"\"\",\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-T\"><code>T<\/code> - Th\\\n+                    is is the first type parameter.<\/span><\/dd>\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-V\"><code>V<\/code> - Th\\\n+                    is is the second type parameter.<\/span><\/dd>\"\"\",\n@@ -150,1 +152,1 @@\n-                    ab2 method-summary-table-tab4\"><code><a href=\"TypeParameters.html\" title=\"type p\\\n+                    ab2 method-summary-table-tab4\"><code><a href=\"#type-param-E\" title=\"type p\\\n@@ -155,1 +157,1 @@\n-                    ref=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n+                    ref=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n@@ -159,1 +161,1 @@\n-                    lass=\"return-type\"><a href=\"TypeParameters.html\" title=\"type parameter in TypePa\\\n+                    lass=\"return-type\"><a href=\"#type-param-E\" title=\"type parameter in TypePa\\\n@@ -161,1 +163,1 @@\n-                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"TypeParameters.html\" titl\\\n+                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"#type-param-E\" titl\\\n@@ -179,1 +181,1 @@\n-                    href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n+                    href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewLanguageFeatures\/TestNewLanguageFeatures.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-                    <dd><code>T2<\/code> - type 2<\/dd>\n+                    <dd><span id=\"genericMethod(T1,T2,T3)-type-param-T2\"><code>T2<\/code> - type 2<\/span><\/dd>\n@@ -95,1 +95,1 @@\n-                    <dd><code>T1<\/code> - type 1<\/dd>\n+                    <dd><span id=\"type-param-T1\"><code>T1<\/code> - type 1<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/TestParamTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"MyClassT.html\" title=\"type paramete\\\n+                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"#type-param-T\" title=\"type paramete\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testProperty\/TestProperty.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-                    <dd><code>T<\/code> - This is a type parameter.<\/dd>\n+                    <dd><span id=\"type-param-T\"><code>T<\/code> - This is a type parameter.<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,2 @@\n-                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html\" title=\"type parameter in Fields\">E<\/a>&gt; someClass\"\"\");\n+                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html#type-param-E\" title=\"type paramete\\\n+                    r in Fields\">E<\/a>&gt; someClass\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSerializedForm\/TestSerializedForm.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-                     <dd><code>T<\/code> - the throwable<\/dd>\n+                     <dd><span id=\"m()-type-param-T\"><code>T<\/code> - the throwable<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrows\/TestThrows.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976\n+ * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976 8313931\n@@ -113,1 +113,2 @@\n-                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\",\n+                    <div class=\"col-last even-row-color\">\n+                    <div class=\"block\">Generic constructor.<\/div>\"\"\",\n@@ -117,1 +118,12 @@\n-                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\");\n+                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\",\n+                \"\"\"\n+                    <a href=\"#%3Cinit%3E()-type-param-T\"><code>T<\/code><\/a>\"\"\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"&lt;init&gt;()-type-param-T\"><code>T<\/code> - the type parameter<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#%3Cinit%3E()-type-param-T\">link to type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/TestTypeParameters.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,0 +27,6 @@\n+    \/**\n+     * Generic constructor. {@link T}\n+     *\n+     * @param <T> the type parameter\n+     * @see T link to type parameter\n+     *\/\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/pkg\/CtorTypeParam.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                    <dd><code>##<\/code> - the ##<\/dd>\n+                    <dd><span id=\"type-param-##\"><code>##<\/code> - the ##<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testUnicode\/TestUnicode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -32,3 +32,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclint.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -45,1 +44,0 @@\n-                TagName tagName = TagName.valueOf(htmlTag.name());\n@@ -47,1 +45,1 @@\n-                check(htmlTag, tagName);\n+                check(htmlTag);\n@@ -59,2 +57,2 @@\n-    private static void check(HtmlTag htmlTag, TagName tagName) {\n-        boolean elementIsVoid = new HtmlTree(tagName).isVoid();\n+    private static void check(HtmlTag htmlTag) {\n+        boolean elementIsVoid = new HtmlTree(htmlTag).isVoid();\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testVoidHtmlElements\/TestVoidHtmlElements.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -34,1 +35,0 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n@@ -36,0 +36,2 @@\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -44,2 +46,2 @@\n-        check(HtmlTag.Attr.ABBR, HtmlTag.Attr.valueOf(\"ABBR\"), HtmlTag.Attr.values());\n-        check(HtmlTag.AttrKind.INVALID, HtmlTag.AttrKind.valueOf(\"INVALID\"), HtmlTag.AttrKind.values());\n+        check(HtmlAttr.ABBR, HtmlAttr.valueOf(\"ABBR\"), HtmlAttr.values());\n+        check(HtmlAttr.AttrKind.INVALID, HtmlAttr.AttrKind.valueOf(\"INVALID\"), HtmlAttr.AttrKind.values());\n","filename":"test\/langtools\/tools\/doclint\/CoverageExtras.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -103,4 +103,0 @@\n-     * <details>\n-     * <summary>Summary<\/summary>\n-     * <p>Details and Summary no longer supported in HTML5<\/p>\n-     * <\/details>\n@@ -155,0 +151,4 @@\n+     * <details>\n+     * <summary>Summary<\/summary>\n+     * <p>Details<\/p>\n+     * <\/details>\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-HtmlVersionTagsAttrsTest.java:69: error: attribute \"border\" for table only accepts \"\" or \"1\": BORDER\n+HtmlVersionTagsAttrsTest.java:69: error: attribute \"border\" for table only accepts \"\" or \"1\": 0\n@@ -262,13 +262,1 @@\n-HtmlVersionTagsAttrsTest.java:103: error: unknown tag: details\n-     * <details>\n-       ^\n-HtmlVersionTagsAttrsTest.java:104: error: unknown tag: summary\n-     * <summary>Summary<\/summary>\n-       ^\n-HtmlVersionTagsAttrsTest.java:104: error: unknown tag: summary\n-     * <summary>Summary<\/summary>\n-                       ^\n-HtmlVersionTagsAttrsTest.java:106: error: unknown tag: details\n-     * <\/details>\n-       ^\n-HtmlVersionTagsAttrsTest.java:129: error: element not allowed in documentation comments: <main>\n+HtmlVersionTagsAttrsTest.java:125: error: element not allowed in documentation comments: <main>\n@@ -301,1 +289,1 @@\n-HtmlVersionTagsAttrsTest.java:189: error: attribute \"border\" for table only accepts \"\" or \"1\": BORDER\n+HtmlVersionTagsAttrsTest.java:189: error: attribute \"border\" for table only accepts \"\" or \"1\": 2\n@@ -313,1 +301,1 @@\n-102 errors\n+98 errors\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.out","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -19,1 +19,1 @@\n-     *  <link>\n+     *  <link rel=\"http:\/\/example.com\/stylesheet.css\">\n","filename":"test\/langtools\/tools\/doclint\/html\/OtherTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -16,3 +16,0 @@\n-OtherTagsTest.java:19: error: element not allowed in documentation comments: <link>\n-     *  <link>\n-        ^\n@@ -28,1 +25,1 @@\n-9 errors\n+8 errors\n","filename":"test\/langtools\/tools\/doclint\/html\/OtherTagsTest.out","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,2 @@\n- * @bug 7142086\n+ * @bug 7142086 8337334\n+ * @requires vm.debug == false\n@@ -32,0 +33,7 @@\n+\/*\n+ * @test\n+ * @requires vm.debug == true\n+ * @modules jdk.compiler\n+ * @run main\/timeout=20 T7142086\n+ *\/\n+\n","filename":"test\/langtools\/tools\/javac\/7142086\/T7142086.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8334466\n+ * @summary Ambiguous method call with generics may cause FunctionDescriptorLookupError\n+ * @compile\/fail\/ref=CrashWithFunctionDescriptorLookupErrorTest.out -XDrawDiagnostics CrashWithFunctionDescriptorLookupErrorTest.java\n+ *\/\n+\n+import java.util.List;\n+\n+class CrashWithFunctionDescriptorLookupErrorTest {\n+    void m() {\n+        List<X> list = List.of(new X());\n+        test(list.get(0));\n+    }\n+\n+    void test(A<?> a) { }\n+    void test(B<?> b) { }\n+\n+    interface A<T extends A<T>> { T a(); }\n+    interface B<T extends B<T>> { T b(); }\n+    class X implements A<X>, B<X> {\n+        public X a() { return null; }\n+        public X b() { return null; }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/CrashWithFunctionDescriptorLookupErrorTest.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+CrashWithFunctionDescriptorLookupErrorTest.java:13:9: compiler.err.ref.ambiguous: test, kindname.method, test(CrashWithFunctionDescriptorLookupErrorTest.A<?>), CrashWithFunctionDescriptorLookupErrorTest, kindname.method, test(CrashWithFunctionDescriptorLookupErrorTest.B<?>), CrashWithFunctionDescriptorLookupErrorTest\n+1 error\n","filename":"test\/langtools\/tools\/javac\/lambda\/CrashWithFunctionDescriptorLookupErrorTest.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -720,0 +720,4 @@\n+\n+    @Test(posn=1, annoType=TA.class, expect=\"130\")\n+    @Test(posn=23, annoType=TA.class, expect=\"131\")\n+    public Map<@TA(130) String, @TA(131) String> f130;\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,0 +326,1 @@\n+            \"RUN apt-get install libubsan1\\n\" +\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerTestUtils.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.lang.runtime;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(3)\n+public class SwitchEnum {\n+\n+    public E[] inputs;\n+    @Setup\n+    public void setup() {\n+        inputs = E.values();\n+    }\n+\n+    @Benchmark\n+    public int enumSwitchWithBootstrap() {\n+        int sum = 0;\n+        for (E e : inputs) {\n+            sum += switch (e) {\n+                case null -> -1;\n+                case E0 -> 10;\n+                case E1 -> 11;\n+                case E2 -> 12;\n+                case E3 -> 13;\n+                case E4 -> 14;\n+                case E5 -> 15;\n+                case E6 -> 16;\n+                case E7 -> 17;\n+                case E8 -> 18;\n+                case E9 -> 19;\n+                default -> 17;\n+            };\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public int enumSwitchTraditional() {\n+        int sum = 0;\n+        for (E e : inputs) {\n+            sum += switch (e) {\n+                case E0 -> 10;\n+                case E1 -> 11;\n+                case E2 -> 12;\n+                case E3 -> 13;\n+                case E4 -> 14;\n+                case E5 -> 15;\n+                case E6 -> 16;\n+                case E7 -> 17;\n+                case E8 -> 18;\n+                case E9 -> 19;\n+                default -> 17;\n+            };\n+        }\n+        return sum;\n+    }\n+\n+    public static void main(String[] args) {\n+        SwitchEnum s = new SwitchEnum();\n+        s.setup();\n+        System.out.println(s.enumSwitchWithBootstrap());\n+        System.out.println(s.enumSwitchTraditional());\n+    }\n+\n+    enum E {\n+        E0, E1, E2, E3, E4, E5, E6, E7, E8, E9;\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/runtime\/SwitchEnum.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.math;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OperationsPerInvocation;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.math.BigInteger;\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 5, time = 1)\n+@Measurement(iterations = 5, time = 1)\n+@Fork(value = 3)\n+public class BigIntegerSquareRoot {\n+\n+    private BigInteger[] xsArray, sArray, mArray, lArray, xlArray;\n+    private static final int TESTSIZE = 1000;\n+\n+    @Setup\n+    public void setup() {\n+        Random r = new Random(1123);\n+\n+        xsArray = new BigInteger[TESTSIZE]; \/*\n+         * Each array entry is atmost 64 bits\n+         * in size\n+         *\/\n+        sArray = new BigInteger[TESTSIZE]; \/*\n+         * Each array entry is atmost 256 bits\n+         * in size\n+         *\/\n+        mArray = new BigInteger[TESTSIZE]; \/*\n+         * Each array entry is atmost 1024 bits\n+         * in size\n+         *\/\n+        lArray = new BigInteger[TESTSIZE]; \/*\n+         * Each array entry is atmost 4096 bits\n+         * in size\n+         *\/\n+        xlArray = new BigInteger[TESTSIZE]; \/*\n+         * Each array entry is atmost 16384 bits\n+         * in size\n+         *\/\n+\n+        for (int i = 0; i < TESTSIZE; i++) {\n+            xsArray[i] = new BigInteger(r.nextInt(64), r);\n+            sArray[i] = new BigInteger(r.nextInt(256), r);\n+            mArray[i] = new BigInteger(r.nextInt(1024), r);\n+            lArray[i] = new BigInteger(r.nextInt(4096), r);\n+            xlArray[i] = new BigInteger(r.nextInt(16384), r);\n+        }\n+    }\n+\n+    \/** Test BigInteger.sqrt() with numbers long at most 64 bits  *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testSqrtXS(Blackhole bh) {\n+        for (BigInteger s : xsArray) {\n+            bh.consume(s.sqrt());\n+        }\n+    }\n+\n+    \/** Test BigInteger.sqrt() with numbers long at most 256 bits *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testSqrtS(Blackhole bh) {\n+        for (BigInteger s : sArray) {\n+            bh.consume(s.sqrt());\n+        }\n+    }\n+\n+    \/** Test BigInteger.sqrt() with numbers long at most 1024 bits *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testSqrtM(Blackhole bh) {\n+        for (BigInteger s : mArray) {\n+            bh.consume(s.sqrt());\n+        }\n+    }\n+\n+    \/** Test BigInteger.sqrt() with numbers long at most 4096 bits *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testSqrtL(Blackhole bh) {\n+        for (BigInteger s : lArray) {\n+            bh.consume(s.sqrt());\n+        }\n+    }\n+\n+    \/** Test BigInteger.sqrt() with numbers long at most 16384 bits *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testSqrtXL(Blackhole bh) {\n+        for (BigInteger s : xlArray) {\n+            bh.consume(s.sqrt());\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerSquareRoot.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -926,5 +926,0 @@\n-\n-    @Benchmark\n-    public int testHeapHashCode() {\n-        return heapByteBuffer.hashCode();\n-    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}