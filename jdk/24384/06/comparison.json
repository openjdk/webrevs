{"files":[{"patch":"@@ -38,1 +38,1 @@\n-import javax.swing.BoxLayout;\n+import javax.swing.Box;\n@@ -42,1 +42,0 @@\n-import javax.swing.JPanel;\n@@ -58,0 +57,1 @@\n+    private static KeyboardFocusManager focusManager;\n@@ -62,1 +62,3 @@\n-        \/\/ Get all installed Look and Feels\n+        SwingUtilities.invokeAndWait(() ->\n+                focusManager = KeyboardFocusManager.getCurrentKeyboardFocusManager());\n+\n@@ -100,1 +102,2 @@\n-            \/\/ tab from radio button in group to next component in the middle of button group layout\n+            \/\/ tab from radio button in group to next component in the middle of\n+            \/\/ button group layout\n@@ -104,1 +107,2 @@\n-            \/\/ tab to radio button in group from component in the middle of button group layout\n+            \/\/ tab to radio button in group from component in the middle of\n+            \/\/ button group layout\n@@ -112,1 +116,2 @@\n-            \/\/ Verify that ActionListener is called when a RadioButton is selected using arrow key.\n+            \/\/ Verify that ActionListener is called when a RadioButton is\n+            \/\/ selected using arrow key\n@@ -116,1 +121,4 @@\n-            throw new RuntimeException(\"Error testing LaF: \" + laf.getName(), e);\n+            Throwable cause = e.getCause();\n+            throw new RuntimeException(\"Error testing LaF: \" + laf.getName()\n+                    + (cause != null ? \" - \" + cause.getMessage() : \"\"),\n+                    e);\n@@ -138,1 +146,1 @@\n-        mainFrame = new JFrame(\"Bug 8033699 - 8 Tests for Grouped\/Non Group Radio Buttons\");\n+        mainFrame = new JFrame(\"Radio Button Focus Tests\");\n@@ -143,2 +151,1 @@\n-        JPanel box = new JPanel();\n-        box.setLayout(new BoxLayout(box, BoxLayout.Y_AXIS));\n+        Box box = Box.createVerticalBox();\n@@ -164,4 +171,5 @@\n-        mainFrame.getContentPane().add(btnStart);\n-        mainFrame.getContentPane().add(box);\n-        mainFrame.getContentPane().add(radioBtnSingle);\n-        mainFrame.getContentPane().add(btnEnd);\n+        Box mainBox = Box.createVerticalBox();\n+        mainBox.add(btnStart);\n+        mainBox.add(box);\n+        mainBox.add(radioBtnSingle);\n+        mainBox.add(btnEnd);\n@@ -169,0 +177,1 @@\n+        mainFrame.add(mainBox);\n@@ -173,1 +182,0 @@\n-        mainFrame.setLayout(new BoxLayout(mainFrame.getContentPane(), BoxLayout.Y_AXIS));\n@@ -188,3 +196,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtnSingle) {\n-                System.out.println(\"Radio Button Group Go To Next Component through Tab Key failed\");\n-                throw new RuntimeException(\"Focus is not on Radio Button Single as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtnSingle) {\n+                System.out.println(\"Radio Button Group Go To \"\n+                                   + \"Next Component through Tab Key failed\");\n+                throw new RuntimeException(\"Focus is not on \"\n+                                           + \"Radio Button Single as Expected\");\n@@ -195,1 +205,2 @@\n-    \/\/ Non-Grouped Radio button as a single component when traversing through tab key\n+    \/\/ Non-Grouped Radio button as a single component when traversing through\n+    \/\/ tab key\n@@ -199,3 +210,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != btnEnd) {\n-                System.out.println(\"Non Grouped Radio Button Go To Next Component through Tab Key failed\");\n-                throw new RuntimeException(\"Focus is not on Button End as Expected\");\n+            if (focusManager.getFocusOwner() != btnEnd) {\n+                System.out.println(\"Non Grouped Radio Button Go To \"\n+                                   + \"Next Component through Tab Key failed\");\n+                throw new RuntimeException(\"Focus is not on Button End \"\n+                                            + \"as Expected\");\n@@ -206,1 +219,2 @@\n-    \/\/ Non-Grouped Radio button and Group Radio button as a single component when traversing through shift-tab key\n+    \/\/ Non-Grouped Radio button and Group Radio button as a single component\n+    \/\/ when traversing through shift-tab key\n@@ -212,3 +226,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtn1) {\n-                System.out.println(\"Radio button Group\/Non Grouped Radio Button SHIFT-Tab Key Test failed\");\n-                throw new RuntimeException(\"Focus is not on Radio Button A as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtn1) {\n+                System.out.println(\"Radio button Group\/Non Grouped \"\n+                                   + \"Radio Button SHIFT-Tab Key Test failed\");\n+                throw new RuntimeException(\"Focus is not on Radio Button A \"\n+                                           + \"as Expected\");\n@@ -224,3 +240,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtn3) {\n-                System.out.println(\"Radio button Group UP\/LEFT Arrow Key Move Focus Failed\");\n-                throw new RuntimeException(\"Focus is not on Radio Button C as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtn3) {\n+                System.out.println(\"Radio button Group UP\/LEFT Arrow Key \"\n+                                   + \"Move Focus Failed\");\n+                throw new RuntimeException(\"Focus is not on Radio Button C \"\n+                                           + \"as Expected\");\n@@ -235,3 +253,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtn1) {\n-                System.out.println(\"Radio button Group Left\/Up Arrow Key Move Focus Failed\");\n-                throw new RuntimeException(\"Focus is not on Radio Button A as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtn1) {\n+                System.out.println(\"Radio button Group Left\/Up Arrow Key \"\n+                                   + \"Move Focus Failed\");\n+                throw new RuntimeException(\"Focus is not on Radio Button A \"\n+                                           + \"as Expected\");\n@@ -246,3 +266,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtn2) {\n-                System.out.println(\"Radio button Group Circle Back To First Button Test\");\n-                throw new RuntimeException(\"Focus is not on Radio Button B as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtn2) {\n+                System.out.println(\"Radio button Group Circle Back To \"\n+                                   + \"First Button Test\");\n+                throw new RuntimeException(\"Focus is not on Radio Button B \"\n+                                           + \"as Expected\");\n@@ -256,3 +278,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != btnMiddle) {\n-                System.out.println(\"Separate Component added in button group layout\");\n-                throw new RuntimeException(\"Focus is not on Middle Button as Expected\");\n+            if (focusManager.getFocusOwner() != btnMiddle) {\n+                System.out.println(\"Separate Component added in\"\n+                                   + \" button group layout\");\n+                throw new RuntimeException(\"Focus is not on Middle Button\"\n+                                           + \" as Expected\");\n@@ -266,3 +290,5 @@\n-            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() != radioBtnSingle) {\n-                System.out.println(\"Separate Component added in button group layout\");\n-                throw new RuntimeException(\"Focus is not on Radio Button Single as Expected\");\n+            if (focusManager.getFocusOwner() != radioBtnSingle) {\n+                System.out.println(\"Separate Component added in\"\n+                                   + \" button group layout\");\n+                throw new RuntimeException(\"Focus is not on Radio Button Single\"\n+                                           + \" as Expected\");\n@@ -273,3 +299,3 @@\n-    private static boolean actRB1 = false;\n-    private static boolean actRB2 = false;\n-    private static boolean actRB3 = false;\n+    private static volatile boolean actRB1 = false;\n+    private static volatile boolean actRB2 = false;\n+    private static volatile boolean actRB3 = false;\n@@ -277,1 +303,2 @@\n-    \/\/ JDK-8226892: Verify that ActionListener is called when a RadioButton is selected using arrow key.\n+    \/\/ JDK-8226892: Verify that ActionListener is called when a RadioButton\n+    \/\/ is selected using arrow key\n@@ -288,3 +315,6 @@\n-        radioBtn1.addActionListener(actLrRB1);\n-        radioBtn2.addActionListener(actLrRB2);\n-        radioBtn3.addActionListener(actLrRB3);\n+        \/\/ Adding Action Listeners\n+        SwingUtilities.invokeAndWait(() -> {\n+            radioBtn1.addActionListener(actLrRB1);\n+            radioBtn2.addActionListener(actLrRB2);\n+            radioBtn3.addActionListener(actLrRB3);\n+        });\n@@ -296,1 +326,2 @@\n-        String failMessage = \"ActionListener not invoked when selected using arrow key.\";\n+        String failMessage = \"ActionListener not invoked when selected using \"\n+                             + \"arrow key.\";\n@@ -307,3 +338,6 @@\n-        radioBtn1.removeActionListener(actLrRB1);\n-        radioBtn2.removeActionListener(actLrRB2);\n-        radioBtn3.removeActionListener(actLrRB3);\n+        \/\/ Removing Action Listeners\n+        SwingUtilities.invokeAndWait(() -> {\n+            radioBtn1.removeActionListener(actLrRB1);\n+            radioBtn2.removeActionListener(actLrRB2);\n+            radioBtn3.removeActionListener(actLrRB3);\n+        });\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/8033699\/bug8033699.java","additions":86,"deletions":52,"binary":false,"changes":138,"status":"modified"}]}