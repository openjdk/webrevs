{"files":[{"patch":"@@ -410,0 +410,5 @@\n+    \/\/ Returns nameAndId string for exception message printing\n+    String nameAndId() {\n+        return nameAndId;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2663,0 +2663,4 @@\n+\n+            public String getLoaderNameID(ClassLoader loader) {\n+                return loader.nameAndId();\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -880,9 +880,0 @@\n-                \/*\n-                 * If the classloader has a name explicitly set then\n-                 *        <loader-name>@<id>\n-                 * If the classloader has no name then\n-                 *        <qualified-class-name>@<id>\n-                 *\/\n-                String nid = (ld.getName() != null)\n-                             ? ld.getName() + \"@\" + Integer.toHexString(System.identityHashCode(ld))\n-                             : Objects.toIdentityString(ld);\n@@ -890,1 +881,1 @@\n-                        \" referenced from a method is not visible from class loader: \" + nid);\n+                        \" referenced from a method is not visible from class loader: \" + JLA.getLoaderNameID(ld));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -567,0 +567,5 @@\n+    \/**\n+     * Returns '<loader-name>' @<id> if classloader has a name\n+     * explicitly set otherwise <qualified-class-name> @<id>\n+     *\/\n+    String getLoaderNameID(ClassLoader loader);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}