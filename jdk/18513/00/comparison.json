{"files":[{"patch":"@@ -232,3 +232,6 @@\n-      const char* disable_msg = err_msg(\"JVMCI compiler disabled \"\n-      \"after %d of %d upcalls had errors (Last error: \\\"%s\\\"). \"\n-      \"Use -Xlog:jit+compilation for more detail.\", err, total, error);\n+      \/\/ Using stringStream instead of err_msg to avoid truncation\n+      stringStream st;\n+      st.print(\"JVMCI compiler disabled \"\n+               \"after %d of %d upcalls had errors (Last error: \\\"%s\\\"). \"\n+               \"Use -Xlog:jit+compilation for more detail.\", err, total, error);\n+      const char* disable_msg = st.freeze();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1976,1 +1976,4 @@\n-    const char* failure_reason = os::strdup(err_msg(\"uncaught exception in %s [%s]\", function, pending_string), mtJVMCI);\n+    \/\/ Using stringStream instead of err_msg to avoid truncation\n+    stringStream st;\n+    st.print(\"uncaught exception in %s [%s]\", function, pending_string);\n+    const char* failure_reason = os::strdup(st.freeze(), mtJVMCI);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}