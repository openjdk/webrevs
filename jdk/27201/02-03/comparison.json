{"files":[{"patch":"@@ -3021,2 +3021,2 @@\n-    Symbol* inner_name_symbol = inner_name_index == 0 ? vmSymbols::unnamed_name() : cp->symbol_at(inner_name_index);\n-    verify_legal_class_modifiers(flags, inner_name_symbol, CHECK_0);\n+    Symbol* inner_name_symbol = inner_name_index == 0 ? nullptr : cp->symbol_at(inner_name_index);\n+    verify_legal_class_modifiers(flags, inner_name_symbol, inner_name_index == 0, CHECK_0);\n@@ -4278,1 +4278,1 @@\n-void ClassFileParser::verify_legal_class_modifiers(jint flags, Symbol* inner_name, TRAPS) const {\n+void ClassFileParser::verify_legal_class_modifiers(jint flags, Symbol* inner_name, bool is_anonymous_inner_class, TRAPS) const {\n@@ -4308,1 +4308,1 @@\n-    if (inner_name == nullptr) {\n+    if (inner_name == nullptr && !is_anonymous_inner_class) {\n@@ -4316,6 +4316,15 @@\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_ClassFormatError(),\n-        \"Illegal class modifiers in inner class %s of class %s: 0x%X\",\n-        inner_name->as_C_string(), _class_name->as_C_string(), flags\n-      );\n+      if (is_anonymous_inner_class) {\n+        Exceptions::fthrow(\n+          THREAD_AND_LOCATION,\n+          vmSymbols::java_lang_ClassFormatError(),\n+          \"Illegal class modifiers in anonymous inner class of class %s: 0x%X\",\n+          _class_name->as_C_string(), flags\n+        );\n+      } else {\n+        Exceptions::fthrow(\n+          THREAD_AND_LOCATION,\n+          vmSymbols::java_lang_ClassFormatError(),\n+          \"Illegal class modifiers in inner class %s of class %s: 0x%X\",\n+          inner_name->as_C_string(), _class_name->as_C_string(), flags\n+        );\n+      }\n@@ -5583,1 +5592,1 @@\n-  verify_legal_class_modifiers(flags, nullptr, CHECK);\n+  verify_legal_class_modifiers(flags, nullptr, false, CHECK);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -435,1 +435,2 @@\n-  void verify_legal_class_modifiers(jint flags, Symbol* inner_name, TRAPS) const;\n+  void verify_legal_class_modifiers(jint flags, Symbol* inner_name,\n+                                    bool is_anonymous_inner_class, TRAPS) const;\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -515,1 +515,0 @@\n-  template(unnamed_name,                              \"unnamed\")                                  \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    static String msg2 = \"Illegal class modifiers in inner class unnamed of class OuterTest2: 0x63F\";\n+    static String msg2 = \"Illegal class modifiers in anonymous inner class of class OuterTest2: 0x63F\";\n","filename":"test\/hotspot\/jtreg\/runtime\/InnerClassesAttr\/TestInnerClassAccessFlagErrorMessage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}