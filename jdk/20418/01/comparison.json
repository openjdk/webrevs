{"files":[{"patch":"@@ -233,2 +233,2 @@\n-static bool should_clear_soft_references(GCCause::Cause cause) {\n-  \/\/ Clear soft references if implied by the GC cause\n+static bool should_clear_all_soft_references(GCCause::Cause cause) {\n+  \/\/ Clear all soft references if implied by the GC cause\n@@ -262,1 +262,1 @@\n-  \/\/ Clear soft references if threads are stalled waiting for an old collection\n+  \/\/ Clear all soft references if threads are stalled waiting for an old collection\n@@ -267,1 +267,1 @@\n-  \/\/ Don't clear\n+  \/\/ Don't clear all soft references\n@@ -305,5 +305,9 @@\n-  \/\/ It is important that when soft references are cleared, we also pre-clean the young\n-  \/\/ generation, as we might otherwise throw premature OOM. Therefore, all causes that\n-  \/\/ trigger soft ref cleaning must also trigger pre-cleaning of young gen. If allocations\n-  \/\/ stalled when checking for soft ref cleaning, then since we hold the driver locker all\n-  \/\/ the way until we check for young gen pre-cleaning, we can be certain that we should\n+  \/\/ We clear all soft references as a last-ditch effort to collect memory\n+  \/\/ before throwing an OOM. Therefore it is important that when the GC policy\n+  \/\/ is to clear all soft references, that we also pre-clean the young\n+  \/\/ generation, as we might otherwise throw premature OOM.\n+  \/\/\n+  \/\/ Therefore, all causes that trigger all soft ref clearing must also trigger\n+  \/\/ pre-cleaning of young gen. If allocations stalled when checking for all\n+  \/\/ soft ref clearing, then since we hold the driver locker all the way until\n+  \/\/ we check for young gen pre-cleaning, we can be certain that we should\n@@ -311,1 +315,1 @@\n-  assert(!should_clear_soft_references(cause), \"Clearing soft references without pre-cleaning young gen\");\n+  assert(!should_clear_all_soft_references(cause), \"Clearing all soft references without pre-cleaning young gen\");\n@@ -398,0 +402,4 @@\n+\n+    \/\/ Set up soft reference policy\n+    const bool clear_all = should_clear_all_soft_references(request.cause());\n+    ZGeneration::old()->set_soft_reference_policy(clear_all);\n@@ -447,2 +455,3 @@\n-static void handle_alloc_stalling_for_old(bool cleared_soft_refs) {\n-  ZHeap::heap()->handle_alloc_stalling_for_old(cleared_soft_refs);\n+static void handle_alloc_stalling_for_old() {\n+  const bool cleared_all = ZGeneration::old()->uses_clear_all_soft_reference_policy();\n+  ZHeap::heap()->handle_alloc_stalling_for_old(cleared_all);\n@@ -451,2 +460,2 @@\n-void ZDriverMajor::handle_alloc_stalls(bool cleared_soft_refs) const {\n-  handle_alloc_stalling_for_old(cleared_soft_refs);\n+void ZDriverMajor::handle_alloc_stalls() const {\n+  handle_alloc_stalling_for_old();\n@@ -467,4 +476,0 @@\n-    \/\/ Set up soft reference policy\n-    const bool clear_soft_refs = should_clear_soft_references(request.cause());\n-    ZGeneration::old()->set_soft_reference_policy(clear_soft_refs);\n-\n@@ -480,1 +485,1 @@\n-    handle_alloc_stalls(clear_soft_refs);\n+    handle_alloc_stalls();\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-  void handle_alloc_stalls(bool cleared_soft_refs) const;\n+  void handle_alloc_stalls() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1289,0 +1289,4 @@\n+bool ZGenerationOld::uses_clear_all_soft_reference_policy() const {\n+  return _reference_processor.uses_clear_all_soft_reference_policy();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -312,0 +312,1 @@\n+  bool uses_clear_all_soft_reference_policy() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -89,2 +89,2 @@\n-inline void ZHeap::handle_alloc_stalling_for_old(bool cleared_soft_refs) {\n-  _page_allocator.handle_alloc_stalling_for_old(cleared_soft_refs);\n+inline void ZHeap::handle_alloc_stalling_for_old(bool cleared_all_soft_refs) {\n+  _page_allocator.handle_alloc_stalling_for_old(cleared_all_soft_refs);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -988,1 +988,1 @@\n-void ZPageAllocator::handle_alloc_stalling_for_old(bool cleared_soft_refs) {\n+void ZPageAllocator::handle_alloc_stalling_for_old(bool cleared_all_soft_refs) {\n@@ -990,1 +990,1 @@\n-  if (cleared_soft_refs) {\n+  if (cleared_all_soft_refs) {\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    _clear_all_soft_refs(false),\n+    _uses_clear_all_soft_reference_policy(false),\n@@ -124,1 +124,1 @@\n-void ZReferenceProcessor::set_soft_reference_policy(bool clear) {\n+void ZReferenceProcessor::set_soft_reference_policy(bool clear_all_soft_references) {\n@@ -128,1 +128,1 @@\n-  _clear_all_soft_refs = clear;\n+  _uses_clear_all_soft_reference_policy = clear_all_soft_references;\n@@ -130,1 +130,1 @@\n-  if (clear) {\n+  if (clear_all_soft_references) {\n@@ -139,0 +139,4 @@\n+bool ZReferenceProcessor::uses_clear_all_soft_reference_policy() const {\n+  return _uses_clear_all_soft_reference_policy;\n+}\n+\n@@ -443,1 +447,1 @@\n-  if (_clear_all_soft_refs) {\n+  if (_uses_clear_all_soft_reference_policy) {\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  bool                 _clear_all_soft_refs;\n+  bool                 _uses_clear_all_soft_reference_policy;\n@@ -72,1 +72,3 @@\n-  void set_soft_reference_policy(bool clear);\n+  void set_soft_reference_policy(bool clear_all_soft_references);\n+  bool uses_clear_all_soft_reference_policy() const;\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}