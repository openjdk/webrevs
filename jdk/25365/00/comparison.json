{"files":[{"patch":"@@ -243,1 +243,1 @@\n-    if (CDSConfig::is_dumping_final_static_archive() && ik->is_shared_unregistered_class()) {\n+    if (CDSConfig::is_dumping_final_static_archive() && ik->defined_by_other_loaders()) {\n","filename":"src\/hotspot\/share\/cds\/aotArtifactFinder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    assert(ik->shared_class_loader_type() != ClassLoader::OTHER, \"must have been set\");\n+    assert(!ik->defined_by_other_loaders(), \"hidden classes are archived only for builtin loaders\");\n","filename":"src\/hotspot\/share\/cds\/aotClassLinker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-  if (ik->is_shared_boot_class()) {\n+  if (ik->defined_by_boot_loader()) {\n@@ -385,1 +385,1 @@\n-  } else if (ik->is_shared_platform_class()) {\n+  } else if (ik->defined_by_platform_loader()) {\n@@ -389,1 +389,1 @@\n-  } else if (ik->is_shared_app_class()) {\n+  } else if (ik->defined_by_app_loader()) {\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -837,4 +837,0 @@\n-      if (CDSConfig::is_dumping_dynamic_archive()) {\n-        \/\/ For static dump, class loader type are already set.\n-        ik->assign_class_loader_type();\n-      }\n@@ -864,1 +860,1 @@\n-      } else if (ik->is_shared_boot_class()) {\n+      } else if (ik->defined_by_boot_loader()) {\n@@ -867,1 +863,1 @@\n-      } else if (ik->is_shared_platform_class()) {\n+      } else if (ik->defined_by_platform_loader()) {\n@@ -870,1 +866,1 @@\n-      } else if (ik->is_shared_app_class()) {\n+      } else if (ik->defined_by_app_loader()) {\n@@ -874,1 +870,1 @@\n-        assert(ik->is_shared_unregistered_class(), \"must be\");\n+        assert(ik->defined_by_other_loaders(), \"must be\");\n@@ -886,1 +882,1 @@\n-        if (ik->is_shared_boot_class()) {\n+        if (ik->defined_by_boot_loader()) {\n@@ -888,1 +884,1 @@\n-        } else if (ik->is_shared_platform_class()) {\n+        } else if (ik->defined_by_platform_loader()) {\n@@ -890,1 +886,1 @@\n-        } else if (ik->is_shared_app_class()) {\n+        } else if (ik->defined_by_app_loader()) {\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    assert(!ik->is_shared_unregistered_class(), \"unexpected archived package entry for an unregistered class\");\n+    assert(!ik->defined_by_other_loaders(), \"unexpected archived package entry for an unregistered class\");\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-  if (specified_supertype->is_shared_unregistered_class()) {\n+  if (specified_supertype->defined_by_other_loaders()) {\n@@ -585,1 +585,1 @@\n-  assert(k->is_shared_unregistered_class(), \"must be\");\n+  assert(k->defined_by_other_loaders(), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-      assert(k->is_shared_unregistered_class(), \"must be\");\n+      assert(k->defined_by_other_loaders(), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-      if (ik->is_shared_unregistered_class()) {\n+      if (ik->defined_by_other_loaders()) {\n","filename":"src\/hotspot\/share\/cds\/finalImageRecipes.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -806,1 +806,1 @@\n-      assert(InstanceKlass::cast(abk)->is_shared_boot_class(),\n+      assert(InstanceKlass::cast(abk)->defined_by_boot_loader(),\n@@ -1100,1 +1100,1 @@\n-    assert(k != nullptr && k->is_shared_boot_class(), \"sanity\");\n+    assert(k != nullptr && k->defined_by_boot_loader(), \"sanity\");\n@@ -1287,1 +1287,1 @@\n-  assert(k->is_shared_boot_class(), \"sanity\");\n+  assert(k->defined_by_boot_loader(), \"sanity\");\n@@ -1647,1 +1647,1 @@\n-  assert(k->is_shared_boot_class(), \"must be boot class\");\n+  assert(k->defined_by_boot_loader(), \"must be boot class\");\n@@ -1698,1 +1698,1 @@\n-  assert(k->is_shared_boot_class(), \"must be boot class\");\n+  assert(k->defined_by_boot_loader(), \"must be boot class\");\n@@ -1872,1 +1872,1 @@\n-    assert(InstanceKlass::cast(ik)->is_shared_boot_class(),\n+    assert(InstanceKlass::cast(ik)->defined_by_boot_loader(),\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -173,1 +173,0 @@\n-  lambda_ik->assign_class_loader_type();\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-  if (CDSConfig::is_dumping_dynamic_archive() && ik->is_shared_unregistered_class()) {\n+  if (CDSConfig::is_dumping_dynamic_archive() && ik->defined_by_other_loaders()) {\n@@ -1049,1 +1049,1 @@\n-    if (ik->is_shared_unregistered_class() && ik->class_loader() == nullptr) {\n+    if (ik->defined_by_other_loaders() && ik->class_loader() == nullptr) {\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5018,0 +5018,1 @@\n+  ik->set_class_loader_type();\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1198,1 +1198,0 @@\n-      ik->set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n@@ -1293,17 +1292,3 @@\n-  s2 classloader_type;\n-  if (HeapShared::is_lambda_form_klass(ik)) {\n-    classloader_type = ClassLoader::BOOT_LOADER;\n-  } else {\n-    oop loader = ik->class_loader();\n-\n-    if (loader == nullptr) {\n-      classloader_type = ClassLoader::BOOT_LOADER;\n-    } else if (SystemDictionary::is_platform_class_loader(loader)) {\n-      classloader_type = ClassLoader::PLATFORM_LOADER;\n-    } else if (SystemDictionary::is_system_class_loader(loader)) {\n-      classloader_type = ClassLoader::APP_LOADER;\n-    } else {\n-      \/\/ This class won't be archived, so no need to update its\n-      \/\/ classloader_type\/classpath_index.\n-      return;\n-    }\n+  if (ik->defined_by_other_loaders()) {\n+    \/\/ We don't archive hidden classes for non-builtin loaders.\n+    return;\n@@ -1311,1 +1296,0 @@\n-  ik->set_shared_class_loader_type(classloader_type);\n@@ -1320,1 +1304,1 @@\n-    if (classloader_type == ClassLoader::APP_LOADER) {\n+    if (ik->defined_by_app_loader()) {\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-  s2 classloader_type;\n@@ -76,1 +75,0 @@\n-    classloader_type = ClassLoader::APP_LOADER;\n@@ -79,1 +77,0 @@\n-    classloader_type = ClassLoader::PLATFORM_LOADER;\n@@ -83,1 +80,0 @@\n-    classloader_type = ClassLoader::BOOT_LOADER;\n@@ -94,1 +90,0 @@\n-  result->set_shared_class_loader_type(classloader_type);\n@@ -97,1 +92,1 @@\n-  if (CDSConfig::is_dumping_heap() && AllowArchivingWithJavaAgent && classloader_type == ClassLoader::BOOT_LOADER &&\n+  if (CDSConfig::is_dumping_heap() && AllowArchivingWithJavaAgent && result->defined_by_boot_loader() &&\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -101,1 +101,0 @@\n-        new_ik->assign_class_loader_type();\n","filename":"src\/hotspot\/share\/classfile\/klassFactory.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -926,1 +926,1 @@\n-  if (ik->is_shared_boot_class()) {\n+  if (ik->defined_by_boot_loader()) {\n@@ -930,1 +930,1 @@\n-  } else if (ik->is_shared_platform_class()) {\n+  } else if (ik->defined_by_platform_loader()) {\n@@ -934,1 +934,1 @@\n-  } else if (ik->is_shared_app_class()) {\n+  } else if (ik->defined_by_app_loader()) {\n@@ -964,1 +964,1 @@\n-  assert(!ik->is_shared_unregistered_class(), \"this function should be called for built-in classes only\");\n+  assert(!ik->defined_by_other_loaders(), \"this function should be called for built-in classes only\");\n@@ -1026,1 +1026,1 @@\n-  if (!super_type->is_shared_unregistered_class() && super_type->class_loader_data() != nullptr) {\n+  if (!super_type->defined_by_other_loaders() && super_type->class_loader_data() != nullptr) {\n@@ -1229,1 +1229,1 @@\n-      if (ik != nullptr && ik->is_shared_boot_class() && !ik->shared_loading_failed()) {\n+      if (ik != nullptr && ik->defined_by_boot_loader() && !ik->shared_loading_failed()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -106,2 +106,2 @@\n-    if ((SystemDictionary::is_system_class_loader(class_loader()) && ik->is_shared_app_class())  ||\n-        (SystemDictionary::is_platform_class_loader(class_loader()) && ik->is_shared_platform_class())) {\n+    if ((SystemDictionary::is_system_class_loader(class_loader()) && ik->defined_by_app_loader())  ||\n+        (SystemDictionary::is_platform_class_loader(class_loader()) && ik->defined_by_platform_loader())) {\n@@ -253,1 +253,1 @@\n-  if (CDSConfig::is_dumping_final_static_archive() && k->is_shared_unregistered_class()\n+  if (CDSConfig::is_dumping_final_static_archive() && k->defined_by_other_loaders()\n@@ -595,1 +595,1 @@\n-    guarantee(!k->is_shared_unregistered_class(),\n+    guarantee(!k->defined_by_other_loaders(),\n@@ -599,1 +599,1 @@\n-    guarantee(k->is_shared_unregistered_class(),\n+    guarantee(k->defined_by_other_loaders(),\n@@ -757,1 +757,1 @@\n-      assert(k->is_shared_unregistered_class(), \"must be\");\n+      assert(k->defined_by_other_loaders(), \"must be\");\n@@ -943,1 +943,1 @@\n-  if (klass->is_shared_boot_class()) {\n+  if (klass->defined_by_boot_loader()) {\n@@ -947,1 +947,1 @@\n-  if (klass->is_shared_platform_class() || klass->is_shared_app_class()) {\n+  if (klass->defined_by_platform_loader() || klass->defined_by_app_loader()) {\n@@ -990,1 +990,1 @@\n-  if (klass->is_shared_platform_class() || klass->is_shared_app_class()) {\n+  if (klass->defined_by_platform_loader() || klass->defined_by_app_loader()) {\n@@ -1158,1 +1158,1 @@\n-  if (ik->is_shared_boot_class()) {\n+  if (ik->defined_by_boot_loader()) {\n@@ -1160,1 +1160,1 @@\n-  } else if (ik->is_shared_platform_class()) {\n+  } else if (ik->defined_by_platform_loader()) {\n@@ -1162,1 +1162,1 @@\n-  } else if (ik->is_shared_app_class()) {\n+  } else if (ik->defined_by_app_loader()) {\n@@ -1164,1 +1164,1 @@\n-  } else if (ik->is_shared_unregistered_class()) {\n+  } else if (ik->defined_by_other_loaders()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-    assert(k->is_shared_boot_class(), \"must be\");\n+    assert(k->defined_by_boot_loader(), \"must be\");\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-    if (src_holder->is_shared_unregistered_class()) {\n+    if (src_holder->defined_by_other_loaders()) {\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -541,2 +541,1 @@\n-  if (!(pool_holder->is_shared_boot_class() || pool_holder->is_shared_platform_class() ||\n-        pool_holder->is_shared_app_class())) {\n+  if (pool_holder->defined_by_other_loaders()) {\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2737,1 +2737,1 @@\n-    if (is_shared_unregistered_class()) {\n+    if (defined_by_other_loaders()) {\n@@ -2845,11 +2845,0 @@\n-int InstanceKlass::shared_class_loader_type() const {\n-  if (is_shared_boot_class()) {\n-    return ClassLoader::BOOT_LOADER;\n-  } else if (is_shared_platform_class()) {\n-    return ClassLoader::PLATFORM_LOADER;\n-  } else if (is_shared_app_class()) {\n-    return ClassLoader::APP_LOADER;\n-  } else {\n-    return ClassLoader::OTHER;\n-  }\n-}\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -309,6 +309,6 @@\n-  \/\/ The three BUILTIN class loader types\n-  bool is_shared_boot_class() const { return _misc_flags.is_shared_boot_class(); }\n-  bool is_shared_platform_class() const { return _misc_flags.is_shared_platform_class(); }\n-  bool is_shared_app_class() const {  return _misc_flags.is_shared_app_class(); }\n-  \/\/ The UNREGISTERED class loader type\n-  bool is_shared_unregistered_class() const { return _misc_flags.is_shared_unregistered_class(); }\n+  \/\/ Quick checks for the loader that defined this class (without switching on this->class_loader())\n+  bool defined_by_boot_loader() const      { return _misc_flags.defined_by_boot_loader(); }\n+  bool defined_by_platform_loader() const  { return _misc_flags.defined_by_platform_loader(); }\n+  bool defined_by_app_loader() const       { return _misc_flags.defined_by_app_loader(); }\n+  bool defined_by_other_loaders() const    { return _misc_flags.defined_by_other_loaders(); }\n+  void set_class_loader_type()             { _misc_flags.set_class_loader_type(_class_loader_data); }\n@@ -323,6 +323,0 @@\n-#if INCLUDE_CDS\n-  int  shared_class_loader_type() const;\n-  void set_shared_class_loader_type(s2 loader_type) { _misc_flags.set_shared_class_loader_type(loader_type); }\n-  void assign_class_loader_type() { _misc_flags.assign_class_loader_type(_class_loader_data); }\n-#endif\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -40,17 +40,2 @@\n-#if INCLUDE_CDS\n-void InstanceKlassFlags::set_shared_class_loader_type(s2 loader_type) {\n-  switch (loader_type) {\n-  case ClassLoader::BOOT_LOADER:\n-    _flags |= _misc_is_shared_boot_class;\n-    break;\n-  case ClassLoader::PLATFORM_LOADER:\n-    _flags |= _misc_is_shared_platform_class;\n-    break;\n-  case ClassLoader::APP_LOADER:\n-    _flags |= _misc_is_shared_app_class;\n-    break;\n-  default:\n-    ShouldNotReachHere();\n-    break;\n-  }\n-}\n+void InstanceKlassFlags::set_class_loader_type(const ClassLoaderData* cld) {\n+  assert((_flags & builtin_loader_type_bits()) == 0, \"set only once\");\n@@ -58,1 +43,0 @@\n-void InstanceKlassFlags::assign_class_loader_type(const ClassLoaderData* cld) {\n@@ -60,1 +44,1 @@\n-    set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n+    _flags |= _misc_defined_by_boot_loader;\n@@ -63,1 +47,1 @@\n-    set_shared_class_loader_type(ClassLoader::PLATFORM_LOADER);\n+    _flags |= _misc_defined_by_platform_loader;\n@@ -66,1 +50,1 @@\n-    set_shared_class_loader_type(ClassLoader::APP_LOADER);\n+    _flags |= _misc_defined_by_app_loader;\n@@ -69,1 +53,0 @@\n-#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.cpp","additions":5,"deletions":22,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,3 +50,3 @@\n-    flag(is_shared_boot_class               , 1 << 7) \/* defining class loader is boot class loader *\/ \\\n-    flag(is_shared_platform_class           , 1 << 8) \/* defining class loader is platform class loader *\/ \\\n-    flag(is_shared_app_class                , 1 << 9) \/* defining class loader is app class loader *\/ \\\n+    flag(defined_by_boot_loader             , 1 << 7) \/* defining class loader is boot class loader *\/ \\\n+    flag(defined_by_platform_loader         , 1 << 8) \/* defining class loader is platform class loader *\/ \\\n+    flag(defined_by_app_loader              , 1 << 9) \/* defining class loader is app class loader *\/ \\\n@@ -79,2 +79,2 @@\n-  u2 shared_loader_type_bits() const {\n-    return _misc_is_shared_boot_class|_misc_is_shared_platform_class|_misc_is_shared_app_class;\n+  u2 builtin_loader_type_bits() const {\n+    return _misc_defined_by_boot_loader|_misc_defined_by_platform_loader|_misc_defined_by_app_loader;\n@@ -103,2 +103,2 @@\n-  bool is_shared_unregistered_class() const {\n-    return (_flags & shared_loader_type_bits()) == 0;\n+  bool defined_by_other_loaders() const {\n+    return (_flags & builtin_loader_type_bits()) == 0;\n@@ -107,1 +107,1 @@\n-  void set_shared_class_loader_type(s2 loader_type);\n+  void set_class_loader_type(const ClassLoaderData* cld);\n@@ -109,1 +109,0 @@\n-  void assign_class_loader_type(const ClassLoaderData* cld);\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.hpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -834,1 +834,1 @@\n-        assert(InstanceKlass::cast(this)->is_shared_unregistered_class(), \"sanity\");\n+        assert(InstanceKlass::cast(this)->defined_by_other_loaders(), \"sanity\");\n@@ -839,1 +839,1 @@\n-        assert(InstanceKlass::cast(k)->is_shared_unregistered_class(), \"sanity\");\n+        assert(InstanceKlass::cast(k)->defined_by_other_loaders(), \"sanity\");\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}