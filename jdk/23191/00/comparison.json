{"files":[{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2023, 2025, Red Hat, Inc. and\/or its affiliates.\n@@ -1548,0 +1548,6 @@\n+  if (ExecutingUnitTests) {\n+    \/\/ See TEST_VM_CRASH_SIGNAL gtest macro\n+    char tmp[64];\n+    fprintf(stderr, \"signaled: %s\", os::exception_name(sig, tmp, sizeof(tmp)));\n+  }\n+\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,0 +162,18 @@\n+#define TEST_VM_CRASH_SIGNAL(category, name, signame)               \\\n+  static void test_  ## category ## _ ## name ## _();               \\\n+                                                                    \\\n+  static void child_ ## category ## _ ## name ## _() {              \\\n+    ::testing::GTEST_FLAG(throw_on_failure) = true;                 \\\n+    test_ ## category ## _ ## name ## _();                          \\\n+    gtest_exit_from_child_vm(0);                                    \\\n+  }                                                                 \\\n+                                                                    \\\n+  TEST(category, CONCAT(name, _vm_assert)) {                        \\\n+    ASSERT_EXIT(child_ ## category ## _ ## name ## _(),             \\\n+                ::testing::ExitedWithCode(1),                       \\\n+                \"signaled: \" signame);                              \\\n+  }                                                                 \\\n+                                                                    \\\n+  void test_ ## category ## _ ## name ## _()\n+\n+\n","filename":"test\/hotspot\/gtest\/unittest.hpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}