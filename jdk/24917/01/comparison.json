{"files":[{"patch":"@@ -32,0 +32,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -306,1 +307,1 @@\n-      streamIndentor si(st, 16);\n+      StreamIndentor si(st, 16);\n","filename":"src\/hotspot\/os\/bsd\/memMapPrinter_macosx.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -142,1 +143,1 @@\n-      streamIndentor si(st, 16);\n+      StreamIndentor si(st, 16);\n","filename":"src\/hotspot\/os\/linux\/memMapPrinter_linux.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -203,1 +204,1 @@\n-      streamIndentor si(st, 16);\n+      StreamIndentor si(st, 16);\n","filename":"src\/hotspot\/os\/windows\/memMapPrinter_windows.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -240,2 +240,2 @@\n-    streamIndentor si(_st, current_depth() * 2);\n-    _st->indent().print_cr(\"%s\", cls->name()->as_C_string());\n+    StreamIndentor si(_st, current_depth() * 2);\n+    _st->print_cr(\"%s\", cls->name()->as_C_string());\n@@ -439,2 +439,2 @@\n-    streamIndentor si(str, indent * 2);\n-    str->indent().print(\"Selected method: \");\n+    StreamIndentor si(str, indent * 2);\n+    str->print(\"Selected method: \");\n@@ -452,2 +452,2 @@\n-    streamIndentor si(str, indent * 2);\n-    str->indent().print_cr(\"%s: %s\", _exception_name->as_C_string(), _exception_message->as_C_string());\n+    StreamIndentor si(str, indent * 2);\n+    str->print_cr(\"%s: %s\", _exception_name->as_C_string(), _exception_message->as_C_string());\n@@ -681,1 +681,1 @@\n-    streamIndentor si(&ls);\n+    StreamIndentor si(&ls, 2);\n@@ -683,1 +683,0 @@\n-      ls.indent();\n@@ -854,2 +853,2 @@\n-        streamIndentor si(&ls, 2);\n-        ls.indent().print(\"Looking for default methods for slot \");\n+        StreamIndentor si(&ls, 2);\n+        ls.print(\"Looking for default methods for slot \");\n","filename":"src\/hotspot\/share\/classfile\/defaultMethods.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -340,2 +340,2 @@\n-  str->indent().print_cr(\"bci: @%d\", _offset);\n-  str->indent().print_cr(\"flags: {%s }\",\n+  str->print_cr(\"bci: @%d\", _offset);\n+  str->print_cr(\"flags: {%s }\",\n@@ -343,1 +343,1 @@\n-  str->indent().print(\"locals: {\");\n+  str->print(\"locals: {\");\n@@ -352,1 +352,1 @@\n-  str->indent().print(\"stack: {\");\n+  str->print(\"stack: {\");\n","filename":"src\/hotspot\/share\/classfile\/stackMapFrame.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -146,2 +146,2 @@\n-  str->indent().print_cr(\"StackMapTable: frame_count = %d\", _frame_count);\n-  str->indent().print_cr(\"table = { \");\n+  str->print_cr(\"StackMapTable: frame_count = %d\", _frame_count);\n+  str->print_cr(\"table = {\");\n@@ -149,1 +149,1 @@\n-    streamIndentor si(str);\n+    StreamIndentor si(str, 2);\n","filename":"src\/hotspot\/share\/classfile\/stackMapTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -449,4 +449,4 @@\n-  streamIndentor si(ss);\n-  ss->indent().print_cr(\"Reason:\");\n-  streamIndentor si2(ss);\n-  ss->indent().print(\"%s\", \"\");\n+  StreamIndentor si(ss, 2);\n+  ss->print_cr(\"Reason:\");\n+\n+  StreamIndentor si2(ss, 2);\n@@ -510,1 +510,0 @@\n-    streamIndentor si(ss);\n@@ -521,3 +520,6 @@\n-    ss->indent().print_cr(\"Location:\");\n-    streamIndentor si2(ss);\n-    ss->indent().print_cr(\"%s.%s%s @%d: %s\",\n+\n+    StreamIndentor si(ss, 2);\n+    ss->print_cr(\"Location:\");\n+\n+    StreamIndentor si2(ss, 2);\n+    ss->print_cr(\"%s.%s%s @%d: %s\",\n@@ -530,1 +532,1 @@\n-  streamIndentor si(ss);\n+  StreamIndentor si(ss, 2);\n@@ -532,2 +534,2 @@\n-    ss->indent().print_cr(\"Current Frame:\");\n-    streamIndentor si2(ss);\n+    ss->print_cr(\"Current Frame:\");\n+    StreamIndentor si2(ss, 2);\n@@ -537,2 +539,2 @@\n-    ss->indent().print_cr(\"Stackmap Frame:\");\n-    streamIndentor si2(ss);\n+    ss->print_cr(\"Stackmap Frame:\");\n+    StreamIndentor si2(ss, 2);\n@@ -545,3 +547,3 @@\n-    streamIndentor si(ss);\n-    ss->indent().print_cr(\"Bytecode:\");\n-    streamIndentor si2(ss);\n+    StreamIndentor si(ss, 2);\n+    ss->print_cr(\"Bytecode:\");\n+    StreamIndentor si2(ss, 2);\n@@ -554,1 +556,2 @@\n-    streamIndentor si(ss);\n+    StreamIndentor si(ss, 2);\n+\n@@ -557,2 +560,2 @@\n-      ss->indent().print_cr(\"Exception Handler Table:\");\n-      streamIndentor si2(ss);\n+      ss->print_cr(\"Exception Handler Table:\");\n+      StreamIndentor si2(ss, 2);\n@@ -560,1 +563,1 @@\n-        ss->indent().print_cr(\"bci [%d, %d] => handler: %d\", table.start_pc(i),\n+        ss->print_cr(\"bci [%d, %d] => handler: %d\", table.start_pc(i),\n@@ -569,2 +572,2 @@\n-    streamIndentor si(ss);\n-    ss->indent().print_cr(\"Stackmap Table:\");\n+    StreamIndentor si(ss, 2);\n+    ss->print_cr(\"Stackmap Table:\");\n@@ -575,1 +578,1 @@\n-    streamIndentor si2(ss);\n+    StreamIndentor si2(ss, 2);\n@@ -579,1 +582,0 @@\n-      ss->indent();\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":26,"deletions":24,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-      streamIndentor si(st, 4);\n+      StreamIndentor si(st, 4);\n@@ -403,1 +403,1 @@\n-        streamIndentor si(st, 4);\n+        StreamIndentor si(st, 4);\n@@ -408,1 +408,1 @@\n-        streamIndentor si(st, 4);\n+        StreamIndentor si(st, 4);\n@@ -828,1 +828,0 @@\n-    StreamAutoIndentor sai(&ss);\n@@ -1003,2 +1002,1 @@\n-  StreamAutoIndentor sai(tty);\n-  streamIndentor si(tty, 4);\n+  StreamIndentor si(tty, 4);\n@@ -1024,2 +1022,1 @@\n-  StreamAutoIndentor sai(st);\n-  streamIndentor si(st, 4);\n+  StreamIndentor si(st, 4);\n@@ -1034,2 +1031,1 @@\n-  StreamAutoIndentor sai(st);\n-  streamIndentor si(st, 4);\n+  StreamIndentor si(st, 4);\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n@@ -311,1 +311,1 @@\n-    StreamAutoIndentor indentor(st, 1);\n+    StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2125,1 +2125,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n@@ -620,1 +620,1 @@\n-      StreamAutoIndentor indentor_numa(st, 1);\n+      StreamIndentor si2(st, 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    StreamAutoIndentor indentor(st, 1);\n+    StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parMarkBitMap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -707,1 +707,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psYoungGen.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -833,1 +833,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -448,1 +448,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    StreamAutoIndentor indentor(&st, 1);\n+    StreamIndentor si(&st, 1);\n@@ -172,1 +172,1 @@\n-    StreamAutoIndentor indentor(&ls, 1);\n+    StreamIndentor si(&ls, 1);\n@@ -188,1 +188,1 @@\n-    StreamAutoIndentor indentor(&ls, 1);\n+    StreamIndentor si(&ls, 1);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -595,1 +595,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/z\/zMappedCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n@@ -1174,1 +1174,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n@@ -2418,1 +2418,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n@@ -2451,1 +2451,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-    StreamAutoIndentor indentor(out, 1);\n+    StreamIndentor si(out, 1);\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -153,1 +153,0 @@\n-  streamIndentor sti(st);\n@@ -155,1 +154,2 @@\n-    st->cr_indent();\n+    StreamIndentor si(st, 2);\n+    st->cr();\n@@ -158,1 +158,1 @@\n-      streamIndentor sti2(st);\n+      StreamIndentor si2(st, 2);\n@@ -160,1 +160,1 @@\n-        st->cr_indent();\n+        st->cr();\n@@ -170,1 +170,1 @@\n-      st->cr_indent();\n+      st->cr();\n@@ -175,1 +175,1 @@\n-      st->cr_indent();\n+      st->cr();\n@@ -206,2 +206,2 @@\n-  streamIndentor sti(st);\n-  st->cr_indent();\n+  StreamIndentor si(st, 2);\n+  st->cr();\n@@ -216,1 +216,1 @@\n-    st->cr_indent();\n+    st->cr();\n@@ -222,1 +222,1 @@\n-    st->cr_indent();\n+    st->cr();\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceStatistics.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -146,2 +146,2 @@\n-      streamIndentor sti(_out, 6);\n-      _out->cr_indent();\n+      _out->cr();\n+      StreamIndentor sai(_out, 6);\n@@ -155,1 +155,1 @@\n-      _out->cr_indent();\n+      _out->cr();\n","filename":"src\/hotspot\/share\/memory\/metaspace\/printCLDMetaspaceInfoClosure.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  _out->cr_indent();\n+  _out->cr();\n","filename":"src\/hotspot\/share\/memory\/metaspace\/printMetaspaceInfoKlassClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-  StreamAutoIndentor indentor(st, 1);\n+  StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-  StreamAutoIndentor indentor(out, 1);\n+  StreamIndentor si(out, 1);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-#define DO(flag, shortname, text) _out->indent(); _out->print_cr(\"%10s: %s\", shortname, text);\n+#define DO(flag, shortname, text) _out->print_cr(\"%10s: %s\", shortname, text);\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  streamIndentor si(out, num_chars); \\\n+  StreamIndentor si(out, num_chars); \\\n@@ -54,1 +54,1 @@\n-  _scale(scale), _output(out), _auto_indentor(out) {}\n+  _scale(scale), _output(out) {}\n@@ -233,1 +233,1 @@\n-  streamIndentor si(out, indent);\n+  StreamIndentor si(out, indent);\n@@ -644,1 +644,1 @@\n-    streamIndentor si(out, indent);\n+    StreamIndentor si(out, indent);\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-  StreamAutoIndentor _auto_indentor;\n","filename":"src\/hotspot\/share\/nmt\/memReporter.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-        streamIndentor si(stream, 4);\n+        StreamIndentor si(stream, 4);\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,0 +164,6 @@\n+bool outputStream::set_autoindent(bool value) {\n+  const bool old = _autoindent;\n+  _autoindent = value;\n+  return old;\n+}\n+\n@@ -228,4 +234,0 @@\n-void outputStream::cr_indent() {\n-  cr(); indent();\n-}\n-\n@@ -280,6 +282,0 @@\n-bool outputStream::set_autoindent(bool value) {\n-  const bool old = _autoindent;\n-  _autoindent = value;\n-  return old;\n-}\n-\n@@ -303,1 +299,1 @@\n- * indent is applied to each line.  Ends with a CR.\n+ * Ends with a CR.\n@@ -310,1 +306,1 @@\n-        indent().print(\"%07\" PRIxPTR \":\", i);\n+        print(\"%07\" PRIxPTR \":\", i);\n@@ -312,1 +308,1 @@\n-        indent().print(PTR_FORMAT \":\", p2i((unsigned char*)data + i));\n+        print(PTR_FORMAT \":\", p2i((unsigned char*)data + i));\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+  friend class StreamIndentor;\n+\n@@ -90,0 +92,3 @@\n+   \/\/ Automatic indentation. Returns old autoindent state.\n+   bool set_autoindent(bool value);\n+\n@@ -107,8 +112,0 @@\n-   \/\/ Automatic indentation:\n-   \/\/ If autoindent mode is on, the following APIs will automatically indent\n-   \/\/ line starts depending on the current indentation level:\n-   \/\/ print(), print_cr(), print_raw(), print_raw_cr()\n-   \/\/ Other APIs are unaffected\n-   \/\/ Returns old autoindent state.\n-   bool set_autoindent(bool value);\n-\n@@ -138,1 +135,0 @@\n-   void cr_indent();\n@@ -178,11 +174,9 @@\n-class streamIndentor : public StackObj {\n-protected:\n-  outputStream* const _str;\n-  const int _amount;\n-  NONCOPYABLE(streamIndentor);\n-public:\n-  streamIndentor(outputStream* str, int amt = 2) : _str(str), _amount(amt) {\n-    _str->inc(_amount);\n-  }\n-  ~streamIndentor() { _str->dec(_amount); }\n-};\n+\/\/ outputStream indentation. When used, indentation is automatically applied\n+\/\/ when printing on the stream using the following APIs:\n+\/\/ print(), print_cr(), print_raw(), print_raw_cr()\n+class StreamIndentor {\n+ private:\n+  outputStream* const _stream;\n+  const int           _indentation;\n+  const bool          _old_autoindent;\n+  NONCOPYABLE(StreamIndentor);\n@@ -190,3 +184,0 @@\n-class StreamAutoIndentor : public streamIndentor {\n-  const bool _old;\n-  NONCOPYABLE(StreamAutoIndentor);\n@@ -194,3 +185,12 @@\n-  StreamAutoIndentor(outputStream* os, int indentation = 0) :\n-    streamIndentor(os, indentation), _old(os->set_autoindent(true)) {}\n-  ~StreamAutoIndentor() { _str->set_autoindent(_old); }\n+  StreamIndentor(outputStream* os, int indentation) :\n+    _stream(os),\n+    _indentation(indentation),\n+    _old_autoindent(_stream->set_autoindent(true)) {\n+\n+    _stream->inc(_indentation);\n+  }\n+\n+  ~StreamIndentor() {\n+    _stream->dec(_indentation);\n+    _stream->set_autoindent(_old_autoindent);\n+  }\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -1203,1 +1203,1 @@\n-      StreamAutoIndentor indentor(st, 1);\n+      StreamIndentor si(st, 1);\n@@ -1404,1 +1404,1 @@\n-      StreamAutoIndentor indentor(st, 1);\n+      StreamIndentor si(st, 1);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-static void test_autoindent(bool on) {\n+TEST_VM(ostream, streamIndentor) {\n@@ -108,2 +108,1 @@\n-  const bool prior = ss.set_autoindent(on);\n-  EXPECT_FALSE(prior);\n+\n@@ -111,1 +110,1 @@\n-    streamIndentor si(&ss, 5);\n+    StreamIndentor si(&ss, 5);\n@@ -117,1 +116,1 @@\n-      streamIndentor si(&ss, 5);\n+      StreamIndentor si(&ss, 5);\n@@ -129,22 +128,8 @@\n-  if (on) {\n-    EXPECT_STREQ(ss.base(),\n-        \"     ABCDEF\\n\"\n-        \"     0123\\n\"\n-        \"          4567\\n\"\n-        \"          89ABCDEXYZ\\n\"\n-        \"     100KB\\n\"\n-        \"end\"\n-    );\n-  } else {\n-    \/\/ no autoindent: calls should work as always without indentation\n-    EXPECT_STREQ(ss.base(),\n-        \"ABCDEF\\n\"\n-        \"0123\\n\"\n-        \"4567\\n\"\n-        \"89ABCDEXYZ\\n\"\n-        \"100KB\\n\"\n-        \"end\"\n-    );\n-  }\n-  bool prior2 = ss.set_autoindent(prior);\n-  EXPECT_EQ(prior2, on);\n+  EXPECT_STREQ(ss.base(),\n+      \"     ABCDEF\\n\"\n+      \"     0123\\n\"\n+      \"          4567\\n\"\n+      \"          89ABCDEXYZ\\n\"\n+      \"     100KB\\n\"\n+      \"end\"\n+  );\n@@ -153,3 +138,0 @@\n-TEST_VM(ostream, autoindent_on)  { test_autoindent(true);  }\n-TEST_VM(ostream, autoindent_off) { test_autoindent(false); }\n-\n","filename":"test\/hotspot\/gtest\/utilities\/test_ostream.cpp","additions":12,"deletions":30,"binary":false,"changes":42,"status":"modified"}]}