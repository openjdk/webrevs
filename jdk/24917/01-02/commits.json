[{"commit":{"message":"Merge branch 'master' into JDK-8355692_stream_refactor"},"files":[],"sha":"b71db0dd66532e983b385a44443b9e5370befbae"},{"commit":{"message":"Make sure indentation is unchanged in ArenaStats::print_on"},"files":[],"sha":"5c4bd9609c35135b5a0470fe8e3ec170196789d9"},{"commit":{"message":"Remove cr_indent()"},"files":[],"sha":"a0c122ca8391ee71d5c00d74402c0b5f47230e60"},{"commit":{"message":"Adapt gtest"},"files":[],"sha":"27aa37d0e86fe4a944a12a1fe748eb037352aa48"},{"commit":{"message":"Make outputStream::set_autoindent private"},"files":[],"sha":"835b4923b0ff2bf35eb1b0786b88e5bc0f5aa64b"},{"commit":{"message":"Rename to StreamIndentor si[level]"},"files":[],"sha":"efdd9ae06ea66104b8169a15e959e12fcd6e7e4f"},{"commit":{"message":"Combine streamIndentor and StreamAutoIndentor"},"files":[],"sha":"db5a49c4b14a5ad5d6ed57a823852af8d84a4435"},{"commit":{"message":"FIX: memReporter\n\nVerified with command: jcmd <lingering program> VM.native_memory"},"files":[],"sha":"39bfb1c8cd6b87c74adc58f9fe8b059f838774bf"},{"commit":{"message":"FIX: compilationMemoryStatistic.cpp\n\nVerified with command: java -XX:CompileCommand=memstat,\\*.\\*,print App.java"},"files":[],"sha":"388c8f5df3c07e4fc406744ef38e0db6d44a2ae6"},{"commit":{"message":"FIX: Trivial changes in compilationMemoryStatistic.cpp"},"files":[],"sha":"5bd6539bcb3b3dabedad948c0b75684fdd4d1011"},{"commit":{"message":"FIX: metaspaceStatistics.cpp\n\nVerified with command: jcmd <lingering program> VM.metaspace show-loaders show-classes by-chunktype"},"files":[],"sha":"6cb3d84c0a814151aec353693a70d0d83c4eda05"},{"commit":{"message":"FIX: printCLDMetaspaceInfoClosure.cpp\n\nVerified with command: jcmd <lingering program> VM.metaspace show-loaders show-classes"},"files":[],"sha":"b5b1f6a7a042d324ea563ca628daf7bc38bd124b"},{"commit":{"message":"FIX: memoryFileTracker.cpp\n\nThe streamIndentor had no effect since neither StreamAutoIndentor nor\nindent() was used.\n\nVerified with command: java -XX:+UseZGC -XX:NativeMemoryTracking=detail -XX:+PrintNMTStatistics --version\n\nBefore:\n\nMemory map of ZGC heap backing file\n\n[0x0000000000000000 - 0x0000000024000000] allocated 603979776 for Java Heap from\n[0x00000001079e16d0]ZPhysicalMemoryManager::commit(ZVirtualMemory const&, unsigned int)+0x1b4\n[0x00000001079d4398]ZPartition::prime(ZWorkers*, unsigned long)+0x27c\n[0x00000001079d574c]ZPageAllocator::prime_cache(ZWorkers*, unsigned long)+0xf4\n[0x0000000107997910]ZHeap::ZHeap()+0x18c\n\nAfter:\n\nMemory map of ZGC heap backing file\n\n[0x0000000000000000 - 0x0000000024000000] allocated 603979776 for Java Heap from\n    [0x00000001063c56d0]ZPhysicalMemoryManager::commit(ZVirtualMemory const&, unsigned int)+0x1b4\n    [0x00000001063b8398]ZPartition::prime(ZWorkers*, unsigned long)+0x27c\n    [0x00000001063b974c]ZPageAllocator::prime_cache(ZWorkers*, unsigned long)+0xf4\n    [0x000000010637b910]ZHeap::ZHeap()+0x18c"},"files":[],"sha":"cc9bf4068f5e810c6b9da4792bae9539df92853b"},{"commit":{"message":"FIX: Remove indent from outputStream::print_data()\n\nErrorContext::bytecode_details is the only caller that uses indentation\nin print_data(). The jvmci callers print on tty or a stringStream,\nwithout indentation."},"files":[],"sha":"961e933587c9474c040527823e68bdb77d3127f6"},{"commit":{"message":"FIX: classfile\/verifier.cpp\n\nVerified by manually inserting an invalid opcode into a classfile.\n\nReplaced an opcode with the 'cf' opcode, which is invalid. The opcodes\n'cb'-'fd' are unassigned and reserved for future use.\n\nCaused by: java.lang.VerifyError: Bad instruction: cf\nException Details:\n  Location:\n    MediumHarvestChurn.main([Ljava\/lang\/String;)V @56: fast_fgetfield\n  Reason:\n    Error exists in the bytecode\n  Bytecode:\n    0000000: 2a03 32b8 0007 b600 0d3c bb00 1159 b700\n    0000010: 134e 1b9a 0006 a700 6a2d 1064 b200 1468\n    0000020: bc08 b600 1a57 a7ff ec3a 0403 3605 1505\n    0000030: 1020 a200 2803 3606 cf06 b200 20a2 0017\n    0000040: 2d15 05b2 0020 6815 0660 b600 2357 8406\n    0000050: 01a7 ffe7 8405 01a7 ffd7 b800 2706 b200\n    0000060: 2c68 bc08 4dbb 0011 59b7 0013 4e01 4db8\n    0000070: 0027 8401 ffb2 002f 1233 b600 35a7 ff95\n    0000080: b1\n  Exception Handler Table:\n    bci [25, 38] => handler: 41\n  Stackmap Table:\n    append_frame(@18,Integer,Top,Object[#17])\n    same_frame(@25)\n    same_locals_1_stack_item_frame(@41,Object[#30])\n    append_frame(@46,Object[#30],Integer)\n    append_frame(@56,Integer)\n    chop_frame(@84,1)\n    chop_frame(@90,1)\n    chop_frame(@128,1)"},"files":[],"sha":"789fdaffde8861e2d0fa20288e89315cc86e6555"},{"commit":{"message":"FIX: StackMapTable\n\nVerified with command: java -Xlog:verification=debug:log.txt App.java"},"files":[],"sha":"4c19895bc68356ad52e1036f5535d670acfafddd"},{"commit":{"message":"FIX: defaultMethods\n\nVerified with command: java -Xlog:defaultmethods=debug:log.txt App.java"},"files":[],"sha":"bcd148e787807e6655688c7e86b453e34b9a17bd"},{"commit":{"message":"FIX: memMapPrinter\n\nVerified with command: jcmd <lingering program> System.map"},"files":[],"sha":"f19cb6730bb7a09f43cea18c1dbec2b6bf0eca34"}]