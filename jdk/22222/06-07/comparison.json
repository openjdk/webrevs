{"files":[{"patch":"@@ -240,0 +240,1 @@\n+    private boolean hasMultipleManifests = false;\n@@ -1255,0 +1256,5 @@\n+\n+            if(hasMultipleManifests) {\n+                warnings.add(String.format(rb.getString(\"multiple.manifest.warning.\")));\n+            }\n+\n@@ -1985,4 +1991,1 @@\n-                System.out.println();\n-                System.out.println(rb.getString(\"Warning.\"));\n-                System.out.println(rb.getString(\"multiple.manifest.warning.\"));\n-                System.out.println();\n+                hasMultipleManifests = true;\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/MultiManifest.jar","binary":true,"status":"deleted"},{"patch":"@@ -34,0 +34,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -35,0 +36,2 @@\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n@@ -37,0 +40,1 @@\n+import java.util.jar.JarFile;\n@@ -42,0 +46,2 @@\n+    private static final String META_INF = \"META-INF\/\";\n+\n@@ -44,3 +50,1 @@\n-        \/\/ copy jar file into writeable location\n-        Files.copy(Path.of(System.getProperty(\"test.src\"), \"MultiManifest.jar\"),\n-                   Path.of(\"MultiManifestTmp.jar\"));\n+        writeMultiManifestJar();\n@@ -52,1 +56,1 @@\n-        SecurityTools.jarsigner(\"-verbose -keystore ks -storepass changeit MultiManifestTmp.jar a\")\n+        SecurityTools.jarsigner(\"-verbose -keystore ks -storepass changeit MultiManifest.jar a\")\n@@ -57,1 +61,1 @@\n-        SecurityTools.jarsigner(\"-keystore ks -storepass changeit MultiManifestTmp.jar a\")\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit MultiManifest.jar a\")\n@@ -63,0 +67,28 @@\n+\n+    public static void writeMultiManifestJar() throws IOException {\n+        int locPosA, locPosB, cenPos;\n+        var out = new ByteArrayOutputStream(1024);\n+        try (var zos = new ZipOutputStream(out)) {\n+            zos.putNextEntry(new ZipEntry(JarFile.MANIFEST_NAME));\n+            zos.closeEntry();\n+            locPosA = out.size();\n+            zos.putNextEntry(new ZipEntry(META_INF + \"AANIFEST.MF\"));\n+            zos.closeEntry();\n+            locPosB = out.size();\n+            zos.putNextEntry(new ZipEntry(META_INF + \"BANIFEST.MF\"));\n+            zos.flush();\n+            cenPos = out.size();\n+        }\n+        var template = out.toByteArray();\n+        \/\/ ISO_8859_1 to keep the 8-bit value\n+        var s = new String(template, StandardCharsets.ISO_8859_1);\n+        \/\/ change META-INF\/AANIFEST.MF to META-INF\/MANIFEST.MF\n+        var loc = s.indexOf(\"AANIFEST.MF\", locPosA);\n+        var cen = s.indexOf(\"AANIFEST.MF\", cenPos);\n+        template[loc] = template[cen] = (byte) 'M';\n+        \/\/ change META-INF\/BANIFEST.MF to META-INF\/MANIFEST.MF\n+        loc = s.indexOf(\"BANIFEST.MF\", locPosB);\n+        cen = s.indexOf(\"BANIFEST.MF\", cenPos);\n+        template[loc] = template[cen] = (byte) 'M';\n+        Files.write(Path.of(\"MultiManifest.jar\"), template);\n+    }\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/MultiManifest.java","additions":37,"deletions":5,"binary":false,"changes":42,"status":"modified"}]}