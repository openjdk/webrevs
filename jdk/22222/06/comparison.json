{"files":[{"patch":"@@ -1967,0 +1967,24 @@\n+        JarFile asJar = null;\n+\n+        try {\n+            asJar = new JarFile(jarFile);\n+        } catch (IOException ioe) {\n+            \/\/ intentionally \"eat\" this, since we don't want to fail, if we\n+            \/\/ cannot perform the multiple manifest check to output the warning\n+        }\n+\n+        \/\/ only perform this check if the ZipFile is a JarFile\n+        if(asJar != null && verbose != null) {\n+            int manifestNum = JUZFA.getManifestNum(asJar);\n+            try {\n+                asJar.close();\n+            } catch (IOException ioe) {\n+                \/\/ intentionally \"eat\" this, since we don't want to fail\n+            }\n+            if(manifestNum > 1) {\n+                System.out.println();\n+                System.out.println(rb.getString(\"Warning.\"));\n+                System.out.println(rb.getString(\"multiple.manifest.warning.\"));\n+                System.out.println();\n+            }\n+        }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -160,0 +160,1 @@\n+        {\"multiple.manifest.warning.\", \"Duplicate manifest entries were detected in the jar file. JarSigner will operate on the first one found and others will be discarded.\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/MultiManifest.jar","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8341775\n+ * @summary Print warning that duplicate manifest files are removed by jarsigner\n+ *  after signing when -verbose is passed\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.io.FileOutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+\n+public class MultiManifest {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ copy jar file into writeable location\n+        Files.copy(Path.of(System.getProperty(\"test.src\"), \"MultiManifest.jar\"),\n+                   Path.of(\"MultiManifestTmp.jar\"));\n+\n+        SecurityTools.keytool(\"-keystore ks -storepass changeit \"\n+                + \"-keypass changeit -alias a -dname CN=a -keyalg rsa \"\n+                + \"-genkey -validity 300\");\n+\n+        SecurityTools.jarsigner(\"-verbose -keystore ks -storepass changeit MultiManifestTmp.jar a\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"Duplicate manifest entries were detected\")\n+                .shouldContain(\"discarded\");\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit MultiManifestTmp.jar a\")\n+                     .shouldHaveExitValue(0)\n+                     .shouldNotContain(\"Duplicate manifest entries were detected\")\n+                     .shouldNotContain(\"discarded\");\n+\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/MultiManifest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}