{"files":[{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4308606\n+ * @summary Tests whether the keys on the numeric keyboard work\n+ *            correctly under French input locale.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FrenchKeyboard\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextField;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class FrenchKeyboard extends Frame {\n+    static String INSTRUCTIONS = \"\"\"\n+           This test is intended for computers with French input method. If French\n+           input method can not be enabled or your keyboard does not have a numeric\n+           keypad press \"Pass\" to skip the test.\n+           Make sure that French input method is active and the NumLock is on.\n+           Click on the text field in the window called \"Check your keys\"\n+           and type once of each of the following keys on the numeric keypad:\n+           \/*-+1234567890\n+           If all the expected characters are displayed exactly once press \"Pass\".\n+           If any characters do not display or display multiple times press \"Fail\".\n+           \"\"\";\n+\n+    public FrenchKeyboard() {\n+        super(\"Check your keys\");\n+        setLayout(new BorderLayout());\n+        TextField tf = new TextField(30);\n+        add(tf, BorderLayout.CENTER);\n+        pack();\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"FrenchKeyboard Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testUI(FrenchKeyboard::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/FrenchKeyboard.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 4268912 4115514\n+ * summary Ensures that KeyEvent has right results for the following\n+ *          non-numpad keys: Home\/Eng\/PageUp\/PageDn\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HomeEndKeyTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextField;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.lang.reflect.InvocationTargetException;\n+\n+\n+public class HomeEndKeyTest extends Frame implements KeyListener {\n+   static String INSTRUCTIONS = \"\"\"\n+           Before starting this test make sure that system shortcuts and\n+           keybindings for the keys in the list below are disabled.\n+           For example pressing \"Print Screen\" key should not launch\n+           screen capturing software.\n+           Click on the text field in the window named \"Check keyCode values\"\n+           and one by one start typing the keys in the list below.\n+           (If you do not have some of the keys on your keyboard skip it\n+           and move to the next line).\n+           After clicking each key look at the log area - the printed name\n+           and key code should correspond to the ones for the key you typed.\n+           Note that on some systems the graphical symbol for the key\n+           can be printed instead of the symbolic name.\n+           If you do not encounter unexpected key codes for the keys you typed,\n+           press \"Pass\". Otherwise press \"Fail\".\n+\n+                    Key     Keycode\n+                    -------------------------\n+                    PrintScreen  154\n+                    ScrollLock   145\n+                    Pause         19\n+\n+                    Insert       155\n+                    Del          127\n+                    Home          36\n+                    End           35\n+                    PageUp        33\n+                    PageDown      34\n+\n+                    Left Arrow    37\n+                    Up Arrow      38\n+                    Right Arrow   39\n+                    Down Arrow    40\n+           \"\"\";\n+\n+   public HomeEndKeyTest() {\n+       super(\"Check KeyCode values\");\n+       setLayout(new BorderLayout());\n+       TextField tf = new TextField(30);\n+       tf.addKeyListener(this);\n+       add(tf, BorderLayout.CENTER);\n+       pack();\n+   }\n+\n+    public void keyPressed(KeyEvent evt) {\n+        printKey(evt);\n+    }\n+\n+    public void keyTyped(KeyEvent ignore) {\n+    }\n+\n+    public void keyReleased(KeyEvent evt) {\n+        printKey(evt);\n+    }\n+\n+    protected void printKey(KeyEvent evt) {\n+        String str;\n+        switch(evt.getID()) {\n+        case KeyEvent.KEY_PRESSED:\n+            str = \"KEY_PRESSED\";\n+            break;\n+        case KeyEvent.KEY_RELEASED:\n+            str = \"KEY_RELEASED\";\n+            break;\n+        default:\n+            str = \"unknown type\";\n+        }\n+\n+        str = str + \":name=\" + KeyEvent.getKeyText(evt.getKeyCode()) +\n+            \" keyCode=\" + evt.getKeyCode();\n+        PassFailJFrame.log(str);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"HomeEndKeyTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .logArea(20)\n+                .testUI(HomeEndKeyTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/HomeEndKeyTest.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4083691\n+ * @summary Ensures that KeyEvent has right results for the following\n+ *         keys \\*-+\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual NumpadTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextField;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.lang.reflect.InvocationTargetException;\n+\n+\n+public class NumpadTest extends Frame implements KeyListener {\n+   static String INSTRUCTIONS = \"\"\"\n+           This test requires a keyboard with a numeric keypad (numpad).\n+           If your keyboard does not have a numpad press \"Pass\" to skip testing.\n+           Make sure NumLock is on.\n+           Click on the text field in the window named \"Check KeyChar values\".\n+           Then, type the following keys\/characters in the TextField.\n+           using the numpad keys:\n+           \/*-+\n+\n+           Verify that the keyChar and keyCode is correct for each key pressed.\n+           Remember that the keyCode for the KEY_TYPED event should be zero.\n+           Also verify that the character you typed appears in the TextField.\n+\n+           Key    Name        keyChar    Keycode\n+           -------------------------------------\n+            \/     Divide       \/  47        111\n+            *     Multiply     *  42        106\n+            -     Subtract     -  45        109\n+            +     Add          +  43        107\n+\n+           Now repeat with the NumLock off.\n+\n+           If all keycodes are valid and expected characters appear\n+           in the text field press \"Pass\". Otherwise press \"Fail\".\n+           \"\"\";\n+\n+   public NumpadTest() {\n+       super(\"Check KeyChar values\");\n+       setLayout(new BorderLayout());\n+       TextField tf = new TextField(30);\n+       tf.addKeyListener(this);\n+       add(tf, BorderLayout.CENTER);\n+       pack();\n+   }\n+    public void keyPressed(KeyEvent evt) {\n+        printKey(evt);\n+    }\n+\n+    public void keyTyped(KeyEvent evt) {\n+        printKey(evt);\n+    }\n+\n+    public void keyReleased(KeyEvent evt) {\n+        printKey(evt);\n+    }\n+\n+    protected void printKey(KeyEvent evt) {\n+        switch (evt.getID()) {\n+          case KeyEvent.KEY_TYPED:\n+            break;\n+          case KeyEvent.KEY_PRESSED:\n+            break;\n+          case KeyEvent.KEY_RELEASED:\n+            break;\n+          default:\n+            return;\n+        }\n+\n+        if (evt.isActionKey()) {\n+            PassFailJFrame.log(\"params= \" + evt.paramString() + \"  KeyChar:  \" +\n+              (int) evt.getKeyChar() + \"   Action Key\");\n+        } else {\n+            PassFailJFrame.log(\"params= \" + evt.paramString() + \"  KeyChar:  \" +\n+              (int) evt.getKeyChar());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"NumpadTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .logArea(20)\n+                .testUI(NumpadTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/NumpadTest.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"}]}