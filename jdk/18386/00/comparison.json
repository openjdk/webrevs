{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-  @test 1.2 98\/08\/05\n@@ -29,1 +28,0 @@\n-  @author andrei.dmitriev: area=awt.mouse\n@@ -33,12 +31,13 @@\n-\/**\n- * ClickDuringKeypress.java\n- *\n- * summary:\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-public class ClickDuringKeypress implements MouseListener\n- {\n+import java.awt.AWTException;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowEvent;\n+\n+public class ClickDuringKeypress implements MouseListener {\n@@ -48,13 +47,24 @@\n-   volatile int lastClickCount = 0;\n-   volatile boolean clicked = false;\n-   volatile boolean ready = false;\n-\n-   Frame frame;\n-   Robot robot;\n-\n-   public void init()\n-    {\n-      \/\/Create instructions for the user here, as well as set up\n-      \/\/ the environment -- set the layout manager, add buttons,\n-      \/\/ etc.\n-\n+   static volatile int lastClickCount = 0;\n+   static volatile boolean clicked = false;\n+   static volatile boolean ready = false;\n+\n+   static volatile Frame frame;\n+   static volatile Robot robot;\n+   static volatile ClickDuringKeypress clicker;\n+\n+   public static void main(String[] args) throws Exception {\n+       clicker = new ClickDuringKeypress();\n+       try {\n+           EventQueue.invokeAndWait(ClickDuringKeypress::createUI);\n+           robot = new Robot();\n+           robot.mouseMove(200, 200);\n+           EventQueue.invokeAndWait(frame::show);\n+           doTest();\n+       } finally {\n+           if (frame != null) {\n+               EventQueue.invokeAndWait(frame::dispose);\n+           }\n+       }\n+   }\n+\n+   static void createUI() {\n@@ -62,1 +72,1 @@\n-      frame.addMouseListener(this);\n+      frame.addMouseListener(clicker);\n@@ -65,1 +75,1 @@\n-              synchronized(ClickDuringKeypress.this) {\n+              synchronized(clicker) {\n@@ -67,1 +77,1 @@\n-                  ClickDuringKeypress.this.notifyAll();\n+                  ClickDuringKeypress.clicker.notifyAll();\n@@ -72,0 +82,1 @@\n+    }\n@@ -73,27 +84,12 @@\n-      start();\n-\n-    }\/\/End  init()\n-\n-   public void start ()\n-    {\n-      try {\n-        robot = new Robot();\n-      } catch (AWTException e) {\n-        System.out.println(\"Could not create Robot.\");\n-        throw new RuntimeException(\"Couldn't create Robot.  Test fails\");\n-      }\n-\n-      robot.mouseMove(200, 200);\n-      frame.show();\n-\n-      synchronized(this) {\n-          try {\n-              if (!ready) {\n-                  wait(10000);\n-              }\n-          } catch (InterruptedException ex) {\n-          }\n-          if (!ready) {\n-              System.out.println(\"Not Activated. Test fails\");\n-              throw new RuntimeException(\"Not Activated. Test fails\");\n-          }\n+    static void doTest() throws Exception {\n+       synchronized(clicker) {\n+           try {\n+               if (!ready) {\n+                   clicker.wait(5000);\n+               }\n+           } catch (InterruptedException ex) {\n+           }\n+           if (!ready) {\n+               System.out.println(\"Not Activated. Test fails\");\n+               throw new RuntimeException(\"Not Activated. Test fails\");\n+           }\n@@ -101,12 +97,1 @@\n-\n-      doTest();\n-\n-      \/\/What would normally go into main() will probably go here.\n-      \/\/Use System.out.println for diagnostic messages that you want\n-      \/\/to read after the test is done.\n-      \/\/Use Sysout.println for messages you want the tester to read.\n-\n-    }\/\/ start()\n-\n-    \/\/ Mouse should be over the Frame by this point\n-    private void doTest() {\n+      \/\/ Mouse should be over the Frame by this point\n@@ -116,1 +101,1 @@\n-      robot.mousePress(InputEvent.BUTTON1_MASK);\n+      robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -118,1 +103,1 @@\n-      robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+      robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -125,1 +110,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -127,1 +112,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -131,1 +116,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -133,1 +118,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -159,6 +144,1 @@\n-\n-     public static void main(String[] args) {\n-         new ClickDuringKeypress().init();\n-     }\n-\n- }\/\/ class ClickDuringKeypress\n+}\n","filename":"test\/jdk\/java\/awt\/event\/MouseEvent\/ClickDuringKeypress\/ClickDuringKeypress.java","additions":62,"deletions":82,"binary":false,"changes":144,"status":"modified"}]}