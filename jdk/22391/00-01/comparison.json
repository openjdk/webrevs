{"files":[{"patch":"@@ -41,0 +41,2 @@\n+import java.util.List;\n+import java.util.stream.IntStream;\n@@ -68,0 +70,3 @@\n+    private static final MethodHandle ADAPTED_INT = CaptureStateUtil.adaptSystemCall(INT_DUMMY_HANDLE, ERRNO_NAME);\n+    private static final MethodHandle ADAPTED_LONG = CaptureStateUtil.adaptSystemCall(LONG_DUMMY_HANDLE, ERRNO_NAME);\n+\n@@ -70,2 +75,1 @@\n-        MethodHandle adapted = CaptureStateUtil.adaptSystemCall(INT_DUMMY_HANDLE, ERRNO_NAME);\n-        int r = (int) adapted.invoke(1, 0);\n+        int r = (int) ADAPTED_INT.invoke(1, 0);\n@@ -79,3 +83,1 @@\n-        MethodHandle adapted = CaptureStateUtil.adaptSystemCall(INT_DUMMY_HANDLE, ERRNO_NAME);\n-\n-        int r = (int) adapted.invoke(-1, EACCES);\n+        int r = (int) ADAPTED_INT.invoke(-1, EACCES);\n@@ -87,2 +89,1 @@\n-        MethodHandle adapted = CaptureStateUtil.adaptSystemCall(LONG_DUMMY_HANDLE, ERRNO_NAME);\n-        long r = (long) adapted.invoke(1, 0);\n+        long r = (long) ADAPTED_LONG.invoke(1, 0);\n@@ -94,3 +95,1 @@\n-        MethodHandle adapted = CaptureStateUtil.adaptSystemCall(LONG_DUMMY_HANDLE, ERRNO_NAME);\n-\n-        long r = (long) adapted.invoke(-1, EACCES);\n+        long r = (long) ADAPTED_LONG.invoke(-1, EACCES);\n@@ -123,0 +122,30 @@\n+    @Test\n+    void threadBarrage() {\n+        var virtualThreads = IntStream.range(0, 1 << 14)\n+                .mapToObj(_ -> Thread.ofVirtual().unstarted(TestCaptureStateUtil::work))\n+                .toList();\n+\n+        virtualThreads.forEach(Thread::start);\n+\n+        virtualThreads.forEach(t -> {\n+            try {\n+                t.join();\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(e);\n+            }\n+        });\n+    }\n+\n+    private static void work() {\n+        final int threadId = (int) Thread.currentThread().threadId() & Integer.MAX_VALUE;\n+        for (int i = 0; i < (1 << 14); i++) {\n+            long r = 0;\n+            try {\n+                r = (long) ADAPTED_LONG.invoke(-1L, threadId);\n+            } catch (Throwable t) {\n+                fail(t);\n+            }\n+            assertEquals(-threadId, r);\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestCaptureStateUtil.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"}]}