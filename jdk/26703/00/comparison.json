{"files":[{"patch":"@@ -737,0 +737,1 @@\n+        stream.flush();\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFImageWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2330,0 +2330,1 @@\n+        stream.flush();\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFImageWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8364768\n+ * @summary Tests that the standard plugins flush the stream after writing a complete image.\n+ *\/\n+\n+import static java.awt.Color.WHITE;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.ByteArrayOutputStream;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.stream.FileCacheImageOutputStream;\n+\n+public class FlushTest {\n+\n+    static final int SZ = 1000;\n+    static BufferedImage bi;\n+    static final String[] FORMATS = { \"jpg\", \"png\", \"gif\", \"tiff\", \"bmp\", \"wbmp\" } ;\n+    static boolean failed = false;\n+\n+    public static void main(String[] args) throws IOException {\n+\n+        bi = new BufferedImage(SZ, SZ, BufferedImage.TYPE_BYTE_BINARY);\n+        Graphics2D g2d = bi.createGraphics();\n+        g2d.setPaint(WHITE);\n+        g2d.fillRect(0, 0, SZ, SZ);\n+\n+        for (String f : FORMATS) {\n+            testWrite(f);\n+        }\n+        if (failed) {\n+           throw new RuntimeException(\"Stream sizes differ.\");\n+        }\n+    }\n+\n+    static void testWrite(String fmt) throws IOException {\n+        ImageWriter iw = ImageIO.getImageWritersBySuffix(fmt).next();\n+        System.out.println(iw);\n+        try {\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            FileCacheImageOutputStream fcs = new FileCacheImageOutputStream(baos, null);\n+            iw.setOutput(fcs);\n+            iw.write(bi);\n+            int sz0 = baos.size();\n+            fcs.close();\n+            int sz1 = baos.size();\n+            System.out.println(\"fmt=\" + fmt + \" sizes=\" + sz0 + \", \" + sz1);\n+            if (sz0 != sz1) {\n+               failed = true;\n+            }\n+        } finally {\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/FlushTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}