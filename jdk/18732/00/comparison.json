{"files":[{"patch":"@@ -254,3 +254,8 @@\n-    log_info(codecache)(\"ReservedCodeCache size \" SIZE_FORMAT \"K changed to total segments size NonNMethod \"\n-                        SIZE_FORMAT \"K NonProfiled \" SIZE_FORMAT \"K Profiled \" SIZE_FORMAT \"K = \" SIZE_FORMAT \"K\",\n-                        cache_size\/K, non_nmethod.size\/K, non_profiled.size\/K, profiled.size\/K, total\/K);\n+    log_info(codecache)(\"ReservedCodeCache size \" SIZE_FORMAT \"K changed to total segments size\"\n+                        \" Profiled \" SIZE_FORMAT \"K NonNMethod \" SIZE_FORMAT \"K\"\n+                        \" NonProfiled \" SIZE_FORMAT \"K\"\n+                        \" = \" SIZE_FORMAT \"K\",\n+                        cache_size\/K,\n+                        profiled.size\/K, non_nmethod.size\/K,\n+                        non_profiled.size\/K,\n+                        total\/K);\n@@ -261,3 +266,6 @@\n-  log_debug(codecache)(\"Initializing code heaps ReservedCodeCache \" SIZE_FORMAT \"K NonNMethod \" SIZE_FORMAT \"K\"\n-                       \" NonProfiled \" SIZE_FORMAT \"K Profiled \" SIZE_FORMAT \"K\",\n-                       cache_size\/K, non_nmethod.size\/K, non_profiled.size\/K, profiled.size\/K);\n+  log_debug(codecache)(\"Initializing code heaps ReservedCodeCache \" SIZE_FORMAT \"K\"\n+                       \" Profiled \" SIZE_FORMAT \"K NonNMethod \" SIZE_FORMAT \"K\"\n+                       \" NonProfiled \" SIZE_FORMAT \"K\",\n+                       cache_size\/K,\n+                       profiled.size\/K, non_nmethod.size\/K,\n+                       non_profiled.size\/K);\n@@ -267,1 +275,0 @@\n-  check_min_size(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size);\n@@ -271,0 +278,1 @@\n+  check_min_size(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size);\n@@ -306,1 +314,0 @@\n-  non_profiled.size += non_nmethod.size & alignment_mask(min_size);\n@@ -308,1 +315,2 @@\n-  non_nmethod.size = align_down(non_nmethod.size, min_size);\n+  non_profiled.size += non_nmethod.size & alignment_mask(min_size);\n+\n@@ -310,0 +318,1 @@\n+  non_nmethod.size = align_down(non_nmethod.size, min_size);\n@@ -312,1 +321,0 @@\n-  FLAG_SET_ERGO(NonNMethodCodeHeapSize, non_nmethod.size);\n@@ -314,0 +322,1 @@\n+  FLAG_SET_ERGO(NonNMethodCodeHeapSize, non_nmethod.size);\n@@ -508,1 +517,1 @@\n-  assert(heap != nullptr, \"heap is null\");\n+  assert(heap != nullptr, \"No heap for given code_blob_type %d, heap is null\", (int) code_blob_type);\n@@ -1568,1 +1577,8 @@\n-    tty->print_cr(\"CodeCache %s:  addr: \" INTPTR_FORMAT \", size: 0x%x\", event, p2i(cb), size);\n+    tty->print(\"CodeCache %s:  addr: \" INTPTR_FORMAT \", size: 0x%x\", event, p2i(cb), size);\n+    FOR_ALL_HEAPS(heap) {\n+      CodeHeap* curr_heap = *heap;\n+      if (curr_heap->contains(cb)) {\n+        tty->print(\" heap: %s\", curr_heap->name());\n+      }\n+    }\n+    tty->cr();\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":28,"deletions":12,"binary":false,"changes":40,"status":"modified"}]}