{"files":[{"patch":"@@ -596,7 +596,3 @@\n-        if (irVerificationPossible) {\n-            irVerificationPossible = Platform.isDebugBuild() && !Platform.isInt() && !Platform.isComp();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to not running a debug build (required for PrintIdeal\" +\n-                                   \"and PrintOptoAssembly), running with -Xint, or -Xcomp (use warm-up of 0 instead)\");\n-                return;\n-            }\n+        if (!irVerificationPossible) {\n+            return;\n+        }\n@@ -604,5 +600,1 @@\n-            irVerificationPossible = hasIRAnnotations();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to test \" + testClass + \" not specifying any @IR annotations\");\n-                return;\n-            }\n+        boolean debugTest, intTest, compTest, irTest, nonWhiteListedTest;\n@@ -610,6 +602,19 @@\n-            \/\/ No IR verification is done if additional non-whitelisted JTreg VM or Javaoptions flag is specified.\n-            irVerificationPossible = onlyWhitelistedJTregVMAndJavaOptsFlags();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to using non-whitelisted JTreg VM or Javaoptions flag(s).\"\n-                                   + System.lineSeparator());\n-            }\n+        debugTest = Platform.isDebugBuild();\n+        intTest = !Platform.isInt();\n+        compTest = !Platform.isComp();\n+        irTest = hasIRAnnotations();\n+        \/\/ No IR verification is done if additional non-whitelisted JTreg VM or Javaoptions flag is specified.\n+        List<String> nonWhiteListedFlags = anyNonWhitelistedJTregVMAndJavaOptsFlags();\n+        nonWhiteListedTest = nonWhiteListedFlags.isEmpty();\n+\n+        irVerificationPossible = debugTest && intTest && compTest && irTest && nonWhiteListedTest;\n+        if (irVerificationPossible) {\n+            return;\n+        }\n+\n+        System.out.println(\"IR verification disabled due to the following reason(s):\");\n+        if (!debugTest) {\n+            System.out.println(\"- Not running a debug build (required for PrintIdeal and PrintOptoAssembly)\");\n+        }\n+        if (!intTest) {\n+            System.out.println(\"- Running with -Xint (use warm-up of 0 instead)\");\n@@ -617,0 +622,12 @@\n+        if (!compTest) {\n+            System.out.println(\"- Running with -Xcomp (use warm-up of 0 instead)\");\n+        }\n+        if (!irTest) {\n+            System.out.println(\"- Test \" + testClass + \" not specifying any @IR annotations\");\n+        }\n+        if (!nonWhiteListedTest) {\n+            System.out.println(\"- Using non-whitelisted JTreg VM or Javaoptions flag(s):\");\n+            nonWhiteListedFlags.forEach((f) -> System.out.println(\"  - \" + f));\n+        }\n+\n+        System.out.println(\"\");\n@@ -744,1 +761,1 @@\n-    private boolean onlyWhitelistedJTregVMAndJavaOptsFlags() {\n+    private List<String> anyNonWhitelistedJTregVMAndJavaOptsFlags() {\n@@ -748,0 +765,1 @@\n+        List<String> nonWhiteListedFlags = new ArrayList();\n@@ -752,1 +770,1 @@\n-                return false;\n+                nonWhiteListedFlags.add(flag);\n@@ -755,1 +773,1 @@\n-        return true;\n+        return nonWhiteListedFlags;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":39,"deletions":21,"binary":false,"changes":60,"status":"modified"}]}