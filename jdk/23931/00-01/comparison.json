{"files":[{"patch":"@@ -596,0 +596,13 @@\n+        if (!irVerificationPossible) {\n+            return;\n+        }\n+\n+        boolean debugTest, irTest, nonWhiteListedTest;\n+\n+        debugTest = Platform.isDebugBuild() && !Platform.isInt() && !Platform.isComp();\n+        irTest = hasIRAnnotations();\n+        \/\/ No IR verification is done if additional non-whitelisted JTreg VM or Javaoptions flag is specified.\n+        List<String> nonWhiteListedFlags = anyNonWhitelistedJTregVMAndJavaOptsFlags();\n+        nonWhiteListedTest = nonWhiteListedFlags.isEmpty();\n+\n+        irVerificationPossible = debugTest && irTest && nonWhiteListedTest;\n@@ -597,6 +610,2 @@\n-            irVerificationPossible = Platform.isDebugBuild() && !Platform.isInt() && !Platform.isComp();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to not running a debug build (required for PrintIdeal\" +\n-                                   \"and PrintOptoAssembly), running with -Xint, or -Xcomp (use warm-up of 0 instead)\");\n-                return;\n-            }\n+            return;\n+        }\n@@ -604,5 +613,5 @@\n-            irVerificationPossible = hasIRAnnotations();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to test \" + testClass + \" not specifying any @IR annotations\");\n-                return;\n-            }\n+        System.out.println(\"IR verification disabled due to:\");\n+        if (!debugTest) {\n+            System.out.println(\"\\tnot running a debug build (required for PrintIdeal and PrintOptoAssembly), \" +\n+                               \"running with -Xint, or -Xcomp (use warm-up of 0 instead)\");\n+        }\n@@ -610,6 +619,2 @@\n-            \/\/ No IR verification is done if additional non-whitelisted JTreg VM or Javaoptions flag is specified.\n-            irVerificationPossible = onlyWhitelistedJTregVMAndJavaOptsFlags();\n-            if (!irVerificationPossible) {\n-                System.out.println(\"IR verification disabled due to using non-whitelisted JTreg VM or Javaoptions flag(s).\"\n-                                   + System.lineSeparator());\n-            }\n+        if (!irTest) {\n+            System.out.println(\"\\ttest \" + testClass + \" not specifying any @IR annotations\");\n@@ -617,0 +622,7 @@\n+\n+        if (!nonWhiteListedTest) {\n+            System.out.println(\"\\tusing non-whitelisted JTreg VM or Javaoptions flag(s),\");\n+            nonWhiteListedFlags.forEach((f) -> System.out.println(\"\\t\\t\" + f));\n+        }\n+\n+        System.out.println(\"\");\n@@ -744,1 +756,1 @@\n-    private boolean onlyWhitelistedJTregVMAndJavaOptsFlags() {\n+    private List<String> anyNonWhitelistedJTregVMAndJavaOptsFlags() {\n@@ -748,0 +760,1 @@\n+        List<String> nonWhiteListedFlags = new ArrayList();\n@@ -752,2 +765,1 @@\n-                System.out.println(\"Non-whitelisted JTreg VM or Javaoptions flag: \" + flag);\n-                return false;\n+                nonWhiteListedFlags.add(flag);\n@@ -756,1 +768,1 @@\n-        return true;\n+        return nonWhiteListedFlags;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":33,"deletions":21,"binary":false,"changes":54,"status":"modified"}]}