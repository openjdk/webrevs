{"files":[{"patch":"@@ -1046,1 +1046,3 @@\n-            checkLocal(methodDesc.parameterCount() + (isStatic ? -1 : 0));\n+            checkLocal(Util.parameterSlots(methodDesc) + (isStatic ? -1 : 0));\n+            Type type;\n+            Type[] locals = this.locals;\n@@ -1048,1 +1050,0 @@\n-                localsSize++;\n@@ -1050,1 +1051,1 @@\n-                    setLocal(0, Type.UNITIALIZED_THIS_TYPE);\n+                    type = Type.UNITIALIZED_THIS_TYPE;\n@@ -1053,1 +1054,1 @@\n-                    setLocalRawInternal(0, thisKlass);\n+                    type = thisKlass;\n@@ -1055,0 +1056,1 @@\n+                locals[localsSize++] = type;\n@@ -1058,10 +1060,15 @@\n-                if (!desc.isPrimitive()) {\n-                    setLocalRawInternal(localsSize++, Type.referenceType(desc));\n-                } else switch (desc.descriptorString().charAt(0)) {\n-                    case 'J' -> {\n-                        setLocalRawInternal(localsSize++, Type.LONG_TYPE);\n-                        setLocalRawInternal(localsSize++, Type.LONG2_TYPE);\n-                    }\n-                    case 'D' -> {\n-                        setLocalRawInternal(localsSize++, Type.DOUBLE_TYPE);\n-                        setLocalRawInternal(localsSize++, Type.DOUBLE2_TYPE);\n+                if (desc == CD_long) {\n+                    locals[localsSize    ] = Type.LONG_TYPE;\n+                    locals[localsSize + 1] = Type.LONG2_TYPE;\n+                    localsSize += 2;\n+                } else if (desc == CD_double) {\n+                    locals[localsSize    ] = Type.DOUBLE_TYPE;\n+                    locals[localsSize + 1] = Type.DOUBLE2_TYPE;\n+                    localsSize += 2;\n+                } else {\n+                    if (desc instanceof ReferenceClassDescImpl) {\n+                        type = Type.referenceType(desc);\n+                    } else if (desc == CD_float) {\n+                        type = Type.FLOAT_TYPE;\n+                    } else {\n+                        type = Type.INTEGER_TYPE;\n@@ -1069,5 +1076,1 @@\n-                    case 'I', 'Z', 'B', 'C', 'S' ->\n-                        setLocalRawInternal(localsSize++, Type.INTEGER_TYPE);\n-                    case 'F' ->\n-                        setLocalRawInternal(localsSize++, Type.FLOAT_TYPE);\n-                    default -> throw new AssertionError(\"Should not reach here\");\n+                    locals[localsSize++] = type;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"}]}