{"files":[{"patch":"@@ -2552,0 +2552,9 @@\n+  \/\/ If changed AndI\/AndL inputs, check RShift users for \"(x & mask) >> shift\" optimization opportunity\n+  if (use_op == Op_AndI || use_op == Op_AndL) {\n+    for (DUIterator_Fast i2max, i2 = use->fast_outs(i2max); i2 < i2max; i2++) {\n+      Node* u = use->fast_out(i2);\n+      if (u->Opcode() == Op_RShiftI || u->Opcode() == Op_RShiftL) {\n+        worklist.push(u);\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8361700\n+ * @summary An expression of the form \"(x & mask) >> shift\", where the mask\n+ *          is a constant, should be transformed to \"(x >> shift) & (mask >> shift)\"\n+ *          VerifyIterativeGVN checks that this optimization was applied\n+ * @run main\/othervm -Xcomp -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:CompileCommand=compileonly,compiler.c2.TestMaskAndRShiftReorder::test\n+ *      -XX:VerifyIterativeGVN=1110 compiler.c2.TestMaskAndRShiftReorder\n+ * @run main compiler.c2.TestMaskAndRShiftReorder\n+ *\n+ *\/\n+\n+package compiler.c2;\n+\n+public class TestMaskAndRShiftReorder {\n+    static long lFld;\n+\n+\n+    public static void main(String[] strArr) {\n+        test();\n+    }\n+\n+    static long test() {\n+        int x = 10;\n+        int y = -17;\n+        int iArr[] = new int[10];\n+        for (int i = 1; i < 7; i++) {\n+            for (int j = 1; j < 2; j++) {\n+                x <<= lFld;\n+            }\n+            y &= x;\n+            y >>= 1;\n+        }\n+        return iArr.length;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMaskAndRShiftReorder.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}