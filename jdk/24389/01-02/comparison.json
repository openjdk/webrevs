{"files":[{"patch":"@@ -2066,0 +2066,5 @@\n+void Assembler::serialize() {\n+  assert(VM_Version::supports_serialize(), \"\");\n+  emit_int24(0x0F, 0x01, 0xE8);\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1284,0 +1284,3 @@\n+  \/\/ Serialize instruction stream\n+  void serialize();\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -198,2 +198,4 @@\n-             \"3 = CLWB loop; 4 = single CPUID.\")                            \\\n-             range(-1, 4)                                                   \\\n+             \"3 = CLWB loop; 4 = single CPUID; 5 = single SERIALIZE. \"      \\\n+             \"Explicitly selected mechanism will fail at startup if \"       \\\n+             \"hardware does not support it.\")                               \\\n+             range(-1, 5)                                                   \\\n","filename":"src\/hotspot\/cpu\/x86\/globals_x86.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,0 +53,3 @@\n+    case 5:\n+      __ serialize();\n+      break;\n","filename":"src\/hotspot\/cpu\/x86\/icache_x86.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1092,0 +1092,1 @@\n+  assert(supports_cpuid(), \"Always present\");\n@@ -1095,1 +1096,1 @@\n-    \/\/ the cache. We could switch to CPUID (\"4\") going forward.\n+    \/\/ the cache. We could switch to CPUID\/SERIALIZE (\"4\"\/\"5\") going forward.\n@@ -1110,0 +1111,3 @@\n+    if ((X86ICacheSync == 5) && !supports_serialize()) {\n+      vm_exit_during_initialization(\"CPU does not support SERIALIZE, unable to use X86ICacheSync=5\");\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}