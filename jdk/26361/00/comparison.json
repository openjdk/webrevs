{"files":[{"patch":"@@ -1137,9 +1137,3 @@\n-        if (path.isEmpty()) {\n-            for (int i = 0; i < n; i++) {\n-                fs[i] = new File(ss[i]);\n-            }\n-        } else {\n-            for (int i = 0; i < n; i++) {\n-                fs[i] = new File(ss[i], this);\n-            }\n-        }\n+        boolean isEmpty = path.isEmpty();\n+        for (int i = 0; i < n; i++)\n+            fs[i] = isEmpty ? new File(ss[i]) : new File(ss[i], this);\n@@ -1178,0 +1172,1 @@\n+        boolean isEmpty = path.isEmpty();\n@@ -1180,1 +1175,1 @@\n-                files.add(new File(s, this));\n+                files.add(isEmpty ? new File(s) : new File(s, this));\n@@ -1211,0 +1206,1 @@\n+        boolean isEmpty = path.isEmpty();\n@@ -1212,1 +1208,1 @@\n-            File f = new File(s, this);\n+            File f = isEmpty ? new File(s) : new File(s, this);\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4842706 8024695 8361587\n+ * @bug 4842706 8024695 8361587 8362429\n@@ -31,0 +31,1 @@\n+import java.io.FileFilter;\n@@ -32,0 +33,1 @@\n+import java.io.FilenameFilter;\n@@ -34,0 +36,1 @@\n+import java.net.MalformedURLException;\n@@ -41,0 +44,1 @@\n+import java.util.function.Function;\n@@ -214,1 +218,9 @@\n-        String[] files = f.list();\n+        list(f.list());\n+    }\n+\n+    @Test\n+    public void listFilenameFilter() throws IOException {\n+        list(f.list((FilenameFilter)null));\n+    }\n+\n+    private void list(String[] files) throws IOException {\n@@ -224,1 +236,32 @@\n-        File child = new File(f.getAbsoluteFile(), \"child\");\n+        listFiles(x -> x.listFiles());\n+    }\n+\n+    @Test\n+    public void listFilesFileFilter() throws IOException {\n+        FileFilter ff = new FileFilter() {\n+            public boolean accept(File pathname) { return true; }\n+        };\n+        listFiles(x -> x.listFiles(ff));\n+    }\n+\n+    @Test\n+    public void listFilesNullFileFilter() throws IOException {\n+        listFiles(x -> x.listFiles((FileFilter)null));\n+    }\n+\n+    @Test\n+    public void listFilesFilenameFilter() throws IOException {\n+        FilenameFilter fnf = new FilenameFilter() {\n+            public boolean accept(File dir, String name) { return true; }\n+        };\n+        listFiles(x -> x.listFiles(fnf));\n+    }\n+\n+    @Test\n+    public void listFilesNullFilenameFilter() throws IOException {\n+        listFiles(x -> x.listFiles((FilenameFilter)null));\n+    }\n+\n+    private void listFiles(Function<File,File[]> func) throws IOException {\n+        String childName = \"child\" + System.nanoTime();\n+        File child = new File(f.getAbsoluteFile(), childName);\n@@ -228,1 +271,1 @@\n-        File[] files = f.listFiles();\n+        File[] files = func.apply(f);\n@@ -351,0 +394,5 @@\n+\n+    @Test\n+    public void toURL() throws MalformedURLException {\n+        assertEquals(f.toPath().toUri().toURL(), f.toURL());\n+    }\n","filename":"test\/jdk\/java\/io\/File\/EmptyPath.java","additions":52,"deletions":4,"binary":false,"changes":56,"status":"modified"}]}