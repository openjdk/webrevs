{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-class TenuredSpace;\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/oop.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"gc\/shared\/spaceDecorator.hpp\"\n@@ -319,1 +320,2 @@\n-  _the_space  = new TenuredSpace(_bts, MemRegion(bottom, end));\n+  _the_space  = new ContiguousSpace();\n+  _the_space->initialize(MemRegion(bottom, end), SpaceDecorator::Clear, SpaceDecorator::Mangle);\n@@ -498,1 +500,0 @@\n-  TenuredSpace* space = _the_space;\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-  TenuredSpace*       _the_space;       \/\/ Actual space holding objects\n+  ContiguousSpace*    _the_space;       \/\/ Actual space holding objects\n@@ -91,1 +91,1 @@\n-  TenuredSpace* space() const { return _the_space; }\n+  ContiguousSpace* space() const { return _the_space; }\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n@@ -53,1 +53,1 @@\n-                                                 bool is_tlab) {\n+                                      bool is_tlab) {\n@@ -55,1 +55,5 @@\n-  return _the_space->allocate(word_size);\n+  HeapWord* res = _the_space->allocate(word_size);\n+  if (res != nullptr) {\n+    _bts->update_for_block(res, res + word_size);\n+  }\n+  return res;\n@@ -59,1 +63,1 @@\n-                                                     bool is_tlab) {\n+                                          bool is_tlab) {\n@@ -61,1 +65,5 @@\n-  return _the_space->par_allocate(word_size);\n+  HeapWord* res = _the_space->par_allocate(word_size);\n+  if (res != nullptr) {\n+    _bts->update_for_block(res, res + word_size);\n+  }\n+  return res;\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  nonstatic_field(TenuredGeneration,                 _the_space,             TenuredSpace*)                 \\\n+  nonstatic_field(TenuredGeneration,                 _the_space,             ContiguousSpace*)              \\\n@@ -63,2 +63,0 @@\n-  nonstatic_field(TenuredSpace,                      _offsets,               SerialBlockOffsetTable*)       \\\n-                                                                                                            \\\n@@ -75,1 +73,0 @@\n-  declare_type(TenuredSpace,                 ContiguousSpace)                 \\\n","filename":"src\/hotspot\/share\/gc\/serial\/vmStructs_serial.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableBarrierSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n@@ -171,9 +170,0 @@\n-\n-#if INCLUDE_SERIALGC\n-TenuredSpace::TenuredSpace(SerialBlockOffsetTable* offsets,\n-                           MemRegion mr) :\n-  _offsets(offsets)\n-{\n-  initialize(mr, SpaceDecorator::Clear, SpaceDecorator::Mangle);\n-}\n-#endif \/\/ INCLUDE_SERIALGC\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -164,21 +164,0 @@\n-#if INCLUDE_SERIALGC\n-\n-\/\/ Class TenuredSpace is used by TenuredGeneration; it supports an efficient\n-\/\/ \"block_start\" operation via a SerialBlockOffsetTable.\n-\n-class TenuredSpace: public ContiguousSpace {\n-  friend class VMStructs;\n- protected:\n-  SerialBlockOffsetTable* _offsets;\n-\n- public:\n-  \/\/ Constructor\n-  TenuredSpace(SerialBlockOffsetTable* offsets,\n-               MemRegion mr);\n-\n-  \/\/ Add offset table update.\n-  inline HeapWord* allocate(size_t word_size) override;\n-  inline HeapWord* par_allocate(size_t word_size) override;\n-};\n-#endif \/\/INCLUDE_SERIALGC\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":21,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_SHARED_SPACE_INLINE_HPP\n-#define SHARE_GC_SHARED_SPACE_INLINE_HPP\n-\n-#include \"gc\/shared\/space.hpp\"\n-\n-#include \"gc\/shared\/collectedHeap.hpp\"\n-#include \"gc\/shared\/spaceDecorator.hpp\"\n-#include \"oops\/oop.inline.hpp\"\n-#include \"oops\/oopsHierarchy.hpp\"\n-#include \"runtime\/prefetch.inline.hpp\"\n-#include \"runtime\/safepoint.hpp\"\n-\n-#if INCLUDE_SERIALGC\n-inline HeapWord* TenuredSpace::allocate(size_t size) {\n-  HeapWord* res = ContiguousSpace::allocate(size);\n-  if (res != nullptr) {\n-    _offsets->update_for_block(res, res + size);\n-  }\n-  return res;\n-}\n-\n-inline HeapWord* TenuredSpace::par_allocate(size_t size) {\n-  HeapWord* res = ContiguousSpace::par_allocate(size);\n-  if (res != nullptr) {\n-    _offsets->update_for_block(res, res + size);\n-  }\n-  return res;\n-}\n-\n-#endif \/\/ INCLUDE_SERIALGC\n-\n-#endif \/\/ SHARE_GC_SHARED_SPACE_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/spaceDecorator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n+#include \"gc\/shared\/space.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import sun.jvm.hotspot.debugger.*;\n-\n-\/** No additional functionality for now *\/\n-\n-public class TenuredSpace extends ContiguousSpace {\n-  public TenuredSpace(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/TenuredSpace.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -59,1 +59,1 @@\n-                \"field TenuredGeneration _the_space TenuredSpace*\",\n+                \"field TenuredGeneration _the_space ContiguousSpace*\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbField.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}