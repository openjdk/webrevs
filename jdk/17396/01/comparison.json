{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,6 +47,0 @@\n-    \/*\n-     * Interface to be able to call retrieve() in plugin if\n-     * this variable is set.\n-     *\/\n-    private static URLJarFileCallBack callback = null;\n-\n@@ -60,4 +54,0 @@\n-    static JarFile getJarFile(URL url) throws IOException {\n-        return getJarFile(url, null);\n-    }\n-\n@@ -75,17 +65,0 @@\n-    \/*\n-     * Changed modifier from private to public in order to be able\n-     * to instantiate URLJarFile from sun.plugin package.\n-     *\/\n-    public URLJarFile(File file) throws IOException {\n-        this(file, null);\n-    }\n-\n-    \/*\n-     * Changed modifier from private to public in order to be able\n-     * to instantiate URLJarFile from sun.plugin package.\n-     *\/\n-    public URLJarFile(File file, URLJarFileCloseController closeController) throws IOException {\n-        super(file, true, ZipFile.OPEN_READ | ZipFile.OPEN_DELETE);\n-        this.closeController = closeController;\n-    }\n-\n@@ -191,24 +164,17 @@\n-        \/*\n-         * See if interface is set, then call retrieve function of the class\n-         * that implements URLJarFileCallBack interface (sun.plugin - to\n-         * handle the cache failure for JARJAR file.)\n-         *\/\n-        if (callback != null)\n-        {\n-            return callback.retrieve(url);\n-        }\n-\n-        else\n-        {\n-\n-            JarFile result = null;\n-            Runtime.Version version = \"runtime\".equals(url.getRef())\n-                    ? JarFile.runtimeVersion()\n-                    : JarFile.baseVersion();\n-\n-            \/* get the stream before asserting privileges *\/\n-            try (final InputStream in = url.openConnection().getInputStream()) {\n-                result = AccessController.doPrivileged(\n-                    new PrivilegedExceptionAction<>() {\n-                        public JarFile run() throws IOException {\n-                            Path tmpFile = Files.createTempFile(\"jar_cache\", null);\n+        JarFile result = null;\n+        Runtime.Version version = \"runtime\".equals(url.getRef())\n+                ? JarFile.runtimeVersion()\n+                : JarFile.baseVersion();\n+\n+        \/* get the stream before asserting privileges *\/\n+        try (final InputStream in = url.openConnection().getInputStream()) {\n+            result = AccessController.doPrivileged(\n+                new PrivilegedExceptionAction<>() {\n+                    public JarFile run() throws IOException {\n+                        Path tmpFile = Files.createTempFile(\"jar_cache\", null);\n+                        try {\n+                            Files.copy(in, tmpFile, StandardCopyOption.REPLACE_EXISTING);\n+                            JarFile jarFile = new URLJarFile(tmpFile.toFile(), closeController, version);\n+                            tmpFile.toFile().deleteOnExit();\n+                            return jarFile;\n+                        } catch (Throwable thr) {\n@@ -216,11 +182,3 @@\n-                                Files.copy(in, tmpFile, StandardCopyOption.REPLACE_EXISTING);\n-                                JarFile jarFile = new URLJarFile(tmpFile.toFile(), closeController, version);\n-                                tmpFile.toFile().deleteOnExit();\n-                                return jarFile;\n-                            } catch (Throwable thr) {\n-                                try {\n-                                    Files.delete(tmpFile);\n-                                } catch (IOException ioe) {\n-                                    thr.addSuppressed(ioe);\n-                                }\n-                                throw thr;\n+                                Files.delete(tmpFile);\n+                            } catch (IOException ioe) {\n+                                thr.addSuppressed(ioe);\n@@ -228,0 +186,1 @@\n+                            throw thr;\n@@ -229,6 +188,4 @@\n-                    });\n-            } catch (PrivilegedActionException pae) {\n-                throw (IOException) pae.getException();\n-            }\n-\n-            return result;\n+                    }\n+                });\n+        } catch (PrivilegedActionException pae) {\n+            throw (IOException) pae.getException();\n@@ -236,1 +193,0 @@\n-    }\n@@ -238,7 +194,1 @@\n-    \/*\n-     * Set the call back interface to call retrieve function in sun.plugin\n-     * package if plugin is running.\n-     *\/\n-    public static void setCallBack(URLJarFileCallBack cb)\n-    {\n-        callback = cb;\n+        return result;\n@@ -247,1 +197,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/URLJarFile.java","additions":27,"deletions":78,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.net.www.protocol.jar;\n-\n-import java.io.*;\n-import java.net.*;\n-import java.util.jar.*;\n-\n-\n-\/*\n- * This interface is used to call back to sun.plugin package.\n- *\/\n-public interface URLJarFileCallBack\n-{\n-        public JarFile retrieve (URL url) throws IOException;\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/URLJarFileCallBack.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"}]}