{"files":[{"patch":"@@ -594,0 +594,31 @@\n+\/\/ Helper function for compute_regular_layout()\n+static bool class_ends_with_oop(const InstanceKlass* ik) {\n+\n+  if (ik == nullptr ||\n+      ik->nonstatic_oop_map_count() == 0) {\n+    return false;\n+  }\n+\n+  fieldDescriptor fd;\n+  int offset = -1;\n+\n+  \/\/ Find last nonstatic field\n+  for (AllFieldStream fs(ik); !fs.done(); fs.next()) {\n+    if (!fs.access_flags().is_static()) {\n+      if (offset < fs.offset()) {\n+        offset = fs.offset();\n+        fd = fs.field_descriptor();\n+      }\n+    }\n+  }\n+\n+  assert(offset == -1 || offset > 0, \"Sanity\");\n+\n+  if (offset > 0) {\n+    const BasicType type = fd.field_type();\n+    return type == T_OBJECT || type == T_NARROWOOP; \/\/ super\n+  }\n+\n+  return false;\n+}\n+\n@@ -597,2 +628,8 @@\n-\/\/   - then oop fields are allocated, either in existing gaps or at the end of\n-\/\/     the layout\n+\/\/   - oop fields are allocated, either in existing gaps or at the end of\n+\/\/     the layout. We allocate oops in a single block to have a single oop map entry.\n+\/\/   - if the super class ended with an oop, we lead with oops. That will cause the\n+\/\/     trailing oop map entry of the super class and the oop map entry of this class\n+\/\/     to be folded into a single entry later. Correspondingly, if the super class\n+\/\/     ends with a primitive field, we gain nothing by leading with oops; therefore\n+\/\/     we let oop fields trail, thus giving future derived classes the chance to apply\n+\/\/     the same trick.\n@@ -611,2 +648,8 @@\n-  _layout->add(_root_group->primitive_fields());\n-  _layout->add(_root_group->oop_fields());\n+\n+  if (class_ends_with_oop(_super_klass)) {\n+    _layout->add(_root_group->oop_fields());\n+    _layout->add(_root_group->primitive_fields());\n+  } else {\n+    _layout->add(_root_group->primitive_fields());\n+    _layout->add(_root_group->oop_fields());\n+  }\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp","additions":47,"deletions":4,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -3766,1 +3766,1 @@\n-  st->print(BULLET\"non-static oop maps: \");\n+  st->print(BULLET\"non-static oop maps (%d entries): \", nonstatic_oop_map_count());\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}