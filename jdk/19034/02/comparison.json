{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -203,1 +203,1 @@\n-            case T_BOOLEAN -> unsignedHashCode(initialValue, (byte[]) array, fromIndex, length);\n+            case T_BOOLEAN -> signedHashCode(initialValue, (byte[]) array, fromIndex, length);\n@@ -214,1 +214,1 @@\n-    private static int unsignedHashCode(int result, byte[] a, int fromIndex, int length) {\n+    private static int signedHashCode(int result, byte[] a, int fromIndex, int length) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,1 +189,2 @@\n-Reads \\f[V]jar\\f[R] options and file names from a text file.\n+Reads \\f[V]jar\\f[R] options and file names from a text file as if they were supplied\n+on the command line.\n@@ -333,2 +334,2 @@\n-To shorten or simplify the \\f[V]jar\\f[R] command, you can specify\n-arguments in a separate text file and pass it to the \\f[V]jar\\f[R]\n+To shorten or simplify the \\f[V]jar\\f[R] command, you can provide an arg file that lists\n+the files to include in the JAR file and pass it to the \\f[V]jar\\f[R]\n@@ -340,0 +341,2 @@\n+.PP\n+If one or more entries in the arg file cannot be found then the jar command fails without creating the JAR file.\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}