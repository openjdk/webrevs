{"files":[{"patch":"@@ -1318,1 +1318,1 @@\n- * This avoids doing the graph surgery manually, but leave that to IGVN\n+ * This avoids doing the graph surgery manually, but leaves that to IGVN\n@@ -1342,1 +1342,1 @@\n-  if (is_dead()) { \/\/ dead node\n+  if (is_dead()) {\n@@ -1346,0 +1346,2 @@\n+  \/\/ We need to wait until IGVN because during parsing, usages might still be missing\n+  \/\/ and we would remove the call immediately.\n@@ -1347,0 +1349,2 @@\n+    \/\/ The result is not used. We remove the call by replacing it with a tuple, that\n+    \/\/ is later disintegrated by the projections.\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -916,0 +916,11 @@\n+\/* A pure function call, they are assumed not to be safepoints, not to read or write memory,\n+ * have no exception... They just take parameters, return a value without side effect. It is\n+ * always correct to create some, or remove them, if the result is not used.\n+ *\n+ * They still have control input to allow easy lowering into other kind of calls that require\n+ * a control, but this is more a technical than a moral constraint.\n+ *\n+ * Pure calls must have only control and data input and output: I\/O, Memory and so on must be top.\n+ * Nevertheless, pure calls can typically be expensive math operations so care must be taken\n+ * when letting the node float.\n+ *\/\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1520,2 +1520,3 @@\n-  if (!can_reshape) {\n-    return nullptr;\n+  Node* super = CallLeafPureNode::Ideal(phase, can_reshape);\n+  if (super != nullptr) {\n+    return super;\n@@ -1523,1 +1524,2 @@\n-  if (is_dead()) { \/\/ dead node\n+\n+  if (!can_reshape) {\n@@ -1529,4 +1531,0 @@\n-  if (is_unused()) {\n-    return make_tuple_of_input_state_and_top_return_values(igvn->C);\n-  }\n-\n@@ -1574,2 +1572,3 @@\n-  if (!can_reshape) {\n-    return nullptr;\n+  Node* super = CallLeafPureNode::Ideal(phase, can_reshape);\n+  if (super != nullptr) {\n+    return super;\n@@ -1577,1 +1576,2 @@\n-  if (is_dead()) { \/\/ dead node\n+\n+  if (!can_reshape) {\n@@ -1583,4 +1583,0 @@\n-  if (is_unused()) {\n-    return make_tuple_of_input_state_and_top_return_values(igvn->C);\n-  }\n-\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"}]}