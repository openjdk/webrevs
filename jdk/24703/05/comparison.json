{"files":[{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.event.ItemListener;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPasswordField;\n+\n+\/*\n+ * @test\n+ * @bug 4382819\n+ * @summary Tests the correctness of color used for the disabled passwordField.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main bug4382819\n+ *\/\n+\n+public class bug4382819 {\n+    static JCheckBox enabledCheckBox;\n+    static JPasswordField passwordField;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Clear the \"enabled\" checkbox.\n+            If the JPasswordField's foreground color changes to\n+            light gray press Pass. If it stays black press Fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4382819::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame mainFrame = new JFrame(\"bug4382819\");\n+        enabledCheckBox = new javax.swing.JCheckBox();\n+        enabledCheckBox.setSelected(true);\n+        enabledCheckBox.setText(\"enabled\");\n+        enabledCheckBox.setActionCommand(\"enabled\");\n+        mainFrame.add(enabledCheckBox);\n+\n+        passwordField = new javax.swing.JPasswordField();\n+        passwordField.setText(\"blahblahblah\");\n+        mainFrame.add(passwordField);\n+        SymItem lSymItem = new SymItem();\n+        enabledCheckBox.addItemListener(lSymItem);\n+\n+        mainFrame.setSize(300, 100);\n+        mainFrame.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));\n+        return mainFrame;\n+    }\n+\n+    static class SymItem implements ItemListener {\n+        public void itemStateChanged(java.awt.event.ItemEvent event) {\n+            Object object = event.getSource();\n+            if (object == enabledCheckBox) {\n+                passwordField.setEnabled(enabledCheckBox.isSelected());\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/bug4382819.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Panel;\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSeparator;\n+import javax.swing.JSplitPane;\n+import javax.swing.UIManager;\n+\n+\/*\n+ * @test\n+ * @bug 4820080 7175397\n+ * @summary RFE: Cannot Change the JSplitPane Divider Color while dragging\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4820080\n+ *\/\n+\n+public class bug4820080 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Drag the dividers of the splitpanes (both top and bottom). If the divider\n+            color is green while dragging then test passes, otherwise test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4820080::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4820080\");\n+        UIManager.put(\"SplitPaneDivider.draggingColor\", Color.GREEN);\n+\n+        Box box = new Box(BoxLayout.Y_AXIS);\n+        frame.add(box);\n+\n+        JPanel jleft = new JPanel();\n+        jleft.setBackground(Color.DARK_GRAY);\n+        jleft.setPreferredSize(new Dimension(100, 100));\n+        JPanel jright = new JPanel();\n+        jright.setBackground(Color.DARK_GRAY);\n+        jright.setPreferredSize(new Dimension(100, 100));\n+\n+        JSplitPane jsp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, jleft, jright);\n+        jsp.setContinuousLayout(false);\n+        box.add(jsp);\n+\n+        box.add(Box.createVerticalStrut(5));\n+        box.add(new JSeparator());\n+        box.add(Box.createVerticalStrut(5));\n+\n+        Panel left = new Panel();\n+        left.setBackground(Color.DARK_GRAY);\n+        left.setPreferredSize(new Dimension(100, 100));\n+        Panel right = new Panel();\n+        right.setBackground(Color.DARK_GRAY);\n+        right.setPreferredSize(new Dimension(100, 100));\n+\n+        JSplitPane sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, left, right);\n+        sp.setContinuousLayout(false);\n+        box.add(sp);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/bug4820080.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}