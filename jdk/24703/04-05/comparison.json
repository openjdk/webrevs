{"files":[{"patch":"@@ -24,1 +24,0 @@\n-import java.awt.Color;\n@@ -26,2 +25,2 @@\n-import java.awt.Point;\n-import java.awt.Robot;\n+import java.awt.event.ItemListener;\n+import javax.swing.JCheckBox;\n@@ -30,1 +29,0 @@\n-import javax.swing.SwingUtilities;\n@@ -35,1 +33,0 @@\n- * @key headful\n@@ -37,0 +34,2 @@\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -41,2 +40,1 @@\n-    static JFrame mainFrame;\n-    static volatile Point p;\n+    static JCheckBox enabledCheckBox;\n@@ -45,9 +43,5 @@\n-    public static void main(String[] args) throws Exception {\n-        try {\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(250);\n-            SwingUtilities.invokeAndWait(() -> createTestUI());\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-\n-            SwingUtilities.invokeAndWait(() -> p = passwordField.getLocationOnScreen());\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Clear the \"enabled\" checkbox.\n+            If the JPasswordField's foreground color changes to\n+            light gray press Pass. If it stays black press Fail.\n+            \"\"\";\n@@ -55,5 +49,8 @@\n-            Color c = robot.getPixelColor(p.x + 10, p.y + 5);\n-            robot.waitForIdle();\n-\n-            SwingUtilities.invokeAndWait(() -> passwordField.setEnabled(false));\n-            robot.waitForIdle();\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4382819::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -61,2 +58,7 @@\n-            Color c2 = robot.getPixelColor(p.x + 10, p.y + 5);\n-            robot.waitForIdle();\n+    public static JFrame createTestUI() {\n+        JFrame mainFrame = new JFrame(\"bug4382819\");\n+        enabledCheckBox = new javax.swing.JCheckBox();\n+        enabledCheckBox.setSelected(true);\n+        enabledCheckBox.setText(\"enabled\");\n+        enabledCheckBox.setActionCommand(\"enabled\");\n+        mainFrame.add(enabledCheckBox);\n@@ -64,12 +66,5 @@\n-            if (c.equals(c2)) {\n-                throw new RuntimeException(\"Color of disabled password field did not change.\\n\" +\n-                        \"Enabled: \" + c + \"Disabled: \" + c2);\n-            }\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (mainFrame != null) {\n-                    mainFrame.dispose();\n-                }\n-            });\n-        }\n-    }\n+        passwordField = new javax.swing.JPasswordField();\n+        passwordField.setText(\"blahblahblah\");\n+        mainFrame.add(passwordField);\n+        SymItem lSymItem = new SymItem();\n+        enabledCheckBox.addItemListener(lSymItem);\n@@ -77,3 +72,0 @@\n-    public static void createTestUI() {\n-        mainFrame = new JFrame(\"bug4382819\");\n-        passwordField = new JPasswordField();\n@@ -82,2 +74,2 @@\n-        passwordField.setText(\"blahblahblah\");\n-        mainFrame.add(passwordField);\n+        return mainFrame;\n+    }\n@@ -85,2 +77,7 @@\n-        mainFrame.setLocationRelativeTo(null);\n-        mainFrame.setVisible(true);\n+    static class SymItem implements ItemListener {\n+        public void itemStateChanged(java.awt.event.ItemEvent event) {\n+            Object object = event.getSource();\n+            if (object == enabledCheckBox) {\n+                passwordField.setEnabled(enabledCheckBox.isSelected());\n+            }\n+        }\n@@ -89,0 +86,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/bug4382819.java","additions":40,"deletions":42,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        jleft.setPreferredSize(new Dimension(100, 100));\n+        left.setPreferredSize(new Dimension(100, 100));\n@@ -86,1 +86,1 @@\n-        jleft.setPreferredSize(new Dimension(100, 100));\n+        right.setPreferredSize(new Dimension(100, 100));\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/bug4820080.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}