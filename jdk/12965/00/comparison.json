{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,3 +84,3 @@\n-                                                    jobject srcFDO,\n-                                                    jlong position, jlong count,\n-                                                    jobject dstFDO, jboolean append)\n+                                               jobject srcFDO,\n+                                               jlong position, jlong count,\n+                                               jobject dstFDO, jboolean append)\n","filename":"src\/java.base\/aix\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include <sys\/sendfile.h>\n@@ -28,0 +27,3 @@\n+#include <fcntl.h>\n+#include <sys\/sendfile.h>\n+#include <sys\/stat.h>\n@@ -47,3 +49,3 @@\n-                                              jobject srcFDO, jobject dstFDO,\n-                                              jlong position, jlong count,\n-                                              jboolean append)\n+                                                 jobject srcFDO, jobject dstFDO,\n+                                                 jlong position, jlong count,\n+                                                 jboolean append)\n@@ -51,2 +53,0 @@\n-    if (my_copy_file_range_func == NULL)\n-        return IOS_UNSUPPORTED;\n@@ -62,1 +62,26 @@\n-    jlong n = my_copy_file_range_func(srcFD, NULL, dstFD, &offset, len, 0);\n+    jlong n;\n+    if (my_copy_file_range_func != NULL) {\n+        n = my_copy_file_range_func(srcFD, NULL, dstFD, &offset, len, 0);\n+        if (n < 0) {\n+            switch (errno) {\n+                case EAGAIN:\n+                    return IOS_UNAVAILABLE;\n+                case EINTR:\n+                    return IOS_INTERRUPTED;\n+                case EBADF:\n+                case ENOSYS:\n+                case EXDEV:\n+                    return IOS_UNSUPPORTED_CASE;\n+                case EINVAL:\n+                    \/\/ ignore and try splice()\n+                    break;\n+                default:\n+                    JNU_ThrowIOExceptionWithLastError(env, \"Copy failed\");\n+                    return IOS_THROWN;\n+            }\n+        }\n+        if (n >= 0)\n+            return n;\n+    }\n+\n+    n = splice(srcFD, NULL, dstFD, &offset, len, 0);\n@@ -64,9 +89,8 @@\n-        if (errno == EAGAIN)\n-            return IOS_UNAVAILABLE;\n-        if (errno == ENOSYS)\n-            return IOS_UNSUPPORTED_CASE;\n-        if ((errno == EBADF || errno == EINVAL || errno == EXDEV) &&\n-            ((ssize_t)count >= 0))\n-            return IOS_UNSUPPORTED_CASE;\n-        if (errno == EINTR) {\n-            return IOS_INTERRUPTED;\n+        switch (errno) {\n+            case EAGAIN:\n+                return IOS_UNAVAILABLE;\n+            case EINVAL:\n+                return IOS_UNSUPPORTED_CASE;\n+            default:\n+                JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n+                return IOS_THROWN;\n@@ -74,2 +98,0 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n-        return IOS_THROWN;\n@@ -77,1 +99,4 @@\n-    return n;\n+    if (n >= 0)\n+        return n;\n+\n+    return IOS_UNSUPPORTED_CASE;\n@@ -82,3 +107,3 @@\n-                                            jobject srcFDO,\n-                                            jlong position, jlong count,\n-                                            jobject dstFDO, jboolean append)\n+                                               jobject srcFDO,\n+                                               jlong position, jlong count,\n+                                               jobject dstFDO, jboolean append)\n","filename":"src\/java.base\/linux\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":48,"deletions":23,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import java.nio.channels.Pipe.SourceChannel;\n@@ -842,0 +843,13 @@\n+    private long transferFromDirectly(SourceChannelImpl src,\n+                                      long position, long count)\n+        throws IOException\n+    {\n+        if (transferFromNotSupported)\n+            return IOStatus.UNSUPPORTED;\n+        FileDescriptor srcFD = src.getFD();\n+        if (srcFD == null)\n+            return IOStatus.UNSUPPORTED_CASE;\n+\n+        return transferFromDirectlyInternal(srcFD, position, count);\n+    }\n+\n@@ -949,0 +963,4 @@\n+        } else if (src instanceof SourceChannelImpl sci) {\n+            long n;\n+            if ((n = transferFromDirectly(sci, position, count)) >= 0)\n+                return n;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-                                      jlong address, jint len)\n+                                         jlong address, jint len)\n@@ -76,1 +76,1 @@\n-                                       jlong address, jint len)\n+                                          jlong address, jint len)\n@@ -125,1 +125,1 @@\n-                            jlong address, jint len, jlong offset)\n+                                          jlong address, jint len, jlong offset)\n@@ -263,1 +263,1 @@\n-                            jlong address, jint len, jlong offset)\n+                                           jlong address, jint len, jlong offset)\n@@ -387,2 +387,2 @@\n-                                      jboolean block, jlong pos, jlong size,\n-                                      jboolean shared)\n+                                         jboolean block, jlong pos, jlong size,\n+                                         jboolean shared)\n@@ -433,1 +433,1 @@\n-                                        jobject fdo, jlong pos, jlong size)\n+                                            jobject fdo, jlong pos, jlong size)\n@@ -603,2 +603,2 @@\n-                                            jlong position, jlong count,\n-                                            jobject dstFD, jboolean append)\n+                                               jlong position, jlong count,\n+                                               jobject dstFD, jboolean append)\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}