{"files":[{"patch":"@@ -83,5 +83,7 @@\n- * <p> Unless otherwise noted, {@linkplain java.nio.file##links symbolic links}\n- * are automatically redirected to the <i>target<\/i> of the link, whether they\n- * are provided by a pathname string or via a {@code File} object.  Methods\n- * which only operate on the abstract pathname do not access the file system\n- * and thus do not resolve symbolic links.\n+ * <p> Many operating systems and file systems have support for\n+ * {@linkplain java.nio.file##links symbolic links}.\n+ * A symbolic link is a special file that serves as a reference to another file.\n+ * Unless otherwise specified, symbolic links are transparent to applications\n+ * and operations on files that are symbolic links are automatically redirected\n+ * to the target of the link.  Methods that only operate on the abstract pathnam\n+ * do not access the file system and thus do not resolve symbolic links.\n@@ -1945,5 +1947,3 @@\n-     * Microsoft Windows systems it is not.\n-     *\n-     * @apiNote This method only compares the abstract pathnames;\n-     *          it does not access the file system and the file is not required\n-     *          to exist.\n+     * Microsoft Windows systems it is not.  This method only compares the\n+     * abstract pathnames; it does not access the file system and the file is\n+     * not required to exist.\n@@ -1973,5 +1973,3 @@\n-     * on Microsoft Windows systems it is not.\n-     *\n-     * @apiNote This method only tests whether the abstract pathnames are equal;\n-     *          it does not access the file system and the file is not required\n-     *          to exist.\n+     * on Microsoft Windows systems it is not.  This method only tests whether\n+     * the abstract pathnames are equal; it does not access the file system and\n+     * the file is not required to exist.\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}