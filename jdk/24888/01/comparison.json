{"files":[{"patch":"@@ -62,8 +62,0 @@\n-                        \/\/ 50% chance of creating garbage\n-                        array[replaceIndex] = array[replaceIndex].max(array[deriveIndex]);\n-                        break;\n-                    case 1:\n-                        \/\/ 50% chance of creating garbage\n-                        array[replaceIndex] = array[replaceIndex].min(array[deriveIndex]);\n-                        break;\n-                    case 2:\n@@ -74,1 +66,1 @@\n-                    case 3:\n+                    case 1:\n@@ -78,0 +70,3 @@\n+                    case 2,3:\n+                        \/\/ do nothing, let all objects in the array age to increase pressure on old generation\n+                        break;\n@@ -109,0 +104,12 @@\n+\n+        testOld(\"-Xlog:gc\",\n+                \"-Xms96m\",\n+                \"-Xmx96m\",\n+                \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:+UnlockExperimentalVMOptions\",\n+                \"-XX:+UseShenandoahGC\",\n+                \"-XX:ShenandoahGCMode=generational\",\n+                \"-XX:ShenandoahGuaranteedYoungGCInterval=0\",\n+                \"-XX:ShenandoahGuaranteedOldGCInterval=0\",\n+                \"-XX:+UseCompactObjectHeaders\"\n+        );\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/generational\/TestOldGrowthTriggers.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}