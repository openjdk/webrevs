{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -402,2 +402,5 @@\n-  ptrIDebugSymbols->SetImagePath(imagePath);\n-  ptrIDebugSymbols->SetSymbolPath(symbolPath);\n+  COM_VERIFY_OK_(ptrIDebugSymbols->SetImagePath(imagePath),\n+                 \"Windbg Error: SetImagePath failed!\", false);\n+  COM_VERIFY_OK_(ptrIDebugSymbols->SetSymbolPath(symbolPath),\n+                 \"Windbg Error: SetSymbolPath failed!\", false);\n+\n@@ -832,0 +835,2 @@\n+#define SYMBOL_BUFSIZE 512\n+\n@@ -855,0 +860,13 @@\n+\n+  \/\/ See JDK-8311993: WinDbg intermittently returns offset of \"module!class::`vftable'\" symbol\n+  \/\/ when requested for decorated \"class\" or \"class*\" (i.e. \"??_7class@@6B@\"\/\"??_7class*@@6B@\").\n+  \/\/ As a workaround check if returned symbol contains requested symbol.\n+  ULONG64 disp = 0L;\n+  char buf[SYMBOL_BUFSIZE];\n+  memset(buf, 0, sizeof(buf));\n+  if (ptrIDebugSymbols->GetNameByOffset(offset, buf, sizeof(buf), 0, &disp) ==  S_OK) {\n+    if (strstr(buf, name) == nullptr) {\n+      return (jlong)0;\n+    }\n+  }\n+\n@@ -858,1 +876,0 @@\n-#define SYMBOL_BUFSIZE 512\n","filename":"src\/jdk.hotspot.agent\/windows\/native\/libsaproc\/sawindbg.cpp","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}