{"files":[{"patch":"@@ -144,0 +144,29 @@\n+        \/\/ Inputs where Math.sin and StrictMath.sin differ for at least\n+        \/\/ one Math.sin implementation.\n+        double [][] testCases = {\n+            {0x1.00000006eeeefp-12,  0x1.ffffffb888889p-13},\n+            {0x1.00000006eeefp-12,   0x1.ffffffb88888bp-13},\n+            {0x1.00000006eeef1p-12,  0x1.ffffffb88888dp-13},\n+            {0x1.000000001bba2p-9,   0x1.ffffeaaae2633p-10},\n+            {0x1.000000000013p-1,    0x1.eaee8744b0806p-2},\n+            {0x1.0000000000012p0,    0x1.aed548f090d02p-1},\n+            {0x1.00000000004e1p9,    0x1.45b52f29ac36p-4},\n+            {0x1.00000000000cp10,   -0x1.44ad26136ce5fp-3},\n+            {0x1.000000000020bp11,  -0x1.4092047afcd2p-2},\n+            {0x1.0000000000003p12,  -0x1.3074ea23314dep-1},\n+            {0x1.0000000000174p50,  -0x1.54cd5e7e9e3d2p-1},\n+            {0x1.0000000000005p51,  -0x1.8c35b0d728faep-2},\n+            {0x1.0000000000101p113, -0x1.69e9ed300b1dcp-1},\n+            {0x1.0000000000017p114,  0x1.f6b44aa2a1c9cp-1},\n+            {0x1.00000000001abp128, -0x1.ecaddc1136bb2p-1},\n+            {0x1.000000000001bp129, -0x1.682ccb977e4dp-1},\n+            {0x1.0p233,              0x1.7c54e75ed6077p-1},\n+            {0x1.00000000000fcp299,  0x1.78ad2fd7aef78p-1},\n+            {0x1.0000000000002p300, -0x1.1adaf3550facp-1},\n+            {0x1.00000000001afp1023, 0x1.d1c804ef2eeccp-1},\n+        };\n+\n+        for (double[] testCase: testCases) {\n+            failures+=testSinCase(testCase[0], testCase[1]);\n+        }\n+\n@@ -166,0 +195,31 @@\n+        \/\/ Inputs where Math.cos and StrictMath.cos differ for at least\n+        \/\/ one Math.cos implementation.\n+        double [][] testCases = {\n+            {0x1.000000076aaa6p-10,   0x1.fffff00000147p-1},\n+            {0x1.000000002e4fbp-8,    0x1.ffff00001554fp-1},\n+            {0x1.0000000000318p-2,    0x1.f01549f7dee4p-1},\n+            {0x1.000000000011ep-1,    0x1.c1528065b7cc6p-1},\n+            {0x1.0000000000174p0,     0x1.14a280fb50419p-1},\n+            {0x1.0000000000019p1,    -0x1.aa226575372bbp-2},\n+            {0x1.00000000018c9p9,    -0x1.fe60f23b0016ap-1},\n+            {0x1.0000000000022p10,    0x1.f98669d7b18d6p-1},\n+            {0x1.0000000000281p11,    0x1.e6439428b217p-1},\n+            {0x1.0000000000001p12,    0x1.9ba4a85e6e173p-1},\n+            {0x1.0000000000211p20,    0x1.e33ad93554beep-1},\n+            {0x1.0000000000006p21,    0x1.9027223f77694p-1},\n+            {0x1.00000000000b8p95,    0x1.8315138968a66p-1},\n+            {0x1.0000000000043p96,    0x1.5b302d1c86cbcp-4},\n+            {0x1.000000000013ap127,  -0x1.740d46d7821f4p-1},\n+            {0x1.0000000000002p128,  -0x1.e050345cf2161p-1},\n+            {0x1.000000000014p299,    0x1.6c5f3c84352fep-1},\n+            {0x1.0000000000007p300,  -0x1.55109bfdf1c5cp-1},\n+            {0x1.000000000010ep400,   0x1.e725637029938p-2},\n+            {0x1.0000000000007p401,   0x1.1f89e14e29ccep-1},\n+            {0x1.0p402,               0x1.be2d53c4560dcp-1},\n+            {0x1.000000000015fp1023, -0x1.2f2596c42735cp-1},\n+        };\n+\n+        for (double[] testCase: testCases) {\n+            failures+=testCosCase(testCase[0], testCase[1]);\n+        }\n+\n@@ -188,0 +248,27 @@\n+        \/\/ Inputs where Math.tan and StrictMath.tan differ for at least\n+        \/\/ one Math.tan implementation.\n+        double [][] testCases = {\n+            {0x1.00000002221fep-13,  0x1.0000001777753p-13},\n+            {0x1.0000000088859p-12,  0x1.00000055dddbp-12},\n+            {0x1.0000000008787p-10,  0x1.000005555defep-10},\n+            {0x1.0000000001423p-9,   0x1.0000155558b9ap-9},\n+            {0x1.00000000005d9p-2,   0x1.05785a43c529p-2},\n+            {0x1.000000000001fp-1,   0x1.17b4f5bf34772p-1},\n+            {0x1.000000000006ep0,    0x1.8eb245cbee51ep0},\n+            {0x1.0000000000032p1,   -0x1.17af62e094fd7p1},\n+            {0x1.00000000006a7p9,   -0x1.46be0efd0f8cp-4},\n+            {0x1.0p10,              -0x1.48d5be43ada01p-3},\n+            {0x1.00000000000c3p32,   0x1.0ad3757181cbap-1},\n+            {0x1.0000000000005p33,   0x1.6e07fbf43d47p0},\n+            {0x1.0000000000124p127, -0x1.3baa73a93958p0},\n+            {0x1.000000000002p128,  -0x1.bf05a77a8df0cp-1},\n+            {0x1.000000000011cp299,  0x1.8a6f42eaa3d1fp0},\n+            {0x1.000000000001cp300, -0x1.b30fc9f73002cp-1},\n+            {0x1.0000000000013p500, -0x1.c4e46751be12cp-1},\n+            {0x1.00000000000ep1023, -0x1.d52c4ec04f108p-2}\n+        };\n+\n+        for (double[] testCase: testCases) {\n+            failures+=testTanCase(testCase[0], testCase[1]);\n+        }\n+\n","filename":"test\/jdk\/java\/lang\/StrictMath\/TrigTests.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"modified"}]}