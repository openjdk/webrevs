{"files":[{"patch":"@@ -1950,0 +1950,5 @@\n+#if INCLUDE_JVMCI\n+  if (is_jvmci_hosted()) {\n+    return;\n+  }\n+#endif\n@@ -4078,0 +4083,4 @@\n+\n+bool nmethod::is_jvmci_hosted() const {\n+  return jvmci_nmethod_data() != nullptr && !jvmci_nmethod_data()->is_default();\n+}\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -919,0 +919,4 @@\n+\n+  \/\/ Returns true if a JVMCI compiled method is non-default,\n+  \/\/ i.e., not triggered by CompilerBroker\n+  bool is_jvmci_hosted() const;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -749,0 +749,1 @@\n+                                  bool is_default,\n@@ -756,1 +757,1 @@\n-    _has_name = true;\n+    _properties.bits._has_name = 1;\n@@ -760,1 +761,1 @@\n-    _has_name = false;\n+    _properties.bits._has_name = 0;\n@@ -762,0 +763,1 @@\n+  _properties.bits._is_default = is_default;\n@@ -765,1 +767,1 @@\n-  initialize(data->_nmethod_mirror_index, data->_nmethod_entry_patch_offset, data->name(), data->_failed_speculations);\n+  initialize(data->_nmethod_mirror_index, data->_nmethod_entry_patch_offset, data->name(), data->_properties.bits._is_default, data->_failed_speculations);\n@@ -2125,1 +2127,1 @@\n-    if (result != JVMCI::ok) {\n+    if (install_default && result != JVMCI::ok) {\n@@ -2146,0 +2148,1 @@\n+                                                        install_default,\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,3 +51,13 @@\n-  \/\/ Is HotSpotNmethod.name non-null? If so, the value is\n-  \/\/ embedded in the end of this object.\n-  bool _has_name;\n+  union JVMCINMethodProperties {\n+    uint8_t value;\n+    struct {\n+      \/\/ Is HotSpotNmethod.name non-null? If so, the value is\n+      \/\/ embedded in the end of this object.\n+      uint8_t _has_name   : 1,\n+      \/\/ HotSpotNmethod.isDefault (e.g., compilation scheduled by CompileBroker)\n+              _is_default : 1,\n+                          : 6;\n+    } bits;\n+  };\n+\n+  JVMCINMethodProperties _properties;\n@@ -79,0 +89,1 @@\n+                   bool is_default,\n@@ -91,0 +102,1 @@\n+                                  bool is_default,\n@@ -96,0 +108,1 @@\n+                       is_default,\n@@ -120,1 +133,1 @@\n-  const char* name() { return _has_name ? (char*)(((address) this) + sizeof(JVMCINMethodData)) : nullptr; }\n+  const char* name() { return has_name() ? (char*)(((address) this) + sizeof(JVMCINMethodData)) : nullptr; }\n@@ -135,0 +148,8 @@\n+\n+  bool has_name() {\n+    return _properties.bits._has_name;\n+  }\n+\n+  bool is_default() {\n+    return _properties.bits._is_default;\n+  }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":26,"deletions":5,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2366,0 +2366,5 @@\n+#if INCLUDE_JVMCI\n+    if (nm->is_jvmci_hosted()) {\n+      update_trap_state = false;\n+    }\n+#endif\n@@ -2476,1 +2481,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}