{"files":[{"patch":"@@ -805,1 +805,1 @@\n-    for (uint i=0; i < n->len(); i++) {\n+    for (uint i = 0; i < n->len(); i++) {\n@@ -807,1 +807,1 @@\n-      if(m == nullptr) continue;  \/\/ must see all nodes in block that precede call\n+      if (m == nullptr) continue;  \/\/ must see all nodes in block that precede call\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n- * @summary Triggered a stack overflow in PhaseCFG::set_next_call. The graph is legitimately big (mostly deep and not wide)\n- *          which makes the old version of PhaseCFG::set_next_call crash.\n+ * @summary Triggered a stack overflow in PhaseCFG::set_next_call due to a legitimately big (mostly deep and not wide) graph.\n@@ -66,1 +65,1 @@\n-            test ();\n+            test();\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/StackOverflowInSetNextCall.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}