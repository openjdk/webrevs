{"files":[{"patch":"@@ -1966,1 +1966,3 @@\n-                            if ((p & IDLE) == 0 || s - b > 0)\n+                            if ((p & IDLE) == 0 || s - b > 0) {\n+                                if ((i & 1) == 0 && compareAndSetCtl(c, c))\n+                                    signalWork();        \/\/ ensure live\n@@ -1968,0 +1970,1 @@\n+                            }\n@@ -2072,1 +2075,1 @@\n-                ((runState & SHUTDOWN) == 0 || quiescent() <= 0)) {\n+                ((qc & RC_MASK) > 0L || quiescent() <= 0)) {\n@@ -2075,1 +2078,1 @@\n-                while (((p = w.phase) & IDLE) != 0 && --spins > 0)\n+                while ((p = w.phase) != active && --spins > 0)\n@@ -2077,1 +2080,1 @@\n-                if ((p & IDLE) != 0 && (qs = queues) != null) {\n+                if (p != active && (qs = queues) != null) {\n@@ -2087,1 +2090,1 @@\n-                            if (((p = w.phase) & IDLE) == 0)\n+                            if ((p = w.phase) == active)\n@@ -2091,1 +2094,1 @@\n-                    if ((p & IDLE) != 0) {\n+                    if (p != active) {\n@@ -2095,2 +2098,2 @@\n-                        if (((p = w.phase) & IDLE) != 0)\n-                            p = awaitWork(w, delay); \/\/ block, drop, or exit\n+                        if ((p = w.phase) != active)\n+                            p = awaitWork(w, p, delay); \/\/ block, drop, or exit\n@@ -2111,2 +2114,1 @@\n-    private int awaitWork(WorkQueue w, long delay) {\n-        int p = IDLE;\n+    private int awaitWork(WorkQueue w, int p, long delay) {\n@@ -2114,0 +2116,1 @@\n+            int active = p + IDLE;\n@@ -2118,1 +2121,1 @@\n-            while (((p = w.phase) & IDLE) != 0) {\n+            while ((p = w.phase) != active) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"}]}