{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.List;\n@@ -82,3 +83,3 @@\n-    private InetAddress addrs[];\n-    private InterfaceAddress bindings[];\n-    private NetworkInterface childs[];\n+    private InetAddress[] addrs;\n+    private InterfaceAddress[] bindings;\n+    private NetworkInterface[] childs;\n@@ -121,2 +122,1 @@\n-     * Get an Enumeration with all, or a subset, of the InetAddresses bound to\n-     * this network interface.\n+     * Get an Enumeration of the InetAddresses bound to this network interface.\n@@ -125,2 +125,2 @@\n-     * The returned enumeration contains all, or a subset, of the InetAddresses that were\n-     * bound to the interface at the time the {@linkplain #getNetworkInterfaces()\n+     * The returned enumeration contains the InetAddresses that were bound to\n+     * the interface at the time the {@linkplain #getNetworkInterfaces()\n@@ -129,2 +129,2 @@\n-     * @return an Enumeration object with all, or a subset, of the InetAddresses\n-     * bound to this network interface\n+     * @return an Enumeration object with the InetAddresses bound to this\n+     * network interface\n@@ -134,1 +134,1 @@\n-        return enumerationFromArray(getCheckedInetAddresses());\n+        return enumerationFromArray(addrs);\n@@ -138,2 +138,1 @@\n-     * Get a Stream of all, or a subset, of the InetAddresses bound to this\n-     * network interface.\n+     * Get a Stream of the InetAddresses bound to this network interface.\n@@ -142,2 +141,2 @@\n-     * The stream contains all, or a subset, of the InetAddresses that were\n-     * bound to the interface at the time the {@linkplain #getNetworkInterfaces()\n+     * The stream contains the InetAddresses that were bound to the\n+     * interface at the time the {@linkplain #getNetworkInterfaces()\n@@ -146,2 +145,1 @@\n-     * @return a Stream object with all, or a subset, of the InetAddresses\n-     * bound to this network interface\n+     * @return a Stream object with the InetAddresses bound to this network interface\n@@ -151,26 +149,1 @@\n-        return streamFromArray(getCheckedInetAddresses());\n-    }\n-\n-    private InetAddress[] getCheckedInetAddresses() {\n-        InetAddress[] local_addrs = new InetAddress[addrs.length];\n-        boolean trusted = true;\n-\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sec = System.getSecurityManager();\n-        if (sec != null) {\n-            try {\n-                sec.checkPermission(new NetPermission(\"getNetworkInformation\"));\n-            } catch (SecurityException e) {\n-                trusted = false;\n-            }\n-        }\n-        int i = 0;\n-        for (int j = 0; j < addrs.length; j++) {\n-            try {\n-                if (!trusted) {\n-                    sec.checkConnect(addrs[j].getHostAddress(), -1);\n-                }\n-                local_addrs[i++] = addrs[j];\n-            } catch (SecurityException e) { }\n-        }\n-        return Arrays.copyOf(local_addrs, i);\n+        return streamFromArray(addrs);\n@@ -180,2 +153,4 @@\n-     * Get a List of all, or a subset, of the {@code InterfaceAddresses}\n-     * of this network interface.\n+     * Get a List of the {@code InterfaceAddresses} of this network interface.\n+     *\n+     * @return a {@code List} object with the InterfaceAddress of this\n+     * network interface\n@@ -183,2 +158,0 @@\n-     * @return a {@code List} object with all, or a subset, of the\n-     *         InterfaceAddress of this network interface\n@@ -187,15 +160,2 @@\n-    public java.util.List<InterfaceAddress> getInterfaceAddresses() {\n-        java.util.List<InterfaceAddress> lst = new java.util.ArrayList<>(1);\n-        if (bindings != null) {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager sec = System.getSecurityManager();\n-            for (int j=0; j<bindings.length; j++) {\n-                try {\n-                    if (sec != null) {\n-                        sec.checkConnect(bindings[j].getAddress().getHostAddress(), -1);\n-                    }\n-                    lst.add(bindings[j]);\n-                } catch (SecurityException e) { }\n-            }\n-        }\n-        return lst;\n+    public List<InterfaceAddress> getInterfaceAddresses() {\n+        return bindings == null ? List.of() : List.of(bindings);\n@@ -559,12 +519,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sec = System.getSecurityManager();\n-        if (sec != null) {\n-            try {\n-                sec.checkPermission(new NetPermission(\"getNetworkInformation\"));\n-            } catch (SecurityException e) {\n-                if (!getInetAddresses().hasMoreElements()) {\n-                    \/\/ don't have connect permission to any local address\n-                    return null;\n-                }\n-            }\n-        }\n","filename":"src\/java.base\/share\/classes\/java\/net\/NetworkInterface.java","additions":21,"deletions":73,"binary":false,"changes":94,"status":"modified"}]}