{"files":[{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright 2025 Arm Limited and\/or its affiliates.\n@@ -1483,1 +1484,1 @@\n-  __ cmpxchg(addr, cmpval, newval, Assembler::word, \/* acquire*\/ true, \/* release*\/ true, \/* weak*\/ false, rscratch1);\n+  __ cmpxchg_barrier(addr, cmpval, newval, Assembler::word, \/* acquire*\/ true, \/* release*\/ true, \/* weak*\/ false, rscratch1);\n@@ -1485,1 +1486,0 @@\n-  __ membar(__ AnyAny);\n@@ -1489,1 +1489,1 @@\n-  __ cmpxchg(addr, cmpval, newval, Assembler::xword, \/* acquire*\/ true, \/* release*\/ true, \/* weak*\/ false, rscratch1);\n+  __ cmpxchg_barrier(addr, cmpval, newval, Assembler::xword, \/* acquire*\/ true, \/* release*\/ true, \/* weak*\/ false, rscratch1);\n@@ -1491,1 +1491,0 @@\n-  __ membar(__ AnyAny);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright 2025 Arm Limited and\/or its affiliates.\n@@ -3483,0 +3484,15 @@\n+\/\/ helper function which always provides trailing membar semantics.\n+void MacroAssembler::cmpxchg_barrier(Register addr, Register expected,\n+                             Register new_val,\n+                             enum operand_size size,\n+                             bool acquire, bool release,\n+                             bool weak,\n+                             Register result) {\n+  cmpxchg(addr, expected, new_val, size, acquire, release, weak, result);\n+  if(!UseLSE)\n+  {\n+    \/\/ Prevent a later volatile load from being reordered with the STLXR in cmpxchg.\n+    membar(AnyAny);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright 2025 Arm Limited and\/or its affiliates.\n@@ -1225,0 +1226,5 @@\n+  void cmpxchg_barrier(Register addr, Register expected,\n+                       Register new_val, enum operand_size size,\n+                       bool acquire, bool release, bool weak,\n+                       Register result);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}