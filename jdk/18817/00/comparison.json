{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,4 +27,2 @@\n- * @bug 8291226 8291638\n- * @modules java.base\/sun.net:+open\n- *          java.base\/sun.net.www.http:+open\n- *          java.base\/sun.net.www:+open\n+ * @bug 8291226 8291638 8330523\n+ * @modules java.base\/sun.net.www.http:+open\n@@ -32,160 +30,16 @@\n- * @run main\/othervm KeepAliveTest 0\n- * @run main\/othervm KeepAliveTest 1\n- * @run main\/othervm KeepAliveTest 2\n- * @run main\/othervm KeepAliveTest 3\n- * @run main\/othervm KeepAliveTest 4\n- * @run main\/othervm KeepAliveTest 5\n- * @run main\/othervm KeepAliveTest 6\n- * @run main\/othervm KeepAliveTest 7\n- * @run main\/othervm KeepAliveTest 8\n- * @run main\/othervm KeepAliveTest 9\n- * @run main\/othervm KeepAliveTest 10\n- * @run main\/othervm KeepAliveTest 11\n- * @run main\/othervm KeepAliveTest 12\n- * @run main\/othervm KeepAliveTest 13\n- * @run main\/othervm KeepAliveTest 14\n- * @run main\/othervm KeepAliveTest 15\n- * @run main\/othervm KeepAliveTest 16\n- * @run main\/othervm KeepAliveTest 17\n- * @run main\/othervm KeepAliveTest 18\n- * @run main\/othervm KeepAliveTest 19\n- * @run main\/othervm KeepAliveTest 20\n- * @run main\/othervm KeepAliveTest 21\n- * @run main\/othervm KeepAliveTest 22\n- * @run main\/othervm KeepAliveTest 23\n- * @run main\/othervm KeepAliveTest 24\n- * @run main\/othervm KeepAliveTest 25\n- * @run main\/othervm KeepAliveTest 26\n- * @run main\/othervm KeepAliveTest 27\n- * @run main\/othervm KeepAliveTest 28\n- * @run main\/othervm KeepAliveTest 29\n- * @run main\/othervm KeepAliveTest 30\n- * @run main\/othervm KeepAliveTest 31\n- * @run main\/othervm KeepAliveTest 32\n- * @run main\/othervm KeepAliveTest 33\n- * @run main\/othervm KeepAliveTest 34\n- * @run main\/othervm KeepAliveTest 35\n- * @run main\/othervm KeepAliveTest 36\n- * @run main\/othervm KeepAliveTest 37\n- * @run main\/othervm KeepAliveTest 38\n- * @run main\/othervm KeepAliveTest 39\n- * @run main\/othervm KeepAliveTest 40\n- * @run main\/othervm KeepAliveTest 41\n- * @run main\/othervm KeepAliveTest 42\n- * @run main\/othervm KeepAliveTest 43\n- * @run main\/othervm KeepAliveTest 44\n- * @run main\/othervm KeepAliveTest 45\n- * @run main\/othervm KeepAliveTest 46\n- * @run main\/othervm KeepAliveTest 47\n- * @run main\/othervm KeepAliveTest 48\n- * @run main\/othervm KeepAliveTest 49\n- * @run main\/othervm KeepAliveTest 50\n- * @run main\/othervm KeepAliveTest 51\n- * @run main\/othervm KeepAliveTest 52\n- * @run main\/othervm KeepAliveTest 53\n- * @run main\/othervm KeepAliveTest 54\n- * @run main\/othervm KeepAliveTest 55\n- * @run main\/othervm KeepAliveTest 56\n- * @run main\/othervm KeepAliveTest 57\n- * @run main\/othervm KeepAliveTest 58\n- * @run main\/othervm KeepAliveTest 59\n- * @run main\/othervm KeepAliveTest 60\n- * @run main\/othervm KeepAliveTest 61\n- * @run main\/othervm KeepAliveTest 62\n- * @run main\/othervm KeepAliveTest 63\n- * @run main\/othervm KeepAliveTest 64\n- * @run main\/othervm KeepAliveTest 65\n- * @run main\/othervm KeepAliveTest 66\n- * @run main\/othervm KeepAliveTest 67\n- * @run main\/othervm KeepAliveTest 68\n- * @run main\/othervm KeepAliveTest 69\n- * @run main\/othervm KeepAliveTest 70\n- * @run main\/othervm KeepAliveTest 71\n- * @run main\/othervm KeepAliveTest 72\n- * @run main\/othervm KeepAliveTest 73\n- * @run main\/othervm KeepAliveTest 74\n- * @run main\/othervm KeepAliveTest 75\n- * @run main\/othervm KeepAliveTest 76\n- * @run main\/othervm KeepAliveTest 77\n- * @run main\/othervm KeepAliveTest 78\n- * @run main\/othervm KeepAliveTest 79\n- * @run main\/othervm KeepAliveTest 80\n- * @run main\/othervm KeepAliveTest 81\n- * @run main\/othervm KeepAliveTest 82\n- * @run main\/othervm KeepAliveTest 83\n- * @run main\/othervm KeepAliveTest 84\n- * @run main\/othervm KeepAliveTest 85\n- * @run main\/othervm KeepAliveTest 86\n- * @run main\/othervm KeepAliveTest 87\n- * @run main\/othervm KeepAliveTest 88\n- * @run main\/othervm KeepAliveTest 89\n- * @run main\/othervm KeepAliveTest 90\n- * @run main\/othervm KeepAliveTest 91\n- * @run main\/othervm KeepAliveTest 92\n- * @run main\/othervm KeepAliveTest 93\n- * @run main\/othervm KeepAliveTest 94\n- * @run main\/othervm KeepAliveTest 95\n- * @run main\/othervm KeepAliveTest 96\n- * @run main\/othervm KeepAliveTest 97\n- * @run main\/othervm KeepAliveTest 98\n- * @run main\/othervm KeepAliveTest 99\n- * @run main\/othervm KeepAliveTest 100\n- * @run main\/othervm KeepAliveTest 101\n- * @run main\/othervm KeepAliveTest 102\n- * @run main\/othervm KeepAliveTest 103\n- * @run main\/othervm KeepAliveTest 104\n- * @run main\/othervm KeepAliveTest 105\n- * @run main\/othervm KeepAliveTest 106\n- * @run main\/othervm KeepAliveTest 107\n- * @run main\/othervm KeepAliveTest 108\n- * @run main\/othervm KeepAliveTest 109\n- * @run main\/othervm KeepAliveTest 110\n- * @run main\/othervm KeepAliveTest 111\n- * @run main\/othervm KeepAliveTest 112\n- * @run main\/othervm KeepAliveTest 113\n- * @run main\/othervm KeepAliveTest 114\n- * @run main\/othervm KeepAliveTest 115\n- * @run main\/othervm KeepAliveTest 116\n- * @run main\/othervm KeepAliveTest 117\n- * @run main\/othervm KeepAliveTest 118\n- * @run main\/othervm KeepAliveTest 119\n- * @run main\/othervm KeepAliveTest 120\n- * @run main\/othervm KeepAliveTest 121\n- * @run main\/othervm KeepAliveTest 122\n- * @run main\/othervm KeepAliveTest 123\n- * @run main\/othervm KeepAliveTest 124\n- * @run main\/othervm KeepAliveTest 125\n- * @run main\/othervm KeepAliveTest 126\n- * @run main\/othervm KeepAliveTest 127\n- * @run main\/othervm KeepAliveTest 128\n- * @run main\/othervm KeepAliveTest 129\n- * @run main\/othervm KeepAliveTest 130\n- * @run main\/othervm KeepAliveTest 131\n- * @run main\/othervm KeepAliveTest 132\n- * @run main\/othervm KeepAliveTest 133\n- * @run main\/othervm KeepAliveTest 134\n- * @run main\/othervm KeepAliveTest 135\n- * @run main\/othervm KeepAliveTest 136\n- * @run main\/othervm KeepAliveTest 137\n- * @run main\/othervm KeepAliveTest 138\n- * @run main\/othervm KeepAliveTest 139\n- * @run main\/othervm KeepAliveTest 140\n- * @run main\/othervm KeepAliveTest 141\n- * @run main\/othervm KeepAliveTest 142\n- * @run main\/othervm KeepAliveTest 143\n- * @run main\/othervm KeepAliveTest 144\n- * @run main\/othervm KeepAliveTest 145\n- * @run main\/othervm KeepAliveTest 146\n- * @run main\/othervm KeepAliveTest 147\n- * @run main\/othervm KeepAliveTest 148\n- * @run main\/othervm KeepAliveTest 149\n- * @run main\/othervm KeepAliveTest 150\n- * @run main\/othervm KeepAliveTest 151\n- * @run main\/othervm KeepAliveTest 152\n- * @run main\/othervm KeepAliveTest 153\n- * @run main\/othervm KeepAliveTest 154\n- * @run main\/othervm KeepAliveTest 155\n- * @run main\/othervm KeepAliveTest 156\n- * @run main\/othervm KeepAliveTest 157\n- * @run main\/othervm KeepAliveTest 158\n- * @run main\/othervm KeepAliveTest 159\n+ * @run main\/othervm KeepAliveTest c0\n+ * @run main\/othervm KeepAliveTest c1\n+ * @run main\/othervm KeepAliveTest c2\n+ * @run main\/othervm KeepAliveTest c3\n+ * @run main\/othervm KeepAliveTest c4\n+ * @run main\/othervm KeepAliveTest c5\n+ * @run main\/othervm KeepAliveTest c6\n+ * @run main\/othervm KeepAliveTest c7\n+ * @run main\/othervm KeepAliveTest c8\n+ * @run main\/othervm KeepAliveTest c9\n+ * @run main\/othervm KeepAliveTest c10\n+ * @run main\/othervm KeepAliveTest c11\n+ * @run main\/othervm KeepAliveTest c12\n+ * @run main\/othervm KeepAliveTest c13\n+ * @run main\/othervm KeepAliveTest c14\n+ * @run main\/othervm KeepAliveTest c15\n@@ -209,0 +63,1 @@\n+import java.util.ArrayList;\n@@ -221,5 +76,1 @@\n-    private static final Logger logger = Logger.getLogger(\"sun.net.www.protocol.http.HttpURLConnection\");\n-    private static final String NOT_CACHED = \"NotCached\";\n-    private static final String CLIENT_SEPARATOR = \";\";\n-    private static final String NEW_LINE = \"\\r\\n\";\n-    private volatile int SERVER_PORT = 0;\n+\n@@ -227,3 +78,10 @@\n-     * isProxySet is shared variable between server thread and client thread(main) and it should be set and reset to false for each and\n-     * every scenario.\n-     * isProxySet variable should be set by server thread before proceeding to client thread(main).\n+     * This test covers 160 scenarios.\n+     * For every scenario there is mapping between serverScenarios[int], clientScenarios[int] and expectedValues[int]\n+     *\n+     * serverScenarios[0] clientScenarios[0] expectedValues[0]\n+     * serverScenarios[1] clientScenarios[1] expectedValues[1]\n+     * serverScenarios[2] clientScenarios[2] expectedValues[2]\n+     *\n+     * ...\n+     *\n+     * serverScenarios[159] cientScenarios[159] expectedValues[159]\n@@ -231,40 +89,0 @@\n-    private volatile boolean isProxySet = false;\n-    private static final String CONNECTION_KEEP_ALIVE_ONLY = \"Connection: keep-alive\";\n-    private static final String PROXY_CONNECTION_KEEP_ALIVE_ONLY = \"Proxy-Connection: keep-alive\";\n-    private static final String KEEP_ALIVE_TIMEOUT_NEG = \"Keep-alive: timeout=-20\";\n-    private static final String KEEP_ALIVE_TIMEOUT_ZERO = \"Keep-alive: timeout=0\";\n-    private static final String KEEP_ALIVE_TIMEOUT = \"Keep-alive: timeout=20\";\n-    private static final String KEEP_ALIVE_PROXY_TIMEOUT = \"Keep-alive: timeout=120\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_NEGATIVE = \"http.keepAlive.time.server=-100\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_NEGATIVE = \"http.keepAlive.time.proxy=-200\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_ZERO = \"http.keepAlive.time.server=0\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_ZERO = \"http.keepAlive.time.proxy=0\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_POSITIVE = \"http.keepAlive.time.server=100\";\n-    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_POSITIVE = \"http.keepAlive.time.proxy=200\";\n-    private static final String CONNECTION_KEEP_ALIVE_WITH_TIMEOUT = CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE\n-        + KEEP_ALIVE_TIMEOUT;\n-   \/*\n-    * Following Constants represents Client Side Properties and is used as reference in below table as\n-    * CLIENT_INPUT_CONSTANT_NAMES\n-    *\/\n-    private static final String SERVER_100_NEGATIVE = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_NEGATIVE;\n-    private static final String PROXY_200_NEGATIVE = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_NEGATIVE;\n-    private static final String SERVER_ZERO = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_ZERO;\n-    private static final String PROXY_ZERO = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_ZERO;\n-    private static final String SERVER_100 = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_POSITIVE;\n-    private static final String PROXY_200 = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_POSITIVE;\n-\n-   \/*\n-    * CONSTANTS A,B,C,D,E,NI,F,G,H,I represents ServerScenarios and is used as reference in below table\n-    * as SERVER_RESPONSE_CONSTANT_NAME\n-    *\/\n-    private static final String A = CONNECTION_KEEP_ALIVE_ONLY;\n-    private static final String B = CONNECTION_KEEP_ALIVE_WITH_TIMEOUT;\n-    private static final String C = PROXY_CONNECTION_KEEP_ALIVE_ONLY;\n-    private static final String D = PROXY_CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + CONNECTION_KEEP_ALIVE_ONLY;\n-    private static final String E = C + NEW_LINE + KEEP_ALIVE_PROXY_TIMEOUT;\n-    private static final String NI = \"NO_INPUT\";\n-    private static final String F = A + NEW_LINE + KEEP_ALIVE_TIMEOUT_NEG;\n-    private static final String G = A + NEW_LINE + KEEP_ALIVE_TIMEOUT_ZERO;\n-    private static final String H = C + NEW_LINE + KEEP_ALIVE_TIMEOUT_NEG;\n-    private static final String I = C + NEW_LINE + KEEP_ALIVE_TIMEOUT_ZERO;\n@@ -272,21 +90,2 @@\n-   \/*\n-    * There are 160 scenarios run by this program.\n-    * For every scenario there is mapping between serverScenarios[int],clientScenarios[int] and expectedOutput[int]\n-    *\n-    * serverScenarios[0] clientScenarios[0] expectedOutput[0]\n-    * serverScenarios[1] clientScenarios[1] expectedOutput[1]\n-    * serverScenarios[2] clientScenarios[2] expectedOutput[2]\n-    *\n-    * ...\n-    *\n-    * serverScenarios[159] cientScenarios[159] expectedOutput[159]\n-    *\n-    * whereas serverScenarios[int] is retrieved using getServerScenario(int)\n-    * whereas clientScenarios[int] is retrieved using clientScenario[getClientScenarioNumber[int]]\n-    * and\n-    * expectedOutput[int] is retrieved using expectedOuput[int] directly.\n-    *\n-    *\/\n-\n-   \/* Here is the complete table of server_response, client system properties input and expected cached timeout at client side *\/\n-   \/* ScNo  |  SERVER RESPONSE (SERVER_RESPONSE_CONSTANT_NAME)| CLIENT SYSTEM PROPERTIES INPUT (CLIENT_INPUT_CONSTANT_NAMES) | EXPECTED CACHED TIMEOUT AT CLIENT SIDE\n+   \/* Here is the complete table of server response headers, client system properties input and expected cache timeout at client side *\/\n+   \/* ScNo  |  SERVER RESPONSE HEADERS                        | CLIENT SYSTEM PROPERTIES                     | EXPECTED CACHE TIMEOUT AT CLIENT SIDE\n@@ -854,23 +653,19 @@\n-   \/* private static final String[] serverScenarios = {\n-        A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A,\n-        B, B, B, B, B, B, B, B, B, B,B, B, B, B, B, B,\n-        C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C,\n-        D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D,\n-        E, E, E, E, E, E, E, E, E, E, E, E, E, E, E, E,\n-        NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI, NI,\n-        F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F,\n-        G, G, G, G, G, G, G, G, G, G, G, G, G, G, G, G,\n-        H, H, H, H, H, H, H, H, H, H, H, H, H, H, H, H,\n-        I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I\n-    }; *\/\n-    \/*\n-     * following are client scenarios which are repeated.\n-     *\/\n-    private static final String[] a = {\n-        NI, SERVER_100,     PROXY_200, SERVER_100 + CLIENT_SEPARATOR + PROXY_200,    SERVER_100_NEGATIVE,\n-        PROXY_200_NEGATIVE, SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_200_NEGATIVE,\n-        SERVER_ZERO,         PROXY_ZERO, SERVER_ZERO + CLIENT_SEPARATOR + PROXY_ZERO,\n-        SERVER_ZERO + CLIENT_SEPARATOR + PROXY_200_NEGATIVE, SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_ZERO,\n-        SERVER_100 + CLIENT_SEPARATOR + PROXY_ZERO, SERVER_ZERO + CLIENT_SEPARATOR + PROXY_200,\n-        SERVER_100 + CLIENT_SEPARATOR + PROXY_200_NEGATIVE, SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_200\n-    };\n+    private static final String NOT_CACHED = \"NotCached\";\n+    private static final String CLIENT_SEPARATOR = \";\";\n+    private static final String NEW_LINE = \"\\r\\n\";\n+\n+    private static final String NI = \"NO_INPUT\";\n+\n+    private static final String CONNECTION_KEEP_ALIVE_ONLY = \"Connection: keep-alive\";\n+    private static final String PROXY_CONNECTION_KEEP_ALIVE_ONLY = \"Proxy-Connection: keep-alive\";\n+    private static final String KEEP_ALIVE_TIMEOUT_NEG = \"Keep-alive: timeout=-20\";\n+    private static final String KEEP_ALIVE_TIMEOUT_ZERO = \"Keep-alive: timeout=0\";\n+    private static final String KEEP_ALIVE_TIMEOUT = \"Keep-alive: timeout=20\";\n+    private static final String KEEP_ALIVE_PROXY_TIMEOUT = \"Keep-alive: timeout=120\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_NEGATIVE = \"http.keepAlive.time.server=-100\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_NEGATIVE = \"http.keepAlive.time.proxy=-200\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_ZERO = \"http.keepAlive.time.server=0\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_ZERO = \"http.keepAlive.time.proxy=0\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_POSITIVE = \"http.keepAlive.time.server=100\";\n+    private static final String CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_POSITIVE = \"http.keepAlive.time.proxy=200\";\n+    private static final String CONNECTION_KEEP_ALIVE_WITH_TIMEOUT = CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_TIMEOUT;\n@@ -878,12 +673,19 @@\n-   \/* private String[] clientScenarios = {\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15],\n-    }; *\/\n+    private static final String SERVER_100_NEGATIVE = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_NEGATIVE;\n+    private static final String PROXY_200_NEGATIVE = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_NEGATIVE;\n+    private static final String SERVER_ZERO = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_ZERO;\n+    private static final String PROXY_ZERO = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_ZERO;\n+    private static final String SERVER_100 = CLIENT_HTTP_KEEP_ALIVE_TIME_SERVER_POSITIVE;\n+    private static final String PROXY_200 = CLIENT_HTTP_KEEP_ALIVE_TIME_PROXY_POSITIVE;\n+\n+    private static final String[] serverScenarios = {\n+        CONNECTION_KEEP_ALIVE_ONLY,\n+        CONNECTION_KEEP_ALIVE_WITH_TIMEOUT,\n+        PROXY_CONNECTION_KEEP_ALIVE_ONLY,\n+        PROXY_CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + CONNECTION_KEEP_ALIVE_ONLY,\n+        PROXY_CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_PROXY_TIMEOUT,\n+        NI,\n+        CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_TIMEOUT_NEG,\n+        CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_TIMEOUT_ZERO,\n+        PROXY_CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_TIMEOUT_NEG,\n+        PROXY_CONNECTION_KEEP_ALIVE_ONLY + NEW_LINE + KEEP_ALIVE_TIMEOUT_ZERO\n+    };\n@@ -892,1 +694,16 @@\n-        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]\n+        NI,\n+        SERVER_100,\n+        PROXY_200,\n+        SERVER_100 + CLIENT_SEPARATOR + PROXY_200,\n+        SERVER_100_NEGATIVE,\n+        PROXY_200_NEGATIVE,\n+        SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_200_NEGATIVE,\n+        SERVER_ZERO,\n+        PROXY_ZERO,\n+        SERVER_ZERO + CLIENT_SEPARATOR + PROXY_ZERO,\n+        SERVER_ZERO + CLIENT_SEPARATOR + PROXY_200_NEGATIVE,\n+        SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_ZERO,\n+        SERVER_100 + CLIENT_SEPARATOR + PROXY_ZERO,\n+        SERVER_ZERO + CLIENT_SEPARATOR + PROXY_200,\n+        SERVER_100 + CLIENT_SEPARATOR + PROXY_200_NEGATIVE,\n+        SERVER_100_NEGATIVE + CLIENT_SEPARATOR + PROXY_200\n@@ -896,10 +713,10 @@\n-        5,  100,    5, 100,  5,  5,  5,  0,  5,   0,   0,   5,  100,    0,   100,    5,\n-        20,   20 ,  20,  20, 20, 20, 20, 20, 20,  20 , 20,  20,   20,   20,    20,   20,\n-        60,   60,  200, 200, 60, 60, 60, 60,  0,   0,  60,   0,    0,  200,    60,  200,\n-        60,   60,  200, 200, 60, 60, 60, 60,  0,   0,  60,   0,    0,  200,    60,  200,\n-        120, 120,  120, 120,120,120,120,120,120, 120, 120, 120,  120,  120,   120,  120,\n-        5,  100,    5, 100,  5,  5,  5,  0,  5,   0,   0,   5,  100,    0,   100,    5,\n-        5,  100,    5, 100,  5,  5,  5,  0,  5,   0,   0,   5,  100,    0,   100,    5,\n-        0,    0,    0,   0,  0,  0,  0,  0,  0,   0,   0,   0,    0,    0,     0,    0,\n-        60,  60,  200, 200, 60, 60, 60, 60,  0,   0,  60,   0,    0,  200,    60,  200,\n-        0,    0,    0,   0,  0,  0,  0,  0,  0,   0,   0,   0,    0,    0,     0,    0,\n+          5, 100,   5, 100,   5,   5,   5,   0,   5,   0,   0,   5,  100,    0,   100,    5,\n+         20,  20,  20,  20,  20,  20,  20,  20,  20,  20 , 20,  20,   20,   20,    20,   20,\n+         60,  60, 200, 200,  60,  60,  60,  60,   0,   0,  60,   0,    0,  200,    60,  200,\n+         60,  60, 200, 200,  60,  60,  60,  60,   0,   0,  60,   0,    0,  200,    60,  200,\n+        120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,  120,  120,   120,  120,\n+          5, 100,   5, 100,   5,   5,   5,   0,   5,   0,   0,   5,  100,    0,   100,    5,\n+          5, 100,   5, 100,   5,   5,   5,   0,   5,   0,   0,   5,  100,    0,   100,    5,\n+          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,     0,    0,\n+         60,  60, 200, 200,  60,  60,  60,  60,   0,   0,  60,   0,    0,  200,    60,  200,\n+          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,     0,    0,\n@@ -908,1 +725,1 @@\n-    private final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    private static KeepAliveCache keepAliveCache;\n@@ -910,1 +727,7 @@\n-    private final CountDownLatch serverCountDownLatch = new CountDownLatch(1);\n+    private static Constructor<?> keepAliveKeyClassconstructor;\n+\n+    \/\/ variables set by server thread\n+    private volatile int serverPort;\n+    private volatile boolean isProxySet;\n+\n+    private CountDownLatch serverLatch = new CountDownLatch(1);\n@@ -924,2 +747,2 @@\n-    private int getClientScenarioNumber(int scenarioNumber) {\n-        return scenarioNumber % 16 ;\n+    private static String getClientScenario(int scenarioNumber) {\n+        return clientScenarios[scenarioNumber % 16];\n@@ -940,1 +763,1 @@\n-     * for scenario numbers from 112 to 127 server resonse is: Connection: keep-alive\\r\\nKeep-alive: timeout=0\n+     * for scenario numbers from 112 to 127 server response is: Connection: keep-alive\\r\\nKeep-alive: timeout=0\n@@ -944,99 +767,2 @@\n-    private String getServerScenario(int scenarioNumber) {\n-        \/*\n-         *  ServerResponse for scenarios from 0 to 15\n-         *  SERVER_RESPONSE:Connection:keep-alive\n-         *\/\n-        if(scenarioNumber >= 0 && scenarioNumber <= 15) {\n-            return A;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 16 to 31\n-         * SERVER_RESPONSE=Connection: keep-alive\\r\\nKeep-alive: timeout=20\n-         *\/\n-        else if (scenarioNumber >= 16 && scenarioNumber <= 31){\n-            return B;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 32 to 47\n-         * SERVER_RESPONSE=Proxy-Connection: keep-alive\n-         *\/\n-        else if (scenarioNumber >= 32 && scenarioNumber <= 47){\n-            return C;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 48 to 63\n-         * SERVER_RESPONSE=Connection:keep-alive\\r\\nProxy-connection:keep-alive\n-         *\/\n-        else if (scenarioNumber >= 48 && scenarioNumber <= 63){\n-            return D;\n-        \/*\n-         * ServerResponse for scenarios from 64 to 79\n-         * SERVER_RESPONSE=Proxy-connection:keep-alive\\r\\nKeep-alive:timeout=120\n-         *\/\n-        } else if (scenarioNumber >= 64 && scenarioNumber <= 79){\n-            return E;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 80 to 95\n-         * SERVER_RESPONSE=No Input\n-         *\/\n-        else if (scenarioNumber >= 80 && scenarioNumber <= 95){\n-            return NI;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 96 to 111\n-         * SERVER_RESPONSE=Connection: keep-alive\\r\\nKeep-alive: timeout=-20\n-         *\/\n-        else if (scenarioNumber >= 96 && scenarioNumber <= 111){\n-            return F;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 112 to 127\n-         * SERVER_RESPONSE=Connection: keep-alive\\r\\nKeep-alive: timeout=0\n-         *\/\n-        else if (scenarioNumber >= 112 && scenarioNumber <= 127){\n-            return G;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 128 to 143\n-         * SERVER_RESPONSE=Proxy-connection:keep-alive\\r\\nKeep-alive:timeout=-20\n-         *\/\n-        else if (scenarioNumber >= 128 && scenarioNumber <= 143){\n-            return H;\n-        }\n-        \/*\n-         * ServerResponse for scenarios from 144 to 159\n-         * SERVER_RESPONSE=Proxy-connection:keep-alive\\r\\nKeep-alive:timeout=0\n-         *\/\n-        else if (scenarioNumber >= 144 && scenarioNumber <= 159){\n-            return I;\n-        }\n-        \/*Invalid Case*\/\n-        return null;\n-    }\n-\n-    private void startScenario(int scenarioNumber) throws Exception {\n-        System.out.println(\"serverScenarios[\" + scenarioNumber + \"]=\" + getServerScenario(scenarioNumber));\n-        System.out.println(\"clientScenarios[\" + scenarioNumber + \"]=\" + clientScenarios[getClientScenarioNumber(scenarioNumber)]);\n-        if(expectedValues[scenarioNumber] == 0) {\n-            System.out.println(\"ExpectedOutput=\" + NOT_CACHED);\n-        } else {\n-            System.out.println(\"ExpectedOutput=\" + expectedValues[scenarioNumber]);\n-        }\n-        System.out.println();\n-        startServer(scenarioNumber);\n-        runClient(scenarioNumber);\n-    }\n-\n-    private void startServer(int scenarioNumber) {\n-        Thread server = new Thread(new Runnable() {\n-            @Override\n-            public void run() {\n-                try {\n-                   executeServer(scenarioNumber);\n-                } catch (IOException e) {\n-                   e.printStackTrace();\n-                }\n-            }\n-        }, \"SERVER\");\n-        server.start();\n+    private static String getServerScenario(int scenarioNumber) {\n+        return serverScenarios[scenarioNumber >> 4];\n@@ -1065,8 +791,2 @@\n-            \/*\n-             * isProxySet should be set before Server is moved to Listen State.\n-             *\/\n-            if (serverScenarioContent.contains(\"Proxy\")) {\n-                isProxySet = true;\n-            } else {\n-                isProxySet = false;\n-            }\n+            \/\/ isProxySet should be set before Server is moved to Listen State.\n+            isProxySet = serverScenarioContent.contains(\"Proxy\");\n@@ -1074,45 +794,24 @@\n-        ServerSocket serverSocket = null;\n-        Socket socket = null;\n-        OutputStreamWriter out = null;\n-        InetAddress loopback = InetAddress.getLoopbackAddress();\n-        try {\n-            serverSocket = new ServerSocket();\n-            serverSocket.bind(new InetSocketAddress(loopback, 0));\n-            SERVER_PORT = serverSocket.getLocalPort();\n-            \/\/serverReady = true;\n-            this.serverCountDownLatch.countDown();\n-            System.out\n-                .println(\"SERVER_PORT= \" + SERVER_PORT +\" isProxySet=\" + isProxySet);\n-            \/*\n-             * Server will be waiting for clients to connect.\n-             *\/\n-            socket = serverSocket.accept();\n-            readAll(socket);\n-            out = new OutputStreamWriter(socket.getOutputStream());\n-            String BODY = \"SERVER REPLY: Hello world\";\n-            String CLEN = \"Content-Length: \" + BODY.length() + NEW_LINE;\n-            \/* send the header *\/\n-            out.write(\"HTTP\/1.1 200 OK\\r\\n\");\n-            out.write(\"Content-Type: text\/plain; charset=iso-8859-1\\r\\n\");\n-            \/*\n-             * append each scenario content from array.\n-             *\/\n-            if(serverScenarioContent != null) {\n-                out.write(serverScenarioContent);\n-            }\n-            out.write(CLEN);\n-            out.write(NEW_LINE);\n-            out.write(BODY);\n-            out.flush();\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        } finally {\n-            if (out != null) {\n-                out.flush();\n-                out.close();\n-            }\n-            if (socket != null) {\n-                socket.close();\n-            }\n-            if (serverSocket != null) {\n-                serverSocket.close();\n+        try (ServerSocket serverSocket = new ServerSocket()) {\n+            serverSocket.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n+            serverPort = serverSocket.getLocalPort();\n+            serverLatch.countDown();\n+\n+            \/\/ Server will be waiting for clients to connect.\n+            try (Socket socket = serverSocket.accept()) {\n+                readAll(socket);\n+                try (OutputStreamWriter out = new OutputStreamWriter(socket.getOutputStream())) {\n+                    String BODY = \"SERVER REPLY: Hello world\";\n+                    String CLEN = \"Content-Length: \" + BODY.length() + NEW_LINE;\n+\n+                    \/\/ send the header\n+                    out.write(\"HTTP\/1.1 200 OK\\r\\n\");\n+                    out.write(\"Content-Type: text\/plain; charset=iso-8859-1\\r\\n\");\n+\n+                    \/\/ append each scenario content from array.\n+                    if (serverScenarioContent != null) {\n+                        out.write(serverScenarioContent);\n+                    }\n+                    out.write(CLEN);\n+                    out.write(NEW_LINE);\n+                    out.write(BODY);\n+                }\n@@ -1123,9 +822,13 @@\n-    private void runClient(int scenarioNumber) throws Exception {\n-        try {\n-            connectToServerURL(scenarioNumber);\n-        } finally {\n-            System.out.println(\"client count down latch:\" + scenarioNumber);\n-            this.countDownLatch.countDown();\n-            System.out.println();\n-            System.out.println();\n-        }\n+    private Thread startServer(int scenarioNumber) {\n+        Thread server = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                try {\n+                   executeServer(scenarioNumber);\n+                } catch (IOException e) {\n+                   e.printStackTrace();\n+                }\n+            }\n+        }, \"SERVER\");\n+        server.start();\n+        return server;\n@@ -1134,22 +837,27 @@\n-    private void connectToServerURL(int scenarioNumber) throws Exception {\n-        \/\/    System.setProperty(\"java.net.useSystemProxies\", \"false\");\n-        \/\/    System.setProperty(\"http.nonProxyHosts\", \"\");\n-        \/\/    System.setProperty(\"http.proxyHost\", \"localhost\");\n-        \/\/    System.setProperty(\"http.proxyPort\", String.valueOf(SERVER_PORT));\n-        System.out.println(\"Following are Existing System Properties if set any\");\n-        System.out.println(\"http.keepAlive.time.server:\" + System.getProperty(\"http.keepAlive.time.server\"));\n-        System.out.println(\"http.keepAlive.time.proxy:\" + System.getProperty(\"http.keepAlive.time.proxy\"));\n-        System.setProperty(\"java.net.useSystemProxies\", \"false\");\n-        System.out.println(\"http.proxyPort:\"+System.getProperty(\"http.proxyPort\"));\n-        System.out.println(\"http.proxyHost:\"+System.getProperty(\"http.proxyHost\"));\n-        System.clearProperty(\"http.keepAlive.time.server\");\n-        System.clearProperty(\"http.keepAlive.time.proxy\");\n-        \/\/ fetch clientScenearios for each scenarioNumber from array and set it to\n-        \/\/ System property.\n-        if (!clientScenarios[getClientScenarioNumber(scenarioNumber)].equalsIgnoreCase(NI)) {\n-            System.out.println(\"Client Input Parsing\");\n-            for (String clientScenarioString : clientScenarios[getClientScenarioNumber(scenarioNumber)].split(CLIENT_SEPARATOR)) {\n-                System.out.println(clientScenarioString);\n-                String key = clientScenarioString.split(\"=\")[0];\n-                String value = clientScenarioString.split(\"=\")[1];\n-                System.setProperty(key, value);\n+    private void fetchInfo(int scenarioNumber, HttpURLConnection httpUrlConnection) throws Exception {\n+        Object expectedKeepAliveKey = keepAliveKeyClassconstructor.newInstance(httpUrlConnection.getURL(), null);\n+        Object clientVectorObjectInMap = keepAliveCache.get(expectedKeepAliveKey);\n+        System.out.println(\"ClientVector for KeepAliveKey:\" + clientVectorObjectInMap);\n+        HttpClient httpClientCached = keepAliveCache.get(httpUrlConnection.getURL(), null);\n+        System.out.println(\"HttpClient in Cache:\" + httpClientCached);\n+\n+        if (httpClientCached != null) {\n+            System.out.println(\"KeepingAlive:\" + httpClientCached.isKeepingAlive());\n+            System.out.println(\"UsingProxy:\" + httpClientCached.getUsingProxy());\n+            System.out.println(\"ProxiedHost:\" + httpClientCached.getProxyHostUsed());\n+            System.out.println(\"ProxiedPort:\" + httpClientCached.getProxyPortUsed());\n+            Class<?> clientVectorClass = Class.forName(\"sun.net.www.http.KeepAliveCache$ClientVector\");\n+            Field napField = clientVectorClass.getDeclaredField(\"nap\");\n+            napField.setAccessible(true);\n+            int napValue = (int) napField.get(clientVectorObjectInMap);\n+            int actualValue = napValue \/ 1000;\n+            if (expectedValues[scenarioNumber] == actualValue) {\n+                System.out.printf(\"Cache time:%d\\n\", actualValue);\n+            } else {\n+                throw new RuntimeException(\"Sleep time of \" + actualValue + \" not expected (\" + expectedValues[scenarioNumber] + \")\");\n+            }\n+        } else {\n+            if (expectedValues[scenarioNumber] == 0) {\n+                System.out.println(\"Connection not cached.\");\n+            } else {\n+                throw new RuntimeException(\"Connection was not cached although expected with sleep time of:\" + expectedValues[scenarioNumber]);\n@@ -1158,0 +866,3 @@\n+    }\n+\n+    private void connectToServerURL(int scenarioNumber) throws Exception {\n@@ -1159,4 +870,3 @@\n-        this.serverCountDownLatch.await();\n-        System.out.println(\"client started\");\n-        URL url = URIBuilder.newBuilder().scheme(\"http\").loopback().port(SERVER_PORT).toURL();\n-        System.out.println(\"connecting from client to SERVER URL:\" + url);\n+        serverLatch.await();\n+        URL url = URIBuilder.newBuilder().scheme(\"http\").loopback().port(serverPort).toURL();\n+        System.out.println(\"connecting client to server URL: \" + url + \", isProxySet: \" + isProxySet);\n@@ -1164,3 +874,2 @@\n-        \/*\n-         * isProxySet is set to true when Expected Server Response contains Proxy-Connection header.\n-         *\/\n+\n+        \/\/ isProxySet is set to true when Expected Server Response contains Proxy-Connection header.\n@@ -1168,2 +877,2 @@\n-            httpUrlConnection = (sun.net.www.protocol.http.HttpURLConnection) url\n-                .openConnection(new Proxy(Type.HTTP, new InetSocketAddress(\"localhost\", SERVER_PORT)));\n+            httpUrlConnection = (HttpURLConnection) url\n+                .openConnection(new Proxy(Type.HTTP, new InetSocketAddress(\"localhost\", serverPort)));\n@@ -1171,1 +880,1 @@\n-            httpUrlConnection = (sun.net.www.protocol.http.HttpURLConnection) url.openConnection();\n+            httpUrlConnection = (HttpURLConnection) url.openConnection();\n@@ -1174,3 +883,1 @@\n-        BufferedReader bufferedReader = null;\n-        try {\n-            bufferedReader = new BufferedReader(inputStreamReader);\n+        try (BufferedReader bufferedReader = new BufferedReader(inputStreamReader)) {\n@@ -1184,4 +891,0 @@\n-        } finally {\n-            if (bufferedReader != null) {\n-                bufferedReader.close();\n-            }\n@@ -1189,4 +892,0 @@\n-        \/\/    System.out.println(\"ResponseCode:\" + httpUrlConnection.getResponseCode());\n-        \/\/    System.out.println(\"ResponseMessage:\" + httpUrlConnection.getResponseMessage());\n-        \/\/    System.out.println(\"Content:\" + httpUrlConnection.getContent());\n-        \/\/    Thread.sleep(2000);\n@@ -1199,46 +898,31 @@\n-    private void fetchInfo(int scenarioNumber, sun.net.www.protocol.http.HttpURLConnection httpUrlConnection)\n-        throws Exception {\n-       Field field = Class.forName(\"sun.net.www.protocol.http.HttpURLConnection\").getDeclaredField(\"http\");\n-       field.setAccessible(true);\n-       HttpClient httpClient = (HttpClient) field.get(httpUrlConnection);\n-       \/\/    System.out.println(\"httpclient=\" + httpClient);\n-       Field keepAliveField = Class.forName(\"sun.net.www.http.HttpClient\").getDeclaredField(\"kac\");\n-       keepAliveField.setAccessible(true);\n-       KeepAliveCache keepAliveCache = (KeepAliveCache) keepAliveField.get(httpClient);\n-       System.out.println(\"keepAliveCache\" + keepAliveCache);\n-       System.out.println(\"SERVER URL:\" + httpUrlConnection.getURL());\n-       \/*\n-        * create KeepAliveKey(URL,Object) object and compare created KeepAliveKey and\n-        * existing using equals() method: KeepAliveKey.equals()\n-        *\/\n-       Class keepAliveKeyClass = Class.forName(\"sun.net.www.http.KeepAliveKey\");\n-       \/\/    System.out.println(\"keepAliveKeyClass=\" + keepAliveKeyClass);\n-       Constructor keepAliveKeyClassconstructor = keepAliveKeyClass.getDeclaredConstructors()[0];\n-       keepAliveKeyClassconstructor.setAccessible(true);\n-       Object expectedKeepAliveKey = keepAliveKeyClassconstructor.newInstance(httpUrlConnection.getURL(), null);\n-       System.out.println(\"ExpectedKeepAliveKey=\" + expectedKeepAliveKey);\n-       Object clientVectorObjectInMap = keepAliveCache.get(expectedKeepAliveKey);\n-       System.out.println(\"ClientVector=\" + clientVectorObjectInMap);\n-       HttpClient httpClientCached = keepAliveCache.get(httpUrlConnection.getURL(), null);\n-       System.out.println(\"HttpClient in Cache:\" + httpClientCached);\n-       if(httpClientCached != null) {\n-            System.out.println(\"KeepingAlive:\" + httpClientCached.isKeepingAlive());\n-            System.out.println(\"UsingProxy:\" + httpClientCached.getUsingProxy());\n-            System.out.println(\"ProxiedHost:\" + httpClientCached.getProxyHostUsed());\n-            System.out.println(\"ProxiedPort:\" + httpClientCached.getProxyPortUsed());\n-            System.out.println(\"ProxyPortUsingSystemProperty:\" + System.getProperty(\"http.proxyPort\"));\n-            System.out.println(\"ProxyHostUsingSystemProperty:\" + System.getProperty(\"http.proxyHost\"));\n-            System.out.println(\"http.keepAlive.time.server=\" + System.getProperty(\"http.keepAlive.time.server\"));\n-            System.out.println(\"http.keepAlive.time.proxy=\" + System.getProperty(\"http.keepAlive.time.proxy\"));\n-            Class clientVectorClass = Class.forName(\"sun.net.www.http.KeepAliveCache$ClientVector\");\n-            \/\/      System.out.println(\"clientVectorClass=\" + clientVectorClass);\n-            Field napField = clientVectorClass.getDeclaredField(\"nap\");\n-            napField.setAccessible(true);\n-            int napValue = (int) napField.get(clientVectorObjectInMap);\n-            int actualValue = napValue \/ 1000;\n-            \/\/      System.out.println(\"nap=\" + napValue \/ 1000);\n-            System.out.printf(\"ExpectedOutput:%d ActualOutput:%d \", expectedValues[scenarioNumber], actualValue);\n-            System.out.println();\n-            if (expectedValues[scenarioNumber] != actualValue) {\n-                throw new RuntimeException(\n-                            \"ExpectedOutput:\" + expectedValues[scenarioNumber] + \" ActualOutput: \" + actualValue);\n+    private void runScenario(int scenarioNumber) throws Exception {\n+        System.out.println(\"Testing scenario \" + scenarioNumber);\n+        System.out.println(\"Server: \" + getServerScenario(scenarioNumber));\n+        System.out.println(\"Client: \" + getClientScenario(scenarioNumber));\n+        System.out.println(\"Expected Cache Time: \" + (expectedValues[scenarioNumber] == 0 ? NOT_CACHED : expectedValues[scenarioNumber]));\n+        System.out.println();\n+        Thread serverThread = startServer(scenarioNumber);\n+        connectToServerURL(scenarioNumber);\n+        serverThread.join();\n+        System.out.println();\n+    }\n+\n+    private static void collectPropertyValue(List<String> props, String prop) {\n+        var val = System.getProperty(prop);\n+        if (val != null) {\n+            props.add(prop + \"=\" + val);\n+        }\n+    }\n+\n+    private static void initialize(int scenarioNumber) throws Exception {\n+        List<String> props = new ArrayList<>();\n+\n+        collectPropertyValue(props, \"http.keepAlive.time.server\");\n+        collectPropertyValue(props, \"http.keepAlive.time.proxy\");\n+        collectPropertyValue(props, \"http.proxyPort\");\n+        collectPropertyValue(props, \"http.proxyHost\");\n+\n+        if (props.size() > 0) {\n+            System.out.println(\"Existing System Properties:\");\n+            for (String prop : props) {\n+                System.out.println(prop);\n@@ -1246,7 +930,10 @@\n-        } else {\n-            \/\/executed when value is not cached.\n-            String expected = expectedValues[scenarioNumber] == 0 ? NOT_CACHED\n-                    : String.valueOf(expectedValues[scenarioNumber]);\n-            System.out.println(\"ExpectedOutput:\" + expected + \" ActualOutput:\" + NOT_CACHED);\n-            if (!expected.equalsIgnoreCase(NOT_CACHED)) {\n-                    throw new RuntimeException(\"ExpectedOutput:\" + expected + \" ActualOutput:\" + NOT_CACHED);\n+        }\n+        System.setProperty(\"java.net.useSystemProxies\", \"false\");\n+        System.clearProperty(\"http.keepAlive.time.server\");\n+        System.clearProperty(\"http.keepAlive.time.proxy\");\n+\n+        \/\/ fetch clientScenario and set system properties\n+        if (!getClientScenario(scenarioNumber).equalsIgnoreCase(NI)) {\n+            for (String clientScenarioString : getClientScenario(scenarioNumber).split(CLIENT_SEPARATOR)) {\n+                String[] kv = clientScenarioString.split(\"=\");\n+                System.setProperty(kv[0], kv[1]);\n@@ -1254,1 +941,15 @@\n-       }\n+        }\n+\n+        Field keepAliveField = Class.forName(\"sun.net.www.http.HttpClient\").getDeclaredField(\"kac\");\n+        keepAliveField.setAccessible(true);\n+        keepAliveCache = (KeepAliveCache) keepAliveField.get(null);\n+        System.out.println(\"KeepAliveCache: \" + keepAliveCache);\n+        Class<?> keepAliveKeyClass = Class.forName(\"sun.net.www.http.KeepAliveKey\");\n+        keepAliveKeyClassconstructor = keepAliveKeyClass.getDeclaredConstructors()[0];\n+        keepAliveKeyClassconstructor.setAccessible(true);\n+\n+        Logger logger = Logger.getLogger(\"sun.net.www.protocol.http.HttpURLConnection\");\n+        logger.setLevel(Level.FINEST);\n+        ConsoleHandler h = new ConsoleHandler();\n+        h.setLevel(Level.FINEST);\n+        logger.addHandler(h);\n@@ -1261,7 +962,15 @@\n-        logger.setLevel(Level.FINEST);\n-        ConsoleHandler h = new ConsoleHandler();\n-        h.setLevel(Level.FINEST);\n-        logger.addHandler(h);\n-        KeepAliveTest keepAliveTest = new KeepAliveTest();\n-        if (args.length != 0) {\n-            keepAliveTest.startScenario(Integer.valueOf(args[0]));\n+        if (args[0].startsWith(\"c\")) {\n+            \/\/ all subtests of a specific client scenario\n+            int clientScenarioNumber = Integer.valueOf(args[0].substring(1));\n+            if (clientScenarioNumber < 0 || clientScenarioNumber > 15) {\n+                throw new IllegalArgumentException(\"Client Scenario \" + clientScenarioNumber + \" does not exist\");\n+            }\n+            initialize(clientScenarioNumber);\n+            for (int i = clientScenarioNumber; i < 160; i += 16) {\n+                new KeepAliveTest().runScenario(i);\n+            }\n+        } else {\n+            \/\/ an individual test scenario\n+            int scenarioNumber = Integer.valueOf(args[0]);\n+            initialize(scenarioNumber);\n+            new KeepAliveTest().runScenario(scenarioNumber);\n@@ -1269,2 +978,0 @@\n-        \/\/ make main thread wait until server and client is completed.\n-        keepAliveTest.countDownLatch.await();\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/KeepAliveTest.java","additions":259,"deletions":552,"binary":false,"changes":811,"status":"modified"}]}