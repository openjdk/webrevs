{"files":[{"patch":"@@ -270,3 +270,0 @@\n- *\n- * Linker implementations may optionally impose additional platform-specific constraints\n- * on functional descriptors despite being <em>well-formed<\/em>.\n@@ -274,7 +271,8 @@\n- * Linker implementations may optionally support additional layouts, such as\n- * <em>packed<\/em> struct layouts. A packed struct is a struct in which there is\n- * at least one member layout {@code L} that has an alignment constraint less strict\n- * than its natural alignment. This allows to avoid padding between member layouts,\n- * as well as avoiding padding at the end of the struct layout. For example:\n-\n- * {@snippet lang = java:\n+ * Well-formed layouts in function descriptions consumed by a native linker constitutes\n+ * a necessary, but not sufficient, requirement for acceptance. For example, some\n+ * native linkers may reject <em>packed<\/em> struct layouts. A packed struct is a struct\n+ * in which there is at least one member layout {@code L} that has an alignment constraint\n+ * less strict than its natural alignment. This allows to avoid padding between\n+ * member layouts, as well as avoiding padding at the end of the struct layout.\n+ * For example:\n+  * {@snippet lang = java:\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"}]}