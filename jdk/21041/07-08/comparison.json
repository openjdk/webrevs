{"files":[{"patch":"@@ -245,1 +245,1 @@\n- * <em>well-formed<\/em> layouts. More formally, a layout `L`is well-formed if:\n+ * <em>well-formed<\/em> layouts. More formally, a layout `L` is well-formed if:\n@@ -271,1 +271,1 @@\n- * Well-formed layouts in function descriptions consumed by a native linker constitutes\n+ * Well-formed layouts in function descriptions consumed by a native linker constitute\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-    static private void checkGroup(GroupLayout gl, long maxUnpaddedOffset) {\n+    private static void checkGroup(GroupLayout gl, long maxUnpaddedOffset) {\n@@ -259,1 +259,1 @@\n-    static void assertIsAlignedBy(GroupLayout gl, long index, PaddingLayout padding, MemoryLayout element) {\n+    private static void assertIsAlignedBy(GroupLayout gl, long index, PaddingLayout padding, MemoryLayout element) {\n@@ -273,1 +273,1 @@\n-    static String inMessage(GroupLayout gl) {\n+    private static String inMessage(GroupLayout gl) {\n@@ -282,1 +282,1 @@\n-    static private void checkMemberOffset(StructLayout parent, MemoryLayout memberLayout,\n+    private static void checkMemberOffset(StructLayout parent, MemoryLayout memberLayout,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-        assertThrows(IllegalArgumentException.class, () ->linker.downcallHandle(fd));\n+        assertThrows(IllegalArgumentException.class, () -> linker.downcallHandle(fd));\n","filename":"test\/jdk\/java\/foreign\/TestLinker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}