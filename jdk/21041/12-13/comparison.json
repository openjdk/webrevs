{"files":[{"patch":"@@ -191,0 +191,1 @@\n+            PaddingLayout preceedingPadding = null;\n@@ -198,1 +199,1 @@\n-                if (!(member instanceof PaddingLayout)) {\n+                if (!(member instanceof PaddingLayout pl)) {\n@@ -200,0 +201,11 @@\n+                    if (preceedingPadding != null) {\n+                        assertIsAlignedBy(sl, preceedingPadding, member);\n+                        preceedingPadding = null;\n+                    }\n+                } else {\n+                    if (preceedingPadding != null) {\n+                        throw new IllegalArgumentException(\"The padding layout \" + pl +\n+                                \" was preceded by another padding layout \" + preceedingPadding +\n+                                inMessage(sl));\n+                    }\n+                    preceedingPadding = pl;\n@@ -202,0 +214,1 @@\n+            checkNotAllPadding(sl);\n@@ -210,0 +223,2 @@\n+                } else {\n+                    throw new IllegalArgumentException(\"Superfluous padding \" + member + inMessage(ul));\n@@ -223,24 +238,4 @@\n-    \/\/ check elements are not all padding layouts and for trailing padding\n-    private static void checkGroup(GroupLayout gl, long maxUnpaddedOffset) {\n-        PaddingLayout preceedingPadding = null;\n-        List<MemoryLayout> memberLayouts = gl.memberLayouts();\n-        for (int i = 0; i < memberLayouts.size(); i++) {\n-            MemoryLayout current = memberLayouts.get(i);\n-            if (current instanceof PaddingLayout pl) {\n-                if (preceedingPadding != null) {\n-                    throw new IllegalArgumentException(\"The padding layout \" + pl +\n-                            \" was preceded by another padding layout \" + preceedingPadding +\n-                            inMessage(gl));\n-                }\n-                preceedingPadding = pl;\n-            } else {\n-                if (preceedingPadding != null) {\n-                    assertIsAlignedBy(gl, i, preceedingPadding, current);\n-                    preceedingPadding = null;\n-                }\n-            }\n-        }\n-        \/\/ Check an optional trailing padding in a struct layout used to align any previous members\n-        if (gl instanceof StructLayout && (gl.memberLayouts().size() > 1) &&\n-                gl.memberLayouts().getLast() instanceof PaddingLayout pl) {\n-            assertIsAlignedBy(null, 0, pl, gl);\n+    \/\/ check elements are not all padding layouts\n+    private static void checkNotAllPadding(StructLayout sl) {\n+        if (!sl.memberLayouts().isEmpty() && sl.memberLayouts().stream().allMatch(e -> e instanceof PaddingLayout)) {\n+            throw new IllegalArgumentException(\"Layout '\" + sl + \"' is non-empty and only has padding layouts\");\n@@ -248,0 +243,1 @@\n+    }\n@@ -249,3 +245,2 @@\n-        if (!gl.memberLayouts().isEmpty() && gl.memberLayouts().stream().allMatch(e -> e instanceof PaddingLayout)) {\n-            throw new IllegalArgumentException(\"Layout '\" + gl + \"' is non-empty and only has padding layouts\");\n-        }\n+    \/\/ check trailing padding\n+    private static void checkGroup(GroupLayout gl, long maxUnpaddedOffset) {\n@@ -259,1 +254,1 @@\n-    private static void assertIsAlignedBy(GroupLayout gl, long index, PaddingLayout padding, MemoryLayout element) {\n+    private static void assertIsAlignedBy(StructLayout gl, PaddingLayout padding, MemoryLayout element) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java","additions":24,"deletions":29,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -206,0 +206,9 @@\n+    @Test\n+    public void paddingUnion() {\n+        Linker linker = Linker.nativeLinker();\n+        var union = MemoryLayout.unionLayout(MemoryLayout.paddingLayout(5), ValueLayout.JAVA_INT);\n+        var fd = FunctionDescriptor.of(union, union, union);\n+        var e = expectThrows(IllegalArgumentException.class, () -> linker.downcallHandle(fd));\n+        assertEquals(e.getMessage(), \"Superfluous padding x5 in [x5|i4]\");\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLinker.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}