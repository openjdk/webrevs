{"files":[{"patch":"@@ -263,1 +263,3 @@\n- *      its non-padding layout elements, or to satisfy (2).<\/li>\n+ *      its non-padding layout elements, or to satisfy (2), and<\/li>\n+ * <li>{@code G} is {@code G.memberLayouts().isEmpty()} or (at the same time) not all\n+ * elements are padding layouts.<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -225,2 +225,2 @@\n-        if (gl.memberLayouts().stream().allMatch(e -> e instanceof PaddingLayout)) {\n-            throw new IllegalArgumentException(\"Layout '\" + gl + \"' only has padding layouts\");\n+        if (!gl.memberLayouts().isEmpty() && gl.memberLayouts().stream().allMatch(e -> e instanceof PaddingLayout)) {\n+            throw new IllegalArgumentException(\"Layout '\" + gl + \"' is non-empty and only has padding layouts\");\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-        assertTrue(x.getMessage().contains(\"only has padding layouts\"));\n+        assertTrue(x.getMessage().contains(\"is non-empty and only has padding layouts\"));\n","filename":"test\/jdk\/java\/foreign\/TestLinker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}