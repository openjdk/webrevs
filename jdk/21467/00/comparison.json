{"files":[{"patch":"@@ -446,1 +446,0 @@\n-        private boolean eof = false;\n@@ -473,16 +472,0 @@\n-        \/\/ Override fill() method to provide an extra \"dummy\" byte\n-        \/\/ at the end of the input stream. This is required when\n-        \/\/ using the \"nowrap\" Inflater option.\n-        protected void fill() throws IOException {\n-            if (eof) {\n-                throw new EOFException(\"Unexpected end of ZLIB input stream\");\n-            }\n-            len = in.read(buf, 0, buf.length);\n-            if (len == -1) {\n-                buf[0] = 0;\n-                len = 1;\n-                eof = true;\n-            }\n-            inf.setInput(buf, 0, len);\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2465,18 +2465,0 @@\n-                \/\/ Override fill() method to provide an extra \"dummy\" byte\n-                \/\/ at the end of the input stream. This is required when\n-                \/\/ using the \"nowrap\" Inflater option. (it appears the new\n-                \/\/ zlib in 7 does not need it, but keep it for now)\n-                protected void fill() throws IOException {\n-                    if (eof) {\n-                        throw new EOFException(\n-                            \"Unexpected end of ZLIB input stream\");\n-                    }\n-                    len = this.in.read(buf, 0, buf.length);\n-                    if (len == -1) {\n-                        buf[0] = 0;\n-                        len = 1;\n-                        eof = true;\n-                    }\n-                    inf.setInput(buf, 0, len);\n-                }\n-                private boolean eof;\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"}]}