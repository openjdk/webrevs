{"files":[{"patch":"@@ -1910,0 +1910,3 @@\n+    \/\/ We should not be here if we have old_trip_count == max_juint\n+    \/\/ it would make trip_count == 2^31 which causes overflow and the situation is overall weird\n+    assert(old_trip_count < max_juint, \"sanity\");\n@@ -1923,1 +1926,1 @@\n-    assert(trip_count > 0 && (julong)trip_count <= (julong)1 << (sizeof(juint)*BitsPerByte-1), \"sanity\");\n+    assert(trip_count > 0 && (julong)trip_count <= (julong)max_juint\/2, \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356647\n+ * @summary C2's unrolling code has a too strict assert when a counted loop's range as wide as int's.\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.loopopts.UnrollWideLoopHitsTooStrictAssert::test -Xcomp\n+ *                   compiler.loopopts.UnrollWideLoopHitsTooStrictAssert\n+ * @run main compiler.loopopts.UnrollWideLoopHitsTooStrictAssert\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class UnrollWideLoopHitsTooStrictAssert {\n+    public static void main(String[] args) {\n+        test(true);\n+    }\n+\n+    private static long test(boolean flag) {\n+        long x = 0;\n+        for (int i = Integer.MIN_VALUE; i < Integer.MAX_VALUE; ++i) {\n+            x += i;\n+            if (flag) {\n+                break;\n+            }\n+        }\n+        return x;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/UnrollWideLoopHitsTooStrictAssert.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}