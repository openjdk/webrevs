{"files":[{"patch":"@@ -0,0 +1,55 @@\n+import java.awt.EventQueue; \r\n+import java.awt.event.ActionEvent; \r\n+import java.awt.event.ActionListener; \r\n+\r\n+import javax.swing.*; \r\n+\r\n+public class Bug001 extends JFrame \r\n+{ \r\n+  final JMenuBar menuBar = new JMenuBar (); \r\n+  final JMenu fileMenu = new JMenu (\"File\"); \r\n+\r\n+  final JMenuItem debuggingItem = new JCheckBoxMenuItem (\"Debugging\"); \r\n+  \/\/ final JMenuItem debuggingItem = new JMenuItem (\"Debugging\"); \r\n+\r\n+  public Bug001 () \r\n+  { \r\n+    super (\"Bug001\"); \r\n+\r\n+    menuBar.add (fileMenu); \r\n+    fileMenu.add (debuggingItem); \r\n+    debuggingItem.setAccelerator (KeyStroke.getKeyStroke (\"meta D\")); \r\n+    setJMenuBar (menuBar); \r\n+\r\n+    debuggingItem.addActionListener (new ActionListener () \r\n+    { \r\n+      @Override \r\n+      public void actionPerformed (ActionEvent e) \r\n+      { \r\n+        System.out.printf (\"modifiers: %d, isSelected: %s%n\", e.getModifiers (), \r\n+            ((JMenuItem) e.getSource ()).isSelected ()); \r\n+      } \r\n+    }); \r\n+  } \r\n+\r\n+  public static void main (String[] args) \r\n+  { \r\n+    EventQueue.invokeLater (new Runnable () \r\n+    { \r\n+      @Override \r\n+      public void run () \r\n+      { \r\n+        try \r\n+        { \r\n+          UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ()); \r\n+          System.setProperty (\"apple.laf.useScreenMenuBar\", \"true\"); \r\n+          new Bug001 ().setVisible (true); \r\n+        } \r\n+        catch (Exception e) \r\n+        { \r\n+          e.printStackTrace (); \r\n+        } \r\n+      } \r\n+    }); \r\n+  } \r\n+} \r\n","filename":"test\/jdk\/java\/awt\/Checkbox\/AcceleratorCallsActionListenerTwice\/Bug001.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.PopupMenu;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 6401956\n+ * @summary The right mark of the CheckboxMenu item is broken\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AppearanceIfLargeFont\n+ *\/\n+\n+public class AppearanceIfLargeFont extends Frame {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) Make sure that font-size is large.\n+               You could change this using 'Appearance' dialog.\n+            2) Press button 'Press'\n+               You will see a menu item with check-mark.\n+            3) If check-mark is correctly painted then the test passed.\n+               Otherwise, test failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"AppearanceIfLargeFont\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(AppearanceIfLargeFont::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public AppearanceIfLargeFont() {\n+        createComponents();\n+\n+        setSize(200, 200);\n+        validate();\n+    }\n+\n+    void createComponents() {\n+        final Button press = new Button(\"Press\");\n+        final PopupMenu popup = new PopupMenu();\n+        press.add(popup);\n+        add(press);\n+\n+        CheckboxMenuItem item = new CheckboxMenuItem(\"CheckboxMenuItem\", true);\n+        popup.add(item);\n+\n+        press.addActionListener(\n+                new ActionListener() {\n+                    public void actionPerformed(ActionEvent ae) {\n+                        popup.show(press, press.getSize().width, 0);\n+                    }\n+                }\n+        );\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/AppearanceIfLargeFont.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.PopupMenu;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+\/*\n+ * @test\n+ * @bug 4814163 5005195\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests events fired by CheckboxMenuItem\n+ * @run main\/manual CheckboxMenuItemEventsTest\n+*\/\n+\n+public class CheckboxMenuItemEventsTest extends Frame implements ActionListener {\n+    Button trigger;\n+    PopupMenu popup;\n+    TextArea ta;\n+\n+    class Listener implements ItemListener, ActionListener {\n+        public void itemStateChanged(ItemEvent e) {\n+            ta.append(\"CORRECT: ItemEvent fired\\n\");\n+        }\n+\n+        public void actionPerformed(ActionEvent e) {\n+            ta.append(\"ERROR: ActionEvent fired\\n\");\n+        }\n+    }\n+\n+    Listener listener = new Listener();\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press button to invoke popup menu\n+            When you press checkbox menu item\n+            Item state should toggle (on\/off).\n+            ItemEvent should be displayed in log below.\n+            And ActionEvent should not be displayed\n+            Press PASS if ItemEvents are generated\n+            and ActionEvents are not, FAIL Otherwise.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"CheckboxMenuItemEventsTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(CheckboxMenuItemEventsTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public CheckboxMenuItemEventsTest() {\n+        CheckboxMenuItem i1 = new CheckboxMenuItem(\"CheckBoxMenuItem 1\");\n+        CheckboxMenuItem i2 = new CheckboxMenuItem(\"CheckBoxMenuItem 2\");\n+        Panel p1 = new Panel();\n+        Panel p2 = new Panel();\n+\n+        setLayout(new BorderLayout());\n+        ta = new TextArea();\n+        p2.add(ta);\n+\n+        trigger = new Button(\"menu\");\n+        trigger.addActionListener(this);\n+\n+        popup = new PopupMenu();\n+\n+        i1.addItemListener(listener);\n+        i1.addActionListener(listener);\n+        popup.add(i1);\n+        i2.addItemListener(listener);\n+        i2.addActionListener(listener);\n+        popup.add(i2);\n+\n+        trigger.add(popup);\n+\n+        p1.add(trigger);\n+\n+        add(p1, BorderLayout.NORTH);\n+        add(p2, BorderLayout.SOUTH);\n+\n+        pack();\n+        validate();\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        if (e.getSource() == (Object) trigger) {\n+            popup.show(trigger, trigger.getSize().width, 0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxMenuItemEventsTest.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+\n+\/*\n+ * @test\n+ * @bug 4136190\n+ * @requires (os.family == \"windows\")\n+ * @summary Recursive validation calls would cause major USER resource leakage\n+ * @key headful\n+ * @run main\/timeout=30 ValidateTest\n+ *\/\n+\n+public class ValidateTest {\n+    static Frame frame;\n+\n+    public static void main(String args[]) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createGUI();\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createGUI() {\n+        frame = new Frame(\"Test for 4136190 : JVM and win95 resource leakage issues\");\n+        frame.setLayout(new GridLayout(1, 1));\n+        MyPanel panel = new MyPanel();\n+        frame.add(panel);\n+        frame.invalidate();\n+        frame.validate();\n+        frame.setSize(500, 400);\n+        frame.setVisible(true);\n+    }\n+\n+    static class MyPanel extends Panel {\n+        int recurseCounter = 0;\n+\n+        public void validate() {\n+            recurseCounter++;\n+            if (recurseCounter >= 100) {\n+                return;\n+            }\n+            getParent().validate();\n+            super.validate();\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/Container\/ValidateTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -1,98 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.Button;\n-import java.awt.Dialog;\n-import java.awt.Frame;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.WindowEvent;\n-import java.awt.event.WindowAdapter;\n-\n-\/*\n- * @test\n- * @bug 4336913\n- * @summary On Win32, disable parent window controls while modal dialog is being created.\n- * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual ClosingParentTest\n- *\/\n-\n-public class ClosingParentTest {\n-    private static final String INSTRUCTIONS = \"\"\"\n-            When the test starts, you will see a Frame with a Button\n-            titled 'Show modal dialog with delay'. Press this button\n-            and before the modal Dialog is shown, try to close the\n-            Frame using X button or system menu for windowing systems\n-            which don't provide X button in Window decorations. The\n-            delay before Dialog showing is 5 seconds.\n-            If in test output you see message about WINDOW_CLOSING\n-            being dispatched, then test fails. If no such message\n-            is printed, the test passes.\n-            \"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        PassFailJFrame.builder()\n-                .title(\"ClosingParentTest\")\n-                .instructions(INSTRUCTIONS)\n-                .columns(35)\n-                .logArea()\n-                .testUI(ClosingParentTest::createGUI)\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public static Frame createGUI() {\n-        Frame frame = new Frame(\"Main Frame\");\n-        Dialog dialog = new Dialog(frame, true);\n-\n-        Button button = new Button(\"Show modal dialog with delay\");\n-        button.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                try {\n-                    Thread.currentThread().sleep(5000);\n-                } catch (InterruptedException x) {\n-                    x.printStackTrace();\n-                }\n-\n-                dialog.setVisible(true);\n-            }\n-        });\n-        frame.add(button);\n-        frame.pack();\n-        frame.addWindowListener(new WindowAdapter() {\n-            public void windowClosing(WindowEvent e) {\n-                PassFailJFrame.log(\"WINDOW_CLOSING dispatched on the frame\");\n-            }\n-        });\n-\n-        dialog.setSize(100, 100);\n-        dialog.addWindowListener(new WindowAdapter() {\n-            public void windowClosing(WindowEvent e) {\n-                dialog.dispose();\n-            }\n-        });\n-\n-        return frame;\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/ClosingParentTest.java","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.FileDialog;\n-import java.awt.Frame;\n-import java.awt.event.WindowAdapter;\n-import java.awt.event.WindowEvent;\n-\n-\/*\n- * @test\n- * @bug 4177831\n- * @summary solaris: default FileDialog title is not empty\n- * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual FileDialogEmptyTitleTest\n- *\/\n-\n-public class FileDialogEmptyTitleTest {\n-    private static final String INSTRUCTIONS = \"\"\"\n-            Test passes if title of file dialog is empty,\n-            otherwise test failed.\n-            \"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        PassFailJFrame.builder()\n-                .title(\"FileDialogEmptyTitleTest\")\n-                .instructions(INSTRUCTIONS)\n-                .columns(35)\n-                .testUI(FileDialogEmptyTitleTest::createGUI)\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public static FileDialog createGUI() {\n-        Frame frame = new Frame(\"invisible dialog owner\");\n-        FileDialog fileDialog = new FileDialog(frame);\n-        fileDialog.addWindowListener(new WindowAdapter() {\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                super.windowClosing(e);\n-                if (frame != null) {\n-                    frame.dispose();\n-                }\n-            }\n-        });\n-        return fileDialog;\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogEmptyTitleTest.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.BorderLayout;\n-import java.awt.Button;\n-import java.awt.FileDialog;\n-import java.awt.Frame;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-\/*\n- * @test\n- * @bug 4859390\n- * @requires (os.family == \"windows\")\n- * @summary Verify that FileDialog matches the look\n-    of the native windows FileDialog\n- * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual FileDialogUIUpdate\n- *\/\n-\n-public class FileDialogUIUpdate extends Frame {\n-    private static final String INSTRUCTIONS = \"\"\"\n-            Click the button to show the FileDialog. Then open the Paint\n-            application (usually found in Program Files->Accessories).\n-            Select File->Open from Paint to display a native Open dialog.\n-            Compare the native dialog to the AWT FileDialog.\n-            Specifically, confirm that the Places Bar icons are along the left side (or\n-            not, if the native dialog doesn't have them), and that the\n-            dialogs are both resizable (or not).\n-            If the file dialogs both look the same press Pass.  If not,\n-            press Fail.\n-            \"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        PassFailJFrame.builder()\n-                .title(\"FileDialogUIUpdate\")\n-                .instructions(INSTRUCTIONS)\n-                .columns(35)\n-                .testUI(FileDialogUIUpdate::new)\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public FileDialogUIUpdate() {\n-        final FileDialog fd = new FileDialog(new Frame(\"FileDialogUIUpdate frame\"),\n-                \"Open FileDialog\");\n-        Button showButton = new Button(\"Show FileDialog\");\n-        setLayout(new BorderLayout());\n-\n-        fd.setDirectory(\"c:\/\");\n-        showButton.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                fd.setVisible(true);\n-            }\n-        });\n-\n-        add(showButton);\n-        setSize(200, 200);\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogUIUpdate.java","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.Button;\n-import java.awt.Dialog;\n-import java.awt.Frame;\n-import java.awt.Menu;\n-import java.awt.MenuBar;\n-import java.awt.MenuItem;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-\/*\n- * @test\n- * @bug 4070085\n- * @summary Java program locks up X server\n- * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual MenuAndModalDialogTest\n- *\/\n-\n-public class MenuAndModalDialogTest {\n-    static Frame frame;\n-    private static final String INSTRUCTIONS = \"\"\"\n-            Click the button to begin the test.\n-            1. Bring up the File Menu and leave it up.\n-            2. In a few seconds, the modal dialog will appear.\n-            3. Verify that your system does not lock up when you push the \"OK\" button.\n-            \"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        PassFailJFrame.builder()\n-                .title(\"MenuAndModalDialogTest\")\n-                .instructions(INSTRUCTIONS)\n-                .columns(35)\n-                .testUI(MenuAndModalDialogTest::createFrame)\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    public static Frame createFrame() {\n-        frame = new Frame(\"MenuAndModalDialogTest frame\");\n-        Button button = new Button(\"start test\");\n-        button.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                \/\/ Allow time to pop up the menu\n-                try {\n-                    Thread.currentThread().sleep(5000);\n-                } catch (InterruptedException exception) {\n-                }\n-                createDialog();\n-            }\n-        });\n-        frame.add(button);\n-\n-        MenuBar menuBar = new MenuBar();\n-        frame.setMenuBar(menuBar);\n-\n-        Menu file = new Menu(\"File\");\n-        menuBar.add(file);\n-\n-        MenuItem menuItem = new MenuItem(\"A Menu Entry\");\n-        file.add(menuItem);\n-\n-        frame.setSize(200, 200);\n-        frame.setLocationRelativeTo(null);\n-        return frame;\n-    }\n-\n-    public static void createDialog() {\n-        Dialog dialog = new Dialog(frame);\n-\n-        Button button = new Button(\"OK\");\n-        dialog.add(button);\n-        button.addActionListener(\n-                new ActionListener() {\n-                    public void actionPerformed(ActionEvent e) {\n-                        dialog.dispose();\n-                    }\n-                }\n-        );\n-\n-        dialog.setSize(200, 200);\n-        dialog.setModal(true);\n-        dialog.setVisible(true);\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Dialog\/MenuAndModalDialogTest.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"}]}