{"files":[{"patch":"@@ -0,0 +1,55 @@\n+import java.awt.EventQueue; \r\n+import java.awt.event.ActionEvent; \r\n+import java.awt.event.ActionListener; \r\n+\r\n+import javax.swing.*; \r\n+\r\n+public class Bug001 extends JFrame \r\n+{ \r\n+  final JMenuBar menuBar = new JMenuBar (); \r\n+  final JMenu fileMenu = new JMenu (\"File\"); \r\n+\r\n+  final JMenuItem debuggingItem = new JCheckBoxMenuItem (\"Debugging\"); \r\n+  \/\/ final JMenuItem debuggingItem = new JMenuItem (\"Debugging\"); \r\n+\r\n+  public Bug001 () \r\n+  { \r\n+    super (\"Bug001\"); \r\n+\r\n+    menuBar.add (fileMenu); \r\n+    fileMenu.add (debuggingItem); \r\n+    debuggingItem.setAccelerator (KeyStroke.getKeyStroke (\"meta D\")); \r\n+    setJMenuBar (menuBar); \r\n+\r\n+    debuggingItem.addActionListener (new ActionListener () \r\n+    { \r\n+      @Override \r\n+      public void actionPerformed (ActionEvent e) \r\n+      { \r\n+        System.out.printf (\"modifiers: %d, isSelected: %s%n\", e.getModifiers (), \r\n+            ((JMenuItem) e.getSource ()).isSelected ()); \r\n+      } \r\n+    }); \r\n+  } \r\n+\r\n+  public static void main (String[] args) \r\n+  { \r\n+    EventQueue.invokeLater (new Runnable () \r\n+    { \r\n+      @Override \r\n+      public void run () \r\n+      { \r\n+        try \r\n+        { \r\n+          UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ()); \r\n+          System.setProperty (\"apple.laf.useScreenMenuBar\", \"true\"); \r\n+          new Bug001 ().setVisible (true); \r\n+        } \r\n+        catch (Exception e) \r\n+        { \r\n+          e.printStackTrace (); \r\n+        } \r\n+      } \r\n+    }); \r\n+  } \r\n+} \r\n","filename":"test\/jdk\/java\/awt\/Checkbox\/AcceleratorCallsActionListenerTwice\/Bug001.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.PopupMenu;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 6401956\n+ * @summary The right mark of the CheckboxMenu item is broken\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual AppearanceIfLargeFont\n+ *\/\n+\n+public class AppearanceIfLargeFont extends Frame {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) Make sure that font-size is large.\n+               You could change this using 'Appearance' dialog.\n+            2) Press button 'Press'\n+               You will see a menu item with check-mark.\n+            3) If check-mark is correctly painted then the test passed.\n+               Otherwise, test failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"AppearanceIfLargeFont\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(AppearanceIfLargeFont::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public AppearanceIfLargeFont() {\n+        createComponents();\n+\n+        setSize(200, 200);\n+        validate();\n+    }\n+\n+    void createComponents() {\n+        final Button press = new Button(\"Press\");\n+        final PopupMenu popup = new PopupMenu();\n+        press.add(popup);\n+        add(press);\n+\n+        CheckboxMenuItem item = new CheckboxMenuItem(\"CheckboxMenuItem\", true);\n+        popup.add(item);\n+\n+        press.addActionListener(\n+                new ActionListener() {\n+                    public void actionPerformed(ActionEvent ae) {\n+                        popup.show(press, press.getSize().width, 0);\n+                    }\n+                }\n+        );\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/AppearanceIfLargeFont.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.PopupMenu;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+\/*\n+ * @test\n+ * @bug 4814163 5005195\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests events fired by CheckboxMenuItem\n+ * @run main\/manual CheckboxMenuItemEventsTest\n+*\/\n+\n+public class CheckboxMenuItemEventsTest extends Frame implements ActionListener {\n+    Button trigger;\n+    PopupMenu popup;\n+    TextArea ta;\n+\n+    class Listener implements ItemListener, ActionListener {\n+        public void itemStateChanged(ItemEvent e) {\n+            ta.append(\"CORRECT: ItemEvent fired\\n\");\n+        }\n+\n+        public void actionPerformed(ActionEvent e) {\n+            ta.append(\"ERROR: ActionEvent fired\\n\");\n+        }\n+    }\n+\n+    Listener listener = new Listener();\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press button to invoke popup menu\n+            When you press checkbox menu item\n+            Item state should toggle (on\/off).\n+            ItemEvent should be displayed in log below.\n+            And ActionEvent should not be displayed\n+            Press PASS if ItemEvents are generated\n+            and ActionEvents are not, FAIL Otherwise.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"CheckboxMenuItemEventsTest\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(CheckboxMenuItemEventsTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public CheckboxMenuItemEventsTest() {\n+        CheckboxMenuItem i1 = new CheckboxMenuItem(\"CheckBoxMenuItem 1\");\n+        CheckboxMenuItem i2 = new CheckboxMenuItem(\"CheckBoxMenuItem 2\");\n+        Panel p1 = new Panel();\n+        Panel p2 = new Panel();\n+\n+        setLayout(new BorderLayout());\n+        ta = new TextArea();\n+        p2.add(ta);\n+\n+        trigger = new Button(\"menu\");\n+        trigger.addActionListener(this);\n+\n+        popup = new PopupMenu();\n+\n+        i1.addItemListener(listener);\n+        i1.addActionListener(listener);\n+        popup.add(i1);\n+        i2.addItemListener(listener);\n+        i2.addActionListener(listener);\n+        popup.add(i2);\n+\n+        trigger.add(popup);\n+\n+        p1.add(trigger);\n+\n+        add(p1, BorderLayout.NORTH);\n+        add(p2, BorderLayout.SOUTH);\n+\n+        pack();\n+        validate();\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        if (e.getSource() == (Object) trigger) {\n+            popup.show(trigger, trigger.getSize().width, 0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxMenuItemEventsTest.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+\n+\/*\n+ * @test\n+ * @bug 4136190\n+ * @requires (os.family == \"windows\")\n+ * @summary Recursive validation calls would cause major USER resource leakage\n+ * @key headful\n+ * @run main\/timeout=30 ValidateTest\n+ *\/\n+\n+public class ValidateTest {\n+    static Frame frame;\n+\n+    public static void main(String args[]) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createGUI();\n+            });\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createGUI() {\n+        frame = new Frame(\"Test for 4136190 : JVM and win95 resource leakage issues\");\n+        frame.setLayout(new GridLayout(1, 1));\n+        MyPanel panel = new MyPanel();\n+        frame.add(panel);\n+        frame.invalidate();\n+        frame.validate();\n+        frame.setSize(500, 400);\n+        frame.setVisible(true);\n+    }\n+\n+    static class MyPanel extends Panel {\n+        int recurseCounter = 0;\n+\n+        public void validate() {\n+            recurseCounter++;\n+            if (recurseCounter >= 100) {\n+                return;\n+            }\n+            getParent().validate();\n+            super.validate();\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/Container\/ValidateTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}