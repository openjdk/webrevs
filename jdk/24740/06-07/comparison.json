{"files":[{"patch":"@@ -3243,1 +3243,2 @@\n-  const char* str = AOTCodeCache::add_C_string(msg);\n+  \/\/ Skip AOT caching C strings in scratch buffer.\n+  const char* str = (code_section()->scratch_emit()) ? msg : AOTCodeCache::add_C_string(msg);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -370,1 +370,2 @@\n-  const char* str = AOTCodeCache::add_C_string(msg);\n+  \/\/ Skip AOT caching C strings in scratch buffer.\n+  const char* str = (code_section()->scratch_emit()) ? msg : AOTCodeCache::add_C_string(msg);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-void* AOTCacheAccess::allocate_aot_code(size_t size) {\n+void* AOTCacheAccess::allocate_aot_code_region(size_t size) {\n@@ -44,1 +44,1 @@\n-size_t AOTCacheAccess::get_aot_code_size() {\n+size_t AOTCacheAccess::get_aot_code_region_size() {\n@@ -51,1 +51,1 @@\n-bool AOTCacheAccess::map_aot_code(ReservedSpace rs) {\n+bool AOTCacheAccess::map_aot_code_region(ReservedSpace rs) {\n","filename":"src\/hotspot\/share\/cds\/aotCacheAccess.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  static void* allocate_aot_code(size_t size) NOT_CDS_RETURN_(nullptr);\n+  static void* allocate_aot_code_region(size_t size) NOT_CDS_RETURN_(nullptr);\n@@ -42,1 +42,1 @@\n-  static size_t get_aot_code_size() NOT_CDS_RETURN_(0);\n+  static size_t get_aot_code_region_size() NOT_CDS_RETURN_(0);\n@@ -44,1 +44,1 @@\n-  static bool map_aot_code(ReservedSpace rs) NOT_CDS_RETURN_(false);\n+  static bool map_aot_code_region(ReservedSpace rs) NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/aotCacheAccess.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -406,7 +406,1 @@\n-    log_info(aot,codecache,init)(\"AOTCache is not specified - AOTAdapterCaching is ignored\");\n-  }\n-  if (!FLAG_IS_DEFAULT(AOTCodeMaxSize)) {\n-    if (!is_aligned(AOTCodeMaxSize, os::vm_allocation_granularity())) {\n-      AOTCodeMaxSize = align_up(AOTCodeMaxSize, os::vm_allocation_granularity());\n-      log_info(aot,codecache,init)(\"AOTCodeMaxSize is aligned up to %dK\", (int)(AOTCodeMaxSize\/K));\n-    }\n+    log_debug(aot,codecache,init)(\"AOTCache is not specified - AOTAdapterCaching is ignored\");\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -59,0 +60,1 @@\n+  log_info(aot, codecache, init)(\"Unable to use AOT Code Cache.\");\n@@ -67,0 +69,1 @@\n+  log_info(aot, codecache, exit)(\"Unable to create AOT Code Cache.\");\n@@ -70,0 +73,1 @@\n+static uint _max_aot_code_size = 0;\n@@ -71,1 +75,1 @@\n-  return (uint)AOTCodeMaxSize;\n+  return _max_aot_code_size;\n@@ -76,1 +80,1 @@\n-    log_info(aot, codecache, init)(\"AOT Cache is not used\");\n+    log_info(aot, codecache, init)(\"AOT Code Cache is not used: AOTCache is not specified.\");\n@@ -89,1 +93,1 @@\n-    log_info(aot, codecache, init)(\"AOT Cache is not used\");\n+    log_info(aot, codecache, init)(\"AOT Code Cache is not used: AOT Class Linking is not used.\");\n@@ -95,1 +99,8 @@\n-  size_t aot_code_size = is_using ? AOTCacheAccess::get_aot_code_size() : 0;\n+  _max_aot_code_size = AOTCodeMaxSize;\n+  if (!FLAG_IS_DEFAULT(AOTCodeMaxSize)) {\n+    if (!is_aligned(AOTCodeMaxSize, os::vm_allocation_granularity())) {\n+      _max_aot_code_size = align_up(AOTCodeMaxSize, os::vm_allocation_granularity());\n+      log_debug(aot,codecache,init)(\"Max AOT Code Cache size is aligned up to %uK\", (int)(max_aot_code_size()\/K));\n+    }\n+  }\n+  size_t aot_code_size = is_using ? AOTCacheAccess::get_aot_code_region_size() : 0;\n@@ -173,1 +184,1 @@\n-    size_t load_size = AOTCacheAccess::get_aot_code_size();\n+    size_t load_size = AOTCacheAccess::get_aot_code_region_size();\n@@ -180,1 +191,1 @@\n-    if (!AOTCacheAccess::map_aot_code(rs)) {\n+    if (!AOTCacheAccess::map_aot_code_region(rs)) {\n@@ -189,1 +200,1 @@\n-    log_info(aot, codecache, init)(\"Mapped %u bytes at address \" INTPTR_FORMAT \" at AOT Code Cache\", _load_size, p2i(_load_buffer));\n+    log_debug(aot, codecache, init)(\"Mapped %u bytes at address \" INTPTR_FORMAT \" at AOT Code Cache\", _load_size, p2i(_load_buffer));\n@@ -196,1 +207,5 @@\n-    log_info(aot, codecache, init)(\"Read header from AOT Code Cache\");\n+    log_info (aot, codecache, init)(\"Loaded %u AOT code entries from AOT Code Cache\", _load_header->entries_count());\n+    log_debug(aot, codecache, init)(\"  Adapters:  total=%u\", _load_header->adapters_count());\n+    log_debug(aot, codecache, init)(\"  All Blobs: total=%u\", _load_header->blobs_count());\n+    log_debug(aot, codecache, init)(\"  AOT code cache size: %u bytes\", _load_header->cache_size());\n+\n@@ -205,1 +220,1 @@\n-    log_info(aot, codecache, init)(\"Allocated store buffer at address \" INTPTR_FORMAT \" of size %d\", p2i(_store_buffer), max_aot_code_size());\n+    log_debug(aot, codecache, init)(\"Allocated store buffer at address \" INTPTR_FORMAT \" of size %u\", p2i(_store_buffer), max_aot_code_size());\n@@ -283,1 +298,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created by product VM, it can't be used by debug VM\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created by product VM, it can't be used by debug VM\");\n@@ -288,1 +303,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created by debug VM, it can't be used by product VM\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created by debug VM, it can't be used by product VM\");\n@@ -295,1 +310,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with different GC: %s vs current %s\", GCConfig::hs_err_name(aot_gc), GCConfig::hs_err_name());\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with different GC: %s vs current %s\", GCConfig::hs_err_name(aot_gc), GCConfig::hs_err_name());\n@@ -300,1 +315,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with UseCompressedOops = %s\", UseCompressedOops ? \"false\" : \"true\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with UseCompressedOops = %s\", UseCompressedOops ? \"false\" : \"true\");\n@@ -304,1 +319,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with UseCompressedClassPointers = %s\", UseCompressedClassPointers ? \"false\" : \"true\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with UseCompressedClassPointers = %s\", UseCompressedClassPointers ? \"false\" : \"true\");\n@@ -309,1 +324,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with JavaAssertions::systemClassDefault() = %s\", JavaAssertions::systemClassDefault() ? \"disabled\" : \"enabled\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with JavaAssertions::systemClassDefault() = %s\", JavaAssertions::systemClassDefault() ? \"disabled\" : \"enabled\");\n@@ -313,1 +328,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with JavaAssertions::userClassDefault() = %s\", JavaAssertions::userClassDefault() ? \"disabled\" : \"enabled\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with JavaAssertions::userClassDefault() = %s\", JavaAssertions::userClassDefault() ? \"disabled\" : \"enabled\");\n@@ -318,1 +333,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with EnableContended = %s\", EnableContended ? \"false\" : \"true\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with EnableContended = %s\", EnableContended ? \"false\" : \"true\");\n@@ -322,1 +337,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with RestrictContended = %s\", RestrictContended ? \"false\" : \"true\");\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with RestrictContended = %s\", RestrictContended ? \"false\" : \"true\");\n@@ -326,1 +341,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with CompressedOops::shift() = %d vs current %d\", _compressedOopShift, CompressedOops::shift());\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with CompressedOops::shift() = %d vs current %d\", _compressedOopShift, CompressedOops::shift());\n@@ -330,1 +345,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with CompressedKlassPointers::shift() = %d vs current %d\", _compressedKlassShift, CompressedKlassPointers::shift());\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with CompressedKlassPointers::shift() = %d vs current %d\", _compressedKlassShift, CompressedKlassPointers::shift());\n@@ -334,1 +349,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with ContendedPaddingWidth = %d vs current %d\", _contendedPaddingWidth, ContendedPaddingWidth);\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with ContendedPaddingWidth = %d vs current %d\", _contendedPaddingWidth, ContendedPaddingWidth);\n@@ -338,1 +353,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: it was created with ObjectAlignmentInBytes = %d vs current %d\", _objectAlignment, ObjectAlignmentInBytes);\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: it was created with ObjectAlignmentInBytes = %d vs current %d\", _objectAlignment, ObjectAlignmentInBytes);\n@@ -346,1 +361,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: different AOT Code version %d vs %d recorded in AOT Code header\", AOT_CODE_VERSION, _version);\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: different AOT Code version %d vs %d recorded in AOT Code header\", AOT_CODE_VERSION, _version);\n@@ -350,1 +365,1 @@\n-    log_info(aot, codecache, init)(\"AOT Code Cache disabled: AOT Code Cache size %d < %d recorded in AOT Code header\", load_size, _cache_size);\n+    log_debug(aot, codecache, init)(\"AOT Code Cache disabled: AOT Code Cache size %d < %d recorded in AOT Code header\", load_size, _cache_size);\n@@ -493,1 +508,1 @@\n-    log_info(aot, codecache, init)(\"Read %d entries table at offset %d from AOT Code Cache\", count, _load_header->entries_offset());\n+    log_debug(aot, codecache, init)(\"Read %d entries table at offset %d from AOT Code Cache\", count, _load_header->entries_offset());\n@@ -558,1 +573,1 @@\n-    char* buffer = (char *)AOTCacheAccess::allocate_aot_code(total_size + DATA_ALIGNMENT);\n+    char* buffer = (char *)AOTCacheAccess::allocate_aot_code_region(total_size + DATA_ALIGNMENT);\n@@ -564,1 +579,1 @@\n-    uint total_blobs_count = 0;\n+    uint blobs_count = 0;\n@@ -589,1 +604,1 @@\n-        total_blobs_count++;\n+        blobs_count++;\n@@ -617,4 +632,0 @@\n-    log_info(aot, codecache, exit)(\"Wrote %d AOTCodeEntry entries (%d max size) to AOT Code Cache\", entries_count, max_size);\n-    log_info(aot, codecache, exit)(\"  Adapters:  total=%d\", adapters_count);\n-    log_info(aot, codecache, exit)(\"  All Blobs: total=%d\", total_blobs_count);\n-\n@@ -624,0 +635,4 @@\n+    log_debug(aot, codecache, exit)(\"  Adapters:  total=%u\", adapters_count);\n+    log_debug(aot, codecache, exit)(\"  All Blobs: total=%u\", blobs_count);\n+    log_debug(aot, codecache, exit)(\"  AOT code cache size: %u bytes, max entry's size: %u bytes\", size, max_size);\n+\n@@ -627,2 +642,4 @@\n-                 entries_count, new_entries_offset);\n-    log_info(aot, codecache, exit)(\"Wrote %d bytes to AOT Code Cache\", size);\n+                 entries_count, new_entries_offset,\n+                 adapters_count, blobs_count);\n+\n+    log_info(aot, codecache, exit)(\"Wrote %d AOT code entries to AOT Code Cache\", entries_count);\n@@ -645,1 +662,1 @@\n-  log_info(aot, codecache, stubs)(\"Writing blob '%s' to AOT Code Cache\", name);\n+  log_debug(aot, codecache, stubs)(\"Writing blob '%s' to AOT Code Cache\", name);\n@@ -648,2 +665,1 @@\n-\n-  LogStreamHandle(Debug, aot, codecache, stubs) log;\n+  LogStreamHandle(Trace, aot, codecache, stubs) log;\n@@ -716,1 +732,1 @@\n-  log_info(aot, codecache, stubs)(\"Wrote code blob '%s(id=%d)' to AOT Code Cache\", name, id);\n+  log_debug(aot, codecache, stubs)(\"Wrote code blob '%s(id=%d)' to AOT Code Cache\", name, id);\n@@ -730,1 +746,1 @@\n-  log_info(aot, codecache, stubs)(\"Reading blob '%s' from AOT Code Cache\", name);\n+  log_debug(aot, codecache, stubs)(\"Reading blob '%s' from AOT Code Cache\", name);\n@@ -787,1 +803,1 @@\n-    log_debug(aot, codecache, stubs)(\"Reading adapter '%s:%s' (0x%x) offset: 0x%x from AOT Code Cache\",\n+    log_trace(aot, codecache, stubs)(\"Reading adapter '%s:%s' (0x%x) offset: 0x%x from AOT Code Cache\",\n@@ -792,1 +808,1 @@\n-  log_info(aot, codecache, stubs)(\"Read blob '%s' from AOT Code Cache\", name);\n+  log_debug(aot, codecache, stubs)(\"Read blob '%s' from AOT Code Cache\", name);\n@@ -794,1 +810,1 @@\n-  LogStreamHandle(Debug, aot, codecache, stubs) log;\n+  LogStreamHandle(Trace, aot, codecache, stubs) log;\n@@ -808,1 +824,1 @@\n-  LogStreamHandle(Info, aot, codecache, reloc) log;\n+  LogStreamHandle(Trace, aot, codecache, reloc) log;\n@@ -862,1 +878,1 @@\n-  LogStreamHandle(Info, aot, reloc) log;\n+  LogStreamHandle(Trace, aot, reloc) log;\n@@ -1006,1 +1022,1 @@\n-  log_info(aot, codecache, init)(\"External addresses recorded\");\n+  log_debug(aot, codecache, init)(\"External addresses recorded\");\n@@ -1023,1 +1039,1 @@\n-  log_info(aot, codecache, init)(\"Early shared blobs recorded\");\n+  log_debug(aot, codecache, init)(\"Early shared blobs recorded\");\n@@ -1078,1 +1094,1 @@\n-  log_info(aot, codecache, init)(\"Loaded %d C strings at offset %d from AOT Code Cache\", _C_strings_count, strings_offset);\n+  log_debug(aot, codecache, init)(\"  Loaded %d C strings of total length %d at offset %d from AOT Code Cache\", _C_strings_count, strings_size, strings_offset);\n@@ -1100,1 +1116,1 @@\n-    log_info(aot, codecache, exit)(\"Wrote %d C strings of total length %d at offset %d to AOT Code Cache\",\n+    log_debug(aot, codecache, exit)(\"  Wrote %d C strings of total length %d at offset %d to AOT Code Cache\",\n@@ -1107,1 +1123,1 @@\n-  if (is_on_for_dump()) {\n+  if (is_on_for_dump() && str != nullptr) {\n@@ -1114,1 +1130,3 @@\n-  if (str != nullptr && _extrs_complete) {\n+  if (_extrs_complete) {\n+    LogStreamHandle(Trace, aot, codecache, stringtable) log; \/\/ ctor outside lock\n+    MutexLocker ml(AOTCodeCStrings_lock, Mutex::_no_safepoint_check_flag);\n@@ -1119,1 +1137,1 @@\n-      } else if (!strcmp(_C_strings[i], str)) {\n+      } else if (strcmp(_C_strings[i], str) == 0) {\n@@ -1125,1 +1143,0 @@\n-      log_trace(aot, codecache)(\"add_C_string: [%d] \" INTPTR_FORMAT \" %s\", _C_strings_count, p2i(str), str);\n@@ -1128,0 +1145,3 @@\n+      if (log.is_enabled()) {\n+        log.print_cr(\"add_C_string: [%d] \" INTPTR_FORMAT \" '%s'\", _C_strings_count, p2i(str), str);\n+      }\n@@ -1134,0 +1154,4 @@\n+  if (str == nullptr) {\n+    return -1;\n+  }\n+  MutexLocker ml(AOTCodeCStrings_lock, Mutex::_no_safepoint_check_flag);\n@@ -1238,2 +1262,2 @@\n-            log_info(aot, codecache)(\"Address \" INTPTR_FORMAT \" (offset %d) for runtime target '%s' is missing in AOT Code Cache addresses table\",\n-                          p2i(addr), dist, (const char*)addr);\n+            log_debug(aot, codecache)(\"Address \" INTPTR_FORMAT \" (offset %d) for runtime target '%s' is missing in AOT Code Cache addresses table\",\n+                                      p2i(addr), dist, (const char*)addr);\n@@ -1243,0 +1267,3 @@\n+          reloc.print_current_on(tty);\n+          code_blob->print_on(tty);\n+          code_blob->print_code_on(tty);\n@@ -1246,2 +1273,0 @@\n-          os::print_location(tty, p2i(addr), true);\n-#ifndef PRODUCT\n@@ -1249,1 +1274,2 @@\n-#endif\n+          code_blob->print_code_on(tty);\n+          os::find(addr, tty);\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":83,"deletions":57,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -177,0 +177,2 @@\n+    uint   _adapters_count;\n+    uint   _blobs_count;\n@@ -181,2 +183,3 @@\n-              uint strings_count, uint strings_offset,\n-              uint entries_count, uint entries_offset) {\n+              uint strings_count,  uint strings_offset,\n+              uint entries_count,  uint entries_offset,\n+              uint adapters_count, uint blobs_count) {\n@@ -189,0 +192,2 @@\n+      _adapters_count = adapters_count;\n+      _blobs_count    = blobs_count;\n@@ -199,0 +204,2 @@\n+    uint adapters_count() const { return _adapters_count; }\n+    uint blobs_count()    const { return _blobs_count; }\n@@ -333,0 +340,2 @@\n+static const char* add_C_string2(const char* str) NOT_CDS_RETURN_(str);\n+\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.hpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -126,0 +126,2 @@\n+Mutex*   AOTCodeCStrings_lock         = nullptr;\n+\n@@ -322,0 +324,2 @@\n+  MUTEX_DEFL(AOTCodeCStrings_lock           , PaddedMutex  , tty_lock);\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,0 +151,2 @@\n+extern Mutex*   AOTCodeCStrings_lock;            \/\/ used to guard access to the AOT code C strings table\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+ * @requires vm.cds.supports.aot.class.linking\n+ * @requires vm.flagless\n@@ -71,2 +73,2 @@\n-                    \"-Xlog:aot+codecache+init\",\n-                    \"-Xlog:aot+codecache+exit\",\n+                    \"-Xlog:aot+codecache+init=debug\",\n+                    \"-Xlog:aot+codecache+exit=debug\",\n@@ -90,2 +92,0 @@\n-                    out.shouldNotContain(\"Adapters:  total\");\n-                    break;\n@@ -93,1 +93,1 @@\n-                    out.shouldNotContain(\"entries table at offset\");\n+                    out.shouldNotContain(\"Adapters:  total\");\n@@ -100,2 +100,0 @@\n-                    out.shouldContain(\"Adapters:  total\");\n-                    break;\n@@ -103,1 +101,1 @@\n-                    out.shouldContain(\"entries table at offset\");\n+                    out.shouldContain(\"Adapters:  total\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCode\/AOTCodeFlags.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}