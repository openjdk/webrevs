{"files":[{"patch":"@@ -1260,1 +1260,1 @@\n-            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative\");\n@@ -1262,1 +1262,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must be positive, but got \" + maximumPoolSize);\n+            throw new IllegalArgumentException(\"maximumPoolSize must be positive\");\n@@ -1264,1 +1264,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" + \"but got maximumPoolSize:\" + maximumPoolSize + \" ,corePoolSize:\" + corePoolSize);\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize\");\n@@ -1266,1 +1266,1 @@\n-            throw new IllegalArgumentException(\"keepAliveTime must be non-negative, but got \" + keepAliveTime);\n+            throw new IllegalArgumentException(\"keepAliveTime must be non-negative\");\n@@ -1510,1 +1510,1 @@\n-            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative\");\n@@ -1512,2 +1512,1 @@\n-            throw new IllegalArgumentException(\"corePoolSize must be less than or equal to maximumPoolSize, \" +\n-                \"but got maximumPoolSize:\" + maximumPoolSize + \" corePoolSize :\" + corePoolSize);\n+            throw new IllegalArgumentException(\"corePoolSize must be less than or equal to maximumPoolSize\");\n@@ -1639,1 +1638,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must be positive, but got \" + maximumPoolSize);\n+            throw new IllegalArgumentException(\"maximumPoolSize must be positive\");\n@@ -1641,2 +1640,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" +\n-                \"but got maximumPoolSize:\" + maximumPoolSize + \" corePoolSize :\" + corePoolSize);\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize\");\n@@ -1677,1 +1675,1 @@\n-            throw new IllegalArgumentException(\"time must be non-negative, but got \" + time);\n+            throw new IllegalArgumentException(\"time must be non-negative\");\n@@ -1680,0 +1678,1 @@\n+        Objects.requireNonNull(unit, \"unit\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPoolExecutor.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -44,16 +44,1 @@\n-import java.util.concurrent.ArrayBlockingQueue;\n-import java.util.concurrent.BlockingQueue;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.CancellationException;\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Future;\n-import java.util.concurrent.FutureTask;\n-import java.util.concurrent.LinkedBlockingQueue;\n-import java.util.concurrent.RejectedExecutionException;\n-import java.util.concurrent.RejectedExecutionHandler;\n-import java.util.concurrent.SynchronousQueue;\n-import java.util.concurrent.ThreadFactory;\n-import java.util.concurrent.ThreadLocalRandom;\n-import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.*;\n@@ -746,1 +731,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative\");\n@@ -759,1 +744,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\");\n@@ -772,1 +757,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -785,1 +770,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -799,2 +784,1 @@\n-                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n-                    \"corePoolSize:2\",\n+                \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -829,1 +813,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -843,1 +827,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -857,1 +841,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -871,1 +855,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -886,2 +870,1 @@\n-                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n-                    \"corePoolSize:2\",\n+                \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -931,1 +914,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -945,1 +928,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -959,1 +942,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -973,1 +956,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -988,2 +971,1 @@\n-                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n-                    \"corePoolSize:2\",\n+                \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1034,1 +1016,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -1049,1 +1031,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -1064,1 +1046,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -1079,1 +1061,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -1095,2 +1077,1 @@\n-                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n-                    \"corePoolSize:2\",\n+                \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1158,1 +1139,1 @@\n-            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+            Assert.assertEquals(\"unit\", success.getMessage());\n@@ -1324,1 +1305,1 @@\n-                Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+                Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -1344,2 +1325,1 @@\n-                    \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n-                        \"corePoolSize:2\",\n+                    \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1366,1 +1346,1 @@\n-                Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+                Assert.assertEquals(\"maximumPoolSize must be positive\");\n@@ -1384,1 +1364,0 @@\n-                int s1 = s - 1;\n@@ -1386,1 +1365,1 @@\n-                    p.setMaximumPoolSize(s1);\n+                    p.setMaximumPoolSize(s - 1);\n@@ -1390,2 +1369,1 @@\n-                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n-                            s1 + \" ,corePoolSize:\" + s,\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1397,1 +1375,0 @@\n-                int s2 = s + 1;\n@@ -1399,1 +1376,1 @@\n-                    p.setCorePoolSize(s2);\n+                    p.setCorePoolSize(s + 1);\n@@ -1403,2 +1380,1 @@\n-                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n-                            s + \" ,corePoolSize:\" + s2,\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1428,1 +1404,20 @@\n-                Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+                Assert.assertEquals(\"keepAliveTime must be non-negative\");\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * setKeepAliveTime throws IllegalArgumentException\n+     * when given a null unit\n+     *\/\n+    public void testKeepAliveTimeIllegalArgumentException() {\n+        final ThreadPoolExecutor p =\n+            new ThreadPoolExecutor(2, 3,\n+                LONG_DELAY_MS, MILLISECONDS,\n+                new ArrayBlockingQueue<Runnable>(10));\n+        try (PoolCleaner cleaner = cleaner(p)) {\n+            try {\n+                p.setKeepAliveTime(1, (TimeUnit) null);\n+                shouldThrow();\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"unit\", success.getMessage());\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ThreadPoolExecutorTest.java","additions":49,"deletions":54,"binary":false,"changes":103,"status":"modified"}]}