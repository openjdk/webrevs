{"files":[{"patch":"@@ -44,0 +44,1 @@\n+import java.util.Objects;\n@@ -122,1 +123,1 @@\n-        if (task == null) throw new NullPointerException(\"task can't be null\");\n+        Objects.requireNonNull(task, \"task\");\n@@ -134,1 +135,1 @@\n-        if (task == null) throw new NullPointerException(\"task can't be null\");\n+        Objects.requireNonNull(task, \"task\");\n@@ -146,1 +147,1 @@\n-        if (task == null) throw new NullPointerException(\"task can't be null\");\n+        Objects.requireNonNull(task, \"task\");\n@@ -157,3 +158,2 @@\n-        throws InterruptedException, ExecutionException, TimeoutException {\n-        if (tasks == null)\n-            throw new NullPointerException(\"tasks can't be null\");\n+        throws InterruptedException, ExecutionException, TimeoutException, NullPointerException {\n+        Objects.requireNonNull(tasks, \"tasks\");\n@@ -162,1 +162,1 @@\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"tasks is empty\");\n@@ -264,3 +264,2 @@\n-        throws InterruptedException {\n-        if (tasks == null)\n-            throw new NullPointerException(\"tasks can't be null\");\n+        throws InterruptedException , NullPointerException {\n+        Objects.requireNonNull(tasks, \"tasks\");\n@@ -297,2 +296,2 @@\n-        if (tasks == null)\n-            throw new NullPointerException(\"tasks can't be null\");\n+        Objects.requireNonNull(tasks, \"tasks\");\n+        Objects.requireNonNull(unit, \"unit\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/AbstractExecutorService.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.util.Objects;\n+\n@@ -148,2 +150,1 @@\n-        if (executor == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(executor, \"executor\");\n@@ -171,2 +172,2 @@\n-        if (executor == null || completionQueue == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(executor, \"executor\");\n+        Objects.requireNonNull(completionQueue, \"completionQueue\");\n@@ -184,1 +185,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n@@ -195,1 +196,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ExecutorCompletionService.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1260,1 +1260,1 @@\n-            throw new IllegalArgumentException(\"corePoolSize can't be negative, but got \" + corePoolSize);\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n@@ -1264,1 +1264,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must >= corePoolSize , \" + \"but got maximumPoolSize:\" + maximumPoolSize + \" corePoolSize :\" + corePoolSize);\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" + \"but got maximumPoolSize:\" + maximumPoolSize + \" ,corePoolSize:\" + corePoolSize);\n@@ -1266,7 +1266,1 @@\n-            throw new IllegalArgumentException(\"keepAliveTime can't be negative, but got \" + keepAliveTime);\n-        } else if (workQueue == null) {\n-            throw new NullPointerException(\"workQueue can't be null\");\n-        } else if (threadFactory == null) {\n-            throw new NullPointerException(\"threadFactory can't be null\");\n-        } else if (handler == null) {\n-            throw new NullPointerException(\"handler can't be null\");\n+            throw new IllegalArgumentException(\"keepAliveTime must be non-negative, but got \" + keepAliveTime);\n@@ -1274,0 +1268,4 @@\n+        Objects.requireNonNull(unit, \"unit\");\n+        Objects.requireNonNull(workQueue, \"workQueue\");\n+        Objects.requireNonNull(threadFactory, \"threadFactory\");\n+        Objects.requireNonNull(handler, \"handler\");\n@@ -1300,2 +1298,1 @@\n-        if (command == null)\n-            throw new NullPointerException(\"command can't be null\");\n+        Objects.requireNonNull(command, \"command\");\n@@ -1462,2 +1459,1 @@\n-        if (threadFactory == null)\n-            throw new NullPointerException(\"threadFactory can't be null\");\n+        Objects.requireNonNull(threadFactory, \"threadFactory\");\n@@ -1485,2 +1481,1 @@\n-        if (handler == null)\n-            throw new NullPointerException(\"handler can't be null\");\n+        Objects.requireNonNull(handler, \"handler\");\n@@ -1515,1 +1510,1 @@\n-            throw new IllegalArgumentException(\"corePoolSize can't be negative, but got \" + corePoolSize);\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n@@ -1517,1 +1512,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must >= corePoolSize , \" +\n+            throw new IllegalArgumentException(\"corePoolSize must be less than or equal to maximumPoolSize, \" +\n@@ -1646,1 +1641,1 @@\n-            throw new IllegalArgumentException(\"maximumPoolSize must >= corePoolSize , \" +\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" +\n@@ -1682,1 +1677,1 @@\n-            throw new IllegalArgumentException(\"time can't be negative, but got \" + time);\n+            throw new IllegalArgumentException(\"time must be non-negative, but got \" + time);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPoolExecutor.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -309,1 +309,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"threadFactory\", success.getMessage());\n@@ -371,1 +371,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"handler\", success.getMessage());\n@@ -746,1 +746,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n@@ -759,1 +759,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n@@ -772,1 +772,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n@@ -785,1 +785,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n@@ -798,1 +798,5 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n@@ -811,1 +815,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n@@ -825,1 +829,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n@@ -839,1 +843,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n@@ -853,1 +857,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n@@ -867,1 +871,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n@@ -881,1 +885,5 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n@@ -895,1 +903,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n@@ -909,1 +917,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n@@ -923,1 +931,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n@@ -937,1 +945,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n@@ -951,1 +959,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n@@ -965,1 +973,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n@@ -979,1 +987,5 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n@@ -993,1 +1005,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n@@ -1007,1 +1019,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"handler\", success.getMessage());\n@@ -1022,1 +1034,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n@@ -1037,1 +1049,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n@@ -1052,1 +1064,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n@@ -1067,1 +1079,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n@@ -1082,1 +1094,5 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n@@ -1097,1 +1113,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n@@ -1112,1 +1128,1 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"handler\", success.getMessage());\n@@ -1127,1 +1143,16 @@\n-            Assert.assertNotNull(success.getMessage());\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+        }\n+    }\n+\n+    \/**\n+     * Constructor throws if unit is null\n+     *\/\n+    public void testConstructorNullPointerException9() {\n+        try {\n+            new ThreadPoolExecutor(1, 2, 1L, (TimeUnit) null,\n+                new ArrayBlockingQueue<Runnable>(10),\n+                new SimpleThreadFactory(),\n+                new NoOpREHandler());\n+            shouldThrow();\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n@@ -1293,1 +1324,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n@@ -1312,1 +1343,5 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\n+                    \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                        \"corePoolSize:2\",\n+                    success.getMessage()\n+                );\n@@ -1331,1 +1366,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n@@ -1349,0 +1384,1 @@\n+                int s1 = s - 1;\n@@ -1350,1 +1386,1 @@\n-                    p.setMaximumPoolSize(s - 1);\n+                    p.setMaximumPoolSize(s1);\n@@ -1353,1 +1389,5 @@\n-                    Assert.assertNotNull(success.getMessage());\n+                    Assert.assertEquals(\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n+                            s1 + \" ,corePoolSize:\" + s,\n+                        success.getMessage()\n+                    );\n@@ -1357,0 +1397,1 @@\n+                int s2 = s + 1;\n@@ -1358,1 +1399,1 @@\n-                    p.setCorePoolSize(s + 1);\n+                    p.setCorePoolSize(s2);\n@@ -1361,1 +1402,5 @@\n-                    Assert.assertNotNull(success.getMessage());\n+                    Assert.assertEquals(\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n+                            s + \" ,corePoolSize:\" + s2,\n+                        success.getMessage()\n+                    );\n@@ -1383,1 +1428,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n@@ -1476,1 +1521,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n@@ -1493,1 +1538,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+            }\n@@ -1513,1 +1560,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1568,1 +1617,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n@@ -1604,1 +1653,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1662,1 +1713,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n@@ -1682,1 +1733,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n@@ -1700,1 +1751,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+            }\n@@ -1720,1 +1773,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"task\", success.getMessage());\n+            }\n@@ -1779,1 +1834,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n@@ -1799,1 +1854,1 @@\n-                Assert.assertNotNull(success.getMessage());\n+                Assert.assertEquals(\"unit\", success.getMessage());\n@@ -1836,1 +1891,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"task\", success.getMessage());\n+            }\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ThreadPoolExecutorTest.java","additions":107,"deletions":50,"binary":false,"changes":157,"status":"modified"}]}