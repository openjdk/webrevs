{"files":[{"patch":"@@ -44,0 +44,1 @@\n+import java.util.Objects;\n@@ -122,1 +123,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n@@ -134,1 +135,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n@@ -146,1 +147,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n@@ -157,3 +158,2 @@\n-        throws InterruptedException, ExecutionException, TimeoutException {\n-        if (tasks == null)\n-            throw new NullPointerException();\n+        throws InterruptedException, ExecutionException, TimeoutException, NullPointerException {\n+        Objects.requireNonNull(tasks, \"tasks\");\n@@ -162,1 +162,1 @@\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"tasks is empty\");\n@@ -264,3 +264,2 @@\n-        throws InterruptedException {\n-        if (tasks == null)\n-            throw new NullPointerException();\n+        throws InterruptedException , NullPointerException {\n+        Objects.requireNonNull(tasks, \"tasks\");\n@@ -297,2 +296,2 @@\n-        if (tasks == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(tasks, \"tasks\");\n+        Objects.requireNonNull(unit, \"unit\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/AbstractExecutorService.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.util.Objects;\n+\n@@ -148,2 +150,1 @@\n-        if (executor == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(executor, \"executor\");\n@@ -171,2 +172,2 @@\n-        if (executor == null || completionQueue == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(executor, \"executor\");\n+        Objects.requireNonNull(completionQueue, \"completionQueue\");\n@@ -184,1 +185,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n@@ -195,1 +196,1 @@\n-        if (task == null) throw new NullPointerException();\n+        Objects.requireNonNull(task, \"task\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ExecutorCompletionService.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1259,7 +1259,13 @@\n-        if (corePoolSize < 0 ||\n-            maximumPoolSize <= 0 ||\n-            maximumPoolSize < corePoolSize ||\n-            keepAliveTime < 0)\n-            throw new IllegalArgumentException();\n-        if (workQueue == null || threadFactory == null || handler == null)\n-            throw new NullPointerException();\n+        if (corePoolSize < 0) {\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n+        } else if (maximumPoolSize <= 0) {\n+            throw new IllegalArgumentException(\"maximumPoolSize must be positive, but got \" + maximumPoolSize);\n+        } else if (maximumPoolSize < corePoolSize) {\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" + \"but got maximumPoolSize:\" + maximumPoolSize + \" ,corePoolSize:\" + corePoolSize);\n+        } else if (keepAliveTime < 0) {\n+            throw new IllegalArgumentException(\"keepAliveTime must be non-negative, but got \" + keepAliveTime);\n+        }\n+        Objects.requireNonNull(unit, \"unit\");\n+        Objects.requireNonNull(workQueue, \"workQueue\");\n+        Objects.requireNonNull(threadFactory, \"threadFactory\");\n+        Objects.requireNonNull(handler, \"handler\");\n@@ -1292,2 +1298,1 @@\n-        if (command == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(command, \"command\");\n@@ -1454,2 +1459,1 @@\n-        if (threadFactory == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(threadFactory, \"threadFactory\");\n@@ -1477,2 +1481,1 @@\n-        if (handler == null)\n-            throw new NullPointerException();\n+        Objects.requireNonNull(handler, \"handler\");\n@@ -1506,2 +1509,6 @@\n-        if (corePoolSize < 0 || maximumPoolSize < corePoolSize)\n-            throw new IllegalArgumentException();\n+        if (corePoolSize < 0) {\n+            throw new IllegalArgumentException(\"corePoolSize must be non-negative, but got \" + corePoolSize);\n+        } else if (corePoolSize > maximumPoolSize) {\n+            throw new IllegalArgumentException(\"corePoolSize must be less than or equal to maximumPoolSize, \" +\n+                \"but got maximumPoolSize:\" + maximumPoolSize + \" corePoolSize :\" + corePoolSize);\n+        }\n@@ -1631,2 +1638,6 @@\n-        if (maximumPoolSize <= 0 || maximumPoolSize < corePoolSize)\n-            throw new IllegalArgumentException();\n+        if (maximumPoolSize <= 0) {\n+            throw new IllegalArgumentException(\"maximumPoolSize must be positive, but got \" + maximumPoolSize);\n+        } else if (maximumPoolSize < corePoolSize) {\n+            throw new IllegalArgumentException(\"maximumPoolSize must be greater than or equal to corePoolSize , \" +\n+                \"but got maximumPoolSize:\" + maximumPoolSize + \" corePoolSize :\" + corePoolSize);\n+        }\n@@ -1666,1 +1677,1 @@\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"time must be non-negative, but got \" + time);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPoolExecutor.java","additions":29,"deletions":18,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+import org.junit.Assert;\n@@ -307,1 +308,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"threadFactory\", success.getMessage());\n+            }\n@@ -367,1 +370,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"handler\", success.getMessage());\n+            }\n@@ -740,1 +745,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -751,1 +758,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+        }\n@@ -762,1 +771,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+        }\n@@ -773,1 +784,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -784,1 +797,7 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n+        }\n@@ -795,1 +814,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -807,1 +828,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -819,1 +842,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+        }\n@@ -831,1 +856,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+        }\n@@ -843,1 +870,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -855,1 +884,7 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n+        }\n@@ -867,1 +902,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -879,1 +916,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+        }\n@@ -891,1 +930,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -903,1 +944,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+        }\n@@ -915,1 +958,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+        }\n@@ -927,1 +972,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -939,1 +986,7 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n+        }\n@@ -951,1 +1004,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -963,1 +1018,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"handler\", success.getMessage());\n+        }\n@@ -976,1 +1033,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -989,1 +1048,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+        }\n@@ -1002,1 +1063,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"maximumPoolSize must be positive, but got 0\", success.getMessage());\n+        }\n@@ -1015,1 +1078,3 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+        }\n@@ -1028,1 +1093,7 @@\n-        } catch (IllegalArgumentException success) {}\n+        } catch (IllegalArgumentException success) {\n+            Assert.assertEquals(\n+                \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                    \"corePoolSize:2\",\n+                success.getMessage()\n+            );\n+        }\n@@ -1041,1 +1112,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"workQueue\", success.getMessage());\n+        }\n@@ -1054,1 +1127,3 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"handler\", success.getMessage());\n+        }\n@@ -1067,1 +1142,18 @@\n-        } catch (NullPointerException success) {}\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+        }\n+    }\n+\n+    \/**\n+     * Constructor throws if unit is null\n+     *\/\n+    public void testConstructorNullPointerException9() {\n+        try {\n+            new ThreadPoolExecutor(1, 2, 1L, (TimeUnit) null,\n+                new ArrayBlockingQueue<Runnable>(10),\n+                new SimpleThreadFactory(),\n+                new NoOpREHandler());\n+            shouldThrow();\n+        } catch (NullPointerException success) {\n+            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+        }\n@@ -1231,1 +1323,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"corePoolSize must be non-negative, but got -1\", success.getMessage());\n+            }\n@@ -1248,1 +1342,7 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\n+                    \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:1 ,\" +\n+                        \"corePoolSize:2\",\n+                    success.getMessage()\n+                );\n+            }\n@@ -1265,1 +1365,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"maximumPoolSize must be positive, but got -1\", success.getMessage());\n+            }\n@@ -1282,0 +1384,1 @@\n+                int s1 = s - 1;\n@@ -1283,1 +1386,1 @@\n-                    p.setMaximumPoolSize(s - 1);\n+                    p.setMaximumPoolSize(s1);\n@@ -1285,1 +1388,7 @@\n-                } catch (IllegalArgumentException success) {}\n+                } catch (IllegalArgumentException success) {\n+                    Assert.assertEquals(\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n+                            s1 + \" ,corePoolSize:\" + s,\n+                        success.getMessage()\n+                    );\n+                }\n@@ -1288,0 +1397,1 @@\n+                int s2 = s + 1;\n@@ -1289,1 +1399,1 @@\n-                    p.setCorePoolSize(s + 1);\n+                    p.setCorePoolSize(s2);\n@@ -1291,1 +1401,7 @@\n-                } catch (IllegalArgumentException success) {}\n+                } catch (IllegalArgumentException success) {\n+                    Assert.assertEquals(\n+                        \"maximumPoolSize must be greater than or equal to corePoolSize ,but got maximumPoolSize:\" +\n+                            s + \" ,corePoolSize:\" + s2,\n+                        success.getMessage()\n+                    );\n+                }\n@@ -1311,1 +1427,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"keepAliveTime must be non-negative, but got -1\", success.getMessage());\n+            }\n@@ -1402,1 +1520,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1418,1 +1538,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+            }\n@@ -1438,1 +1560,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1492,1 +1616,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1527,1 +1653,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1584,1 +1712,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1602,1 +1732,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1619,1 +1751,3 @@\n-            } catch (IllegalArgumentException success) {}\n+            } catch (IllegalArgumentException success) {\n+                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+            }\n@@ -1639,1 +1773,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"task\", success.getMessage());\n+            }\n@@ -1697,1 +1833,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"tasks\", success.getMessage());\n+            }\n@@ -1715,1 +1853,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"unit\", success.getMessage());\n+            }\n@@ -1751,1 +1891,3 @@\n-            } catch (NullPointerException success) {}\n+            } catch (NullPointerException success) {\n+                Assert.assertEquals(\"task\", success.getMessage());\n+            }\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ThreadPoolExecutorTest.java","additions":192,"deletions":50,"binary":false,"changes":242,"status":"modified"}]}