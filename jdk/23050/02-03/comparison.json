{"files":[{"patch":"@@ -294,1 +294,1 @@\n-                Assert.assertEquals(\"threadFactory\", success.getMessage());\n+                assertEquals(\"threadFactory\", success.getMessage());\n@@ -356,1 +356,1 @@\n-                Assert.assertEquals(\"handler\", success.getMessage());\n+                assertEquals(\"handler\", success.getMessage());\n@@ -731,1 +731,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative\");\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -744,1 +744,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\");\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -757,1 +757,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -770,1 +770,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -783,1 +783,1 @@\n-            Assert.assertEquals(\n+            assertEquals(\n@@ -799,1 +799,1 @@\n-            Assert.assertEquals(\"workQueue\", success.getMessage());\n+            assertEquals(\"workQueue\", success.getMessage());\n@@ -813,1 +813,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -827,1 +827,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -841,1 +841,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -855,1 +855,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -869,1 +869,1 @@\n-            Assert.assertEquals(\n+            assertEquals(\n@@ -886,1 +886,1 @@\n-            Assert.assertEquals(\"workQueue\", success.getMessage());\n+            assertEquals(\"workQueue\", success.getMessage());\n@@ -900,1 +900,1 @@\n-            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+            assertEquals(\"threadFactory\", success.getMessage());\n@@ -914,1 +914,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -928,1 +928,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -942,1 +942,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -956,1 +956,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -970,1 +970,1 @@\n-            Assert.assertEquals(\n+            assertEquals(\n@@ -987,1 +987,1 @@\n-            Assert.assertEquals(\"workQueue\", success.getMessage());\n+            assertEquals(\"workQueue\", success.getMessage());\n@@ -1001,1 +1001,1 @@\n-            Assert.assertEquals(\"handler\", success.getMessage());\n+            assertEquals(\"handler\", success.getMessage());\n@@ -1016,1 +1016,1 @@\n-            Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+            assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -1031,1 +1031,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -1046,1 +1046,1 @@\n-            Assert.assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n+            assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -1061,1 +1061,1 @@\n-            Assert.assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n+            assertEquals(\"keepAliveTime must be non-negative\", success.getMessage());\n@@ -1076,1 +1076,1 @@\n-            Assert.assertEquals(\n+            assertEquals(\n@@ -1094,1 +1094,1 @@\n-            Assert.assertEquals(\"workQueue\", success.getMessage());\n+            assertEquals(\"workQueue\", success.getMessage());\n@@ -1109,1 +1109,1 @@\n-            Assert.assertEquals(\"handler\", success.getMessage());\n+            assertEquals(\"handler\", success.getMessage());\n@@ -1124,1 +1124,1 @@\n-            Assert.assertEquals(\"threadFactory\", success.getMessage());\n+            assertEquals(\"threadFactory\", success.getMessage());\n@@ -1139,1 +1139,1 @@\n-            Assert.assertEquals(\"unit\", success.getMessage());\n+            assertEquals(\"unit\", success.getMessage());\n@@ -1305,1 +1305,1 @@\n-                Assert.assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n+                assertEquals(\"corePoolSize must be non-negative\", success.getMessage());\n@@ -1324,1 +1324,1 @@\n-                Assert.assertEquals(\n+                assertEquals(\n@@ -1346,1 +1346,1 @@\n-                Assert.assertEquals(\"maximumPoolSize must be positive\");\n+                assertEquals(\"maximumPoolSize must be positive\", success.getMessage());\n@@ -1368,2 +1368,4 @@\n-                    Assert.assertEquals(\n-                        \"maximumPoolSize must be greater than or equal to corePoolSize\",\n+                    assertEquals(\n+                        s == 1\n+                        ? \"maximumPoolSize must be positive\"\n+                        : \"maximumPoolSize must be greater than or equal to corePoolSize\",\n@@ -1379,2 +1381,2 @@\n-                    Assert.assertEquals(\n-                        \"maximumPoolSize must be greater than or equal to corePoolSize\",\n+                    assertEquals(\n+                        \"corePoolSize must be less than or equal to maximumPoolSize\",\n@@ -1394,1 +1396,1 @@\n-    public void testKeepAliveTimeIllegalArgumentException() {\n+    public void testKeepAliveTimeInvalidLengthIllegalArgumentException() {\n@@ -1404,1 +1406,1 @@\n-                Assert.assertEquals(\"keepAliveTime must be non-negative\");\n+                assertEquals(\"time must be non-negative\", success.getMessage());\n@@ -1413,1 +1415,1 @@\n-    public void testKeepAliveTimeIllegalArgumentException() {\n+    public void testKeepAliveTimeNullTimeUnitIllegalArgumentException() {\n@@ -1422,2 +1424,2 @@\n-            } catch (IllegalArgumentException success) {\n-                Assert.assertEquals(\"unit\", success.getMessage());\n+            } catch (NullPointerException success) {\n+                assertEquals(\"unit\", success.getMessage());\n@@ -1516,1 +1518,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"tasks\", success.getMessage());\n@@ -1534,1 +1536,1 @@\n-                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+                assertEquals(\"tasks is empty\", success.getMessage());\n@@ -1556,1 +1558,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"task\", success.getMessage());\n@@ -1612,1 +1614,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"tasks\", success.getMessage());\n@@ -1649,1 +1651,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(null, success.getMessage());\n@@ -1708,1 +1710,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"tasks\", success.getMessage());\n@@ -1728,1 +1730,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"Cannot invoke \\\"java.util.concurrent.TimeUnit.toNanos(long)\\\" because \\\"unit\\\" is null\", success.getMessage());\n@@ -1747,1 +1749,1 @@\n-                Assert.assertEquals(\"tasks is empty\", success.getMessage());\n+                assertEquals(\"tasks is empty\", success.getMessage());\n@@ -1769,1 +1771,1 @@\n-                Assert.assertEquals(\"task\", success.getMessage());\n+                assertEquals(\"task\", success.getMessage());\n@@ -1829,1 +1831,1 @@\n-                Assert.assertEquals(\"tasks\", success.getMessage());\n+                assertEquals(\"tasks\", success.getMessage());\n@@ -1849,1 +1851,1 @@\n-                Assert.assertEquals(\"unit\", success.getMessage());\n+                assertEquals(\"unit\", success.getMessage());\n@@ -1887,1 +1889,1 @@\n-                Assert.assertEquals(\"task\", success.getMessage());\n+                assertEquals(null, success.getMessage());\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ThreadPoolExecutorTest.java","additions":57,"deletions":55,"binary":false,"changes":112,"status":"modified"}]}