{"files":[{"patch":"@@ -241,1 +241,30 @@\n-\/\/ Unfortunately, vectorization can introduce such store-to-load-forwarding failures.\n+\/\/ Example (with \"iteration distance\" 2):\n+\/\/   for (int i = 10; i < SIZE; i++) {\n+\/\/       aI[i] = aI[i - 2] + 1;\n+\/\/   }\n+\/\/\n+\/\/   load_4_bytes( ptr +  -8)\n+\/\/   store_4_bytes(ptr +   0)    *\n+\/\/   load_4_bytes( ptr +  -4)    |\n+\/\/   store_4_bytes(ptr +   4)    | *\n+\/\/   load_4_bytes( ptr +   0)  <-+ |\n+\/\/   store_4_bytes(ptr +   8)      |\n+\/\/   load_4_bytes( ptr +   4)  <---+\n+\/\/   store_4_bytes(ptr +  12)\n+\/\/   ...\n+\/\/\n+\/\/   In the scalar loop, we can forward the stores from 2 iterations back.\n+\/\/\n+\/\/ Assume we have 2-element vectors (2*4 = 8 bytes), with the \"iteration distance\" 2\n+\/\/ example. This gives us this machine code:\n+\/\/   load_8_bytes( ptr +  -8)\n+\/\/   store_8_bytes(ptr +   0) |\n+\/\/   load_8_bytes( ptr +   0) v\n+\/\/   store_8_bytes(ptr +   8)   |\n+\/\/   load_8_bytes( ptr +   8)   v\n+\/\/   store_8_bytes(ptr +  16)\n+\/\/   ...\n+\/\/\n+\/\/   We packed 2 iterations, and the stores can perfectly forward to the loads of\n+\/\/   the next 2 iterations.\n+\/\/\n@@ -247,1 +276,15 @@\n-\/\/ Assume we have 2-element vectors (2*4 = 8 bytes). This gives us this machine code:\n+\/\/   load_4_bytes( ptr + -12)\n+\/\/   store_4_bytes(ptr +   0)    *\n+\/\/   load_4_bytes( ptr +  -8)    |\n+\/\/   store_4_bytes(ptr +   4)    |\n+\/\/   load_4_bytes( ptr +  -4)    |\n+\/\/   store_4_bytes(ptr +   8)    |\n+\/\/   load_4_bytes( ptr +   0)  <-+\n+\/\/   store_4_bytes(ptr +  12)\n+\/\/   ...\n+\/\/\n+\/\/   In the scalar loop, we can forward the stores from 3 iterations back.\n+\/\/\n+\/\/ Unfortunately, vectorization can introduce such store-to-load-forwarding failures.\n+\/\/ Assume we have 2-element vectors (2*4 = 8 bytes), with the \"iteration distance\" 3\n+\/\/ example. This gives us this machine code:\n@@ -249,5 +292,5 @@\n-\/\/   store_8_bytes(ptr + 0)\n-\/\/   load_8_bytes( ptr + -4)\n-\/\/   store_8_bytes(ptr + 8)\n-\/\/   load_8_bytes( ptr + 4)\n-\/\/   store_8_bytes(ptr + 16)\n+\/\/   store_8_bytes(ptr +   0)  |   |\n+\/\/   load_8_bytes( ptr +  -4)  x   |\n+\/\/   store_8_bytes(ptr +   8)     ||\n+\/\/   load_8_bytes( ptr +   4)     xx  <-- partial overlap with 2 stores\n+\/\/   store_8_bytes(ptr +  16)\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":50,"deletions":7,"binary":false,"changes":57,"status":"modified"}]}