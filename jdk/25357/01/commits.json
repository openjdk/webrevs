[{"commit":{"message":"respond to reviewer feedback"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalEvacuationTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"ae8c83c9c0dc54f6d555a7f227c12364ff267ed1"},{"commit":{"message":"Keep gc cycle times with heuristics for the relevant generation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"babc04ed79ef86c55d22cee5dffae7d75994ab12"},{"commit":{"message":"Fix whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"3d55a6461a8f0c1dffcba76dfe3fdb711165c4f2"},{"commit":{"message":"Merge remote-tracking branch 'jdk\/master' into share-collector-reserves"},"files":[],"sha":"f0afae010c626e9c1523d7038ce8d304c4039f50"},{"commit":{"message":"Merge branch 'share-collector-reserves' of https:\/\/github.com\/kdnilsen\/jdk into share-collector-reserves"},"files":[],"sha":"49abfca4c13f6e5a6661783d9f36860ff7b98fdb"},{"commit":{"message":"make old gc more aggresive"},"files":[],"sha":"6abbd8b7ee171f47387f78b87c21fb23054e5099"},{"commit":{"message":"Change fullgc phase5 return type\n\nA merge conflict was resolved incorrectly.  phase5_epilog() should\nreturn void."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.hpp"}],"sha":"242bce5eae0de8f4e1c4693c7bbd7af547d9fb02"},{"commit":{"message":"compute_old_generation_balance needs available computations under lock"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"ce897cd933deb7322f06cea9ed4207ca682bcf7f"},{"commit":{"message":"Merge branch 'share-collector-reserves' of https:\/\/github.com\/kdnilsen\/jdk into share-collector-reserves"},"files":[],"sha":"9a2b97271cba7a1b9abf84a5b07c6ae3ebab74ce"},{"commit":{"message":"Fixup bugs introduced by most recent commit"},"files":[],"sha":"be05b38b0eedc1b365fbcf0898f513563cbba8ef"},{"commit":{"message":"Improve empty region accounting in FreeSet"},"files":[],"sha":"143515dffbb69e90cc3d1e8bd20916b22bf624ed"},{"commit":{"message":"Revert \"Acquire heaplock before adjusting interval for old\"\n\nThis reverts commit 2aa534a9f54b79ea3f7cf6f2cd742e108007e9c4."},"files":[],"sha":"85f03c3edd290d42072d06c8f15692f1f30ef119"},{"commit":{"message":"Acquire heaplock before adjusting interval for old"},"files":[],"sha":"2aa534a9f54b79ea3f7cf6f2cd742e108007e9c4"},{"commit":{"message":"Fixup bugs introduced by most recent commit"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"684b9c23fee777be8cd35c3d6db8fc4a31448b74"},{"commit":{"message":"Improve empty region accounting in FreeSet"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"3cf1b870e6b1c0fea6d76844bf32a4c4323b6a0d"},{"commit":{"message":"Refactor to check ShenFreeSet::avaiable() outside global heaplock"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"577b0cb690e6993e1c130a12d5a8b92bf48e1755"},{"commit":{"message":"Revert change inadvertantly applied during merge\n\nFor non-generational mode, we don't have to set evacuation reserves.\nIt is computed by ShenandoahFreeSet::reserve_regions()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"eda09d58c45ce599c538f5973a6bbb64993ae468"},{"commit":{"message":"Merge remote-tracking branch 'jdk\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"da883d72fae3e52112121c920dc66d2bc73f3fba"},{"commit":{"message":"Revert \"Add support for adaptive OldEvacRatio\"\n\nThis reverts commit 2412337e9f5a00dcc618b3ef4214d4f69567ccab."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"}],"sha":"b489f62bf49acdb989459678d965c3d7335a158b"},{"commit":{"message":"Global cycles need to record cycle start time"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"7e979372916e62dd29a6b5aaadc3b5aaffdb7f9a"},{"commit":{"message":"Add asserts and diagnostics to help debug failures"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"fa2865862c43e6fb2f8b967ad066ceb1628a069a"},{"commit":{"message":"Repair damage resulting from upstream merge"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"77ae0c1259fc007faff1584ebcfa08710c046c15"},{"commit":{"message":"Merge remote-tracking branch 'jdk\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"}],"sha":"65eb7b987c9d6f19bf240163e6d361d6dc96d7af"},{"commit":{"message":"Fix typo in preprocessor directive"},"files":[],"sha":"437c71fb1443e91c5f2bac8f43a76d76dcc7e0d2"},{"commit":{"message":"Merge tag 'jdk-25+14' into share-collector-reserves\n\nAdded tag jdk-25+14 for changeset a347ecde"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"6ddcc4d48e8c3e2b1e95f2bcb7514abf8a77d2f7"},{"commit":{"message":"Add support for adaptive OldEvacRatio"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"}],"sha":"2412337e9f5a00dcc618b3ef4214d4f69567ccab"},{"commit":{"message":"Merge tag 'jdk-25+13' into share-collector-reserves\n\nAdded tag jdk-25+13 for changeset 11a37c82"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"7ce11205b04dfefc97241d9cf58ba04b02c44c6a"},{"commit":{"message":"Reduce likelihood of promotion by shared allocs"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"1911e04154a3865718d221e8936544e71a9c3747"},{"commit":{"message":"Fix white space"},"files":[],"sha":"a8e40e14e3d06225abc2b673391fcaf4ede1de8e"},{"commit":{"message":"Cancel pending GC trigger at start of old gc"},"files":[],"sha":"b6ef32365c888f753a2728fb90e475f106fda4f2"},{"commit":{"message":"Recycle old region on demands adjusts free bounds"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"ac3979739315d1f0c1f85b5b5744924d52c5b27d"},{"commit":{"message":"Add some debug instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"7ae16e1954474185c0b837b9b08f9d33c04dbc56"},{"commit":{"message":"Remove debug instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"980110b7dd76debdd82753c60bc1a22a6581d7b8"},{"commit":{"message":"Force transfer of old region young at updaterefs\n\nAt init update refs, we transfer remaining memory from Collector and\nOldCollector partitions in order to allow more mutator allocations\nto succeed during update-refs.  A conditional transfer is not reliable\nbecause soft_max_capacity() constraints may cause the transfer to fail."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c09751362a8038eb57ab4df4a3d389863eb65996"},{"commit":{"message":"Cleaner separation when asserts enabled\n\nBefore this commit, release build made reference to a variable that\nis only present in debug builds."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"43c18426664a3c207b243b957f02e760f4c4997b"},{"commit":{"message":"Share reserves between old and young\n\nThis enables mixed evacuations to be more productive more quickly."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"6c903127af80aed941a2260450f85954f8924e28"}]