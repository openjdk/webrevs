{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4199472\n+ * @summary Tests that node changed for the root of the tree update the\n+ *          structure.\n+ * @run main NodeChangedTest\n+ *\/\n+\n+import javax.swing.JTree;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+\n+public class NodeChangedTest {\n+    public static void main(String[] args) {\n+        \/\/ Create 3 nodes\n+        final DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"root\",\n+                true);\n+        final DefaultMutableTreeNode child = new DefaultMutableTreeNode(\"child\",\n+                true);\n+        final DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(\"leaf\",\n+                false);\n+        root.add(child);\n+        child.add(leaf);\n+\n+        final JTree tree = new JTree(root);\n+\n+        \/\/ Change the root node\n+        root.setUserObject(\"New root\");\n+        ((DefaultTreeModel) tree.getModel()).nodeChanged(root);\n+\n+        \/\/ Check\n+        if (!root.getUserObject().toString().equals(\"New root\")) {\n+            throw new RuntimeException(\"Failed changing root node for default model.\");\n+        }\n+\n+        \/\/ Change to large model\n+        tree.setLargeModel(true);\n+        tree.setRowHeight(20);\n+        root.setUserObject(\"root\");\n+        tree.setModel(new DefaultTreeModel(root));\n+        root.setUserObject(\"New root\");\n+        ((DefaultTreeModel) tree.getModel()).nodeChanged(root);\n+\n+        \/\/ Check again\n+        if (!root.getUserObject().toString().equals(\"New root\")) {\n+            throw new RuntimeException(\"Failed changing root node for large model.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/NodeChangedTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4118860\n+ * @summary setToggleClickCount\/getToggleClickCount have been added.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4118860\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTree;\n+\n+public class bug4118860 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        Push the \"Single Click\" button and try expanding\/contracting\n+        branch nodes of the tree with one left mouse button click\n+        on the label part of the node (not the icon or handles).\n+\n+        Then push the \"Double Click\" button and try doing the same using\n+        left mouse button double click. Single click shouldn't cause\n+        expanding\/contracting. A double click should now be required\n+        to expand\/contract nodes.\n+\n+        If it works then the test PASSES, else the test FAILS.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4118860 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4118860::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame f = new JFrame(\"ToggleClickCount Test\");\n+        JTree tr = new JTree();\n+        JPanel p = new JPanel();\n+        p.setBackground(Color.red);\n+        p.setLayout(new GridLayout(1, 1));\n+        tr.setOpaque(false);\n+        p.add(tr);\n+        f.add(p, BorderLayout.CENTER);\n+        JPanel bp = new JPanel();\n+        JButton bt1 = new JButton(\"Single Click\");\n+        bt1.addActionListener(e -> {\n+            tr.setToggleClickCount(1);\n+            if (tr.getToggleClickCount() != 1) {\n+                throw new RuntimeException(\"ToggleClickCount doesn't set...\");\n+            }\n+        });\n+        JButton bt2 = new JButton(\"Double Click\");\n+        bt2.addActionListener(e -> {\n+            tr.setToggleClickCount(2);\n+            if (tr.getToggleClickCount() != 2) {\n+                throw new RuntimeException(\"ToggleClickCount doesn't set...\");\n+            }\n+        });\n+        bp.setLayout(new GridLayout(1, 2));\n+        bp.add(bt1);\n+        bp.add(bt2);\n+        f.add(bp, BorderLayout.SOUTH);\n+        f.setSize(300, 200);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4118860.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4169215\n+ * @summary Accessibility hierarchy JTree node test.\n+ * @run main bug4169215\n+ *\/\n+\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.JTree;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+\n+public class bug4169215 {\n+    public static void main(String[] args) {\n+        \/\/ create the tree\n+        DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"top\");\n+        DefaultMutableTreeNode nodeA = new DefaultMutableTreeNode(\"A\");\n+        DefaultMutableTreeNode nodeB = new DefaultMutableTreeNode(\"B\");\n+        root.add(nodeA);\n+        root.add(nodeB);\n+        JTree tree = new JTree(root);\n+\n+        \/\/ find the AccessibleContext of the tree\n+        AccessibleContext actree = tree.getAccessibleContext();\n+\n+        \/\/ find the AccessibleContext of top node of the tree\n+        AccessibleContext act = actree.getAccessibleChild(0).getAccessibleContext();\n+\n+        \/\/ find the AccessibleContext of the first child of the table ->\n+        \/\/ the AccessibleContext of nodeA\n+        AccessibleContext accA = act.getAccessibleChild(0).getAccessibleContext();\n+\n+        \/\/ find the AccessibleContext of the next sibling of nodeA, by getting\n+        \/\/ child+1 of the parent (the table)\n+        AccessibleContext accB = act.getAccessibleChild(\n+                accA.getAccessibleIndexInParent()+1).getAccessibleContext();\n+\n+        \/\/ look to see who the sibling is.\n+        if (accB.getAccessibleName().compareTo(\"B\") != 0) {\n+            throw new RuntimeException(\"Parent node is a sibling instead!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4169215.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4196987\n+ * @summary Test Metal L&F JTree expander icons transparency.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4196987\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTree;\n+import javax.swing.UIManager;\n+\n+public class bug4196987 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        If the background of tree icons are red, the test PASSES.\n+        Otherwise the test FAILS.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4196987 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4196987::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame f = new JFrame(\"JTree Icon Transparency Test\");\n+        JPanel p = new JPanel();\n+        p.setBackground(Color.red);\n+        p.setLayout(new GridLayout(1, 1));\n+        JTree t = new JTree();\n+        t.setOpaque(false);\n+        p.add(t);\n+        f.add(p);\n+        f.setSize(200, 200);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4196987.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4270654\n+ * @summary Tests that selection change in JTree does not cause unnecessary\n+            scrolling.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4270654\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTree;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+\n+public class bug4270654 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        Select the \"dan\" node and scroll to the right a little using the\n+        scrollbar. Then press down arrow key. If the tree unscrolls back\n+        to the left, the test FAILS. Otherwise, the test PASSES.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4270654 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4270654::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame f = new JFrame(\"JTree Scroll Back Test\");\n+        DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"root\");\n+        String[] lev1 = {\"foo\", \"bar\", \"dan\"};\n+        String[][] lev2 = {\n+                {},\n+                {\"small\", \"a nice big node for testing\"},\n+                {\"xyz\", \"pqd\", \"a really really big node for testing\"}};\n+        for (int i = 0; i < lev1.length; i++) {\n+            DefaultMutableTreeNode child = new DefaultMutableTreeNode(lev1[i]);\n+            root.add(child);\n+            for (int j = 0; j < lev2[i].length; j++)\n+                child.add(new DefaultMutableTreeNode(lev2[i][j]));\n+        }\n+        final JTree tree = new JTree(root);\n+        tree.expandRow(3);\n+        f.add(new JScrollPane(tree));\n+        f.setSize(200, 200);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4270654.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4618767\n+ * @summary First letter navigation in JTree interferes with mnemonics\n+ * @key headful\n+ * @run main bug4618767\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.MenuEvent;\n+import javax.swing.event.MenuListener;\n+\n+public class bug4618767 {\n+    private static JFrame f;\n+    private static final JTree tree = new\n+            JTree(new String[] {\"one\", \"two\", \"three\", \"four\"});\n+    private static boolean menuSelected;\n+    private static CountDownLatch listGainedFocusLatch = new CountDownLatch(1);\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"bug4618767 Test\");\n+                JMenu menu = new JMenu(\"File\");\n+                menu.setMnemonic('F');\n+                JMenuItem menuItem = new JMenuItem(\"item\");\n+                menu.add(menuItem);\n+                JMenuBar menuBar = new JMenuBar();\n+                menuBar.add(menu);\n+                f.setJMenuBar(menuBar);\n+\n+                menu.addMenuListener(new MenuListener() {\n+                    public void menuCanceled(MenuEvent e) {}\n+                    public void menuDeselected(MenuEvent e) {}\n+                    public void menuSelected(MenuEvent e) {\n+                        menuSelected = true;\n+                    }\n+                });\n+\n+                tree.addFocusListener(new FocusAdapter() {\n+                    @Override\n+                    public void focusGained(FocusEvent e) {\n+                        listGainedFocusLatch.countDown();\n+                    }\n+                });\n+                f.add(tree);\n+                f.pack();\n+                f.setLocationRelativeTo(null);\n+                f.setAlwaysOnTop(true);\n+                f.setVisible(true);\n+            });\n+            runTest();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void runTest() throws Exception {\n+        if (!listGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+            throw new RuntimeException(\"Waited too long, but can't gain\" +\n+                    \" focus for list\");\n+        }\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(200);\n+        robot.waitForIdle();\n+        robot.keyPress(KeyEvent.VK_O);\n+        robot.keyRelease(KeyEvent.VK_O);\n+        robot.waitForIdle();\n+        robot.keyPress(KeyEvent.VK_ALT);\n+        robot.keyPress(KeyEvent.VK_F);\n+        robot.keyRelease(KeyEvent.VK_F);\n+        robot.keyRelease(KeyEvent.VK_ALT);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (menuSelected && !tree.getSelectionPath()\n+                    .getLastPathComponent().toString().equals(\"one\")) {\n+                throw new RuntimeException(\"Mnemonics interferes with JTree\" +\n+                        \" item selection using KeyEvent\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4618767.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"}]}