{"files":[{"patch":"@@ -1,26 +0,0 @@\n-#\n-# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_aix_signal\n-numa_error\n-numa_warn\n","filename":"make\/data\/hotspot-symbols\/symbols-aix","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -1,26 +0,0 @@\n-#\n-# Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_AccessVMBooleanFlag\n-JVM_AccessVMIntFlag\n-JVM_VMBreakPoint\n","filename":"make\/data\/hotspot-symbols\/symbols-aix-debug","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-#\n-# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_linux_signal\n-JVM_IsUseContainerSupport\n-numa_error\n-numa_warn\n","filename":"make\/data\/hotspot-symbols\/symbols-linux","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,24 +0,0 @@\n-#\n-# Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_handle_bsd_signal\n","filename":"make\/data\/hotspot-symbols\/symbols-macosx","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -1,35 +0,0 @@\n-#\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-AsyncGetCallTrace\n-jio_fprintf\n-jio_printf\n-jio_snprintf\n-jio_vfprintf\n-jio_vsnprintf\n-JNI_CreateJavaVM\n-JNI_GetCreatedJavaVMs\n-JNI_GetDefaultJavaVMInitArgs\n-JVM_IsForeignLinkerSupported\n-JVM_FindClassFromBootLoader\n-JVM_InitAgentProperties\n","filename":"make\/data\/hotspot-symbols\/symbols-shared","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,233 +0,0 @@\n-#\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-JVM_ActiveProcessorCount\n-JVM_AreNestMates\n-JVM_ArrayCopy\n-JVM_AssertionStatusDirectives\n-JVM_BeforeHalt\n-JVM_CallStackWalk\n-JVM_Clone\n-JVM_ConstantPoolGetClassAt\n-JVM_ConstantPoolGetClassAtIfLoaded\n-JVM_ConstantPoolGetClassRefIndexAt\n-JVM_ConstantPoolGetDoubleAt\n-JVM_ConstantPoolGetFieldAt\n-JVM_ConstantPoolGetFieldAtIfLoaded\n-JVM_ConstantPoolGetFloatAt\n-JVM_ConstantPoolGetIntAt\n-JVM_ConstantPoolGetLongAt\n-JVM_ConstantPoolGetMemberRefInfoAt\n-JVM_ConstantPoolGetMethodAt\n-JVM_ConstantPoolGetMethodAtIfLoaded\n-JVM_ConstantPoolGetNameAndTypeRefIndexAt\n-JVM_ConstantPoolGetNameAndTypeRefInfoAt\n-JVM_ConstantPoolGetSize\n-JVM_ConstantPoolGetStringAt\n-JVM_ConstantPoolGetTagAt\n-JVM_ConstantPoolGetUTF8At\n-JVM_CurrentCarrierThread\n-JVM_CurrentThread\n-JVM_SetCurrentThread\n-JVM_CurrentTimeMillis\n-JVM_DefineClass\n-JVM_DefineClassWithSource\n-JVM_DesiredAssertionStatus\n-JVM_DumpAllStacks\n-JVM_DumpClassListToFile\n-JVM_DumpDynamicArchive\n-JVM_DumpThreads\n-JVM_ExpandStackFrameInfo\n-JVM_FillInStackTrace\n-JVM_FindClassFromCaller\n-JVM_FindClassFromClass\n-JVM_FindLibraryEntry\n-JVM_FindLoadedClass\n-JVM_FindPrimitiveClass\n-JVM_FindSignal\n-JVM_FreeMemory\n-JVM_GC\n-JVM_GetAllThreads\n-JVM_GetAndClearReferencePendingList\n-JVM_GetArrayElement\n-JVM_GetArrayLength\n-JVM_GetCallerClass\n-JVM_GetClassAccessFlags\n-JVM_GetClassAnnotations\n-JVM_GetClassConstantPool\n-JVM_GetClassContext\n-JVM_GetClassCPEntriesCount\n-JVM_GetClassCPTypes\n-JVM_GetClassDeclaredConstructors\n-JVM_GetClassDeclaredFields\n-JVM_GetClassDeclaredMethods\n-JVM_GetClassFieldsCount\n-JVM_GetClassFileVersion\n-JVM_GetClassInterfaces\n-JVM_GetClassMethodsCount\n-JVM_GetClassModifiers\n-JVM_GetClassNameUTF\n-JVM_GetClassSignature\n-JVM_GetClassSigners\n-JVM_GetClassTypeAnnotations\n-JVM_GetCPClassNameUTF\n-JVM_GetCPFieldClassNameUTF\n-JVM_GetCPFieldModifiers\n-JVM_GetCPFieldNameUTF\n-JVM_GetCPFieldSignatureUTF\n-JVM_GetCPMethodClassNameUTF\n-JVM_GetCPMethodModifiers\n-JVM_GetCPMethodNameUTF\n-JVM_GetCPMethodSignatureUTF\n-JVM_GetDeclaredClasses\n-JVM_GetDeclaringClass\n-JVM_GetEnclosingMethodInfo\n-JVM_GetExtendedNPEMessage\n-JVM_GetFieldIxModifiers\n-JVM_GetFieldTypeAnnotations\n-JVM_GetInheritedAccessControlContext\n-JVM_GetManagement\n-JVM_GetMethodIxArgsSize\n-JVM_GetMethodIxByteCode\n-JVM_GetMethodIxByteCodeLength\n-JVM_GetMethodIxExceptionIndexes\n-JVM_GetMethodIxExceptionsCount\n-JVM_GetMethodIxExceptionTableEntry\n-JVM_GetMethodIxExceptionTableLength\n-JVM_GetMethodIxLocalsCount\n-JVM_GetMethodIxMaxStack\n-JVM_GetMethodIxModifiers\n-JVM_GetMethodIxNameUTF\n-JVM_GetMethodIxSignatureUTF\n-JVM_GetMethodParameters\n-JVM_GetMethodTypeAnnotations\n-JVM_GetNanoTimeAdjustment\n-JVM_GetNestHost\n-JVM_GetNestMembers\n-JVM_GetNextThreadIdOffset\n-JVM_GetPermittedSubclasses\n-JVM_GetPrimitiveArrayElement\n-JVM_GetProperties\n-JVM_GetProtectionDomain\n-JVM_GetRandomSeedForDumping\n-JVM_GetRecordComponents\n-JVM_GetSimpleBinaryName\n-JVM_GetStackAccessControlContext\n-JVM_GetSystemPackage\n-JVM_GetSystemPackages\n-JVM_GetTemporaryDirectory\n-JVM_GetVmArguments\n-JVM_Halt\n-JVM_HasReferencePendingList\n-JVM_HoldsLock\n-JVM_GetStackTrace\n-JVM_IHashCode\n-JVM_InitClassName\n-JVM_InitStackTraceElement\n-JVM_InitStackTraceElementArray\n-JVM_InitializeFromArchive\n-JVM_InternString\n-JVM_Interrupt\n-JVM_InvokeMethod\n-JVM_IsArrayClass\n-JVM_IsCDSDumpingEnabled\n-JVM_IsConstructorIx\n-JVM_IsDumpingClassList\n-JVM_IsFinalizationEnabled\n-JVM_IsHiddenClass\n-JVM_IsInterface\n-JVM_IsPreviewEnabled\n-JVM_IsContinuationsSupported\n-JVM_IsPrimitiveClass\n-JVM_IsRecord\n-JVM_IsSameClassPackage\n-JVM_IsSharingEnabled\n-JVM_IsSupportedJNIVersion\n-JVM_IsVMGeneratedMethodIx\n-JVM_LatestUserDefinedLoader\n-JVM_LoadZipLibrary\n-JVM_LoadLibrary\n-JVM_LookupDefineClass\n-JVM_LookupLambdaProxyClassFromArchive\n-JVM_LogLambdaFormInvoker\n-JVM_MaxMemory\n-JVM_MaxObjectInspectionAge\n-JVM_MonitorNotify\n-JVM_MonitorNotifyAll\n-JVM_MonitorWait\n-JVM_MoreStackWalk\n-JVM_NanoTime\n-JVM_NativePath\n-JVM_NewArray\n-JVM_NewInstanceFromConstructor\n-JVM_NewMultiArray\n-JVM_PhantomReferenceRefersTo\n-JVM_PrintWarningAtDynamicAgentLoad\n-JVM_RaiseSignal\n-JVM_RawMonitorCreate\n-JVM_RawMonitorDestroy\n-JVM_RawMonitorEnter\n-JVM_RawMonitorExit\n-JVM_ReferenceClear\n-JVM_ReferenceRefersTo\n-JVM_RegisterContinuationMethods\n-JVM_RegisterLambdaProxyClassForArchiving\n-JVM_RegisterSignal\n-JVM_ReleaseUTF\n-JVM_ReportFinalizationComplete\n-JVM_SetArrayElement\n-JVM_SetClassSigners\n-JVM_SetNativeThreadName\n-JVM_SetPrimitiveArrayElement\n-JVM_SetStackWalkContinuation\n-JVM_SetThreadPriority\n-JVM_SleepNanos\n-JVM_StartThread\n-JVM_TotalMemory\n-JVM_UnloadLibrary\n-JVM_WaitForReferencePendingList\n-JVM_Yield\n-\n-# Module related API's\n-JVM_AddModuleExports\n-JVM_AddModuleExportsToAll\n-JVM_AddModuleExportsToAllUnnamed\n-JVM_AddReadsModule\n-JVM_DefineArchivedModules\n-JVM_DefineModule\n-JVM_SetBootLoaderUnnamedModule\n-\n-# Virtual thread notifications for JVMTI\n-JVM_VirtualThreadStart\n-JVM_VirtualThreadEnd\n-JVM_VirtualThreadMount\n-JVM_VirtualThreadUnmount\n-JVM_VirtualThreadHideFrames\n-JVM_VirtualThreadDisableSuspend\n-\n-# Scoped values\n-JVM_EnsureMaterializedForStackWalk_func\n-JVM_FindScopedValueBindings\n-JVM_ScopedValueCache\n-JVM_SetScopedValueCache\n-#\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":0,"deletions":233,"binary":false,"changes":233,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,14 +78,0 @@\n-\n-ifeq ($(call isTargetOs, windows), true)\n-  GTEST_JVM_MAPFILE := $(JVM_MAPFILE)\n-else\n-  GTEST_JVM_MAPFILE := $(JVM_OUTPUTDIR)\/gtest\/mapfile\n-\n-  $(JVM_OUTPUTDIR)\/gtest\/symbols: $(JVM_OUTPUTDIR)\/symbols\n-\t$(call MakeDir, $(@D))\n-\t( $(CAT) $< ; echo \"runUnitTests\" ) > $@\n-\n-  $(GTEST_JVM_MAPFILE): $(JVM_OUTPUTDIR)\/gtest\/symbols\n-\t$(call create-mapfile)\n-endif\n-\n@@ -126,2 +112,0 @@\n-    MAPFILE := $(GTEST_JVM_MAPFILE), \\\n-    USE_MAPFILE_FOR_SYMBOLS := true, \\\n@@ -137,0 +121,5 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  $(BUILD_GTEST_LIBJVM_TARGET): $(WIN_EXPORT_FILE)\n+endif\n+\n+\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-JVM_MAPFILE := $(JVM_OUTPUTDIR)\/mapfile\n@@ -149,0 +148,10 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/win-exports.txt\n+\n+  JVM_LDFLAGS += -def:$(WIN_EXPORT_FILE)\n+endif\n+\n+ifeq ($(TOOLCHAIN_TYPE), gcc)\n+  JVM_LDFLAGS += -Wl,--exclude-libs,ALL\n+endif\n+\n@@ -197,2 +206,0 @@\n-    MAPFILE := $(JVM_MAPFILE), \\\n-    USE_MAPFILE_FOR_SYMBOLS := true, \\\n@@ -207,0 +214,37 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  # The following lines create a list of vftable symbols to be filtered out of\n+  # the symbol file. Removing this line causes the linker to complain about too\n+  # many (> 64K) symbols, so the _guess_ is that this line is here to keep down\n+  # the number of exported symbols below that limit.\n+  #\n+  # Some usages of C++ lambdas require the vftable symbol of classes that use\n+  # the lambda type as a template parameter. The usage of those classes won't\n+  # link if their vftable symbols are removed. That's why there's an exception\n+  # for vftable symbols containing the string 'lambda'.\n+  #\n+  # A very simple example of a lambda usage that fails if the lambda vftable\n+  # symbols are missing in the symbol file:\n+  #\n+  # #include <functional>\n+  # std::function<void()> f = [](){}\n+  FILTER_SYMBOLS_AWK_SCRIPT := \\\n+      '{ \\\n+        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print $$7; \\\n+      }'\n+\n+  # A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n+  # cd && *.obj, but this will result in very long command lines, which could be\n+  # problematic.\n+  $(WIN_EXPORT_FILE): $(BUILD_LIBJVM_ALL_OBJS)\n+\t$(call LogInfo, Generating list of symbols to export from object files)\n+\t$(call MakeDir, $(@D))\n+\t$(CD) $(JVM_OUTPUTDIR)\/objs && \\\n+\t    $(DUMPBIN) -symbols *$(OBJ_SUFFIX) | $(AWK) $(FILTER_SYMBOLS_AWK_SCRIPT) | $(SORT) -u > $@.syms\n+\t$(ECHO) \"EXPORTS\" > $@.tmp\n+\t$(AWK) '{ if ($$0 ~ \".\") { print \"  \" $$0 } }'  < $@.syms >> $@.tmp\n+\t$(RM) $@\n+\t$(MV) $@.tmp $@\n+\n+  $(BUILD_LIBJVM_TARGET): $(WIN_EXPORT_FILE)\n+endif\n+\n@@ -211,1 +255,1 @@\n-$(ABSTRACT_VM_VERSION_OBJ): $(filter-out $(ABSTRACT_VM_VERSION_OBJ) $(JVM_MAPFILE), \\\n+$(ABSTRACT_VM_VERSION_OBJ): $(filter-out $(ABSTRACT_VM_VERSION_OBJ), \\\n@@ -239,5 +283,0 @@\n-# Include mapfile generation. It relies on BUILD_LIBJVM_ALL_OBJS which is only\n-# defined after the above call to BUILD_LIBJVM. Mapfile will be generated\n-# after all object files are built, but before the jvm library is linked.\n-include lib\/JvmMapfile.gmk\n-\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":49,"deletions":10,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -1,176 +0,0 @@\n-#\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-$(eval $(call IncludeCustomExtension, hotspot\/lib\/JvmMapfile.gmk))\n-\n-################################################################################\n-# Combine a list of static symbols\n-\n-ifeq ($(call And, $(call isTargetOs, windows) $(call isTargetCpu, x86_64)), false)\n-  # On Windows x86_64, we should not have any symbols at all, since that\n-  # results in duplicate warnings from the linker (JDK-8043491).\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-shared\n-endif\n-\n-ifeq ($(call isTargetOsType, unix), true)\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-unix\n-endif\n-\n-ifneq ($(wildcard $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)), )\n-  SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)\n-endif\n-\n-ifneq ($(findstring debug, $(DEBUG_LEVEL)), )\n-  ifneq ($(wildcard $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)-debug), )\n-    SYMBOLS_SRC += $(TOPDIR)\/make\/data\/hotspot-symbols\/symbols-$(OPENJDK_TARGET_OS)-debug\n-  endif\n-endif\n-\n-################################################################################\n-# Create a dynamic list of symbols from the built object files. This is highly\n-# platform dependent.\n-\n-ifeq ($(call isTargetOs, linux), true)\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) --defined-only *$(OBJ_SUFFIX)\n-  ifneq ($(FILTER_SYMBOLS_PATTERN), )\n-    FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|\n-  endif\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)^_ZTV|^gHotSpotVM|^UseSharedSpaces$$\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|^_ZN9Arguments17SharedArchivePathE$$\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$3 ~ \/$(FILTER_SYMBOLS_PATTERN)\/) print $$3; \\\n-      }'\n-\n-else ifeq ($(call isTargetOs, macosx), true)\n-  # nm on macosx prints out \"warning: nm: no name list\" to stderr for\n-  # files without symbols. Hide this, even at the expense of hiding real errors.\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) -Uj *$(OBJ_SUFFIX) 2> \/dev\/null\n-  ifneq ($(FILTER_SYMBOLS_PATTERN), )\n-    FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)|\n-  endif\n-  FILTER_SYMBOLS_PATTERN := $(FILTER_SYMBOLS_PATTERN)^_ZTV|^gHotSpotVM\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$3 ~ \/$(FILTER_SYMBOLS_PATTERN)\/) print $$3; \\\n-      }'\n-\n-# NOTE: The script is from the old build. It is broken and finds no symbols.\n-# The script below might be what was intended, but it fails to link with tons\n-# of 'cannot export hidden symbol vtable for X'.\n-#  '{ if ($$1 ~ \/^__ZTV\/ || $$1 ~ \/^_gHotSpotVM\/) print substr($$1, 2) }'\n-else ifeq ($(call isTargetOs, aix), true)\n-  # NOTE: The old build had the solution below. This should to be fixed in\n-  # configure instead.\n-\n-  # On AIX we have to prevent that we pick up the 'nm' version from the GNU binutils\n-  # which may be installed under \/opt\/freeware\/bin. So better use an absolute path here!\n-  # NM=\/usr\/bin\/nm\n-\n-  DUMP_SYMBOLS_CMD := $(NM) $(NMFLAGS) -B -C *$(OBJ_SUFFIX)\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if (($$2=\"d\" || $$2=\"D\") && ($$3 ~ \/^__vft\/ || $$3 ~ \/^gHotSpotVM\/)) print $$3; \\\n-        if ($$3 ~ \/^UseSharedSpaces$$\/) print $$3; \\\n-        if ($$3 ~ \/^SharedArchivePath__9Arguments$$\/) print $$3; \\\n-       }'\n-\n-else ifeq ($(call isTargetOs, windows), true)\n-  DUMP_SYMBOLS_CMD := $(DUMPBIN) -symbols *$(OBJ_SUFFIX)\n-\n-  # The following lines create a list of vftable symbols to be filtered out of\n-  # the mapfile. Removing this line causes the linker to complain about too many\n-  # (> 64K) symbols, so the _guess_ is that this line is here to keep down the\n-  # number of exported symbols below that limit.\n-  #\n-  # Some usages of C++ lambdas require the vftable symbol of classes that use\n-  # the lambda type as a template parameter. The usage of those classes won't\n-  # link if their vftable symbols are removed. That's why there's an exception\n-  # for vftable symbols containing the string 'lambda'.\n-  #\n-  # A very simple example of a lambda usage that fails if the lambda vftable\n-  # symbols are missing in the mapfile:\n-  #\n-  # #include <functional>\n-  # std::function<void()> f = [](){}\n-\n-  FILTER_SYMBOLS_AWK_SCRIPT := \\\n-      '{ \\\n-        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print $$7; \\\n-      }'\n-\n-else\n-  $(error Unknown target OS $(OPENJDK_TARGET_OS) in JvmMapfile.gmk)\n-endif\n-\n-# A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n-# cd && *.o, but this will result in very long command lines, which is\n-# problematic on some platforms.\n-$(JVM_OUTPUTDIR)\/symbols-objects: $(BUILD_LIBJVM_ALL_OBJS)\n-\t$(call LogInfo, Generating symbol list from object files)\n-\t$(CD) $(JVM_OUTPUTDIR)\/objs && \\\n-\t  $(DUMP_SYMBOLS_CMD) | $(AWK) $(FILTER_SYMBOLS_AWK_SCRIPT) | $(SORT) -u > $@\n-\n-SYMBOLS_SRC += $(JVM_OUTPUTDIR)\/symbols-objects\n-\n-################################################################################\n-# Now concatenate all symbol lists into a single file and remove comments.\n-\n-$(JVM_OUTPUTDIR)\/symbols: $(SYMBOLS_SRC)\n-\t$(SED) -e '\/^#\/d' $^ > $@\n-\n-################################################################################\n-# Finally convert the symbol list into a platform-specific mapfile\n-\n-ifeq ($(call isTargetOs, macosx), true)\n-  # On macosx, we need to add a leading underscore\n-  define create-mapfile-work\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"  _\" $$0 } }'  < $^ > $@.tmp\n-  endef\n-else ifeq ($(call isTargetOs, windows), true)\n-  # On windows, add an 'EXPORTS' header\n-  define create-mapfile-work\n-\t  $(ECHO) \"EXPORTS\" > $@.tmp\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"  \" $$0 } }'  < $^ >> $@.tmp\n-  endef\n-else\n-  # Assume standard linker script\n-  define create-mapfile-work\n-\t  $(PRINTF) \"SUNWprivate_1.1 { \\n  global: \\n\" > $@.tmp\n-\t  $(AWK) '{ if ($$0 ~ \".\") { print \"    \" $$0 \";\" } }' < $^ >> $@.tmp\n-\t  $(PRINTF) \"  local: \\n    *; \\n }; \\n\" >> $@.tmp\n-  endef\n-endif\n-\n-define create-mapfile\n-\t$(call LogInfo, Creating mapfile)\n-\t$(call MakeDir, $(@D))\n-\t$(call create-mapfile-work)\n-\t$(RM) $@\n-\t$(MV) $@.tmp $@\n-endef\n-\n-$(JVM_MAPFILE): $(JVM_OUTPUTDIR)\/symbols\n-\t$(call create-mapfile)\n","filename":"make\/hotspot\/lib\/JvmMapfile.gmk","additions":0,"deletions":176,"binary":false,"changes":176,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,5 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#undef JNIEXPORT\n+#define JNIEXPORT\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,0 +31,5 @@\n+#ifdef __APPLE__\n+        .private_extern CFUNC(_Copy_conjoint_words)\n+        .private_extern CFUNC(_Copy_disjoint_words)\n+#endif\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/copy_bsd_aarch64.S","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,9 @@\n+#ifdef __APPLE__\n+    .private_extern SYMBOL(SafeFetchN_impl)\n+    .private_extern SYMBOL(_SafeFetchN_fault)\n+    .private_extern SYMBOL(_SafeFetchN_continuation)\n+    .private_extern SYMBOL(SafeFetch32_impl)\n+    .private_extern SYMBOL(_SafeFetch32_fault)\n+    .private_extern SYMBOL(_SafeFetch32_continuation)\n+#endif\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/safefetch_bsd_aarch64.S","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+        .globl SYMBOL(SpinPause)\n@@ -53,0 +54,14 @@\n+#ifdef __APPLE__\n+        .private_extern SYMBOL(fixcw)\n+        .private_extern SYMBOL(SpinPause)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n+        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n+        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n+        .private_extern SYMBOL(_mmx_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Atomic_cmpxchg_long)\n+        .private_extern SYMBOL(_Atomic_move_long)\n+#endif\n+\n@@ -65,1 +80,0 @@\n-        .globl  SYMBOL(SpinPause)\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_32.S","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-# \n-# Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+#\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,5 +34,6 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n-\t\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n+\n+        .globl SYMBOL(SpinPause)\n@@ -40,1 +41,1 @@\n-\t.globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n@@ -47,1 +48,12 @@\n-\t.text\n+#ifdef __APPLE__\n+        .private_extern SYMBOL(SpinPause)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n+        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n+        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n+        .private_extern SYMBOL(_Copy_arrayof_conjoint_jlongs)\n+        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n+#endif\n+\n+        .text\n@@ -49,1 +61,0 @@\n-        .globl SYMBOL(SpinPause)\n@@ -66,1 +77,1 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n@@ -74,1 +85,1 @@\n-        jbe      acb_CopyLeft \n+        jbe      acb_CopyLeft\n@@ -168,2 +179,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n-\tELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n+        ELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n@@ -178,1 +189,1 @@\n-        jbe      acs_CopyLeft \n+        jbe      acs_CopyLeft\n@@ -258,2 +269,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n-\tELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n+        ELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n@@ -268,1 +279,1 @@\n-        jbe      aci_CopyLeft \n+        jbe      aci_CopyLeft\n@@ -337,2 +348,2 @@\n-\tELF_TYPE(_Copy_arrayof_conjoint_jlongs,@function)\n-\tELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n+        ELF_TYPE(_Copy_arrayof_conjoint_jlongs,@function)\n+        ELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n@@ -345,1 +356,1 @@\n-        jbe      acl_CopyLeft \n+        jbe      acl_CopyLeft\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_64.S","additions":32,"deletions":21,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,9 @@\n+#ifdef __APPLE__\n+    .private_extern SYMBOL(SafeFetch32_impl)\n+    .private_extern SYMBOL(SafeFetchN_impl)\n+    .private_extern SYMBOL(_SafeFetch32_fault)\n+    .private_extern SYMBOL(_SafeFetchN_fault)\n+    .private_extern SYMBOL(_SafeFetch32_continuation)\n+    .private_extern SYMBOL(_SafeFetchN_continuation)\n+#endif\n+\n@@ -47,1 +56,1 @@\n-\tELF_TYPE(SafeFetch32_impl,@function)\n+    ELF_TYPE(SafeFetch32_impl,@function)\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/safefetch_bsd_x86_64.S","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+        .hidden aarch64_atomic_fetch_add_8_default_impl\n@@ -43,0 +44,1 @@\n+        .hidden aarch64_atomic_fetch_add_4_default_impl\n@@ -59,0 +61,1 @@\n+        .hidden aarch64_atomic_fetch_add_8_relaxed_default_impl\n@@ -74,0 +77,1 @@\n+        .hidden aarch64_atomic_fetch_add_4_relaxed_default_impl\n@@ -89,0 +93,1 @@\n+        .hidden aarch64_atomic_xchg_4_default_impl\n@@ -104,0 +109,1 @@\n+        .hidden aarch64_atomic_xchg_8_default_impl\n@@ -119,0 +125,1 @@\n+        .hidden aarch64_atomic_cmpxchg_1_default_impl\n@@ -139,0 +146,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_default_impl\n@@ -158,0 +166,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_default_impl\n@@ -177,0 +186,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_release_default_impl\n@@ -194,0 +204,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_release_default_impl\n@@ -211,0 +222,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_seq_cst_default_impl\n@@ -228,0 +240,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_seq_cst_default_impl\n@@ -245,0 +258,1 @@\n+.hidden aarch64_atomic_cmpxchg_1_relaxed_default_impl\n@@ -263,0 +277,1 @@\n+        .hidden aarch64_atomic_cmpxchg_4_relaxed_default_impl\n@@ -280,0 +295,1 @@\n+        .hidden aarch64_atomic_cmpxchg_8_relaxed_default_impl\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/atomic_linux_aarch64.S","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+        .hidden _Copy_conjoint_words\n+        .hidden _Copy_disjoint_words\n+\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/copy_linux_aarch64.S","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/safefetch_linux_aarch64.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,2 +28,3 @@\n-\t.global\t_ZN10JavaThread25aarch64_get_thread_helperEv\n-\t.type\t_ZN10JavaThread25aarch64_get_thread_helperEv, %function\n+        .global\t_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .hidden\t_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .type\t_ZN10JavaThread25aarch64_get_thread_helperEv, %function\n@@ -32,13 +33,13 @@\n-\thint #0x19      \/\/ paciasp\n-\tstp x29, x30, [sp, -16]!\n-\tadrp x0, :tlsdesc:_ZN6Thread12_thr_currentE\n-\tldr x1, [x0, #:tlsdesc_lo12:_ZN6Thread12_thr_currentE]\n-\tadd x0, x0, :tlsdesc_lo12:_ZN6Thread12_thr_currentE\n-\t.tlsdesccall _ZN6Thread12_thr_currentE\n-\tblr x1\n-\tmrs x1, tpidr_el0\n-\tadd x0, x1, x0\n-\tldr x0, [x0]\n-\tldp x29, x30, [sp], 16\n-\thint #0x1d      \/\/ autiasp\n-\tret\n+        hint #0x19      \/\/ paciasp\n+        stp x29, x30, [sp, -16]!\n+        adrp x0, :tlsdesc:_ZN6Thread12_thr_currentE\n+        ldr x1, [x0, #:tlsdesc_lo12:_ZN6Thread12_thr_currentE]\n+        add x0, x0, :tlsdesc_lo12:_ZN6Thread12_thr_currentE\n+        .tlsdesccall _ZN6Thread12_thr_currentE\n+        blr x1\n+        mrs x1, tpidr_el0\n+        add x0, x1, x0\n+        ldr x0, [x0]\n+        ldp x29, x30, [sp], 16\n+        hint #0x1d      \/\/ autiasp\n+        ret\n@@ -46,1 +47,1 @@\n-\t.size _ZN10JavaThread25aarch64_get_thread_helperEv, .-_ZN10JavaThread25aarch64_get_thread_helperEv\n+        .size _ZN10JavaThread25aarch64_get_thread_helperEv, .-_ZN10JavaThread25aarch64_get_thread_helperEv\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,4 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n@@ -31,0 +31,3 @@\n+        .globl  SpinPause\n+        .hidden  SpinPause\n+        .type SpinPause, %function\n@@ -32,1 +35,2 @@\n-\t.type _Copy_conjoint_bytes, %function\n+        .hidden _Copy_conjoint_bytes\n+        .type _Copy_conjoint_bytes, %function\n@@ -34,5 +38,8 @@\n-\t.type _Copy_arrayof_conjoint_bytes, %function\n-\t.globl _Copy_disjoint_words\n-\t.type _Copy_disjoint_words, %function\n-\t.globl _Copy_conjoint_words\n-\t.type _Copy_conjoint_words, %function\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .type _Copy_arrayof_conjoint_bytes, %function\n+        .globl _Copy_disjoint_words\n+        .hidden _Copy_disjoint_words\n+        .type _Copy_disjoint_words, %function\n+        .globl _Copy_conjoint_words\n+        .hidden _Copy_conjoint_words\n+        .type _Copy_conjoint_words, %function\n@@ -40,3 +47,5 @@\n-\t.type _Copy_conjoint_jshorts_atomic, %function\n-\t.globl _Copy_arrayof_conjoint_jshorts\n-\t.type _Copy_arrayof_conjoint_jshorts, %function\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .type _Copy_conjoint_jshorts_atomic, %function\n+        .globl _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .type _Copy_arrayof_conjoint_jshorts, %function\n@@ -44,1 +53,2 @@\n-\t.type _Copy_conjoint_jints_atomic, %function\n+        .hidden _Copy_conjoint_jints_atomic\n+        .type _Copy_conjoint_jints_atomic, %function\n@@ -46,5 +56,8 @@\n-\t.type _Copy_arrayof_conjoint_jints, %function\n-\t.globl _Copy_conjoint_jlongs_atomic\n-\t.type _Copy_conjoint_jlongs_atomic, %function\n-\t.globl _Copy_arrayof_conjoint_jlongs\n-\t.type _Copy_arrayof_conjoint_jlongs, %function\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .type _Copy_arrayof_conjoint_jints, %function\n+        .globl _Copy_conjoint_jlongs_atomic\n+        .hidden _Copy_conjoint_jlongs_atomic\n+        .type _Copy_conjoint_jlongs_atomic, %function\n+        .globl _Copy_arrayof_conjoint_jlongs\n+        .hidden _Copy_arrayof_conjoint_jlongs\n+        .type _Copy_arrayof_conjoint_jlongs, %function\n@@ -55,3 +68,1 @@\n-\t.text\n-        .globl  SpinPause\n-        .type SpinPause, %function\n+        .text\n@@ -73,1 +84,1 @@\n- \n+\n@@ -84,1 +95,1 @@\n-\tblt\tdw_f2b_loop_32_finish\n+        blt\tdw_f2b_loop_32_finish\n@@ -87,1 +98,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -94,1 +105,1 @@\n-\tblt\tdisjoint_words_small\n+        blt\tdisjoint_words_small\n@@ -119,2 +130,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_words_finish\n+        cmp\tr2, #0\n+        beq\tconjoint_words_finish\n@@ -132,1 +143,1 @@\n-\tblt\tcw_f2b_loop_32_finish\n+        blt\tcw_f2b_loop_32_finish\n@@ -135,1 +146,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -142,1 +153,1 @@\n-\tblt\tconjoint_words_small\n+        blt\tconjoint_words_small\n@@ -157,1 +168,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -165,1 +176,1 @@\n-\tblt\tcw_b2f_loop_32_finish\n+        blt\tcw_b2f_loop_32_finish\n@@ -168,1 +179,1 @@\n-\tpld     [from, #-32]\n+        pld     [from, #-32]\n@@ -175,1 +186,1 @@\n-\tblt\tcw_b2f_copy_small\n+        blt\tcw_b2f_copy_small\n@@ -199,2 +210,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_shorts_finish\t\n+        cmp\tr2, #0\n+        beq\tconjoint_shorts_finish\n@@ -213,1 +224,1 @@\n-\t# Aligned source address\n+        # Aligned source address\n@@ -217,1 +228,1 @@\n-\tblt\tcs_f2b_loop_32_finish\n+        blt\tcs_f2b_loop_32_finish\n@@ -247,1 +258,1 @@\n-\t# Destination not aligned\n+        # Destination not aligned\n@@ -254,1 +265,1 @@\n-\t# Check to see if source is not aligned ether\n+        # Check to see if source is not aligned ether\n@@ -262,1 +273,1 @@\n-\t# Load 2 first bytes to r7 and make src ptr word aligned\n+        # Load 2 first bytes to r7 and make src ptr word aligned\n@@ -266,1 +277,1 @@\n-\t# Destination aligned, source not\n+        # Destination aligned, source not\n@@ -309,1 +320,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -322,1 +333,1 @@\n-\tblt\tcs_b2f_loop_32_finish\n+        blt\tcs_b2f_loop_32_finish\n@@ -362,1 +373,1 @@\n-\t# Destination not aligned\n+        # Destination not aligned\n@@ -367,1 +378,1 @@\n-\t# Check source alignment as well\n+        # Check source alignment as well\n@@ -371,1 +382,1 @@\n-\t# Source not aligned\n+        # Source not aligned\n@@ -396,1 +407,1 @@\n-\tcmp     r2, #10\n+        cmp     r2, #10\n@@ -405,1 +416,1 @@\n-\t.align 3\n+        .align 3\n@@ -429,1 +440,1 @@\n-\t\n+\n@@ -437,2 +448,2 @@\n-\tcmp\tr2, #0\n-\tbeq\tconjoint_longs_finish\n+        cmp\tr2, #0\n+        beq\tconjoint_longs_finish\n@@ -450,1 +461,1 @@\n-\tblt\tcl_f2b_loop_32_finish\n+        blt\tcl_f2b_loop_32_finish\n@@ -453,1 +464,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -461,2 +472,2 @@\n-\tblt\tcl_f2b_copy_8\n-\tbgt\tcl_f2b_copy_24\n+        blt\tcl_f2b_copy_8\n+        bgt\tcl_f2b_copy_24\n@@ -465,1 +476,1 @@\n-\tb\tconjoint_longs_finish\n+        b\tconjoint_longs_finish\n@@ -471,1 +482,1 @@\n-\tldmia   from!, {r3 - r8}\n+        ldmia   from!, {r3 - r8}\n@@ -475,1 +486,1 @@\n-\t# Src and dest overlap, copy in a descending order\n+        # Src and dest overlap, copy in a descending order\n@@ -483,1 +494,1 @@\n-\tblt\tcl_b2f_loop_32_finish\n+        blt\tcl_b2f_loop_32_finish\n@@ -486,1 +497,1 @@\n-\tpld     [from]\n+        pld     [from]\n@@ -493,2 +504,2 @@\n-\tblt\tcl_b2f_copy_8\n-\tbgt\tcl_b2f_copy_24\n+        blt\tcl_b2f_copy_8\n+        bgt\tcl_b2f_copy_24\n@@ -499,1 +510,1 @@\n-\tldmdb   from!, {r3 - r4}\n+        ldmdb   from!, {r3 - r4}\n@@ -503,1 +514,1 @@\n-\tldmdb   from!, {r3 - r8}\n+        ldmdb   from!, {r3 - r8}\n@@ -509,2 +520,0 @@\n-\n-\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/linux_arm_32.S","additions":78,"deletions":69,"binary":false,"changes":147,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,5 @@\n+\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/safefetch_linux_arm.S","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/safefetch_linux_ppc.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/safefetch_linux_riscv.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetchN_continuation\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/safefetch_linux_s390.S","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+        .globl  SpinPause\n@@ -26,4 +27,4 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n@@ -33,1 +34,1 @@\n-\t.globl _Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_arrayof_conjoint_jshorts\n@@ -36,2 +37,2 @@\n-\t.globl _Copy_conjoint_jlongs_atomic\n-\t.globl _mmx_Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_conjoint_jlongs_atomic\n+        .globl _mmx_Copy_arrayof_conjoint_jshorts\n@@ -42,1 +43,1 @@\n-\t.text\n+        .hidden  SpinPause\n@@ -44,2 +45,14 @@\n-        .globl  SpinPause\n-\t.type   SpinPause,@function\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_conjoint_jints_atomic\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .hidden _Copy_conjoint_jlongs_atomic\n+        .hidden _mmx_Copy_arrayof_conjoint_jshorts\n+\n+        .hidden _Atomic_cmpxchg_long\n+        .hidden _Atomic_move_long\n+\n+        .text\n+\n+        .type   SpinPause,@function\n@@ -58,1 +71,1 @@\n-\t.type    _Copy_arrayof_conjoint_bytes,@function\n+        .type    _Copy_arrayof_conjoint_bytes,@function\n@@ -118,1 +131,1 @@\n-\t.space 8\n+        .space 8\n@@ -134,1 +147,1 @@\n-\tsubl     $1,%esi\n+        subl     $1,%esi\n@@ -146,1 +159,1 @@\n-\t.type    _Copy_conjoint_jshorts_atomic,@function\n+        .type    _Copy_conjoint_jshorts_atomic,@function\n@@ -233,1 +246,1 @@\n-\t.type    _Copy_arrayof_conjoint_jshorts,@function\n+        .type    _Copy_arrayof_conjoint_jshorts,@function\n@@ -310,2 +323,2 @@\n-\t.type    _Copy_conjoint_jints_atomic,@function\n-\t.type    _Copy_arrayof_conjoint_jints,@function\n+        .type    _Copy_conjoint_jints_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jints,@function\n@@ -387,1 +400,1 @@\n-\t.type    _Copy_conjoint_jlongs_atomic,@function\n+        .type    _Copy_conjoint_jlongs_atomic,@function\n@@ -416,1 +429,1 @@\n-\t.type    _mmx_Copy_arrayof_conjoint_jshorts,@function\n+        .type    _mmx_Copy_arrayof_conjoint_jshorts,@function\n@@ -468,2 +481,2 @@\n-\ttestl    %ecx,%ecx\n-\tja       1b\n+        testl    %ecx,%ecx\n+        ja       1b\n@@ -514,1 +527,1 @@\n-\t.type    _Atomic_cmpxchg_long,@function\n+        .type    _Atomic_cmpxchg_long,@function\n@@ -533,1 +546,1 @@\n-\t.type    _Atomic_move_long,@function\n+        .type    _Atomic_move_long,@function\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_32.S","additions":37,"deletions":24,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-# \n-# Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+#\n+# Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+        .globl SpinPause\n@@ -26,5 +27,5 @@\n-\t# from server-compiler-generated code via CallLeafNoFP,\n-\t# which means that they *must* either not use floating\n-\t# point or use it in the same manner as does the server\n-\t# compiler.\n-\t\n+        # from server-compiler-generated code via CallLeafNoFP,\n+        # which means that they *must* either not use floating\n+        # point or use it in the same manner as does the server\n+        # compiler.\n+\n@@ -32,1 +33,1 @@\n-\t.globl _Copy_arrayof_conjoint_jshorts\n+        .globl _Copy_arrayof_conjoint_jshorts\n@@ -39,1 +40,11 @@\n-\t.text\n+        .hidden SpinPause\n+\n+        .hidden _Copy_arrayof_conjoint_bytes\n+        .hidden _Copy_arrayof_conjoint_jshorts\n+        .hidden _Copy_conjoint_jshorts_atomic\n+        .hidden _Copy_arrayof_conjoint_jints\n+        .hidden _Copy_conjoint_jints_atomic\n+        .hidden _Copy_arrayof_conjoint_jlongs\n+        .hidden _Copy_conjoint_jlongs_atomic\n+\n+        .text\n@@ -41,1 +52,0 @@\n-        .globl SpinPause\n@@ -58,1 +68,1 @@\n-\t.type    _Copy_arrayof_conjoint_bytes,@function\n+        .type    _Copy_arrayof_conjoint_bytes,@function\n@@ -66,1 +76,1 @@\n-        jbe      acb_CopyLeft \n+        jbe      acb_CopyLeft\n@@ -160,2 +170,2 @@\n-\t.type    _Copy_arrayof_conjoint_jshorts,@function\n-\t.type    _Copy_conjoint_jshorts_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jshorts,@function\n+        .type    _Copy_conjoint_jshorts_atomic,@function\n@@ -170,1 +180,1 @@\n-        jbe      acs_CopyLeft \n+        jbe      acs_CopyLeft\n@@ -250,2 +260,2 @@\n-\t.type    _Copy_arrayof_conjoint_jints,@function\n-\t.type    _Copy_conjoint_jints_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jints,@function\n+        .type    _Copy_conjoint_jints_atomic,@function\n@@ -260,1 +270,1 @@\n-        jbe      aci_CopyLeft \n+        jbe      aci_CopyLeft\n@@ -329,2 +339,2 @@\n-\t.type    _Copy_arrayof_conjoint_jlongs,@function\n-\t.type    _Copy_conjoint_jlongs_atomic,@function\n+        .type    _Copy_arrayof_conjoint_jlongs,@function\n+        .type    _Copy_conjoint_jlongs_atomic,@function\n@@ -337,1 +347,1 @@\n-        jbe      acl_CopyLeft \n+        jbe      acl_CopyLeft\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_64.S","additions":31,"deletions":21,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,5 @@\n-\t.text\n+    .hidden SafeFetch32_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetch32_continuation\n+\n+    .text\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_32.S","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,8 @@\n-\t.text\n+    .hidden SafeFetch32_impl\n+    .hidden SafeFetchN_impl\n+    .hidden _SafeFetch32_fault\n+    .hidden _SafeFetchN_fault\n+    .hidden _SafeFetch32_continuation\n+    .hidden _SafeFetchN_continuation\n+\n+    .text\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_64.S","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -73,0 +73,5 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#undef JNIEXPORT\n+#define JNIEXPORT\n+#endif\n+\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,5 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#undef JNIEXPORT\n+#define JNIEXPORT\n+#endif\n+\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,6 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#define HIDDEN __attribute__ ((visibility (\"hidden\")))\n+#else\n+#define HIDDEN\n+#endif\n+\n@@ -61,1 +67,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -66,1 +72,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -71,1 +77,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -76,1 +82,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -81,1 +87,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -86,1 +92,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -91,1 +97,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -96,1 +102,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -101,1 +107,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -108,1 +114,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -115,1 +121,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -122,1 +128,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -129,1 +135,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -136,1 +142,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -141,1 +147,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -146,1 +152,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -151,1 +157,1 @@\n-  template<>\n+  template<> HIDDEN\n@@ -156,1 +162,1 @@\n-  template<>\n+  template<> HIDDEN\n","filename":"src\/hotspot\/share\/oops\/accessBackend.cpp","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,5 @@\n+#if defined(TARGET_COMPILER_gcc)\n+#undef JNIEXPORT\n+#define JNIEXPORT\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}