[{"commit":{"message":"Merge remote-tracking branch 'origin\/JDK-8362885' into JDK-8362885"},"files":[{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"}],"sha":"2095f574df95497669e7bd7c1916ba6c95bfa69e"},{"commit":{"message":"Update make\/modules\/jdk.compiler\/Gensrc.gmk as suggested.\n\nCo-authored-by: Magnus Ihse Bursie <mag@icus.se>"},"files":[{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"}],"sha":"019d0061355b35c8bd028aa22192e30502158704"},{"commit":{"message":"Using EnumMap, as suggested."},"files":[{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"}],"sha":"47ee2dbb2b363b729a9e4dc4847899804a51a1ca"},{"commit":{"message":"Removing unnecessary delimited, as suggested."},"files":[{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"}],"sha":"ab6486e42f36b378f6eaa459cfe987612a2acb64"},{"commit":{"message":"Reverting runtime checks, as suggested."},"files":[{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"}],"sha":"f1d6def8f8572a1249901dc62194ca91e008222f"},{"commit":{"message":"Fixing toString value for flags that have ACC_ overloaded flags."},"files":[{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"}],"sha":"e00209f0916e5c4d120fefe5de481ead4e67c227"},{"commit":{"message":"Review feedback: marking ACC flags with the @Use annotation, forces split of the TYPE target into CLASS\/MODULE\/PACKAGE\/TYPE_VARIABLE."},"files":[{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"test\/langtools\/tools\/javac\/flags\/FlagsTest.java"}],"sha":"b0fbd9195fb2d2935d71b1a32628a412c0f984ec"},{"commit":{"message":"Reflecting review feedback:\n- when conflict is detected, the generator fails\n- adding runtime checks\n- using constants for number of bits"},"files":[{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"test\/langtools\/tools\/javac\/flags\/FlagsTest.java"}],"sha":"5bc1d6dcd37f7ccf369a0c7ab1ab512cab737520"},{"commit":{"message":"Fixing tests."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/ArgTypeCompilerFactory.java"}],"sha":"0ab2ba48e971a7dc37491ccf961277343563fb65"},{"commit":{"message":"8362885: A more formal way to mark javac's Flags that belong to a specific Symbol type only"},"files":[{"filename":"make\/ToolsLangtools.gmk"},{"filename":"make\/langtools\/tools\/flagsgenerator\/FlagsGenerator.java"},{"filename":"make\/langtools\/tools\/propertiesparser\/parser\/MessageType.java"},{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Modules.java"},{"filename":"test\/langtools\/tools\/javac\/flags\/FlagsTest.java"}],"sha":"9c7007ffa802ab08363cbf51adaef959cfe91a9b"}]