{"files":[{"patch":"@@ -28,0 +28,2 @@\n+import java.util.Optional;\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -29,0 +31,50 @@\n+\/**\n+ * A mutable container object for a value.\n+ * <p>\n+ * An alternative for cases where {@link AtomicReference} would be an overkill.\n+ * Sample usage:\n+ * {@snippet :\n+ * void foo(MessageNotifier messageNotifier) {\n+ *     var lastMessage = Slot.createEmpty();\n+ *\n+ *     messageNotifier.setListener(msg -> {\n+ *         lastMessage.set(msg);\n+ *     }).run();\n+ *\n+ *     lastMessage.find().ifPresentOrElse(msg -> {\n+ *         System.out.println(String.format(\"The last message: [%s]\", msg));\n+ *     }, () -> {\n+ *         System.out.println(\"No messages received\");\n+ *     });\n+ * }\n+ *\n+ * abstract class MessageNotifier {\n+ *     MessageNotifier setListener(Consumer<String> messageConsumer) {\n+ *         callback = messageConsumer;\n+ *         return this;\n+ *     }\n+ *\n+ *     void run() {\n+ *         for (;;) {\n+ *             var msg = fetchNextMessage();\n+ *             msg.ifPresent(callback);\n+ *             if (msg.isEmpty()) {\n+ *                 break;\n+ *             }\n+ *         }\n+ *     }\n+ *\n+ *     abstract Optional<String> fetchNextMessage();\n+ *\n+ *     private Consumer<String> callback;\n+ * }\n+ * }\n+ *\n+ * An alternative to the {@code Slot} would be either {@code\n+ * AtomicReference} or a single-element {@code String[]} or any other\n+ * suitable container type. {@code AtomicReference} would be an overkill if\n+ * thread-safety is not a concern and the use of other options would be\n+ * confusing.\n+ *\n+ * @param <T> value type\n+ *\/\n@@ -32,0 +84,1 @@\n+\n@@ -36,1 +89,5 @@\n-        return Objects.requireNonNull(value);\n+        return find().orElseThrow();\n+    }\n+\n+    public Optional<T> find() {\n+        return Optional.ofNullable(value);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/Slot.java","additions":58,"deletions":1,"binary":false,"changes":59,"status":"modified"}]}