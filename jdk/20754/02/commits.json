[{"commit":{"message":"Merge pull request #2 from tabjy\/arithmetic-canonicalization-v2\n\nArithmetic canonicalization v2"},"files":[],"sha":"30f119c553e08603cc7d509b068062f624d95ceb"},{"commit":{"message":"remove unused variables"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"14939c6fd652177e6208e37ece0b1c0fa5e7405e"},{"commit":{"message":"remove debug printfs"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"e048c6f732208dfcaafda83509ac31fc71fed8db"},{"commit":{"message":"fix detecting optimized power-of-2 multiplication"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"c5cabee68cc88857a84f2ce8bbd6c233507a7a6e"},{"commit":{"message":"revert usage of integercon(): truncation during jlong to jint is intended"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"f09d6f6a273a701d194d1976a2cc9e850206dddf"},{"commit":{"message":"implement rwestrel's changes, passing TestDigest"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"fa3be36bcf573e4268306e9b31f2bdce4a31d6e7"},{"commit":{"message":"Merge branch 'openjdk:master' into arithmetic-canonicalization"},"files":[],"sha":"c8fdb74cb7c308cbf8e55585eb46c3214168b417"},{"commit":{"message":"Merge pull request #1 from tabjy\/arithmetic-canonicalization-v2\n\nArithmetic canonicalization v2"},"files":[],"sha":"6eb0e21b27271919bf6802d527fde55553069bcb"},{"commit":{"message":"remove dead code"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"1555372ece384c4ef80aae34191b2bd9066259bd"},{"commit":{"message":"fix potential void type const nodes"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d59340de20f96ea940628fb65dfd971d59154626"},{"commit":{"message":"refactor and cleanup"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"57db59d5011f2105ff606f3905ce966dd5aa225b"},{"commit":{"message":"add more test cases"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSerialAdditions.java"}],"sha":"c2710b12c4e0cd143b705d32f8fc9dd1d851639e"},{"commit":{"message":"re-implement depth limit on recursion"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d2a62b7b93e77e58c51f480b6f8fa73bb8248b94"},{"commit":{"message":"passes TestIRLShiftIdeal_XPlusX_LShiftC"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"db647c47e83b23180134f55c3964eb1b0b29c8c5"},{"commit":{"message":"passes AddI[L]NodeIdealizationTests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"1c4294c37c00d9697b6deae25f4dcefcc9dffab9"},{"commit":{"message":"revert depth limits"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"02c4c01bb4c688312346cfc843c76d6223cfa70f"},{"commit":{"message":"clean up the code a little"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"393d8cefef3bf32383ea9103d177131984497f69"},{"commit":{"message":"WIP: debug outputs"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"b28e27dc59e9d63b044f658d58e8e6edfabe4d21"},{"commit":{"message":"WIP: v2 passes unit tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"e8ac921b6c813946c5cfc6f06217349c834ffcc5"},{"commit":{"message":"add more IR tests"},"files":[],"sha":"5923f361e6e8bca47f8e0e7fd3f33d5b726861e5"},{"commit":{"message":"update comments of existing tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"}],"sha":"7c5c772790ee125158598dbeec6d2e595245d7be"},{"commit":{"message":"Merge branch 'master' into arithmetic-canonicalization"},"files":[],"sha":"1bacf3d5a05ae81f3498000de8a4fa5e3eb344bd"},{"commit":{"message":"add more IR tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"1317d03f236ccf2d519a88d663c0c0944d497782"},{"commit":{"message":"add more IR tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"5d36b0dd772f1f863e5b02a425404251bd5645f2"},{"commit":{"message":"distinguish AndNode from MulNode"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"5ad98b1789718d4bae3a502745a27a901567e2bf"},{"commit":{"message":"add initial IR unit tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"85bcdd3806f424419520a6fa86584f36cf9a6035"},{"commit":{"message":"passes all hotspot-compiler tests"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"}],"sha":"e7fb4868e45c8f91d4b2046fec9e5a1ec6d0086f"},{"commit":{"message":"implement arithmetic canonicalization for additions"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"9b431a9a99456724dc3f679d355cc007fe29b137"}]