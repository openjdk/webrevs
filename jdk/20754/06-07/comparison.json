{"files":[{"patch":"@@ -409,0 +409,3 @@\n+  \/\/ We need to make sure that the current AddNode is not part of a MulNode that has already been optimized to a\n+  \/\/ power-of-2 addition (e.g., 3 * a => (a << 2) + a). Without this check, GVN would keep trying to optimize the same\n+  \/\/ node and can't progress. For example, 3 * a => (a << 2) + a => 3 * a => (a << 2) + a => ...\n@@ -487,1 +490,1 @@\n-\/\/ Note that one of the term could simply be `a`\n+\/\/ Note that one of the term of the addition could simply be `a` (i.e., a << 0)\n@@ -498,1 +501,1 @@\n-    if (!lhs->is_LShift()) {\n+    if (lhs->Opcode() != Op_LShift(bt)) {\n@@ -503,1 +506,1 @@\n-    if (!lhs->is_LShift() || !lhs->in(2)->is_Con()) {\n+    if (lhs->Opcode() != Op_LShift(bt) || !lhs->in(2)->is_Con()) {\n@@ -527,1 +530,1 @@\n-    if (rhs->is_LShift() && lhs->in(1) == rhs->in(1) && rhs->in(2)->is_Con()) {\n+    if (rhs->Opcode() == Op_LShift(bt) && lhs->in(1) == rhs->in(1) && rhs->in(2)->is_Con()) {\n@@ -549,1 +552,1 @@\n-  if (n->Opcode() == Op_Sub(bt) && n->in(1)->is_LShift() && n->in(1)->in(2)->is_Con()) {\n+  if (n->Opcode() == Op_Sub(bt) && n->in(1)->Opcode() == Op_LShift(bt) && n->in(1)->in(2)->is_Con()) {\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}