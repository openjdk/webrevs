{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CipherSuite.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import javax.crypto.spec.SecretKeySpec;\n@@ -55,2 +54,1 @@\n-\n-import jdk.internal.access.SharedSecrets;\n+import sun.security.util.KeyUtil;\n@@ -356,4 +354,1 @@\n-                if (finishedSecret instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n+                KeyUtil.destroySecretKeys(finishedSecret);\n@@ -852,4 +847,1 @@\n-                if (saltSecret instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n+                KeyUtil.destroySecretKeys(saltSecret);\n@@ -1011,4 +1003,1 @@\n-                if (saltSecret instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n+                KeyUtil.destroySecretKeys(saltSecret);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Finished.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javax.crypto.spec.SecretKeySpec;\n@@ -33,0 +32,1 @@\n+\n@@ -38,2 +38,1 @@\n-\n-import jdk.internal.access.SharedSecrets;\n+import sun.security.util.KeyUtil;\n@@ -94,3 +93,1 @@\n-            if (preMasterSecret instanceof SecretKeySpec s) {\n-                SharedSecrets.getJavaxCryptoSpecAccess().clearSecretKeySpec(s);\n-            }\n+            KeyUtil.destroySecretKeys(preMasterSecret);\n@@ -140,7 +137,1 @@\n-            SecretKey tbcKeys[] = { sharedSecret, earlySecret, saltSecret };\n-            for (SecretKey key : tbcKeys) {\n-                if (key instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n-            }\n+            KeyUtil.destroySecretKeys(sharedSecret, earlySecret, saltSecret);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KAKeyDerivation.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javax.crypto.spec.SecretKeySpec;\n@@ -46,2 +45,1 @@\n-\n-import jdk.internal.access.SharedSecrets;\n+import sun.security.util.KeyUtil;\n@@ -582,3 +580,1 @@\n-            if (binderKey instanceof SecretKeySpec s) {\n-                SharedSecrets.getJavaxCryptoSpecAccess().clearSecretKeySpec(s);\n-            }\n+            KeyUtil.destroySecretKeys(binderKey);\n@@ -750,4 +746,1 @@\n-                if (binderKey instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n+                KeyUtil.destroySecretKeys(binderKey);\n@@ -825,4 +818,1 @@\n-                if (finishedKey instanceof SecretKeySpec s) {\n-                    SharedSecrets.getJavaxCryptoSpecAccess()\n-                            .clearSecretKeySpec(s);\n-                }\n+                KeyUtil.destroySecretKeys(finishedKey);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PreSharedKeyExtension.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-\n+import sun.security.util.KeyUtil;\n@@ -200,5 +200,1 @@\n-                try {\n-                    k.key.destroy();\n-                } catch (Exception e) {\n-                    \/\/ Suppress\n-                }\n+                KeyUtil.destroySecretKeys(k.key);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionContextImpl.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1224,1 +1224,1 @@\n-                    .extractOnly());\n+                    .addSalt(new byte[hashAlg.hashLength]).extractOnly());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerHello.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+import javax.crypto.spec.SecretKeySpec;\n+import javax.security.auth.DestroyFailedException;\n+import jdk.internal.access.SharedSecrets;\n@@ -448,0 +451,18 @@\n+\n+    \/\/ destroy secret keys in a best-effort way\n+    public static void destroySecretKeys(SecretKey... keys) {\n+        for (SecretKey k : keys) {\n+            if (k != null) {\n+                if (k instanceof SecretKeySpec sk) {\n+                    SharedSecrets.getJavaxCryptoSpecAccess()\n+                            .clearSecretKeySpec(sk);\n+                } else {\n+                    try {\n+                        k.destroy();\n+                    } catch (DestroyFailedException e) {\n+                        \/\/ swallow\n+                    }\n+                }\n+            }\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyUtil.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}