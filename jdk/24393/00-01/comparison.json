{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-                            tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n+                            tkd.deriveKey(hc.sslConfig.isClientMode ?\n@@ -87,7 +87,4 @@\n-\n-            SecretKey writeKey =\n-                    tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n-                                    \"clientWriteKey\" : \"serverWriteKey\");\n-            SecretKey writeIv =\n-                    tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n-                                    \"clientWriteIv\" : \"serverWriteIv\");\n+            SecretKey writeKey = tkd.deriveKey(hc.sslConfig.isClientMode ?\n+                    \"clientWriteKey\" : \"serverWriteKey\");\n+            byte[] writeIv = tkd.deriveData(hc.sslConfig.isClientMode ?\n+                    \"clientWriteIv\" : \"serverWriteIv\");\n@@ -95,1 +92,2 @@\n-                    new IvParameterSpec(writeIv.getEncoded());\n+                    new IvParameterSpec(writeIv);\n+\n@@ -176,1 +174,1 @@\n-                                tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n+                                tkd.deriveKey(hc.sslConfig.isClientMode ?\n@@ -184,6 +182,4 @@\n-                SecretKey readKey =\n-                        tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n-                                        \"serverWriteKey\" : \"clientWriteKey\");\n-                SecretKey readIv =\n-                        tkd.getTrafficKey(hc.sslConfig.isClientMode ?\n-                                        \"serverWriteIv\" : \"clientWriteIv\");\n+                SecretKey readKey = tkd.deriveKey(hc.sslConfig.isClientMode ?\n+                        \"serverWriteKey\" : \"clientWriteKey\");\n+                byte[] readIv = tkd.deriveData(hc.sslConfig.isClientMode ?\n+                        \"serverWriteIv\" : \"clientWriteIv\");\n@@ -191,1 +187,1 @@\n-                        new IvParameterSpec(readIv.getEncoded());\n+                        new IvParameterSpec(readIv);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ChangeCipherSpec.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,2 +209,1 @@\n-                SecretKey masterSecret =\n-                        masterKD.deriveKey(\"MasterSecret\", null);\n+                SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n@@ -305,2 +304,1 @@\n-            SecretKey masterSecret =\n-                    masterKD.deriveKey(\"MasterSecret\", null);\n+            SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHClientKeyExchange.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,2 +221,1 @@\n-                SecretKey masterSecret =\n-                        masterKD.deriveKey(\"MasterSecret\", null);\n+                SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n@@ -341,2 +340,1 @@\n-            SecretKey masterSecret =\n-                    masterKD.deriveKey(\"MasterSecret\", null);\n+            SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n@@ -421,2 +419,1 @@\n-                SecretKey masterSecret =\n-                        masterKD.deriveKey(\"MasterSecret\", null);\n+                SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n@@ -525,2 +522,1 @@\n-            SecretKey masterSecret =\n-                    masterKD.deriveKey(\"MasterSecret\", null);\n+            SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECDHClientKeyExchange.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-import sun.security.ssl.SSLBasicKeyDerivation.SecretSizeSpec;\n@@ -345,4 +344,1 @@\n-            AlgorithmParameterSpec keySpec =\n-                    new SecretSizeSpec(hashAlg.hashLength);\n-            SecretKey finishedSecret =\n-                    kdf.deriveKey(\"TlsFinishedSecret\", keySpec);\n+            SecretKey finishedSecret = kdf.deriveKey(\"TlsFinishedSecret\");\n@@ -722,2 +718,2 @@\n-                SecretKey writeSecret = kd.deriveKey(\n-                        \"TlsClientAppTrafficSecret\", null);\n+                SecretKey writeSecret =\n+                        kd.deriveKey(\"TlsClientAppTrafficSecret\");\n@@ -727,4 +723,1 @@\n-                SecretKey writeKey = writeKD.deriveKey(\n-                        \"TlsKey\", null);\n-                SecretKey writeIvSecret = writeKD.deriveKey(\n-                        \"TlsIv\", null);\n+                SecretKey writeKey = writeKD.deriveKey(\"TlsKey\");\n@@ -732,1 +725,1 @@\n-                        new IvParameterSpec(writeIvSecret.getEncoded());\n+                        new IvParameterSpec(writeKD.deriveData(\"TlsIv\"));\n@@ -759,1 +752,1 @@\n-                    \"TlsResumptionMasterSecret\", null);\n+                    \"TlsResumptionMasterSecret\");\n@@ -810,1 +803,1 @@\n-                SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\", null);\n+                SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\");\n@@ -822,1 +815,0 @@\n-\n@@ -828,1 +820,1 @@\n-                        \"TlsServerAppTrafficSecret\", null);\n+                        \"TlsServerAppTrafficSecret\");\n@@ -831,4 +823,1 @@\n-                SecretKey writeKey = writeKD.deriveKey(\n-                        \"TlsKey\", null);\n-                SecretKey writeIvSecret = writeKD.deriveKey(\n-                        \"TlsIv\", null);\n+                SecretKey writeKey = writeKD.deriveKey(\"TlsKey\");\n@@ -836,1 +825,1 @@\n-                        new IvParameterSpec(writeIvSecret.getEncoded());\n+                        new IvParameterSpec(writeKD.deriveData(\"TlsIv\"));\n@@ -970,1 +959,1 @@\n-                SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\", null);\n+                SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\");\n@@ -982,0 +971,1 @@\n+\n@@ -987,1 +977,1 @@\n-                        \"TlsServerAppTrafficSecret\", null);\n+                        \"TlsServerAppTrafficSecret\");\n@@ -990,4 +980,1 @@\n-                SecretKey readKey = writeKD.deriveKey(\n-                        \"TlsKey\", null);\n-                SecretKey readIvSecret = writeKD.deriveKey(\n-                        \"TlsIv\", null);\n+                SecretKey readKey = writeKD.deriveKey(\"TlsKey\");\n@@ -995,1 +982,1 @@\n-                        new IvParameterSpec(readIvSecret.getEncoded());\n+                        new IvParameterSpec(writeKD.deriveData(\"TlsIv\"));\n@@ -1092,1 +1079,1 @@\n-                        \"TlsClientAppTrafficSecret\", null);\n+                        \"TlsClientAppTrafficSecret\");\n@@ -1096,4 +1083,1 @@\n-                SecretKey readKey = readKD.deriveKey(\n-                        \"TlsKey\", null);\n-                SecretKey readIvSecret = readKD.deriveKey(\n-                        \"TlsIv\", null);\n+                SecretKey readKey = readKD.deriveKey(\"TlsKey\");\n@@ -1101,1 +1085,1 @@\n-                        new IvParameterSpec(readIvSecret.getEncoded());\n+                        new IvParameterSpec(readKD.deriveData(\"TlsIv\"));\n@@ -1123,2 +1107,2 @@\n-                SecretKey resumptionMasterSecret = sd.deriveKey(\n-                \"TlsResumptionMasterSecret\", null);\n+                SecretKey resumptionMasterSecret =\n+                        sd.deriveKey(\"TlsResumptionMasterSecret\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Finished.java","additions":20,"deletions":36,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -60,2 +60,1 @@\n-    public SecretKey deriveKey(String algorithm,\n-            AlgorithmParameterSpec params) throws IOException {\n+    public SecretKey deriveKey(String type) throws IOException {\n@@ -63,1 +62,1 @@\n-            return t12DeriveKey(algorithm, params);\n+            return t12DeriveKey();\n@@ -65,1 +64,1 @@\n-            return t13DeriveKey(algorithm, params);\n+            return t13DeriveKey(type);\n@@ -72,2 +71,1 @@\n-    private SecretKey t12DeriveKey(String algorithm,\n-            AlgorithmParameterSpec params) throws IOException {\n+    private SecretKey t12DeriveKey() throws IOException {\n@@ -78,5 +76,3 @@\n-            SecretKey preMasterSecret\n-                    = ka.generateSecret(\"TlsPremasterSecret\");\n-            SSLMasterKeyDerivation mskd\n-                    = SSLMasterKeyDerivation.valueOf(\n-                            context.negotiatedProtocol);\n+            SecretKey preMasterSecret = ka.generateSecret(\"TlsPremasterSecret\");\n+            SSLMasterKeyDerivation mskd =\n+                    SSLMasterKeyDerivation.valueOf(context.negotiatedProtocol);\n@@ -91,1 +87,1 @@\n-            return kd.deriveKey(\"MasterSecret\", params);\n+            return kd.deriveKey(\"MasterSecret\");\n@@ -100,2 +96,2 @@\n-    private SecretKey t13DeriveKey(String algorithm,\n-            AlgorithmParameterSpec params) throws IOException {\n+    private SecretKey t13DeriveKey(String type)\n+            throws IOException {\n@@ -119,2 +115,1 @@\n-                        HKDFParameterSpec.ofExtract().addSalt(zeros)\n-                        .addIKM(ikm).extractOnly());\n+                        HKDFParameterSpec.ofExtract().addIKM(ikm).extractOnly());\n@@ -125,1 +120,1 @@\n-            SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\", null);\n+            SecretKey saltSecret = kd.deriveKey(\"TlsSaltSecret\");\n@@ -128,1 +123,1 @@\n-            return hkdf.deriveKey(algorithm, HKDFParameterSpec.ofExtract()\n+            return hkdf.deriveKey(type, HKDFParameterSpec.ofExtract()\n@@ -130,1 +125,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KAKeyDerivation.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -217,1 +217,1 @@\n-            SecretKey nplus1 = skd.deriveKey(\"TlsUpdateNplus1\", null);\n+            SecretKey nplus1 = skd.deriveKey(\"TlsUpdateNplus1\");\n@@ -219,3 +219,3 @@\n-            SecretKey key = kd.deriveKey(\"TlsKey\", null);\n-            IvParameterSpec ivSpec = new IvParameterSpec(\n-                    kd.deriveKey(\"TlsIv\", null).getEncoded());\n+            SecretKey key = kd.deriveKey(\"TlsKey\");\n+            IvParameterSpec ivSpec =\n+                    new IvParameterSpec(kd.deriveData(\"TlsIv\"));\n@@ -296,1 +296,1 @@\n-            SecretKey nplus1 = skd.deriveKey(\"TlsUpdateNplus1\", null);\n+            SecretKey nplus1 = skd.deriveKey(\"TlsUpdateNplus1\");\n@@ -298,3 +298,3 @@\n-            SecretKey key = kd.deriveKey(\"TlsKey\", null);\n-            IvParameterSpec ivSpec = new IvParameterSpec(\n-                    kd.deriveKey(\"TlsIv\", null).getEncoded());\n+            SecretKey key = kd.deriveKey(\"TlsKey\");\n+            IvParameterSpec ivSpec =\n+                     new IvParameterSpec(kd.deriveData(\"TlsIv\"));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KeyUpdate.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import javax.crypto.spec.SecretKeySpec;\n@@ -294,1 +295,4 @@\n-            return hkdf.deriveKey(\"TlsPreSharedKey\",\n+            \/\/ SSLSessionImpl.write() uses the PreSharedKey encoding for\n+            \/\/ the stateless session ticket; use SecretKeySpec instead of opaque\n+            \/\/ Key objects\n+            return new SecretKeySpec(hkdf.deriveData(\n@@ -296,1 +300,1 @@\n-                    hkdfInfo, hashAlg.hashLength));\n+                    hkdfInfo, hashAlg.hashLength)), \"TlsPreSharedKey\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/NewSessionTicket.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -211,2 +211,1 @@\n-                SecretKey masterSecret =\n-                        masterKD.deriveKey(\"MasterSecret\", null);\n+                SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n@@ -299,2 +298,1 @@\n-                SecretKey masterSecret =\n-                        masterKD.deriveKey(\"MasterSecret\", null);\n+                SecretKey masterSecret = masterKD.deriveKey(\"MasterSecret\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSAClientKeyExchange.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,2 +295,1 @@\n-            public SecretKey deriveKey(String algorithm,\n-                    AlgorithmParameterSpec params) throws IOException {\n+            public SecretKey deriveKey(String type) throws IOException {\n@@ -308,1 +307,1 @@\n-                return kd.deriveKey(\"MasterSecret\", params);\n+                return kd.deriveKey(\"MasterSecret\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSAKeyExchange.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+    private final int keyLen;\n@@ -47,0 +48,1 @@\n+        this.keyLen = length;\n@@ -50,2 +52,1 @@\n-    public SecretKey deriveKey(String algorithm,\n-            AlgorithmParameterSpec keySpec) throws IOException {\n+    public SecretKey deriveKey(String type) throws IOException {\n@@ -54,3 +55,2 @@\n-            return hkdf.deriveKey(algorithm,\n-                    HKDFParameterSpec.expandOnly(secret, hkdfInfo,\n-                    ((SecretSizeSpec)keySpec).length));\n+            return hkdf.deriveKey(type,\n+                    HKDFParameterSpec.expandOnly(secret, hkdfInfo, keyLen));\n@@ -75,8 +75,0 @@\n-\n-    static class SecretSizeSpec implements AlgorithmParameterSpec {\n-        final int length;\n-\n-        SecretSizeSpec(int length) {\n-            this.length = length;\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLBasicKeyDerivation.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,5 @@\n-    SecretKey deriveKey(String algorithm,\n-            AlgorithmParameterSpec params) throws IOException;\n+    SecretKey deriveKey(String purpose) throws IOException;\n+\n+    default byte[] deriveData(String purpose) throws IOException {\n+        throw new UnsupportedOperationException(\"No support for deriveData!\");\n+    };\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLKeyDerivation.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,3 +87,1 @@\n-        public SecretKey deriveKey(String algorithm,\n-                AlgorithmParameterSpec params) throws IOException {\n-\n+        public SecretKey deriveKey(String typeNotUsed) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLMasterKeyDerivation.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,3 +92,2 @@\n-    public SecretKey deriveKey(String algorithm,\n-            AlgorithmParameterSpec params) throws IOException {\n-        SecretSchedule ks = SecretSchedule.valueOf(algorithm);\n+    public SecretKey deriveKey(String type) throws IOException {\n+        SecretSchedule ks = SecretSchedule.valueOf(type);\n@@ -107,1 +106,1 @@\n-                            algorithm);\n+                            hashAlg);\n@@ -115,1 +114,1 @@\n-            return hkdf.deriveKey(algorithm, HKDFParameterSpec.expandOnly(\n+            return hkdf.deriveKey(type, HKDFParameterSpec.expandOnly(\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSecretDerivation.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-\n@@ -148,3 +147,18 @@\n-        public SecretKey deriveKey(String algorithm,\n-                AlgorithmParameterSpec params) throws IOException {\n-            KeySchedule ks = KeySchedule.valueOf(algorithm);\n+        public SecretKey deriveKey(String type) throws IOException {\n+            KeySchedule ks = KeySchedule.valueOf(type);\n+            try {\n+                KDF hkdf = KDF.getInstance(Utilities.digest2HKDF(\n+                        cs.hashAlg.name));\n+                byte[] hkdfInfo = createHkdfInfo(ks.label, ks.getKeyLength(cs));\n+                HKDFParameterSpec spec = HKDFParameterSpec.expandOnly(secret,\n+                        hkdfInfo, ks.getKeyLength(cs));\n+                return hkdf.deriveKey(ks.getAlgorithm(cs, type), spec);\n+            } catch (GeneralSecurityException gse) {\n+                throw new SSLHandshakeException(\n+                        \"Could not generate secret\", gse);\n+            }\n+        }\n+\n+        @Override\n+        public byte[] deriveData(String type) throws IOException {\n+            KeySchedule ks = KeySchedule.valueOf(type);\n@@ -155,3 +169,3 @@\n-                return hkdf.deriveKey(ks.getAlgorithm(cs, algorithm),\n-                        HKDFParameterSpec.expandOnly(secret, hkdfInfo,\n-                        ks.getKeyLength(cs)));\n+                HKDFParameterSpec spec = HKDFParameterSpec.expandOnly(secret,\n+                        hkdfInfo, ks.getKeyLength(cs));\n+                return hkdf.deriveData(spec);\n@@ -176,1 +190,0 @@\n-\n@@ -182,1 +195,1 @@\n-        \/\/ Note that we use enum name as the key\/ name.\n+        \/\/ Note that we use enum name as the key name.\n@@ -290,2 +303,3 @@\n-        SecretKey getTrafficKey(String algorithm) {\n-            switch (algorithm) {\n+        @Override\n+        public SecretKey deriveKey(String type) throws IOException {\n+            switch (type) {\n@@ -300,0 +314,9 @@\n+                default:\n+                    throw new SSLHandshakeException(\n+                            \"Cannot deriveKey for \" + type);\n+            }\n+        }\n+\n+        @Override\n+        public byte[] deriveData(String type) throws IOException {\n+            switch (type) {\n@@ -302,2 +325,1 @@\n-                    return  (cliIvSpec == null) ? null :\n-                            new SecretKeySpec(cliIvSpec.getIV(), \"TlsIv\");\n+                    return  (cliIvSpec == null) ? null : cliIvSpec.getIV();\n@@ -306,2 +328,4 @@\n-                    return  (srvIvSpec == null) ? null :\n-                            new SecretKeySpec(srvIvSpec.getIV(), \"TlsIv\");\n+                    return  (srvIvSpec == null) ? null : srvIvSpec.getIV();\n+                default:\n+                    throw new SSLHandshakeException(\n+                            \"Cannot deriveData for \" + type);\n@@ -309,8 +333,0 @@\n-\n-            return null;\n-        }\n-\n-        @Override\n-        public SecretKey deriveKey(String algorithm,\n-                AlgorithmParameterSpec params) throws IOException {\n-            return getTrafficKey(algorithm);\n@@ -320,1 +336,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTrafficKeyDerivation.java","additions":39,"deletions":24,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                    \"TlsHandshakeSecret\", null);\n+                    \"TlsHandshakeSecret\");\n@@ -641,1 +641,1 @@\n-                    \"TlsClientHandshakeTrafficSecret\", null);\n+                    \"TlsClientHandshakeTrafficSecret\");\n@@ -644,4 +644,1 @@\n-            SecretKey readKey = readKD.deriveKey(\n-                    \"TlsKey\", null);\n-            SecretKey readIvSecret = readKD.deriveKey(\n-                    \"TlsIv\", null);\n+            SecretKey readKey = readKD.deriveKey(\"TlsKey\");\n@@ -649,1 +646,1 @@\n-                    new IvParameterSpec(readIvSecret.getEncoded());\n+                    new IvParameterSpec(readKD.deriveData(\"TlsIv\"));\n@@ -675,1 +672,1 @@\n-                    \"TlsServerHandshakeTrafficSecret\", null);\n+                    \"TlsServerHandshakeTrafficSecret\");\n@@ -678,4 +675,1 @@\n-            SecretKey writeKey = writeKD.deriveKey(\n-                    \"TlsKey\", null);\n-            SecretKey writeIvSecret = writeKD.deriveKey(\n-                    \"TlsIv\", null);\n+            SecretKey writeKey = writeKD.deriveKey(\"TlsKey\");\n@@ -683,1 +677,1 @@\n-                    new IvParameterSpec(writeIvSecret.getEncoded());\n+                    new IvParameterSpec(writeKD.deriveData(\"TlsIv\"));\n@@ -1228,1 +1222,0 @@\n-            byte[] zeros = new byte[hashAlg.hashLength];\n@@ -1230,1 +1223,1 @@\n-                    HKDFParameterSpec.ofExtract().addSalt(zeros).addIKM(psk)\n+                    HKDFParameterSpec.ofExtract().addIKM(psk)\n@@ -1318,1 +1311,1 @@\n-                    \"TlsHandshakeSecret\", null);\n+                    \"TlsHandshakeSecret\");\n@@ -1333,1 +1326,1 @@\n-                    \"TlsServerHandshakeTrafficSecret\", null);\n+                    \"TlsServerHandshakeTrafficSecret\");\n@@ -1337,4 +1330,1 @@\n-            SecretKey readKey = readKD.deriveKey(\n-                    \"TlsKey\", null);\n-            SecretKey readIvSecret = readKD.deriveKey(\n-                    \"TlsIv\", null);\n+            SecretKey readKey = readKD.deriveKey(\"TlsKey\");\n@@ -1342,1 +1332,1 @@\n-                    new IvParameterSpec(readIvSecret.getEncoded());\n+                    new IvParameterSpec(readKD.deriveData(\"TlsIv\"));\n@@ -1368,1 +1358,1 @@\n-                    \"TlsClientHandshakeTrafficSecret\", null);\n+                    \"TlsClientHandshakeTrafficSecret\");\n@@ -1371,4 +1361,1 @@\n-            SecretKey writeKey = writeKD.deriveKey(\n-                    \"TlsKey\", null);\n-            SecretKey writeIvSecret = writeKD.deriveKey(\n-                    \"TlsIv\", null);\n+            SecretKey writeKey = writeKD.deriveKey(\"TlsKey\");\n@@ -1376,1 +1363,1 @@\n-                    new IvParameterSpec(writeIvSecret.getEncoded());\n+                    new IvParameterSpec(writeKD.deriveData(\"TlsIv\"));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerHello.java","additions":15,"deletions":28,"binary":false,"changes":43,"status":"modified"}]}