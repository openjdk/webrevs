{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Comparator;\n@@ -34,1 +33,0 @@\n-import java.util.Objects;\n@@ -38,1 +36,0 @@\n-import javax.tools.DiagnosticListener;\n@@ -128,3 +125,4 @@\n-        return Optional.of(sourceFile)\n-          .map(fileInfoMap::get)\n-          .flatMap(fileInfo -> fileInfo.lintAt(pos));\n+        FileInfo fileInfo = fileInfoMap.get(sourceFile);\n+        if (fileInfo != null)\n+            return fileInfo.lintAt(pos);\n+        return Optional.empty();\n@@ -207,2 +205,5 @@\n-            boolean mapped = unmappedDecls.stream().noneMatch(span -> span.contains(pos));\n-            return mapped ? Optional.of(rootRange.bestMatch(pos).lint) : Optional.empty();\n+            for (Span span : unmappedDecls) {\n+                if (span.contains(pos))\n+                    return Optional.empty();\n+            }\n+            return Optional.of(rootRange.bestMatch(pos).lint);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/LintMapper.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}