{"files":[{"patch":"@@ -266,0 +266,1 @@\n+              .filter(child -> child.span.contains(pos))    \/\/ don't recurse unless necessary\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/LintMapper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -145,0 +145,10 @@\n+\n+                    \/\/ Optimization: We don't need to go through the trouble of calculating the Lint instance at \"pos\" if\n+                    \/\/ (a) \"category\" is disabled at the root level, and (b) the diagnostic doesn't have the DEFAULT_ENABLED\n+                    \/\/ flag: @SuppressWarnings can only disable lint categories, so \"category\" is disabled in the entire file.\n+                    if (!rootLint().isEnabled(category) &&\n+                      !diag.isFlagSet(DEFAULT_ENABLED) &&\n+                      !diag.getCode().equals(RequiresTransitiveAutomatic.key()))    \/\/ accommodate the \"requires\" hack below\n+                        return;\n+\n+                    \/\/ Wait for the Lint instance at \"pos\" to be calculated, then proceed\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Log.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}