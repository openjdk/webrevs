{"files":[{"patch":"@@ -1988,9 +1988,22 @@\n-  int max_size = max_vector_size(bt);\n-  \/\/ Limit the min vector size to 8 bytes.\n-  int size = 8 \/ type2aelembytes(bt);\n-  if (bt == T_BYTE) {\n-    \/\/ To support vector api shuffle\/rearrange.\n-    size = 4;\n-  } else if (bt == T_BOOLEAN) {\n-    \/\/ To support vector api load\/store mask.\n-    size = 2;\n+  int size;\n+  switch(bt) {\n+    case T_BOOLEAN:\n+      \/\/ Load\/store a vector mask with only 2 elements for vector types\n+      \/\/ such as \"2I\/2F\/2L\/2D\".\n+      size = 2;\n+      break;\n+    case T_BYTE:\n+      \/\/ Generate a \"4B\" vector, to support vector cast between \"8B\/16B\"\n+      \/\/ and \"4S\/4I\/4L\/4F\/4D\".\n+      size = 4;\n+      break;\n+    case T_SHORT:\n+      \/\/ Generate a \"2S\" vector, to support vector cast between \"4S\/8S\"\n+      \/\/ and \"2I\/2L\/2F\/2D\".\n+      size = 2;\n+      break;\n+    default:\n+      \/\/ Limit the min vector length to 64-bit.\n+      size = 8 \/ type2aelembytes(bt);\n+      \/\/ The number of elements in a vector should be at least 2.\n+      size = MAX2(size, 2);\n@@ -1998,1 +2011,2 @@\n-  if (size < 2) size = 2;\n+\n+  int max_size = max_vector_size(bt);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -130,0 +130,3 @@\n+            makePair(SSPEC64, ISPEC64),\n+            makePair(SSPEC64, ISPEC64, true),\n+            makePair(SSPEC64, FSPEC64),\n@@ -134,0 +137,2 @@\n+            makePair(SSPEC64, LSPEC128),\n+            makePair(SSPEC64, LSPEC128, true),\n@@ -135,0 +140,1 @@\n+            makePair(SSPEC64, DSPEC128),\n@@ -159,0 +165,2 @@\n+            makePair(SSPEC128, LSPEC128),\n+            makePair(SSPEC128, LSPEC128, true),\n@@ -160,0 +168,1 @@\n+            makePair(SSPEC128, DSPEC128),\n@@ -231,0 +240,1 @@\n+            makePair(ISPEC64, SSPEC64),\n@@ -302,0 +312,1 @@\n+            makePair(LSPEC128, SSPEC64),\n@@ -306,0 +317,1 @@\n+            makePair(LSPEC128, SSPEC128),\n@@ -372,0 +384,1 @@\n+            makePair(FSPEC64, SSPEC64),\n@@ -436,0 +449,1 @@\n+            makePair(DSPEC128, SSPEC64),\n@@ -440,0 +454,1 @@\n+            makePair(DSPEC128, SSPEC128),\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}