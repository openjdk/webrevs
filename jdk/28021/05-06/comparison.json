{"files":[{"patch":"@@ -95,1 +95,2 @@\n- * <p>The file server also supports HTTP <i>range requests<\/i>, allowing clients to\n+ * <p>The file server and {@linkplain #createFileHandler(Path) file handler} also support HTTP\n+ * <i>range requests<\/i>, allowing clients to\n@@ -97,1 +98,1 @@\n- * <a href=\"https:\/\/datatracker.ietf.org\/doc\/html\/rfc9110#name-range-requests\">RFC 9110<\/a>.<\/p>\n+ * <a href=\"https:\/\/www.rfc-editor.org\/rfc\/rfc9110.html#name-range-requests\">RFC 9110<\/a>.<\/p>\n@@ -99,2 +100,2 @@\n- * <p>The server also supports conditional range requests with the {@code If-Range}\n- * request header using a date.\n+ * <p>Conditional range requests with the {@code If-Range}\n+ * request header using a date are also supported.\n@@ -126,0 +127,2 @@\n+ * @spec https:\/\/www.rfc-editor.org\/info\/rfc9110\n+ *       RFC 9110: HTTP Semantics\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/SimpleFileServer.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -316,1 +317,1 @@\n-    \/\/ Example of valid Range header values:\n+    \/\/ Example of valid Range header values:make image\n@@ -337,0 +338,3 @@\n+            if (startStr.startsWith(\"+\") || endStr.startsWith(\"+\")) {\n+                return null;  \/\/ \"+\" prefix is not supported.\n+            }\n@@ -340,1 +344,1 @@\n-                    long suffixLength = Long.parseLong(endStr);\n+                    long suffixLength = Long.parseLong(endStr, 10);\n@@ -347,2 +351,2 @@\n-                    start = Long.parseLong(startStr);\n-                    end = endStr.isEmpty() ? fileSize - 1 : Long.parseLong(endStr);\n+                    start = Long.parseLong(startStr, 10);\n+                    end = endStr.isEmpty() ? fileSize - 1 : Long.parseLong(endStr, 10);\n@@ -388,2 +392,2 @@\n-                    os.write((\"--\" + boundary + \"\\r\\n\").getBytes(UTF_8));\n-                    os.write((\"Content-Type: \" + fileContentType + \"\\r\\n\").getBytes(UTF_8));\n+                    os.write((\"--\" + boundary + \"\\r\\n\").getBytes(US_ASCII));\n+                    os.write((\"Content-Type: \" + fileContentType + \"\\r\\n\").getBytes(US_ASCII));\n@@ -391,1 +395,1 @@\n-                            .formatted(range.start, range.end, fileSize).getBytes(UTF_8));\n+                            .formatted(range.start, range.end, fileSize).getBytes(US_ASCII));\n@@ -405,1 +409,1 @@\n-                    os.write(\"\\r\\n\".getBytes(UTF_8));\n+                    os.write(\"\\r\\n\".getBytes(US_ASCII));\n@@ -410,1 +414,1 @@\n-                os.write(closingBoundary.getBytes(UTF_8));\n+                os.write(closingBoundary.getBytes(US_ASCII));\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/FileServerHandler.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -143,8 +143,11 @@\n-                {\"bytes=500-400\"},         \/\/ start > end\n-                {\"bytes=1000-1001\"},       \/\/ end >= file length\n-                {\"bytes=1000-\"},           \/\/ start >= file length\n-                {\"bytes=-0\"},              \/\/ zero length suffix\n-                {\"bytes=meow\"},            \/\/ non-numeric\n-                {\"bytes=--500\"},           \/\/ malformed\n-                {\"bytes=500\"},             \/\/ malformed\n-                {\"bytes=500-600,700-600\"}  \/\/ second range invalid\n+                \/\/ invalid ranges: start > end, end beyond file, start beyond file\n+                {\"bytes=500-400\"}, {\"bytes=1000-1001\"}, {\"bytes=1000-\"},\n+\n+                \/\/ malformed numbers or format\n+                {\"bytes=-0\"}, {\"bytes=meow\"}, {\"bytes=--500\"}, {\"bytes=500\"}, {\"bytes=-\"}, {\"bytes=+500-600\"},\n+\n+                \/\/ multiple ranges with one invalid\n+                {\"bytes=500-600,700-600\"},\n+\n+                \/\/ empty or extra commas\/spaces\n+                {\"bytes=\"}, {\"bytes=400-500,\"}, {\"bytes=,400-500\"}, {\"bytes= ,400-500\"}, {\"bytes=400-500, \"}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/FileServerHandlerTest.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}