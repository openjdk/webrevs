{"files":[{"patch":"@@ -40,11 +40,2 @@\n-vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/TestDescription.java    8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/TestDescription.java    8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/TestDescription.java         8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/TestDescription.java 8300708 generic-all\n+vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/TestDescription.java 8348844 generic-all\n+vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/TestDescription.java 8348844 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-Virtual.txt","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,4 @@\n+        if (currThread.isVirtual()) {\n+            out.println(\"meth01: skipping results check for virtual thread\");\n+            return d + f + 1; \/\/ SetLocal* should return OPAQUE_FRAME for a virtual thread\n+        }\n@@ -100,0 +104,4 @@\n+            if (currThread.isVirtual()) {\n+                out.println(\"meth02: skipping results check for virtual thread\");\n+                return; \/\/ SetLocal* should return OPAQUE_FRAME for a virtual thread\n+            }\n@@ -112,0 +120,4 @@\n+        if (currThread.isVirtual()) {\n+            out.println(\"meth03: skipping results check for virtual thread\");\n+            return; \/\/ SetLocalObject for obj1 and obj2 should return OPAQUE_FRAME for a virtual thread\n+        }\n@@ -121,0 +133,4 @@\n+        if (currThread.isVirtual()) {\n+            out.println(\"meth04: skipping results check for virtual thread\");\n+            return; \/\/ SetLocal* should return OPAQUE_FRAME for a virtual thread\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,7 @@\n+static void check_error(jvmtiError err, bool is_virtual, const char* func_id) {\n+    if (err != JVMTI_ERROR_NONE && !(is_virtual && err == JVMTI_ERROR_OPAQUE_FRAME)) {\n+        printf(\"(%s) unexpected error: %s (%d)\\n\", func_id, TranslateError(err), err);\n+        result = STATUS_FAILED;\n+    }\n+}\n+\n@@ -54,0 +61,1 @@\n+    bool is_virtual = env->IsVirtualThread(thr);\n@@ -77,5 +85,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalLong) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalLong\");\n@@ -85,5 +89,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalFloat) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalFloat\");\n@@ -93,5 +93,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalDouble) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalDouble\");\n@@ -105,5 +101,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i1) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i1\");\n@@ -113,5 +105,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i2) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i2\");\n@@ -121,5 +109,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i3) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i3\");\n@@ -129,5 +113,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i4) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i4\");\n@@ -137,5 +117,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i5) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i5\");\n@@ -149,5 +125,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalObject#ob1) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalObject#ob1\");\n@@ -157,5 +129,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalObject#ob2) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalObject#ob2\");\n@@ -169,5 +137,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i1,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i1,param\");\n@@ -177,5 +141,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i2,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i2,param\");\n@@ -185,5 +145,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i3,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i3,param\");\n@@ -193,5 +149,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#i4,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#i4,param\");\n@@ -201,5 +153,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalInt#b,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalInt#b,param\");\n@@ -209,5 +157,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalLong,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalLong,param\");\n@@ -217,5 +161,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalFloat,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalFloat,param\");\n@@ -225,5 +165,1 @@\n-                if (err != JVMTI_ERROR_NONE) {\n-                    printf(\"(SetLocalDouble,param) unexpected error: %s (%d)\\n\",\n-                           TranslateError(err), err);\n-                    result = STATUS_FAILED;\n-                }\n+                check_error(err, is_virtual, \"SetLocalDouble,param\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/setlocal001.cpp","additions":27,"deletions":91,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,9 @@\n+static void check_error(jvmtiError err, bool is_virtual, char* var_name) {\n+    if (err != JVMTI_ERROR_INVALID_SLOT && !(is_virtual && err == JVMTI_ERROR_OPAQUE_FRAME)) {\n+        printf(\"(%s) \", var_name);\n+        printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT or JVMTI_ERROR_OPAQUE_FRAME,\\n\");\n+        printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n+        result = STATUS_FAILED;\n+    }\n+}\n+\n@@ -50,0 +59,1 @@\n+    bool is_virtual = env->IsVirtualThread(thr);\n@@ -74,0 +84,2 @@\n+        char* var_name = table[i].name;\n+\n@@ -77,6 +89,1 @@\n-            if (err != JVMTI_ERROR_INVALID_SLOT) {\n-                printf(\"(%s) \", table[i].name);\n-                printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT,\\n\");\n-                printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -86,6 +93,1 @@\n-            if (err != JVMTI_ERROR_INVALID_SLOT) {\n-                printf(\"(%s) \", table[i].name);\n-                printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT,\\n\");\n-                printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -95,6 +97,1 @@\n-            if (err != JVMTI_ERROR_INVALID_SLOT) {\n-                printf(\"(%s) \", table[i].name);\n-                printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT,\\n\");\n-                printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -104,6 +101,1 @@\n-            if (err != JVMTI_ERROR_INVALID_SLOT) {\n-                printf(\"(%s) \", table[i].name);\n-                printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT,\\n\");\n-                printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -113,6 +105,1 @@\n-            if (err != JVMTI_ERROR_INVALID_SLOT) {\n-                printf(\"(%s) \", table[i].name);\n-                printf(\"Error expected: JVMTI_ERROR_INVALID_SLOT,\\n\");\n-                printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/setlocal003.cpp","additions":18,"deletions":31,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,9 @@\n+static void check_error(jvmtiError err, bool is_virtual, char* var_name) {\n+    if (err != JVMTI_ERROR_TYPE_MISMATCH && !(is_virtual && err == JVMTI_ERROR_OPAQUE_FRAME)) {\n+        printf(\"(%s) \", var_name);\n+        printf(\"Error: expected: JVMTI_ERROR_TYPE_MISMATCH or JVMTI_ERROR_OPAQUE_FRAME,\\n\");\n+        printf(\"\\t    actual: %s (%d)\\n\", TranslateError(err), err);\n+        result = STATUS_FAILED;\n+    }\n+}\n+\n@@ -50,0 +59,1 @@\n+    bool is_virtual = env->IsVirtualThread(thr);\n@@ -75,0 +85,2 @@\n+        char* var_name = table[i].name;\n+\n@@ -79,6 +91,1 @@\n-            if (err != JVMTI_ERROR_TYPE_MISMATCH) {\n-                printf(\"\\\"%s\\\" against SetLocalObject:\\n\", table[i].name);\n-                printf(\"    expected: JVMTI_ERROR_TYPE_MISMATCH,\");\n-                printf(\" actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -89,6 +96,1 @@\n-            if (err != JVMTI_ERROR_TYPE_MISMATCH) {\n-                printf(\"\\\"%s\\\" against SetLocalInt:\\n\", table[i].name);\n-                printf(\"    expected: JVMTI_ERROR_TYPE_MISMATCH,\");\n-                printf(\" actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -99,6 +101,1 @@\n-            if (err != JVMTI_ERROR_TYPE_MISMATCH) {\n-                printf(\"\\\"%s\\\" against SetLocalLong:\\n\", table[i].name);\n-                printf(\"    expected: JVMTI_ERROR_TYPE_MISMATCH,\");\n-                printf(\" actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -109,6 +106,1 @@\n-            if (err != JVMTI_ERROR_TYPE_MISMATCH) {\n-                printf(\"\\\"%s\\\" against SetLocalFloat:\\n\", table[i].name);\n-                printf(\"    expected: JVMTI_ERROR_TYPE_MISMATCH,\");\n-                printf(\" actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n@@ -119,6 +111,1 @@\n-            if (err != JVMTI_ERROR_TYPE_MISMATCH) {\n-                printf(\"\\\"%s\\\" against SetLocalDouble:\\n\", table[i].name);\n-                printf(\"    expected: JVMTI_ERROR_TYPE_MISMATCH,\");\n-                printf(\" actual: %s (%d)\\n\", TranslateError(err), err);\n-                result = STATUS_FAILED;\n-            }\n+            check_error(err, is_virtual, var_name);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/setlocal004.cpp","additions":18,"deletions":31,"binary":false,"changes":49,"status":"modified"}]}