{"files":[{"patch":"@@ -268,0 +268,4 @@\n+  product(uint, IFGEdgesLimit, 10000000, DIAGNOSTIC,                        \\\n+          \"Maximum allowed edges in the interference graphs\")               \\\n+          range(0, max_juint)                                               \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -432,0 +432,3 @@\n+  if (C->failing()) {\n+    return;\n+  }\n@@ -475,0 +478,3 @@\n+  if (C->failing()) {\n+    return;\n+  }\n@@ -516,0 +522,3 @@\n+    if (C->failing()) {\n+      return;\n+    }\n@@ -599,0 +608,3 @@\n+    if (C->failing()) {\n+      return;\n+    }\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -249,0 +249,3 @@\n+  \/\/ Keep track of number of edges to allow bailing out on very large IFGs\n+  uint _edges;\n+\n","filename":"src\/hotspot\/share\/opto\/chaitin.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+  _edges = 0;\n@@ -68,1 +69,6 @@\n-  return _adjs[a].insert( b );\n+  int ret = _adjs[a].insert(b);\n+  _edges += ret;\n+  if (_edges > IFGEdgesLimit) {\n+    C->record_method_not_compilable(\"out of IFG edges\");\n+  }\n+  return ret;\n@@ -302,0 +308,3 @@\n+        if (C->failing()) {\n+          return;\n+        }\n@@ -351,0 +360,3 @@\n+        if (C->failing()) {\n+          return;\n+        }\n@@ -394,0 +406,3 @@\n+            if (C->failing()) {\n+              return;\n+            }\n@@ -920,0 +935,3 @@\n+        if (C->failing()) {\n+          return 0;\n+        }\n","filename":"src\/hotspot\/share\/opto\/ifg.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}