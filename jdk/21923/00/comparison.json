{"files":[{"patch":"@@ -670,1 +670,3 @@\n-                if (lint.isEnabled(Lint.LintCategory.DANGLING_DOC_COMMENTS)) {\n+                if (lint.isEnabled(Lint.LintCategory.DANGLING_DOC_COMMENTS) &&\n+                        (c.getStyle() != Comment.CommentStyle.JAVADOC_LINE ||\n+                                c.getPos().getStartPosition() != 0)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,18 @@\n+\/\/\/usr\/bin\/env jbang \"$0\" \"$@\" ; exit $?\n+\n+\/** A class comment *\/\n+public class JBangException1 {\n+\n+    \/**\n+     * A method comment\n+     *\n+     * @param args a parameter comment\n+     *\/\n+    public static void main(String[] args) {\n+        if (args.length == 0) {\n+            System.out.println(\"Hello World!\");\n+        } else {\n+            System.out.println(\"Hello \" + args[0]);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException1.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+JBangException2.java:1:1: compiler.warn.dangling.doc.comment\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException2.enabled.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,18 @@\n+\/** \/usr\/bin\/env jbang \"$0\" \"$@\" ; exit $? *\/\n+\n+\/** A class comment *\/\n+public class JBangException2 {\n+\n+    \/**\n+     * A method comment\n+     *\n+     * @param args a parameter comment\n+     *\/\n+    public static void main(String[] args) {\n+        if (args.length == 0) {\n+            System.out.println(\"Hello World!\");\n+        } else {\n+            System.out.println(\"Hello \" + args[0]);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException2.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,14 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ *\n+ * @compile\/ref=empty.out -XDrawDiagnostics JBangException1.java\n+ * @compile\/ref=empty.out -XDrawDiagnostics -Xlint:dangling-doc-comments JBangException1.java\n+ *\n+ * @compile\/ref=empty.out -XDrawDiagnostics JBangException2.java\n+ * @compile\/ref=JBangException2.enabled.out -XDrawDiagnostics -Xlint:dangling-doc-comments JBangException2.java\n+ *\/\n+\n+\/\/ The classes being tested reside in files separate from this one because\n+\/\/ the classes need to provide the initial dangling comment, which would\n+\/\/ otherwise interfere with the JTReg test comment. For similar reasons,\n+\/\/ the files with test classes do __NOT__ have a copyright header.\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangExceptionTest.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"}]}