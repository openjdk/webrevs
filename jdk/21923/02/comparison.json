{"files":[{"patch":"@@ -184,1 +184,1 @@\n-         * Warn about\"dangling\" documentation comments,\n+         * Warn about \"dangling\" documentation comments,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -670,1 +670,2 @@\n-                if (lint.isEnabled(Lint.LintCategory.DANGLING_DOC_COMMENTS)) {\n+                if (lint.isEnabled(Lint.LintCategory.DANGLING_DOC_COMMENTS) &&\n+                        !shebang(c, pos)) {\n@@ -678,0 +679,8 @@\n+    \/** Returns true for a comment that acts similarly to shebang in UNIX *\/\n+    private boolean shebang(Comment c, JCDiagnostic.DiagnosticPosition pos) {\n+        var src = log.currentSource();\n+        return c.getStyle() == Comment.CommentStyle.JAVADOC_LINE &&\n+                c.getPos().getStartPosition() == 0 &&\n+                src.getLineNumber(pos.getEndPosition(src.getEndPosTable())) == 1;\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,19 @@\n+\/\/\/usr\/bin\/env jbang \"$0\" \"$@\" ; exit $?\n+\/\/ \/nodynamiccopyright\/\n+\n+\/** A class comment *\/\n+public class JBangException1 {\n+\n+    \/**\n+     * A method comment\n+     *\n+     * @param args a parameter comment\n+     *\/\n+    public static void main(String[] args) {\n+        if (args.length == 0) {\n+            System.out.println(\"Hello World!\");\n+        } else {\n+            System.out.println(\"Hello \" + args[0]);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException1.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+JBangException2.java:1:1: compiler.warn.dangling.doc.comment\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException2.enabled.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,19 @@\n+\/** \/usr\/bin\/env jbang \"$0\" \"$@\" ; exit $? *\/\n+\/\/ \/nodynamiccopyright\/\n+\n+\/** A class comment *\/\n+public class JBangException2 {\n+\n+    \/**\n+     * A method comment\n+     *\n+     * @param args a parameter comment\n+     *\/\n+    public static void main(String[] args) {\n+        if (args.length == 0) {\n+            System.out.println(\"Hello World!\");\n+        } else {\n+            System.out.println(\"Hello \" + args[0]);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException2.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+JBangException3.java:1:1: compiler.warn.dangling.doc.comment\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException3.enabled.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,22 @@\n+\/\/\/ A\n+\/\/\/  multiline\n+\/\/\/   dangling\n+\/\/\/    comment\n+\/\/ \/nodynamiccopyright\/\n+\n+\/** A class comment *\/\n+public class JBangException3 {\n+\n+    \/**\n+     * A method comment\n+     *\n+     * @param args a parameter comment\n+     *\/\n+    public static void main(String[] args) {\n+        if (args.length == 0) {\n+            System.out.println(\"Hello World!\");\n+        } else {\n+            System.out.println(\"Hello \" + args[0]);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangException3.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ *\n+ * @compile\/ref=empty.out -XDrawDiagnostics JBangException1.java\n+ * @compile\/ref=empty.out -XDrawDiagnostics -Xlint:dangling-doc-comments JBangException1.java\n+ *\n+ * @compile\/ref=empty.out -XDrawDiagnostics JBangException2.java\n+ * @compile\/ref=JBangException2.enabled.out -XDrawDiagnostics -Xlint:dangling-doc-comments JBangException2.java\n+ *\n+ * @compile\/ref=empty.out -XDrawDiagnostics JBangException3.java\n+ * @compile\/ref=JBangException3.enabled.out -XDrawDiagnostics -Xlint:dangling-doc-comments JBangException3.java\n+ *\/\n+\n+\/\/ The classes being tested reside in files separate from this one because\n+\/\/ the classes need to provide the initial dangling comment, which would\n+\/\/ otherwise interfere with the JTReg test comment. For similar reasons,\n+\/\/ the files with test classes do __NOT__ have a copyright header.\n","filename":"test\/langtools\/tools\/javac\/danglingDocComments\/JBangExceptionTest.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"}]}