{"files":[{"patch":"@@ -923,0 +923,1 @@\n+    case 0x29: \/\/ movaps\n@@ -972,1 +973,1 @@\n-      ShouldNotReachHere();\n+      fatal(\"not handled: 0x0F%2X\", 0xFF & *(ip-1));\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -371,1 +371,4 @@\n-  Copy::fill_to_memory_atomic(p, sz, value);\n+  {\n+    GuardUnsafeAccess guard(thread);\n+    Copy::fill_to_memory_atomic(p, sz, value);\n+  }\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.lang.foreign.MemorySegment;\n@@ -63,0 +64,2 @@\n+    private static final int NUM_TESTS = 4;\n+\n@@ -74,1 +77,1 @@\n-        FileChannel fileChannel = new RandomAccessFile(file, \"r\").getChannel();\n+        FileChannel fileChannel = new RandomAccessFile(file, \"rw\").getChannel();\n@@ -76,1 +79,1 @@\n-            fileChannel.map(FileChannel.MapMode.READ_ONLY, 0, fileChannel.size());\n+            fileChannel.map(FileChannel.MapMode.READ_WRITE, 0, fileChannel.size());\n@@ -89,1 +92,1 @@\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < NUM_TESTS; i++) {\n@@ -95,1 +98,1 @@\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < NUM_TESTS; i++) {\n@@ -110,1 +113,1 @@\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < NUM_TESTS; i++) {\n@@ -124,1 +127,1 @@\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < NUM_TESTS; i++) {\n@@ -146,1 +149,1 @@\n-                \/\/ testing Unsafe.copySwapMemory, trying to access next  page after truncation.\n+                \/\/ testing Unsafe.copySwapMemory, trying to access next page after truncation.\n@@ -150,1 +153,1 @@\n-                \/\/ testing Unsafe.copySwapMemory, trying to access next  page after truncation.\n+                \/\/ testing Unsafe.copySwapMemory, trying to access next page after truncation.\n@@ -153,0 +156,5 @@\n+            case 3:\n+                MemorySegment segment = MemorySegment.ofBuffer(buffer);\n+                \/\/ testing Unsafe.setMemory, trying to access next page after truncation.\n+                segment.fill((byte) 0xF0);\n+                break;\n","filename":"test\/hotspot\/jtreg\/runtime\/Unsafe\/InternalErrorTest.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}