{"files":[{"patch":"@@ -50,0 +50,1 @@\n+  proc_regioninfo rinfo;\n@@ -69,0 +70,16 @@\n+  bool canCombine(const proc_regionwithpathinfo& mem_info) {\n+    const proc_regioninfo& n = mem_info.prp_prinfo;\n+    bool cc = rinfo.pri_size == 128 * M\n+              && n.pri_address == (rinfo.pri_address + _size)\n+              && n.pri_protection == rinfo.pri_protection\n+              && n.pri_max_protection == rinfo.pri_max_protection\n+              && n.pri_user_tag == rinfo.pri_user_tag\n+              && n.pri_share_mode == rinfo.pri_share_mode\n+              && n.pri_offset == 0;\n+    return cc;\n+  }\n+\n+  void combineWithFollowing(const proc_regionwithpathinfo& mem_info) {\n+    _size += mem_info.prp_prinfo.pri_size;\n+  }\n+  \n@@ -72,1 +89,1 @@\n-    const proc_regioninfo& rinfo = mem_info.prp_prinfo;\n+    rinfo = mem_info.prp_prinfo;\n@@ -80,1 +97,1 @@\n-    \/\/ proc_regionfilename() seems to give bad results, so we don't use it here.\n+    \/* proc_regionfilename() seems to give bad results, so we don't try to use it here. *\/\n@@ -96,0 +113,1 @@\n+    assert(SM_COW == 1 && SM_LARGE_PAGE == 8, \"share_mode contants are out of range\");\n@@ -107,1 +125,0 @@\n-\/\/#define X1(TAG) case VM_MEMORY_ ## TAG: return # TAG;\n@@ -181,1 +198,1 @@\n-  void add_mapping(const proc_regioninfo& region_info, const MappingInfo& mapping_info) {\n+  void add_mapping(const proc_regioninfo& region_info) {\n@@ -338,3 +355,11 @@\n-      mapping_info.process(region_info_with_path);\n-      printer.print_single_mapping(region_info, mapping_info);\n-      summary.add_mapping(region_info, mapping_info);\n+      if (mapping_info.canCombine(region_info_with_path)) {\n+        mapping_info.combineWithFollowing(region_info_with_path);\n+      } else {\n+        \/* print previous mapping info *\/\n+        \/* avoid printing the empty info at the start *\/\n+        if (mapping_info._size != 0) {\n+          printer.print_single_mapping(region_info, mapping_info);\n+        }\n+        summary.add_mapping(region_info);\n+        mapping_info.process(region_info_with_path);\n+      }\n@@ -345,0 +370,2 @@\n+  printer.print_single_mapping(region_info_with_path.prp_prinfo, mapping_info);\n+  summary.add_mapping(region_info_with_path.prp_prinfo);\n","filename":"src\/hotspot\/os\/bsd\/memMapPrinter_macosx.cpp","additions":34,"deletions":7,"binary":false,"changes":41,"status":"modified"}]}