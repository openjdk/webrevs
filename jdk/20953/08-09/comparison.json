{"files":[{"patch":"@@ -49,97 +49,0 @@\n-\n-class DllEntry {\n-  public:\n-\n-  const char* _address;\n-  const char* _dll_name;\n-  DllEntry* _next;\n-\n-  void free() {\n-    if (_next != nullptr) {\n-      _next->free();\n-      ::free(_next);\n-      _next = nullptr;\n-    }\n-    ::free((void*)_dll_name);\n-    _dll_name = nullptr;\n-  }\n-\n-  static DllEntry* build(const char* addr, const char* dll_name) {\n-    DllEntry* e = (DllEntry*)::malloc(sizeof(DllEntry));\n-    assert(e != nullptr, \"malloc failure\");\n-    assert(dll_name != nullptr, \"null dll name\");\n-    e->_address = addr;\n-    e->_dll_name = ::strdup(dll_name);\n-    e->_next = nullptr;\n-    return e;\n-  }\n-\n-  \/* append to list in sorted order, return first element of list *\/\n-  DllEntry* append(DllEntry* entry) {\n-    DllEntry* first = this;\n-    if (entry->_address < _address) {\n-      entry->_next = this;\n-      first = entry;\n-    } else if (_next == nullptr) {\n-      _next = entry;\n-    } else {\n-      _next = _next->append(entry);\n-    }\n-    return first;\n-  }\n-};\n-\n-class DllList {\n-  DllEntry* _dll_list;\n-  DllEntry* _dll_cursor;\n-\n-  public:\n-\n-  DllList() : _dll_list(nullptr), _dll_cursor(nullptr) {}\n-  ~DllList() {\n-    \/* free any held resources *\/\n-    if (_dll_list != nullptr) {\n-      _dll_list->free();\n-      ::free(_dll_list);\n-    }\n-  }\n-\n-  DllEntry* cursor_rewind() {\n-    _dll_cursor = _dll_list;\n-    return _dll_cursor;\n-  }\n-\n-  DllEntry* cursor_current() {\n-    return _dll_cursor;\n-  }\n-\n-  DllEntry* cursor_next() {\n-    if (_dll_cursor != nullptr) {\n-      _dll_cursor = _dll_cursor->_next;\n-    }\n-    return _dll_cursor;\n-  }\n-\n-  void append(DllEntry* entry) {\n-    if (_dll_list == nullptr) {\n-      _dll_list = entry;\n-    } else {\n-      _dll_list = _dll_list->append(entry);\n-    }\n-  }\n-\n-  static int dll_cb(const char *dll_name, address low, address high, void* param) {\n-    DllList* list = (DllList*)(param);\n-    DllEntry* entry = DllEntry::build((const char*)low, dll_name);\n-    list->append(entry);\n-    return 0;\n-  };\n-\n-  void add_all_dlls() {\n-    os::get_loaded_modules_info(dll_cb, this);\n-    cursor_rewind();\n-  }\n-};\n-\n-DllList dll_list;\n-\n@@ -174,12 +77,2 @@\n-    const char* path = mem_info.prp_vip.vip_path;\n-    if (path != nullptr) {\n-      _file_name.print_raw(path);\n-    } else {\n-      char buf[PATH_MAX];\n-      buf[0] = '\\0';\n-      proc_regionfilename(getpid(), (uint64_t) _address, buf, sizeof(buf));\n-      if (buf[0] != 0) {\n-        buf[sizeof(buf) - 1] = '\\0';\n-        _file_name.print_raw(\"-> \");\n-        _file_name.print_raw(buf);\n-      }\n+    if (mem_info.prp_vip.vip_path[0] != '\\0') {\n+      _file_name.print_raw(mem_info.prp_vip.vip_path);\n@@ -187,0 +80,1 @@\n+    \/\/ proc_regionfilename() seems to give bad results, so we don't use it here.\n@@ -189,0 +83,1 @@\n+    char maxprot[4];\n@@ -190,1 +85,2 @@\n-    _protect_buffer.print(\"%s\", prot);\n+    rwbits(rinfo.pri_max_protection, maxprot);\n+    _protect_buffer.print(\"%s\/%s\", prot, maxprot);\n@@ -208,10 +104,0 @@\n-    if (rinfo.pri_flags & PROC_REGION_SHARED) {\n-        out.print_raw(\"-shared\");\n-    }\n-    if (rinfo.pri_flags & PROC_REGION_SUBMAP) {\n-        out.print_raw(\"-submap\");\n-    }\n-    if ((rinfo.pri_flags & (PROC_REGION_SHARED | PROC_REGION_SUBMAP)) != rinfo.pri_flags) {\n-      out.print_cr(\"unhandled pri_flags = 0x%x\", rinfo.pri_flags);\n-      assert(false, \"unhandled pri_flags = 0x%x\", rinfo.pri_flags);\n-    }\n@@ -288,0 +174,1 @@\n+  size_t _reserved;     \/\/ reserved but not committed\n@@ -303,0 +190,7 @@\n+    bool is_committed = region_info.pri_share_mode == SM_EMPTY \n+                   && region_info.pri_max_protection == VM_PROT_ALL\n+                   && ((region_info.pri_protection & VM_PROT_DEFAULT) == VM_PROT_DEFAULT);\n+    bool is_reserved = region_info.pri_share_mode == SM_EMPTY \n+                   && region_info.pri_max_protection == VM_PROT_ALL\n+                   && region_info.pri_protection == VM_PROT_NONE;\n+\n@@ -306,0 +200,2 @@\n+    _committed += is_committed ? region_info.pri_size : 0;\n+    _reserved += is_reserved ? region_info.pri_size : 0;\n@@ -324,0 +220,2 @@\n+    st->print_cr(\"          reserved: %zu (\" PROPERFMT \")\", _reserved, PROPERFMTARGS(_reserved));\n+    st->print_cr(\"         committed: %zu (\" PROPERFMT \")\", _committed, PROPERFMTARGS(_committed));\n@@ -343,1 +241,1 @@\n-    st->print(\"%#014.12llx-%#014.11llx\", (uint64_t)(mapping_info._address), (uint64_t)(mapping_info._address + mapping_info._size));\n+    st->print(\"%#014.12llx-%#014.12llx\", (uint64_t)(mapping_info._address), (uint64_t)(mapping_info._address + mapping_info._size));\n@@ -348,1 +246,1 @@\n-    INDENT_BY(56);\n+    INDENT_BY(59);\n@@ -351,1 +249,1 @@\n-    INDENT_BY(61);\n+    INDENT_BY(64);\n@@ -353,1 +251,1 @@\n-    INDENT_BY(73);\n+    INDENT_BY(77);\n@@ -362,0 +260,1 @@\n+\n@@ -363,17 +262,0 @@\n-\/*\n-    st->print(\" bh=%d \", region_info.pri_behavior);\n-    st->print(\"fl=%d \", region_info.pri_flags);\n-    st->print(\"uwc=%d \", region_info.pri_user_wired_count);\n-    st->print(\"ut=%d \", region_info.pri_user_tag);\n-    st->print(\"pr=%d \", region_info.pri_pages_resident);\n-    st->print(\"snp=%d \", region_info.pri_pages_shared_now_private);\n-    st->print(\"inh=%d \", region_info.pri_inheritance);\n-    st->print(\"swo=%d \", region_info.pri_pages_swapped_out);\n-    st->print(\"pd=%d \", region_info.pri_pages_dirtied);\n-    st->print(\"rc=%d \", region_info.pri_ref_count);\n-    st->print(\"sd=%d \", region_info.pri_shadow_depth);\n-    st->print(\"sm=%d \", region_info.pri_share_mode);\n-    st->print(\"ppr=%d \", region_info.pri_private_pages_resident);\n-    st->print(\"spr=%d \", region_info.pri_shared_pages_resident);\n-    st->print(\"dep=%d \", region_info.pri_depth);\n-    \/\/*\/\n@@ -382,25 +264,0 @@\n-  \/*\n-   * regarding the 'cursor':\n-   * The dll_list is sorted by ascending start address,\n-   * and the macOS region_info is also returned in ascending start address.\n-   * When printing out a region_info, we skip ahead in the dll_list until we find\n-   * dlls within the region, and print them out.  \n-   * Then we leave the cursor pointing to the first dll above the current region.\n-   * We do not print out any dll info for regions with an associated file_name,\n-   * as that would be redundant.\n-   *\/\n-    if (mapping_info._file_name.count() == 0) {\n-      for (; dll_list.cursor_current() != nullptr; dll_list.cursor_next()) {\n-        DllEntry* e = dll_list.cursor_current();\n-        if ((uint64_t)(e->_address) < region_info.pri_address) {\n-          continue;\n-        }\n-        if ((uint64_t)(e->_address) >= (region_info.pri_address + region_info.pri_size)) {\n-          break;\n-        }\n-        INDENT_BY(5);\n-        st->print(\"%#014.12llx\", (uint64_t)(e->_address));\n-        INDENT_BY(73);\n-        st->print_cr(\"%s\", e->_dll_name);\n-      }\n-    }\n@@ -437,2 +294,2 @@\n-    \/\/            0x00000001714a0000-0x000000017169c000      2080768 rw-\/rwx  p\/a       0xc000 STACK-28419-C2-CompilerThread0\n-    st->print_cr(\"from               to                        vsize prot share     offset vminfo\/file\");\n+    \/\/            0x000102890000-0x000102898000                32768 r--\/r-- cow       0xc000 \/Users\/simont\/dev\/openjdk\/jdk\/build\/macos-aarch64-fastdebug-shenandoah\/images\/jdk\/bin\/java\n+    st->print_cr(\"from               to                        vsize prot    share     offset  vminfo\/file\");\n@@ -443,0 +300,8 @@\n+static bool is_interesting(const proc_regionwithpathinfo& info) {\n+   return info.prp_prinfo.pri_share_mode != SM_EMPTY \n+          || info.prp_prinfo.pri_user_tag != 0\n+          || info.prp_vip.vip_path[0] != '\\0'\n+          || info.prp_prinfo.pri_protection != 0\n+          || info.prp_prinfo.pri_max_protection != 0;\n+}\n+\n@@ -454,3 +319,1 @@\n-  dll_list.add_all_dlls();\n-\n-  proc_regionwithpathinfo region_info;\n+  proc_regionwithpathinfo region_info_with_path;\n@@ -465,1 +328,2 @@\n-    int retval = proc_pidinfo(pid, PROC_PIDREGIONPATHINFO, (uint64_t)address, &region_info, sizeof(region_info));\n+    ::bzero(&region_info_with_path, sizeof(region_info_with_path));\n+    int retval = proc_pidinfo(pid, PROC_PIDREGIONPATHINFO, (uint64_t)address, &region_info_with_path, sizeof(region_info_with_path));\n@@ -468,1 +332,1 @@\n-    } else if (retval < (int)sizeof(region_info)) {\n+    } else if (retval < (int)sizeof(region_info_with_path)) {\n@@ -472,4 +336,5 @@\n-    if (region_info.prp_prinfo.pri_share_mode != SM_EMPTY || region_info.prp_prinfo.pri_user_tag != 0) {\n-      mapping_info.process(region_info);\n-      printer.print_single_mapping(region_info.prp_prinfo, mapping_info);\n-      summary.add_mapping(region_info.prp_prinfo, mapping_info);\n+    proc_regioninfo& region_info = region_info_with_path.prp_prinfo;\n+    if (is_interesting(region_info_with_path)) {\n+      mapping_info.process(region_info_with_path);\n+      printer.print_single_mapping(region_info, mapping_info);\n+      summary.add_mapping(region_info, mapping_info);\n@@ -477,2 +342,2 @@\n-    assert(region_info.prp_prinfo.pri_size > 0, \"size of region is 0\");\n-    address = region_info.prp_prinfo.pri_address + region_info.prp_prinfo.pri_size;\n+    assert(region_info.pri_size > 0, \"size of region is 0\");\n+    address = region_info.pri_address + region_info.pri_size;\n","filename":"src\/hotspot\/os\/bsd\/memMapPrinter_macosx.cpp","additions":44,"deletions":179,"binary":false,"changes":223,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-        static final String macprot =  \"[\\\\-rwx]*\";\n+        static final String macprot =  \"[\\\\-rwx]*\/[\\\\-rwx]*\";\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/SystemMapTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}