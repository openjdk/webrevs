{"files":[{"patch":"@@ -102,9 +102,0 @@\n-     * @implNote\n-     * In the reference implementation, the maximum size of the returned list of\n-     * events is controlled by the system property\n-     * {@code jdk.nio.file.WatchService.maxEventsPerPoll}. If the property is\n-     * not set or is not an integer, the maximum size will be set to 512. The\n-     * maximum size is always at least 1. If more events occur than the maximum\n-     * size, the pending events are cleared and replaced with a single\n-     * {@link StandardWatchEventKinds#OVERFLOW OVERFLOW} event.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/WatchKey.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -101,0 +101,10 @@\n+ * @implNote\n+ * In the reference implementation, the maximum size of the list of events\n+ * returned by a key's {@link WatchKey#pollEvents() pollEvents} method is\n+ * controlled by the system property {@code\n+ * jdk.nio.file.WatchService.maxEventsPerPoll}. If the property is not set or\n+ * is not an integer, the maximum size will be set to 512. The maximum size is\n+ * always at least 1. If more events occur than the maximum size, the pending\n+ * events are cleared and replaced with a single {@link\n+ * StandardWatchEventKinds#OVERFLOW OVERFLOW} event.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/WatchService.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}