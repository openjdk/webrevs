{"files":[{"patch":"@@ -38,0 +38,2 @@\n+import static jdk.incubator.vector.VectorOperators.*;\n+\n@@ -85,1 +87,1 @@\n-            ByteVector lowerA = va.or((byte) 0x20);\n+            ByteVector upperA = va.and((byte) 0xDF);\n@@ -88,6 +90,2 @@\n-            VectorMask<Byte> asciiLetter = lowerA.lt((byte) '{').and(lowerA.lt((byte) 0x60).not());\n-            VectorMask<Byte> lat1Letter = lowerA\n-                    .lt((byte) 0xFF)  \/\/ <= thorn\n-                    .and(lowerA.lt((byte) 0XDF).not()) \/\/ >= a-grave\n-                    .and(lowerA.eq((byte) 0xF7).not()); \/\/ Excluding division\n-            VectorMask<Byte> letter = asciiLetter.or(lat1Letter);\n+            VectorMask<Byte> asciiLetter = upperA.compare(GE, (byte) 'A') \/\/ >= 'a'\n+                    .and(upperA.compare(LE, (byte) 'Z')); \/\/ <= 'z'\n@@ -95,0 +93,5 @@\n+            VectorMask<Byte> lat1Letter = upperA.compare(GE, (byte) 0XC0) \/\/ >= A-grave\n+                    .and(upperA.compare(LE, (byte) 0xEE))  \/\/ <= Thorn\n+                    .and(upperA.compare(NE, (byte) 0xD7)); \/\/ Excluding multiplication\n+\n+            VectorMask<Byte> letter = asciiLetter.or(lat1Letter);\n@@ -96,2 +99,2 @@\n-            \/\/ Lowercase b\n-            ByteVector lowerB = vb.or((byte) 0x20);\n+            \/\/ Uppercase b\n+            ByteVector upperB = vb.and((byte) 0xDF);\n@@ -102,1 +105,1 @@\n-            \/\/    AND their lowercase fold is the same\n+            \/\/    AND their uppercase is the same\n@@ -104,1 +107,1 @@\n-                    .or(letter.and(lowerA.eq(lowerB)));\n+                    .or(letter.and(upperA.eq(upperB)));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/EqualsIgnoreCaseBenchmark.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"}]}