{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -47,0 +47,1 @@\n+import java.util.concurrent.ExecutorService;\n@@ -55,0 +56,2 @@\n+    private static final String HELLO = \"Hello\";\n+\n@@ -68,1 +71,2 @@\n-        server.setExecutor(Executors.newThreadPerTaskExecutor(factory));\n+        final ExecutorService serverExecutor = Executors.newThreadPerTaskExecutor(factory);\n+        server.setExecutor(serverExecutor);\n@@ -70,4 +74,11 @@\n-            byte[] response = \"Hello\".getBytes(\"UTF-8\");\n-            e.sendResponseHeaders(200, response.length);\n-            try (OutputStream out = e.getResponseBody()) {\n-                out.write(response);\n+            try {\n+                byte[] response = HELLO.getBytes(\"UTF-8\");\n+                e.sendResponseHeaders(200, response.length);\n+                try (OutputStream out = e.getResponseBody()) {\n+                    out.write(response);\n+                }\n+            } catch (Throwable t) {\n+                System.err.println(\"failed to handle request \" + e.getRequestURI()\n+                        + \" due to: \" + t);\n+                t.printStackTrace();\n+                throw t; \/\/ let it propagate\n@@ -88,1 +99,1 @@\n-        try {\n+        try (serverExecutor) {\n@@ -92,1 +103,5 @@\n-                    executor.submit(() -> fetch(url)).get();\n+                    final String actual = executor.submit(() -> fetch(url)).get();\n+                    if (!HELLO.equals(actual)) {\n+                        throw new RuntimeException(\"unexpected response: \\\"\" + actual\n+                                + \"\\\" for request \" + i);\n+                    }\n","filename":"test\/jdk\/java\/net\/vthread\/HttpALot.java","additions":24,"deletions":9,"binary":false,"changes":33,"status":"modified"}]}