{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,0 @@\n-import com.sun.tools.javac.tree.JCTree.JCDerivedInstance;\n@@ -106,1 +105,0 @@\n-import com.sun.tools.javac.tree.JCTree.JCYield;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,14 +0,0 @@\n-visitDerivedInstance start\n-r with {\n-    val1 = \"a\";\n-    val2 = -1;\n-}\n-r with {\n-            val1 = \"a\";\n-            val2 = -1;\n-        }\n-val1\n-val2\n-visitDerivedInstance end\n-- compiler.note.preview.filename: Model.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/withers\/Model.out","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -26,2 +26,2 @@\n- * @bug 8256266 8281238\n- * @summary Verify annotations work correctly on binding variables\n+ * @bug 8324651\n+ * @summary Verify the Trees model for derived record creation expression\n@@ -32,1 +32,0 @@\n- *          java.base\/jdk.internal.classfile.impl\n@@ -34,2 +33,2 @@\n- * @compile Model.java\n- * @compile\/ref=Model.out -J--enable-preview -processor Model -XDshould-stop.at=FLOW -XDrawDiagnostics Model.java\n+ * @compile WithExpressions.java\n+ * @compile\/ref=WithExpressions.out -J--enable-preview -processor WithExpressions -XDshould-stop.at=FLOW -XDrawDiagnostics WithExpressions.java\n@@ -55,1 +54,1 @@\n-public class Model extends JavacTestingAbstractProcessor {\n+public class WithExpressions extends JavacTestingAbstractProcessor {\n","filename":"test\/langtools\/tools\/javac\/tree\/WithExpressions.java","additions":5,"deletions":6,"binary":false,"changes":11,"previous_filename":"test\/langtools\/tools\/javac\/patterns\/withers\/Model.java","status":"renamed"},{"patch":"@@ -0,0 +1,14 @@\n+visitDerivedInstance start\n+r with {\n+    val1 = \"a\";\n+    val2 = -1;\n+}\n+r with {\n+            val1 = \"a\";\n+            val2 = -1;\n+        }\n+val1\n+val2\n+visitDerivedInstance end\n+- compiler.note.preview.filename: WithExpressions.java, DEFAULT\n+- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/tree\/WithExpressions.out","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"}]}