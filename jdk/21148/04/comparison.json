{"files":[{"patch":"@@ -2124,1 +2124,1 @@\n-    assert(!target->can_be_statically_bound() || target->equals(cha_monomorphic_target), \"\");\n+    assert(!target->can_be_statically_bound() || target == cha_monomorphic_target, \"\");\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -745,0 +745,6 @@\n+\n+  \/\/ Redefinition support.\n+  if (this->is_old() || root_m->is_old() || target->is_old()) {\n+    return nullptr;\n+  }\n+\n@@ -784,16 +790,0 @@\n-\/\/ ------------------------------------------------------------------\n-\/\/ ciMethod::equals\n-\/\/\n-\/\/ Returns true if the methods are the same, taking redefined methods\n-\/\/ into account.\n-bool ciMethod::equals(const ciMethod* m) const {\n-  if (this == m) return true;\n-  VM_ENTRY_MARK;\n-  Method* m1 = this->get_Method();\n-  Method* m2 = m->get_Method();\n-  if (m1->is_old()) m1 = m1->get_new_method();\n-  if (m2->is_old()) m2 = m2->get_new_method();\n-  return m1 == m2;\n-}\n-\n-\n@@ -838,0 +828,5 @@\n+    \/\/ Redefinition support.\n+    if (this->is_old() || m->is_old()) {\n+      return nullptr;\n+    }\n+\n@@ -845,0 +840,1 @@\n+\n@@ -1499,0 +1495,7 @@\n+\/\/ ciMethod::is_old\n+\/\/\n+\/\/ Return true for redefined methods\n+bool ciMethod::is_old() const {\n+  ASSERT_IN_VM;\n+  return get_Method()->is_old();\n+}\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -364,0 +364,1 @@\n+  bool is_old() const;\n@@ -369,2 +370,0 @@\n-  bool equals(const ciMethod* m) const;\n-\n","filename":"src\/hotspot\/share\/ci\/ciMethod.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}