{"files":[{"patch":"@@ -92,1 +92,5 @@\n-                setData(bytes, format);\n+                if (DataFlavor.javaFileListFlavor.equals(flavor)) {\n+                    writeFileObjects(bytes);\n+                } else {\n+                    setData(bytes, format);\n+                }\n@@ -130,0 +134,1 @@\n+    private native void writeFileObjects(byte[] data);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CClipboard.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -177,0 +177,34 @@\n+\/*\n+ * Class:     sun_lwawt_macosx_CClipboard\n+ * Method:    writeFileObjects\n+ * Signature: ([BJ)V\n+*\/\n+JNIEXPORT void JNICALL Java_sun_lwawt_macosx_CClipboard_writeFileObjects\n+(JNIEnv *env, jobject inObject, jbyteArray inBytes, jlong inFormat)\n+{\n+    CHECK_NULL(inBytes);\n+\n+JNI_COCOA_ENTER(env);\n+    jint nBytes = (*env)->GetArrayLength(env, inBytes);\n+    jbyte *rawBytes = (*env)->GetPrimitiveArrayCritical(env, inBytes, NULL);\n+    CHECK_NULL(rawBytes);\n+    NSString *format = formatForIndex(inFormat);\n+    NSMutableArray *formatArray = [NSMutableArray arrayWithCapacity:2];\n+    int i = 0;\n+    for (int j = 0; j < nBytes; j++) {\n+        if (rawBytes[j] == 0) {\n+            NSString *path = [NSString stringWithUTF8String:(const char*)(rawBytes + i)];\n+            NSURL *fileURL = [NSURL fileURLWithPath:path];\n+            [formatArray addObject:fileURL.absoluteURL];\n+            i = j + 1;\n+        }\n+    }\n+    (*env)->ReleasePrimitiveArrayCritical(env, inBytes, rawBytes, JNI_ABORT);\n+\n+    [ThreadUtilities performOnMainThreadWaiting:YES block:^() {\n+        [[NSPasteboard generalPasteboard] writeObjects:formatArray];\n+    }];\n+JNI_COCOA_EXIT(env);\n+}\n+\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CClipboard.m","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"}]}