{"files":[{"patch":"@@ -126,2 +126,2 @@\n-        output.shouldContain(\"[nmt] MallocLimit: MemTag \\\"mtCompiler\\\" limit: 1234K (fatal)\");\n-        output.shouldMatch(\"#  fatal error: MallocLimit: reached MemTag \\\"mtCompiler\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1234K\\\\)\");\n+        output.shouldContain(\"[nmt] MallocLimit: category \\\"mtCompiler\\\" limit: 1234K (fatal)\");\n+        output.shouldMatch(\"#  fatal error: MallocLimit: reached category \\\"mtCompiler\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1234K\\\\)\");\n@@ -134,2 +134,2 @@\n-        output.shouldContain(\"[nmt] MallocLimit: MemTag \\\"mtCompiler\\\" limit: 1234K (oom)\");\n-        output.shouldMatch(\".*\\\\[warning\\\\]\\\\[nmt\\\\] MallocLimit: reached MemTag \\\"mtCompiler\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1234K\\\\)\");\n+        output.shouldContain(\"[nmt] MallocLimit: category \\\"mtCompiler\\\" limit: 1234K (oom)\");\n+        output.shouldMatch(\".*\\\\[warning\\\\]\\\\[nmt\\\\] MallocLimit: reached category \\\"mtCompiler\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1234K\\\\)\");\n@@ -143,4 +143,4 @@\n-        output.shouldContain(\"[nmt] MallocLimit: MemTag \\\"mtCompiler\\\" limit: 1024M (oom)\");\n-        output.shouldContain(\"[nmt] MallocLimit: MemTag \\\"mtInternal\\\" limit: 1024B (fatal)\");\n-        output.shouldContain(\"[nmt] MallocLimit: MemTag \\\"mtOther\\\" limit: 2048M (fatal)\");\n-        output.shouldMatch(\"#  fatal error: MallocLimit: reached MemTag \\\"mtInternal\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1024B\\\\)\");\n+        output.shouldContain(\"[nmt] MallocLimit: category \\\"mtCompiler\\\" limit: 1024M (oom)\");\n+        output.shouldContain(\"[nmt] MallocLimit: category \\\"mtInternal\\\" limit: 1024B (fatal)\");\n+        output.shouldContain(\"[nmt] MallocLimit: category \\\"mtOther\\\" limit: 2048M (fatal)\");\n+        output.shouldMatch(\"#  fatal error: MallocLimit: reached category \\\"mtInternal\\\" limit \\\\(triggering allocation size: \\\\d+[BKM], allocated so far: \\\\d+[BKM], limit: 1024B\\\\)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/MallocLimitTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}