{"files":[{"patch":"@@ -155,0 +155,10 @@\n+static bool is_cloop_condition(Node* bol) {\n+  for (DUIterator_Fast imax, i = bol->fast_outs(imax); i < imax; i++) {\n+    Node* out = bol->fast_out(i);\n+    if (out->is_CountedLoopEnd()) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -1559,2 +1569,2 @@\n-      !is_cloop_increment(cmp1) &&\n-      phase->type(cmp1->in(2)) == TypeInt::MIN) {\n+      phase->type(cmp1->in(2)) == TypeInt::MIN &&\n+      !is_cloop_condition(this)) {\n@@ -1566,2 +1576,2 @@\n-               !is_cloop_increment(cmp2) &&\n-               phase->type(cmp2->in(2)) == TypeInt::MIN) {\n+               phase->type(cmp2->in(2)) == TypeInt::MIN &&\n+               !is_cloop_condition(this)) {\n@@ -1577,2 +1587,2 @@\n-      !is_cloop_increment(cmp1) &&\n-      phase->type(cmp1->in(2)) == TypeLong::MIN) {\n+      phase->type(cmp1->in(2)) == TypeLong::MIN &&\n+      !is_cloop_condition(this)) {\n@@ -1584,2 +1594,2 @@\n-               !is_cloop_increment(cmp2) &&\n-               phase->type(cmp2->in(2)) == TypeLong::MIN) {\n+               phase->type(cmp2->in(2)) == TypeLong::MIN &&\n+               !is_cloop_condition(this)) {\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -34,0 +34,10 @@\n+\n+\/*\n+ * @test\n+ * @bug 8316719\n+ * @summary Loop increment should not be transformed into unsigned comparison\n+ *\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:-UseLoopPredicate\n+ *                   -XX:CompileCommand=compileonly,*MinValueStrideCountedLoop::test*\n+ *                   compiler.c2.MinValueStrideCountedLoop\n+ *\/\n@@ -37,0 +47,2 @@\n+    static int[] array = new int[1];\n+    static boolean b;\n@@ -38,1 +50,1 @@\n-    static void test() {\n+    static void test1() {\n@@ -44,0 +56,11 @@\n+    static int test2(int init, int limit) {\n+        int res = 0;\n+        int i = init;\n+        do {\n+            if (b) { }\n+            res += array[i];\n+            i += -2147483648;\n+        } while (i >= limit + -2147483647);\n+        return res;\n+    }\n+\n@@ -45,1 +68,2 @@\n-        test();\n+        test1();\n+        test2(0, 0);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/MinValueStrideCountedLoop.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}