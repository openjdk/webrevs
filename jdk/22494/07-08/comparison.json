{"files":[{"patch":"@@ -441,3 +441,3 @@\n-                ModuleFinder mf = newLimitedFinder(finder,\n-                                                   options.limitMods.isEmpty() ? initialRoots : options.limitMods,\n-                                                   Set.of());\n+                ModuleFinder mf = limitFinder(finder,\n+                                              options.limitMods.isEmpty() ? initialRoots : options.limitMods,\n+                                              Set.of());\n@@ -453,1 +453,1 @@\n-        finder = newLimitedFinder(finder, options.limitMods, roots);\n+        finder = limitFinder(finder, options.limitMods, roots);\n@@ -520,1 +520,1 @@\n-    public static ModuleFinder newLimitedFinder(ModuleFinder finder,\n+    public static ModuleFinder limitFinder(ModuleFinder finder,\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-                JlinkTask.newLimitedFinder(JlinkTask.newModuleFinder(modulePaths), limits, mods),\n+                JlinkTask.limitFinder(JlinkTask.newModuleFinder(modulePaths), limits, mods),\n","filename":"test\/jdk\/tools\/jlink\/IntegrationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-     * limits applied. This case test a module limit on a dependency, jdk.jfr,\n+     * limits applied. This case tests a module limit on a dependency, jdk.jfr,\n@@ -234,1 +234,1 @@\n-        List<String> expected = List.of(\"java.base\", \"jdk.jfr\");\n+        Set<String> expected = Set.of(\"java.base\", \"jdk.jfr\");\n@@ -258,1 +258,1 @@\n-    private void verifyListModules(Path targetPath, List<String> expected) throws Exception {\n+    private void verifyListModules(Path targetPath, Set<String> expected) throws Exception {\n@@ -263,1 +263,1 @@\n-        List<String> actual = out.asLines().stream()\n+        Set<String> actual = out.asLines().stream()\n@@ -265,2 +265,1 @@\n-                                 .sorted()\n-                                 .toList();\n+                                 .collect(Collectors.toSet());\n@@ -289,1 +288,0 @@\n-        assertEquals(rc == 0, success);\n@@ -292,0 +290,1 @@\n+        assertEquals(rc == 0, success, String.format(\"Output was: %nstdout: %s%nstderr: %s%n\", stdOut, stdErr));\n","filename":"test\/jdk\/tools\/jlink\/basic\/AllModulePath.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}