{"files":[{"patch":"@@ -147,0 +147,5 @@\n+    \/**\n+     * true if errors are pending from embedded expressions.\n+     *\/\n+    protected boolean hasStringTemplateErrors;\n+\n@@ -383,0 +388,12 @@\n+            \/\/ Intercept errors\n+            if (token.kind == TokenKind.ERROR) {\n+                \/\/ Track start of next fragment.\n+                if (isTextBlock) {\n+                    reset(length());\n+                } else {\n+                    skipToEOLN();\n+                }\n+                hasStringTemplateErrors = true;\n+                return;\n+            }\n+\n@@ -404,1 +421,2 @@\n-        reset(tokenizer.position());\n+        int position = tokenizer.position();\n+        reset(position);\n@@ -407,1 +425,1 @@\n-        fragmentRanges = fragmentRanges.append(position());\n+        fragmentRanges = fragmentRanges.append(position);\n@@ -475,0 +493,3 @@\n+                    if (hasStringTemplateErrors) {\n+                        return;\n+                    }\n@@ -516,1 +537,3 @@\n-                if (accept(\"\\\"\\\"\\\"\")) {\n+                if (hasStringTemplateErrors) {\n+                    break;\n+                } else if (accept(\"\\\"\\\"\\\"\")) {\n@@ -544,1 +567,3 @@\n-                if (accept('\\\"')) {\n+                if (hasStringTemplateErrors) {\n+                    break;\n+                } else if (accept('\\\"')) {\n@@ -562,1 +587,1 @@\n-        \/\/ String ended without close delimiter sequence.\n+        \/\/ String ended without close delimiter sequence or has embedded expression errors.\n@@ -564,6 +589,4 @@\n-            TokenKind prevTK = tk;\n-            lexError(pos, isTextBlock ? Errors.UnclosedTextBlockTemplate\n-                                      : Errors.UnclosedStringTemplate);\n-            if (prevTK == TokenKind.STRINGLITERAL) {\n-                tk = TokenKind.STRINGFRAGMENT;\n-            }\n+            lexError(pos, isTextBlock ? Errors.TextBlockTemplateIsNotWellFormed\n+                                      : Errors.StringTemplateIsNotWellFormed);\n+            fragmentRanges = List.nil();\n+            pendingTokens = List.nil();\n@@ -575,1 +598,1 @@\n-        if (firstEOLN  != NOT_FOUND) {\n+        if (!hasStringTemplateErrors && firstEOLN  != NOT_FOUND) {\n@@ -908,0 +931,1 @@\n+        hasStringTemplateErrors = false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavaTokenizer.java","additions":36,"deletions":12,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -1312,2 +1312,2 @@\n-compiler.err.unclosed.string.template=\\\n-    unclosed string template\n+compiler.err.string.template.is.not.well.formed=\\\n+    string template is not well formed\n@@ -1315,2 +1315,2 @@\n-compiler.err.unclosed.text.block.template=\\\n-    unclosed text block template\n+compiler.err.text.block.template.is.not.well.formed=\\\n+    text block template is not well formed\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,3 +27,1 @@\n- \/\/ key: compiler.err.unclosed.string.template\n- \/\/ key: compiler.err.expected\n- \/\/ key: compiler.err.premature.eof\n+ \/\/ key: compiler.err.string.template.is.not.well.formed\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/StringTemplateUnclosedString.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,4 +27,1 @@\n- \/\/ key: compiler.err.unclosed.text.block.template\n- \/\/ key: compiler.err.not.stmt\n- \/\/ key: compiler.err.expected\n- \/\/ key: compiler.err.illegal.char\n+ \/\/ key: compiler.err.text.block.template.is.not.well.formed\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/StringTemplateUnclosedTextBlock.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2081,0 +2081,1 @@\n+                System.out.println(\"RESULT\\n\" + result);\n@@ -2085,1 +2086,1 @@\n-\n+                             \\n\\\n@@ -2089,1 +2090,1 @@\n-                                     String s = [STR]\"\\\\{}\"(o.<error>);\n+                                     String s = STR.<error>;\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}