{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Arrays;\n@@ -35,2 +36,0 @@\n-import jdk.internal.access.JavaUtilCollectionAccess;\n-import jdk.internal.access.SharedSecrets;\n@@ -49,2 +48,0 @@\n-    private static final JavaUtilCollectionAccess JUCA = SharedSecrets.getJavaUtilCollectionAccess();\n-\n@@ -181,0 +178,1 @@\n+\n@@ -182,1 +180,3 @@\n-        return new SimpleStringTemplate(List.copyOf(fragments), toList(values.stream().toArray()));\n+        @SuppressWarnings(\"unchecked\")\n+        List<Object> copy = (List<Object>)values.stream().toList();\n+        return new SimpleStringTemplate(List.copyOf(fragments), copy);\n@@ -194,1 +194,1 @@\n-        return JUCA.listFromTrustedArrayNullsAllowed(elements);\n+        return Arrays.stream(elements).toList();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/StringTemplateImplFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -206,2 +206,1 @@\n-        List<Object> asList = Collections.unmodifiableList(new ArrayList<>(Arrays.asList(values)));\n-        return processor.process(StringTemplate.of(fragments, asList));\n+        return processor.process(StringTemplate.of(fragments, Arrays.stream(values).toList()));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/TemplateRuntime.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}