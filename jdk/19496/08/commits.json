[{"commit":{"message":"Fix whitespace."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"}],"sha":"f8118454e4dcd665fe2c2337a7044e3cbaf4ad7e"},{"commit":{"message":"Update comments in method `split_through_phi`.\n\nCo-authored-by: Christian Hagedorn <christian.hagedorn@oracle.com>"},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"}],"sha":"b5e579fcde87bf7bde8d27521b1fab574358b5af"},{"commit":{"message":"Add wrapper method for checking `DomResult` of `all_controls_dominate`."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.hpp"}],"sha":"8ee384988889d79a60700b5732255269be6c50ab"},{"commit":{"message":"Remove redundant `applyIf` and fix style for IR test."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/ScalarReplacementWithGCBarrierTests.java"}],"sha":"31bdcdb81d2bb3c214e8dbbb593ed23d002f7c21"},{"commit":{"message":"Fix style."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"}],"sha":"fb7c9204a3dea1fb966407cc5fda504e43bccb89"},{"commit":{"message":"Add brackets around modified if\/else branches."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"}],"sha":"785c06c85de9a78313e02883bff54a0e080b2c8d"},{"commit":{"message":"Add copyright."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/Maps.java"}],"sha":"35e7a0d8e401cb2744f970312df01b5ec0a5bb4d"},{"commit":{"message":"Make `Node::dominates` and `MemNode::all_controls_dominate` returns an `enum`."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"}],"sha":"38418f26120a5e51f39f1e16254719710f77bd7b"},{"commit":{"message":"Add `@requires` for G1 GC."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/ScalarReplacementWithGCBarrierTests.java"}],"sha":"f309ea41f1e13310dab1e84b6b0f3fcb9472c474"},{"commit":{"message":"Add `@ForceInline` to the IR test."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/ScalarReplacementWithGCBarrierTests.java"}],"sha":"d56e0372a8bdb79c1f71de6a54008b0487a7d26d"},{"commit":{"message":"Add IR test and update copyright."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/ScalarReplacementWithGCBarrierTests.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/Maps.java"}],"sha":"5c09678fe3814ac102e0ed857e8fb5d7fba08255"},{"commit":{"message":"Revert last commit, and push the `LoadNode` back to the worklist to wait for the dead code to be removed."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"}],"sha":"c02de1c7c66afa29e58ed4f3a10b6c42c6156fcb"},{"commit":{"message":"Make `Node::dominates` more precise so that iterators of `ConcurrentHashMap` can be scalar replaced."},"files":[{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/Maps.java"}],"sha":"799d87cbc513d04273cec246bb1f79a1325d647a"}]