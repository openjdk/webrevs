{"files":[{"patch":"@@ -54,1 +54,0 @@\n-import java.util.Arrays;\n@@ -524,0 +523,12 @@\n+    private static boolean containsWaylandWindowFocusListener(Window window) {\n+        if (window == null) {\n+            return false;\n+        }\n+        for (WindowFocusListener focusListener : window.getWindowFocusListeners()) {\n+            if (focusListener == waylandWindowFocusListener) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n@@ -533,1 +544,1 @@\n-                    \/\/ and the popup window itself.\n+                    \/\/ and the popup window itself or its children.\n@@ -536,1 +547,1 @@\n-                        if (window == oppositeWindow.getParent() ) {\n+                        if (containsWaylandWindowFocusListener(oppositeWindow.getOwner())) {\n@@ -560,4 +571,1 @@\n-        if (!Arrays\n-                .asList(window.getWindowFocusListeners())\n-                .contains(waylandWindowFocusListener)\n-        ) {\n+        if (!containsWaylandWindowFocusListener(window)) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-  * @bug 8319103\n+  * @bug 8319103 8342096\n@@ -38,0 +38,1 @@\n+import javax.swing.JMenu;\n@@ -50,2 +51,3 @@\n-            If the JTextField popup with \"Some text\" is not showing on the screen,\n-            click Fail.\n+            A menu should appear next to the window. If you move the cursor over it,\n+            the JTextField popup with \"Some text\" should appear on the screen.\n+            If it doesn't, click Fail.\n@@ -57,1 +59,1 @@\n-            on the screen.\n+            on the screen, move the mouse pointer over the menu.\n@@ -87,1 +89,4 @@\n-            popupMenu.add(textField);\n+\n+            JMenu menu = new JMenu(\"Menu\");\n+            menu.add(textField);\n+            popupMenu.add(menu);\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/FocusablePopupDismissTest.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary tests if nested menu is displayed on Wayland\n+ * @key headful\n+ * @bug 8342096\n+ * @requires (os.family == \"linux\")\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JPanel;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+public class NestedFocusablePopupTest {\n+\n+    static volatile JMenu menu;\n+    static volatile JPopupMenu popupMenu;\n+    static volatile JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        if (System.getenv(\"WAYLAND_DISPLAY\") == null) {\n+            \/\/test is valid only when running on Wayland.\n+            return;\n+        }\n+\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(50);\n+\n+        try {\n+            SwingUtilities.invokeAndWait(NestedFocusablePopupTest::initAndShowGui);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            Point frameLocation = frame.getLocationOnScreen();\n+            robot.mouseMove(frameLocation.x + frame.getWidth() \/ 2,\n+                    frameLocation.y + frame.getHeight() \/ 2);\n+\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            Point menuLocation = menu.getLocationOnScreen();\n+            robot.mouseMove(menuLocation.x + 5, menuLocation.y + 5);\n+            robot.waitForIdle();\n+            robot.delay(200);\n+\n+            if (!popupMenu.isVisible()) {\n+                throw new RuntimeException(\"Popup is not visible\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(frame::dispose);\n+        }\n+    }\n+\n+\n+    private static void initAndShowGui() {\n+        frame = new JFrame(\"NestedFocusablePopupTest\");\n+        JPanel panel = new JPanel();\n+        panel.setPreferredSize(new Dimension(200,180));\n+\n+\n+        popupMenu = new JPopupMenu();\n+        menu = new JMenu(\"menu to hover\");\n+        menu.add(new JButton(\"JButton\"));\n+        popupMenu.add(menu);\n+\n+        panel.setComponentPopupMenu(popupMenu);\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/NestedFocusablePopupTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"}]}