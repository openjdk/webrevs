{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -551,0 +551,7 @@\n+                        Window owner = window.getOwner();\n+                        while (owner != null) {\n+                            if (owner == oppositeWindow) {\n+                                return;\n+                            }\n+                            owner = owner.getOwner();\n+                        }\n@@ -573,0 +580,3 @@\n+            for (Window ownedWindow : window.getOwnedWindows()) {\n+                addWaylandWindowFocusListenerToWindow(ownedWindow);\n+            }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n-  * @library \/java\/awt\/regtesthelpers\n-  * @build PassFailJFrame\n+  * @library \/java\/awt\/regtesthelpers \/test\/lib\n+  * @build PassFailJFrame jtreg.SkippedException\n@@ -39,0 +39,1 @@\n+import javax.swing.JMenuItem;\n@@ -44,0 +45,2 @@\n+import jtreg.SkippedException;\n+\n@@ -51,2 +54,2 @@\n-            A menu should appear next to the window. If you move the cursor over it,\n-            the JTextField popup with \"Some text\" should appear on the screen.\n+            A menu should appear next to the window. If you move the cursor over\n+            the first menu, the JTextField popup should appear on the screen.\n@@ -62,1 +65,8 @@\n-            If the popup has disappeared, click Pass, otherwise click Fail.\n+            If the popup does not disappear, click Fail.\n+\n+            Open the menu again, move the mouse cursor over the following:\n+            \"Focusable 1\" -> \"Focusable 2\" -> \"Editor Focusable 2\"\n+            Move the mouse to the focusable system window\n+            (keeping the \"Editor Focusable 2\" JTextField open) and click on it.\n+\n+            If the popup does not disappear, click Fail, otherwise click Pass.\n@@ -67,2 +77,1 @@\n-            \/\/test is valid only when running on Wayland.\n-            return;\n+            throw new SkippedException(\"XWayland only test\");\n@@ -74,1 +83,0 @@\n-                .rows(20)\n@@ -81,0 +89,9 @@\n+    static JMenu getMenuWithMenuItem(boolean isSubmenuItemFocusable, String text) {\n+        JMenu menu = new JMenu(text);\n+        menu.add(isSubmenuItemFocusable\n+                ? new JTextField(\"Editor \" + text, 11)\n+                : new JMenuItem(\"Menu item\" + text)\n+        );\n+        return menu;\n+    }\n+\n@@ -88,1 +105,0 @@\n-            JTextField textField = new JTextField(\"Some text\", 10);\n@@ -90,3 +106,9 @@\n-            JMenu menu = new JMenu(\"Menu\");\n-            menu.add(textField);\n-            popupMenu.add(menu);\n+            JMenu menu1 = new JMenu(\"Menu 1\");\n+            menu1.add(new JTextField(\"Some text\", 10));\n+            JMenu menu2 = new JMenu(\"Menu 2\");\n+            menu2.add(new JTextField(\"Some text\", 10));\n+\n+            popupMenu.add(getMenuWithMenuItem(true, \"Focusable 1\"));\n+            popupMenu.add(getMenuWithMenuItem(true, \"Focusable 2\"));\n+            popupMenu.add(getMenuWithMenuItem(false, \"Non-Focusable 1\"));\n+            popupMenu.add(getMenuWithMenuItem(false, \"Non-Focusable 2\"));\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/FocusablePopupDismissTest.java","additions":35,"deletions":13,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires (os.family == \"linux\")\n@@ -29,1 +30,3 @@\n- * @requires (os.family == \"linux\")\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException\n+ * @run main NestedFocusablePopupTest\n@@ -35,0 +38,1 @@\n+import javax.swing.JMenuItem;\n@@ -43,0 +47,2 @@\n+import jtreg.SkippedException;\n+\n@@ -45,1 +51,2 @@\n-    static volatile JMenu menu;\n+    static volatile JMenu menuWithFocusableItem;\n+    static volatile JMenu menuWithNonFocusableItem;\n@@ -48,0 +55,1 @@\n+    static volatile Robot robot;\n@@ -51,2 +59,1 @@\n-            \/\/test is valid only when running on Wayland.\n-            return;\n+            throw new SkippedException(\"XWayland only test\");\n@@ -55,1 +62,1 @@\n-        Robot robot = new Robot();\n+        robot = new Robot();\n@@ -62,0 +69,1 @@\n+            test0();\n@@ -63,3 +71,7 @@\n-            Point frameLocation = frame.getLocationOnScreen();\n-            robot.mouseMove(frameLocation.x + frame.getWidth() \/ 2,\n-                    frameLocation.y + frame.getHeight() \/ 2);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            test1();\n+        } finally {\n+            SwingUtilities.invokeAndWait(frame::dispose);\n+        }\n+    }\n@@ -67,2 +79,4 @@\n-            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+    static void test0() throws Exception {\n+        Point frameLocation = frame.getLocationOnScreen();\n+        robot.mouseMove(frameLocation.x + frame.getWidth() \/ 2,\n+                frameLocation.y + frame.getHeight() \/ 2);\n@@ -70,2 +84,2 @@\n-            robot.waitForIdle();\n-            robot.delay(100);\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n@@ -73,4 +87,7 @@\n-            Point menuLocation = menu.getLocationOnScreen();\n-            robot.mouseMove(menuLocation.x + 5, menuLocation.y + 5);\n-            robot.waitForIdle();\n-            robot.delay(200);\n+        robot.waitForIdle();\n+        robot.delay(100);\n+\n+        Point menuLocation = menuWithFocusableItem.getLocationOnScreen();\n+        robot.mouseMove(menuLocation.x + 5, menuLocation.y + 5);\n+        robot.waitForIdle();\n+        robot.delay(200);\n@@ -78,1 +95,4 @@\n-            if (!popupMenu.isVisible()) {\n+        SwingUtilities.invokeAndWait(() -> {\n+            boolean visible = popupMenu.isVisible();\n+            popupMenu.setVisible(false);\n+            if (!visible) {\n@@ -81,3 +101,1 @@\n-        } finally {\n-            SwingUtilities.invokeAndWait(frame::dispose);\n-        }\n+        });\n@@ -86,0 +104,38 @@\n+    static void test1() throws Exception {\n+        Point frameLocation = frame.getLocationOnScreen();\n+        robot.mouseMove(frameLocation.x + frame.getWidth() \/ 2,\n+                frameLocation.y + frame.getHeight() \/ 2);\n+\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+        robot.waitForIdle();\n+        robot.delay(100);\n+\n+        Point menuLocation = menuWithFocusableItem.getLocationOnScreen();\n+        robot.mouseMove(menuLocation.x + 5, menuLocation.y + 5);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        menuLocation = menuWithNonFocusableItem.getLocationOnScreen();\n+        robot.mouseMove(menuLocation.x + 5, menuLocation.y + 5);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            boolean visible = popupMenu.isVisible();\n+            popupMenu.setVisible(false);\n+            if (!visible) {\n+                throw new RuntimeException(\"Popup is not visible\");\n+            }\n+        });\n+    }\n+\n+    static JMenu getMenuWithMenuItem(boolean isSubmenuItemFocusable, String text) {\n+        JMenu menu = new JMenu(text);\n+        menu.add(isSubmenuItemFocusable\n+                ? new JButton(text)\n+                : new JMenuItem(text)\n+        );\n+        return menu;\n+    }\n@@ -94,3 +150,7 @@\n-        menu = new JMenu(\"menu to hover\");\n-        menu.add(new JButton(\"JButton\"));\n-        popupMenu.add(menu);\n+        menuWithFocusableItem =\n+                getMenuWithMenuItem(true, \"focusable subitem\");\n+        menuWithNonFocusableItem =\n+                getMenuWithMenuItem(false, \"non focusable subitem\");\n+\n+        popupMenu.add(menuWithFocusableItem);\n+        popupMenu.add(menuWithNonFocusableItem);\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/NestedFocusablePopupTest.java","additions":84,"deletions":24,"binary":false,"changes":108,"status":"modified"}]}