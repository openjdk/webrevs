{"files":[{"patch":"@@ -575,5 +575,0 @@\n-HeapWord* DefNewGeneration::expand_and_allocate(size_t size) {\n-  \/\/ We don't attempt to expand the young generation (but perhaps we should.)\n-  return allocate(size);\n-}\n-\n@@ -883,0 +878,5 @@\n+HeapWord* DefNewGeneration::expand_and_allocate(size_t size) {\n+  \/\/ We don't attempt to expand the young generation (but perhaps we should.)\n+  return allocate(size);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -212,0 +212,1 @@\n+  \/\/ Allocate requested size or return null; single-threaded and lock-free versions.\n@@ -215,0 +216,3 @@\n+  \/\/ Expand young-gen and invoke allocate above.\n+  HeapWord* expand_and_allocate(size_t size);\n+\n@@ -229,2 +233,0 @@\n-  HeapWord* expand_and_allocate(size_t size);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -133,0 +133,2 @@\n+  \/\/ Allocate and returns a block of the requested size, or returns \"null\".\n+  \/\/ Assumes the caller has done any necessary locking.\n@@ -134,1 +136,0 @@\n-  inline HeapWord* par_allocate(size_t word_size);\n@@ -136,0 +137,1 @@\n+  \/\/ Expand the old-gen then invoke allocate above.\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,8 +59,0 @@\n-HeapWord* TenuredGeneration::par_allocate(size_t word_size) {\n-  HeapWord* res = _the_space->par_allocate(word_size);\n-  if (res != nullptr) {\n-    _bts->update_for_block(res, res + word_size);\n-  }\n-  return res;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"}]}