{"files":[{"patch":"@@ -575,5 +575,0 @@\n-HeapWord* DefNewGeneration::expand_and_allocate(size_t size, bool is_tlab) {\n-  \/\/ We don't attempt to expand the young generation (but perhaps we should.)\n-  return allocate(size, is_tlab);\n-}\n-\n@@ -869,1 +864,1 @@\n-HeapWord* DefNewGeneration::allocate(size_t word_size, bool is_tlab) {\n+HeapWord* DefNewGeneration::allocate(size_t word_size) {\n@@ -879,2 +874,1 @@\n-HeapWord* DefNewGeneration::par_allocate(size_t word_size,\n-                                         bool is_tlab) {\n+HeapWord* DefNewGeneration::par_allocate(size_t word_size) {\n@@ -884,0 +878,5 @@\n+HeapWord* DefNewGeneration::expand_and_allocate(size_t size) {\n+  \/\/ We don't attempt to expand the young generation (but perhaps we should.)\n+  return allocate(size);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -212,1 +212,3 @@\n-  HeapWord* allocate(size_t word_size, bool is_tlab);\n+  \/\/ Allocate requested size or return null; single-threaded and lock-free versions.\n+  HeapWord* allocate(size_t word_size);\n+  HeapWord* par_allocate(size_t word_size);\n@@ -214,1 +216,2 @@\n-  HeapWord* par_allocate(size_t word_size, bool is_tlab);\n+  \/\/ Expand young-gen and invoke allocate above.\n+  HeapWord* expand_and_allocate(size_t size);\n@@ -230,2 +233,0 @@\n-  HeapWord* expand_and_allocate(size_t size, bool is_tlab);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -106,14 +106,0 @@\n-  \/\/ Allocate and returns a block of the requested size, or returns \"null\".\n-  \/\/ Assumes the caller has done any necessary locking.\n-  virtual HeapWord* allocate(size_t word_size, bool is_tlab) = 0;\n-\n-  \/\/ Like \"allocate\", but performs any necessary locking internally.\n-  virtual HeapWord* par_allocate(size_t word_size, bool is_tlab) = 0;\n-\n-  \/\/ Perform a heap collection, attempting to create (at least) enough\n-  \/\/ space to support an allocation of the given \"word_size\".  If\n-  \/\/ successful, perform the allocation and return the resulting\n-  \/\/ \"oop\" (initializing the allocated block). If the allocation is\n-  \/\/ still unsuccessful, return \"null\".\n-  virtual HeapWord* expand_and_allocate(size_t word_size, bool is_tlab) = 0;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  return old_gen()->allocate(word_size, false \/* is_tlab *\/);\n+  return old_gen()->allocate(word_size);\n@@ -295,1 +295,1 @@\n-    result = _old_gen->expand_and_allocate(size, is_tlab);\n+    result = _old_gen->expand_and_allocate(size);\n@@ -299,1 +299,1 @@\n-      result = _young_gen->expand_and_allocate(size, is_tlab);\n+      result = _young_gen->expand_and_allocate(size);\n@@ -317,1 +317,1 @@\n-      result = young->par_allocate(size, is_tlab);\n+      result = young->par_allocate(size);\n@@ -409,1 +409,1 @@\n-    res = _young_gen->allocate(size, is_tlab);\n+    res = _young_gen->allocate(size);\n@@ -416,1 +416,1 @@\n-    res = _old_gen->allocate(size, is_tlab);\n+    res = _old_gen->allocate(size);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-  HeapWord* result = allocate(obj_size, false);\n+  HeapWord* result = allocate(obj_size);\n@@ -403,1 +403,1 @@\n-    result = expand_and_allocate(obj_size, false);\n+    result = expand_and_allocate(obj_size);\n@@ -410,2 +410,1 @@\n-TenuredGeneration::expand_and_allocate(size_t word_size, bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n+TenuredGeneration::expand_and_allocate(size_t word_size) {\n@@ -413,1 +412,1 @@\n-  return allocate(word_size, is_tlab);\n+  return allocate(word_size);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -133,2 +133,3 @@\n-  virtual inline HeapWord* allocate(size_t word_size, bool is_tlab);\n-  virtual inline HeapWord* par_allocate(size_t word_size, bool is_tlab);\n+  \/\/ Allocate and returns a block of the requested size, or returns \"null\".\n+  \/\/ Assumes the caller has done any necessary locking.\n+  inline HeapWord* allocate(size_t word_size);\n@@ -136,1 +137,2 @@\n-  HeapWord* expand_and_allocate(size_t size, bool is_tlab);\n+  \/\/ Expand the old-gen then invoke allocate above.\n+  HeapWord* expand_and_allocate(size_t size);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,3 +51,1 @@\n-HeapWord* TenuredGeneration::allocate(size_t word_size,\n-                                      bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n+HeapWord* TenuredGeneration::allocate(size_t word_size) {\n@@ -61,10 +59,0 @@\n-HeapWord* TenuredGeneration::par_allocate(size_t word_size,\n-                                          bool is_tlab) {\n-  assert(!is_tlab, \"TenuredGeneration does not support TLAB allocation\");\n-  HeapWord* res = _the_space->par_allocate(word_size);\n-  if (res != nullptr) {\n-    _bts->update_for_block(res, res + word_size);\n-  }\n-  return res;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"}]}