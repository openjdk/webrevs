{"files":[{"patch":"@@ -137,1 +137,1 @@\n-      GCIdMark gc_id_mark(static_cast<uint>(get_gc_id()));\n+      GCIdMark gc_id_mark(checked_cast<uint>(get_gc_count() - 1));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,6 +50,0 @@\n-size_t ShenandoahController::get_gc_id() {\n-  size_t gc_count = get_gc_count();\n-  assert(gc_count > 0, \"Sanity check\");\n-  return gc_count - 1;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -90,2 +90,0 @@\n-\n-  size_t get_gc_id();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  GCIdMark gc_id_mark(static_cast<uint>(get_gc_id()));\n+  GCIdMark gc_id_mark(checked_cast<uint>(get_gc_count() - 1));\n@@ -576,1 +576,1 @@\n-        mmu_tracker->record_mixed(get_gc_id());\n+        mmu_tracker->record_mixed(gc_id());\n@@ -578,1 +578,1 @@\n-        mmu_tracker->record_bootstrap(get_gc_id());\n+        mmu_tracker->record_bootstrap(gc_id());\n@@ -580,1 +580,1 @@\n-        mmu_tracker->record_young(get_gc_id());\n+        mmu_tracker->record_young(gc_id());\n@@ -591,1 +591,1 @@\n-      mmu_tracker->record_global(get_gc_id());\n+      mmu_tracker->record_global(gc_id());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-void ShenandoahMmuTracker::update_utilization(size_t gcid, const char* msg) {\n+void ShenandoahMmuTracker::update_utilization(uint gcid, const char* msg) {\n@@ -112,1 +112,1 @@\n-void ShenandoahMmuTracker::record_young(size_t gcid) {\n+void ShenandoahMmuTracker::record_young(uint gcid) {\n@@ -116,1 +116,1 @@\n-void ShenandoahMmuTracker::record_global(size_t gcid) {\n+void ShenandoahMmuTracker::record_global(uint gcid) {\n@@ -120,1 +120,1 @@\n-void ShenandoahMmuTracker::record_bootstrap(size_t gcid) {\n+void ShenandoahMmuTracker::record_bootstrap(uint gcid) {\n@@ -139,1 +139,1 @@\n-void ShenandoahMmuTracker::record_mixed(size_t gcid) {\n+void ShenandoahMmuTracker::record_mixed(uint gcid) {\n@@ -153,1 +153,1 @@\n-void ShenandoahMmuTracker::record_full(size_t gcid) {\n+void ShenandoahMmuTracker::record_full(uint gcid) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  size_t _most_recent_gcid;\n+  uint _most_recent_gcid;\n@@ -75,1 +75,1 @@\n-  void update_utilization(size_t gcid, const char* msg);\n+  void update_utilization(uint gcid, const char* msg);\n@@ -92,3 +92,3 @@\n-  void record_young(size_t gcid);\n-  void record_global(size_t gcid);\n-  void record_bootstrap(size_t gcid);\n+  void record_young(uint gcid);\n+  void record_global(uint gcid);\n+  void record_bootstrap(uint gcid);\n@@ -96,2 +96,2 @@\n-  void record_mixed(size_t gcid);\n-  void record_full(size_t gcid);\n+  void record_mixed(uint gcid);\n+  void record_full(uint gcid);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -682,1 +682,1 @@\n-  const size_t gc_id = heap->control_thread()->get_gc_id();\n+  const size_t gc_count = heap->control_thread()->get_gc_count();\n@@ -684,1 +684,1 @@\n-  if ((gc_id != last_report_epoch) || (epoch_report_count++ < MaxReportsPerEpoch)) {\n+  if ((gc_count != last_report_epoch) || (epoch_report_count++ < MaxReportsPerEpoch)) {\n@@ -702,1 +702,1 @@\n-    if ((gc_id == last_report_epoch) && (epoch_report_count >= MaxReportsPerEpoch)) {\n+    if ((gc_count == last_report_epoch) && (epoch_report_count >= MaxReportsPerEpoch)) {\n@@ -704,2 +704,2 @@\n-    } else if (gc_id != last_report_epoch) {\n-      last_report_epoch = gc_id;\n+    } else if (gc_count != last_report_epoch) {\n+      last_report_epoch = gc_count;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}