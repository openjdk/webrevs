{"files":[{"patch":"@@ -135,2 +135,3 @@\n-      \/\/ GC is starting, bump the internal ID\n-      update_gc_id();\n+      \/\/ GC is starting, bump the internal gc count and set GCIdMark\n+      update_gc_count();\n+      GCIdMark gc_id_mark(static_cast<uint>(get_gc_id()));\n@@ -302,1 +303,0 @@\n-  GCIdMark gc_id_mark;\n@@ -346,1 +346,0 @@\n-  GCIdMark gc_id_mark;\n@@ -356,1 +355,0 @@\n-  GCIdMark gc_id_mark;\n@@ -395,3 +393,3 @@\n-  size_t current_gc_id = get_gc_id();\n-  size_t required_gc_id = current_gc_id + 1;\n-  while (current_gc_id < required_gc_id && !should_terminate()) {\n+  size_t current_gc_count = get_gc_count();\n+  size_t required_gc_count = current_gc_count + 1;\n+  while (current_gc_count < required_gc_count && !should_terminate()) {\n@@ -405,1 +403,1 @@\n-    current_gc_id = get_gc_id();\n+    current_gc_count = get_gc_count();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -42,2 +42,6 @@\n-void ShenandoahController::update_gc_id() {\n-  Atomic::inc(&_gc_id);\n+void ShenandoahController::update_gc_count() {\n+  Atomic::inc(&_gc_count);\n+}\n+\n+size_t ShenandoahController::get_gc_count() {\n+  return Atomic::load(&_gc_count);\n@@ -47,1 +51,3 @@\n-  return Atomic::load(&_gc_id);\n+  size_t gc_count = get_gc_count();\n+  assert(gc_count > 0, \"Sanity check\");\n+  return gc_count - 1;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  volatile size_t _gc_id;\n+  volatile size_t _gc_count;\n@@ -53,2 +53,3 @@\n-  \/\/ Increments the internal GC count.\n-  void update_gc_id();\n+  \/\/ Increments the internal GC count,\n+  \/\/ it is called by control thread when it starts to fulfill a GC reqeust.\n+  void update_gc_count();\n@@ -59,1 +60,1 @@\n-    _gc_id(0),\n+    _gc_count(0),\n@@ -88,0 +89,2 @@\n+  size_t get_gc_count();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -233,2 +233,3 @@\n-  \/\/ GC is starting, bump the internal ID\n-  update_gc_id();\n+  \/\/ GC is starting, bump the internal gc count and set GCIdMark\n+  update_gc_count();\n+  GCIdMark gc_id_mark(static_cast<uint>(get_gc_id()));\n@@ -266,1 +267,0 @@\n-        GCIdMark gc_id_mark;\n@@ -389,1 +389,0 @@\n-  GCIdMark gc_id_mark;\n@@ -624,1 +623,0 @@\n-  GCIdMark gc_id_mark;\n@@ -635,1 +633,0 @@\n-  GCIdMark gc_id_mark;\n@@ -759,3 +756,3 @@\n-  size_t current_gc_id = get_gc_id();\n-  const size_t required_gc_id = current_gc_id + 1;\n-  while (current_gc_id < required_gc_id && !should_terminate()) {\n+  size_t current_gc_count = get_gc_count();\n+  const size_t required_gc_count = current_gc_count + 1;\n+  while (current_gc_count < required_gc_count && !should_terminate()) {\n@@ -765,1 +762,1 @@\n-    current_gc_id = get_gc_id();\n+    current_gc_count = get_gc_count();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"}]}