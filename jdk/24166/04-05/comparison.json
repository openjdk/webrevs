{"files":[{"patch":"@@ -135,1 +135,3 @@\n-      \/\/ GC is starting, bump the gc id and update internal gc count.\n+      \/\/ GC is starting, bump the internal ID\n+      update_gc_id();\n+\n@@ -137,1 +139,0 @@\n-      update_gc_count();\n@@ -393,3 +394,3 @@\n-  size_t current_gc_count = get_gc_count();\n-  size_t required_gc_count = current_gc_count + 1;\n-  while (current_gc_count < required_gc_count && !should_terminate()) {\n+  size_t current_gc_id = get_gc_id();\n+  size_t required_gc_id = current_gc_id + 1;\n+  while (current_gc_id < required_gc_id && !should_terminate()) {\n@@ -403,1 +404,1 @@\n-    current_gc_count = get_gc_count();\n+    current_gc_id = get_gc_id();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-void ShenandoahController::update_gc_count() {\n-  Atomic::store(&_gc_count, checked_cast<size_t>(gc_id() + 1));\n+void ShenandoahController::update_gc_id() {\n+  Atomic::inc(&_gc_id);\n@@ -46,2 +46,2 @@\n-size_t ShenandoahController::get_gc_count() {\n-  return Atomic::load(&_gc_count);\n+size_t ShenandoahController::get_gc_id() {\n+  return Atomic::load(&_gc_id);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  volatile size_t _gc_count;\n+  volatile size_t _gc_id;\n@@ -53,3 +53,2 @@\n-  \/\/ Update the internal GC count,\n-  \/\/ it is called by control thread when it starts to fulfill a GC reqeust.\n-  void update_gc_count();\n+  \/\/ Increments the internal GC count.\n+  void update_gc_id();\n@@ -60,1 +59,1 @@\n-    _gc_count(0),\n+    _gc_id(0),\n@@ -89,1 +88,1 @@\n-  size_t get_gc_count();\n+  size_t get_gc_id();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -233,3 +233,2 @@\n-  \/\/ GC is starting, bump the gc id and update internal gc count.\n-  GCIdMark gc_id_mark;\n-  update_gc_count();\n+  \/\/ GC is starting, bump the internal ID\n+  update_gc_id();\n@@ -237,0 +236,1 @@\n+  GCIdMark gc_id_mark;\n@@ -577,1 +577,1 @@\n-        mmu_tracker->record_mixed(gc_id());\n+        mmu_tracker->record_mixed(get_gc_id());\n@@ -579,1 +579,1 @@\n-        mmu_tracker->record_bootstrap(gc_id());\n+        mmu_tracker->record_bootstrap(get_gc_id());\n@@ -581,1 +581,1 @@\n-        mmu_tracker->record_young(gc_id());\n+        mmu_tracker->record_young(get_gc_id());\n@@ -592,1 +592,1 @@\n-      mmu_tracker->record_global(gc_id());\n+      mmu_tracker->record_global(get_gc_id());\n@@ -757,3 +757,3 @@\n-  size_t current_gc_count = get_gc_count();\n-  const size_t required_gc_count = current_gc_count + 1;\n-  while (current_gc_count < required_gc_count && !should_terminate()) {\n+  size_t current_gc_id = get_gc_id();\n+  const size_t required_gc_id = current_gc_id + 1;\n+  while (current_gc_id < required_gc_id && !should_terminate()) {\n@@ -763,1 +763,1 @@\n-    current_gc_count = get_gc_count();\n+    current_gc_id = get_gc_id();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-void ShenandoahMmuTracker::update_utilization(uint gcid, const char* msg) {\n+void ShenandoahMmuTracker::update_utilization(size_t gcid, const char* msg) {\n@@ -112,1 +112,1 @@\n-void ShenandoahMmuTracker::record_young(uint gcid) {\n+void ShenandoahMmuTracker::record_young(size_t gcid) {\n@@ -116,1 +116,1 @@\n-void ShenandoahMmuTracker::record_global(uint gcid) {\n+void ShenandoahMmuTracker::record_global(size_t gcid) {\n@@ -120,1 +120,1 @@\n-void ShenandoahMmuTracker::record_bootstrap(uint gcid) {\n+void ShenandoahMmuTracker::record_bootstrap(size_t gcid) {\n@@ -139,1 +139,1 @@\n-void ShenandoahMmuTracker::record_mixed(uint gcid) {\n+void ShenandoahMmuTracker::record_mixed(size_t gcid) {\n@@ -143,1 +143,1 @@\n-void ShenandoahMmuTracker::record_degenerated(uint gcid, bool is_old_bootstrap) {\n+void ShenandoahMmuTracker::record_degenerated(size_t gcid, bool is_old_bootstrap) {\n@@ -153,1 +153,1 @@\n-void ShenandoahMmuTracker::record_full(uint gcid) {\n+void ShenandoahMmuTracker::record_full(size_t gcid) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  uint _most_recent_gcid;\n+  size_t _most_recent_gcid;\n@@ -75,1 +75,1 @@\n-  void update_utilization(uint gcid, const char* msg);\n+  void update_utilization(size_t gcid, const char* msg);\n@@ -92,3 +92,3 @@\n-  void record_young(uint gcid);\n-  void record_global(uint gcid);\n-  void record_bootstrap(uint gcid);\n+  void record_young(size_t gcid);\n+  void record_global(size_t gcid);\n+  void record_bootstrap(size_t gcid);\n@@ -96,3 +96,3 @@\n-  void record_mixed(uint gcid);\n-  void record_full(uint gcid);\n-  void record_degenerated(uint gcid, bool is_old_boostrap);\n+  void record_mixed(size_t gcid);\n+  void record_full(size_t gcid);\n+  void record_degenerated(size_t gcid, bool is_old_boostrap);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -682,1 +682,1 @@\n-  const size_t gc_count = heap->control_thread()->get_gc_count();\n+  const size_t gc_id = heap->control_thread()->get_gc_id();\n@@ -684,1 +684,1 @@\n-  if ((gc_count != last_report_epoch) || (epoch_report_count++ < MaxReportsPerEpoch)) {\n+  if ((gc_id != last_report_epoch) || (epoch_report_count++ < MaxReportsPerEpoch)) {\n@@ -702,1 +702,1 @@\n-    if ((gc_count == last_report_epoch) && (epoch_report_count >= MaxReportsPerEpoch)) {\n+    if ((gc_id == last_report_epoch) && (epoch_report_count >= MaxReportsPerEpoch)) {\n@@ -704,2 +704,2 @@\n-    } else if (gc_count != last_report_epoch) {\n-      last_report_epoch = gc_count;\n+    } else if (gc_id != last_report_epoch) {\n+      last_report_epoch = gc_id;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}