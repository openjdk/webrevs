{"files":[{"patch":"@@ -764,1 +764,1 @@\n-  assert_used_and_recalculate_used_equal(this);\n+  assert_used_and_recalculate_used_equal();\n@@ -2848,1 +2848,1 @@\n-  assert_used_and_recalculate_used_equal(this);\n+  assert_used_and_recalculate_used_equal();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-  inline static void assert_used_and_recalculate_used_equal(G1CollectedHeap* g1h) NOT_DEBUG_RETURN;\n+  inline void assert_used_and_recalculate_used_equal() const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -364,3 +364,3 @@\n-assert_used_and_recalculate_used_equal(G1CollectedHeap* g1h) {\n-  size_t cur_used_bytes = g1h->used();\n-  size_t recal_used_bytes = g1h->recalculate_used();\n+assert_used_and_recalculate_used_equal() const {\n+  size_t cur_used_bytes = used();\n+  size_t recal_used_bytes = recalculate_used();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -685,1 +685,1 @@\n-  G1CollectedHeap::assert_used_and_recalculate_used_equal(_g1h);\n+  G1CollectedHeap::heap()->assert_used_and_recalculate_used_equal();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1015,1 +1015,1 @@\n-  G1CollectedHeap::assert_used_and_recalculate_used_equal(_g1h);\n+  G1CollectedHeap::heap()->assert_used_and_recalculate_used_equal();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}