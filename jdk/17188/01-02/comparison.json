{"files":[{"patch":"@@ -312,7 +312,7 @@\n-  static void assert_heap_locked() NOT_DEBUG_RETURN;\n-  static void assert_heap_locked_or_at_safepoint(bool should_be_vm_thread) NOT_DEBUG_RETURN;\n-  static void assert_heap_locked_and_not_at_safepoint() NOT_DEBUG_RETURN;\n-  static void assert_heap_not_locked() NOT_DEBUG_RETURN;\n-  static void assert_heap_not_locked_and_not_at_safepoint() NOT_DEBUG_RETURN;\n-  static void assert_at_safepoint_on_vm_thread() NOT_DEBUG_RETURN;\n-  static void assert_used_and_recalculate_used_equal(G1CollectedHeap* g1h) NOT_DEBUG_RETURN;\n+  inline static void assert_heap_locked() NOT_DEBUG_RETURN;\n+  inline static void assert_heap_locked_or_at_safepoint(bool should_be_vm_thread) NOT_DEBUG_RETURN;\n+  inline static void assert_heap_locked_and_not_at_safepoint() NOT_DEBUG_RETURN;\n+  inline static void assert_heap_not_locked() NOT_DEBUG_RETURN;\n+  inline static void assert_heap_not_locked_and_not_at_safepoint() NOT_DEBUG_RETURN;\n+  inline static void assert_at_safepoint_on_vm_thread() NOT_DEBUG_RETURN;\n+  inline static void assert_used_and_recalculate_used_equal(G1CollectedHeap* g1h) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -364,1 +364,1 @@\n-#if ASSERT\n+#ifdef ASSERT\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}