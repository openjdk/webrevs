{"files":[{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Window;\n+\n+\/**\n+ * @test\n+ * @bug 8346952\n+ * @summary Verifies no exception occurs when triggering updateCG() for an ownerless window.\n+ * @key headful\n+ *\/\n+\n+public final class BogusFocusableWindowState {\n+\n+    public static void main(String[] args) {\n+        Window frame = new Window(null) {\n+            @Override\n+            public boolean getFocusableWindowState() {\n+                removeNotify();\n+                return true;\n+            }\n+        };\n+        try {\n+            frame.pack();\n+            frame.setVisible(true);\n+        } finally {\n+            frame.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/BogusFocusableWindowState\/BogusFocusableWindowState.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.Frame;\n-\n-\/**\n- * @test\n- * @bug 8346952\n- * @summary dispose the frame while flooding the EDT with Notify events.\n- * @key headful\n- *\/\n-\n-public final class NotifyStressTest {\n-    static volatile Throwable failed;\n-\n-    public static void main(final String[] args) throws Exception {\n-        Thread.setDefaultUncaughtExceptionHandler((t, e) -> failed = e);\n-\n-        for (int i = 0; i < 100; i++) {\n-            test();\n-        }\n-\n-        \/\/ let the system recover.\n-        Thread.sleep(5000);\n-    }\n-\n-    private static void test() throws Exception {\n-        Frame f = new Frame();\n-        f.setSize(100, 100);\n-        f.setLocationRelativeTo(null);\n-        f.setVisible(true);\n-        f.dispose();\n-\n-        Thread thread1 = new Thread(() -> {\n-            for (int i = 0; i < 10; i++) {\n-                f.removeNotify();\n-                f.addNotify();\n-            }\n-        });\n-        thread1.start();\n-        thread1.join();\n-\n-        if (failed != null) {\n-            System.err.println(\"Test failed\");\n-            failed.printStackTrace();\n-            throw new RuntimeException(failed);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/Frame\/NotifyStressTest\/NotifyStressTest.java","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"}]}