{"files":[{"patch":"@@ -125,6 +125,14 @@\n-            \/\/ Switch on log2(len) = 64 - Long.numberOfLeadingZeros(len)\n-            switch (64 - Long.numberOfLeadingZeros(len)) {\n-                case 0 -> { \/* Do nothing *\/ }\n-                case 1 -> {\n-                    final byte v = SCOPED_MEMORY_ACCESS.getByte(src.sessionImpl(), src.unsafeGetBase(), src.unsafeGetOffset() + srcOffset);\n-                    SCOPED_MEMORY_ACCESS.putByte(dst.sessionImpl(), dst.unsafeGetBase(), dst.unsafeGetOffset() + dstOffset, v);\n+\n+            if( len > 15) {\n+                copy5AndUpwards(src, srcOffset, dst, dstOffset, len);\n+            } else {\n+                \/\/ Switch on log2(len) = 64 - Long.numberOfLeadingZeros(len)\n+                switch (64 - Long.numberOfLeadingZeros(len)) {\n+                    case 0 -> { \/* Do nothing *\/ }\n+                    case 1 -> {\n+                        final byte v = SCOPED_MEMORY_ACCESS.getByte(src.sessionImpl(), src.unsafeGetBase(), src.unsafeGetOffset() + srcOffset);\n+                        SCOPED_MEMORY_ACCESS.putByte(dst.sessionImpl(), dst.unsafeGetBase(), dst.unsafeGetOffset() + dstOffset, v);\n+                    }\n+                    case 2 -> copy2(src, srcOffset, dst, dstOffset, len);\n+                    case 3 -> copy3(src, srcOffset, dst, dstOffset, len);\n+                    case 4 -> copy4(src, srcOffset, dst, dstOffset, len);\n@@ -132,4 +140,0 @@\n-                case 2 -> copy2(src, srcOffset, dst, dstOffset, len);\n-                case 3 -> copy3(src, srcOffset, dst, dstOffset, len);\n-                case 4 -> copy4(src, srcOffset, dst, dstOffset, len);\n-                default -> copy5AndUpwards(src, srcOffset, dst, dstOffset, len);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SegmentBulkOperations.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}