{"files":[{"patch":"@@ -0,0 +1,53 @@\n+<!doctype html>\n+<!--\n+ Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+ This code is free software; you can redistribute it and\/or modify it\n+ under the terms of the GNU General Public License version 2 only, as\n+ published by the Free Software Foundation.  Oracle designates this\n+ particular file as subject to the \"Classpath\" exception as provided\n+ by Oracle in the LICENSE file that accompanied this code.\n+\n+ This code is distributed in the hope that it will be useful, but WITHOUT\n+ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ version 2 for more details (a copy is included in the LICENSE file that\n+ accompanied this code).\n+\n+ You should have received a copy of the GNU General Public License version\n+ 2 along with this work; if not, write to the Free Software Foundation,\n+ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ or visit www.oracle.com if you need additional information or have any\n+ questions.\n+-->\n+<html lang=\"en\">\n+<head>\n+    <title>Restricted methods<\/title>\n+<\/head>\n+<body>\n+<h1 id=\"restricted\">Restricted methods<\/h1>\n+<p>Various methods in the Java SE API allow Java code to interoperate with resources outside the Java runtime\n+    in such a way that the runtime cannot prove correct or safe use of the resources. These methods can,\n+    when used incorrectly, violate the integrity of the Java Virtual Machine, but are conditionally made available\n+    to users, as they provide essential functionality. They are known as <em>restricted methods<\/em>.<\/p>\n+<p>Given the potential danger of restricted methods, the Java runtime issues a warning on\n+    the standard error stream every time a restricted method is invoked. Such warnings can\n+    be disabled by granting access to restricted methods to selected modules. This can be\n+    done either via implementation-specific command line options or programmatically, e.g.\n+    by calling <a href=\"..\/..\/ModuleLayer.Controller.html#enableNativeAccess(java.lang.Module)\"><code>ModuleLayer.Controller.enableNativeAccess(java.lang.Module)<\/code><\/a>.<\/p>\n+<p>When a restricted method is invoked by <a href=\"..\/..\/..\/..\/specs\/jni\/index.html\">JNI code<\/a>,\n+    or from an <a href=\"..\/Linker.html#upcallStub(java.lang.invoke.MethodHandle,java.lang.foreign.FunctionDescriptor,java.lang.foreign.Arena,java.lang.foreign.Linker.Option...)\">upcall stub<\/a>\n+    and a Java caller can not be determined, it is as if the restricted method call occurred in an <em>unnamed module<\/em>.<\/p>\n+<p>In the reference implementation, access to restricted methods can be granted to\n+    specific modules using the command line option <code>--enable-native-access=M1,M2, ... Mn<\/code>,\n+    where <code>M1<\/code>, <code>M2<\/code>, <code>... Mn<\/code> are module names (for the unnamed module,\n+    the special value <code>ALL-UNNAMED<\/code> can be used).  Access to restricted methods\n+    from modules not listed by that option is deemed <em>illegal<\/em>. Clients can\n+    control how access to restricted methods is handled, using the command line\n+    option <code>--illegal-native-access<\/code>. If this option is not specified,\n+    illegal access to restricted methods will result in runtime warnings.<\/p>\n+<\/body>\n+<\/html>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/doc-files\/RestrictedMethods.html","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -131,30 +131,0 @@\n- * <h2 id=\"restricted\">Restricted methods<\/h2>\n- *\n- * Some methods in this package are considered <em>restricted<\/em>. Restricted methods\n- * are typically used to bind native foreign data and\/or functions to first-class\n- * Java API elements which can then be used directly by clients. For instance the\n- * restricted method {@link java.lang.foreign.MemorySegment#reinterpret(long)} can be\n- * used to create a fresh segment with the same address and temporal bounds, but with\n- * the provided size. This can be useful to resize memory segments obtained when\n- * interacting with native functions.\n- * <p>\n- * Binding foreign data and\/or functions is generally unsafe and, if done incorrectly,\n- * can result in VM crashes, or memory corruption when the bound Java API element\n- * is accessed. For instance, incorrectly resizing a native memory segment using\n- * {@link java.lang.foreign.MemorySegment#reinterpret(long)} can lead to a JVM crash, or,\n- * worse, lead to silent memory corruption when attempting to access the resized segment.\n- * For these reasons, it is crucial for code that calls a restricted method to never pass\n- * arguments that might cause incorrect binding of foreign data and\/or functions to\n- * a Java API.\n- * <p>\n- * Given the potential danger of restricted methods, the Java runtime issues a warning on\n- * the standard error stream every time a restricted method is invoked. Such warnings can\n- * be disabled by granting access to restricted methods to selected modules. This can be\n- * done either via implementation-specific command line options or programmatically, e.g.\n- * by calling {@link java.lang.ModuleLayer.Controller#enableNativeAccess(java.lang.Module)}.\n- * <p>\n- * For every class in this package, unless specified otherwise, any method arguments of\n- * reference type must not be {@code null}, and any null argument will elicit a\n- * {@code NullPointerException}. This fact is not individually documented for methods of\n- * this API.\n- *\n@@ -164,10 +134,0 @@\n- * @implNote\n- * In the reference implementation, access to restricted methods can be granted to\n- * specific modules using the command line option {@code --enable-native-access=M1,M2, ... Mn},\n- * where {@code M1}, {@code M2}, {@code ... Mn} are module names (for the unnamed module,\n- * the special value {@code ALL-UNNAMED} can be used). Access to restricted methods\n- * from modules not listed by that option is deemed <em>illegal<\/em>. Clients can\n- * control how access to restricted methods is handled, using the command line\n- * option {@code --illegal-native-access}. If this option is not specified,\n- * illegal access to restricted methods will result in runtime warnings.\n- *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2647,0 +2647,3 @@\n+            var restrictedSectionPath = replaceDocRootDir(contents.getContent(\"doclet.Restricted.url\").toString());\n+            var restrictedSectionLink = links.createLink(DocPath.create(restrictedSectionPath),\n+                                                   contents.getContent(\"doclet.Restricted.text\"));\n@@ -2649,1 +2652,1 @@\n-                    contents.getContent(leadingNoteKey, nameCode);\n+                    contents.getContent(leadingNoteKey, nameCode, restrictedSectionLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -427,1 +427,3 @@\n-doclet.RestrictedLeadingNote={0} is a restricted method of the Java platform.\n+doclet.Restricted.url={@docRoot}\/java.base\/java\/lang\/doc-files\/RestrictedMethods.html\n+doclet.Restricted.text=restricted method\n+doclet.RestrictedLeadingNote={0} is a {1} of the Java platform.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}