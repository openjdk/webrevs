{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.awt.geom.Rectangle2D;\n@@ -37,2 +36,0 @@\n-import java.awt.geom.Ellipse2D;\n-import java.awt.geom.Path2D;\n@@ -93,1 +90,1 @@\n-        JFrame frame = new JFrame(\"Normal Mapping Demo (Auto Vectorization)\");\n+        JFrame frame = new JFrame(\"Normal Mapping Demo (Auto-Vectorization)\");\n@@ -169,2 +166,2 @@\n-            dx += RANDOM.nextFloat() * 0.001 - 0.0005;;\n-            dy += RANDOM.nextFloat() * 0.001 - 0.0005;;\n+            dx += RANDOM.nextFloat() * 0.001 - 0.0005;\n+            dy += RANDOM.nextFloat() * 0.001 - 0.0005;\n@@ -244,1 +241,1 @@\n-            switch(nextNormalsId) {\n+            switch (nextNormalsId) {\n@@ -299,1 +296,1 @@\n-            public double call(double x, double y);\n+            double call(double x, double y);\n@@ -310,1 +307,1 @@\n-                return switch(name) {\n+                return switch (name) {\n@@ -313,2 +310,2 @@\n-                        double heart = Math.abs(Math.pow(x*x + y*y - 1, 3) - x*x * Math.pow(-y, 3));\n-                        double decay = Math.exp(-(x*x + y*y));\n+                        double heart = Math.abs(Math.pow(x * x + y * y - 1, 3) - x * x * Math.pow(-y, 3));\n+                        double decay = Math.exp(-(x * x + y * y));\n@@ -317,2 +314,2 @@\n-                    case \"hill\" ->    0.5 * Math.exp(-(x*x + y*y));\n-                    case \"ripple\" ->  0.01 * Math.sin(x*x + y*y);\n+                    case \"hill\" ->    0.5 * Math.exp(-(x * x + y * y));\n+                    case \"ripple\" ->  0.01 * Math.sin(x * x + y * y);\n@@ -409,2 +406,2 @@\n-            for (int i = 0; i < lights.length; i++) {\n-                lights[i].update();\n+            for (Light light : lights) {\n+                light.update();\n@@ -417,1 +414,1 @@\n-            \/\/ Add inn the contribution of each light\n+            \/\/ Add in the contribution of each light\n@@ -463,1 +460,1 @@\n-                \/\/ Now we we compute the color values that hopefully end up in the range\n+                \/\/ Now we compute the color values that hopefully end up in the range\n@@ -480,1 +477,1 @@\n-        \/\/ Essencially, it tries to solve the \"exposure\" problem:\n+        \/\/ Essentially, it tries to solve the \"exposure\" problem:\n","filename":"test\/hotspot\/jtreg\/compiler\/gallery\/NormalMapping.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main compiler.gallery.TestNormalMapping ir\n+ * @run driver compiler.gallery.TestNormalMapping ir\n","filename":"test\/hotspot\/jtreg\/compiler\/gallery\/TestNormalMapping.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}