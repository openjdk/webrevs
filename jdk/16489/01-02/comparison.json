{"files":[{"patch":"@@ -41,0 +41,1 @@\n+import java.util.Optional;\n@@ -74,1 +75,1 @@\n-            MethodTypeDesc.ofDescriptor(\"(Ljava\/lang\/Object;ILjava\/util\/function\/BiPredicate;[Ljava\/lang\/Class;)I\");\n+            MethodTypeDesc.ofDescriptor(\"(Ljava\/lang\/Object;ILjava\/util\/function\/BiPredicate;Ljava\/util\/List;)I\");\n@@ -385,1 +386,1 @@\n-            clb.withFlags(AccessFlag.FINAL, AccessFlag.SYNTHETIC)\n+            clb.withFlags(AccessFlag.FINAL, AccessFlag.SUPER, AccessFlag.SYNTHETIC)\n@@ -429,16 +430,22 @@\n-                        if (element.caseLabel() instanceof Class<?> classLabel &&\n-                            classLabel.describeConstable().isPresent()) {\n-                            cb.aload(0);\n-                            cb.instanceof_(classLabel.describeConstable().orElseThrow());\n-                            cb.ifeq(next);\n-                        } else if (element.caseLabel() instanceof Class<?> classLabel) {\n-                            cb.aload(3);\n-                            cb.constantInstruction(extraClassLabels.size());\n-                            cb.aaload();\n-                            cb.aload(0);\n-                            cb.invokevirtual(ConstantDescs.CD_Class,\n-                                             \"isInstance\",\n-                                             MethodTypeDesc.of(ConstantDescs.CD_boolean,\n-                                                               ConstantDescs.CD_Object));\n-                            cb.ifeq(next);\n-                            extraClassLabels.add(classLabel);\n+                        if (element.caseLabel() instanceof Class<?> classLabel) {\n+                            Optional<ClassDesc> classLabelConstableOpt = classLabel.describeConstable();\n+                            if (classLabelConstableOpt.isPresent()) {\n+                                cb.aload(0);\n+                                cb.instanceof_(classLabelConstableOpt.orElseThrow());\n+                                cb.ifeq(next);\n+                            } else {\n+                                cb.aload(3);\n+                                cb.constantInstruction(extraClassLabels.size());\n+                                cb.invokeinterface(ConstantDescs.CD_List,\n+                                                   \"get\",\n+                                                   MethodTypeDesc.of(ConstantDescs.CD_Object,\n+                                                                     ConstantDescs.CD_int));\n+                                cb.checkcast(ConstantDescs.CD_Class);\n+                                cb.aload(0);\n+                                cb.invokevirtual(ConstantDescs.CD_Class,\n+                                                 \"isInstance\",\n+                                                 MethodTypeDesc.of(ConstantDescs.CD_boolean,\n+                                                                   ConstantDescs.CD_Object));\n+                                cb.ifeq(next);\n+                                extraClassLabels.add(classLabel);\n+                            }\n@@ -516,3 +523,3 @@\n-                                                                              Class[].class));\n-            return MethodHandles.insertArguments(typeSwitch, 2, new ResolvedEnumLabels(caller, enumDescs.toArray(s -> new EnumDesc<?>[s])),\n-                                                                extraClassLabels.toArray(s -> new Class<?>[s]));\n+                                                                              List.class));\n+            return MethodHandles.insertArguments(typeSwitch, 2, new ResolvedEnumLabels(caller, enumDescs.toArray(EnumDesc[]::new)),\n+                                                                List.copyOf(extraClassLabels));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":28,"deletions":21,"binary":false,"changes":49,"status":"modified"}]}