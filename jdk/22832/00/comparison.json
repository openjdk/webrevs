{"files":[{"patch":"@@ -110,1 +110,2 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS -DENABLE_ARG_FILES, \\\n+    ENABLE_ARG_FILES := true, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/StaticLibs.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,2 +51,0 @@\n-# MAIN_MODULE  The module of the main class to launch if different from the\n-#     current module\n@@ -54,6 +52,4 @@\n-# JAVA_ARGS   Processed into a -DJAVA_ARGS and added to CFLAGS\n-# EXTRA_JAVA_ARGS Processed into a -DEXTRA_JAVA_ARGS and is prepended\n-#     before JAVA_ARGS to CFLAGS, primarily to allow long string literal\n-#     compile time defines exceeding Visual Studio 2013 limitations.\n-# CFLAGS   Additional CFLAGS\n-# CFLAGS_windows   Additional CFLAGS_windows\n+# JAVA_ARGS   Additional arguments to pass to Java when launching the main class\n+# EXPAND_CLASSPATH_WILDCARDS   Set to true to pass EXPAND_CLASSPATH_WILDCARDS\n+# ENABLE_ARG_FILES   Set to true to pass ENABLE_ARG_FILES\n+# WINDOWS_JAVAW   Set to true to pass JAVAW on Windows\n@@ -73,3 +69,1 @@\n-  ifeq ($$($1_MAIN_MODULE), )\n-    $1_MAIN_MODULE := $(MODULE)\n-  endif\n+  $1_MAIN_MODULE := $(MODULE)\n@@ -82,4 +76,12 @@\n-  ifneq ($$($1_EXTRA_JAVA_ARGS), )\n-    $1_EXTRA_JAVA_ARGS_STR := '{ $$(strip $$(foreach a, \\\n-      $$(addprefix -J, $$($1_EXTRA_JAVA_ARGS)), \"$$a\"$(COMMA) )) }'\n-    $1_CFLAGS += -DEXTRA_JAVA_ARGS=$$($1_EXTRA_JAVA_ARGS_STR)\n+  ifeq ($$($1_EXPAND_CLASSPATH_WILDCARDS), true)\n+    $1_CFLAGS += -DEXPAND_CLASSPATH_WILDCARDS\n+  endif\n+\n+  ifeq ($$($1_ENABLE_ARG_FILES), true)\n+    $1_CFLAGS += -DENABLE_ARG_FILES\n+  endif\n+\n+  ifeq ($(call isTargetOs, windows), true)\n+    ifeq ($$($1_WINDOWS_JAVAW), true)\n+      $1_CFLAGS += -DJAVAW\n+    endif\n@@ -146,1 +148,0 @@\n-      CFLAGS_windows := $$($1_CFLAGS_windows), \\\n@@ -156,7 +157,0 @@\n-      LIBS := $$($1_LIBS), \\\n-      LIBS_unix := $(LIBZ_LIBS), \\\n-      LIBS_linux := $(LIBDL) -lpthread, \\\n-      LIBS_macosx := \\\n-          -framework ApplicationServices \\\n-          -framework Cocoa \\\n-          -framework Security, \\\n","filename":"make\/common\/modules\/LauncherCommon.gmk","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS -DENABLE_ARG_FILES, \\\n+    ENABLE_ARG_FILES := true, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -53,1 +54,3 @@\n-      CFLAGS := -DJAVAW -DEXPAND_CLASSPATH_WILDCARDS -DENABLE_ARG_FILES, \\\n+      ENABLE_ARG_FILES := true, \\\n+      EXPAND_CLASSPATH_WILDCARDS := true, \\\n+      WINDOWS_JAVAW := true, \\\n","filename":"make\/modules\/java.base\/Launcher.gmk","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -44,1 +44,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.compiler\/Launcher.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.javadoc\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    CFLAGS_windows := -DJAVAW, \\\n+    WINDOWS_JAVAW := true, \\\n","filename":"make\/modules\/jdk.jconsole\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -43,1 +43,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -52,1 +52,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -61,1 +61,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.jdeps\/Launcher.gmk","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.jfr\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    CFLAGS := -DENABLE_ARG_FILES, \\\n+    ENABLE_ARG_FILES := true, \\\n@@ -44,1 +44,2 @@\n-    CFLAGS := -DENABLE_ARG_FILES -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    ENABLE_ARG_FILES := true, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -53,1 +54,2 @@\n-    CFLAGS := -DENABLE_ARG_FILES -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    ENABLE_ARG_FILES := true, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.jlink\/Launcher.gmk","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n","filename":"make\/modules\/jdk.jshell\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,5 +53,0 @@\n-#ifdef EXTRA_JAVA_ARGS\n-static const char* const_extra_jargs[] = EXTRA_JAVA_ARGS;\n-#else\n-static const char** const_extra_jargs = NULL;\n-#endif\n@@ -59,3 +54,0 @@\n-#ifdef EXTRA_JAVA_ARGS\n-#error \"EXTRA_JAVA_ARGS defined without JAVA_ARGS\"\n-#endif\n@@ -64,1 +56,0 @@\n-static const char** const_extra_jargs = NULL;\n","filename":"src\/java.base\/share\/native\/launcher\/defines.h","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,4 +47,0 @@\n-    int margc;\n-    char** margv;\n-    int jargc;\n-    char** jargv;\n@@ -59,4 +55,0 @@\n-    int margc;\n-    char** margv;\n-    int jargc;\n-    char** jargv;\n@@ -65,11 +57,0 @@\n-    {\n-        int i, main_jargc, extra_jargc;\n-        JLI_List list;\n-\n-        main_jargc = (sizeof(const_jargs) \/ sizeof(char *)) > 1\n-            ? sizeof(const_jargs) \/ sizeof(char *)\n-            : 0; \/\/ ignore the null terminator index\n-\n-        extra_jargc = (sizeof(const_extra_jargs) \/ sizeof(char *)) > 1\n-            ? sizeof(const_extra_jargs) \/ sizeof(char *)\n-            : 0; \/\/ ignore the null terminator index\n@@ -77,11 +58,4 @@\n-        if (main_jargc > 0 && extra_jargc > 0) { \/\/ combine extra java args\n-            jargc = main_jargc + extra_jargc;\n-            list = JLI_List_new(jargc + 1);\n-\n-            for (i = 0 ; i < extra_jargc; i++) {\n-                JLI_List_add(list, JLI_StringDup(const_extra_jargs[i]));\n-            }\n-\n-            for (i = 0 ; i < main_jargc ; i++) {\n-                JLI_List_add(list, JLI_StringDup(const_jargs[i]));\n-            }\n+    int margc;\n+    char** margv;\n+    int jargc;\n+    const char** jargv = const_jargs;\n@@ -89,11 +63,3 @@\n-            \/\/ terminate the list\n-            JLI_List_add(list, NULL);\n-            jargv = list->elements;\n-         } else if (extra_jargc > 0) { \/\/ should never happen\n-            fprintf(stderr, \"EXTRA_JAVA_ARGS defined without JAVA_ARGS\");\n-            abort();\n-         } else { \/\/ no extra args, business as usual\n-            jargc = main_jargc;\n-            jargv = (char **) const_jargs;\n-         }\n-    }\n+    jargc = (sizeof(const_jargs) \/ sizeof(char *)) > 1\n+        ? sizeof(const_jargs) \/ sizeof(char *)\n+        : 0; \/\/ ignore the null terminator index\n@@ -185,1 +151,1 @@\n-                   jargc, (const char**) jargv,\n+                   jargc, jargv,\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":8,"deletions":42,"binary":false,"changes":50,"status":"modified"}]}