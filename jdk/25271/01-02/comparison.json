{"files":[{"patch":"@@ -526,0 +526,4 @@\n+     * If {@link System##stdin.encoding stdin.encoding} differs from\n+     * {@link System##stdout.encoding stdout.encoding}, read operations use the\n+     * {@code Charset} designated by {@code stdin.encoding}, instead of the returned\n+     * {@code Charset}.\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,3 +24,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-\n@@ -31,0 +28,4 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import static jdk.test.lib.Utils.*;\n+\n@@ -39,1 +40,2 @@\n- *          the console.\n+ *          the console. \"expect\" command in Windows\/Cygwin does\n+ *          not work as expected. Ignoring tests on Windows.\n@@ -51,3 +53,2 @@\n-        if (!Files.exists(expect) || !Files.isExecutable(expect)) {\n-            Assumptions.abort(\"'\" + expect + \"' not found\");\n-        }\n+        Assumptions.assumeTrue(Files.exists(expect) && Files.isExecutable(expect),\n+            \"'\" + expect + \"' not found\");\n@@ -56,3 +57,0 @@\n-        var testSrc = System.getProperty(\"test.src\", \".\");\n-        var testClasses = System.getProperty(\"test.classes\", \".\");\n-        var jdkDir = System.getProperty(\"test.jdk\");\n@@ -62,2 +60,2 @@\n-            testSrc + \"\/stdinEncoding.exp\",\n-            jdkDir + \"\/bin\/java\",\n+            TEST_SRC + \"\/stdinEncoding.exp\",\n+            TEST_JDK + \"\/bin\/java\",\n@@ -65,1 +63,1 @@\n-            testClasses + \"\/modules\",\n+            TEST_CLASSES + \"\/modules\",\n","filename":"test\/jdk\/java\/io\/Console\/StdinEncodingTest.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}