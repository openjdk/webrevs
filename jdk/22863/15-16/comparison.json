{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -834,2 +834,1 @@\n-    Flag_is_commutative_vector_op    = 1 << 18,\n-    _last_flag                       = Flag_is_commutative_vector_op\n+    _last_flag                       = Flag_is_predicated_using_blend\n@@ -1072,2 +1071,0 @@\n-  bool is_commutative_vector_operation() const { return (_flags & Flag_is_commutative_vector_op) != 0; }\n-\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1081,0 +1081,2 @@\n+    case Op_UMinV:\n+    case Op_UMaxV:\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-  virtual uint hash() const { return VectorNode::hash() + _is_unsigned; }\n+  virtual uint hash() const { return Node::hash() + _is_unsigned; }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}