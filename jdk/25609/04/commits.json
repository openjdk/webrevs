[{"commit":{"message":"Briefly explain the requirement of the option"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"}],"sha":"1641d700657972eadccd2462b62f0fb9f67e0447"},{"commit":{"message":"Add the message for the assertions"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"}],"sha":"df9f920a4279b5be28ea5e4bf6977f907ae50b3c"},{"commit":{"message":"Use uint for the option and assert it >= 256"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"}],"sha":"9b2bae68e4b4a4d1d6fb9cd5c9f59a15a9d04b12"},{"commit":{"message":"Make it be a diagnostic flag"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"}],"sha":"db926eb06fe99a805bf2cc0607a2c1ab1a3d80c4"},{"commit":{"message":"Use the utility functions"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"}],"sha":"8aa96578ede3fee466786653495c5a0f6d017a34"},{"commit":{"message":"Introduce CryptoPmullForCRC32LowLimit and use pmull for crc32 on Ampere CPU"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"}],"sha":"b1f4e1f2cf133f21afb18caeabc2443ad97bb241"}]