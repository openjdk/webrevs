{"files":[{"patch":"@@ -16187,0 +16187,13 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b forward_exception_stub\" %}\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -8956,0 +8956,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b    forward_exception_stub\" %}\n+  ins_encode %{\n+    \/\/ OK to trash Rtemp, because Rtemp is used by stub\n+    __ jump(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type, Rtemp);\n+  %}\n+  ins_pipe(tail_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -14537,0 +14537,15 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"Jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ b64_patchable(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10620,0 +10620,16 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  ins_cost(BRANCH_COST);\n+\n+  format %{ \"j forward_exception_stub\\t#@ForwardException\" %}\n+\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -9502,0 +9502,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp() %{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+  format %{ \"Jmp    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ load_const_optimized(Z_R1_scratch, (address)StubRoutines::forward_exception_entry());\n+    __ z_br(Z_R1_scratch);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -13586,0 +13586,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"JMP    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -12595,0 +12595,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -213,9 +213,10 @@\n-  if (_matrule->find_type(\"Goto\",          index)) return true;\n-  if (_matrule->find_type(\"If\",            index)) return true;\n-  if (_matrule->find_type(\"CountedLoopEnd\",index)) return true;\n-  if (_matrule->find_type(\"Return\",        index)) return true;\n-  if (_matrule->find_type(\"Rethrow\",       index)) return true;\n-  if (_matrule->find_type(\"TailCall\",      index)) return true;\n-  if (_matrule->find_type(\"TailJump\",      index)) return true;\n-  if (_matrule->find_type(\"Halt\",          index)) return true;\n-  if (_matrule->find_type(\"Jump\",          index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"If\",               index)) return true;\n+  if (_matrule->find_type(\"CountedLoopEnd\",   index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n+  if (_matrule->find_type(\"Jump\",             index)) return true;\n@@ -231,6 +232,7 @@\n-  if (_matrule->find_type(\"Goto\",    index)) return true;\n-  if (_matrule->find_type(\"Return\",  index)) return true;\n-  if (_matrule->find_type(\"Rethrow\", index)) return true;\n-  if (_matrule->find_type(\"TailCall\",index)) return true;\n-  if (_matrule->find_type(\"TailJump\",index)) return true;\n-  if (_matrule->find_type(\"Halt\",    index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n@@ -379,0 +381,1 @@\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n@@ -897,0 +900,1 @@\n+      strcmp(_matrule->_opType,\"ForwardException\")==0 ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -155,0 +155,11 @@\n+\/\/------------------------------ForwardExceptionNode---------------------------\n+\/\/ Pop stack frame and jump to StubRoutines::forward_exception_entry()\n+class ForwardExceptionNode : public ReturnNode {\n+public:\n+  ForwardExceptionNode(Node* cntrl, Node* i_o, Node* memory, Node* frameptr, Node* retadr)\n+    : ReturnNode(TypeFunc::Parms, cntrl, i_o, memory, frameptr, retadr) {\n+  }\n+\n+  virtual int Opcode() const;\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -187,0 +187,1 @@\n+macro(ForwardException)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -242,0 +242,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/domgraph.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2034,0 +2034,1 @@\n+  case Op_ForwardException:\n@@ -2087,0 +2088,1 @@\n+  case Op_ForwardException:\n@@ -2132,0 +2134,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -259,6 +259,5 @@\n-  Node *to_exc = new TailCallNode(if_not_null,\n-                                  i_o(),\n-                                  exit_memory,\n-                                  frameptr(),\n-                                  returnadr(),\n-                                  exc_target, null());\n+  Node *to_exc = new ForwardExceptionNode(if_not_null,\n+                                          i_o(),\n+                                          exit_memory,\n+                                          frameptr(),\n+                                          returnadr());\n","filename":"src\/hotspot\/share\/opto\/generateOptoStub.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -807,0 +807,4 @@\n+  \/\/ Input RegMask array shared by all ForwardExceptions\n+  uint forw_exc_edge_cnt = TypeFunc::Parms;\n+  RegMask* forw_exc_rms  = init_input_masks( forw_exc_edge_cnt + soe_cnt, _return_addr_mask, c_frame_ptr_mask );\n+\n@@ -866,0 +870,1 @@\n+      case Op_ForwardException: exit->_in_rms = forw_exc_rms; break;\n@@ -885,0 +890,1 @@\n+      forw_exc_rms [ forw_exc_edge_cnt] = mreg2regmask[i];\n@@ -902,0 +908,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -914,0 +921,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -928,0 +936,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -940,0 +949,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -951,0 +961,1 @@\n+      forw_exc_edge_cnt++;\n@@ -954,1 +965,1 @@\n-      for( uint j=1; j < root->req(); j++ )\n+      for (uint j=1; j < root->req(); j++) {\n@@ -956,0 +967,1 @@\n+      }\n@@ -1073,0 +1085,1 @@\n+    case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}