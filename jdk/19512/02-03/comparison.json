{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-  class TestSupport;  \/\/ Unit test support\n","filename":"src\/hotspot\/share\/utilities\/defaultStream.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,4 +62,4 @@\n-  \/\/ Nominally processes the given format string and the supplied arguments\n-  \/\/ to produce a formatted string using the supplied buffer. The formatted\n-  \/\/ string (in the buffer) is returned, and the outgoing `result_len` set\n-  \/\/ to the size of the returned string.\n+  \/\/ Processes the given format string and the supplied arguments\n+  \/\/ to produce a formatted string in the supplied buffer. Returns\n+  \/\/ the formatted string (in the buffer). If the formatted string\n+  \/\/ would be longer than the buffer, it is truncated.\n@@ -68,5 +68,8 @@\n-  \/\/ or idiomatically it is \"%s\" to print a supplied argument string, then\n-  \/\/ the buffer is ignored, we return the string directly and set `result_len` to its\n-  \/\/ length. However, if `add_cr` is true then we have to copy the string\n-  \/\/ into the buffer and we risk truncation. The `result_len` is always set to the length\n-  \/\/ of the returned string.\n+  \/\/ or is exactly \"%s\" to print a supplied argument string, then\n+  \/\/ the buffer is ignored, and we return the string directly.\n+  \/\/ However, if `add_cr` is true then we have to copy the string\n+  \/\/ into the buffer, which risks truncation if the string is too long.\n+  \/\/\n+  \/\/ The `result_len` reference is always set to the length of the returned string.\n+  \/\/\n+  \/\/ If add_cr is true then the cr will always be placed in the buffer (buffer minimum size is 2).\n@@ -88,0 +91,2 @@\n+   class TestSupport;  \/\/ Unit test support\n+\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-class defaultStream::TestSupport : AllStatic {\n+class outputStream::TestSupport : AllStatic {\n@@ -147,1 +147,1 @@\n-    const char* res = tty->do_vsnprintf(buf, len, format, ap, add_cr, rlen);\n+    const char* res = do_vsnprintf(buf, len, format, ap, add_cr, rlen);\n@@ -161,1 +161,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, str);\n+      result = test(&buffer[0], buflen, false, result_len, str);\n@@ -171,1 +171,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, str);\n+      result = test(&buffer[0], buflen, false, result_len, str);\n@@ -181,1 +181,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, str);\n+      result = test(&buffer[0], buflen, false, result_len, str);\n@@ -192,1 +192,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, str);\n+      result = test(&buffer[0], buflen, true, result_len, str);\n@@ -204,1 +204,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, str);\n+      result = test(&buffer[0], buflen, true, result_len, str);\n@@ -217,1 +217,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, str);\n+      result = test(&buffer[0], buflen, true, result_len, str);\n@@ -233,1 +233,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \"%s\", str);\n@@ -243,1 +243,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \"%s\", str);\n@@ -253,1 +253,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \"%s\", str);\n@@ -264,1 +264,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \"%s\", str);\n@@ -276,1 +276,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \"%s\", str);\n@@ -289,1 +289,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \"%s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \"%s\", str);\n@@ -305,1 +305,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \" %s\", str);\n@@ -315,1 +315,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \" %s\", str);\n@@ -326,1 +326,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, false, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, false, result_len, \" %s\", str);\n@@ -336,1 +336,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \" %s\", str);\n@@ -348,1 +348,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \" %s\", str);\n@@ -361,1 +361,1 @@\n-      result = defaultStream::TestSupport::test(&buffer[0], buflen, true, result_len, \" %s\", str);\n+      result = test(&buffer[0], buflen, true, result_len, \" %s\", str);\n@@ -371,4 +371,4 @@\n-const size_t defaultStream::TestSupport::max_len;\n-char defaultStream::TestSupport::buffer[defaultStream::TestSupport::buflen];\n-size_t defaultStream::TestSupport::result_len = 0;\n-const char* defaultStream::TestSupport::result = nullptr;\n+const size_t outputStream::TestSupport::max_len;\n+char outputStream::TestSupport::buffer[outputStream::TestSupport::buflen];\n+size_t outputStream::TestSupport::result_len = 0;\n+const char* outputStream::TestSupport::result = nullptr;\n@@ -377,3 +377,3 @@\n-  defaultStream::TestSupport::test_constant_string();\n-  defaultStream::TestSupport::test_percent_s_string();\n-  defaultStream::TestSupport::test_general_string();\n+  outputStream::TestSupport::test_constant_string();\n+  outputStream::TestSupport::test_percent_s_string();\n+  outputStream::TestSupport::test_general_string();\n","filename":"test\/hotspot\/gtest\/utilities\/test_ostream.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}