{"files":[{"patch":"@@ -2453,2 +2453,2 @@\n-  \/\/ All the frames have been thawed so we know they don't hold any monitors\n-  assert(thread->held_monitor_count() == 0, \"Must be\");\n+  \/\/ All or part of the frames have been thawed so we know they don't hold any monitors except JNI monitors.\n+  assert(thread->held_monitor_count() == thread->jni_monitor_count(), \"Must be\");\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8185164 8320515\n+ * @bug 8185164 8320515 8334085\n@@ -56,1 +56,1 @@\n-        \/\/ The monitor iterator used by GetOwnedMonitorInfo used to\n+        \/\/ The monitor iterator used by GetOwnedMonitorInfo to\n@@ -89,0 +89,3 @@\n+                \/\/ Extra unmount helps to reproduce 8334085.\n+                \/\/ Two sub-sequential thaws are needed in that scenario.\n+                Thread.yield();\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorInfo\/GetOwnedMonitorInfoTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}