{"files":[{"patch":"@@ -2446,9 +2446,1 @@\n-  collection_set()->start_incremental_building();\n-\n-  assert(policy()->collector_state()->in_full_gc() ||\n-         young_regions_cardset()->occupied() == _num_young_rem_set_cards_at_start,\n-         \"Should not add cards to young gen remembered set during young GC, but \"\n-         \"changed from %zu at start to %zu now.\",\n-         _num_young_rem_set_cards_at_start, young_regions_cardset()->occupied());\n-  \/\/ Clear current young cset group. As cards will be refined, they will be added\n-  \/\/ to it.\n+  \/\/ Clear current young cset group to allow adding.\n@@ -2456,1 +2448,2 @@\n-  \/\/ by itself, but only mark cards.\n+  \/\/ by itself, but only marks cards.\n+  \/\/ The regions had their association to this group already removed earlier.\n@@ -2459,0 +2452,2 @@\n+  collection_set()->start_incremental_building();\n+\n@@ -2709,1 +2704,0 @@\n-  DEBUG_ONLY(_num_young_rem_set_cards_at_start = young_regions_cardset()->occupied();)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -791,2 +791,0 @@\n-  DEBUG_ONLY(size_t _num_young_rem_set_cards_at_start;)\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -309,1 +309,4 @@\n-  double predicted_base_time_ms = _policy->predict_base_time_ms(pending_cards, _g1h->young_regions_cardset()->occupied());\n+  size_t num_young_cards = _g1h->young_regions_cardset()->occupied();\n+  _policy->record_card_rs_length(num_young_cards);\n+\n+  double predicted_base_time_ms = _policy->predict_base_time_ms(pending_cards, num_young_cards);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  DEBUG_ONLY(_num_young_rem_set_cards_at_start(0) COMMA)\n+  _card_rs_length(0),\n@@ -933,1 +933,1 @@\n-    _analytics->report_card_rs_length((double)_g1h->young_regions_cardset()->occupied(), is_young_only_pause);\n+    _analytics->report_card_rs_length((double)_card_rs_length, is_young_only_pause);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-  DEBUG_ONLY(size_t _num_young_rem_set_cards_at_start;)\n+  size_t _card_rs_length;\n@@ -132,0 +132,4 @@\n+  void record_card_rs_length(size_t num_cards) {\n+    _card_rs_length = num_cards;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}