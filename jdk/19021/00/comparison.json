{"files":[{"patch":"@@ -37,0 +37,2 @@\n+import java.util.List;\n+\n@@ -41,2 +43,5 @@\n-    private static final String BLK_FNAME = \"\/dev\/sda1\";\n-    private static final Path BLK_PATH = Paths.get(BLK_FNAME);\n+    private static final List<String> BLK_FNAMES = List.of(\"\/dev\/sda1\", \"\/dev\/nvme0n1\") ;\n+\n+    public static Path getBlkPath(String blkFileName) {\n+        return Paths.get(blkFileName);\n+    }\n@@ -45,2 +50,12 @@\n-        try (FileChannel ch = FileChannel.open(BLK_PATH, READ);\n-             RandomAccessFile file = new RandomAccessFile(BLK_FNAME, \"r\")) {\n+        for (String blkFname: BLK_FNAMES) {\n+            Path blkPath = getBlkPath(blkFname);\n+            try (FileChannel ch = FileChannel.open(blkPath, READ);\n+                 RandomAccessFile file = new RandomAccessFile(blkFname, \"r\")) {\n+\n+                long size1 = ch.size();\n+                long size2 = file.length();\n+                if (size1 != size2) {\n+                    throw new RuntimeException(\"size differs when retrieved\" +\n+                            \" in different ways: \" + size1 + \" != \" + size2);\n+                }\n+                System.out.println(\"OK\");\n@@ -48,5 +63,6 @@\n-            long size1 = ch.size();\n-            long size2 = file.length();\n-            if (size1 != size2) {\n-                throw new RuntimeException(\"size differs when retrieved\" +\n-                        \" in different ways: \" + size1 + \" != \" + size2);\n+            } catch (NoSuchFileException nsfe) {\n+                System.err.println(\"File \" + blkFname + \" not found.\" +\n+                        \" Skipping test\");\n+            } catch (AccessDeniedException ade) {\n+                throw new RuntimeException(\"Access to \" + blkFname + \" is denied.\"\n+                        + \" Run test as root.\", ade);\n@@ -54,1 +70,0 @@\n-            System.out.println(\"OK\");\n@@ -56,6 +71,0 @@\n-        } catch (NoSuchFileException nsfe) {\n-            System.err.println(\"File \" + BLK_FNAME + \" not found.\" +\n-                    \" Skipping test\");\n-        } catch (AccessDeniedException ade) {\n-            throw new RuntimeException(\"Access to \" + BLK_FNAME + \" is denied.\"\n-                    + \" Run test as root.\", ade);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/BlockDeviceSize.java","additions":25,"deletions":16,"binary":false,"changes":41,"status":"modified"}]}