{"files":[{"patch":"@@ -28,0 +28,2 @@\n+import static compiler.lib.generators.Generators.G;\n+\n@@ -36,0 +38,3 @@\n+    private static final int CON0 = G.ints().next();\n+    private static final int CON1 = G.ints().next();\n+\n@@ -51,0 +56,1 @@\n+            \"testRandom\",\n@@ -180,0 +186,2 @@\n+\n+        Asserts.assertEQ((a << CON0) << CON1, testRandom(a));\n@@ -256,0 +264,6 @@\n+\n+    @Test\n+    @IR(counts = {IRNode.LSHIFT, \"<= 1\"})\n+    public int testRandom(int x) {\n+        return (x << CON0) << CON1;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/LShiftINodeIdealizationTests.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import static compiler.lib.generators.Generators.G;\n@@ -36,0 +37,3 @@\n+    private static final long CON0 = G.longs().next();\n+    private static final long CON1 = G.longs().next();\n+\n@@ -50,0 +54,1 @@\n+            \"testRandom\",\n@@ -157,0 +162,2 @@\n+\n+        Asserts.assertEQ((a << CON0) << CON1, testRandom(a));\n@@ -223,0 +230,6 @@\n+\n+    @Test\n+    @IR(counts = {IRNode.LSHIFT, \"<= 1\"})\n+    public long testRandom(long x) {\n+        return (x << CON0) << CON1;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/LShiftLNodeIdealizationTests.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}