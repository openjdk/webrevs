{"files":[{"patch":"@@ -981,1 +981,1 @@\n-static Node* collapseDoubleShiftLeft(PhaseGVN* phase, Node* outer_shift, int con0, BasicType bt) {\n+static Node* collapse_nested_shift_left(PhaseGVN* phase, Node* outer_shift, int con0, BasicType bt) {\n@@ -985,2 +985,1 @@\n-  int inner_shift_op = inner_shift->Opcode();\n-  if (inner_shift_op != Op_LShift(bt)) {\n+  if (inner_shift->Opcode() != Op_LShift(bt)) {\n@@ -1018,1 +1017,1 @@\n-\/\/ (X << con1) << con2 ==> X << (con1 + con2) (see collapseDoubleShiftLeft for details)\n+\/\/ (X << con1) << con2 ==> X << (con1 + con2) (see collapse_nested_shift_left for details)\n@@ -1131,1 +1130,1 @@\n-  Node* doubleShift = collapseDoubleShiftLeft(phase, this, con, T_INT);\n+  Node* doubleShift = collapse_nested_shift_left(phase, this, con, T_INT);\n@@ -1201,1 +1200,1 @@\n-\/\/ (X << con1) << con2 ==> X << (con1 + con2) (see collapseDoubleShiftLeft for details)\n+\/\/ (X << con1) << con2 ==> X << (con1 + con2) (see collapse_nested_shift_left for details)\n@@ -1314,1 +1313,1 @@\n-  Node* doubleShift = collapseDoubleShiftLeft(phase, this, con, T_LONG);\n+  Node* doubleShift = collapse_nested_shift_left(phase, this, con, T_LONG);\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+            \"testDoubleShift8\",\n+            \"testDoubleShift9\",\n@@ -149,0 +151,2 @@\n+        Asserts.assertEQ(a << 5, testDoubleShift1(a));\n+\n@@ -150,0 +154,2 @@\n+        Asserts.assertEQ(a << 6, testDoubleShift2(a));\n+\n@@ -151,0 +157,2 @@\n+        Asserts.assertEQ(0, testDoubleShift3(a));\n+\n@@ -152,0 +160,2 @@\n+        Asserts.assertEQ(0, testDoubleShift4(a));\n+\n@@ -153,0 +163,2 @@\n+        Asserts.assertEQ(0, testDoubleShift5(a));\n+\n@@ -154,0 +166,2 @@\n+        Asserts.assertEQ(a << 5, testDoubleShift6(a));\n+\n@@ -155,0 +169,7 @@\n+        Asserts.assertEQ(a << 5, testDoubleShift7(a));\n+\n+        Asserts.assertEQ(a << 33, testDoubleShift8(a));\n+        Asserts.assertEQ(a << 1, testDoubleShift8(a));\n+\n+        Asserts.assertEQ((a << 30) << 3, testDoubleShift9(a));\n+        Asserts.assertEQ(0, testDoubleShift9(a));\n@@ -212,0 +233,14 @@\n+    @Test\n+    @IR(counts = {IRNode.LSHIFT, \"1\"})\n+    \/\/ Checks x << 33 => x << 1\n+    public int testDoubleShift8(int x) {\n+        return x << 33;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.LSHIFT})\n+    \/\/ Checks (x << 30) << 3 => 0\n+    public int testDoubleShift9(int x) {\n+        return (x << 30) << 3;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/LShiftINodeIdealizationTests.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+            \"testDoubleShift8\",\n+            \"testDoubleShift9\",\n@@ -130,0 +132,2 @@\n+        Asserts.assertEQ(a << 5L, testDoubleShift1(a));\n+\n@@ -131,0 +135,2 @@\n+        Asserts.assertEQ(a << 6L, testDoubleShift2(a));\n+\n@@ -132,0 +138,2 @@\n+        Asserts.assertEQ(0L, testDoubleShift3(a));\n+\n@@ -133,0 +141,2 @@\n+        Asserts.assertEQ(0L, testDoubleShift4(a));\n+\n@@ -134,0 +144,2 @@\n+        Asserts.assertEQ(0L, testDoubleShift5(a));\n+\n@@ -135,0 +147,2 @@\n+        Asserts.assertEQ(a << 5L, testDoubleShift6(a));\n+\n@@ -136,0 +150,7 @@\n+        Asserts.assertEQ(a << 5L, testDoubleShift7(a));\n+\n+        Asserts.assertEQ(a << 65L, testDoubleShift8(a));\n+        Asserts.assertEQ(a << 1L, testDoubleShift8(a));\n+\n+        Asserts.assertEQ((a << 62L) << 3L, testDoubleShift9(a));\n+        Asserts.assertEQ(0L, testDoubleShift9(a));\n@@ -188,0 +209,14 @@\n+\n+    @Test\n+    @IR(counts = {IRNode.LSHIFT, \"1\"})\n+    \/\/ Checks x << 65 => x << 1\n+    public long testDoubleShift8(long x) {\n+        return x << 65L;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.LSHIFT})\n+    \/\/ Checks (x << 62) << 3 => 0\n+    public long testDoubleShift9(long x) {\n+        return (x << 62L) << 3L;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/LShiftLNodeIdealizationTests.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"}]}