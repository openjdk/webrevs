{"files":[{"patch":"@@ -973,1 +973,9 @@\n-\/\/ (X << con1) << con0 with con0 < nbits && con1 < nbits ==>\n+\/\/ Called with\n+\/\/    outer_shift = (_ << con0)\n+\/\/ We are looking for the pattern:\n+\/\/   outer_shift = ((X << con1) << con0)\n+\/\/   we denote inner_shift the nested expression (X << con1)\n+\/\/\n+\/\/ con0 and con1 are both in [0..nbits), as they are computed by maskShiftAmount.\n+\/\/\n+\/\/ There are 2 cases:\n@@ -976,5 +984,0 @@\n-\/\/\n-\/\/ outer_shift is, with the notation above, the (...) << con0\n-\/\/ con0 is the rhs of outer_shift (since it's already computed in the callers)\n-\/\/ con0 is assumed to be masked already (as computed by maskShiftAmount) and non-zero\n-\/\/ bt must be T_LONG or T_INT.\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}