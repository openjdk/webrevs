{"files":[{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4382876\n+ * @summary Tests if JSlider fires ChangeEvents when thumb is clicked and not moved\n+ * @key headful\n+ * @run main bug4186062\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeListener;\n+\n+public class bug4186062 {\n+    private static JFrame f;\n+    private static JSlider slider;\n+    private static volatile Point loc;\n+    private static volatile int labelNum;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"JSlider Click Value Test\");\n+                f.setSize(400, 200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+                JPanel panel = new JPanel();\n+                slider = new JSlider();\n+                final JLabel label = new JLabel(\"0\");\n+                labelNum = 0;\n+\n+                ChangeListener listener = e -> {\n+                    labelNum++;\n+                    label.setText(\"\" + labelNum);\n+                };\n+                slider.addChangeListener(listener);\n+\n+                panel.add(slider);\n+                panel.add(label);\n+                f.add(panel);\n+            });\n+\n+            Robot r = new Robot();\n+            r.setAutoDelay(100);\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = slider.getLocationOnScreen();\n+                loc.setLocation(loc.x + (slider.getWidth() \/ 2),\n+                        loc.y + (slider.getHeight() \/ 2));\n+            });\n+\n+            r.mouseMove(loc.x, loc.y);\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            if (labelNum > 0) {\n+                throw new RuntimeException(labelNum + \" ChangeEvents fired. \" +\n+                        \"Test failed\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSlider\/bug4186062.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4275631\n+ * @summary Tests if vertical JSlider is properly aligned in large container\n+ * @key headful\n+ * @run main bug4275631\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.Box;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4275631 {\n+    private static final int OFFSET = 1;\n+    private static JFrame f;\n+    private static JSlider slider1;\n+    private static JSlider slider2;\n+    private static volatile Point loc1;\n+    private static volatile Point loc2;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"JSlider Alignment Test\");\n+                f.setSize(400, 200);\n+                f.setLocationRelativeTo(null);\n+\n+                \/\/ Create two sliders, verify the alignment on the slider to be\n+                \/\/ used in the border layout\n+                slider1 = new JSlider(JSlider.VERTICAL, 0, 99, 50);\n+                slider1.setInverted(true);\n+                slider1.setMajorTickSpacing(10);\n+                slider1.setMinorTickSpacing(1);\n+                slider1.setPaintTicks(true);\n+                slider1.setPaintLabels(true);\n+                slider2 = new JSlider(JSlider.VERTICAL, 0, 99, 50);\n+                slider2.setInverted(true);\n+                slider2.setMajorTickSpacing(10);\n+                slider2.setMinorTickSpacing(1);\n+                slider2.setPaintTicks(true);\n+                slider2.setPaintLabels(true);\n+\n+                \/\/ Try to center the natural way, using a border layout in the \"Center\"\n+                JPanel borderPanel = new JPanel();\n+                borderPanel.setLayout(new BorderLayout());\n+                borderPanel.setBorder(BorderFactory.createTitledBorder(\"BorderLayout\"));\n+                borderPanel.add(slider1, BorderLayout.CENTER);\n+                borderPanel.setPreferredSize(new Dimension(200, 200));\n+\n+                \/\/ Try to center using GridBagLayout, with glue on left\n+                \/\/ and right to squeeze slider into place\n+                JPanel gridBagPanel = new JPanel(new GridBagLayout());\n+                gridBagPanel.setBorder(BorderFactory.createTitledBorder(\"GridBagLayout\"));\n+                GridBagConstraints c = new GridBagConstraints();\n+                c.gridx = 1;\n+                c.fill = GridBagConstraints.VERTICAL;\n+                c.weighty = 1.0;\n+                gridBagPanel.add(slider2, c);\n+                c.gridx = 0;\n+                c.fill = GridBagConstraints.BOTH;\n+                c.weighty = 0.0;\n+                gridBagPanel.add(Box.createHorizontalGlue(), c);\n+                c.gridx = 2;\n+                c.fill = GridBagConstraints.BOTH;\n+                gridBagPanel.add(Box.createHorizontalGlue(), c);\n+                gridBagPanel.setPreferredSize(new Dimension(200, 200));\n+\n+                f.add(borderPanel, BorderLayout.WEST);\n+                f.add(gridBagPanel, BorderLayout.EAST);\n+                f.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.setAutoDelay(100);\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc1 = slider1.getLocationOnScreen();\n+                loc1.setLocation(loc1.x + (slider1.getWidth() \/ 2),\n+                        loc1.y + (slider1.getHeight() \/ 2));\n+\n+                loc2 = slider2.getLocationOnScreen();\n+                loc2.setLocation(loc2.x + (slider2.getWidth() \/ 2),\n+                        loc2.y + (slider2.getHeight() \/ 2));\n+            });\n+\n+           if (loc1.y > loc2.y + OFFSET || loc1.y < loc2.y - OFFSET) {\n+               throw new RuntimeException(\"JSlider position is not aligned!\");\n+           }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSlider\/bug4275631.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4382876\n+ * @summary Tests how PgUp and PgDn keys work with JSlider\n+ * @key headful\n+ * @run main bug4382876\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.ComponentOrientation;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4382876 {\n+    private static Robot r;\n+    private static JFrame f;\n+    private static JSlider slider;\n+    private static boolean upFail;\n+    private static boolean downFail;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"JSlider PageUp\/Down Test\");\n+                f.setSize(300, 200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+                slider = new JSlider(-1000, -900, -1000);\n+                slider.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+                slider.putClientProperty(\"JSlider.isFilled\", Boolean.TRUE);\n+                f.add(slider, BorderLayout.CENTER);\n+            });\n+\n+            r = new Robot();\n+            r.setAutoDelay(100);\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            r.keyPress(KeyEvent.VK_PAGE_UP);\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (slider.getValue() < -1000) {\n+                    System.out.println(\"PAGE_UP VAL: \" + slider.getValue());\n+                    upFail = true;\n+                }\n+            });\n+            if (upFail) {\n+                writeFailImage();\n+                throw new RuntimeException(\"Slider value did NOT change with PAGE_UP\");\n+            }\n+            r.keyPress(KeyEvent.VK_PAGE_DOWN);\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (slider.getValue() > -1000) {\n+                    System.out.println(\"PAGE_DOWN VAL: \" + slider.getValue());\n+                    downFail = true;\n+                }\n+            });\n+            if (downFail) {\n+                writeFailImage();\n+                throw new RuntimeException(\"Slider value did NOT change with PAGE_DOWN\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void writeFailImage() throws IOException {\n+        GraphicsConfiguration ge = GraphicsEnvironment\n+                .getLocalGraphicsEnvironment().getDefaultScreenDevice()\n+                .getDefaultConfiguration();\n+        BufferedImage failImage = r.createScreenCapture(ge.getBounds());\n+        ImageIO.write(failImage, \"png\", new File(\"failImage.png\"));\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSlider\/bug4382876.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4991587\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests that disabled JButton text is positioned properly in Windows L&F\n+ * @modules java.desktop\/com.sun.java.swing.plaf.windows\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4991587\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.FlowLayout;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+\n+import javax.swing.AbstractButton;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.UIManager;\n+\n+import com.sun.java.swing.plaf.windows.WindowsButtonUI;\n+\n+public class bug4991587 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        There are two buttons: enabled (left) and disabled (right).\n+        Ensure that the disabled button text is painted entirely\n+        inside the blue bounding rectangle, just like the enabled\n+        button (use it as an example of how this should look like).\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4991587 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4991587::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame f = new JFrame(\"Disabled JButton Text Test\");\n+        f.setLayout(new FlowLayout());\n+        f.setSize(400, 100);\n+\n+        JButton button1 = new JButton(\"\\u0114 Enabled JButton\");\n+        button1.setUI(new MyButtonUI());\n+        f.add(button1);\n+\n+        JButton button2 = new JButton(\"\\u0114 Disabled JButton\");\n+        button2.setEnabled(false);\n+        button2.setUI(new MyButtonUI());\n+        f.add(button2);\n+\n+        return f;\n+    }\n+\n+    static class MyButtonUI extends WindowsButtonUI {\n+        protected void paintText(Graphics g, AbstractButton b,\n+                                 Rectangle textRect, String text) {\n+            g.setColor(Color.blue);\n+            g.drawRect(textRect.x,\n+                    textRect.y,\n+                    textRect.width + 1, \/\/ add 1 for the shadow, otherwise it\n+                                        \/\/ will be painted over the textRect\n+                    textRect.height);\n+            super.paintText(g, b, textRect, text);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/windows\/bug4991587.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}