{"files":[{"patch":"@@ -1583,2 +1583,0 @@\n-    Label case0, case1, case2, case3;\n-    Label* larr[] = {&case0, &case1, &case2, &case3};\n@@ -1587,0 +1585,1 @@\n+      Label skip_load;\n@@ -1588,1 +1587,1 @@\n-      jccb(Assembler::carryClear, *larr[i]);\n+      jccb(Assembler::carryClear, skip_load);\n@@ -1594,1 +1593,1 @@\n-      bind(*larr[i]);\n+      bind(skip_load);\n@@ -1599,3 +1598,0 @@\n-    Label case0, case1, case2, case3, case4, case5, case6, case7;\n-    Label* larr[] = {&case0, &case1, &case2, &case3,\n-                     &case4, &case5, &case6, &case7};\n@@ -1604,0 +1600,1 @@\n+      Label skip_load;\n@@ -1605,1 +1602,1 @@\n-      jccb(Assembler::carryClear, *larr[i]);\n+      jccb(Assembler::carryClear, skip_load);\n@@ -1611,1 +1608,1 @@\n-      bind(*larr[i]);\n+      bind(skip_load);\n@@ -1670,1 +1667,1 @@\n-                                        XMMRegister xtmp3, Register rtmp,\n+                                        XMMRegister temp_dst, Register rtmp,\n@@ -1673,1 +1670,0 @@\n-  assert(is_subword_type(elem_ty), \"\");\n@@ -1675,0 +1671,4 @@\n+  XMMRegister iota = xtmp1;\n+  XMMRegister two_vec = xtmp2;\n+\n+  assert(is_subword_type(elem_ty), \"\");\n@@ -1680,2 +1680,3 @@\n-  vpslld(xtmp2, xtmp2, 1, vlen_enc);\n-  load_iota_indices(xtmp1, vector_len * type2aelembytes(elem_ty), T_INT);\n+  vpslld(two_vec, xtmp2, 1, vlen_enc);\n+  load_iota_indices(iota, vector_len * type2aelembytes(elem_ty), T_INT);\n+\n@@ -1684,1 +1685,1 @@\n-      vgather8b_offset(elem_ty, xtmp3, base, idx_base, offset, rtmp, vlen_enc);\n+      vgather8b_offset(elem_ty, temp_dst, base, idx_base, offset, rtmp, vlen_enc);\n@@ -1686,1 +1687,1 @@\n-      LP64_ONLY(vgather8b_masked_offset(elem_ty, xtmp3, base, idx_base, offset, mask, mask_idx, rtmp, vlen_enc));\n+      LP64_ONLY(vgather8b_masked_offset(elem_ty, temp_dst, base, idx_base, offset, mask, mask_idx, rtmp, vlen_enc));\n@@ -1688,3 +1689,3 @@\n-    vpermd(xtmp3, xtmp1, xtmp3, vlen_enc == Assembler::AVX_512bit ? vlen_enc : Assembler::AVX_256bit);\n-    vpsubd(xtmp1, xtmp1, xtmp2, vlen_enc);\n-    vpor(dst, dst, xtmp3, vlen_enc);\n+    vpermd(temp_dst, iota, temp_dst, vlen_enc == Assembler::AVX_512bit ? vlen_enc : Assembler::AVX_256bit);\n+    vpsubd(iota, iota, two_vec, vlen_enc);\n+    vpor(dst, dst, temp_dst, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"}]}