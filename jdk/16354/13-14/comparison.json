{"files":[{"patch":"@@ -1646,5 +1646,5 @@\n- * Gather using hybrid algorithm which initially partially unrolls scalar loop\n- * to accumulates values from gather indices into a quad-word(64bit) slice, a\n- * slice may hold 8 bytes or 4 short values. This is followed by a vector\n- * permutation to place the slice into appropriate vector lanes\n- * location in destination vector. Following pseudo code describes the\n+ * Gather using hybrid algorithm, first partially unroll scalar loop\n+ * to accumulate values from gather indices into a quad-word(64bit) slice.\n+ * A slice may hold 8 bytes or 4 short values. This is followed by a vector\n+ * permutation to place the slice into appropriate vector lane\n+ * locations in destination vector. Following pseudo code describes the\n@@ -1663,1 +1663,1 @@\n- * to gathered quadword gets right shifted by two lane position.\n+ * to gathered quadword gets right shifted by two lane positions.\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1919,0 +1919,1 @@\n+         (size_in_bits < 64)                                      ||\n@@ -1932,1 +1933,4 @@\n-      if (!is_subword_type(bt) && size_in_bits == 64 ) {\n+      if (!is_subword_type(bt) && size_in_bits == 64) {\n+        return false;\n+      }\n+      if (is_subword_type(bt) && size_in_bits < 64) {\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3071,1 +3071,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n@@ -3828,1 +3828,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3072,1 +3072,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n@@ -3814,1 +3814,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3644,1 +3644,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n@@ -4845,1 +4845,1 @@\n-            vix = VectorIntrinsics.checkIndex(vix, a.length);\n+            VectorIntrinsics.checkIndex(vix, a.length);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}