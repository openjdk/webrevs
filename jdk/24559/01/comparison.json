{"files":[{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4749792\n+ * @requires (os.family == \"windows\")\n+ * @summary Split pane border is not painted properly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4749792\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSplitPane;\n+\n+public class bug4749792 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        If the right\/bottom edges of JSplitPane's border is missing then the\n+        test fails. If it is visible, then the test passes.\n+    \"\"\";\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"JSplitPane Border Test\");\n+        frame.setSize(450, 220);\n+        JPanel left = new JPanel();\n+        JPanel right = new JPanel();\n+        left.setPreferredSize(new Dimension(200, 200));\n+        right.setPreferredSize(new Dimension(200, 200));\n+        JSplitPane sp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, left, right);\n+        frame.add(sp);\n+\n+        JPanel south = new JPanel();\n+        south.setPreferredSize(new Dimension(20, 20));\n+        frame.add(south, BorderLayout.SOUTH);\n+\n+        JPanel east = new JPanel();\n+        east.setPreferredSize(new Dimension(20, 20));\n+        frame.add(east, BorderLayout.EAST);\n+\n+        return frame;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"bug4749792 Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug4749792::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/bug4749792.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4188825\n+ * @summary Tests if toolbars return to original location when closed\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4188825\n+ *\/\n+\n+import java.awt.BorderLayout;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JToolBar;\n+\n+public class bug4188825 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        Drag the toolbar out of frame and close it. If it returns to\n+        the original location, then the test succeeded, otherwise it failed.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4188825 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4188825::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"Toolbar Drag Test\");\n+        frame.setLayout(new BorderLayout());\n+        JToolBar tb = new JToolBar();\n+        tb.setOrientation(JToolBar.VERTICAL);\n+        tb.add(new JButton(\"a\"));\n+        tb.add(new JButton(\"b\"));\n+        tb.add(new JButton(\"c\"));\n+        frame.add(tb, BorderLayout.WEST);\n+        JButton l = new JButton(\"Get me!!!\");\n+        l.setSize(200, 200);\n+        frame.add(l);\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4188825.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4251592\n+ * @summary JToolBar should have ability to set custom layout.\n+ * @key headful\n+ * @run main bug4251592\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4251592 {\n+    private static final int OFFSET = 3;\n+    private static volatile Point loc;\n+    private static JFrame frame;\n+    private static JToolBar toolBar;\n+    private static GridLayout customLayout;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Toolbar Layout Save Test\");\n+                toolBar = new JToolBar();\n+                customLayout = new GridLayout();\n+                frame.setLayout(new BorderLayout());\n+                frame.add(toolBar, BorderLayout.NORTH);\n+\n+                toolBar.setLayout(customLayout);\n+                toolBar.add(new JButton(\"Button1\"));\n+                toolBar.add(new JButton(\"Button2\"));\n+                toolBar.add(new JButton(\"Button3\"));\n+                toolBar.setFloatable(true);\n+\n+                frame.setSize(200, 200);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> loc = toolBar.getLocationOnScreen());\n+\n+            robot.mouseMove(loc.x + OFFSET, loc.y + OFFSET);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseMove(loc.x + OFFSET, loc.y + 50);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            if (toolBar.getLayout() != customLayout) {\n+                throw new RuntimeException(\"Custom layout not saved...\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4251592.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5035668\n+ * @summary Test that metal ToolBar border correctly sizes the MetalBumps used\n+ *          for the grip\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug5035668\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.ComponentOrientation;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JToolBar;\n+import javax.swing.UIManager;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.border.EmptyBorder;\n+\n+public class bug5035668 {\n+    static final String INSTRUCTIONS = \"\"\"\n+        This test is for Metal LaF only.\n+\n+        All of them have an empty border around their own border.\n+        If you see that in any toolbar the grip (little dotted strip) overlaps\n+        the empty border press Fail. If you see that grips are completely\n+        inside empty borders press Pass.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Set metal l&f\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        PassFailJFrame.builder()\n+                .title(\"bug4251592 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug5035668::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"Metal JToolBar Border Overlap Test\");\n+        frame.setLayout(new BorderLayout());\n+        frame.setBackground(Color.white);\n+\n+        \/\/ Horizontal toolbar left-to-right\n+        final JToolBar toolBar = new JToolBar();\n+        toolBar.setBorder(new CompoundBorder(new EmptyBorder(10, 10, 10, 10),\n+                toolBar.getBorder()));\n+        toolBar.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        toolBar.add(new ToolBarButton(toolBar));\n+\n+        \/\/ Horizontal toolbar right-to-left\n+        JToolBar toolBar2 = new JToolBar();\n+        toolBar2.setBorder(new CompoundBorder(new EmptyBorder(10, 10, 10, 10),\n+                toolBar2.getBorder()));\n+        toolBar2.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        toolBar2.add(new ToolBarButton(toolBar2));\n+\n+        JPanel topPanel = new JPanel(new GridLayout(2, 0));\n+        topPanel.add(toolBar);\n+        topPanel.add(toolBar2);\n+        frame.add(topPanel, BorderLayout.NORTH);\n+\n+        JToolBar toolBar3 = new JToolBar();\n+        toolBar3.setBorder(new CompoundBorder(new EmptyBorder(10, 10, 10, 10),\n+                toolBar3.getBorder()));\n+        toolBar3.setOrientation(JToolBar.VERTICAL);\n+        toolBar3.add(new ToolBarButton(toolBar3));\n+        frame.add(toolBar3, BorderLayout.EAST);\n+\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+\n+    static class ToolBarButton extends JButton {\n+        final JToolBar toolBar;\n+\n+        public ToolBarButton(JToolBar p_toolBar) {\n+            super(\"Change toolbar's orientation\");\n+            this.toolBar = p_toolBar;\n+            addActionListener(e -> toolBar.setOrientation(1 - toolBar.getOrientation()));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug5035668.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"}]}