{"files":[{"patch":"@@ -142,1 +142,1 @@\n-  if (j > 0) {\n+  if (j >= 0) {\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary Test container info for cgroup v2\n+ * @requires docker.support\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build CheckContainerized jdk.test.whitebox.WhiteBox PrintContainerInfo\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar whitebox.jar jdk.test.whitebox.WhiteBox\n+ * @run driver TestContainerInfo\n+ *\/\n+import jtreg.SkippedException;\n+import jdk.test.lib.containers.docker.Common;\n+import jdk.test.lib.containers.docker.DockerTestUtils;\n+import jdk.test.lib.containers.docker.DockerRunOptions;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\n+public class TestContainerInfo {\n+    private static final String imageName = Common.imageName(\"container-info\");\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!DockerTestUtils.canTestDocker()) {\n+            return;\n+        }\n+\n+        Common.prepareWhiteBox();\n+        DockerTestUtils.buildJdkContainerImage(imageName);\n+\n+        try {\n+            testPrintContainerInfoWithoutSwap();\n+        } finally {\n+            DockerTestUtils.removeDockerImage(imageName);\n+        }\n+    }\n+\n+    private static void testPrintContainerInfoWithoutSwap() throws Exception {\n+        Common.logNewTestCase(\"Test print_container_info() - without swap\");\n+\n+        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\")\n+                      .addDockerOpts(\"--memory=500m\")\n+                      .addDockerOpts(\"--memory-swap=500m\"); \/\/ no swap\n+        Common.addWhiteBoxOpts(opts);\n+\n+        OutputAnalyzer out = Common.run(opts);\n+        checkContainerInfo(out);\n+    }\n+\n+    private static void shouldMatchWithValue(OutputAnalyzer output, String match, String value) {\n+        output.shouldContain(match);\n+        String str = output.getOutput();\n+        for (String s : str.split(System.lineSeparator())) {\n+            if (s.contains(match)) {\n+                if (!s.contains(value)) {\n+                    throw new RuntimeException(\"memory_swap_current_in_bytes NOT \" + value + \"! Line was : \" + s);\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void checkContainerInfo(OutputAnalyzer out) throws Exception {\n+        String str = out.getOutput();\n+        if (str.contains(\"cgroupv2\")) {\n+            shouldMatchWithValue(\"memory_swap_max_limit_in_bytes\", \"0\");\n+            shouldMatchWithValue(\"memory_swap_current_in_bytes\", \"0\");\n+        } else {\n+            throw new SkippedException(\"This test is cgroups v2 specific, skipped on cgroups v1\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestContainerInfo.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}