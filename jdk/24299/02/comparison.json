{"files":[{"patch":"@@ -140,0 +140,3 @@\n+\/\/ The VM info string should be a constant, but its value cannot be finalized until after VM arguments\n+\/\/ have been fully processed. And we want to avoid dynamic memory allocation which will cause ASAN\n+\/\/ report error, so we enumerate all the cases by static const string value.\n@@ -141,1 +144,0 @@\n-  const char* mode;\n@@ -144,2 +146,5 @@\n-      mode = \"interpreted mode\";\n-      break;\n+      if (is_vm_statically_linked()) {\n+        return CDSConfig::is_using_archive() ? \"interpreted mode, static, sharing\" : \"interpreted mode, static\";\n+      } else {\n+        return CDSConfig::is_using_archive() ? \"interpreted mode, sharing\" : \"interpreted mode\";\n+      }\n@@ -147,2 +152,6 @@\n-      if (CompilationModeFlag::quick_only()) {\n-        mode = \"mixed mode, emulated-client\";\n+      if (is_vm_statically_linked()) {\n+        if (CompilationModeFlag::quick_only()) {\n+          return CDSConfig::is_using_archive() ? \"mixed mode, emulated-client, static, sharing\" : \"mixed mode, emulated-client, static\";\n+        } else {\n+          return CDSConfig::is_using_archive() ? \"mixed mode, static, sharing\" : \"mixed mode, static\";\n+         }\n@@ -150,1 +159,5 @@\n-        mode = \"mixed mode\";\n+        if (CompilationModeFlag::quick_only()) {\n+          return CDSConfig::is_using_archive() ? \"mixed mode, emulated-client, sharing\" : \"mixed mode, emulated-client\";\n+        } else {\n+          return CDSConfig::is_using_archive() ? \"mixed mode, sharing\" : \"mixed mode\";\n+        }\n@@ -152,1 +165,0 @@\n-      break;\n@@ -154,2 +166,5 @@\n-      if (CompilationModeFlag::quick_only()) {\n-        mode = \"compiled mode, emulated-client\";\n+      if (is_vm_statically_linked()) {\n+        if (CompilationModeFlag::quick_only()) {\n+          return CDSConfig::is_using_archive() ? \"compiled mode, emulated-client, static, sharing\" : \"compiled mode, emulated-client, static\";\n+        }\n+        return CDSConfig::is_using_archive() ? \"compiled mode, static, sharing\" : \"compiled mode, static\";\n@@ -157,1 +172,4 @@\n-        mode = \"compiled mode\";\n+        if (CompilationModeFlag::quick_only()) {\n+          return CDSConfig::is_using_archive() ? \"compiled mode, emulated-client, sharing\" : \"compiled mode, emulated-client\";\n+        }\n+        return CDSConfig::is_using_archive() ? \"compiled mode, sharing\" : \"compiled mode\";\n@@ -159,3 +177,0 @@\n-      break;\n-    default:\n-      ShouldNotReachHere();\n@@ -163,13 +178,2 @@\n-\n-  const char* static_info = \", static\";\n-  const char* sharing_info = \", sharing\";\n-  size_t len = strlen(mode) +\n-               (is_vm_statically_linked() ? strlen(static_info) : 0) +\n-               (CDSConfig::is_using_archive() ? strlen(sharing_info) : 0) +\n-               1;\n-  char* vm_info = NEW_C_HEAP_ARRAY(char, len, mtInternal);\n-  \/\/ jio_snprintf places null character in the last character.\n-  jio_snprintf(vm_info, len, \"%s%s%s\", mode,\n-               is_vm_statically_linked() ? static_info : \"\",\n-               CDSConfig::is_using_archive() ? sharing_info : \"\");\n-  return vm_info;\n+  ShouldNotReachHere();\n+  return \"\";\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":30,"deletions":26,"binary":false,"changes":56,"status":"modified"}]}