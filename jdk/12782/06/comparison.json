{"files":[{"patch":"@@ -1390,0 +1390,12 @@\n+instanceOop InstanceKlass::allocate_instance(oop java_class, TRAPS) {\n+  Klass* k = java_lang_Class::as_Klass(java_class);\n+  if (k == nullptr) {\n+    ResourceMark rm(THREAD);\n+    THROW_(vmSymbols::java_lang_InstantiationException(), nullptr);\n+  }\n+  InstanceKlass* ik = cast(k);\n+  ik->check_valid_for_instantiation(false, CHECK_NULL);\n+  ik->initialize(CHECK_NULL);\n+  return ik->allocate_instance(THREAD);\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,3 +30,1 @@\n-#include \"classfile\/javaClasses.hpp\"\n-#include \"classfile\/vmSymbols.hpp\"\n-#include \"memory\/resourceArea.hpp\"\n+#include \"memory\/memRegion.hpp\"\n@@ -36,1 +34,0 @@\n-#include \"utilities\/debug.hpp\"\n@@ -39,1 +36,0 @@\n-#include \"utilities\/macros.hpp\"\n@@ -188,12 +184,0 @@\n-inline instanceOop InstanceKlass::allocate_instance(oop java_class, TRAPS) {\n-  Klass* k = java_lang_Class::as_Klass(java_class);\n-  if (k == nullptr) {\n-    ResourceMark rm(THREAD);\n-    THROW_(vmSymbols::java_lang_InstantiationException(), nullptr);\n-  }\n-  InstanceKlass* ik = cast(k);\n-  ik->check_valid_for_instantiation(false, CHECK_NULL);\n-  ik->initialize(CHECK_NULL);\n-  return ik->allocate_instance(THREAD);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"classfile\/vmSymbols.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}