{"files":[{"patch":"@@ -35,0 +35,1 @@\n+#include \"utilities\/devirtualizer.inline.hpp\"\n","filename":"src\/hotspot\/share\/memory\/iterator.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1390,0 +1390,6 @@\n+instanceOop InstanceKlass::allocate_instance(InstanceKlass* ik, TRAPS) {\n+  ik->check_valid_for_instantiation(false, CHECK_NULL);\n+  ik->initialize(CHECK_NULL);\n+  return ik->allocate_instance(THREAD);\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -835,1 +835,1 @@\n-  static instanceOop allocate_instance(oop cls, TRAPS);\n+  static instanceOop allocate_instance(InstanceKlass* cls, TRAPS);\n@@ -846,1 +846,1 @@\n-  virtual void check_valid_for_instantiation(bool throwError, TRAPS);\n+  void check_valid_for_instantiation(bool throwError, TRAPS);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,9 +28,0 @@\n-#include \"oops\/instanceKlass.hpp\"\n-\n-#include \"classfile\/javaClasses.hpp\"\n-#include \"classfile\/vmSymbols.hpp\"\n-#include \"memory\/resourceArea.hpp\"\n-#include \"oops\/klass.inline.hpp\"\n-#include \"oops\/oop.inline.hpp\"\n-#include \"runtime\/atomic.hpp\"\n-#include \"utilities\/debug.hpp\"\n@@ -38,2 +29,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n-#include \"utilities\/macros.hpp\"\n@@ -188,12 +177,0 @@\n-inline instanceOop InstanceKlass::allocate_instance(oop java_class, TRAPS) {\n-  Klass* k = java_lang_Class::as_Klass(java_class);\n-  if (k == nullptr) {\n-    ResourceMark rm(THREAD);\n-    THROW_(vmSymbols::java_lang_InstantiationException(), nullptr);\n-  }\n-  InstanceKlass* ik = cast(k);\n-  ik->check_valid_for_instantiation(false, CHECK_NULL);\n-  ik->initialize(CHECK_NULL);\n-  return ik->allocate_instance(THREAD);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"oops\/klass.inline.hpp\"\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -966,1 +966,3 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(clazz), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(\n+                    InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz))),\n+                    CHECK_NULL);\n@@ -980,1 +982,3 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(clazz), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(\n+                    InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz))),\n+                    CHECK_NULL);\n@@ -998,1 +1002,3 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(clazz), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(\n+                    InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz))),\n+                    CHECK_NULL);\n@@ -1016,1 +1022,3 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(clazz), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(\n+                    InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz))),\n+                    CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/vmSymbols.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -334,1 +334,3 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(cls), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(\n+                    InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls))),\n+                    CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}