{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,2 +145,1 @@\n-  assert(is_aligned(length, ARENA_AMALLOC_ALIGNMENT), \"chunk payload length misaligned: \"\n-         SIZE_FORMAT \".\", length);\n+  assert(is_aligned(length, ARENA_AMALLOC_ALIGNMENT), \"chunk payload length misaligned: %zu.\", length);\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,2 +151,2 @@\n-    log_trace(gc, metaspace)(\"Increase capacity to GC from \" SIZE_FORMAT \" to \" SIZE_FORMAT, before, after);\n-    UL2(info, \"GC threshold increased: \" SIZE_FORMAT \"->\" SIZE_FORMAT \".\", before, after);\n+    log_trace(gc, metaspace)(\"Increase capacity to GC from %zu to %zu\", before, after);\n+    UL2(info, \"GC threshold increased: %zu->%zu.\", before, after);\n","filename":"src\/hotspot\/share\/memory\/classLoaderMetaspace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-      \" tag=\" PTR_FORMAT \" user_size=\" SIZE_FORMAT \" user_data=\" PTR_FORMAT,\n+      \" tag=\" PTR_FORMAT \" user_size=%zu user_data=\" PTR_FORMAT,\n","filename":"src\/hotspot\/share\/memory\/guardedMemory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-                                   \"req_addr: \" PTR_FORMAT \" bytes: \" SIZE_FORMAT,\n+                                   \"req_addr: \" PTR_FORMAT \" bytes: %zu\",\n@@ -92,1 +92,1 @@\n-           \"Requested address \" PTR_FORMAT \" must be aligned to \" SIZE_FORMAT,\n+           \"Requested address \" PTR_FORMAT \" must be aligned to %zu\",\n@@ -134,2 +134,1 @@\n-  log_trace(pagesize)(\"Attempt special mapping: size: \" SIZE_FORMAT \"%s, \"\n-                      \"alignment: \" SIZE_FORMAT \"%s\",\n+  log_trace(pagesize)(\"Attempt special mapping: size: %zu%s, alignment: %zu%s\",\n@@ -144,1 +143,1 @@\n-           \"base: \" PTR_FORMAT \" alignment: \" SIZE_FORMAT_X,\n+           \"base: \" PTR_FORMAT \" alignment: 0x%zx\",\n@@ -258,1 +257,1 @@\n-           \"Requested address \" PTR_FORMAT \" must be aligned to \" SIZE_FORMAT,\n+           \"Requested address \" PTR_FORMAT \" must be aligned to %zu\",\n@@ -404,1 +403,1 @@\n-                             \" heap of size \" SIZE_FORMAT_X,\n+                             \" heap of size 0x%zx\",\n@@ -642,1 +641,1 @@\n-      log_trace(gc, heap, coops)(\"Trying to allocate at address null heap of size \" SIZE_FORMAT_X, size + noaccess_prefix);\n+      log_trace(gc, heap, coops)(\"Trying to allocate at address null heap of size 0x%zx\", size + noaccess_prefix);\n","filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,2 +221,2 @@\n-                \"committed \" SIZE_FORMAT \"K, \"\n-                \"reserved \"  SIZE_FORMAT \"K\",\n+                \"committed %zuK, \"\n+                \"reserved %zuK\",\n@@ -230,2 +230,2 @@\n-                  \"committed \" SIZE_FORMAT \"K, \"\n-                  \"reserved \"  SIZE_FORMAT \"K\",\n+                  \"committed %zuK, \"\n+                  \"reserved %zuK\",\n@@ -389,1 +389,1 @@\n-      log_trace(gc, metaspace, freelist)(\"Cannot expand %s metaspace by \" SIZE_FORMAT \" words (CompressedClassSpaceSize = \" SIZE_FORMAT \" words)\",\n+      log_trace(gc, metaspace, freelist)(\"Cannot expand %s metaspace by %zu words (CompressedClassSpaceSize = %zu words)\",\n@@ -398,1 +398,1 @@\n-    log_trace(gc, metaspace, freelist)(\"Cannot expand %s metaspace by \" SIZE_FORMAT \" words (MaxMetaspaceSize = \" SIZE_FORMAT \" words)\",\n+    log_trace(gc, metaspace, freelist)(\"Cannot expand %s metaspace by %zu words (MaxMetaspaceSize = %zu words)\",\n@@ -416,2 +416,2 @@\n-  log_trace(gc, metaspace, freelist)(\"allowed expansion words: \" SIZE_FORMAT\n-            \" (left_until_max: \" SIZE_FORMAT \", left_until_GC: \" SIZE_FORMAT \".\",\n+  log_trace(gc, metaspace, freelist)(\"allowed expansion words: %zu\"\n+            \" (left_until_max: %zu, left_until_GC: %zu.\",\n@@ -481,1 +481,1 @@\n-         SIZE_FORMAT \" >= \" SIZE_FORMAT,\n+         \"%zu >= %zu\",\n@@ -515,1 +515,1 @@\n-             \"invalid shrink size \" SIZE_FORMAT \" not <= \" SIZE_FORMAT,\n+             \"invalid shrink size %zu not <= %zu\",\n@@ -557,1 +557,1 @@\n-    st->print(\"Compressed class space mapped at: \" PTR_FORMAT \"-\" PTR_FORMAT \", reserved size: \" SIZE_FORMAT,\n+    st->print(\"Compressed class space mapped at: \" PTR_FORMAT \"-\" PTR_FORMAT \", reserved size: %zu\",\n@@ -566,1 +566,1 @@\n-         SIZE_FORMAT \" != \" SIZE_FORMAT, rs.size(), CompressedClassSpaceSize);\n+         \"%zu != %zu\", rs.size(), CompressedClassSpaceSize);\n@@ -569,1 +569,1 @@\n-  assert(rs.size() == CompressedClassSpaceSize, SIZE_FORMAT \" != \" SIZE_FORMAT,\n+  assert(rs.size() == CompressedClassSpaceSize, SIZE_FORMAT \" != %zu\",\n@@ -695,1 +695,1 @@\n-      log_info(metaspace)(\"Setting CompressedClassSpaceSize to \" SIZE_FORMAT \".\",\n+      log_info(metaspace)(\"Setting CompressedClassSpaceSize to %zu.\",\n@@ -764,1 +764,1 @@\n-                    \"(must be aligned to \" SIZE_FORMAT_X \").\",\n+                    \"(must be aligned to 0x%zx).\",\n@@ -796,1 +796,1 @@\n-          err_msg(\"Could not allocate compressed class space: \" SIZE_FORMAT \" bytes\",\n+          err_msg(\"Could not allocate compressed class space: %zu bytes\",\n@@ -862,1 +862,1 @@\n-         \"allocation size too large (\" SIZE_FORMAT \")\", word_size);\n+         \"allocation size too large (%zu)\", word_size);\n@@ -938,1 +938,1 @@\n-      log.info(\"Metaspace (%s) allocation failed for size \" SIZE_FORMAT,\n+      log.info(\"Metaspace (%s) allocation failed for size %zu\",\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-#define BLOCK_FORMAT              \"Block @\" PTR_FORMAT \": size: \" SIZE_FORMAT \", next: \" PTR_FORMAT\n+#define BLOCK_FORMAT              \"Block @\" PTR_FORMAT \": size: %zu, next: \" PTR_FORMAT\n@@ -164,1 +164,1 @@\n-           word_size <= MaxWordSize, \"bad block size \" SIZE_FORMAT \".\", word_size);\n+           word_size <= MaxWordSize, \"bad block size %zu.\", word_size);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/binList.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-  \", size \" SIZE_FORMAT\n+  \", size %zu\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -351,1 +351,1 @@\n-    assert(word_size >= MinWordSize, \"invalid block size \" SIZE_FORMAT, word_size);\n+    assert(word_size >= MinWordSize, \"invalid block size %zu\", word_size);\n@@ -364,1 +364,1 @@\n-    assert(word_size >= MinWordSize, \"invalid block size \" SIZE_FORMAT, word_size);\n+    assert(word_size >= MinWordSize, \"invalid block size %zu\", word_size);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-     \", max_level: \" CHKLVL_FORMAT \", min committed size: \" SIZE_FORMAT \".\",\n+     \", max_level: \" CHKLVL_FORMAT \", min committed size: %zu.\",\n@@ -215,1 +215,1 @@\n-        UL2(info, \"failed to commit \" SIZE_FORMAT \" words on chunk \" METACHUNK_FORMAT \".\",\n+        UL2(info, \"failed to commit %zu words on chunk \" METACHUNK_FORMAT \".\",\n@@ -437,1 +437,1 @@\n-  st->print_cr(\"cm %s: %d chunks, total word size: \" SIZE_FORMAT \".\", _name,\n+  st->print_cr(\"cm %s: %d chunks, total word size: %zu.\", _name,\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-         SIZE_FORMAT \" - too large allocation size.\", word_size * BytesPerWord);\n+         \"%zu - too large allocation size.\", word_size * BytesPerWord);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunklevel.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-         \"Pointer \" PTR_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n+         \"Pointer \" PTR_FORMAT \" should be aligned to commit granule size %zu.\",\n@@ -72,1 +72,1 @@\n-         \"Range \" SIZE_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n+         \"Range %zu should be aligned to commit granule size %zu.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/commitMask.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -158,1 +158,1 @@\n-  st->print_cr(\"total chunks: %d, total word size: \" SIZE_FORMAT \".\",\n+  st->print_cr(\"total chunks: %d, total word size: %zu.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-#define METABLOCKFORMAT                 \"block (@\" PTR_FORMAT \" word size \" SIZE_FORMAT \")\"\n+#define METABLOCKFORMAT                 \"block (@\" PTR_FORMAT \" word size %zu)\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metablock.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-                         SIZE_FORMAT \" words.\", METACHUNK_FORMAT_ARGS(this), commit_to);\n+                         \"%zu words.\", METACHUNK_FORMAT_ARGS(this), commit_to);\n@@ -274,1 +274,1 @@\n-         \"mismatch: committed: \" SIZE_FORMAT \", used: \" SIZE_FORMAT \".\",\n+         \"mismatch: committed: %zu, used: %zu.\",\n@@ -277,1 +277,1 @@\n-         \"mismatch: word_size: \" SIZE_FORMAT \", committed: \" SIZE_FORMAT \".\",\n+         \"mismatch: word_size: %zu, committed: %zu.\",\n@@ -307,2 +307,2 @@\n-            \"level \" CHKLVL_FORMAT \" (\" SIZE_FORMAT \" words), \"\n-            \"used \" SIZE_FORMAT \" words, committed \" SIZE_FORMAT \" words.\",\n+            \"level \" CHKLVL_FORMAT \" (%zu words), \"\n+            \"used %zu words, committed %zu words.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunk.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,1 +365,1 @@\n-#define METACHUNK_FULL_FORMAT                \"@\" PTR_FORMAT \", %c, base \" PTR_FORMAT \", level \" CHKLVL_FORMAT \" (\" SIZE_FORMAT \"), used: \" SIZE_FORMAT \", committed: \" SIZE_FORMAT \", committed-free: \" SIZE_FORMAT\n+#define METACHUNK_FULL_FORMAT                \"@\" PTR_FORMAT \", %c, base \" PTR_FORMAT \", level \" CHKLVL_FORMAT \" (%zu), used: %zu, committed: %zu, committed-free: %zu\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunk.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-            \"Requested size too large (\" SIZE_FORMAT \") - max allowed size per allocation is \" SIZE_FORMAT \".\",\n+            \"Requested size too large (%zu) - max allowed size per allocation is %zu.\",\n@@ -153,1 +153,1 @@\n-  UL2(debug, \"returned %d chunks, total capacity \" SIZE_FORMAT \" words.\",\n+  UL2(debug, \"returned %d chunks, total capacity %zu words.\",\n@@ -219,1 +219,1 @@\n-  UL2(trace, \"requested \" SIZE_FORMAT \" words.\", requested_word_size);\n+  UL2(trace, \"requested %zu words.\", requested_word_size);\n@@ -237,1 +237,1 @@\n-      UL2(trace, \"returning \" METABLOCKFORMAT \" with wastage \" METABLOCKFORMAT \" - taken from fbl (now: %d, \" SIZE_FORMAT \").\",\n+      UL2(trace, \"returning \" METABLOCKFORMAT \" with wastage \" METABLOCKFORMAT \" - taken from fbl (now: %d, %zu).\",\n@@ -317,1 +317,1 @@\n-        UL2(info, \"commit failure (requested size: \" SIZE_FORMAT \")\", word_size_plus_alignment);\n+        UL2(info, \"commit failure (requested size: %zu)\", word_size_plus_alignment);\n@@ -342,1 +342,1 @@\n-      UL2(debug, \"allocated new chunk \" METACHUNK_FORMAT \" for requested word size \" SIZE_FORMAT \".\",\n+      UL2(debug, \"allocated new chunk \" METACHUNK_FORMAT \" for requested word size %zu.\",\n@@ -362,1 +362,1 @@\n-      UL2(info, \"failed to allocate new chunk for requested word size \" SIZE_FORMAT \".\", word_size);\n+      UL2(info, \"failed to allocate new chunk for requested word size %zu.\", word_size);\n@@ -410,1 +410,1 @@\n-  UL2(trace, \"added to fbl: \" METABLOCKFORMAT \", (now: %d, \" SIZE_FORMAT \").\",\n+  UL2(trace, \"added to fbl: \" METABLOCKFORMAT \", (now: %d, %zu).\",\n@@ -485,1 +485,1 @@\n-  st->print_cr(\"sm %s: %d chunks, total word size: \" SIZE_FORMAT \", committed word size: \" SIZE_FORMAT, _name,\n+  st->print_cr(\"sm %s: %d chunks, total word size: %zu, committed word size: %zu\", _name,\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-      st->print(SIZE_FORMAT \" bytes\", byte_size);\n+      st->print(\"%zu bytes\", byte_size);\n@@ -103,1 +103,1 @@\n-      st->print(SIZE_FORMAT \" words\", byte_size \/ BytesPerWord);\n+      st->print(\"%zu words\", byte_size \/ BytesPerWord);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,2 +83,2 @@\n-         SIZE_FORMAT_X \" is not aligned to \"                 \\\n-         SIZE_FORMAT_X, (size_t)(uintptr_t)value, (size_t)(alignment))\n+         \"0x%zx is not aligned to 0x%zx\",                    \\\n+         (size_t)(uintptr_t)value, (size_t)(alignment))\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,3 +52,3 @@\n-  st->print_cr(\" - commit_granule_bytes: \" SIZE_FORMAT \".\", commit_granule_bytes());\n-  st->print_cr(\" - commit_granule_words: \" SIZE_FORMAT \".\", commit_granule_words());\n-  st->print_cr(\" - virtual_space_node_default_size: \" SIZE_FORMAT \".\", virtual_space_node_default_word_size());\n+  st->print_cr(\" - commit_granule_bytes: %zu.\", commit_granule_bytes());\n+  st->print_cr(\" - commit_granule_words: %zu.\", commit_granule_words());\n+  st->print_cr(\" - virtual_space_node_default_size: %zu.\", virtual_space_node_default_word_size());\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSettings.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-         \"Sanity: cap \" SIZE_FORMAT \", committed \" SIZE_FORMAT \", used \" SIZE_FORMAT \", free \" SIZE_FORMAT \", waste \" SIZE_FORMAT \".\",\n+         \"Sanity: cap %zu, committed %zu, used %zu, free %zu, waste %zu.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceStatistics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,2 +81,2 @@\n-  assert(is_aligned(reserve_limit, Metaspace::reserve_alignment_words()), \"reserve_limit (\" SIZE_FORMAT \") \"\n-                    \"not aligned to metaspace reserve alignment (\" SIZE_FORMAT \")\",\n+  assert(is_aligned(reserve_limit, Metaspace::reserve_alignment_words()), \"reserve_limit (%zu) \"\n+                    \"not aligned to metaspace reserve alignment (%zu)\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-  st->print_cr(\"- total %d nodes, \" SIZE_FORMAT \" reserved words, \" SIZE_FORMAT \" committed words.\",\n+  st->print_cr(\"- total %d nodes, %zu reserved words, %zu committed words.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceList.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-         \"Not aligned to commit granule size: \" SIZE_FORMAT \".\", word_size);\n+         \"Not aligned to commit granule size: %zu.\", word_size);\n@@ -98,1 +98,1 @@\n-  UL2(debug, \"committing range \" PTR_FORMAT \"..\" PTR_FORMAT \"(\" SIZE_FORMAT \" words)\",\n+  UL2(debug, \"committing range \" PTR_FORMAT \"..\" PTR_FORMAT \"(%zu words)\",\n@@ -121,1 +121,1 @@\n-  UL2(debug, \"... committed \" SIZE_FORMAT \" additional words.\", commit_increase_words);\n+  UL2(debug, \"... committed %zu additional words.\", commit_increase_words);\n@@ -183,1 +183,1 @@\n-  UL2(debug, \"uncommitting range \" PTR_FORMAT \"..\" PTR_FORMAT \"(\" SIZE_FORMAT \" words)\",\n+  UL2(debug, \"uncommitting range \" PTR_FORMAT \"..\" PTR_FORMAT \"(%zu words)\",\n@@ -197,1 +197,1 @@\n-  UL2(debug, \"... uncommitted \" SIZE_FORMAT \" words.\", committed_words_in_range);\n+  UL2(debug, \"... uncommitted %zu words.\", committed_words_in_range);\n@@ -234,1 +234,1 @@\n-  UL2(debug, \"born (word_size \" SIZE_FORMAT \").\", _word_size);\n+  UL2(debug, \"born (word_size %zu).\", _word_size);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-             \"size: \" SIZE_FORMAT \", saved size: \" SIZE_FORMAT,\n+             \"size: %zu, saved size: %zu\",\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -943,1 +943,1 @@\n-         \"actual alignment \" SIZE_FORMAT \" must be within maximum heap alignment \" SIZE_FORMAT,\n+         \"actual alignment %zu must be within maximum heap alignment %zu\",\n@@ -988,1 +988,1 @@\n-    err_msg(\"Could not reserve enough space for \" SIZE_FORMAT \"KB object heap\",\n+    err_msg(\"Could not reserve enough space for %zuKB object heap\",\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -206,1 +206,1 @@\n-      \" size=\" SIZE_FORMAT \", executable=%d) failed\",\n+      \" size=%zu, executable=%d) failed\",\n@@ -429,2 +429,2 @@\n-  out->print_cr(\" - committed: \" SIZE_FORMAT, committed_size());\n-  out->print_cr(\" - reserved:  \" SIZE_FORMAT, reserved_size());\n+  out->print_cr(\" - committed: %zu\", committed_size());\n+  out->print_cr(\" - reserved:  %zu\", reserved_size());\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}