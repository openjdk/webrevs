{"files":[{"patch":"@@ -847,2 +847,0 @@\n-  \/\/ If any phase is randomized for stress testing, seed random number\n-  \/\/ generation and log the seed for repeatability.\n@@ -851,9 +849,1 @@\n-    if (FLAG_IS_DEFAULT(StressSeed) || (FLAG_IS_ERGO(StressSeed) && directive->RepeatCompilationOption)) {\n-      _stress_seed = static_cast<uint>(Ticks::now().nanoseconds());\n-      FLAG_SET_ERGO(StressSeed, _stress_seed);\n-    } else {\n-      _stress_seed = StressSeed;\n-    }\n-    if (_log != nullptr) {\n-      _log->elem(\"stress_test seed='%u'\", _stress_seed);\n-    }\n+    initialize_stress_seed(directive);\n@@ -986,0 +976,5 @@\n+\n+  if (StressLCM || StressGCM) {\n+    initialize_stress_seed(directive);\n+  }\n+\n@@ -5071,0 +5066,12 @@\n+void Compile::initialize_stress_seed(const DirectiveSet* directive) {\n+  if (FLAG_IS_DEFAULT(StressSeed) || (FLAG_IS_ERGO(StressSeed) && directive->RepeatCompilationOption)) {\n+    _stress_seed = static_cast<uint>(Ticks::now().nanoseconds());\n+    FLAG_SET_ERGO(StressSeed, _stress_seed);\n+  } else {\n+    _stress_seed = StressSeed;\n+  }\n+  if (_log != nullptr) {\n+    _log->elem(\"stress_test seed='%u'\", _stress_seed);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1281,0 +1281,3 @@\n+  \/\/ seed random number generation and log the seed for repeatability.\n+  void initialize_stress_seed(const DirectiveSet* directive);\n+\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}