{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-                   SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+                   \"%zuM\", MaxHeapSize\/M);\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-    log_error(cds)(\"Failed to reserve \" SIZE_FORMAT \" bytes of output buffer.\", buffer_size);\n+    log_error(cds)(\"Failed to reserve %zu bytes of output buffer.\", buffer_size);\n@@ -322,1 +322,1 @@\n-  log_info(cds)(\"Reserved output buffer space at \" PTR_FORMAT \" [\" SIZE_FORMAT \" bytes]\",\n+  log_info(cds)(\"Reserved output buffer space at \" PTR_FORMAT \" [%zu bytes]\",\n@@ -1187,1 +1187,1 @@\n-      log_debug(cds, map)(PTR_FORMAT \": @@ Misc data \" SIZE_FORMAT \" bytes\",\n+      log_debug(cds, map)(PTR_FORMAT \": @@ Misc data %zu bytes\",\n@@ -1207,1 +1207,1 @@\n-    log_info(cds, map)(\"[%-18s \" PTR_FORMAT \" - \" PTR_FORMAT \" \" SIZE_FORMAT_W(9) \" bytes]\",\n+    log_info(cds, map)(\"[%-18s \" PTR_FORMAT \" - \" PTR_FORMAT \" %9zu bytes]\",\n@@ -1248,1 +1248,1 @@\n-        st.print_cr(\"filler \" SIZE_FORMAT \" bytes\", byte_size);\n+        st.print_cr(\"filler %zu bytes\", byte_size);\n@@ -1351,1 +1351,1 @@\n-        st.print_cr(\" - fields (\" SIZE_FORMAT \" words):\", source_oop->size());\n+        st.print_cr(\" - fields (%zu words):\", source_oop->size());\n@@ -1576,1 +1576,1 @@\n-  log_debug(cds)(\"total   : \" SIZE_FORMAT_W(9) \" [100.0%% of total] out of \" SIZE_FORMAT_W(9) \" bytes [%5.1f%% used]\",\n+  log_debug(cds)(\"total   : %9zu [100.0%% of total] out of %9zu bytes [%5.1f%% used]\",\n@@ -1581,1 +1581,1 @@\n-  log_debug(cds)(\"bm space: \" SIZE_FORMAT_W(9) \" [ %4.1f%% of total] out of \" SIZE_FORMAT_W(9) \" bytes [100.0%% used]\",\n+  log_debug(cds)(\"bm space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used]\",\n@@ -1589,1 +1589,1 @@\n-  log_debug(cds)(\"hp space: \" SIZE_FORMAT_W(9) \" [ %4.1f%% of total] out of \" SIZE_FORMAT_W(9) \" bytes [100.0%% used] at \" INTPTR_FORMAT,\n+  log_debug(cds)(\"hp space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used] at \" INTPTR_FORMAT,\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-                \" size \" SIZE_FORMAT_W(6) \" delta %zd\",\n+                \" size %6zu delta %zd\",\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-         \"Pre-condition: Roots start at aligned boundary: \" SIZE_FORMAT, _buffer_used);\n+         \"Pre-condition: Roots start at aligned boundary: %zu\", _buffer_used);\n@@ -242,1 +242,1 @@\n-           \"Roots segment \" SIZE_FORMAT \" start is not aligned: \" SIZE_FORMAT,\n+           \"Roots segment %zu start is not aligned: %zu\",\n@@ -250,1 +250,1 @@\n-    log_info(cds, heap)(\"archived obj root segment [%d] = \" SIZE_FORMAT \" bytes, obj = \" PTR_FORMAT,\n+    log_info(cds, heap)(\"archived obj root segment [%d] = %zu bytes, obj = \" PTR_FORMAT,\n@@ -333,1 +333,1 @@\n-  log_info(cds)(\"Size of heap region = \" SIZE_FORMAT \" bytes, %d objects, %d roots, %d native ptrs\",\n+  log_info(cds)(\"Size of heap region = %zu bytes, %d objects, %d roots, %d native ptrs\",\n@@ -399,1 +399,1 @@\n-    log_info(cds, heap)(\"Inserting filler obj array of %d elements (\" SIZE_FORMAT \" bytes total) @ buffer offset \" SIZE_FORMAT,\n+    log_info(cds, heap)(\"Inserting filler obj array of %d elements (%zu bytes total) @ buffer offset %zu\",\n@@ -630,1 +630,1 @@\n-  log_info(cds)(\"%s = \" SIZE_FORMAT_W(7) \" ... \" SIZE_FORMAT_W(7) \" (%3zu%% ... %3zu%% = %3zu%%)\", which,\n+  log_info(cds)(\"%s = %7zu ... %7zu (%3zu%% ... %3zu%% = %3zu%%)\", which,\n@@ -757,1 +757,1 @@\n-  log_info(cds, heap)(\"calculate_ptrmap: marked %d non-null native pointers for heap region (\" SIZE_FORMAT \" bits)\",\n+  log_info(cds, heap)(\"calculate_ptrmap: marked %d non-null native pointers for heap region (%zu bits)\",\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-      \/\/tty->print_cr(\"Marking pointer [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" @ \" SIZE_FORMAT_W(5), p2i(ptr_loc), p2i(*ptr_loc), idx);\n+      \/\/tty->print_cr(\"Marking pointer [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" @ %5zu\", p2i(ptr_loc), p2i(*ptr_loc), idx);\n@@ -141,1 +141,1 @@\n-  \/\/tty->print_cr(\"Clearing pointer [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" @ \" SIZE_FORMAT_W(5), p2i(ptr_loc), p2i(*ptr_loc), idx);\n+  \/\/tty->print_cr(\"Clearing pointer [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" @ %5zu\", p2i(ptr_loc), p2i(*ptr_loc), idx);\n@@ -166,1 +166,1 @@\n-      DEBUG_ONLY(log_trace(cds, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> null @ \" SIZE_FORMAT_W(9), p2i(ptr_loc), offset));\n+      DEBUG_ONLY(log_trace(cds, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> null @ %9zu\", p2i(ptr_loc), offset));\n@@ -231,1 +231,1 @@\n-    log_error(cds)(\"Failed to expand shared space to \" SIZE_FORMAT \" bytes\",\n+    log_error(cds)(\"Failed to expand shared space to %zu bytes\",\n@@ -242,1 +242,1 @@\n-  log_debug(cds)(\"Expanding %s spaces by \" SIZE_FORMAT_W(7) \" bytes [total \" SIZE_FORMAT_W(9)  \" bytes ending at %p]\",\n+  log_debug(cds)(\"Expanding %s spaces by %7zu bytes [total %9zu bytes ending at %p]\",\n@@ -268,1 +268,1 @@\n-  log_debug(cds)(\"%s space: \" SIZE_FORMAT_W(9) \" [ %4.1f%% of total] out of \" SIZE_FORMAT_W(9) \" bytes [%5.1f%% used] at \" INTPTR_FORMAT,\n+  log_debug(cds)(\"%s space: %9zu [ %4.1f%% of total] out of %9zu bytes [%5.1f%% used] at \" INTPTR_FORMAT,\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-                         \" [\" UINT32_FORMAT \" bytes header, \" SIZE_FORMAT \" bytes total]\",\n+                         \" [\" UINT32_FORMAT \" bytes header, %zu bytes total]\",\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -282,1 +282,1 @@\n-  st->print_cr(\"- core_region_alignment:          \" SIZE_FORMAT, _core_region_alignment);\n+  st->print_cr(\"- core_region_alignment:          %zu\", _core_region_alignment);\n@@ -294,3 +294,3 @@\n-  st->print_cr(\"- cloned_vtables_offset:          \" SIZE_FORMAT_X, _cloned_vtables_offset);\n-  st->print_cr(\"- early_serialized_data_offset:   \" SIZE_FORMAT_X, _early_serialized_data_offset);\n-  st->print_cr(\"- serialized_data_offset:         \" SIZE_FORMAT_X, _serialized_data_offset);\n+  st->print_cr(\"- cloned_vtables_offset:          0x%zx\", _cloned_vtables_offset);\n+  st->print_cr(\"- early_serialized_data_offset:   0x%zx\", _early_serialized_data_offset);\n+  st->print_cr(\"- serialized_data_offset:         0x%zx\", _serialized_data_offset);\n@@ -298,1 +298,1 @@\n-  st->print_cr(\"- shared_path_table_offset:       \" SIZE_FORMAT_X, _shared_path_table_offset);\n+  st->print_cr(\"- shared_path_table_offset:       0x%zx\", _shared_path_table_offset);\n@@ -310,2 +310,2 @@\n-  st->print_cr(\"- heap_root_segments.base_offset: \" SIZE_FORMAT_X, _heap_root_segments.base_offset());\n-  st->print_cr(\"- heap_root_segments.count:       \" SIZE_FORMAT, _heap_root_segments.count());\n+  st->print_cr(\"- heap_root_segments.base_offset: 0x%zx\", _heap_root_segments.base_offset());\n+  st->print_cr(\"- heap_root_segments.count:       %zu\", _heap_root_segments.count());\n@@ -314,4 +314,4 @@\n-  st->print_cr(\"- _heap_oopmap_start_pos:         \" SIZE_FORMAT, _heap_oopmap_start_pos);\n-  st->print_cr(\"- _heap_ptrmap_start_pos:         \" SIZE_FORMAT, _heap_ptrmap_start_pos);\n-  st->print_cr(\"- _rw_ptrmap_start_pos:           \" SIZE_FORMAT, _rw_ptrmap_start_pos);\n-  st->print_cr(\"- _ro_ptrmap_start_pos:           \" SIZE_FORMAT, _ro_ptrmap_start_pos);\n+  st->print_cr(\"- _heap_oopmap_start_pos:         %zu\", _heap_oopmap_start_pos);\n+  st->print_cr(\"- _heap_ptrmap_start_pos:         %zu\", _heap_ptrmap_start_pos);\n+  st->print_cr(\"- _rw_ptrmap_start_pos:           %zu\", _rw_ptrmap_start_pos);\n+  st->print_cr(\"- _ro_ptrmap_start_pos:           %zu\", _ro_ptrmap_start_pos);\n@@ -1423,1 +1423,1 @@\n-    log_error(cds)(\"Unable to seek to position \" SIZE_FORMAT, pos);\n+    log_error(cds)(\"Unable to seek to position %zu\", pos);\n@@ -1558,1 +1558,1 @@\n-  log_debug(cds, reloc)(\"mapped %s relocation %smap @ \" INTPTR_FORMAT \" (\" SIZE_FORMAT \" bits)\",\n+  log_debug(cds, reloc)(\"mapped %s relocation %smap @ \" INTPTR_FORMAT \" (%zu bits)\",\n@@ -1581,7 +1581,7 @@\n-  st->print_cr(\"- file_offset:                    \" SIZE_FORMAT_X, _file_offset);\n-  st->print_cr(\"- mapping_offset:                 \" SIZE_FORMAT_X, _mapping_offset);\n-  st->print_cr(\"- used:                           \" SIZE_FORMAT, _used);\n-  st->print_cr(\"- oopmap_offset:                  \" SIZE_FORMAT_X, _oopmap_offset);\n-  st->print_cr(\"- oopmap_size_in_bits:            \" SIZE_FORMAT, _oopmap_size_in_bits);\n-  st->print_cr(\"- ptrmap_offset:                  \" SIZE_FORMAT_X, _ptrmap_offset);\n-  st->print_cr(\"- ptrmap_size_in_bits:            \" SIZE_FORMAT, _ptrmap_size_in_bits);\n+  st->print_cr(\"- file_offset:                    0x%zx\", _file_offset);\n+  st->print_cr(\"- mapping_offset:                 0x%zx\", _mapping_offset);\n+  st->print_cr(\"- used:                           %zu\", _used);\n+  st->print_cr(\"- oopmap_offset:                  0x%zx\", _oopmap_offset);\n+  st->print_cr(\"- oopmap_size_in_bits:            %zu\", _oopmap_size_in_bits);\n+  st->print_cr(\"- ptrmap_offset:                  0x%zx\", _ptrmap_offset);\n+  st->print_cr(\"- ptrmap_size_in_bits:            %zu\", _ptrmap_size_in_bits);\n@@ -1626,1 +1626,1 @@\n-    log_info(cds)(\"Shared file region (%s) %d: \" SIZE_FORMAT_W(8)\n+    log_info(cds)(\"Shared file region (%s) %d: %8zu\"\n@@ -2112,1 +2112,1 @@\n-  log_info(cds)(\"Requested heap region [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] = \"  SIZE_FORMAT_W(8) \" bytes\",\n+  log_info(cds)(\"Requested heap region [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] = %8zu bytes\",\n@@ -2174,1 +2174,1 @@\n-  log_info(cds)(\"CDS archive was created with max heap size = \" SIZE_FORMAT \"M, and the following configuration:\",\n+  log_info(cds)(\"CDS archive was created with max heap size = %zuM, and the following configuration:\",\n@@ -2180,1 +2180,1 @@\n-  log_info(cds)(\"The current max heap size = \" SIZE_FORMAT \"M, G1HeapRegion::GrainBytes = \" SIZE_FORMAT,\n+  log_info(cds)(\"The current max heap size = %zuM, G1HeapRegion::GrainBytes = %zu\",\n@@ -2337,1 +2337,1 @@\n-                    INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n+                    INTPTR_FORMAT \", size = %zu bytes\",\n@@ -2374,1 +2374,1 @@\n-  log_info(cds)(\"Heap data mapped at \" INTPTR_FORMAT \", size = \" SIZE_FORMAT_W(8) \" bytes\",\n+  log_info(cds)(\"Heap data mapped at \" INTPTR_FORMAT \", size = %8zu bytes\",\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    log_debug(cds, heap)(\"Cannot archive, object (\" PTR_FORMAT \") is too large: \" SIZE_FORMAT,\n+    log_debug(cds, heap)(\"Cannot archive, object (\" PTR_FORMAT \") is too large: %zu\",\n@@ -1391,1 +1391,1 @@\n-        log_debug(cds, heap)(\"(%d) %s[\" SIZE_FORMAT \"] ==> \" PTR_FORMAT \" size \" SIZE_FORMAT \" %s\", _level,\n+        log_debug(cds, heap)(\"(%d) %s[%zu] ==> \" PTR_FORMAT \" size %zu %s\", _level,\n@@ -1534,1 +1534,1 @@\n-        PTR_FORMAT \") size \" SIZE_FORMAT \", skipped.\",\n+        PTR_FORMAT \") size %zu, skipped.\",\n@@ -2122,2 +2122,2 @@\n-    log_info(cds, heap)(SIZE_FORMAT_W(8) \" objects are <= \" SIZE_FORMAT_W(-6)\n-                        \" bytes (total \" SIZE_FORMAT_W(8) \" bytes, avg %8.1f bytes)\",\n+    log_info(cds, heap)(\"%8zu objects are <= %-6zu\"\n+                        \" bytes (total %8zu bytes, avg %8.1f bytes)\",\n@@ -2129,1 +2129,1 @@\n-  log_info(cds, heap)(SIZE_FORMAT_W(8) \" huge  objects               (total \"  SIZE_FORMAT_W(8) \" bytes\"\n+  log_info(cds, heap)(\"%8zu huge  objects               (total %8zu bytes\"\n@@ -2133,1 +2133,1 @@\n-  log_info(cds, heap)(SIZE_FORMAT_W(8) \" total objects               (total \"  SIZE_FORMAT_W(8) \" bytes\"\n+  log_info(cds, heap)(\"%8zu total objects               (total %8zu bytes\"\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-  log_info(cds)(\"Core region alignment: \" SIZE_FORMAT, core_region_alignment());\n+  log_info(cds)(\"Core region alignment: %zu\", core_region_alignment());\n@@ -289,1 +289,1 @@\n-    log_error(cds)(\"Unable to reserve memory for symbols: \" SIZE_FORMAT \" bytes.\", symbol_rs_size);\n+    log_error(cds)(\"Unable to reserve memory for symbols: %zu bytes.\", symbol_rs_size);\n@@ -772,1 +772,1 @@\n-                     SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+                     \"%zuM\", MaxHeapSize\/M);\n@@ -801,1 +801,1 @@\n-    log_debug(cds)(\"Setting MinHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", MinHeapSize\/M);\n+    log_debug(cds)(\"Setting MinHeapSize to 4G for CDS dumping, original size = %zuM\", MinHeapSize\/M);\n@@ -805,1 +805,1 @@\n-    log_debug(cds)(\"Setting InitialHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", InitialHeapSize\/M);\n+    log_debug(cds)(\"Setting InitialHeapSize to 4G for CDS dumping, original size = %zuM\", InitialHeapSize\/M);\n@@ -809,1 +809,1 @@\n-    log_debug(cds)(\"Setting MaxHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+    log_debug(cds)(\"Setting MaxHeapSize to 4G for CDS dumping, original size = %zuM\", MaxHeapSize\/M);\n@@ -1085,1 +1085,1 @@\n-    log_info(cds)(\"Core region alignment: \" SIZE_FORMAT, static_mapinfo->core_region_alignment());\n+    log_info(cds)(\"Core region alignment: %zu\", static_mapinfo->core_region_alignment());\n@@ -1239,1 +1239,1 @@\n-    log_info(cds)(\"Reserved archive_space_rs [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (\" SIZE_FORMAT \") bytes\",\n+    log_info(cds)(\"Reserved archive_space_rs [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes\",\n@@ -1241,1 +1241,1 @@\n-    log_info(cds)(\"Reserved class_space_rs   [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (\" SIZE_FORMAT \") bytes\",\n+    log_info(cds)(\"Reserved class_space_rs   [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes\",\n@@ -1470,2 +1470,1 @@\n-         \"CompressedClassSpaceSize malformed: \"\n-         SIZE_FORMAT, CompressedClassSpaceSize);\n+         \"CompressedClassSpaceSize malformed: %zu\", CompressedClassSpaceSize);\n@@ -1481,1 +1480,1 @@\n-    log_info(metaspace)(\"CDS initialization: reducing class space size from \" SIZE_FORMAT \" to \" SIZE_FORMAT,\n+    log_info(metaspace)(\"CDS initialization: reducing class space size from %zu to %zu\",\n@@ -1603,2 +1602,2 @@\n-    log_info(cds)(\"Unable to map CDS archive -- core_region_alignment() expected: \" SIZE_FORMAT\n-                  \" actual: \" SIZE_FORMAT, mapinfo->core_region_alignment(), core_region_alignment());\n+    log_info(cds)(\"Unable to map CDS archive -- core_region_alignment() expected: %zu\"\n+                  \" actual: %zu\", mapinfo->core_region_alignment(), core_region_alignment());\n@@ -1773,1 +1772,1 @@\n-    st->print(\"size \" SIZE_FORMAT \", \", top - base);\n+    st->print(\"size %zu, \", top - base);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -5666,1 +5666,1 @@\n-    jio_snprintf(addr_buf, 20, SIZE_FORMAT_X, new_id);\n+    jio_snprintf(addr_buf, 20, \"0x%zx\", new_id);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-  _out->print(INTPTR_FORMAT \"  \" INTPTR_FORMAT \"  \" INTPTR_FORMAT \"  %6zu  \" SIZE_FORMAT_W(8) \"  \" SIZE_FORMAT_W(8) \"  \",\n+  _out->print(INTPTR_FORMAT \"  \" INTPTR_FORMAT \"  \" INTPTR_FORMAT \"  %6zu  %8zu  %8zu  \",\n@@ -126,1 +126,1 @@\n-    _out->print_cr(SPACE SPACE SPACE \"                                    %6zu  \" SIZE_FORMAT_W(8) \"  \" SIZE_FORMAT_W(8) \"   + hidden classes\",\n+    _out->print_cr(SPACE SPACE SPACE \"                                    %6zu  %8zu  %8zu   + hidden classes\",\n@@ -140,1 +140,1 @@\n-  _out->print_cr(\"%6zu  \" SIZE_FORMAT_W(8) \"  \" SIZE_FORMAT_W(8) \"  \",\n+  _out->print_cr(\"%6zu  %8zu  %8zu  \",\n","filename":"src\/hotspot\/share\/classfile\/classLoaderStats.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-  log_info(class, loader, data)(\"Dictionary start size: \" SIZE_FORMAT \" (\" SIZE_FORMAT \")\",\n+  log_info(class, loader, data)(\"Dictionary start size: %zu (%zu)\",\n","filename":"src\/hotspot\/share\/classfile\/dictionary.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1245,2 +1245,2 @@\n-  assert(size > 0, \"Oop size must be greater than zero, not \" SIZE_FORMAT, size);\n-  assert(size <= INT_MAX, \"Lossy conversion: \" SIZE_FORMAT, size);\n+  assert(size > 0, \"Oop size must be greater than zero, not %zu\", size);\n+  assert(size <= INT_MAX, \"Lossy conversion: %zu\", size);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-  log_trace(stringtable)(\"Start size: \" SIZE_FORMAT \" (\" SIZE_FORMAT \")\",\n+  log_trace(stringtable)(\"Start size: %zu (%zu)\",\n@@ -585,1 +585,1 @@\n-  log_debug(stringtable)(\"Grown to size:\" SIZE_FORMAT, _current_size);\n+  log_debug(stringtable)(\"Grown to size:%zu\", _current_size);\n@@ -634,1 +634,1 @@\n-  log_trace(stringtable)(\"Uncleaned items:\" SIZE_FORMAT, num_dead);\n+  log_trace(stringtable)(\"Uncleaned items:%zu\", num_dead);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -217,1 +217,1 @@\n-  log_trace(symboltable)(\"Start size: \" SIZE_FORMAT \" (\" SIZE_FORMAT \")\",\n+  log_trace(symboltable)(\"Start size: %zu (%zu)\",\n@@ -752,1 +752,1 @@\n-  log_debug(symboltable)(\"Grown to size:\" SIZE_FORMAT, _current_size);\n+  log_debug(symboltable)(\"Grown to size:%zu\", _current_size);\n@@ -801,1 +801,1 @@\n-  log_debug(symboltable)(\"Cleaned \" SIZE_FORMAT \" of \" SIZE_FORMAT,\n+  log_debug(symboltable)(\"Cleaned %zu of %zu\",\n@@ -934,4 +934,4 @@\n-  tty->print_cr(\"  Total number of symbols  \" SIZE_FORMAT_W(7), hi.total_count);\n-  tty->print_cr(\"  Total size in memory     \" SIZE_FORMAT_W(7) \"K\", (hi.total_size * wordSize) \/ K);\n-  tty->print_cr(\"  Total counted            \" SIZE_FORMAT_W(7), _symbols_counted);\n-  tty->print_cr(\"  Total removed            \" SIZE_FORMAT_W(7), _symbols_removed);\n+  tty->print_cr(\"  Total number of symbols  %7zu\", hi.total_count);\n+  tty->print_cr(\"  Total size in memory     %7zuK\", (hi.total_size * wordSize) \/ K);\n+  tty->print_cr(\"  Total counted            %7zu\", _symbols_counted);\n+  tty->print_cr(\"  Total removed            %7zu\", _symbols_removed);\n@@ -942,5 +942,5 @@\n-  tty->print_cr(\"  Reference counts         \" SIZE_FORMAT_W(7), Symbol::_total_count);\n-  tty->print_cr(\"  Symbol arena used        \" SIZE_FORMAT_W(7) \"K\", arena()->used() \/ K);\n-  tty->print_cr(\"  Symbol arena size        \" SIZE_FORMAT_W(7) \"K\", arena()->size_in_bytes() \/ K);\n-  tty->print_cr(\"  Total symbol length      \" SIZE_FORMAT_W(7), hi.total_length);\n-  tty->print_cr(\"  Maximum symbol length    \" SIZE_FORMAT_W(7), hi.max_length);\n+  tty->print_cr(\"  Reference counts         %7zu\", Symbol::_total_count);\n+  tty->print_cr(\"  Symbol arena used        %7zuK\", arena()->used() \/ K);\n+  tty->print_cr(\"  Symbol arena size        %7zuK\", arena()->size_in_bytes() \/ K);\n+  tty->print_cr(\"  Total symbol length      %7zu\", hi.total_length);\n+  tty->print_cr(\"  Maximum symbol length    %7zu\", hi.max_length);\n@@ -952,1 +952,1 @@\n-      tty->print_cr(\"    \" SIZE_FORMAT_W(6) \" \" SIZE_FORMAT_W(10) \" \" SIZE_FORMAT_W(10) \"K\",\n+      tty->print_cr(\"    %6zu %10zu %10zuK\",\n@@ -956,1 +956,1 @@\n-  tty->print_cr(\"  >=\" SIZE_FORMAT_W(6) \" \" SIZE_FORMAT_W(10) \" \" SIZE_FORMAT_W(10) \"K\\n\",\n+  tty->print_cr(\"  >= %6zu %10zu %10zuK\\n\",\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-    err_msg message(SIZE_FORMAT \"K < %zuK\", size\/K, required_size\/K);\n+    err_msg message(\"%zuK < %zuK\", size\/K, required_size\/K);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1045,8 +1045,8 @@\n-      ast->print_cr(\"freeSpace        = \" SIZE_FORMAT_W(8) \"k, nBlocks_free     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", freeSpace\/(size_t)K,     nBlocks_free,     (100.0*freeSpace)\/size,     (100.0*freeSpace)\/res_size);\n-      ast->print_cr(\"usedSpace        = \" SIZE_FORMAT_W(8) \"k, nBlocks_used     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", usedSpace\/(size_t)K,     nBlocks_used,     (100.0*usedSpace)\/size,     (100.0*usedSpace)\/res_size);\n-      ast->print_cr(\"  Tier1 Space    = \" SIZE_FORMAT_W(8) \"k, nBlocks_t1       = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", t1Space\/(size_t)K,       nBlocks_t1,       (100.0*t1Space)\/size,       (100.0*t1Space)\/res_size);\n-      ast->print_cr(\"  Tier2 Space    = \" SIZE_FORMAT_W(8) \"k, nBlocks_t2       = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", t2Space\/(size_t)K,       nBlocks_t2,       (100.0*t2Space)\/size,       (100.0*t2Space)\/res_size);\n-      ast->print_cr(\"  Alive Space    = \" SIZE_FORMAT_W(8) \"k, nBlocks_alive    = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", aliveSpace\/(size_t)K,    nBlocks_alive,    (100.0*aliveSpace)\/size,    (100.0*aliveSpace)\/res_size);\n-      ast->print_cr(\"    disconnected = \" SIZE_FORMAT_W(8) \"k, nBlocks_disconn  = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", disconnSpace\/(size_t)K,  nBlocks_disconn,  (100.0*disconnSpace)\/size,  (100.0*disconnSpace)\/res_size);\n-      ast->print_cr(\"    not entrant  = \" SIZE_FORMAT_W(8) \"k, nBlocks_notentr  = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", notentrSpace\/(size_t)K,  nBlocks_notentr,  (100.0*notentrSpace)\/size,  (100.0*notentrSpace)\/res_size);\n-      ast->print_cr(\"  stubSpace      = \" SIZE_FORMAT_W(8) \"k, nBlocks_stub     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", stubSpace\/(size_t)K,     nBlocks_stub,     (100.0*stubSpace)\/size,     (100.0*stubSpace)\/res_size);\n+      ast->print_cr(\"freeSpace        = %8zuk, nBlocks_free     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", freeSpace\/(size_t)K,     nBlocks_free,     (100.0*freeSpace)\/size,     (100.0*freeSpace)\/res_size);\n+      ast->print_cr(\"usedSpace        = %8zuk, nBlocks_used     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", usedSpace\/(size_t)K,     nBlocks_used,     (100.0*usedSpace)\/size,     (100.0*usedSpace)\/res_size);\n+      ast->print_cr(\"  Tier1 Space    = %8zuk, nBlocks_t1       = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", t1Space\/(size_t)K,       nBlocks_t1,       (100.0*t1Space)\/size,       (100.0*t1Space)\/res_size);\n+      ast->print_cr(\"  Tier2 Space    = %8zuk, nBlocks_t2       = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", t2Space\/(size_t)K,       nBlocks_t2,       (100.0*t2Space)\/size,       (100.0*t2Space)\/res_size);\n+      ast->print_cr(\"  Alive Space    = %8zuk, nBlocks_alive    = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", aliveSpace\/(size_t)K,    nBlocks_alive,    (100.0*aliveSpace)\/size,    (100.0*aliveSpace)\/res_size);\n+      ast->print_cr(\"    disconnected = %8zuk, nBlocks_disconn  = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", disconnSpace\/(size_t)K,  nBlocks_disconn,  (100.0*disconnSpace)\/size,  (100.0*disconnSpace)\/res_size);\n+      ast->print_cr(\"    not entrant  = %8zuk, nBlocks_notentr  = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", notentrSpace\/(size_t)K,  nBlocks_notentr,  (100.0*notentrSpace)\/size,  (100.0*notentrSpace)\/res_size);\n+      ast->print_cr(\"  stubSpace      = %8zuk, nBlocks_stub     = %6d, %10.3f%% of capacity, %10.3f%% of max_capacity\", stubSpace\/(size_t)K,     nBlocks_stub,     (100.0*stubSpace)\/size,     (100.0*stubSpace)\/res_size);\n@@ -1055,3 +1055,3 @@\n-      ast->print_cr(\"Segment start          = \" INTPTR_FORMAT \", used space      = \" SIZE_FORMAT_W(8)\"k\", p2i(low_bound), size\/K);\n-      ast->print_cr(\"Segment end (used)     = \" INTPTR_FORMAT \", remaining space = \" SIZE_FORMAT_W(8)\"k\", p2i(low_bound) + size, (res_size - size)\/K);\n-      ast->print_cr(\"Segment end (reserved) = \" INTPTR_FORMAT \", reserved space  = \" SIZE_FORMAT_W(8)\"k\", p2i(low_bound) + res_size, res_size\/K);\n+      ast->print_cr(\"Segment start          = \" INTPTR_FORMAT \", used space      = %8zuk\", p2i(low_bound), size\/K);\n+      ast->print_cr(\"Segment end (used)     = \" INTPTR_FORMAT \", remaining space = %8zuk\", p2i(low_bound) + size, (res_size - size)\/K);\n+      ast->print_cr(\"Segment end (reserved) = \" INTPTR_FORMAT \", reserved space  = %8zuk\", p2i(low_bound) + res_size, res_size\/K);\n@@ -1306,1 +1306,1 @@\n-          ast->print(\"(\" SIZE_FORMAT_W(4) \"K)\", TopSizeArray[i].nm_size\/K);\n+          ast->print(\"(%4zuK)\", TopSizeArray[i].nm_size\/K);\n@@ -1318,1 +1318,1 @@\n-          ast->print(\"(\" SIZE_FORMAT_W(4) \"K)\", (TopSizeArray[i].len<<log2_seg_size)\/K);\n+          ast->print(\"(%4zuK)\", (TopSizeArray[i].len<<log2_seg_size)\/K);\n@@ -1365,1 +1365,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \" ..\" SIZE_FORMAT_W(5) \" ): \"\n+          ast->print(\"[%5zu ..%5zu ): \"\n@@ -1370,1 +1370,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \"K..\" SIZE_FORMAT_W(5) \"K): \"\n+          ast->print(\"[%5zuK..%5zuK): \"\n@@ -1375,1 +1375,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \"M..\" SIZE_FORMAT_W(5) \"M): \"\n+          ast->print(\"[%5zuM..%5zuM): \"\n@@ -1405,1 +1405,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \" ..\" SIZE_FORMAT_W(5) \" ): \"\n+          ast->print(\"[%5zu ..%5zu ): \"\n@@ -1410,1 +1410,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \"K..\" SIZE_FORMAT_W(5) \"K): \"\n+          ast->print(\"[%5zuK..%5zuK): \"\n@@ -1415,1 +1415,1 @@\n-          ast->print(\"[\" SIZE_FORMAT_W(5) \"M..\" SIZE_FORMAT_W(5) \"M): \"\n+          ast->print(\"[%5zuM..%5zuM): \"\n@@ -2173,1 +2173,1 @@\n-          ast->print(\"(\" SIZE_FORMAT_W(4) \"K)\", total_size\/K);\n+          ast->print(\"(%4zuK)\", total_size\/K);\n","filename":"src\/hotspot\/share\/code\/codeHeapState.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2781,3 +2781,3 @@\n-  out->print_cr(\"         Reserved size : \" SIZE_FORMAT_W(7) \" KB\", CodeCache::max_capacity() \/ K);\n-  out->print_cr(\"        Committed size : \" SIZE_FORMAT_W(7) \" KB\", CodeCache::capacity() \/ K);\n-  out->print_cr(\"  Unallocated capacity : \" SIZE_FORMAT_W(7) \" KB\", CodeCache::unallocated_capacity() \/ K);\n+  out->print_cr(\"         Reserved size : %7zu KB\", CodeCache::max_capacity() \/ K);\n+  out->print_cr(\"        Committed size : %7zu KB\", CodeCache::capacity() \/ K);\n+  out->print_cr(\"  Unallocated capacity : %7zu KB\", CodeCache::unallocated_capacity() \/ K);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-  log_info(logging)(\"AsyncLogBuffer estimates memory use: \" SIZE_FORMAT \" bytes\", size * 2);\n+  log_info(logging)(\"AsyncLogBuffer estimates memory use: %zu bytes\", size * 2);\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -217,2 +217,2 @@\n-         \"idx must be in range 1 < idx < _n_outputs, but idx = \" SIZE_FORMAT\n-         \" and _n_outputs = \" SIZE_FORMAT, idx, _n_outputs);\n+         \"idx must be in range 1 < idx < _n_outputs, but idx = %zu\"\n+         \" and _n_outputs = %zu\", idx, _n_outputs);\n@@ -243,1 +243,1 @@\n-  assert(idx < _n_outputs, \"Invalid index, idx = \" SIZE_FORMAT \" and _n_outputs = \" SIZE_FORMAT, idx, _n_outputs);\n+  assert(idx < _n_outputs, \"Invalid index, idx = %zu and _n_outputs = %zu\", idx, _n_outputs);\n@@ -354,1 +354,1 @@\n-         \"Too many tags specified! Can only have up to \" SIZE_FORMAT \" tags in a tag set.\", LogTag::MaxTags);\n+         \"Too many tags specified! Can only have up to %zu tags in a tag set.\", LogTag::MaxTags);\n@@ -503,1 +503,1 @@\n-    int ret = sscanf(outputstr + 1, SIZE_FORMAT, &idx);\n+    int ret = sscanf(outputstr + 1, \"%zu\", &idx);\n@@ -569,1 +569,1 @@\n-    out->print(\" #\" SIZE_FORMAT \": \", i);\n+    out->print(\" #%zu: \", i);\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,1 +188,1 @@\n-                            SIZE_FORMAT \"]\", FileSizeOptionKey, (size_t)SIZE_MAX);\n+                            \"%zu]\", FileSizeOptionKey, (size_t)SIZE_MAX);\n@@ -218,1 +218,1 @@\n-                     \", filesize: \" SIZE_FORMAT \" KiB).\",\n+                     \", filesize: %zu KiB).\",\n@@ -464,1 +464,1 @@\n-  out->print(\",filecount=%u,filesize=\" SIZE_FORMAT \"%s,async=%s\", _file_count,\n+  out->print(\",filecount=%u,filesize=%zu%s,async=%s\", _file_count,\n","filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-        errstream->print_cr(\"Too many tags in log selection '%s' (can only have up to \" SIZE_FORMAT \" tags).\",\n+        errstream->print_cr(\"Too many tags in log selection '%s' (can only have up to %zu tags).\",\n","filename":"src\/hotspot\/share\/logging\/logSelection.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        errstream->print_cr(\"Can not have more than \" SIZE_FORMAT \" log selections in a single configuration.\",\n+        errstream->print_cr(\"Can not have more than %zu log selections in a single configuration.\",\n","filename":"src\/hotspot\/share\/logging\/logSelectionList.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,1 +295,1 @@\n-    st->print_cr(PTR_FORMAT \" %s %s malloced block starting at \" PTR_FORMAT \", size \" SIZE_FORMAT \", tag %s\",\n+    st->print_cr(PTR_FORMAT \" %s %s malloced block starting at \" PTR_FORMAT \", size %zu, tag %s\",\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-  assert(c1 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c1);\n-  assert(c2 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c2);\n+  assert(c1 <= SSIZE_MAX, \"counter out of range: %zu.\", c1);\n+  assert(c2 <= SSIZE_MAX, \"counter out of range: %zu.\", c2);\n@@ -66,1 +66,1 @@\n-  output()->print(\"reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s\",\n+  output()->print(\"reserved=%zu%s, committed=%zu%s\",\n@@ -69,1 +69,1 @@\n-    output()->print(\", peak=\" SIZE_FORMAT \"%s\", amount_in_current_scale(peak), scale);\n+    output()->print(\", peak=%zu%s\", amount_in_current_scale(peak), scale);\n@@ -82,1 +82,1 @@\n-    out->print(\"(%s\" SIZE_FORMAT \"%s type=%s\", alloc_type,\n+    out->print(\"(%s%zu%s type=%s\", alloc_type,\n@@ -85,1 +85,1 @@\n-    out->print(\"(%s\" SIZE_FORMAT \"%s\", alloc_type,\n+    out->print(\"(%s%zu%s\", alloc_type,\n@@ -91,1 +91,1 @@\n-    out->print(\" #\" SIZE_FORMAT \"\", count);\n+    out->print(\" #%zu\", count);\n@@ -101,1 +101,1 @@\n-    out->print(\" (peak=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\",\n+    out->print(\" (peak=%zu%s #%zu)\",\n@@ -109,1 +109,1 @@\n-  out->print(\"(mmap: reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s, \",\n+  out->print(\"(mmap: reserved=%zu%s, committed=%zu%s, \",\n@@ -114,1 +114,1 @@\n-    out->print(\"peak=\" SIZE_FORMAT \"%s)\", amount_in_current_scale(peak), scale);\n+    out->print(\"peak=%zu%s)\", amount_in_current_scale(peak), scale);\n@@ -125,1 +125,1 @@\n-  out->print(\"(arena=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\",\n+  out->print(\"(arena=%zu%s #%zu)\",\n@@ -133,1 +133,1 @@\n-    out->print(\" (peak=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\",\n+    out->print(\" (peak=%zu%s #%zu)\",\n@@ -140,1 +140,1 @@\n-  output()->print(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] %s \" SIZE_FORMAT \"%s\",\n+  output()->print(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] %s %zu%s\",\n@@ -168,1 +168,1 @@\n-    out->print_cr(\"malloc: \" SIZE_FORMAT \"%s #\" SIZE_FORMAT \", peak=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT,\n+    out->print_cr(\"malloc: %zu%s #%zu, peak=%zu%s #%zu\",\n@@ -227,1 +227,1 @@\n-    output()->print(\", readonly=\" SIZE_FORMAT \"%s\",\n+    output()->print(\", readonly=%zu%s\",\n@@ -237,2 +237,2 @@\n-    out->print_cr(\"(classes #\" SIZE_FORMAT \")\", (_instance_class_count + _array_class_count));\n-    out->print_cr(\"(  instance classes #\" SIZE_FORMAT \", array classes #\" SIZE_FORMAT \")\",\n+    out->print_cr(\"(classes #%zu)\", (_instance_class_count + _array_class_count));\n+    out->print_cr(\"(  instance classes #%zu, array classes #%zu)\",\n@@ -244,1 +244,1 @@\n-    out->print_cr(\"(threads #\" SIZE_FORMAT \")\", ThreadStackTracker::thread_count());\n+    out->print_cr(\"(threads #%zu)\", ThreadStackTracker::thread_count());\n@@ -268,1 +268,1 @@\n-    out->print_cr(\"(tracking overhead=\" SIZE_FORMAT \"%s)\",\n+    out->print_cr(\"(tracking overhead=%zu%s)\",\n@@ -304,2 +304,2 @@\n-  out->print_cr(\"(    used=\" SIZE_FORMAT \"%s)\", amount_in_current_scale(stats.used()), scale);\n-  out->print_cr(\"(    waste=\" SIZE_FORMAT \"%s =%2.2f%%)\", amount_in_current_scale(waste),\n+  out->print_cr(\"(    used=%zu%s)\", amount_in_current_scale(stats.used()), scale);\n+  out->print_cr(\"(    waste=%zu%s =%2.2f%%)\", amount_in_current_scale(waste),\n@@ -543,1 +543,1 @@\n-  out->print(\"%s\" SIZE_FORMAT \"%s\", alloc_tag, amount_in_current_scale(current_amount), scale);\n+  out->print(\"%s%zu%s\", alloc_tag, amount_in_current_scale(current_amount), scale);\n@@ -554,1 +554,1 @@\n-    out->print(\" #\" SIZE_FORMAT \"\", current_count);\n+    out->print(\" #%zu\", current_count);\n@@ -566,1 +566,1 @@\n-  out->print(\"arena=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_amount), scale);\n+  out->print(\"arena=%zu%s\", amount_in_current_scale(current_amount), scale);\n@@ -572,1 +572,1 @@\n-  out->print(\" #\" SIZE_FORMAT \"\", current_count);\n+  out->print(\" #%zu\", current_count);\n@@ -583,1 +583,1 @@\n-  out->print(\"reserved=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_reserved), scale);\n+  out->print(\"reserved=%zu%s\", amount_in_current_scale(current_reserved), scale);\n@@ -589,1 +589,1 @@\n-  out->print(\", committed=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_committed), scale);\n+  out->print(\", committed=%zu%s\", amount_in_current_scale(current_committed), scale);\n@@ -649,1 +649,1 @@\n-      out->print(\"(classes #\" SIZE_FORMAT, _current_baseline.class_count());\n+      out->print(\"(classes #%zu\", _current_baseline.class_count());\n@@ -657,1 +657,1 @@\n-      out->print(\"(  instance classes #\" SIZE_FORMAT, _current_baseline.instance_class_count());\n+      out->print(\"(  instance classes #%zu\", _current_baseline.instance_class_count());\n@@ -663,1 +663,1 @@\n-      out->print(\", array classes #\" SIZE_FORMAT, _current_baseline.array_class_count());\n+      out->print(\", array classes #%zu\", _current_baseline.array_class_count());\n@@ -673,1 +673,1 @@\n-      out->print(\"(threads #\" SIZE_FORMAT, _current_baseline.thread_count());\n+      out->print(\"(threads #%zu\", _current_baseline.thread_count());\n@@ -727,1 +727,1 @@\n-      out->print(\"(tracking overhead=\" SIZE_FORMAT \"%s\",\n+      out->print(\"(tracking overhead=%zu%s\",\n@@ -773,1 +773,1 @@\n-  out->print(\"(    used=\" SIZE_FORMAT \"%s\",\n+  out->print(\"(    used=%zu%s\",\n@@ -783,1 +783,1 @@\n-  out->print(\"(    waste=\" SIZE_FORMAT \"%s =%2.2f%%\",\n+  out->print(\"(    waste=%zu%s =%2.2f%%\",\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-      stream->print_cr(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] allocated \" SIZE_FORMAT \"%s\" \" for %s from\",\n+      stream->print_cr(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] allocated %zu%s\" \" for %s from\",\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-  st->print(\"entries: %d (primary: %d, empties: %d), sum bytes: \" SIZE_FORMAT\n+  st->print(\"entries: %d (primary: %d, empties: %d), sum bytes: %zu\"\n@@ -146,1 +146,1 @@\n-      st->print( PTR_FORMAT \"(\" SIZE_FORMAT \") \", p2i(a->payload), a->size);\n+      st->print( PTR_FORMAT \"(%zu) \", p2i(a->payload), a->size);\n","filename":"src\/hotspot\/share\/nmt\/nmtPreInit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,1 +344,1 @@\n-  log_debug(nmt)(\"Add reserved region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+  log_debug(nmt)(\"Add reserved region \\'%s\\' (\" INTPTR_FORMAT \", %zu)\",\n@@ -384,1 +384,1 @@\n-        log_debug(nmt)(\"CDS reserved region \\'%s\\' as a whole (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+        log_debug(nmt)(\"CDS reserved region \\'%s\\' as a whole (\" INTPTR_FORMAT \", %zu)\",\n@@ -393,1 +393,1 @@\n-        log_debug(nmt)(\"CDS reserved region \\'%s\\' as a whole (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+        log_debug(nmt)(\"CDS reserved region \\'%s\\' as a whole (\" INTPTR_FORMAT \", %zu)\",\n@@ -442,1 +442,1 @@\n-    log_debug(nmt)(\"Add committed region \\'%s\\', No reserved region found for  (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+    log_debug(nmt)(\"Add committed region \\'%s\\', No reserved region found for  (\" INTPTR_FORMAT \", %zu)\",\n@@ -448,1 +448,1 @@\n-  log_debug(nmt)(\"Add committed region \\'%s\\'(\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+  log_debug(nmt)(\"Add committed region \\'%s\\'(\" INTPTR_FORMAT \", %zu) %s\",\n@@ -460,1 +460,1 @@\n-  assert(reserved_rgn != nullptr, \"No reserved region (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), size);\n+  assert(reserved_rgn != nullptr, \"No reserved region (\" INTPTR_FORMAT \", %zu)\", p2i(addr), size);\n@@ -464,1 +464,1 @@\n-  log_debug(nmt)(\"Removed uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+  log_debug(nmt)(\"Removed uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", %zu) %s\",\n@@ -476,1 +476,1 @@\n-  log_debug(nmt)(\"Remove uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+  log_debug(nmt)(\"Remove uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", %zu) %s\",\n@@ -484,1 +484,1 @@\n-  log_debug(nmt)(\"Removed region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") from _reserved_regions %s\" ,\n+  log_debug(nmt)(\"Removed region \\'%s\\' (\" INTPTR_FORMAT \", %zu) from _reserved_regions %s\" ,\n@@ -498,1 +498,1 @@\n-    log_debug(nmt)(\"No reserved region found for (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")!\",\n+    log_debug(nmt)(\"No reserved region found for (\" INTPTR_FORMAT \", %zu)!\",\n@@ -574,1 +574,1 @@\n-  log_debug(nmt)(\"Split region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")  with size \" SIZE_FORMAT,\n+  log_debug(nmt)(\"Split region \\'%s\\' (\" INTPTR_FORMAT \", %zu)  with size %zu\",\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,1 +223,1 @@\n-    out->print(SIZE_FORMAT \" (%s) - %s - \", current->key(), NMTUtil::tag_to_name(out_state(current).mem_tag()),\n+    out->print(\"%zu (%s) - %s - \", current->key(), NMTUtil::tag_to_name(out_state(current).mem_tag()),\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-    assert(elements <= (size_t)INT_MAX, \"number of elements \" SIZE_FORMAT \"doesn't fit into an int.\", elements);\n+    assert(elements <= (size_t)INT_MAX, \"number of elements %zu doesn't fit into an int.\", elements);\n@@ -82,1 +82,1 @@\n-           \"Expected: \" SIZE_FORMAT \" got: \" SIZE_FORMAT,\n+           \"Expected: %zu got: %zu\",\n@@ -138,1 +138,1 @@\n-    assert(words <= INT_MAX, \"Overflow: \" SIZE_FORMAT, words);\n+    assert(words <= INT_MAX, \"Overflow: %zu\", words);\n","filename":"src\/hotspot\/share\/oops\/array.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-  st->print(\"Heap address: \" PTR_FORMAT \", size: \" SIZE_FORMAT \" MB\",\n+  st->print(\"Heap address: \" PTR_FORMAT \", size: %zu MB\",\n","filename":"src\/hotspot\/share\/oops\/compressedOops.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3809,1 +3809,1 @@\n-  st->print_cr(BULLET\"---- fields (total size \" SIZE_FORMAT \" words):\", oop_size(obj));\n+  st->print_cr(BULLET\"---- fields (total size %zu words):\", oop_size(obj));\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-  assert(size > 0, \"total object size must be non-zero: \" SIZE_FORMAT, size);\n+  assert(size > 0, \"total object size must be non-zero: %zu\", size);\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,2 +223,2 @@\n-  assert(s > 0, \"Oop size must be greater than zero, not \" SIZE_FORMAT, s);\n-  assert(is_object_aligned(s), \"Oop size is not properly aligned: \" SIZE_FORMAT, s);\n+  assert(s > 0, \"Oop size must be greater than zero, not %zu\", s);\n+  assert(is_object_aligned(s), \"Oop size is not properly aligned: %zu\", s);\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -500,1 +500,1 @@\n-      assert(_chunk->bitmap().at(index), \"Bit not set at index \" SIZE_FORMAT \" corresponding to \" PTR_FORMAT, index, p2i(p));\n+      assert(_chunk->bitmap().at(index), \"Bit not set at index %zu corresponding to \" PTR_FORMAT, index, p2i(p));\n@@ -585,1 +585,1 @@\n-           \"p: \" PTR_FORMAT \" obj: \" PTR_FORMAT \" index: \" SIZE_FORMAT,\n+           \"p: \" PTR_FORMAT \" obj: \" PTR_FORMAT \" index: %zu\",\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1247,1 +1247,1 @@\n-  <xsl:text>=\" SIZE_FORMAT_X \"<\/xsl:text>\n+  <xsl:text>=0x%zx<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnter.xsl","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-  log_trace(membername, table)(\"Start size: \" SIZE_FORMAT \" (\" SIZE_FORMAT \")\",\n+  log_trace(membername, table)(\"Start size: %zu (%zu)\",\n@@ -234,1 +234,1 @@\n-  log_trace(membername, table)(\"Uncleaned items:\" SIZE_FORMAT, num_dead);\n+  log_trace(membername, table)(\"Uncleaned items:%zu\", num_dead);\n@@ -294,1 +294,1 @@\n-  log_info(membername, table)(\"Grown to size:\" SIZE_FORMAT, _current_size);\n+  log_info(membername, table)(\"Grown to size:%zu\", _current_size);\n","filename":"src\/hotspot\/share\/prims\/resolvedMethodTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -291,2 +291,2 @@\n-  tty->print_cr(\"Minimum heap \" SIZE_FORMAT \" Initial heap \" SIZE_FORMAT \" \"\n-                \"Maximum heap \" SIZE_FORMAT \" Space alignment \" SIZE_FORMAT \" Heap alignment \" SIZE_FORMAT,\n+  tty->print_cr(\"Minimum heap %zu Initial heap %zu \"\n+                \"Maximum heap %zu Space alignment %zu Heap alignment %zu\",\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1535,2 +1535,2 @@\n-          log_debug(gc, heap, coops)(\"HeapBaseMinAddress must be at least \" SIZE_FORMAT\n-                                     \" (\" SIZE_FORMAT \"G) which is greater than value given \" SIZE_FORMAT,\n+          log_debug(gc, heap, coops)(\"HeapBaseMinAddress must be at least %zu\"\n+                                     \" (%zuG) which is greater than value given %zu\",\n@@ -1561,1 +1561,1 @@\n-            \" max heap \" SIZE_FORMAT \" > compressed oop heap \" SIZE_FORMAT \". \"\n+            \" max heap %zu > compressed oop heap %zu. \"\n@@ -1572,1 +1572,1 @@\n-    log_trace(gc, heap)(\"  Maximum heap size \" SIZE_FORMAT, (size_t) reasonable_max);\n+    log_trace(gc, heap)(\"  Maximum heap size %zu\", (size_t) reasonable_max);\n@@ -1593,1 +1593,1 @@\n-      log_trace(gc, heap)(\"  Initial heap size \" SIZE_FORMAT, InitialHeapSize);\n+      log_trace(gc, heap)(\"  Initial heap size %zu\", InitialHeapSize);\n@@ -1599,1 +1599,1 @@\n-      log_trace(gc, heap)(\"  Minimum heap size \" SIZE_FORMAT, MinHeapSize);\n+      log_trace(gc, heap)(\"  Minimum heap size %zu\", MinHeapSize);\n@@ -1788,1 +1788,1 @@\n-                \"not \" SIZE_FORMAT \"\\n\",\n+                \"not %zu\\n\",\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-    st.print_cr(\" allocated (\" SIZE_FORMAT \" bytes)\", obj->size() * HeapWordSize);\n+    st.print_cr(\" allocated (%zu bytes)\", obj->size() * HeapWordSize);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-      st->print(SIZE_FORMAT, get_size_t());\n+      st->print(\"%zu\", get_size_t());\n@@ -420,1 +420,1 @@\n-    st->print(\"-XX:%s=\" SIZE_FORMAT, _name, get_size_t());\n+    st->print(\"-XX:%s=%zu\", _name, get_size_t());\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -247,2 +247,2 @@\n-                        \"size_t %s=\" SIZE_FORMAT \" is outside the allowed range \"\n-                        \"[ \" SIZE_FORMAT \" ... \" SIZE_FORMAT \" ]\\n\",\n+                        \"size_t %s=%zu is outside the allowed range \"\n+                        \"[ %zu ... %zu ]\\n\",\n@@ -255,1 +255,1 @@\n-    st->print(\"[ \" SIZE_FORMAT_W(-25) \" ... \" SIZE_FORMAT_W(25) \" ]\", min, max);\n+    st->print(\"[ %-25zu ... %25zu ]\", min, max);\n@@ -258,1 +258,1 @@\n-    st->print(\"[ \" SIZE_FORMAT_W(-25) \" ... \" SIZE_FORMAT_W(25) \" ]\", size_t(0), size_t(SIZE_MAX));\n+    st->print(\"[ %-25zu ... %25zu ]\", size_t(0), size_t(SIZE_MAX));\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagAccess.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-                        \"at least \" SIZE_FORMAT \" to align constants\\n\",\n+                        \"at least %zu to align constants\\n\",\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-                        \"less than page size (\" SIZE_FORMAT \")\\n\",\n+                        \"less than page size (%zu)\\n\",\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -522,1 +522,1 @@\n-      tty->print_cr(\"ERROR: fail_cnt=\" SIZE_FORMAT, fail_cnt);\n+      tty->print_cr(\"ERROR: fail_cnt=%zu\", fail_cnt);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-  st->print_cr(\"JNI global refs: \" SIZE_FORMAT \", weak refs: \" SIZE_FORMAT,\n+  st->print_cr(\"JNI global refs: %zu, weak refs: %zu\",\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1188,1 +1188,1 @@\n-    st->print(\"%d cores, \" SIZE_FORMAT \"M, \", processor_count(), mem);\n+    st->print(\"%d cores, %zuM, \", processor_count(), mem);\n@@ -1190,1 +1190,1 @@\n-    st->print(\"%d cores, \" SIZE_FORMAT \"G, \", processor_count(), mem);\n+    st->print(\"%d cores, %zuG, \", processor_count(), mem);\n@@ -1825,2 +1825,2 @@\n-                     \" min=\" SIZE_FORMAT \"%s\"\n-                     \" max=\" SIZE_FORMAT \"%s\"\n+                     \" min=%zu%s\"\n+                     \" max=%zu%s\"\n@@ -1828,2 +1828,2 @@\n-                     \" size=\" SIZE_FORMAT \"%s\"\n-                     \" page_size=\" SIZE_FORMAT \"%s\",\n+                     \" size=%zu%s\"\n+                     \" page_size=%zu%s\",\n@@ -1846,2 +1846,2 @@\n-                     \" req_size=\" SIZE_FORMAT \"%s\"\n-                     \" req_page_size=\" SIZE_FORMAT \"%s\"\n+                     \" req_size=%zu%s\"\n+                     \" req_page_size=%zu%s\"\n@@ -1849,2 +1849,2 @@\n-                     \" size=\" SIZE_FORMAT \"%s\"\n-                     \" page_size=\" SIZE_FORMAT \"%s\",\n+                     \" size=%zu%s\"\n+                     \" page_size=%zu%s\",\n@@ -1992,1 +1992,1 @@\n-#define ARGSFMT \"range [\" PTR_FORMAT \"-\" PTR_FORMAT \"), size \" SIZE_FORMAT_X \", alignment \" SIZE_FORMAT_X \", randomize: %d\"\n+#define ARGSFMT \"range [\" PTR_FORMAT \"-\" PTR_FORMAT \"), size 0x%zx, alignment 0x%zx, randomize: %d\"\n@@ -2379,1 +2379,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2384,1 +2384,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2389,1 +2389,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2398,1 +2398,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2433,1 +2433,1 @@\n-      st->print(SIZE_FORMAT \"k\", sz \/ K);\n+      st->print(\"%zuk\", sz \/ K);\n@@ -2435,1 +2435,1 @@\n-      st->print(SIZE_FORMAT \"M\", sz \/ M);\n+      st->print(\"%zuM\", sz \/ M);\n@@ -2437,1 +2437,1 @@\n-      st->print(SIZE_FORMAT \"G\", sz \/ G);\n+      st->print(\"%zuG\", sz \/ G);\n@@ -2471,1 +2471,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n@@ -2492,1 +2492,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n@@ -2504,1 +2504,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,2 +174,2 @@\n-                                \" units = %d, dsize = \" SIZE_FORMAT \", vlen = \" SIZE_FORMAT \",\"\n-                                \" pad_length = \" SIZE_FORMAT \", size = \" SIZE_FORMAT \", on_c_heap = %s,\"\n+                                \" units = %d, dsize = %zu, vlen = %zu,\"\n+                                \" pad_length = %zu, size = %zu, on_c_heap = %s,\"\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,2 +100,2 @@\n-                          \" os::vm_allocation_granularity = \" SIZE_FORMAT\n-                          \", adjusted size = \" SIZE_FORMAT,\n+                          \" os::vm_allocation_granularity = %zu\"\n+                          \", adjusted size = %zu\",\n@@ -130,1 +130,1 @@\n-                            \" size = \" SIZE_FORMAT,\n+                            \" size = %zu\",\n@@ -181,2 +181,2 @@\n-              \"\\tCapacity = \" SIZE_FORMAT \" bytes\"\n-              \"  Used = \" SIZE_FORMAT \" bytes\"\n+              \"\\tCapacity = %zu bytes\"\n+              \"  Used = %zu bytes\"\n","filename":"src\/hotspot\/share\/runtime\/perfMemory.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -552,1 +552,1 @@\n-          \"class %s (in module %s) cannot access class %s (in unnamed module @\" SIZE_FORMAT_X \") because module %s does not read unnamed module @\" SIZE_FORMAT_X,\n+          \"class %s (in module %s) cannot access class %s (in unnamed module @0x%zx) because module %s does not read unnamed module @0x%zx\",\n@@ -579,1 +579,1 @@\n-          \"class %s (in unnamed module @\" SIZE_FORMAT_X \") cannot access class %s (in module %s) because module %s does not export %s to unnamed module @\" SIZE_FORMAT_X,\n+          \"class %s (in unnamed module @0x%zx) cannot access class %s (in module %s) because module %s does not export %s to unnamed module @0x%zx\",\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  \/\/ warning(\"Guarding at \" PTR_FORMAT \" for len \" SIZE_FORMAT \"\\n\", low_addr, len);\n+  \/\/ warning(\"Guarding at \" PTR_FORMAT \" for len %zu\\n\", low_addr, len);\n","filename":"src\/hotspot\/share\/runtime\/stackOverflow.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1297,2 +1297,2 @@\n-                                 \"bumping in_use_list_ceiling from \" SIZE_FORMAT\n-                                 \" to \" SIZE_FORMAT, old_ceiling, new_ceiling);\n+                                 \"bumping in_use_list_ceiling from %zu\"\n+                                 \" to %zu\", old_ceiling, new_ceiling);\n@@ -1306,2 +1306,2 @@\n-    log_info(monitorinflation)(\"monitors_used=\" SIZE_FORMAT \", ceiling=\" SIZE_FORMAT\n-                               \", monitor_usage=\" SIZE_FORMAT \", threshold=%d\",\n+    log_info(monitorinflation)(\"monitors_used=%zu, ceiling=%zu\"\n+                               \", monitor_usage=%zu, threshold=%d\",\n@@ -1728,1 +1728,1 @@\n-      _stream->print_cr(\"begin deflating: in_use_list stats: ceiling=\" SIZE_FORMAT \", count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT,\n+      _stream->print_cr(\"begin deflating: in_use_list stats: ceiling=%zu, count=%zu, max=%zu\",\n@@ -1737,3 +1737,3 @@\n-      _stream->print_cr(\"before handshaking: unlinked_count=\" SIZE_FORMAT\n-                        \", in_use_list stats: ceiling=\" SIZE_FORMAT \", count=\"\n-                        SIZE_FORMAT \", max=\" SIZE_FORMAT,\n+      _stream->print_cr(\"before handshaking: unlinked_count=%zu\"\n+                        \", in_use_list stats: ceiling=%zu, count=\"\n+                        \"%zu, max=%zu\",\n@@ -1747,1 +1747,1 @@\n-                        SIZE_FORMAT \", count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT,\n+                        \"%zu, count=%zu, max=%zu\",\n@@ -1757,1 +1757,1 @@\n-        _stream->print_cr(\"deflated_count=\" SIZE_FORMAT \", {unlinked,deleted}_count=\" SIZE_FORMAT \" monitors in %3.7f secs\",\n+        _stream->print_cr(\"deflated_count=%zu, {unlinked,deleted}_count=%zu monitors in %3.7f secs\",\n@@ -1760,1 +1760,1 @@\n-      _stream->print_cr(\"end deflating: in_use_list stats: ceiling=\" SIZE_FORMAT \", count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT,\n+      _stream->print_cr(\"end deflating: in_use_list stats: ceiling=%zu, count=%zu, max=%zu\",\n@@ -1768,2 +1768,2 @@\n-      _stream->print_cr(\"pausing %s: %s=\" SIZE_FORMAT \", in_use_list stats: ceiling=\"\n-                        SIZE_FORMAT \", count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT,\n+      _stream->print_cr(\"pausing %s: %s=%zu, in_use_list stats: ceiling=\"\n+                        \"%zu, count=%zu, max=%zu\",\n@@ -1776,2 +1776,2 @@\n-      _stream->print_cr(\"resuming %s: in_use_list stats: ceiling=\" SIZE_FORMAT\n-                        \", count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT, op_name,\n+      _stream->print_cr(\"resuming %s: in_use_list stats: ceiling=%zu\"\n+                        \", count=%zu, max=%zu\", op_name,\n@@ -2004,1 +2004,1 @@\n-  out->print_cr(\"count=\" SIZE_FORMAT \", max=\" SIZE_FORMAT, l_in_use_count,\n+  out->print_cr(\"count=%zu, max=%zu\", l_in_use_count,\n@@ -2016,2 +2016,2 @@\n-    out->print_cr(\"in_use_count=\" SIZE_FORMAT \" equals ck_in_use_count=\"\n-                  SIZE_FORMAT, l_in_use_count, ck_in_use_count);\n+    out->print_cr(\"in_use_count=%zu equals ck_in_use_count=%zu\",\n+                  l_in_use_count, ck_in_use_count);\n@@ -2019,2 +2019,2 @@\n-    out->print_cr(\"WARNING: in_use_count=\" SIZE_FORMAT \" is not equal to \"\n-                  \"ck_in_use_count=\" SIZE_FORMAT, l_in_use_count,\n+    out->print_cr(\"WARNING: in_use_count=%zu is not equal to \"\n+                  \"ck_in_use_count=%zu\", l_in_use_count,\n@@ -2026,2 +2026,2 @@\n-    out->print_cr(\"in_use_max=\" SIZE_FORMAT \" equals ck_in_use_max=\"\n-                  SIZE_FORMAT, l_in_use_max, ck_in_use_max);\n+    out->print_cr(\"in_use_max=%zu equals ck_in_use_max=%zu\",\n+                  l_in_use_max, ck_in_use_max);\n@@ -2029,2 +2029,2 @@\n-    out->print_cr(\"WARNING: in_use_max=\" SIZE_FORMAT \" is not equal to \"\n-                  \"ck_in_use_max=\" SIZE_FORMAT, l_in_use_max, ck_in_use_max);\n+    out->print_cr(\"WARNING: in_use_max=%zu is not equal to \"\n+                  \"ck_in_use_max=%zu\", l_in_use_max, ck_in_use_max);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-    PTR_FORMAT \"-\" PTR_FORMAT \" (\" SIZE_FORMAT \"k).\",\n+    PTR_FORMAT \"-\" PTR_FORMAT \" (%zuk).\",\n@@ -478,1 +478,1 @@\n-      st->print(\"allocated=\" SIZE_FORMAT \"%s \",\n+      st->print(\"allocated=%zu%s \",\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -320,1 +320,1 @@\n-                           \"Could not allocate \" SIZE_FORMAT \" bytes for argument.\",\n+                           \"Could not allocate %zu bytes for argument.\",\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-    jio_snprintf(buf, sizeof(buf), \"HPROF BLOCKSIZE=\" SIZE_FORMAT, _block_size);\n+    jio_snprintf(buf, sizeof(buf), \"HPROF BLOCKSIZE=%zu\", _block_size);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -382,1 +382,1 @@\n-  tty->print_cr(\"%s count = \" SIZE_FORMAT \" pending_triggers = %d pending_clears = %d\",\n+  tty->print_cr(\"%s count = %zu pending_triggers = %d pending_clears = %d\",\n","filename":"src\/hotspot\/share\/services\/lowMemoryDetector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-* Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,1 +177,1 @@\n-  log_info(thread, table)(\"Grown to size:\" SIZE_FORMAT, _current_size);\n+  log_info(thread, table)(\"Grown to size:%zu\", _current_size);\n","filename":"src\/hotspot\/share\/services\/threadIdTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-  if (sscanf(arg, SIZE_FORMAT, &value) == 1) {\n+  if (sscanf(arg, \"%zu\", &value) == 1) {\n","filename":"src\/hotspot\/share\/services\/writeableFlags.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -202,1 +202,1 @@\n-         \"BitMap index out of bounds: \" SIZE_FORMAT \" >= \" SIZE_FORMAT,\n+         \"BitMap index out of bounds: %zu >= %zu\",\n@@ -208,1 +208,1 @@\n-         \"BitMap limit out of bounds: \" SIZE_FORMAT \" > \" SIZE_FORMAT,\n+         \"BitMap limit out of bounds: %zu > %zu\",\n@@ -214,1 +214,1 @@\n-         \"BitMap range error: \" SIZE_FORMAT \" > \" SIZE_FORMAT, beg, end);\n+         \"BitMap range error: %zu > %zu\", beg, end);\n@@ -709,1 +709,1 @@\n-  st->print(\"Bitmap (\" SIZE_FORMAT \" bits):\", size());\n+  st->print(\"Bitmap (%zu bits):\", size());\n@@ -713,1 +713,1 @@\n-      st->print(SIZE_FORMAT_W(5) \":\", index);\n+      st->print(\"%5zu:\", index);\n","filename":"src\/hotspot\/share\/utilities\/bitMap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,1 +263,1 @@\n-           \"out of bounds: \" SIZE_FORMAT, size_in_bits);\n+           \"out of bounds: %zu\", size_in_bits);\n","filename":"src\/hotspot\/share\/utilities\/bitMap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    assert(i < size(), \"IOOBE i: \" SIZE_FORMAT \" size(): \" SIZE_FORMAT, i, size());\n+    assert(i < size(), \"IOOBE i: %zu size(): %zu\", i, size());\n","filename":"src\/hotspot\/share\/utilities\/chunkedList.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -683,1 +683,1 @@\n-        DEBUG_ONLY(fatal(\"%s Node hash code changed from \" SIZE_FORMAT \" to \" SIZE_FORMAT, msg, aux->saved_hash(), aux_hash);)\n+        DEBUG_ONLY(fatal(\"%s Node hash code changed from %zu to %zu\", msg, aux->saved_hash(), aux_hash);)\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-           \"incorrect element size: \" SIZE_FORMAT, elem_size);\n+           \"incorrect element size: %zu\", elem_size);\n@@ -76,1 +76,1 @@\n-           \"byte_count \" SIZE_FORMAT \" must be multiple of element size \" SIZE_FORMAT, byte_count, elem_size);\n+           \"byte_count %zu must be multiple of element size %zu\", byte_count, elem_size);\n@@ -199,1 +199,1 @@\n-    default: guarantee(false, \"do_conjoint_swap: Invalid elem_size \" SIZE_FORMAT \"\\n\", elem_size);\n+    default: guarantee(false, \"do_conjoint_swap: Invalid elem_size %zu\\n\", elem_size);\n","filename":"src\/hotspot\/share\/utilities\/copy.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1865,1 +1865,1 @@\n-        DWARF_LOG_ERROR(\"Tried to read \" SIZE_FORMAT \" bytes but exceeded buffer size of \" SIZE_FORMAT \". Truncating string.\",\n+        DWARF_LOG_ERROR(\"Tried to read %zu bytes but exceeded buffer size of %zu. Truncating string.\",\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -137,0 +137,1 @@\n+\n@@ -140,5 +141,0 @@\n-#ifdef _LP64\n-#define SIZE_FORMAT_X_0          \"0x%016\"     PRIxPTR\n-#else\n-#define SIZE_FORMAT_X_0          \"0x%08\"      PRIxPTR\n-#endif\n@@ -166,0 +162,1 @@\n+#define SIZE_FORMAT_X_0          \"0x%016\"     PRIxPTR\n@@ -170,0 +167,1 @@\n+#define SIZE_FORMAT_X_0          \"0x%08\"      PRIxPTR\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -133,2 +133,2 @@\n-    warning(\"outputStream::do_vsnprintf output truncated -- buffer length is \" SIZE_FORMAT\n-            \" bytes but \" SIZE_FORMAT \" bytes are needed.\",\n+    warning(\"outputStream::do_vsnprintf output truncated -- buffer length is %zu\"\n+            \" bytes but %zu bytes are needed.\",\n@@ -390,1 +390,1 @@\n-    assert(false, \"bad length? (\" SIZE_FORMAT \")\", len);\n+    assert(false, \"bad length? (%zu)\", len);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-               \" bytes, each \" SIZE_FORMAT,\n+               \" bytes, each %zu\",\n@@ -140,1 +140,1 @@\n-               \" bytes, each \" SIZE_FORMAT,\n+               \" bytes, each %zu\",\n","filename":"src\/hotspot\/share\/utilities\/tableStatistics.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -219,2 +219,2 @@\n-    st->print_cr(\"Current Stack Pointer: \" PTR_FORMAT \" alloca \" SIZE_FORMAT\n-                 \" of \" SIZE_FORMAT \" bytes available unguarded stack space\",\n+    st->print_cr(\"Current Stack Pointer: \" PTR_FORMAT \" alloca %zu\"\n+                 \" of %zu bytes available unguarded stack space\",\n@@ -771,1 +771,1 @@\n-          jio_snprintf(buf, sizeof(buf), SIZE_FORMAT, _size);\n+          jio_snprintf(buf, sizeof(buf), \"%zu\", _size);\n@@ -937,1 +937,1 @@\n-      st->print(\",  free space=\" SIZE_FORMAT \"k\", free_stack_size);\n+      st->print(\",  free space=%zuk\", free_stack_size);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}