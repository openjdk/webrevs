{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,0 +331,9 @@\n+    @Override\n+    public void toFront() {\n+        if ((state & Frame.ICONIFIED) != 0) {\n+            changeState(state & ~Frame.ICONIFIED);\n+        }\n+\n+        super.toFront();\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XFramePeer.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,0 +68,10 @@\n+    @Override\n+    public void toFront() {\n+        int state = getState();\n+        if ((state & Frame.ICONIFIED) != 0) {\n+            setState(state & ~Frame.ICONIFIED);\n+        }\n+\n+        super.toFront();\n+    }\n+\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WFramePeer.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @key headful\n+ * @bug 8326497\n+ * @summary Verifies that an iconified window is restored with Window.toFront()\n+ * @library \/test\/lib\n+ * @run main IconifiedToFront\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+\n+public class IconifiedToFront {\n+    private static final int PAUSE_MS = 500;\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!Toolkit.getDefaultToolkit().isFrameStateSupported(Frame.ICONIFIED)) {\n+            return; \/\/ Nothing to test\n+        }\n+\n+        robot = new Robot();\n+        IconifiedToFront.test1();\n+        IconifiedToFront.test2();\n+    }\n+\n+    private static void test1() {\n+        Frame frame1 = new Frame(\"IconifiedToFront Test 1\");\n+        try {\n+            frame1.setLayout(new FlowLayout());\n+            frame1.setSize(400, 300);\n+            frame1.setBackground(Color.green);\n+            frame1.add(new Label(\"test\"));\n+            frame1.setVisible(true);\n+            pause();\n+            frame1.setExtendedState(Frame.ICONIFIED);\n+            pause();\n+            frame1.toFront();\n+            pause();\n+            int state = frame1.getExtendedState();\n+            if ((state & Frame.ICONIFIED) != 0) {\n+                throw new RuntimeException(\"Test Failed: state is still ICONIFIED: \" + state);\n+            }\n+        } finally {\n+            frame1.dispose();\n+        }\n+    }\n+\n+    private static void test2() {\n+        Frame frame1 = new Frame(\"IconifiedToFront Test 3\");\n+        try {\n+            frame1.setLayout(new FlowLayout());\n+            frame1.setSize(400, 300);\n+            frame1.setBackground(Color.green);\n+            frame1.add(new Label(\"test\"));\n+            frame1.setUndecorated(true);\n+            frame1.setVisible(true);\n+            pause();\n+            frame1.setExtendedState(Frame.ICONIFIED);\n+            pause();\n+            frame1.toFront();\n+            pause();\n+            int state = frame1.getExtendedState();\n+            if ((state & Frame.ICONIFIED) != 0) {\n+                throw new RuntimeException(\"Test Failed: state is still ICONIFIED: \" + state);\n+            }\n+        } finally {\n+            frame1.dispose();\n+        }\n+    }\n+\n+    private static void pause() {\n+        robot.delay(PAUSE_MS);\n+        robot.waitForIdle();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/Iconify\/IconifiedToFront.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"}]}