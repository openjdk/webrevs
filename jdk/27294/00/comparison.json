{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-    private UDPThread udpThread;\n-    private ServerSocketThread serverSocketThread;\n+    private final UDPThread udpThread;\n+    private final ServerSocketThread serverSocketThread;\n@@ -42,1 +42,1 @@\n-    StressNativeSignal() {\n+    StressNativeSignal() throws IOException {\n@@ -44,3 +44,1 @@\n-        if (serverSocketThread != null) {\n-            serverSocketThread.start();\n-        }\n+        serverSocketThread.start();\n@@ -49,3 +47,1 @@\n-        if (udpThread != null) {\n-            udpThread.start();\n-        }\n+        udpThread.start();\n@@ -54,9 +50,2 @@\n-    private UDPThread initUDPThread() {\n-        UDPThread aUDPThread = null;\n-        try {\n-            aUDPThread = new UDPThread();\n-        } catch (Exception z) {\n-            System.err.println(\"failed to create and start a UDPThread\");\n-            z.printStackTrace();\n-        }\n-        return aUDPThread;\n+    private UDPThread initUDPThread() throws IOException {\n+        return new UDPThread();\n@@ -65,10 +54,2 @@\n-    private ServerSocketThread initServerSocketThread() {\n-        ServerSocketThread aServerSocketThread = null;\n-        try {\n-            aServerSocketThread = new ServerSocketThread();\n-\n-        } catch (Exception z) {\n-            System.err.println(\"failed to create and start a ServerSocketThread\");\n-            z.printStackTrace();\n-        }\n-        return aServerSocketThread;\n+    private ServerSocketThread initServerSocketThread() throws IOException {\n+        return new ServerSocketThread();\n@@ -83,2 +64,2 @@\n-    public void shutdown() {\n-        if ((udpThread != null) && udpThread.isAlive()) {\n+    public void shutdown() throws InterruptedException, IOException {\n+        if (udpThread != null && udpThread.isAlive()) {\n@@ -86,5 +67,2 @@\n-            try {\n-                udpThread.join();\n-            } catch (Exception z) {\n-                z.printStackTrace(System.err);\n-            }\n+            udpThread.join();\n+\n@@ -95,1 +73,1 @@\n-        if ((serverSocketThread != null) && (serverSocketThread.isAlive())) {\n+        if (serverSocketThread != null && serverSocketThread.isAlive()) {\n@@ -97,5 +75,1 @@\n-            try {\n-                serverSocketThread.join();\n-            } catch (Exception z) {\n-                z.printStackTrace(System.err);\n-            }\n+            serverSocketThread.join();\n@@ -107,2 +81,2 @@\n-    public void waitForTestThreadsToStart() {\n-        if ((udpThread != null) && udpThread.isAlive()) {\n+    public void waitForTestThreadsToStart() throws InterruptedException {\n+        if (udpThread != null && udpThread.isAlive()) {\n@@ -111,1 +85,1 @@\n-        if ((serverSocketThread != null) && (serverSocketThread.isAlive())) {\n+        if (serverSocketThread != null && serverSocketThread.isAlive()) {\n@@ -118,1 +92,1 @@\n-        private ServerSocket socket;\n+        private final ServerSocket socket;\n@@ -121,1 +95,1 @@\n-        public ServerSocketThread () throws Exception {\n+        public ServerSocketThread() throws IOException {\n@@ -132,1 +106,1 @@\n-            } catch (Exception z) {\n+            } catch (IOException z) {\n@@ -144,1 +118,1 @@\n-            } catch (Exception z) {\n+            } catch (IOException z) {\n@@ -153,1 +127,1 @@\n-            } catch (Exception z) {\n+            } catch (InterruptedException z) {\n@@ -161,1 +135,1 @@\n-        private DatagramChannel channel;\n+        private final DatagramChannel channel;\n@@ -165,2 +139,1 @@\n-        public UDPThread () throws Exception {\n-\n+        public UDPThread() throws IOException {\n@@ -194,1 +167,1 @@\n-            } catch (Exception z) {\n+            } catch (IOException z) {\n@@ -204,1 +177,1 @@\n-            } catch (Exception z) {\n+            } catch (InterruptedException z) {\n@@ -206,1 +179,1 @@\n-                \/\/ ignore\n+                \/\/ ignore;\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/StressNativeSignal.java","additions":29,"deletions":56,"binary":false,"changes":85,"status":"modified"}]}