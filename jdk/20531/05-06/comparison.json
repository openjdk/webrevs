{"files":[{"patch":"@@ -55,2 +55,2 @@\n-    static double min_stack_usage_with_pretouch = 1 * MB;\n-    static double max_stack_usage_with_pretouch = 0.75 * threadStackSizeMB * MB;\n+    static long min_stack_usage_with_pretouch = 1 * MB;\n+    static long max_stack_usage_with_pretouch = (long)(0.75 * threadStackSizeMB * MB);\n@@ -81,7 +81,0 @@\n-    private static class ReservedCommitted {\n-     public long reserved, committed;\n-     public ReservedCommitted(long r, long c) {\n-      reserved = r;\n-      committed = c;\n-     }\n-    }\n@@ -89,1 +82,1 @@\n-    private static ReservedCommitted runPreTouchTest(boolean preTouch) throws Exception {\n+    private static long runPreTouchTest(boolean preTouch) throws Exception {\n@@ -149,1 +142,1 @@\n-      return new ReservedCommitted(reserved, committed);\n+      return committed;\n@@ -172,3 +165,3 @@\n-          ReservedCommitted pretouch_result = runPreTouchTest(true);\n-          ReservedCommitted no_pretouch_result = runPreTouchTest(false);\n-          if (pretouch_result.reserved == 0 || no_pretouch_result.reserved == 0) {\n+          long pretouch_committed = runPreTouchTest(true);\n+          long no_pretouch_committed = runPreTouchTest(false);\n+          if (pretouch_committed == 0 || no_pretouch_committed == 0) {\n@@ -177,11 +170,6 @@\n-          double ratio_with = ((double)pretouch_result.committed) \/ pretouch_result.reserved;\n-          double ratio_without = ((double)no_pretouch_result.committed) \/ no_pretouch_result.reserved;\n-          System.out.println(\"ratio with PreTouch: \" + ratio_with + \" w\/out: \" + ratio_without);\n-          if (ratio_without > 0.50) {\n-            throw new RuntimeException(\"Expected a lower ratio between stack committed and reserved.\");\n-          }\n-          if (ratio_with < ratio_without) {\n-            throw new RuntimeException(\"Expected a higher ratio between stack committed and reserved.\");\n-          }\n-          if (ratio_with > max_stack_usage_with_pretouch) {\n-            throw new RuntimeException(\"Expected a higher ratio of committed to reserved of stack with pretouch.\");\n+          long expected_delta = numThreads * (max_stack_usage_with_pretouch - min_stack_usage_with_pretouch);\n+          long actual_delta = pretouch_committed - no_pretouch_committed;\n+          if (pretouch_committed <= (no_pretouch_committed + expected_delta)) {\n+            throw new RuntimeException(\"Expected a higher amount of committed with pretouch stacks\" +\n+                                       \"PreTouch amount: \" + pretouch_committed +\n+                                       \"NoPreTouch amount: \" + (no_pretouch_committed + expected_delta));\n@@ -189,2 +177,0 @@\n-          double expected_delta = numThreads * (max_stack_usage_with_pretouch - min_stack_usage_with_pretouch);\n-          double actual_delta = pretouch_result.committed - no_pretouch_result.committed;\n@@ -193,1 +179,1 @@\n-                                       \"Expected: \" + expected_delta + \" Acvtual: \" + actual_delta);\n+                                       \"Expected: \" + expected_delta + \" Actual: \" + actual_delta);\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestAlwaysPreTouchStacks.java","additions":14,"deletions":28,"binary":false,"changes":42,"status":"modified"}]}