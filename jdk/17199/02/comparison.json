{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -980,2 +980,2 @@\n-    assert(is_CallStaticJava()  && cg->is_mh_late_inline() ||\n-           is_CallDynamicJava() && cg->is_virtual_late_inline(), \"mismatch\");\n+    assert((is_CallStaticJava()  && cg->is_mh_late_inline()) ||\n+           (is_CallDynamicJava() && cg->is_virtual_late_inline()), \"mismatch\");\n@@ -1641,2 +1641,2 @@\n-             length_type->is_con() && narrow_length_type->is_con() &&\n-                (narrow_length_type->_hi <= length_type->_lo) ||\n+             (length_type->is_con() && narrow_length_type->is_con() &&\n+              (narrow_length_type->_hi <= length_type->_lo)) ||\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,2 +166,2 @@\n-      assert(_is_vector && (_num_regs == RegMask::SlotsPerVecA) ||\n-             _is_predicate && (_num_regs == RegMask::SlotsPerRegVectMask), \"unexpected scalable reg\");\n+      assert((_is_vector && (_num_regs == RegMask::SlotsPerVecA)) ||\n+             (_is_predicate && (_num_regs == RegMask::SlotsPerRegVectMask)), \"unexpected scalable reg\");\n","filename":"src\/hotspot\/share\/opto\/chaitin.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -3143,2 +3143,2 @@\n-            n->is_Load() && (n->as_Load()->bottom_type()->isa_oopptr() ||\n-                             LoadNode::is_immutable_value(n->in(MemNode::Address))),\n+            (n->is_Load() && (n->as_Load()->bottom_type()->isa_oopptr() ||\n+                              LoadNode::is_immutable_value(n->in(MemNode::Address)))),\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1124,1 +1124,1 @@\n-         (n_ptn != nullptr) && (n_ptn->ideal_node() != nullptr),\n+         ((n_ptn != nullptr) && (n_ptn->ideal_node() != nullptr)),\n@@ -3859,1 +3859,1 @@\n-                 tn_t != nullptr && !tinst->maybe_java_subtype_of(tn_t),\n+                 (tn_t != nullptr && !tinst->maybe_java_subtype_of(tn_t)),\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,2 +153,3 @@\n-  assert(!is_decoden || (val->in(0) == nullptr) && val->is_Mach() &&\n-         (val->as_Mach()->ideal_Opcode() == Op_DecodeN), \"sanity\");\n+  assert(!is_decoden ||\n+         ((val->in(0) == nullptr) && val->is_Mach() &&\n+          (val->as_Mach()->ideal_Opcode() == Op_DecodeN)), \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -800,1 +800,2 @@\n-  if ((stride > 0) == (scale > 0) == upper) {\n+  \/\/ same signs and upper, or different signs and not upper.\n+  if (((stride > 0) == (scale > 0)) == upper) {\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -4958,1 +4958,1 @@\n-         alias_idx == Compile::AliasIdxBot && !Compile::current()->do_aliasing(),\n+         (alias_idx == Compile::AliasIdxBot && !Compile::current()->do_aliasing()),\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -791,1 +791,1 @@\n-           _oop_alias_idx == Compile::AliasIdxBot && !Compile::current()->do_aliasing(),\n+           (_oop_alias_idx == Compile::AliasIdxBot && !Compile::current()->do_aliasing()),\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -451,1 +451,1 @@\n-    assert( i == 0 && this == n ||\n+    assert( (i == 0 && this == n) ||\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}