{"files":[{"patch":"@@ -161,11 +161,1 @@\n-        requireNonNull(descriptor);\n-        if (descriptor.isEmpty()) {\n-            throw new IllegalArgumentException(\n-                    \"not a valid reference type descriptor: \" + descriptor);\n-        }\n-        int depth = ConstantUtils.arrayDepth(descriptor);\n-        if (depth > ConstantUtils.MAX_ARRAY_TYPE_DESC_DIMENSIONS) {\n-            throw new IllegalArgumentException(\n-                    \"Cannot create an array type descriptor with more than \" +\n-                    ConstantUtils.MAX_ARRAY_TYPE_DESC_DIMENSIONS + \" dimensions\");\n-        }\n+        \/\/ implicit null-check\n@@ -173,1 +163,2 @@\n-               ? Wrapper.forBasicType(descriptor.charAt(0)).primitiveClassDescriptor()\n+               ? Wrapper.forPrimitiveType(descriptor.charAt(0)).primitiveClassDescriptor()\n+               \/\/ will throw IAE on descriptor.length == 0 or if array dimensions too long\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ClassDesc.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-        requireNonNull(descriptor);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ReferenceClassDescImpl.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}