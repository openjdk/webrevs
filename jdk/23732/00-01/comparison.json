{"files":[{"patch":"@@ -38,1 +38,1 @@\n-public static extern IntPtr ExtractIcon(IntPtr hInst, string lpszExeFileName, int nIconIndex);\n+public static extern uint ExtractIconEx(string szFileName, int nIconIndex, IntPtr[] phiconLarge, IntPtr[] phiconSmall, uint nIcons);\n@@ -42,5 +42,8 @@\n-$IconCount = $Shell32::ExtractIcon(0, $InputExecutable, -1);\n-if ($IconCount -ne 0) {\n-  # Execeutable has an icon.\n-  $IconHandle = $Shell32::ExtractIcon(0, $InputExecutable, 0);\n-  $Icon = [System.Drawing.Icon]::FromHandle($IconHandle);\n+$IconHandleArray = New-Object IntPtr[] 1 # Allocate IntPtr[1] to recieve HICON\n+$IconCount = $Shell32::ExtractIconEx($InputExecutable, 0, $IconHandleArray, $null, 1);\n+if ($IconCount -eq [uint32]::MaxValue) {\n+  Write-Error \"Failed to read icon.\"\n+  exit 100\n+} elseif ($IconCount -ne 0) {\n+  # Executable has an icon.\n+  $Icon = [System.Drawing.Icon]::FromHandle($IconHandleArray[0]);\n","filename":"test\/jdk\/tools\/jpackage\/resources\/read-executable-icon.ps1","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}