{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n@@ -42,1 +41,0 @@\n-        final var exception = new AtomicReference<Exception>();\n@@ -52,1 +50,3 @@\n-                        if (len < 0) break;\n+                        if (len < 0) {\n+                            break;\n+                        }\n@@ -59,0 +59,2 @@\n+                System.out.println(\"Writer Thread Error: \");\n+                e.printStackTrace(System.out);\n@@ -60,1 +62,0 @@\n-                exception.set(e);\n@@ -67,2 +68,5 @@\n-                if (factory.generateCertificates(inputStream).size() != 5) {\n-                    throw new Exception(\"Not all certs read\");\n+                final var factorySize = factory.generateCertificates(inputStream).size();\n+                if (factorySize != 5) {\n+                    throw new Exception(\n+                            String.format(\"Not all certs read. %d found 5 expected\", factorySize)\n+                    );\n@@ -72,0 +76,2 @@\n+                System.out.println(\"Reader Thread Error: \");\n+                e.printStackTrace(System.out);\n@@ -73,1 +79,0 @@\n-                exception.set(e);\n@@ -84,1 +89,3 @@\n-            throw exception.get();\n+            throw new RuntimeException(\n+                    \"The test failed, please check the reader and writer threads output\"\n+            );\n","filename":"test\/jdk\/java\/security\/cert\/CertificateFactory\/SlowStream.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}