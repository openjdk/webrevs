{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -268,7 +269,2 @@\n-        String actualMethod = defaultHeadReq.method();\n-        if (!actualMethod.equals(\"HEAD\")) {\n-            throw new AssertionError(\"failed: expected HEAD method but got method: \" + actualMethod);\n-        }\n-        if (defaultHeadReq.bodyPublisher().isEmpty()) {\n-            throw new AssertionError(\"failed: missing bodyPublisher on HEAD request\");\n-        }\n+        assertEquals(\"HEAD\", defaultHeadReq.method(), \"Method\");\n+        assertEquals(defaultHeadReq.bodyPublisher().isEmpty(), false, \"Body publisher absence\");\n@@ -304,7 +300,1 @@\n-\n-        if (expectedMethod.equals(method)) {\n-            System.out.println(\"success: \" + name);\n-        } else {\n-            throw new AssertionError(\"failed: \" + name\n-                    + \". Expected \" + expectedMethod + \", got \" + method);\n-        }\n+        assertEquals(method, expectedMethod, \"Method\");\n@@ -407,5 +397,5 @@\n-        assert request.uri().equals(copiedRequest.uri());\n-        assert request.method().equals(copiedRequest.method());\n-        assert request.expectContinue() == copiedRequest.expectContinue();\n-        assert request.timeout().equals(copiedRequest.timeout());\n-        assert request.version().equals(copiedRequest.version());\n+        assertEquals(request.uri(), copiedRequest.uri(), \"URI\");\n+        assertEquals(request.method(), copiedRequest.method(), \"Method\");\n+        assertEquals(request.expectContinue(), copiedRequest.expectContinue(), \"Expect continue setting\");\n+        assertEquals(request.timeout(), copiedRequest.timeout(), \"Timeout\");\n+        assertEquals(request.version(), copiedRequest.version(), \"Version\");\n@@ -414,2 +404,4 @@\n-        assert request.headers().map().equals(Map.of(\"X-Foo\", List.of(\"1\")));\n-        assert copiedRequest.headers().map().equals(Map.of(\"X-Foo\", List.of(\"1\", \"2\"), \"X-Bar\", List.of(\"3\")));\n+        assertEquals(request.headers().map(), Map.of(\"X-Foo\", List.of(\"1\")), \"Request headers\");\n+        assertEquals(copiedRequest.headers().map(), Map.of(\"X-Foo\", List.of(\"1\", \"2\"), \"X-Bar\", List.of(\"3\")), \"Copied request headers\");\n+\n+    }\n@@ -417,0 +409,5 @@\n+    private static void assertEquals(Object expected, Object actual, Object name) {\n+        if (!Objects.equals(expected, actual)) {\n+            String message = String.format(\"%s mismatch!%nExpected: %s%nActual: %s\", name, expected, actual);\n+            throw new AssertionError(message);\n+        }\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpRequestBuilderTest.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"}]}