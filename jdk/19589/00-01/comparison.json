{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -272,1 +272,0 @@\n-macro(Opaque3)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3207,1 +3207,0 @@\n-  case Op_Opaque3:\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2431,1 +2431,0 @@\n-               n->Opcode() == Op_Opaque3   ||\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,10 +48,0 @@\n-\/\/ Do NOT remove the opaque node until no more loop opts can happen.\n-Node* Opaque3Node::Identity(PhaseGVN* phase) {\n-  if (phase->C->post_loop_opts_phase()) {\n-    return in(1);\n-  } else {\n-    phase->C->record_for_post_loop_opts_igvn(this);\n-  }\n-  return this;\n-}\n-\n@@ -95,6 +85,0 @@\n-\/\/ Do not allow value-numbering\n-uint Opaque3Node::hash() const { return NO_HASH; }\n-bool Opaque3Node::cmp(const Node &n) const {\n-  return (&n == this);          \/\/ Always fail except on self\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/opaquenode.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -94,18 +94,0 @@\n-\/\/------------------------------Opaque3Node------------------------------------\n-\/\/ A node to prevent unwanted optimizations. Will be optimized only during\n-\/\/ macro nodes expansion.\n-class Opaque3Node : public Node {\n-  int _opt; \/\/ what optimization it was used for\n-  virtual uint hash() const;\n-  virtual bool cmp(const Node &n) const;\n-  public:\n-  Opaque3Node(Compile* C, Node* n, int opt) : Node(0, n), _opt(opt) {\n-    \/\/ Put it on the Macro nodes list to removed during macro nodes expansion.\n-    init_flags(Flag_is_macro);\n-    C->add_macro_node(this);\n-  }\n-  virtual int Opcode() const;\n-  virtual const Type* bottom_type() const { return TypeInt::INT; }\n-  virtual Node* Identity(PhaseGVN* phase);\n-};\n-\n","filename":"src\/hotspot\/share\/opto\/opaquenode.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"}]}