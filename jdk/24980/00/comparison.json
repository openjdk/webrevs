{"files":[{"patch":"@@ -705,0 +705,3 @@\n+  product(bool, PrintVMInfoAtExit, false, DIAGNOSTIC,                       \\\n+          \"Executes the the VM.info diagnostic command at exit\")            \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -335,0 +335,7 @@\n+  if (PrintVMInfoAtExit) {\n+    \/\/ Use an intermediate stream to prevent deadlocking on tty_lock\n+    stringStream ss;\n+    VMError::print_vm_info(&ss);\n+    tty->print_raw(ss.base());\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary Test PrintVMInfoAtExit\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @requires vm.flagless\n+ * @requires vm.bits == \"64\"\n+ * @run driver PrintVMInfoAtExitTest\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class PrintVMInfoAtExitTest {\n+\n+  public static void main(String[] args) throws Exception {\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-Xmx64M\", \"-Xms64M\",\n+            \"-XX:-CreateCoredumpOnCrash\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+PrintVMInfoAtExit\",\n+            \"-XX:NativeMemoryTracking=summary\",\n+            \"-XX:CompressedClassSpaceSize=256m\",\n+            \"-version\");\n+\n+    OutputAnalyzer output_detail = new OutputAnalyzer(pb.start());\n+    output_detail.shouldContain(\"# JRE version:\");\n+    output_detail.shouldContain(\"--  S U M M A R Y --\");\n+    output_detail.shouldContain(\"Command Line: -Xmx64M -Xms64M -XX:-CreateCoredumpOnCrash -XX:+UnlockDiagnosticVMOptions -XX:+PrintVMInfoAtExit -XX:NativeMemoryTracking=summary -XX:CompressedClassSpaceSize=256m\");\n+    output_detail.shouldContain(\"Native Memory Tracking:\");\n+    output_detail.shouldContain(\"Java Heap (reserved=65536KB, committed=65536KB)\");\n+  }\n+}\n+\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/PrintVMInfoAtExitTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}