{"files":[{"patch":"@@ -483,1 +483,1 @@\n-        Logic(ClassModel classModel){\n+        Logic(ClassModel classModel) {\n@@ -640,1 +640,1 @@\n-        char nameAndTypeMark(Utf8Entry name, Utf8Entry type){\n+        char nameAndTypeMark(Utf8Entry name, Utf8Entry type) {\n@@ -731,1 +731,1 @@\n-            for(Instruction instruction : instructions){\n+            for (Instruction instruction : instructions) {\n@@ -735,1 +735,1 @@\n-                switch (bc){\n+                switch (bc) {\n@@ -888,1 +888,1 @@\n-                                if(args.equals(List.of(\"lookup\"))) {\n+                                if (args.equals(List.of(\"lookup\"))) {\n@@ -907,1 +907,1 @@\n-                                if(args.size() == 1 ) {\n+                                if (args.size() == 1) {\n@@ -923,1 +923,1 @@\n-                        if(!hasReceiver && ownMethod != null) {\n+                        if (!hasReceiver && ownMethod != null) {\n@@ -937,1 +937,1 @@\n-                        if(bsmArgs != null){\n+                        if (bsmArgs != null) {\n@@ -949,1 +949,1 @@\n-                        if(branchCount == 2 && UNKNOWN_CON.equals(arg))\n+                        if (branchCount == 2 && UNKNOWN_CON.equals(arg))\n@@ -951,1 +951,1 @@\n-                        if((arg instanceof PoolEntry) && ((PoolEntry) arg).tag() == wantedTag)\n+                        if ((arg instanceof PoolEntry) && ((PoolEntry) arg).tag() == wantedTag)\n@@ -956,1 +956,1 @@\n-                        if(jvm.stackMotion(instruction.opcode().bytecode())) break;\n+                        if (jvm.stackMotion(instruction.opcode().bytecode())) break;\n","filename":"test\/jdk\/java\/lang\/invoke\/indify\/Indify.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}