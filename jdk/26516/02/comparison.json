{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.Arrays;\n@@ -428,2 +429,2 @@\n-                ? ((ECPrivateKeyImpl)priv).getArrayS()\n-                : ECUtil.sArray(priv.getS(), priv.getParams());\n+               ? ((ECPrivateKeyImpl)priv).getArrayS()\n+               : ECUtil.sArray(priv.getS(), priv.getParams());\n@@ -439,1 +440,8 @@\n-                return ops.signDigest(s, digest, seed);\n+                \/\/ a new allocation for this value, rather than just\n+                \/\/ returning it, is a trade-off to zero-out the local\n+                \/\/ value for \"s\" when necessary\n+                byte[] retValue = ops.signDigest(s, digest, seed);\n+                if (!(priv instanceof ECPrivateKeyImpl)) {\n+                    Arrays.fill(s, (byte)0x00);\n+                }\n+                return retValue;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDSASignature.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}