{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2626,0 +2626,32 @@\n+#ifdef DEBUG_THREADNAME\n+static void\n+setThreadName(ThreadNode *node)\n+{\n+  \/*\n+   * Sometimes the debuggee changes the thread name, so we need to fetch\n+   * and set it again.\n+   *\/\n+  jvmtiThreadInfo info;\n+  jvmtiError error;\n+\n+  memset(&info, 0, sizeof(info));\n+  error = JVMTI_FUNC_PTR(gdata->jvmti,GetThreadInfo)\n+    (gdata->jvmti, node->thread, &info);\n+  if (info.name != NULL) {\n+    strncpy(node->name, info.name, sizeof(node->name) - 1);\n+    jvmtiDeallocate(info.name);\n+  }\n+}\n+#endif\n+\n+#if 0\n+static jint\n+getThreadState(ThreadNode *node)\n+{\n+  jint state = 0;\n+  jvmtiError error = FUNC_PTR(gdata->jvmti,GetThreadState)\n+    (gdata->jvmti, node->thread, &state);\n+  return state;\n+}\n+#endif\n+\n@@ -2628,1 +2660,1 @@\n-    tty_message(\"  Thread: node = %p, jthread = %p\", node, node->thread);\n+    tty_message(\"Thread: node = %p, jthread = %p\", node, node->thread);\n@@ -2630,0 +2662,1 @@\n+    setThreadName(node);\n@@ -2635,0 +2668,10 @@\n+#if 0\n+    tty_message(\"\\tsuspendAllCount: %d\", suspendAllCount);\n+    tty_message(\"\\tthreadState: 0x%x\", getThreadState(node));\n+    tty_message(\"\\ttoBeResumed: %d\", node->toBeResumed);\n+    tty_message(\"\\tis_vthread: %d\", node->is_vthread);\n+    tty_message(\"\\tcurrentInvoke.pending: %d\", node->currentInvoke.pending);\n+    tty_message(\"\\tcurrentInvoke.started: %d\", node->currentInvoke.started);\n+    tty_message(\"\\tcurrentInvoke.available: %d\", node->currentInvoke.available);\n+    tty_message(\"\\tobjID: %d\", commonRef_refToID(getEnv(), node->thread));\n+#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":45,"deletions":2,"binary":false,"changes":47,"status":"modified"}]}