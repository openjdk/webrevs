{"files":[{"patch":"@@ -172,1 +172,1 @@\n-size_t    os::Aix::_physical_memory = 0;\n+physical_memory_size_type    os::Aix::_physical_memory = 0;\n@@ -257,1 +257,1 @@\n-bool os::free_memory(size_t& value) {\n+bool os::free_memory(physical_memory_size_type& value) {\n@@ -261,1 +261,1 @@\n-bool os::available_memory(size_t& value) {\n+bool os::available_memory(physical_memory_size_type& value) {\n@@ -265,1 +265,1 @@\n-bool os::Aix::available_memory(size_t& value) {\n+bool os::Aix::available_memory(physical_memory_size_type& value) {\n@@ -268,1 +268,1 @@\n-    value = static_cast<size_t>(mi.real_free);\n+    value = static_cast<physical_memory_size_type>(mi.real_free);\n@@ -275,1 +275,1 @@\n-bool os::total_swap_space(size_t& value) {\n+bool os::total_swap_space(physical_memory_size_type& value) {\n@@ -280,1 +280,1 @@\n-  value = static_cast<size_t>(memory_info.pgsp_total * 4 * K);\n+  value = static_cast<physical_memory_size_type>(memory_info.pgsp_total * 4 * K);\n@@ -284,1 +284,1 @@\n-bool os::free_swap_space(size_t& value) {\n+bool os::free_swap_space(physical_memory_size_type& value) {\n@@ -289,1 +289,1 @@\n-  value = static_cast<size_t>(memory_info.pgsp_free * 4 * K);\n+  value = static_cast<physical_memory_size_type>(memory_info.pgsp_free * 4 * K);\n@@ -293,1 +293,1 @@\n-size_t os::physical_memory() {\n+physical_memory_size_type os::physical_memory() {\n@@ -332,1 +332,1 @@\n-  _physical_memory = static_cast<size_t>(mi.real_total);\n+  _physical_memory = static_cast<physical_memory_size_type>(mi.real_total);\n@@ -2195,1 +2195,1 @@\n-  trcVerbose(\"physical memory: %zu\", Aix::_physical_memory);\n+  trcVerbose(\"physical memory: \" PHYS_MEM_TYPE_FORMAT, Aix::_physical_memory);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static size_t _physical_memory;\n+  static physical_memory_size_type _physical_memory;\n@@ -57,3 +57,3 @@\n-  static bool available_memory(size_t& value);\n-  static bool free_memory(size_t& value);\n-  static size_t physical_memory() { return _physical_memory; }\n+  static bool available_memory(physical_memory_size_type& value);\n+  static bool free_memory(physical_memory_size_type& value);\n+  static physical_memory_size_type physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-size_t os::Bsd::_physical_memory = 0;\n+physical_memory_size_type os::Bsd::_physical_memory = 0;\n@@ -136,1 +136,1 @@\n-bool os::available_memory(size_t& value) {\n+bool os::available_memory(physical_memory_size_type& value) {\n@@ -140,1 +140,1 @@\n-bool os::free_memory(size_t& value) {\n+bool os::free_memory(physical_memory_size_type& value) {\n@@ -147,2 +147,2 @@\n-bool os::Bsd::available_memory(size_t& value) {\n-  uint64_t available = static_cast<uint64_t>(physical_memory() >> 2);\n+bool os::Bsd::available_memory(physical_memory_size_type& value) {\n+  physical_memory_size_type available = physical_memory() >> 2;\n@@ -163,1 +163,1 @@\n-  value = static_cast<size_t>(available);\n+  value = available;\n@@ -183,1 +183,1 @@\n-bool os::total_swap_space(size_t& value) {\n+bool os::total_swap_space(physical_memory_size_type& value) {\n@@ -190,1 +190,1 @@\n-  value = static_cast<size_t>(vmusage.xsu_total);\n+  value = static_cast<physical_memory_size_type>(vmusage.xsu_total);\n@@ -197,1 +197,1 @@\n-bool os::free_swap_space(size_t& value) {\n+bool os::free_swap_space(physical_memory_size_type& value) {\n@@ -204,1 +204,1 @@\n-  value = static_cast<size_t>(vmusage.xsu_avail);\n+  value = static_cast<physical_memory_size_type>(vmusage.xsu_avail);\n@@ -211,1 +211,1 @@\n-size_t os::physical_memory() {\n+physical_memory_size_type os::physical_memory() {\n@@ -289,1 +289,1 @@\n-    _physical_memory = static_cast<size_t>(mem_val);\n+    _physical_memory = static_cast<physical_memory_size_type>(mem_val);\n@@ -300,1 +300,1 @@\n-    _physical_memory = MIN2(_physical_memory, static_cast<size_t>(limits.rlim_cur));\n+    _physical_memory = MIN2(_physical_memory, static_cast<physical_memory_size_type>(limits.rlim_cur));\n@@ -1472,2 +1472,2 @@\n-  size_t phys_mem = os::physical_memory();\n-  st->print(\", physical %zuk\",\n+  physical_memory_size_type phys_mem = os::physical_memory();\n+  st->print(\", physical \" PHYS_MEM_TYPE_FORMAT \"k\",\n@@ -1475,1 +1475,1 @@\n-  size_t avail_mem = 0;\n+  physical_memory_size_type avail_mem = 0;\n@@ -1477,1 +1477,1 @@\n-  st->print(\"(%zuk free)\",\n+  st->print(\"(\" PHYS_MEM_TYPE_FORMAT \"k free)\",\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  static size_t _physical_memory;\n+  static physical_memory_size_type _physical_memory;\n@@ -48,3 +48,3 @@\n-  static bool available_memory(size_t& value);\n-  static bool free_memory(size_t& value);\n-  static size_t physical_memory() { return _physical_memory; }\n+  static bool available_memory(physical_memory_size_type& value);\n+  static bool free_memory(physical_memory_size_type& value);\n+  static physical_memory_size_type physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-size_t os::Linux::_physical_memory = 0;\n+physical_memory_size_type os::Linux::_physical_memory = 0;\n@@ -232,1 +232,1 @@\n-bool os::available_memory(size_t& value) {\n+bool os::available_memory(physical_memory_size_type& value) {\n@@ -236,1 +236,1 @@\n-bool os::Linux::available_memory(size_t& value) {\n+bool os::Linux::available_memory(physical_memory_size_type& value) {\n@@ -240,1 +240,1 @@\n-    value = static_cast<size_t>(avail_mem);\n+    value = static_cast<physical_memory_size_type>(avail_mem);\n@@ -256,1 +256,1 @@\n-    size_t free_mem = 0;\n+    physical_memory_size_type free_mem = 0;\n@@ -263,1 +263,1 @@\n-  value = static_cast<size_t>(avail_mem);\n+  value = static_cast<physical_memory_size_type>(avail_mem);\n@@ -267,1 +267,1 @@\n-bool os::free_memory(size_t& value) {\n+bool os::free_memory(physical_memory_size_type& value) {\n@@ -271,1 +271,1 @@\n-bool os::Linux::free_memory(size_t& value) {\n+bool os::Linux::free_memory(physical_memory_size_type& value) {\n@@ -277,1 +277,1 @@\n-    value = static_cast<size_t>(free_mem);\n+    value = static_cast<physical_memory_size_type>(free_mem);\n@@ -287,1 +287,1 @@\n-  value = static_cast<size_t>(free_mem);\n+  value = static_cast<physical_memory_size_type>(free_mem);\n@@ -291,1 +291,1 @@\n-bool os::total_swap_space(size_t& value) {\n+bool os::total_swap_space(physical_memory_size_type& value) {\n@@ -296,1 +296,1 @@\n-      value = static_cast<size_t>(memory_and_swap_limit_in_bytes - memory_limit_in_bytes);\n+      value = static_cast<physical_memory_size_type>(memory_and_swap_limit_in_bytes - memory_limit_in_bytes);\n@@ -306,1 +306,1 @@\n-  value = static_cast<size_t>(si.totalswap * si.mem_unit);\n+  value = static_cast<physical_memory_size_type>(si.totalswap) * si.mem_unit;\n@@ -310,1 +310,1 @@\n-static bool host_free_swap_f(size_t& value) {\n+static bool host_free_swap_f(physical_memory_size_type& value) {\n@@ -317,1 +317,1 @@\n-  value = static_cast<size_t>(si.freeswap * si.mem_unit);\n+  value = static_cast<physical_memory_size_type>(si.freeswap) * si.mem_unit;\n@@ -321,1 +321,1 @@\n-bool os::free_swap_space(size_t& value) {\n+bool os::free_swap_space(physical_memory_size_type& value) {\n@@ -324,2 +324,2 @@\n-  size_t total_swap_space = 0;\n-  size_t host_free_swap = 0;\n+  physical_memory_size_type total_swap_space = 0;\n+  physical_memory_size_type host_free_swap = 0;\n@@ -329,1 +329,1 @@\n-  size_t host_free_swap_val = MIN2(total_swap_space, host_free_swap);\n+  physical_memory_size_type host_free_swap_val = MIN2(total_swap_space, host_free_swap);\n@@ -345,1 +345,1 @@\n-          value = free_swap >= 0 ? static_cast<size_t>(free_swap) : 0;\n+          value = free_swap >= 0 ? static_cast<physical_memory_size_type>(free_swap) : 0;\n@@ -352,1 +352,1 @@\n-                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: %zu\",\n+                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: \" PHYS_MEM_TYPE_FORMAT,\n@@ -359,1 +359,1 @@\n-size_t os::physical_memory() {\n+physical_memory_size_type os::physical_memory() {\n@@ -364,1 +364,1 @@\n-      return static_cast<size_t>(mem_limit);\n+      return static_cast<physical_memory_size_type>(mem_limit);\n@@ -368,2 +368,2 @@\n-  size_t phys_mem = Linux::physical_memory();\n-  log_trace(os)(\"total system memory: %zu\", phys_mem);\n+  physical_memory_size_type phys_mem = Linux::physical_memory();\n+  log_trace(os)(\"total system memory: \" PHYS_MEM_TYPE_FORMAT, phys_mem);\n@@ -553,1 +553,1 @@\n-  _physical_memory = static_cast<size_t>(sysconf(_SC_PHYS_PAGES)) * static_cast<size_t>(sysconf(_SC_PAGESIZE));\n+  _physical_memory = static_cast<physical_memory_size_type>(sysconf(_SC_PHYS_PAGES)) * static_cast<physical_memory_size_type>(sysconf(_SC_PAGESIZE));\n@@ -2612,2 +2612,2 @@\n-  size_t phys_mem = physical_memory();\n-  st->print(\", physical %zuk\",\n+  physical_memory_size_type phys_mem = physical_memory();\n+  st->print(\", physical \" PHYS_MEM_TYPE_FORMAT \"k\",\n@@ -2615,1 +2615,1 @@\n-  size_t avail_mem = 0;\n+  physical_memory_size_type avail_mem = 0;\n@@ -2617,1 +2617,1 @@\n-  st->print(\"(%zuk free)\",\n+  st->print(\"(\" PHYS_MEM_TYPE_FORMAT \"k free)\",\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  static size_t _physical_memory;\n+  static physical_memory_size_type _physical_memory;\n@@ -56,2 +56,2 @@\n-  static bool available_memory(size_t& value);\n-  static bool free_memory(size_t& value);\n+  static bool available_memory(physical_memory_size_type& value);\n+  static bool free_memory(physical_memory_size_type& value);\n@@ -120,1 +120,1 @@\n-  static size_t physical_memory() { return _physical_memory; }\n+  static physical_memory_size_type physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -851,1 +851,1 @@\n-bool os::available_memory(size_t& value) {\n+bool os::available_memory(physical_memory_size_type& value) {\n@@ -855,1 +855,1 @@\n-bool os::free_memory(size_t& value) {\n+bool os::free_memory(physical_memory_size_type& value) {\n@@ -859,1 +859,1 @@\n-bool os::win32::available_memory(size_t& value) {\n+bool os::win32::available_memory(physical_memory_size_type& value) {\n@@ -866,1 +866,1 @@\n-    value = static_cast<size_t>(ms.ullAvailPhys);\n+    value = static_cast<physical_memory_size_type>(ms.ullAvailPhys);\n@@ -874,1 +874,1 @@\n-bool os::total_swap_space(size_t& value) {\n+bool os::total_swap_space(physical_memory_size_type& value) {\n@@ -879,1 +879,1 @@\n-    value = static_cast<size_t>(ms.ullTotalPageFile);\n+    value = static_cast<physical_memory_size_type>(ms.ullTotalPageFile);\n@@ -887,1 +887,1 @@\n-bool os::free_swap_space(size_t& value) {\n+bool os::free_swap_space(physical_memory_size_type& value) {\n@@ -892,1 +892,1 @@\n-    value = static_cast<size_t>(ms.ullAvailPageFile);\n+    value = static_cast<physical_memory_size_type>(ms.ullAvailPageFile);\n@@ -900,1 +900,1 @@\n-size_t os::physical_memory() {\n+physical_memory_size_type os::physical_memory() {\n@@ -3964,1 +3964,1 @@\n-int    os::win32::_processor_type            = 0;\n+int                       os::win32::_processor_type            = 0;\n@@ -3966,2 +3966,2 @@\n-int    os::win32::_processor_level           = 0;\n-size_t os::win32::_physical_memory           = 0;\n+int                       os::win32::_processor_level           = 0;\n+physical_memory_size_type os::win32::_physical_memory           = 0;\n@@ -3969,1 +3969,1 @@\n-bool   os::win32::_is_windows_server         = false;\n+bool                      os::win32::_is_windows_server         = false;\n@@ -3974,1 +3974,1 @@\n-bool   os::win32::_has_exit_bug              = true;\n+bool                      os::win32::_has_exit_bug              = true;\n@@ -3976,4 +3976,4 @@\n-int    os::win32::_major_version             = 0;\n-int    os::win32::_minor_version             = 0;\n-int    os::win32::_build_number              = 0;\n-int    os::win32::_build_minor               = 0;\n+int                       os::win32::_major_version             = 0;\n+int                       os::win32::_minor_version             = 0;\n+int                       os::win32::_build_number              = 0;\n+int                       os::win32::_build_minor               = 0;\n@@ -3981,2 +3981,2 @@\n-bool   os::win32::_processor_group_warning_displayed = false;\n-bool   os::win32::_job_object_processor_group_warning_displayed = false;\n+bool                      os::win32::_processor_group_warning_displayed = false;\n+bool                      os::win32::_job_object_processor_group_warning_displayed = false;\n@@ -4201,1 +4201,1 @@\n-  _physical_memory = static_cast<size_t>(ms.ullTotalPhys);\n+  _physical_memory = static_cast<physical_memory_size_type>(ms.ullTotalPhys);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -41,12 +41,12 @@\n-  static int    _processor_type;\n-  static int    _processor_level;\n-  static size_t _physical_memory;\n-  static bool   _is_windows_server;\n-  static bool   _has_exit_bug;\n-  static bool   _processor_group_warning_displayed;\n-  static bool   _job_object_processor_group_warning_displayed;\n-\n-  static int    _major_version;\n-  static int    _minor_version;\n-  static int    _build_number;\n-  static int    _build_minor;\n+  static int                       _processor_type;\n+  static int                       _processor_level;\n+  static physical_memory_size_type _physical_memory;\n+  static bool                      _is_windows_server;\n+  static bool                      _has_exit_bug;\n+  static bool                      _processor_group_warning_displayed;\n+  static bool                      _job_object_processor_group_warning_displayed;\n+\n+  static int                       _major_version;\n+  static int                       _minor_version;\n+  static int                       _build_number;\n+  static int                       _build_minor;\n@@ -105,3 +105,3 @@\n-  static bool available_memory(size_t& value);\n-  static bool free_memory(size_t& value);\n-  static size_t physical_memory() { return _physical_memory; }\n+  static bool available_memory(physical_memory_size_type& value);\n+  static bool free_memory(physical_memory_size_type& value);\n+  static physical_memory_size_type physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/windows\/os_windows.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1067,1 +1067,1 @@\n-  size_t free_memory = 0;\n+  physical_memory_size_type free_memory = 0;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-  size_t memory = os::physical_memory();\n-  log_info_p(gc, init)(\"Memory: \" PROPERFMT, PROPERFMTARGS(memory));\n+  physical_memory_size_type memory = os::physical_memory();\n+  log_info_p(gc, init)(\"Memory: \" PHYS_MEM_TYPE_FORMAT \"%s\",\n+                       byte_size_in_proper_unit(memory), proper_unit_for_byte_size(memory));\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  const size_t memory = os::physical_memory();\n+  const size_t memory = static_cast<size_t>(os::physical_memory());\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -426,1 +426,1 @@\n-  size_t total_swap_space = 0;\n+  physical_memory_size_type total_swap_space = 0;\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-  u8 totalPhysicalMemory = static_cast<u8>(os::physical_memory());\n+  physical_memory_size_type totalPhysicalMemory = os::physical_memory();\n@@ -534,1 +534,1 @@\n-  size_t avail_mem = 0;\n+  physical_memory_size_type avail_mem = 0;\n@@ -537,1 +537,1 @@\n-  event.set_usedSize(totalPhysicalMemory - static_cast<u8>(avail_mem));\n+  event.set_usedSize(totalPhysicalMemory - avail_mem);\n@@ -543,1 +543,1 @@\n-  size_t total_swap_space = 0;\n+  physical_memory_size_type total_swap_space = 0;\n@@ -547,1 +547,1 @@\n-  size_t free_swap_space = 0;\n+  physical_memory_size_type free_swap_space = 0;\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1361,1 +1361,1 @@\n-    size_t avail_mem = 0;\n+    physical_memory_size_type avail_mem = 0;\n@@ -1365,1 +1365,1 @@\n-      (\"loading name=%s kind=%d (avail_mem=%zuK)\",\n+      (\"loading name=%s kind=%d (avail_mem=\" PHYS_MEM_TYPE_FORMAT \"K)\",\n@@ -1533,1 +1533,1 @@\n-      (\"loaded name=%s (avail_mem=%zuK)\", the_class->external_name(), avail_mem >> 10);\n+      (\"loaded name=%s (avail_mem=\" PHYS_MEM_TYPE_FORMAT \"K)\", the_class->external_name(), avail_mem >> 10);\n@@ -4441,1 +4441,1 @@\n-    size_t avail_mem = 0;\n+    physical_memory_size_type avail_mem = 0;\n@@ -4445,1 +4445,1 @@\n-      (\"redefined name=%s, count=%d (avail_mem=%zuK)\",\n+      (\"redefined name=%s, count=%d (avail_mem=\" PHYS_MEM_TYPE_FORMAT \"K)\",\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2513,1 +2513,1 @@\n-  size_t avail_mem = 0;\n+  physical_memory_size_type avail_mem = 0;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1652,1 +1652,1 @@\n-  size_t phys_mem = os::physical_memory();\n+  physical_memory_size_type phys_mem = os::physical_memory();\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1187,2 +1187,2 @@\n-  size_t phys_mem = physical_memory();\n-  size_t mem = phys_mem\/G;\n+  physical_memory_size_type phys_mem = physical_memory();\n+  physical_memory_size_type mem = phys_mem\/G;\n@@ -1191,1 +1191,1 @@\n-    st->print(\"%d cores, %zuM, \", processor_count(), mem);\n+    st->print(\"%d cores, \" PHYS_MEM_TYPE_FORMAT \"M, \", processor_count(), mem);\n@@ -1193,1 +1193,1 @@\n-    st->print(\"%d cores, %zuG, \", processor_count(), mem);\n+    st->print(\"%d cores, \" PHYS_MEM_TYPE_FORMAT \"G, \", processor_count(), mem);\n@@ -1938,3 +1938,3 @@\n-  bool         result            = false;\n-  const unsigned int    server_processors = 2;\n-  const julong server_memory     = 2UL * G;\n+  bool  result                                    = false;\n+  const unsigned int server_processors            = 2;\n+  const physical_memory_size_type server_memory   = 2UL * G;\n@@ -1944,2 +1944,2 @@\n-  const julong missing_memory   = 256UL * M;\n-  size_t phys_mem = os::physical_memory();\n+  const physical_memory_size_type missing_memory  = 256UL * M;\n+  physical_memory_size_type phys_mem              = os::physical_memory();\n@@ -1948,1 +1948,1 @@\n-      (phys_mem >= (server_memory - missing_memory))) {\n+      (phys_mem >= server_memory - missing_memory)) {\n@@ -2207,1 +2207,1 @@\n-bool os::used_memory(size_t& value) {\n+bool os::used_memory(physical_memory_size_type& value) {\n@@ -2212,1 +2212,1 @@\n-      value = static_cast<size_t>(mem_usage);\n+      value = static_cast<physical_memory_size_type>(mem_usage);\n@@ -2219,1 +2219,1 @@\n-  size_t avail_mem = 0;\n+  physical_memory_size_type avail_mem = 0;\n@@ -2222,1 +2222,1 @@\n-  size_t phys_mem = os::physical_memory();\n+  physical_memory_size_type phys_mem = os::physical_memory();\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -335,3 +335,3 @@\n-  [[nodiscard]] static bool available_memory(size_t& value);\n-  [[nodiscard]] static bool used_memory(size_t& value);\n-  [[nodiscard]] static bool free_memory(size_t& value);\n+  [[nodiscard]] static bool available_memory(physical_memory_size_type& value);\n+  [[nodiscard]] static bool used_memory(physical_memory_size_type& value);\n+  [[nodiscard]] static bool free_memory(physical_memory_size_type& value);\n@@ -339,2 +339,2 @@\n-  [[nodiscard]] static bool total_swap_space(size_t& value);\n-  [[nodiscard]] static bool free_swap_space(size_t& value);\n+  [[nodiscard]] static bool total_swap_space(physical_memory_size_type& value);\n+  [[nodiscard]] static bool free_swap_space(physical_memory_size_type& value);\n@@ -342,1 +342,1 @@\n-  static size_t physical_memory();\n+  static physical_memory_size_type physical_memory();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2613,1 +2613,1 @@\n-    size_t free_memory = 0;\n+    physical_memory_size_type free_memory = 0;\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,0 +138,1 @@\n+#define PHYS_MEM_TYPE_FORMAT     \"%\"          PRIu64\n@@ -420,0 +421,5 @@\n+\/\/ This typedef is to address the issue of running a 32-bit VM on a 64-bit platform. In this case\n+\/\/ the amount of physical memory may not fit in size_t, so we have to have a larger type. Once 32-bit\n+\/\/ is depricated, one can use size_t.\n+typedef uint64_t physical_memory_size_type;\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}