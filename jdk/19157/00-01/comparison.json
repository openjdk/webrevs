{"files":[{"patch":"@@ -79,1 +79,1 @@\n-  return Metaspace::using_class_space() && klass->is_in_klass_space() &&\n+  return Metaspace::using_class_space() && klass->is_in_class_space() &&\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdKlassQueue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-  return Metaspace::allocate(loader_data, word_size, type, THREAD);\n+  assert(type != ClassType, \"class has its own operator new\");\n+  return Metaspace::allocate(loader_data, word_size, type, \/*use_class_space*\/ false, THREAD);\n@@ -85,1 +86,2 @@\n-  return Metaspace::allocate(loader_data, word_size, type);\n+  assert(type != ClassType, \"class has its own operator new\");\n+  return Metaspace::allocate(loader_data, word_size, type, \/*use_class_space*\/ false);\n","filename":"src\/hotspot\/share\/memory\/allocation.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -318,2 +318,1 @@\n-  f(RecordComponent) \\\n-  f(AbstractClass)\n+  f(RecordComponent)\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-      bool is_klass = md->is_in_klass_space();\n+      bool is_class = md->is_in_class_space();\n@@ -79,1 +79,1 @@\n-      loader_data->metaspace_non_null()->deallocate((MetaWord*)md, size, is_klass);\n+      loader_data->metaspace_non_null()->deallocate((MetaWord*)md, size, is_class);\n","filename":"src\/hotspot\/share\/memory\/metadataFactory.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -829,1 +829,1 @@\n-                              MetaspaceObj::Type type) {\n+                              MetaspaceObj::Type type, bool use_class_space) {\n@@ -839,1 +839,1 @@\n-  MetadataType mdtype = (type == MetaspaceObj::ClassType) ? ClassType : NonClassType;\n+  MetadataType mdtype = use_class_space ? ClassType : NonClassType;\n@@ -855,1 +855,1 @@\n-                              MetaspaceObj::Type type, TRAPS) {\n+                              MetaspaceObj::Type type, bool use_class_space, TRAPS) {\n@@ -863,1 +863,1 @@\n-  MetaWord* result = allocate(loader_data, word_size, type);\n+  MetaWord* result = allocate(loader_data, word_size, type, use_class_space);\n@@ -866,1 +866,1 @@\n-    MetadataType mdtype = (type == MetaspaceObj::ClassType) ? ClassType : NonClassType;\n+    MetadataType mdtype = use_class_space ? ClassType : NonClassType;\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-                            MetaspaceObj::Type type, TRAPS);\n+                            MetaspaceObj::Type type, bool use_class_space, TRAPS);\n@@ -114,1 +114,1 @@\n-                            MetaspaceObj::Type type);\n+                            MetaspaceObj::Type type, bool use_class_space);\n","filename":"src\/hotspot\/share\/memory\/metaspace.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  bool is_in_klass_space() const { return false; }\n+  bool is_in_class_space() const { return false; }\n","filename":"src\/hotspot\/share\/oops\/annotations.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-                                     MetaspaceObj::array_type(sizeof(T)), THREAD);\n+                                     MetaspaceObj::array_type(sizeof(T)), false, THREAD);\n","filename":"src\/hotspot\/share\/oops\/array.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  return Metaspace::allocate(loader_data, word_size, MetaspaceObj::ClassType, THREAD);\n+  return Metaspace::allocate(loader_data, word_size, MetaspaceObj::ClassType, true, THREAD);\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-  bool is_in_klass_space() const { return false; }\n+  bool is_in_class_space() const { return false; }\n","filename":"src\/hotspot\/share\/oops\/constMethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-  bool is_in_klass_space() const { return false; }\n+  bool is_in_class_space() const { return false; }\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -440,2 +440,3 @@\n-void* InstanceKlass::operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, MetaspaceObj::Type type, TRAPS) throw() {\n-  return Metaspace::allocate(loader_data, word_size, type, THREAD);\n+void* InstanceKlass::operator new(size_t size, ClassLoaderData* loader_data, size_t word_size,\n+                                  bool use_class_space, TRAPS) throw() {\n+  return Metaspace::allocate(loader_data, word_size, ClassType, use_class_space, THREAD);\n@@ -456,1 +457,1 @@\n-  MetaspaceObj::Type type = (parser.is_interface() || parser.is_abstract()) ? MetaspaceObj::AbstractClassType : MetaspaceObj::ClassType;\n+  const bool use_class_space = !parser.is_interface() && !parser.is_abstract();\n@@ -461,1 +462,1 @@\n-    ik = new (loader_data, size, type, THREAD) InstanceRefKlass(parser);\n+    ik = new (loader_data, size, use_class_space, THREAD) InstanceRefKlass(parser);\n@@ -464,1 +465,1 @@\n-    ik = new (loader_data, size, type, THREAD) InstanceMirrorKlass(parser);\n+    ik = new (loader_data, size, use_class_space, THREAD) InstanceMirrorKlass(parser);\n@@ -467,1 +468,1 @@\n-    ik = new (loader_data, size, type, THREAD) InstanceStackChunkKlass(parser);\n+    ik = new (loader_data, size, use_class_space, THREAD) InstanceStackChunkKlass(parser);\n@@ -470,1 +471,1 @@\n-    ik = new (loader_data, size, type, THREAD) InstanceClassLoaderKlass(parser);\n+    ik = new (loader_data, size, use_class_space, THREAD) InstanceClassLoaderKlass(parser);\n@@ -473,1 +474,1 @@\n-    ik = new (loader_data, size, type, THREAD) InstanceKlass(parser);\n+    ik = new (loader_data, size, use_class_space, THREAD) InstanceKlass(parser);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-  void* operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, MetaspaceObj::Type type, TRAPS) throw();\n+  void* operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, bool use_class_space, TRAPS) throw();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-  bool is_in_klass_space() const { return !is_interface() && !is_abstract(); }\n+  bool is_in_class_space() const { return !is_interface() && !is_abstract(); }\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  virtual bool is_in_klass_space() const { return false; }\n+  virtual bool is_in_class_space() const { return false; }\n","filename":"src\/hotspot\/share\/oops\/metadata.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    bool is_in_klass_space() const { return false; }\n+    bool is_in_class_space() const { return false; }\n","filename":"src\/hotspot\/share\/oops\/recordComponent.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}