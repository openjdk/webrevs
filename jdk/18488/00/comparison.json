{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,3 +57,0 @@\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import java.util.stream.Collectors;\n@@ -770,4 +767,4 @@\n-            path = ArtifactResolver.resolve(clazz).entrySet().stream()\n-                    .findAny().get().getValue() + File.separator + \"nss\"\n-                    + File.separator + \"lib\" + File.separator;\n-        } catch (ArtifactResolverException e) {\n+            Path p = ArtifactResolver.resolve(clazz).entrySet().stream()\n+                    .findAny().get().getValue();\n+            path = findNSSLibrary(p);\n+        } catch (ArtifactResolverException | IOException e) {\n@@ -787,0 +784,10 @@\n+    private static String findNSSLibrary(Path path) throws IOException {\n+        Path nssLibrary = Path.of(System.mapLibraryName(nss_library));\n+        Path p = Files.find(path, 10,\n+                        (tp, attr) -> tp.getFileName().equals(nssLibrary))\n+                .findAny()\n+                .orElse(path)\n+                .getParent();\n+        return p.toString();\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}