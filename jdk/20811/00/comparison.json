{"files":[{"patch":"@@ -118,1 +118,0 @@\n-runtime\/ErrorHandling\/TestDwarf.java#checkDecoder 8305489 linux-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test id=checkDecoder\n+ * @test\n@@ -33,9 +33,1 @@\n- * @run main\/native\/othervm -Xbootclasspath\/a:. -XX:-CreateCoredumpOnCrash -DcheckDecoder=true TestDwarf\n- *\/\n-\n-\/*\n- * @test id=dontCheckDecoder\n- * @library \/ \/test\/lib\n- * @requires vm.debug == true & vm.flagless & vm.compMode != \"Xint\" & os.family == \"linux\" & !vm.graal.enabled & vm.gc.G1\n- * @modules java.base\/jdk.internal.misc\n- * @run main\/native\/othervm -Xbootclasspath\/a:. -XX:-CreateCoredumpOnCrash -DcheckDecoder=false TestDwarf\n+ * @run main\/native\/othervm -Xbootclasspath\/a:. -XX:-CreateCoredumpOnCrash TestDwarf\n@@ -66,2 +58,0 @@\n-    static boolean checkDecoder = Boolean.getBoolean(\"checkDecoder\");\n-\n@@ -130,1 +120,1 @@\n-    \/\/ The full pattern accepts lines like:\n+    \/\/ A full pattern could check for lines like:\n@@ -132,1 +122,2 @@\n-    \/\/ but if the decoder is not available we only get\n+    \/\/ but the decoder is not reliably working at the moment (see JDK-8305489). We therefore use a pattern that only\n+    \/\/ checks that lines have the following structure with source information:\n@@ -134,1 +125,0 @@\n-    private static final String FULL_PATTERN =\"[CV][\\\\s\\\\t]+\\\\[([a-zA-Z0-9_.]+)\\\\+0x.+][\\\\s\\\\t]+.*\\\\+0x.+[\\\\s\\\\t]+\\\\([a-zA-Z0-9_.]+\\\\.[a-z]+:[1-9][0-9]*\\\\)\";\n@@ -152,1 +142,1 @@\n-            Pattern pattern = Pattern.compile(checkDecoder ? FULL_PATTERN : NO_DECODER_PATTERN);\n+            Pattern pattern = Pattern.compile(NO_DECODER_PATTERN);\n@@ -205,8 +195,0 @@\n-            \/\/ Symbols were fine so check if we expected decoder output and didn't find it.\n-            if (checkDecoder) {\n-                pattern = Pattern.compile(NO_DECODER_PATTERN);\n-                matcher = pattern.matcher(line);\n-                if (matcher.find()) {\n-                    Asserts.fail(\"Could not find decoded method signature in \\\"\" + line + \"\\\"\");\n-                }\n-            }\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestDwarf.java","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"}]}