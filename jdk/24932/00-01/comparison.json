{"files":[{"patch":"@@ -773,0 +773,5 @@\n+        private int y;\n+\n+        {\n+            y = this.mightLeak();                   \/\/ this leak should be suppressed\n+        }\n@@ -786,0 +791,26 @@\n+\n+    public static class UnsuppressedIndirectLeakViaField {\n+\n+        private final int x = this.mightLeak();     \/\/ this leak should not be suppressed\n+\n+        public UnsuppressedIndirectLeakViaField() {\n+            this(\"\");       \/\/ this constructor does not trigger the warning\n+        }\n+\n+        @SuppressWarnings(\"this-escape\")\n+        private UnsuppressedIndirectLeakViaField(String s) {\n+            \/\/ this constructor does not trigger the warning (obviously; it's directly suppressed)\n+        }\n+\n+        public UnsuppressedIndirectLeakViaField(int z) {\n+            \/\/ this constructor triggers the warning\n+        }\n+\n+        public UnsuppressedIndirectLeakViaField(float z) {\n+            \/\/ this constructor also triggers the warning, but should not create a duplicate\n+        }\n+\n+        public int mightLeak() {\n+            return 0;\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/warnings\/ThisEscape.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -38,1 +38,2 @@\n-37 warnings\n+ThisEscape.java:794:45: compiler.warn.possible.this.escape\n+38 warnings\n","filename":"test\/langtools\/tools\/javac\/warnings\/ThisEscape.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}