{"files":[{"patch":"@@ -840,2 +840,2 @@\n-  \/\/ Update TLAB usage\n-  ZHeap::heap()->update_tlab_usage(_page_allocator->used_eden());\n+  \/\/ Reset TLAB usage\n+  ZHeap::heap()->reset_tlab_used();\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    _tlab_usage(InitialHeapSize),\n+    _tlab_usage(),\n@@ -161,5 +161,3 @@\n-void ZHeap::update_tlab_usage(size_t used) {\n-  const size_t old_used = _tlab_usage.used();\n-  const size_t old_capacity = _tlab_usage.capacity();\n-\n-  _tlab_usage.update(used);\n+void ZHeap::increment_tlab_used() {\n+  _tlab_usage.add(ZPageSizeSmall);\n+}\n@@ -167,5 +165,2 @@\n-  log_debug(gc, tlab)(\"TLAB usage update: used %zuM -> %zuM, capacity: %zuM -> %zuM\",\n-                      old_used \/ M,\n-                      _tlab_usage.used() \/ M,\n-                      old_capacity \/ M,\n-                      _tlab_usage.capacity() \/ M);\n+void ZHeap::reset_tlab_used() {\n+  _tlab_usage.reset();\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -87,1 +87,3 @@\n-  void update_tlab_usage(size_t used);\n+\n+  void increment_tlab_used();\n+  void reset_tlab_used();\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,0 +112,6 @@\n+      } else {\n+        \/\/ Page successfully installed\n+        if (_age == ZPageAge::eden && page_type == ZPageType::small) {\n+          \/\/ Increment TLAB usage for small eden pages\n+          ZHeap::heap()->increment_tlab_used();\n+        }\n","filename":"src\/hotspot\/share\/gc\/z\/zObjectAllocator.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1267,1 +1267,0 @@\n-    _used_eden(0),\n@@ -1358,4 +1357,0 @@\n-size_t ZPageAllocator::used_eden() const {\n-  return Atomic::load(&_used_eden);\n-}\n-\n@@ -1422,1 +1417,0 @@\n-  \/\/ Update per-collection statistics\n@@ -1424,5 +1418,0 @@\n-\n-  \/\/ Clear eden statistics\n-  reset_used_eden();\n-\n-  \/\/ Return the collected statistics\n@@ -2091,5 +2080,0 @@\n-  const size_t size = allocation->size();\n-  const ZPageType type = allocation->type();\n-  const ZPageAge age = allocation->age();\n-  const ZGenerationId id = age == ZPageAge::old ? ZGenerationId::old : ZGenerationId::young;\n-\n@@ -2100,1 +2084,1 @@\n-  \/\/ the generation statistics could see a decreasing used value between mark\n+  \/\/ the generation statistics could se a decreasing used value between mark\n@@ -2103,4 +2087,5 @@\n-  increase_used_generation(id, size);\n-  if (age == ZPageAge::eden) {\n-    increase_used_eden(size);\n-  }\n+  const ZGenerationId id = allocation->age() == ZPageAge::old ? ZGenerationId::old : ZGenerationId::young;\n+  increase_used_generation(id, allocation->size());\n+\n+  const ZPageType type = allocation->type();\n+  const ZPageAge age = allocation->age();\n@@ -2280,10 +2265,0 @@\n-void ZPageAllocator::increase_used_eden(size_t size) {\n-  \/\/ Update atomically since we have concurrent readers and writers\n-  Atomic::add(&_used_eden, size, memory_order_relaxed);\n-}\n-\n-void ZPageAllocator::reset_used_eden() {\n-  \/\/ Reset atomically since we have concurrent readers and writers\n-  Atomic::store(&_used_eden, (size_t) 0);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":6,"deletions":31,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-  volatile size_t             _used_eden;\n@@ -236,3 +235,0 @@\n-  void increase_used_eden(size_t size);\n-  void reset_used_eden();\n-\n@@ -263,1 +259,0 @@\n-  size_t used_eden() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"runtime\/atomic.hpp\"\n@@ -26,6 +28,11 @@\n-ZTLABUsage::ZTLABUsage(size_t initial_heap_size)\n-  : _used_history() {\n-    \/\/ To get reasonable values for used and capacity until the first GC\n-    \/\/ we populate the used history with the initial heap size.\n-    _used_history.add(initial_heap_size);\n-  }\n+ZTLABUsage::ZTLABUsage()\n+  : _used(0),\n+    _used_history() {}\n+\n+\n+void ZTLABUsage::add(size_t size) {\n+  Atomic::add(&_used, size, memory_order_relaxed);\n+}\n+\n+void ZTLABUsage::reset() {\n+  size_t current_used = Atomic::xchg(&_used, (size_t) 0);\n@@ -33,3 +40,2 @@\n-void ZTLABUsage::update(size_t used) {\n-  if (used == 0) {\n-    \/\/ Avoid updates for the second young generation collection of a SystemGC\n+  \/\/ Avoid updates for the second young generation collection of a SystemGC\n+  if (current_used == 0) {\n@@ -38,2 +44,14 @@\n-  _used_history.add(used);\n-}\n+\n+  \/\/ Save the old values for logging\n+  size_t old_used = used();\n+  size_t old_capacity = capacity();\n+\n+  \/\/ Update the usage history with the current value\n+  _used_history.add(current_used);\n+\n+  log_debug(gc, tlab)(\"TLAB usage update: used %zuM -> %zuM, capacity: %zuM -> %zuM\",\n+                      old_used \/ M,\n+                      used() \/ M,\n+                      old_capacity \/ M,\n+                      capacity() \/ M);\n+  }\n","filename":"src\/hotspot\/share\/gc\/z\/zTLABUsage.cpp","additions":29,"deletions":11,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -43,1 +43,2 @@\n-  TruncatedSeq _used_history;\n+  volatile size_t _used;\n+  TruncatedSeq    _used_history;\n@@ -46,1 +47,1 @@\n-  ZTLABUsage(size_t initial_heap_size);\n+  ZTLABUsage();\n@@ -48,1 +49,2 @@\n-  void update(size_t used);\n+  void add(size_t size);\n+  void reset();\n","filename":"src\/hotspot\/share\/gc\/z\/zTLABUsage.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -119,0 +119,3 @@\n+serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorInterpreterObjectTest.java                8356372 generic-all\n+serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatObjectCorrectnessTest.java\t          8356372 generic-all\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}