{"files":[{"patch":"@@ -581,2 +581,1 @@\n-  if (!signal_was_handled &&\n-      ((sig == SIGSEGV || sig == SIGBUS) && info != nullptr && info->si_addr == g_assert_poison)) {\n+  if (VMError::was_assert_poison_crash(info)) {\n@@ -1139,3 +1138,0 @@\n-\n-  const siginfo_t* const si = (const siginfo_t*) si0;\n-\n@@ -1146,1 +1142,1 @@\n-  if ((si->si_signo == SIGSEGV || si->si_signo == SIGBUS) && si->si_addr == g_assert_poison_page_for_reporting) {\n+  if (VMError::was_assert_poison_crash(si0)) {\n@@ -1151,0 +1147,2 @@\n+  const siginfo_t* const si = (const siginfo_t*)si0;\n+\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  if ((sig == SIGSEGV || sig == SIGBUS) && info != nullptr && info->si_addr == g_assert_poison) {\n+  if (VMError::was_assert_poison_crash(info)) {\n@@ -130,0 +130,11 @@\n+\n+bool VMError::was_assert_poison_crash(const void* siginfo) {\n+#ifdef CAN_SHOW_REGISTERS_ON_ASSERT\n+  if (siginfo == nullptr) {\n+    return false;\n+  }\n+  const siginfo_t* const si = (siginfo_t*)siginfo;\n+  return (si->si_signo == SIGSEGV || si->si_signo == SIGBUS) && si->si_addr == g_assert_poison_read_only;\n+#endif\n+  return false;\n+}\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2147,5 +2147,2 @@\n-  const EXCEPTION_RECORD* const er = (EXCEPTION_RECORD*)siginfo;\n-  if (er->ExceptionCode == EXCEPTION_ACCESS_VIOLATION && er->NumberParameters >= 2) {\n-    if ((void*)er->ExceptionInformation[1] == g_assert_poison_page_for_reporting) {\n-      return;\n-    }\n+  if (VMError::was_assert_poison_crash(siginfo)) {\n+    return;\n@@ -2155,0 +2152,2 @@\n+  const EXCEPTION_RECORD* const er = (EXCEPTION_RECORD*)siginfo;\n+\n@@ -2800,6 +2799,3 @@\n-  if ((exception_code == EXCEPTION_ACCESS_VIOLATION) && exception_record->NumberParameters >= 2) {\n-    \/\/ Handle TOUCH_ASSERT_POISON page faults for an assert or guarantee.\n-    if ((void*)exception_record->ExceptionInformation[1] == g_assert_poison) {\n-      if (handle_assert_poison_fault(exceptionInfo)) {\n-        return EXCEPTION_CONTINUE_EXECUTION;\n-      }\n+  if (VMError::was_assert_poison_crash(exception_record)) {\n+    if (handle_assert_poison_fault(exceptionInfo)) {\n+      return EXCEPTION_CONTINUE_EXECUTION;\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -77,0 +78,13 @@\n+\n+bool VMError::was_assert_poison_crash(const void* siginfo) {\n+#ifdef CAN_SHOW_REGISTERS_ON_ASSERT\n+  if (siginfo == nullptr) {\n+    return false;\n+  }\n+  const EXCEPTION_RECORD* const er = (EXCEPTION_RECORD*)siginfo;\n+  if (er->ExceptionCode == EXCEPTION_ACCESS_VIOLATION && er->NumberParameters >= 2) {\n+    return (void*)er->ExceptionInformation[1] == g_assert_poison_read_only;\n+  }\n+#endif\n+  return false;\n+}\n","filename":"src\/hotspot\/os\/windows\/vmError_windows.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-const char* g_assert_poison_page_for_reporting = nullptr;\n+const char* g_assert_poison_read_only = &g_dummy;\n@@ -724,0 +724,1 @@\n+      g_assert_poison_read_only = page;\n@@ -729,1 +730,0 @@\n-  g_assert_poison_page_for_reporting = g_assert_poison;\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-extern const char* g_assert_poison_page_for_reporting;\n+extern const char* g_assert_poison_read_only;\n","filename":"src\/hotspot\/share\/utilities\/debug.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,0 +228,1 @@\n+  static bool was_assert_poison_crash(const void* sigInfo);\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}