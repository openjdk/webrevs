{"files":[{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc.z;\n+\n+\/*\n+ * @test TestAllocateHeapAtWithHugeTLBFS\n+ * @requires vm.gc.ZGenerational & os.family == \"linux\"\n+ * @summary Test ZGC with -XX:AllocateHeapAt and -XX:+UseLargePages\n+ * @library \/test\/lib\n+ * @run driver gc.z.TestAllocateHeapAtWithHugeTLBFS true\n+ * @run driver gc.z.TestAllocateHeapAtWithHugeTLBFS false\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jtreg.SkippedException;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.Path;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.Scanner;\n+\n+public class TestAllocateHeapAtWithHugeTLBFS {\n+    static String find_hugetlbfs_mountpoint() {\n+        Pattern pat = Pattern.compile(\"\\\\d+ \\\\d+ \\\\d+:\\\\d+ \\\\S+ (\\\\S+) [^-]*- hugetlbfs (.+)\");\n+        try (Scanner scanner = new Scanner(new File(\"\/proc\/self\/mountinfo\"))) {\n+            while (scanner.hasNextLine()) {\n+                final Matcher mat = pat.matcher(scanner.nextLine());\n+                if (mat.matches() && mat.group(2).contains(\"pagesize=2M\")) {\n+                    final Path path = Paths.get(mat.group(1));\n+                    if (Files.isReadable(path) &&\n+                        Files.isWritable(path) &&\n+                        Files.isExecutable(path)) {\n+                        \/\/ Found a usable mount point.\n+                        return path.toString();\n+                    }\n+                }\n+            }\n+        } catch (FileNotFoundException e) {\n+            System.out.println(\"Could not open \/proc\/self\/mountinfo\");\n+        }\n+        return null;\n+    }\n+    public static void main(String[] args) throws Exception {\n+        final boolean exists = Boolean.parseBoolean(args[0]);\n+        final String directory = exists ? find_hugetlbfs_mountpoint()\n+                                        : \"non-existing-directory\";\n+        if (directory == null) {\n+            throw new SkippedException(\"No valid hugetlbfs mount point found\");\n+        }\n+        final String heapBackingFile = \"Heap Backing File: \" + directory;\n+        final String failedToCreateFile = \"Failed to create file \" + directory;\n+\n+        ProcessTools.executeTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:+ZGenerational\",\n+            \"-Xlog:gc*\",\n+            \"-Xms32M\",\n+            \"-Xmx32M\",\n+            \"-XX:+UseLargePages\",\n+            \"-XX:AllocateHeapAt=\" + directory,\n+            \"-version\")\n+                .shouldContain(exists ? heapBackingFile : failedToCreateFile)\n+                .shouldNotContain(exists ? failedToCreateFile : heapBackingFile)\n+                .shouldHaveExitValue(exists ? 0 : 1);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestAllocateHeapAtWithHugeTLBFS.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}