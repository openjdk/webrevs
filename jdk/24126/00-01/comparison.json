{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import java.util.concurrent.atomic.AtomicInteger;\n@@ -55,2 +54,0 @@\n-    private static volatile String tempDir;\n-    private static final AtomicInteger count = new AtomicInteger(0);\n@@ -59,9 +56,0 @@\n-    static {\n-        try {\n-            Path p = Files.createTempDirectory(\"readWriteTest\");\n-            tempDir = p.toString();\n-        } catch (IOException e) {\n-            tempDir = null;\n-        }\n-    }\n-\n@@ -69,2 +57,1 @@\n-        int next = count.incrementAndGet();\n-        socket = Paths.get(tempDir, Integer.toString(next));\n+        socket = Files.createTempDirectory(UnixSocketChannelReadWrite.class.getSimpleName()).resolve(\"sock\");\n@@ -95,2 +82,2 @@\n-        Files.deleteIfExists(socket);\n-        Files.deleteIfExists(Path.of(tempDir));\n+        Files.delete(socket);\n+        Files.delete(socket.getParent());\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/UnixSocketChannelReadWrite.java","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"}]}