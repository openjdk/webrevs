[{"commit":{"message":"* make young gen length revising independent of refinement thread\n  * use a service task\n  * both refinement control thread and young gen length revising use the same infrastructure to get the number of available bytes and determine the time to the next update"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThreadsNeeded.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ReviseYoungListTargetLengthTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ReviseYoungListTargetLengthTask.hpp"},{"filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp"},{"filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp"}],"sha":"5e76a516c848e75f56e966a1ffe4115b1dce786c"}]