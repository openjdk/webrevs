{"files":[{"patch":"@@ -92,7 +92,35 @@\n-  __ push_reg(saved_regs, sp);\n-  assert_different_registers(start, count, tmp);\n-  assert_different_registers(c_rarg0, count);\n-  __ mv(c_rarg0, start);\n-  __ mv(c_rarg1, count);\n-  __ call_VM_leaf(CAST_FROM_FN_PTR(address, G1BarrierSetRuntime::write_ref_array_post_entry), 2);\n-  __ pop_reg(saved_regs, sp);\n+  Label loop, next, done;\n+  const Register end = count;\n+\n+  \/\/ Zero count? Nothing to do.\n+  __ beqz(count, done);\n+\n+  __ shadd(end, count, start, tmp, LogBytesPerHeapOop); \/\/ end = start + count << LogBytesPerHeapOop\n+  __ subi(end, end, BytesPerHeapOop);                   \/\/ last element address to make inclusive\n+\n+  __ srli(start, start, CardTable::card_shift());\n+  __ srli(end, end, CardTable::card_shift());\n+  __ sub(count, end, start);                            \/\/ Number of bytes to mark\n+\n+  Address card_table_address(xthread, G1ThreadLocalData::card_table_base_offset());\n+  __ ld(tmp, card_table_address);\n+  __ add(start, start, tmp);\n+\n+  __ bind(loop);\n+  if (UseCondCardMark) {\n+    __ add(tmp, start, count);\n+    static_assert((uint)G1CardTable::clean_card_val() == 0xff, \"must be\");\n+    __ lbu(tmp, Address(tmp, 0));\n+    __ subi(tmp, tmp, G1CardTable::clean_card_val());   \/\/ Convert to clean_card_value() to a comparison\n+                                                        \/\/ against zero to avoid use of an extra temp.\n+    __ bnez(tmp, next);\n+  }\n+  static_assert(G1CardTable::dirty_card_val() == 0, \"must be to use zr\");\n+  __ add(tmp, start, count);\n+  __ sb(zr, Address(tmp, 0));\n+\n+  __ bind(next);\n+  __ subi(count, count, 1);\n+  __ bgez(count, loop);\n+\n+  __ bind(done);\n@@ -220,1 +248,1 @@\n-    __ sub(tmp2, tmp2, G1CardTable::clean_card_val());   \/\/ Convert to clean_card_value() to a comparison\n+    __ subi(tmp2, tmp2, G1CardTable::clean_card_val());  \/\/ Convert to clean_card_value() to a comparison\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":36,"deletions":8,"binary":false,"changes":44,"status":"modified"}]}