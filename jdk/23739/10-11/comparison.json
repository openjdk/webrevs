{"files":[{"patch":"@@ -223,1 +223,1 @@\n-  return advance_state(State::SwapGCThreadsCT);\n+  return advance_state(State::SynchronizeGCThreads);\n@@ -227,1 +227,1 @@\n-  assert_state(State::SwapGCThreadsCT);\n+  assert_state(State::SynchronizeGCThreads);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    SwapGCThreadsCT,             \/\/ Swap GC thread's card tables.\n+    SynchronizeGCThreads,        \/\/ Synchronize GC thread's memory view.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-\/\/ One or more G1 Concurrent Refinement Threads may be active if concurrent\n-\/\/ refinement is in progress.\n+\/\/ Concurrent refinement control thread watching card mark accrual on the card\n+\/\/ and starting refinement work.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThread.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,13 +56,23 @@\n-    \/\/ Gather statistics.\n-    if (res == G1RemSet::CouldNotParse) {\n-      \/\/ Could not refine - redirty with the original value.\n-      *dest_card = *source_card;\n-      _refine_stats.inc_cards_not_parsable();\n-    } else if (res == G1RemSet::AlreadyToCSet) {\n-      *dest_card = G1CardTable::g1_to_cset_card;\n-      _refine_stats.inc_cards_already_refer_to_cset();\n-    } else if (res == G1RemSet::HasRefToCSet) {\n-      *dest_card = G1CardTable::g1_to_cset_card;\n-      _refine_stats.inc_cards_refer_to_cset();\n-    } else if (res == G1RemSet::NoInteresting) {\n-      _refine_stats.inc_cards_clean_again();\n+    \/\/ Gather statistics based on the result.\n+    switch (res) {\n+      case G1RemSet::HasRefToCSet: {\n+        *dest_card = G1CardTable::g1_to_cset_card;\n+        _refine_stats.inc_cards_refer_to_cset();\n+        break;\n+      }\n+      case G1RemSet::AlreadyToCSet: {\n+        *dest_card = G1CardTable::g1_to_cset_card;\n+        _refine_stats.inc_cards_already_refer_to_cset();\n+        break;\n+      }\n+      case G1RemSet::NoInteresting: {\n+        _refine_stats.inc_cards_clean_again();\n+        break;\n+      }\n+      case G1RemSet::CouldNotParse: {\n+        \/\/ Could not refine - redirty with the original value.\n+        *dest_card = *source_card;\n+        _refine_stats.inc_cards_not_parsable();\n+        break;\n+      }\n+      case G1RemSet::HasRefToOld : break; \/\/ Nothing special to do.\n@@ -74,1 +84,1 @@\n-  size_t do_claimed_block(CardValue* dirty_l, CardValue* dirty_r, CardValue* dest_card) {\n+  void do_claimed_block(CardValue* dirty_l, CardValue* dirty_r, CardValue* dest_card) {\n@@ -78,1 +88,0 @@\n-    return pointer_delta(dirty_r, dirty_l, sizeof(CardValue));\n@@ -128,1 +137,4 @@\n-                               scanned += do_claimed_block(dirty_l, dirty_r, dest_card + pointer_delta(dirty_l, start_card, sizeof(CardValue)));\n+\n+                               do_claimed_block(dirty_l, dirty_r, dest_card + pointer_delta(dirty_l, start_card, sizeof(CardValue)));\n+                               scanned += pointer_delta(dirty_r, dirty_l, sizeof(CardValue));\n+                               \n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineWorkTask.cpp","additions":28,"deletions":16,"binary":false,"changes":44,"status":"modified"}]}