{"files":[{"patch":"@@ -82,0 +82,5 @@\n+    \/\/ This color is sticky during mutator time: refinement threads encountering\n+    \/\/ this card on the refinement table will just copy it over to the regular card\n+    \/\/ table without re-refining this card. This saves on refinement effort spent\n+    \/\/ on that card because most of the time already found interesting references\n+    \/\/ stay interesting.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,6 +216,3 @@\n-  {\n-    SuspendibleThreadSetLeaver sts_leave;\n-\n-    class G1SwapThreadCardTableClosure : public HandshakeClosure {\n-    public:\n-      G1SwapThreadCardTableClosure() : HandshakeClosure(\"G1 Swap JT card table\") { }\n+  class G1SwapThreadCardTableClosure : public HandshakeClosure {\n+  public:\n+    G1SwapThreadCardTableClosure() : HandshakeClosure(\"G1 Swap JT card table\") { }\n@@ -223,7 +220,6 @@\n-      virtual void do_thread(Thread* t) {\n-        G1BarrierSet* bs = G1BarrierSet::g1_barrier_set();\n-        G1ThreadLocalData::set_byte_map_base(t, bs->card_table()->byte_map_base());\n-      }\n-    } cl;\n-    Handshake::execute(&cl);\n-  }\n+    virtual void do_thread(Thread* t) {\n+      G1BarrierSet* bs = G1BarrierSet::g1_barrier_set();\n+      G1ThreadLocalData::set_byte_map_base(t, bs->card_table()->byte_map_base());\n+    }\n+  } cl;\n+  Handshake::execute(&cl);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"}]}