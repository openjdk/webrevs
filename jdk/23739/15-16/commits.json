[{"commit":{"message":"Merge branch 'master' into 8342382-card-table-instead-of-dcq"},"files":[],"sha":"aec95051cfc906553eee78c0a4e712ed16a564ba"},{"commit":{"message":"* optimized RISCV gen_write_ref_array_post_barrier() implementation contributed by @RealFYang"},"files":[],"sha":"758fac018cf5c9345f15bc0f3a9011735124a071"},{"commit":{"message":"* fix card table verification crashes: in the first refinement phase, when switching the global card tables, we need to re-check whether we are still in the same sweep epoch or not. It might have changed due to a GC interrupting acquiring the Heap_lock. Otherwise new threads will scribble on the refinement table.\nCause are last-minute changes before making the PR ready to review.\n\n  Testing: without the patch, occurs fairly frequently when continuously\n(1 in 20) starting refinement. Does not afterward."},"files":[],"sha":"93b884f1ca176224091d813de46fefb68d5b83f6"},{"commit":{"message":"* ayang review 3\n  * comments\n  * minor refactorings"},"files":[],"sha":"c994000276d3d343b00866c4e644d0c95f678abc"},{"commit":{"message":"* iwalulya review\n  * renaming\n  * fix some includes, forward declaration"},"files":[],"sha":"350a4fa3d2e46f440b8781c080b5608ae754722f"},{"commit":{"message":"* fix whitespace\n* additional whitespace between log tags\n* rename G1ConcurrentRefineWorkTask -> ...SweepTask to conform to the other similar rename"},"files":[],"sha":"a457e6e7c03a1459316f0c072aae740964274e46"},{"commit":{"message":"ayang review\n  * renamings\n  * refactorings"},"files":[],"sha":"4a978118f40f4c5057edcdd8c60bdb4918e62438"},{"commit":{"message":"iwalulya review\n  * comments for variables tracking to-collection-set and just dirtied cards after GC\/refinement\n  * predicate for determining whether the refinement has been disabled\n  * some other typos\/comment improvements\n  * renamed _has_xxx_ref to _has_ref_to_xxx to be more consistent with naming"},"files":[],"sha":"b4d19d9be212e7cc98fca7345e3bc9747d33c477"},{"commit":{"message":"* ayang review - fix comment"},"files":[],"sha":"fc674f02b4a662ac9ad1cc587a670bd0fc59a05b"},{"commit":{"message":"* iwalulya review 2\n  * G1ConcurrentRefineWorkState -> G1ConcurrentRefineSweepState\n  * some additional documentation"},"files":[],"sha":"442d9eae2b559174d0f144ad799c478b83802e92"},{"commit":{"message":"* do not change card table base for gc threads during swapping\n  * not necessary because they do not use it\n  * (recent assert that verifies that non-java threads do not have a card table found this)"},"files":[],"sha":"9e2ee543c6aac7f8894ba1cdbe8853ae7ed7583d"},{"commit":{"message":"* iwalulya initial comments\n  * renaming\n* made blend() helper function more clear; at least gcc will optimize it to the same code as before"},"files":[],"sha":"8f46dc9a11ded1e376604bafc5747d03f98f4e5f"},{"commit":{"message":"ayang review 2\n* removal of useless code\n* renamings"},"files":[],"sha":"b3dd0084518ae0320a2a9741d9836ec62e1fcca9"},{"commit":{"message":"* fix comment (trailing whitespace)\n* another assert when snapshotting at a safepoint."},"files":[],"sha":"810bf2d3aec674bb22b6529c950ddf01af326bfd"},{"commit":{"message":"* fix assert"},"files":[],"sha":"d87935a0297d07827e4d06e23c4152b6b4458a14"},{"commit":{"message":"* ayang review 1 (ctd)\n  * split up sweep-rt state into \"start\" (to be called once) and \"step\" (to be called repeatedly) phases\n  * move building the snapshot our of g1remset"},"files":[],"sha":"7d361fc15ce3c880d32193b9cefec3fd3dee5f69"},{"commit":{"message":"* ayang review 1\n  * use uint for number of reserved regions consistently\n  * rename *sweep_state to *sweep_table\n  * improved comments"},"files":[],"sha":"e51eec86a04fa6036bd414a420db7eeaaa6589be"},{"commit":{"message":"* remove unnecessarily added logging"},"files":[],"sha":"9ef9c5f400928090a5597f5b5d1e026f3f9e3461"},{"commit":{"message":"* only provide byte map base for JavaThreads\n* missing synchronization with card table swapping"},"files":[],"sha":"0100d8e27d6420a4ca1ac132fe7687d65d3bcd3e"},{"commit":{"message":"* mdoerr review: fix comments in ppc code"},"files":[],"sha":"b8100b9d5e8bebd7d71e3cbcba485160e1168705"},{"commit":{"message":"* fix crash when writing dirty cards for memory regions during card table switching"},"files":[],"sha":"3004a968e386ab12ab831e91aaba798de9170e45"},{"commit":{"message":"* remove mention of \"enqueue\" or \"enqueuing\" for actions related to post barrier"},"files":[],"sha":"9e26abbaec246ce79eec4ac7c940dd44f2a52175"},{"commit":{"message":"* remove some commented out debug code\n* fixed comment typo"},"files":[],"sha":"778229515d3d98754ca1f1aaf90fad489d9a0348"},{"commit":{"message":"Card table as DCQ\n\n* gc thread cpu time tracking with gc+cpu=debug logging\n\n* use correct young gen RS length prediction for base time calculation after finalizing young gen\n\n* proper accounting of sweep rt continuation to base time\n* merge to actual remset size calculation fixes\n\n* fix compilation on aarch64, Windows\n\n* fix compilation on aarch64\n\n* remove trailing spaces from files\n\n* initial riscv implementation\n* cleanup s390\/ppc\n* fix missing ResizeTLABs event in jfr parallel phases test\n\n* ppc barrier attempt (not even built)\n\n* removed necessary C1 slow path stub generation :(\n\n* fix riscv compilation\n\n* fix RISCV barrier, passes javac HelloWorld and its execution\n\n* re-add too-much-deleted stuff\n* consider yield time in dirtying rate calculations\n* cleanup\n\n* clean up in refinement heuristics\n\n* remove unused g1_young_card_val\n\n* refactoring, renaming\n\n* when calculating total merged cards from RS, compensate for the merge cache\n* cleanup, refactoring, renaming\n\n* refactoring of refinement\/redirtying stats recording\n* disable some expensive logging\n\n* fix merge card cache compensation\n\n* improve documentation about CardValue's LSB discriminating between clean\/non-clean\n* additional comments to assembly code\n\n* fix too early clearing of refinement statistics after regular refinement completion where cards_to_cset would always be zero\n* improved sizing of work for refinement table merge phase\n* refactoring, removing fixmes\n\n* aarch64 improved array post barrier\n\n* fix aarch64 array post barrier assembler version\n\n* fix testgclogmessages.java test after recent changes\n\n* arm32 barrier\n\n* currently yield duration only applies to sweeping\n\n* add missing files after rebase\n\n* regularize new_val_maybe_null * ppc build fixes\n\n* more ppc build fixes after bad merge\n\n* too many fixes :(\n\n* cleanup\n\n* fix check for enough space to evacuate\n\n* remove code to take expected old gen surviving words into account when determining eden length\n\n* remove some debug code\n\n* track safepoints in recent refinement epoch to calculate card dirtying time\n\n* remove card_table1 member from g1barrierset\n\n* refactoring, cleanup\n\n* fix issues with tracking gc pauses for card dirtying\n\n* epoch timing fixes; little cleanup\n\n* more time accounting fixes\n\n* some refactoring\n\n* cleanup\n\n* remove more debug logs\n* remove parts of already pushed stuff before merge\n\n* improve cpu time output\n\n* synchronize accesses for prediction relevant members between refinement and young gen revise thread\n\n* remove UseNewCode in barrier code\n* some assert to check that dirtying cards is done at the right time\n\n* comment why the lock when updating redirtying information\n\n* remove dead code\n\n* some cleanup in code generation\n\n* initial version\n\n* add store_addr == new_val check to all platforms\n\n* remove unnecessary stuff\n\n* fix ppc barrier code (from M. Doerr)\n  * too strong different register assertion due to ppc optimization\n* fix passing of new_val_may_be_null for c1 barriers\n\n* factor out x.a = x assignments for the C1 compiler.\n\n* remove FIXMEs\n\n* fix s390 barrier code (from A. Kumar)\n\n* removed empty JMVCI write_barrier_post stub because JVMCI users need more changes than that anyway\n* added card table base offset constant for use with JVMCI\n\n* add clean_card_val() for JVMCI\n\n* fix node costs for g1 post barrier\n\n* remove trailing whitespace in files\n\n* update post barrier cost estimate\n\n* copyright updates\n* cleanup of G1CardTableClaimTable\n* worker threads elapsed CPU time refactoring\n* undid _maybe_null from _may_be_null in code generator\n* minor dead code removal\n\n* some cleanup\n\n* minor refactorings\n\n* update cpu time gathering to proposed upstream\n\n* remove cpu time logging code - can be retrieved from performance counters as well\n\n* renamings of \"primary control thread\" to \"refinement control thread\" everywhere\n* simplify refinement control thread main loop\n\n* add refinement control thread perf counters"},"files":[],"sha":"0372026265c3a4ebedf902fdca16489b3c65a7ea"}]