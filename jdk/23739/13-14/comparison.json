{"files":[{"patch":"@@ -73,0 +73,15 @@\n+    \/\/ g1_to_cset_card and g1_from_remset_card are both used for optimization and\n+    \/\/ needed for more accurate prediction of card generation rate.\n+    \/\/\n+    \/\/ g1_to_cset_card allows to separate dirty card generation rate by the mutator\n+    \/\/ (which just dirties cards) from cards that will be scanned during next garbage\n+    \/\/ collection anyway.\n+    \/\/ Further it allows the optimization to not refine them, assuming that their\n+    \/\/ references to young gen does not change, and not add this card to any other\n+    \/\/ remembered set.\n+    \/\/\n+    \/\/ g1_from_remset_card allows separation of cards generated by the mutator from\n+    \/\/ cards in the remembered set, again to make mutator dirty card generation\n+    \/\/ prediction more accurate.\n+    \/\/\n+    \/\/ More accurate prediction allow better (less wasteful) refinement control.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -158,0 +158,4 @@\n+bool G1ConcurrentRefineSweepState::in_sweep_epoch() const {\n+  return _sweep_start_epoch == refinement_epoch();\n+}\n+\n@@ -159,1 +163,1 @@\n-  bool result = _sweep_start_epoch == refinement_epoch();\n+  bool result = in_sweep_epoch();\n@@ -197,1 +201,5 @@\n-    G1BarrierSet::g1_barrier_set()->swap_global_card_table();\n+    \/\/ A GC that advanced the epoch might have happened, which already switched\n+    \/\/ The global card table. Do nothing.\n+    if (in_sweep_epoch()) {\n+      G1BarrierSet::g1_barrier_set()->swap_global_card_table();\n+    }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -154,0 +154,2 @@\n+  bool in_sweep_epoch() const;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  void do_dirty_card(CardValue* source_card, CardValue* dest_card) {\n+  void verify_card_pair_refers_to_same_card(CardValue* source_card, CardValue* dest_card) {\n@@ -55,0 +55,5 @@\n+  }\n+\n+  void do_dirty_card(CardValue* source_card, CardValue* dest_card) {\n+    verify_card_pair_refers_to_same_card(source_card, dest_card);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineSweepTask.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -155,2 +155,2 @@\n-  _has_ref_to_cset = to_region->is_young();\n-  if (_has_ref_to_cset) {\n+  if (to_region->is_young()) {\n+    _has_ref_to_cset = true;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}