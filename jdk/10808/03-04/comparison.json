{"files":[{"patch":"@@ -59,3 +59,3 @@\n-            \" 1. To run the test either setup the printer to use paper size A5\" +\n-                    \" and put A5 paper into the paper tray\" +\n-                    \" or use a virtual PDF printer.\\n\" +\n+\n+            \" 1. To run the test it is required to have a virtual PDF printer\" +\n+                    \" or any other printer supporting A4 paper size.\\n\" +\n@@ -63,4 +63,5 @@\n-                    \"    - rectangle with width is less than height, orientation portrait\\n\" +\n-                    \"    - rectangle with width is less than height, orientation landscape\\n\" +\n-                    \"    - rectangle with width is greater than height, orientation portrait\\n\" +\n-                    \"    - rectangle with width is greater than height, orientation landscape\\n\" +\n+                    \"    - rectangle with paper width is less than height, orientation portrait\\n\" +\n+                    \"    - rectangle with paper width is less than height, orientation landscape\\n\" +\n+                    \"    - rectangle with paper width is greater than height, orientation portrait\\n\" +\n+                    \"    - rectangle with paper width is greater than height, orientation landscape\\n\" +\n+                    \"  Note: PageFormat size returns transformed Paper size according to the set orientation value.\\n\" +\n@@ -81,2 +82,2 @@\n-        MediaSize isoSize = MediaSize.getMediaSizeForName(MediaSizeName.ISO_A5);\n-        float[] size = isoSize.getSize(Size2DSyntax.INCH);\n+        MediaSize isoA4Size = MediaSize.getMediaSizeForName(MediaSizeName.ISO_A4);\n+        float[] size = isoA4Size.getSize(Size2DSyntax.INCH);\n@@ -89,1 +90,1 @@\n-        BufferedImage img = createImage((int) page.getWidth(), (int) page.getHeight(), page.getOrientation(), pageIndex);\n+        BufferedImage img = createImage(page, pageIndex);\n@@ -139,5 +140,1 @@\n-    private static String getLabel(int width, int height, int orientation) {\n-        return String.format(\"%dx%d %s\", width, height, getOrientation(orientation));\n-    }\n-\n-    private static BufferedImage createImage(int w, int h, int orientation, int pageIndex) {\n+    private static BufferedImage createImage(PageFormat page, int pageIndex) {\n@@ -145,1 +142,2 @@\n-        System.out.printf(\"create image size: [%d, %d], orientation: %s%n\", w, h, getOrientation(orientation));\n+        int w = (int) page.getWidth();\n+        int h = (int) page.getHeight();\n@@ -164,1 +162,1 @@\n-        g.setFont(g.getFont().deriveFont(10.0f));\n+        g.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 12));\n@@ -188,3 +186,17 @@\n-        String label = getLabel(w, h, orientation);\n-        int strW = g.getFontMetrics().stringWidth(label);\n-        g.drawString(label, x + (w - strW) \/ 2, y + h \/ 5);\n+        g.setFont(g.getFont().deriveFont(Font.BOLD, 16.0f));\n+\n+        int textX = x + w \/ 18;\n+        int textY = y + h \/ 3;\n+        int textDelta = h \/ 16;\n+\n+        Paper paper = page.getPaper();\n+        String paperSize = String.format(\"Paper      size: %dx%d\",\n+                (int) paper.getWidth(), (int) paper.getHeight());\n+        g.drawString(paperSize, textX, textY);\n+\n+        String pageFormatSize = String.format(\"PageFormat size: %dx%d\", w, h);\n+        g.drawString(pageFormatSize, textX, textY + textDelta);\n+\n+        String orientation = String.format(\"Orientation: %s\",\n+                getOrientation(page.getOrientation()));\n+        g.drawString(orientation, textX, textY + 2 * textDelta);\n@@ -193,1 +205,1 @@\n-        g.setFont(g.getFont().deriveFont(24.0f));\n+        g.setFont(g.getFont().deriveFont(28.0f));\n","filename":"test\/jdk\/java\/awt\/print\/PageFormat\/PaperA5OrientationTest.java","additions":33,"deletions":21,"binary":false,"changes":54,"status":"modified"}]}