[{"commit":{"message":"Apply review comments\n\nCo-authored-by: Christian Hagedorn <christian.hagedorn@oracle.com>"},"files":[{"filename":"src\/hotspot\/share\/opto\/predicates.cpp"},{"filename":"src\/hotspot\/share\/opto\/predicates.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"d50f5ac9a27a4881ff0bea8011c32a80404edf4e"},{"commit":{"message":"Make test random"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"17b32db4aa1d40075f2203be1bf8a8d686ccf895"},{"commit":{"message":"Add test for predicate cloning on uncounted loops"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"8f6e276b5ca357640c3c1abda0e909cd4b82f448"},{"commit":{"message":"Add test case for predication before unswitching"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"6f0aa2de54d49bc19e7c5553a4a32644181773f3"},{"commit":{"message":"Test predicate cloning only before loop predication\n\nThus, we do not see the predicates in the loop selector that cloning\nactually killed."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"a2109e3c030b2e1c108f9378606baa7db03a1de8"},{"commit":{"message":"Clone loop limit predicates for uncounted loops\n\nWhen unswitching uncounted loops we have to clone loop limit checks\nbecause we do not have information on the behavior of the loop index"},"files":[{"filename":"src\/hotspot\/share\/opto\/predicates.cpp"},{"filename":"src\/hotspot\/share\/opto\/predicates.hpp"}],"sha":"99ee1fafe455a670fc95ec022e9451634ac4cc52"},{"commit":{"message":"Do not clone loop limit checks in loop unswitching"},"files":[{"filename":"src\/hotspot\/share\/opto\/predicates.cpp"}],"sha":"a329111ce86fe1be03b2fd0e7c55f8dd14672a5a"},{"commit":{"message":"Add suggested comment\n\nCo-authored-by: Christian Hagedorn <christian.hagedorn@oracle.com>"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"22f1c5052cb2dca1f8710709effa252129fa258f"},{"commit":{"message":"Remove -Xcomp and replace with Warmup(0)"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"66eed57ac920a61a842288933c6cb48c09c5faa9"},{"commit":{"message":"ir-framework: use new before\/after loop opts phases"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"7133ea5229c33b210959c2edba87d1a50debf5e3"},{"commit":{"message":"Add IR test for predicate cloning"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnswitchPredicateCloning.java"}],"sha":"7c69f2ee2911c944039240aab55aecd45996e806"},{"commit":{"message":"ir-framework: make the parse predicate node regex more robust"},"files":[{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"789dea6f390f4bbca2b1a33d39440467f620d21a"},{"commit":{"message":"ir-framework: add auto vectorization check node"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"16426a572b08db1a2a9d21c504e9d2bce2a22cd6"},{"commit":{"message":"ir-framework: add opaque template assertion predicate node"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"4806454268dab5ce29b0687b34692d0ab03e2998"}]