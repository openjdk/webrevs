{"files":[{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-Xmx1g\", \"-Xms1g\"})\n+@Fork(value = 3, jvmArgs = {\"-Xmx1g\", \"-Xms1g\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/CallerClassBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=0\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=0\"})\n@@ -59,1 +59,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=1\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=1\"})\n@@ -65,1 +65,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=2\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=2\"})\n@@ -71,1 +71,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=3\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=3\"})\n@@ -77,1 +77,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=4\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=4\"})\n@@ -83,1 +83,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=5\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:hashCode=5\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ObjectHashCode.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-      jvmArgsPrepend = {\"-Djmh.executor.class=org.openjdk.bench.java.lang.ScopedValuesExecutorService\",\n+      jvmArgs = {\"-Djmh.executor.class=org.openjdk.bench.java.lang.ScopedValuesExecutorService\",\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ScopedValues.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/java.lang=ALL-UNNAMED\", \"--add-opens\", \"java.base\/java.lang=ALL-UNNAMED\"})\n+    @Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/java.lang=ALL-UNNAMED\", \"--add-opens\", \"java.base\/java.lang=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/classfile\/TypeKindBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 3)\n+@Fork(jvmArgs = \"--enable-preview\", value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/classfile\/Utf8EntryWriteTo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/AllocFromSliceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/AllocFromTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/AllocTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadConstant.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadVirtual.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CriticalCalls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports=java.base\/jdk.internal.foreign=ALL-UNNAMED\", \"--enable-native-access=ALL-UNNAMED\", \"--enable-preview\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports=java.base\/jdk.internal.foreign=ALL-UNNAMED\", \"--enable-native-access=ALL-UNNAMED\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/InternalStrLen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"-XX:-TieredCompilation\" })\n+@Fork(value = 3, jvmArgs = { \"-XX:-TieredCompilation\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantAsType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverOfAddress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--enable-native-access=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--enable-native-access=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentCopyUnsafe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--enable-native-access=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--enable-native-access=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentGetUnsafe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--enable-native-access=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--enable-native-access=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentZeroUnsafe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.copy=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.copy=31\"})\n@@ -93,1 +93,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.copy=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.copy=0\"})\n@@ -99,1 +99,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.copy=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.copy=31\"})\n@@ -105,1 +105,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.copy=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.copy=0\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/SegmentBulkCopy.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n@@ -83,1 +83,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n@@ -89,1 +89,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n@@ -95,1 +95,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n@@ -101,1 +101,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=31\"})\n@@ -107,1 +107,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.fill=0\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/SegmentBulkFill.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.mismatch=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.mismatch=31\"})\n@@ -88,1 +88,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.mismatch=31\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.mismatch=31\"})\n@@ -94,1 +94,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.mismatch=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.mismatch=0\"})\n@@ -100,1 +100,1 @@\n-    @Fork(value = 3, jvmArgsAppend = {\"-Djava.lang.foreign.native.threshold.power.mismatch=0\"})\n+    @Fork(value = 3, jvmArgs = {\"-Djava.lang.foreign.native.threshold.power.mismatch=0\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/SegmentBulkMismatch.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToCStringTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"--enable-preview\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"--enable-preview\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToJavaStringTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/UnrolledAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/PointerBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/PointsAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/PointsAlloc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/PointsDistance.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/PointsFree.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n+@Fork(value = 3, jvmArgs = { \"--enable-native-access=ALL-UNNAMED\", \"-Djava.library.path=micro\/native\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/xor\/XorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-@Fork(value = 10, warmups = 5, jvmArgsAppend = {\n+@Fork(value = 10, warmups = 5, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/LazyStaticColdStart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = \"--add-exports=java.base\/sun.invoke.util=ALL-UNNAMED\")\n+@Fork(value = 3, jvmArgs = \"--add-exports=java.base\/sun.invoke.util=ALL-UNNAMED\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/Wrappers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 1, jvmArgsPrepend = \"--add-opens=java.base\/java.lang.reflect=ALL-UNNAMED\")\n+@Fork(value = 1, jvmArgs = \"--add-opens=java.base\/java.lang.reflect=ALL-UNNAMED\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/proxy\/ProxyGeneratorBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 2, jvmArgsAppend = \"--add-opens=java.base\/java.net=ALL-UNNAMED\")\n+@Fork(value = 2, jvmArgs = \"--add-opens=java.base\/java.net=ALL-UNNAMED\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/NetworkInterfaceLookup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-                .jvmArgsPrepend(\"-Djdk.net.useFastTcpLoopback=true\")\n+                .jvmArgs(\"-Djdk.net.useFastTcpLoopback=true\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/SocketChannelConnectionSetup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -56,1 +56,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -65,1 +65,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -74,1 +74,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -82,1 +82,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -90,1 +90,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -99,1 +99,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -108,1 +108,1 @@\n-    @Fork(value = 1, jvmArgsAppend = {\n+    @Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/SocketEventOverhead.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(value = 1, jvmArgsAppend = \"--add-exports=java.base\/sun.net.www=ALL-UNNAMED\")\n+@Fork(value = 1, jvmArgs = \"--add-exports=java.base\/sun.net.www=ALL-UNNAMED\")\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/ThreadLocalParseUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/AlgorithmConstraintsPermits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/CacheBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/sun.security.ssl=ALL-UNNAMED\", \"--add-opens\", \"java.base\/sun.security.ssl=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/sun.security.ssl=ALL-UNNAMED\", \"--add-opens\", \"java.base\/sun.security.ssl=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/CipherSuiteBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/sun.security.util=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/HSS.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(jvmArgsAppend = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n+@Fork(jvmArgs = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/MessageDigests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(jvmArgsAppend = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n+@Fork(jvmArgs = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/PKCS12KeyStores.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-    @Fork(value = 3, jvmArgsPrepend={\"-Djava.security.manager=allow\"})\n+    @Fork(value = 3, jvmArgs={\"-Djava.security.manager=allow\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/ProtectionDomainBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-@Fork(jvmArgsAppend = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n+@Fork(jvmArgs = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/Signatures.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(value=1, jvmArgsAppend={\"-XX:CompileThreshold=1\", \"-XX:-TieredCompilation\"})\n+@Fork(value=1, jvmArgs={\"-XX:CompileThreshold=1\", \"-XX:-TieredCompilation\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysSort.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value = 3, jvmArgsAppend = { \"-verbose:gc\", \"-XX:+UseParallelGC\", \"-Xms4g\", \"-Xmx4g\", \"-Xint\" })\n+@Fork(value = 3, jvmArgs = { \"-verbose:gc\", \"-XX:+UseParallelGC\", \"-Xms4g\", \"-Xmx4g\", \"-Xint\" })\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ListArgs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-Xms1g\", \"-Xmx1g\"})\n+@Fork(value = 3, jvmArgs = {\"-Xms1g\", \"-Xmx1g\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/StringJoinerBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherFMRPar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherFMRSeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherFlatMapInfinitySeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherFlatMapSeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherMapPar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherMapSeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherMiscPar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherMiscSeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherReducePar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherReduceSeq.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@Fork(jvmArgs = \"--enable-preview\", value = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/GatherWhileOrdered.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    @Fork(jvmArgsAppend = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseAES\", \"-XX:-UseAESIntrinsics\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseAES\", \"-XX:-UseAESIntrinsics\"})\n@@ -68,1 +68,1 @@\n-    @Fork(jvmArgsAppend = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseAES\", \"-XX:-UseAESIntrinsics\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseAES\", \"-XX:-UseAESIntrinsics\"})\n@@ -74,1 +74,1 @@\n-    @Fork(jvmArgsAppend = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseAES\", \"-XX:+UseAESIntrinsics\"})\n+    @Fork(jvmArgs = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseAES\", \"-XX:+UseAESIntrinsics\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/AES.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-Xms1g\", \"-Xmx1g\"})\n+@Fork(value = 3, jvmArgs = {\"-Xms1g\", \"-Xmx1g\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/AESReinit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-@Fork(jvmArgsAppend = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 5)\n+@Fork(jvmArgs = {\"-Xms1024m\", \"-Xmx1024m\", \"-Xmn768m\", \"-XX:+UseParallelGC\"}, value = 5)\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/Crypto.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-@Fork(jvmArgsAppend = {\"-XX:+AlwaysPreTouch\"}, value = 5)\n+@Fork(jvmArgs = {\"-XX:+AlwaysPreTouch\"}, value = 5)\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/CryptoBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\"--add-opens\", \"java.base\/com.sun.crypto.provider=ALL-UNNAMED\"})\n+@Fork(value = 1, jvmArgs = {\"--add-opens\", \"java.base\/com.sun.crypto.provider=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/Poly1305DigestBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-@Fork(jvmArgsAppend = {\"-XX:+AlwaysPreTouch\",\n+@Fork(jvmArgs = {\"-XX:+AlwaysPreTouch\",\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/PolynomialP256Bench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/AbstractCorpusBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/ClassfileBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/CodeAttributeTools.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\"--enable-preview\"})\n+@Fork(value = 1, jvmArgs = {\"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/ConstantPoolBuildingClassEntry.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/RebuildMethodBodies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/RepeatedModelTraversal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ArrayMismatchBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/BlackScholes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"-XX:UseAVX=2\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\", \"-XX:UseAVX=2\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ColumnFilterBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-@Fork(value = 3, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 3, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/EqualsIgnoreCaseBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/GatherOperationsBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/IndexInRangeBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/IndexVectorBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/LoadMaskedIOOBEBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskCastOperationsBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskFromLongBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskQueryOperationsBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskedLogicOpts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/RearrangeBytesBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/RotateBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/SelectFromBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskTrueCount.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskedBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(value = 1, jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskedIOOBEBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadSegmentVarious.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\n+@Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorExtractBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorFPtoIntCastOperations.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgs = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorZeroExtend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-      jvmArgsPrepend = {\"-Djmh.blackhole.mode=COMPILER\",\n+      jvmArgs = {\"-Djmh.blackhole.mode=COMPILER\",\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/preview\/patterns\/Exactness.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1197,1 +1197,1 @@\n-    @Fork(value = 3, jvmArgsPrepend = {\n+    @Fork(value = 3, jvmArgs = {\n@@ -1205,1 +1205,1 @@\n-    @Fork(value = 3, jvmArgsPrepend = {\n+    @Fork(value = 3, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AllocationMerges.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-@Fork(value = 3, jvmArgsPrepend = {\"-XX:-EliminateAllocations\", \"-XX:-DoEscapeAnalysis\"})\n+@Fork(value = 3, jvmArgs = {\"-XX:-EliminateAllocations\", \"-XX:-DoEscapeAnalysis\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ClearMemory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-Xms512m\", \"-Xmx512m\", \"-XX:+AlwaysPreTouch\", \"-XX:+UseParallelGC\"})\n+@Fork(value = 3, jvmArgs = {\"-Xms512m\", \"-Xmx512m\", \"-XX:+AlwaysPreTouch\", \"-XX:+UseParallelGC\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ConstructorBarriers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    @Fork(value=3, jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    @Fork(value=3, jvmArgs={\"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InterfacePrivateCalls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n+@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStoreBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\n+@Fork(value = 3, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStores.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n+@Fork(value = 3, jvmArgs = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SecondarySuperCacheHits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n+@Fork(value = 3, jvmArgs = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SecondarySuperCacheInterContention.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n+@Fork(value = 3, jvmArgs = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SecondarySuperCacheIntraContention.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@Fork(value = 3 , jvmArgsAppend = {\"-XX:-TieredCompilation\", \"-Xbatch\", \"-Xcomp\"})\n+@Fork(value = 3 , jvmArgs = {\"-XX:-TieredCompilation\", \"-Xbatch\", \"-Xcomp\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SubIdealC0Minus_YPlusC1_.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\"})\n+    @Fork(jvmArgs = {\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\"})\n@@ -393,1 +393,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\"})\n+    @Fork(jvmArgs = {\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\"})\n@@ -400,1 +400,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n@@ -407,1 +407,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/TypeVectorOperations.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -301,1 +301,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -306,1 +306,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -311,1 +311,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorAlignment.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n@@ -82,1 +82,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorBitCount.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n@@ -208,1 +208,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 1, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorLoadToStoreForwarding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n@@ -186,1 +186,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgs = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorReduction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1448,1 +1448,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\"-XX:+UseSuperWord\"})\n+    @Fork(value = 1, jvmArgs = {\"-XX:+UseSuperWord\"})\n@@ -1451,1 +1451,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\"-XX:-UseSuperWord\"})\n+    @Fork(value = 1, jvmArgs = {\"-XX:-UseSuperWord\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorReduction2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:-SuperWordLoopUnrollAnalysis\"})\n+    @Fork(jvmArgs = {\"-XX:-SuperWordLoopUnrollAnalysis\"})\n@@ -82,1 +82,1 @@\n-    @Fork(jvmArgsPrepend = {\"-XX:-SuperWordLoopUnrollAnalysis\"})\n+    @Fork(jvmArgs = {\"-XX:-SuperWordLoopUnrollAnalysis\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorReductionFloatingMinMax.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", MIXHASH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", MIXHASH_METHOD})\n@@ -61,1 +61,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:-TieredCompilation\", MIXHASH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:-TieredCompilation\", MIXHASH_METHOD})\n@@ -67,1 +67,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", MIXHASH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", MIXHASH_METHOD})\n@@ -73,1 +73,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\"})\n+    @Fork(jvmArgs={\"-Xbatch\"})\n@@ -98,1 +98,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\",TRIVIAL_MATH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\",TRIVIAL_MATH_METHOD})\n@@ -104,1 +104,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:-TieredCompilation\", TRIVIAL_MATH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:-TieredCompilation\", TRIVIAL_MATH_METHOD})\n@@ -110,1 +110,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", TRIVIAL_MATH_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", TRIVIAL_MATH_METHOD})\n@@ -116,1 +116,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\"})\n+    @Fork(jvmArgs={\"-Xbatch\"})\n@@ -138,1 +138,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\",LARGE_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\",LARGE_METHOD})\n@@ -144,1 +144,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:-TieredCompilation\", LARGE_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:-TieredCompilation\", LARGE_METHOD})\n@@ -150,1 +150,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", LARGE_METHOD})\n+    @Fork(jvmArgs={\"-Xbatch\", \"-XX:TieredStopAtLevel=1\", LARGE_METHOD})\n@@ -156,1 +156,1 @@\n-    @Fork(jvmArgsAppend={\"-Xbatch\"})\n+    @Fork(jvmArgs={\"-Xbatch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/overhead\/SimpleRepeatCompilation.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(value = 3, jvmArgsAppend = \"-XX:-UseSuperWord\")\n+@Fork(value = 3, jvmArgs = \"-XX:-UseSuperWord\")\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/BasicRules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(value = 1, jvmArgsAppend = {\"-XX:-UseSuperWord\"})\n+@Fork(value = 1, jvmArgs = {\"-XX:-UseSuperWord\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/ConvertF2I.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@Fork(value = 2, jvmArgsAppend = {\"-XX:LoopUnrollLimit=1\"})\n+@Fork(value = 2, jvmArgs = {\"-XX:LoopUnrollLimit=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/LeaInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = {\"-XX:+UseParallelGC\", \"-Xmx128m\"})\n+@Fork(value = 3, jvmArgs = {\"-XX:+UseParallelGC\", \"-Xmx128m\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/fences\/SafePublishing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@Fork(jvmArgsAppend = {\"-Xmx256m\", \"-XX:+UseLargePages\", \"-XX:LargePageSizeInBytes=1g\", \"-Xlog:pagesize\"}, value = 5)\n+@Fork(jvmArgs = {\"-Xmx256m\", \"-XX:+UseLargePages\", \"-XX:LargePageSizeInBytes=1g\", \"-Xlog:pagesize\"}, value = 5)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/MicroLargePages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    @Fork(jvmArgs={\"-XX:TieredStopAtLevel=1\"})\n@@ -109,1 +109,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    @Fork(jvmArgs={\"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/RawAllocationRate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/AllDead.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/AllLive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/DifferentObjectSizesArray.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/DifferentObjectSizesHashMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/DifferentObjectSizesTreeMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/HalfDeadFirstPart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/HalfDeadInterleaved.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/HalfDeadInterleavedChunks.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/HalfDeadSecondPart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/HalfHashedHalfDead.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/NoObjects.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-@Fork(value=25, jvmArgsAppend={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n+@Fork(value=25, jvmArgs={\"-Xmx5g\", \"-Xms5g\", \"-Xmn3g\", \"-XX:+AlwaysPreTouch\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/systemgc\/OneBigObject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n@@ -115,1 +115,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n@@ -122,1 +122,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n@@ -129,1 +129,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n@@ -152,1 +152,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n@@ -158,1 +158,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n@@ -164,1 +164,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:-UseSecondarySupersCache\"})\n@@ -170,1 +170,1 @@\n-    @Fork(jvmArgsAppend={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n+    @Fork(jvmArgs={\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+UseSecondarySupersTable\", \"-XX:+UseSecondarySupersCache\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/lang\/TypePollution.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-  @Fork(value = 2, jvmArgsPrepend = { \"-XX:NativeMemoryTracking=off\", ADD_EXPORTS, MISC_PACKAGE})\n+  @Fork(value = 2, jvmArgs = { \"-XX:NativeMemoryTracking=off\", ADD_EXPORTS, MISC_PACKAGE})\n@@ -249,1 +249,1 @@\n-  @Fork(value = 2, jvmArgsPrepend = { \"-XX:NativeMemoryTracking=summary\", ADD_EXPORTS, MISC_PACKAGE})\n+  @Fork(value = 2, jvmArgs = { \"-XX:NativeMemoryTracking=summary\", ADD_EXPORTS, MISC_PACKAGE})\n@@ -252,1 +252,1 @@\n-  @Fork(value = 2, jvmArgsPrepend = { \"-XX:NativeMemoryTracking=detail\", ADD_EXPORTS, MISC_PACKAGE})\n+  @Fork(value = 2, jvmArgs = { \"-XX:NativeMemoryTracking=detail\", ADD_EXPORTS, MISC_PACKAGE})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/runtime\/NMTBenchmark.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=off\"})\n+    @Fork(value = 2, jvmArgs = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=off\"})\n@@ -143,1 +143,1 @@\n-    @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=summary\"})\n+    @Fork(value = 2, jvmArgs = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=summary\"})\n@@ -146,1 +146,1 @@\n-    \/\/ @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=detail\"})\n+    \/\/ @Fork(value = 2, jvmArgs = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=detail\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/runtime\/NMTBenchmark_wb.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}