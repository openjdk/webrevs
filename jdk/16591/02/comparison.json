{"files":[{"patch":"@@ -838,0 +838,7 @@\n+  product(intx, UserThreadWaitAttemptsAtExit, 30,                           \\\n+          \"The number of times to wait for user threads to stop executing \" \\\n+          \"native code during JVM exit. Each wait lasts 10 milliseconds. \"  \\\n+          \"The maximum number of waits is 1000, to wait at most 10 \"        \\\n+          \"seconds.\")                                                       \\\n+          range(0, 1000)                                                    \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -394,4 +394,3 @@\n-  int max_wait_user_thread = 30;                  \/\/ at least 300 milliseconds\n-  int max_wait_compiler_thread = 1000;            \/\/ at least 10 seconds\n-\n-  int max_wait = max_wait_compiler_thread;\n+  int wait_time_per_attempt = 10;               \/\/ in milliseconds\n+  int max_wait_attempts_user_thread = UserThreadWaitAttemptsAtExit;\n+  int max_wait_attempts_compiler_thread = 1000; \/\/ at least 10 seconds\n@@ -430,1 +429,1 @@\n-    } else if (attempts > max_wait) {\n+    } else if (attempts >= max_wait_attempts_compiler_thread) {\n@@ -432,1 +431,2 @@\n-    } else if (num_active_compiler_thread == 0 && attempts > max_wait_user_thread) {\n+    } else if (num_active_compiler_thread == 0 &&\n+               attempts >= max_wait_attempts_user_thread) {\n@@ -439,1 +439,1 @@\n-    ml.wait(10);\n+    ml.wait(wait_time_per_attempt);\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}