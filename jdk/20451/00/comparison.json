{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import jdk.internal.util.ArraysSupport;\n@@ -709,3 +708,0 @@\n-    public int hashCode() {\n-        return ArraysSupport.hashCode(hb, ix(position()), remaining(), 1);\n-    }\n@@ -740,3 +736,0 @@\n-    public int hashCode() {\n-        return ArraysSupport.hashCode(hb, ix(position()), remaining(), 1);\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -39,0 +40,1 @@\n+import java.nio.MappedByteBuffer;\n@@ -40,0 +42,4 @@\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n@@ -42,0 +48,1 @@\n+import java.util.Set;\n@@ -46,0 +53,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -716,0 +725,15 @@\n+\n+    @Test\n+    void testHashCode() throws IOException {\n+        byte[] bytes = \"hello world\".getBytes(UTF_8);\n+        Path path = Files.createTempFile(\"\", \"\");\n+        Files.write(path, bytes);\n+        try (FileChannel fc = FileChannel.open(path, StandardOpenOption.READ,\n+            StandardOpenOption.DELETE_ON_CLOSE)) {\n+            MappedByteBuffer one =\n+                fc.map(FileChannel.MapMode.READ_ONLY, 0, bytes.length);\n+            ByteBuffer two = ByteBuffer.wrap(bytes);\n+            Assert.assertEquals(one, two);\n+            Assert.assertEquals(one.hashCode(), two.hashCode());\n+        }\n+    }\n","filename":"test\/jdk\/java\/nio\/Buffer\/EqualsCompareTest.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -926,5 +926,0 @@\n-\n-    @Benchmark\n-    public int testHeapHashCode() {\n-        return heapByteBuffer.hashCode();\n-    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}