{"files":[{"patch":"@@ -39,3 +39,3 @@\n-#include <stdlib.h>\n-#include <stdio.h>\n-#include <string.h>\n+#include <cstdlib>\n+#include <cstdio>\n+#include <cstring>\n@@ -412,3 +412,2 @@\n-    gss_name_struct* name;\n-    name = new gss_name_struct;\n-    if (name == NULL) {\n+    gss_name_struct* name = new gss_name_struct;\n+    if (name == nullptr) {\n@@ -532,0 +531,7 @@\n+    goto execution;\n+err:\n+    if (fullname != name) {\n+        delete[] fullname;\n+    }\n+    return result;\n+execution:\n@@ -537,2 +543,1 @@\n-    size_t namelen;\n-    namelen = wcslen(fullname);\n+    size_t namelen = wcslen(fullname);\n@@ -545,5 +550,3 @@\n-    int mechLen;\n-    mechLen = KRB5_OID.length;\n-    char* buffer;\n-    buffer = (char*) malloc(10 + mechLen + len);\n-    if (buffer == NULL) {\n+    int mechLen = KRB5_OID.length;\n+    char* buffer = static_cast<char*>(std::malloc(10 + mechLen + len));\n+    if (buffer == nullptr) {\n@@ -570,1 +573,0 @@\n-err:\n@@ -898,0 +900,15 @@\n+    goto execution;\n+\n+err:\n+    if (firstTime) {\n+        OM_uint32 dummy;\n+        gss_delete_sec_context(&dummy, context_handle, GSS_C_NO_BUFFER);\n+    }\n+    delete newCred;\n+    if (output_token->value) {\n+        gss_release_buffer(NULL, output_token);\n+    }\n+    output_token = GSS_C_NO_BUFFER;\n+    return GSS_S_FAILURE;\n+\n+execution:\n@@ -911,2 +928,1 @@\n-    int flag;\n-    flag = flag_gss_to_sspi(req_flags) | ISC_REQ_ALLOCATE_MEMORY;\n+    int flag = flag_gss_to_sspi(req_flags) | ISC_REQ_ALLOCATE_MEMORY;\n@@ -1022,11 +1038,0 @@\n-err:\n-    if (firstTime) {\n-        OM_uint32 dummy;\n-        gss_delete_sec_context(&dummy, context_handle, GSS_C_NO_BUFFER);\n-    }\n-    delete newCred;\n-    if (output_token->value) {\n-        gss_release_buffer(NULL, output_token);\n-    }\n-    output_token = GSS_C_NO_BUFFER;\n-    return GSS_S_FAILURE;\n","filename":"src\/java.security.jgss\/windows\/native\/libsspi_bridge\/sspi.cpp","additions":32,"deletions":27,"binary":false,"changes":59,"status":"modified"}]}