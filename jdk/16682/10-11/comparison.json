{"files":[{"patch":"@@ -44,0 +44,1 @@\n+#include <memory>\n@@ -370,3 +371,3 @@\n-    SEC_WCHAR* value = new SEC_WCHAR[len + 1];\n-    if (value == NULL) {\n-        goto err;\n+    std::unique_ptr<SEC_WCHAR[]> value(new SEC_WCHAR[len + 1]);\n+    if (value == nullptr) {\n+        return GSS_S_FAILURE;\n@@ -375,1 +376,1 @@\n-    len = MultiByteToWideChar(CP_UTF8, 0, input, len, value, len+1);\n+    len = MultiByteToWideChar(CP_UTF8, 0, input, len, value.get(), len+1);\n@@ -377,1 +378,1 @@\n-        goto err;\n+        return GSS_S_FAILURE;\n@@ -381,1 +382,1 @@\n-    PP(\"import_name from %ls\", value);\n+    PP(\"import_name from %ls\", value.get());\n@@ -383,1 +384,1 @@\n-    if (len > 33 && !wcscmp(value+len-33, L\"@WELLKNOWN:ORG.H5L.REFERALS-REALM\")) {\n+    if (len > 33 && !wcscmp(value.get()+len-33, L\"@WELLKNOWN:ORG.H5L.REFERALS-REALM\")) {\n@@ -393,1 +394,1 @@\n-        goto err;\n+        return GSS_S_FAILURE;\n@@ -409,1 +410,1 @@\n-        PP(\"Host-based service now %ls\", value);\n+        PP(\"Host-based service now %ls\", value.get());\n@@ -411,1 +412,1 @@\n-    PP(\"import_name to %ls\", value);\n+    PP(\"import_name to %ls\", value.get());\n@@ -414,1 +415,1 @@\n-        goto err;\n+        return GSS_S_FAILURE;\n@@ -416,1 +417,1 @@\n-    name->name = value;\n+    name->name = value.get();\n@@ -419,3 +420,0 @@\n-err:\n-    delete[] value;\n-    return GSS_S_FAILURE;\n","filename":"src\/java.security.jgss\/windows\/native\/libsspi_bridge\/sspi.cpp","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}