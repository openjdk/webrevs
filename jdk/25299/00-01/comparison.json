{"files":[{"patch":"@@ -43,0 +43,3 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n@@ -45,1 +48,0 @@\n-    final MouseEnterExitListener mouseEnterExitListener = new MouseEnterExitListener();\n@@ -48,0 +50,5 @@\n+    private final int X_OFFSET = 30;\n+    private final int Y_OFFSET = 40;\n+    private final int LATCH_TIMEOUT = 3;\n+    private static volatile CountDownLatch mouseEnterLatch = new CountDownLatch(1);\n+    private static volatile CountDownLatch mouseExitLatch = new CountDownLatch(1);\n@@ -64,1 +71,1 @@\n-                list.addMouseListener(mouseEnterExitListener);\n+                list.addMouseListener(new MouseEnterExitListener());\n@@ -73,0 +80,1 @@\n+            robot.setAutoDelay(100);\n@@ -79,1 +87,1 @@\n-            robot.mouseMove(p.x + 30, p.y + 40);\n+            robot.mouseMove(p.x + X_OFFSET, p.y + Y_OFFSET);\n@@ -81,1 +89,0 @@\n-            robot.delay(100);\n@@ -83,1 +90,1 @@\n-            robot.mouseMove(p.x - 30, p.y + 40);\n+            robot.mouseMove(p.x - X_OFFSET, p.y + Y_OFFSET);\n@@ -85,1 +92,0 @@\n-            robot.delay(100);\n@@ -87,1 +93,1 @@\n-            robot.mouseMove(p.x + 30, p.y + 40);\n+            robot.mouseMove(p.x + X_OFFSET, p.y + Y_OFFSET);\n@@ -89,1 +95,0 @@\n-            robot.delay(100);\n@@ -91,2 +96,4 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            if (!mouseEnterLatch.await(LATCH_TIMEOUT, TimeUnit.SECONDS)) {\n+                System.out.println(\"mouseEnterLatch count is : \" + mouseEnterLatch.getCount());\n+                throw new RuntimeException(\"Mouse enter event timeout\");\n+            }\n@@ -94,2 +101,3 @@\n-            synchronized (mouseEnterExitListener) {\n-                mouseEnterExitListener.wait(2000);\n+            if (!mouseExitLatch.await(LATCH_TIMEOUT, TimeUnit.SECONDS)) {\n+                System.out.println(\"mouseExitLatch count is : \" + mouseExitLatch.getCount());\n+                throw new RuntimeException(\"Mouse exit event timeout\");\n@@ -104,16 +112,0 @@\n-        if (!mouseEnterExitListener.isPassed()) {\n-            throw new RuntimeException(\"Haven't receive mouse enter\/exit events\");\n-        }\n-\n-    }\n-\n-}\n-\n-class MouseEnterExitListener extends MouseAdapter {\n-\n-    volatile boolean passed_1 = false;\n-    volatile boolean passed_2 = false;\n-\n-    public void mouseEntered(MouseEvent e) {\n-        System.out.println(\"Mouse Entered Event\");\n-        passed_1 = true;\n@@ -122,9 +114,4 @@\n-    public void mouseExited(MouseEvent e) {\n-        System.out.println(\"Mouse Exited Event\");\n-        passed_2 = true;\n-    }\n-\n-    public void mousePressed(MouseEvent e) {\n-        synchronized (this) {\n-            System.out.println(\"mouse pressed\");\n-            this.notifyAll();\n+    static class MouseEnterExitListener extends MouseAdapter {\n+        public void mouseEntered(MouseEvent e) {\n+            System.out.println(\"Mouse Entered Event\");\n+            mouseEnterLatch.countDown();\n@@ -132,1 +119,0 @@\n-    }\n@@ -134,2 +120,4 @@\n-    public boolean isPassed() {\n-        return passed_1 & passed_2;\n+        public void mouseExited(MouseEvent e) {\n+            System.out.println(\"Mouse Exited Event\");\n+            mouseExitLatch.countDown();\n+        }\n","filename":"test\/jdk\/java\/awt\/List\/ListEnterExitTest.java","additions":28,"deletions":40,"binary":false,"changes":68,"status":"modified"}]}