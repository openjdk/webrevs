{"files":[{"patch":"@@ -467,1 +467,3 @@\n-            boolean hexInput = isX(s.charAt(isSigned ? 2 : 1));\n+            \/\/ A valid hex literal must be at least three characters\n+            \/\/ long \"0xD\" where D is a hex digit.\n+            boolean hexInput = (s.length() >= 3 ) && isX(s.charAt(isSigned ? 2 : 1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float16.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.List;\n@@ -525,0 +526,11 @@\n+            \/\/ Decimal signed integers are accepted as input; hex\n+            \/\/ signed integers are not, see negative test cases below.\n+            new String2Float16Case( \"1\",  1.0f),\n+            new String2Float16Case(\"-1\", -1.0f),\n+\n+            new String2Float16Case( \"12\",  12.0f),\n+            new String2Float16Case(\"-12\", -12.0f),\n+\n+            new String2Float16Case( \"123\",  123.0f),\n+            new String2Float16Case(\"-123\", -123.0f),\n+\n@@ -536,1 +548,0 @@\n-\n@@ -588,0 +599,14 @@\n+        List<String> negativeCases = List.of( \"0x1\",\n+                                       \"-0x1\",\n+                                        \"0x12\",\n+                                       \"-0x12\");\n+\n+        for(String negativeCase : negativeCases) {\n+            try {\n+                Float16 f16 = Float16.valueOf(negativeCase);\n+                throw new RuntimeException(\"Did not get expected exception for input \" + negativeCase);\n+            } catch (NumberFormatException nfe) {\n+                ; \/\/ Expected\n+            }\n+        }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/BasicFloat16ArithTests.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}