{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,0 @@\n-                                         Node* ctl,\n-                                         Node* oop_store,\n@@ -57,1 +55,0 @@\n-                                         uint  adr_idx,\n@@ -59,1 +56,0 @@\n-                                         BasicType bt,\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/cardTableBarrierSetC2.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-                            Node* ctl,\n-                            Node* store,\n@@ -37,1 +35,0 @@\n-                            uint adr_idx,\n@@ -39,1 +36,0 @@\n-                            BasicType bt,\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/cardTableBarrierSetC2.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-#include \"opto\/narrowptrnode.hpp\"\n@@ -31,1 +30,0 @@\n-#include \"utilities\/macros.hpp\"\n@@ -36,1 +34,0 @@\n-  const TypePtr* adr_type = access.addr().type();\n@@ -51,1 +48,0 @@\n-  GraphKit* kit = parse_access.kit();\n@@ -53,5 +49,0 @@\n-  uint adr_idx = kit->C->get_alias_index(adr_type);\n-  assert(adr_idx != Compile::AliasIdxTop, \"use other store_to_memory factory\" );\n-\n-  pre_barrier(kit, true \/* do_load *\/, kit->control(), access.base(), adr, adr_idx, val.node(),\n-              static_cast<const TypeOopPtr*>(val.type()), nullptr \/* pre_val *\/, access.type());\n@@ -59,2 +50,1 @@\n-  post_barrier(kit, kit->control(), access.raw_access(), access.base(), adr, adr_idx, val.node(),\n-               access.type(), use_precise);\n+  post_barrier(parse_access.kit(), access.base(), adr, val.node(), use_precise);\n@@ -67,2 +57,0 @@\n-  GraphKit* kit = access.kit();\n-\n@@ -73,4 +61,0 @@\n-  pre_barrier(kit, false \/* do_load *\/,\n-              kit->control(), nullptr, nullptr, max_juint, nullptr, nullptr,\n-              expected_val \/* pre_val *\/, T_OBJECT);\n-\n@@ -79,2 +63,1 @@\n-  post_barrier(kit, kit->control(), access.raw_access(), access.base(),\n-               access.addr().node(), access.alias_idx(), new_val, T_OBJECT, true);\n+  post_barrier(access.kit(), access.base(), access.addr().node(), new_val, true);\n@@ -93,4 +76,0 @@\n-  pre_barrier(kit, false \/* do_load *\/,\n-              kit->control(), nullptr, nullptr, max_juint, nullptr, nullptr,\n-              expected_val \/* pre_val *\/, T_OBJECT);\n-\n@@ -112,2 +91,1 @@\n-    post_barrier(kit, ideal.ctrl(), access.raw_access(), access.base(),\n-                 access.addr().node(), access.alias_idx(), new_val, T_OBJECT, true);\n+    post_barrier(kit, access.base(), access.addr().node(), new_val, true);\n@@ -122,2 +100,0 @@\n-  GraphKit* kit = access.kit();\n-\n@@ -129,8 +105,1 @@\n-  \/\/ Don't need to load pre_val. The old value is returned by load_store.\n-  \/\/ The pre_barrier can execute after the xchg as long as no safepoint\n-  \/\/ gets inserted between them.\n-  pre_barrier(kit, false \/* do_load *\/,\n-              kit->control(), nullptr, nullptr, max_juint, nullptr, nullptr,\n-              result \/* pre_val *\/, T_OBJECT);\n-  post_barrier(kit, kit->control(), access.raw_access(), access.base(), access.addr().node(),\n-               access.alias_idx(), new_val, T_OBJECT, true);\n+  post_barrier(access.kit(), access.base(), access.addr().node(), new_val, true);\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/modRefBarrierSetC2.cpp","additions":5,"deletions":36,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,11 +34,0 @@\n-  virtual void pre_barrier(GraphKit* kit,\n-                           bool do_load,\n-                           Node* ctl,\n-                           Node* obj,\n-                           Node* adr,\n-                           uint adr_idx,\n-                           Node* val,\n-                           const TypeOopPtr* val_type,\n-                           Node* pre_val,\n-                           BasicType bt) const {}\n-\n@@ -46,2 +35,0 @@\n-                            Node* ctl,\n-                            Node* store,\n@@ -50,1 +37,0 @@\n-                            uint adr_idx,\n@@ -52,1 +38,0 @@\n-                            BasicType bt,\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/modRefBarrierSetC2.hpp","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"}]}