{"files":[{"patch":"@@ -431,1 +431,1 @@\n-void ZDriverMajor::collect_old(const ZDriverRequest& request) {\n+void ZDriverMajor::collect_old() {\n@@ -433,5 +433,0 @@\n-\n-  \/\/ Set up soft reference policy\n-  const bool clear_soft_refs = should_clear_soft_references(request.cause());\n-  ZGeneration::old()->set_soft_reference_policy(clear_soft_refs);\n-\n@@ -450,1 +445,1 @@\n-  collect_old(request);\n+  collect_old();\n@@ -473,0 +468,4 @@\n+    \/\/ Set up soft reference policy\n+    const bool clear_soft_refs = should_clear_soft_references(request.cause());\n+    ZGeneration::old()->set_soft_reference_policy(clear_soft_refs);\n+\n@@ -482,1 +481,1 @@\n-    handle_alloc_stalls(should_clear_soft_references(request.cause()));\n+    handle_alloc_stalls(clear_soft_refs);\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  void collect_old(const ZDriverRequest& request);\n+  void collect_old();\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,0 +116,1 @@\n+    _always_clear_policy(false),\n@@ -128,1 +129,1 @@\n-    log_info(gc, ref)(\"Clearing All SoftReferences\");\n+    _always_clear_policy = true;\n@@ -131,0 +132,1 @@\n+    _always_clear_policy = false;\n@@ -441,0 +443,4 @@\n+  if (_always_clear_policy) {\n+    log_info(gc, ref)(\"Clearing All SoftReferences\");\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+  \/\/ Judge whether the _soft_reference_policy is AlwaysClearPolicy or not,\n+  \/\/ use this extra field to avoid using RTTI (runtime type information).\n+  bool                 _always_clear_policy;\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}