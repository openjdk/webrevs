{"files":[{"patch":"@@ -234,2 +234,2 @@\n-  static bool is_null(Klass* v)      { return v == nullptr; }\n-  static bool is_null(narrowKlass v) { return v == 0; }\n+  static bool is_null(const Klass* v)  { return v == nullptr; }\n+  static bool is_null(narrowKlass v)   { return v == 0; }\n@@ -243,3 +243,3 @@\n-  static inline narrowKlass encode_not_null_without_asserts(Klass* k, address narrow_base, int shift);\n-  static inline narrowKlass encode_not_null(Klass* v);\n-  static inline narrowKlass encode(Klass* v);\n+  static inline narrowKlass encode_not_null_without_asserts(const Klass* k, address narrow_base, int shift);\n+  static inline narrowKlass encode_not_null(const Klass* v);\n+  static inline narrowKlass encode(const Klass* v);\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-inline narrowKlass CompressedKlassPointers::encode_not_null_without_asserts(Klass* k, address narrow_base, int shift) {\n+inline narrowKlass CompressedKlassPointers::encode_not_null_without_asserts(const Klass* k, address narrow_base, int shift) {\n@@ -63,1 +63,1 @@\n-inline narrowKlass CompressedKlassPointers::encode_not_null(Klass* v) {\n+inline narrowKlass CompressedKlassPointers::encode_not_null(const Klass* v) {\n@@ -72,1 +72,1 @@\n-inline narrowKlass CompressedKlassPointers::encode(Klass* v) {\n+inline narrowKlass CompressedKlassPointers::encode(const Klass* v) {\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}