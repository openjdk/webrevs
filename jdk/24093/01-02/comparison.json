{"files":[{"patch":"@@ -351,1 +351,1 @@\n-        String regex = START + \"Allocate\\\\b\" + MID + \"allocationKlass:.*\\\\b\" + IS_REPLACED + \"\\\\b.*\" + END;\n+        String regex = START + \"Allocate\\\\b\" + MID + \"allocationKlass:.*\\\\b\" + IS_REPLACED + \"\\\\s.*\" + END;\n@@ -365,0 +365,2 @@\n+        \/\/ or, with more dimensions\n+        \/\/ [[[Lsome\/package\/MyClass;\n@@ -366,1 +368,1 @@\n-        \/\/ Case where the search string is a not fully qualified name (but maybe partially qualified):\n+        \/\/ Case where the searched string is a not fully qualified name (but maybe partially qualified):\n@@ -368,1 +370,1 @@\n-        \/\/ The \".*\\\\b\" will eat the \"some\/\"\n+        \/\/ The \".*\\\\b\" will eat the \"some\/\" and \"some\/package\/\" resp.\n@@ -371,1 +373,1 @@\n-        \/\/ A sequence of:\n+        \/\/ The thing after \"allocationKlass:\" (the name of the allocated class) is a sequence of:\n@@ -373,1 +375,1 @@\n-        \/\/ - a single character (\"L\" in our example),\n+        \/\/ - a single character (\"L\"),\n@@ -375,0 +377,2 @@\n+        \/\/   this sequence is omitted if the given name is already fully qualified (exact match)\n+        \/\/   but will eat the package path prefix in the cases described above\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -124,1 +124,2 @@\n-                GoodFailOnConstraint.create(AllocInstance.class, \"allocInstance()\", 9)\n+                GoodFailOnConstraint.create(AllocInstance.class, \"allocInstance()\", 9),\n+                GoodFailOnConstraint.create(AllocInstance.class, \"allocInstance()\", 10)\n@@ -135,1 +136,2 @@\n-                 GoodFailOnConstraint.create(AllocArray.class, \"allocArray()\", 9)\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocArray()\", 9),\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocArray()\", 10)\n@@ -146,1 +148,2 @@\n-                 GoodFailOnConstraint.create(AllocArray.class, \"allocMultiArray()\", 9)\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocMultiArray()\", 9),\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocMultiArray()\", 10)\n@@ -959,0 +962,1 @@\n+    @IR(failOn = {IRNode.ALLOC_OF, \"tests\"}) \/\/ Does not fail\n@@ -978,0 +982,1 @@\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"tests\"}) \/\/ Does not fail\n@@ -992,0 +997,1 @@\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"tests\"}) \/\/ Does not fail\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}