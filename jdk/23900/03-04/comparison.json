{"files":[{"patch":"@@ -126,1 +126,0 @@\n-    <Field type=\"ulong\" name=\"peakCount\" label=\"Peak Monitors in Use\" description=\"Peak number of in-use monitors over the entire JVM lifetime\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -746,1 +746,0 @@\n-  event.set_peakCount(ObjectSynchronizer::in_use_list_max());\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n-    private static final String FIELD_PEAK_COUNT = \"peakCount\";\n@@ -92,1 +91,0 @@\n-            long globalPeakCount = Long.MIN_VALUE;\n@@ -95,1 +93,0 @@\n-                long evPeakCount = Events.assertField(ev, FIELD_PEAK_COUNT).getValue();\n@@ -97,2 +94,0 @@\n-                assertTrue(evCount <= evPeakCount, \"Count should be less or equal to peak: \" + evCount + \" <= \" + evPeakCount);\n-                assertTrue(evPeakCount >= 0, \"Peak should be non-negative: \" + evPeakCount);\n@@ -100,1 +95,0 @@\n-                globalPeakCount = Math.max(globalPeakCount, evPeakCount);\n@@ -104,1 +98,0 @@\n-            assertTrue(globalPeakCount >= NUM_LOCKS, \"Global peak should be at least \" + NUM_LOCKS + \": \" + globalPeakCount);\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestJavaMonitorStatisticsEvent.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}