{"files":[{"patch":"@@ -47,1 +47,1 @@\n-void* AdlChunk::operator new(size_t requested_size, size_t length) throw() {\n+void* AdlChunk::operator new(size_t requested_size, size_t length) noexcept {\n@@ -186,1 +186,1 @@\n-void* AdlCHeapObj::operator new(size_t size) throw() {\n+void* AdlCHeapObj::operator new(size_t size) noexcept {\n","filename":"src\/hotspot\/share\/adlc\/adlArena.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  void* operator new(size_t size) throw();\n+  void* operator new(size_t size) noexcept;\n@@ -52,1 +52,1 @@\n-  void* operator new(size_t size) throw();\n+  void* operator new(size_t size) noexcept;\n@@ -66,1 +66,1 @@\n-  void* operator new(size_t size, size_t length) throw();\n+  void* operator new(size_t size, size_t length) noexcept;\n","filename":"src\/hotspot\/share\/adlc\/adlArena.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -493,1 +493,1 @@\n-void *operator new( size_t size, int, const char *, int ) throw() {\n+void *operator new( size_t size, int, const char *, int ) noexcept {\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -394,2 +394,2 @@\n-  void* operator new(size_t size) throw() { return resource_allocate_bytes(size); }\n-  void  operator delete(void* p)          { ShouldNotCallThis(); }\n+  void* operator new(size_t size) noexcept { return resource_allocate_bytes(size); }\n+  void  operator delete(void* p)           { ShouldNotCallThis(); }\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -327,2 +327,2 @@\n-  void* operator new(size_t size) throw() { return Compilation::current()->arena()->Amalloc(size); }\n-  void* operator new(size_t size, Arena* arena) throw() {\n+  void* operator new(size_t size) noexcept { return Compilation::current()->arena()->Amalloc(size); }\n+  void* operator new(size_t size, Arena* arena) noexcept {\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  void* operator new(size_t size) throw() {\n+  void* operator new(size_t size) noexcept {\n@@ -1629,1 +1629,1 @@\n-   void* operator new(size_t size) throw() {\n+   void* operator new(size_t size) noexcept {\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,2 +159,2 @@\n-  void* operator new(size_t size) throw();\n-  void* operator new[](size_t size) throw();\n+  void* operator new(size_t size) noexcept;\n+  void* operator new[](size_t size) noexcept;\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,2 +50,2 @@\n-    void* operator new(size_t size) throw();\n-    void* operator new[](size_t size) throw();\n+    void* operator new(size_t size) noexcept;\n+    void* operator new[](size_t size) noexcept;\n","filename":"src\/hotspot\/share\/c1\/c1_RangeCheckElimination.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-void* BufferBlob::operator new(size_t s, unsigned size) throw() {\n+void* BufferBlob::operator new(size_t s, unsigned size) noexcept {\n@@ -326,1 +326,1 @@\n-void* VtableBlob::operator new(size_t s, unsigned size) throw() {\n+void* VtableBlob::operator new(size_t s, unsigned size) noexcept {\n@@ -440,1 +440,1 @@\n-void* RuntimeStub::operator new(size_t s, unsigned size) throw() {\n+void* RuntimeStub::operator new(size_t s, unsigned size) noexcept {\n@@ -445,1 +445,1 @@\n-void* SingletonBlob::operator new(size_t s, unsigned size) throw() {\n+void* SingletonBlob::operator new(size_t s, unsigned size) noexcept {\n@@ -749,1 +749,1 @@\n-void* UpcallStub::operator new(size_t s, unsigned size) throw() {\n+void* UpcallStub::operator new(size_t s, unsigned size) noexcept {\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -409,1 +409,1 @@\n-  void* operator new(size_t s, unsigned size) throw();\n+  void* operator new(size_t s, unsigned size) noexcept;\n@@ -450,1 +450,1 @@\n-  void* operator new(size_t s, unsigned size) throw();\n+  void* operator new(size_t s, unsigned size) noexcept;\n@@ -493,1 +493,1 @@\n-  void* operator new(size_t s, unsigned size) throw();\n+  void* operator new(size_t s, unsigned size) noexcept;\n@@ -530,1 +530,1 @@\n-  void* operator new(size_t s, unsigned size) throw();\n+  void* operator new(size_t s, unsigned size) noexcept;\n@@ -741,1 +741,1 @@\n-  void* operator new(size_t s, unsigned size) throw();\n+  void* operator new(size_t s, unsigned size) noexcept;\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  void* operator new(size_t ignore, DebugInformationRecorder* dir) throw() {\n+  void* operator new(size_t ignore, DebugInformationRecorder* dir) noexcept {\n","filename":"src\/hotspot\/share\/code\/debugInfoRec.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -751,1 +751,1 @@\n-void* nmethod::operator new(size_t size, int nmethod_size, int comp_level) throw () {\n+void* nmethod::operator new(size_t size, int nmethod_size, int comp_level) noexcept {\n@@ -755,1 +755,1 @@\n-void* nmethod::operator new(size_t size, int nmethod_size, bool allow_NonNMethod_space) throw () {\n+void* nmethod::operator new(size_t size, int nmethod_size, bool allow_NonNMethod_space) noexcept {\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -302,1 +302,1 @@\n-  void* operator new(size_t size, int nmethod_size, int comp_level) throw();\n+  void* operator new(size_t size, int nmethod_size, int comp_level) noexcept;\n@@ -306,1 +306,1 @@\n-  void* operator new(size_t size, int nmethod_size, bool allow_NonNMethod_space) throw();\n+  void* operator new(size_t size, int nmethod_size, bool allow_NonNMethod_space) noexcept;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-void* VtableStub::operator new(size_t size, int code_size) throw() {\n+void* VtableStub::operator new(size_t size, int code_size) noexcept {\n","filename":"src\/hotspot\/share\/code\/vtableStubs.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  void* operator new(size_t size, int code_size) throw();\n+  void* operator new(size_t size, int code_size) noexcept;\n","filename":"src\/hotspot\/share\/code\/vtableStubs.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-void* JfrCHeapObj::operator new(size_t size) throw() {\n+void* JfrCHeapObj::operator new(size_t size) noexcept {\n@@ -98,1 +98,1 @@\n-void* JfrCHeapObj::operator new (size_t size, const std::nothrow_t&  nothrow_constant) throw() {\n+void* JfrCHeapObj::operator new (size_t size, const std::nothrow_t&  nothrow_constant) noexcept {\n@@ -104,1 +104,1 @@\n-void* JfrCHeapObj::operator new [](size_t size) throw() {\n+void* JfrCHeapObj::operator new [](size_t size) noexcept {\n@@ -108,1 +108,1 @@\n-void* JfrCHeapObj::operator new [](size_t size, const std::nothrow_t&  nothrow_constant) throw() {\n+void* JfrCHeapObj::operator new [](size_t size, const std::nothrow_t&  nothrow_constant) noexcept {\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrAllocation.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -56,4 +56,4 @@\n-  NOINLINE void* operator new(size_t size) throw();\n-  NOINLINE void* operator new (size_t size, const std::nothrow_t&  nothrow_constant) throw();\n-  NOINLINE void* operator new [](size_t size) throw();\n-  NOINLINE void* operator new [](size_t size, const std::nothrow_t&  nothrow_constant) throw();\n+  NOINLINE void* operator new(size_t size) noexcept;\n+  NOINLINE void* operator new (size_t size, const std::nothrow_t&  nothrow_constant) noexcept;\n+  NOINLINE void* operator new [](size_t size) noexcept;\n+  NOINLINE void* operator new [](size_t size, const std::nothrow_t&  nothrow_constant) noexcept;\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrAllocation.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-                                 MetaspaceObj::Type type, TRAPS) throw() {\n+                                 MetaspaceObj::Type type, TRAPS) noexcept {\n@@ -83,1 +83,1 @@\n-                                 MetaspaceObj::Type type) throw() {\n+                                 MetaspaceObj::Type type) noexcept {\n@@ -106,1 +106,1 @@\n-void* ArenaObj::operator new(size_t size, Arena *arena) throw() {\n+void* ArenaObj::operator new(size_t size, Arena *arena) noexcept {\n@@ -120,1 +120,1 @@\n-void* AnyObj::operator new(size_t size, MEMFLAGS flags) throw() {\n+void* AnyObj::operator new(size_t size, MEMFLAGS flags) noexcept {\n@@ -127,1 +127,1 @@\n-    MEMFLAGS flags) throw() {\n+    MEMFLAGS flags) noexcept {\n","filename":"src\/hotspot\/share\/memory\/allocation.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-                                  const NativeCallStack& stack) throw() {\n+                                  const NativeCallStack& stack) noexcept {\n@@ -201,1 +201,1 @@\n-                                  const std::nothrow_t&) throw() {\n+                                  const std::nothrow_t&) noexcept {\n@@ -218,1 +218,1 @@\n-                                    const NativeCallStack& stack) throw() {\n+                                    const NativeCallStack& stack) noexcept {\n@@ -224,1 +224,1 @@\n-                                    const std::nothrow_t&) throw() {\n+                                    const std::nothrow_t&) noexcept {\n@@ -246,1 +246,1 @@\n-                                  const NativeCallStack& stack) throw() {\n+                                  const NativeCallStack& stack) noexcept {\n@@ -250,1 +250,1 @@\n-  ALWAYSINLINE void* operator new(size_t size, const std::nothrow_t& nt) throw() {\n+  ALWAYSINLINE void* operator new(size_t size, const std::nothrow_t& nt) noexcept {\n@@ -264,1 +264,1 @@\n-                                    const NativeCallStack& stack) throw() {\n+                                    const NativeCallStack& stack) noexcept {\n@@ -268,1 +268,1 @@\n-  ALWAYSINLINE void* operator new[](size_t size, const std::nothrow_t& nt) throw() {\n+  ALWAYSINLINE void* operator new[](size_t size, const std::nothrow_t& nt) noexcept {\n@@ -407,1 +407,1 @@\n-                     Type type, JavaThread* thread) throw();\n+                     Type type, JavaThread* thread) noexcept;\n@@ -411,1 +411,1 @@\n-                     Type type) throw();\n+                     Type type) noexcept;\n@@ -440,1 +440,1 @@\n-  void* operator new(size_t size, const std::nothrow_t& nothrow_constant) throw() {\n+  void* operator new(size_t size, const std::nothrow_t& nothrow_constant) noexcept {\n@@ -444,2 +444,2 @@\n-  void* operator new [](size_t size) throw() = delete;\n-  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) throw() = delete;\n+  void* operator new [](size_t size) noexcept = delete;\n+  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) noexcept = delete;\n@@ -453,2 +453,2 @@\n-  void* operator new(size_t size, Arena *arena) throw();\n-  void* operator new [](size_t size, Arena *arena) throw() = delete;\n+  void* operator new(size_t size, Arena *arena) noexcept;\n+  void* operator new [](size_t size, Arena *arena) noexcept = delete;\n@@ -456,2 +456,2 @@\n-  void* operator new [](size_t size) throw() = delete;\n-  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) throw() = delete;\n+  void* operator new [](size_t size) noexcept = delete;\n+  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) noexcept = delete;\n@@ -500,2 +500,2 @@\n-  void* operator new(size_t size, const std::nothrow_t&  nothrow_constant, MEMFLAGS flags) throw();\n-  void* operator new [](size_t size, const std::nothrow_t&  nothrow_constant, MEMFLAGS flags) throw() = delete;\n+  void* operator new(size_t size, const std::nothrow_t&  nothrow_constant, MEMFLAGS flags) noexcept;\n+  void* operator new [](size_t size, const std::nothrow_t&  nothrow_constant, MEMFLAGS flags) noexcept = delete;\n@@ -513,1 +513,1 @@\n-  void* operator new(size_t size, const std::nothrow_t& nothrow_constant) throw() {\n+  void* operator new(size_t size, const std::nothrow_t& nothrow_constant) noexcept {\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-  inline void* operator new(size_t size, ClassLoaderData* loader_data, int length, TRAPS) throw();\n+  inline void* operator new(size_t size, ClassLoaderData* loader_data, int length, TRAPS) noexcept;\n","filename":"src\/hotspot\/share\/oops\/array.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-inline void* Array<T>::operator new(size_t size, ClassLoaderData* loader_data, int length, TRAPS) throw() {\n+inline void* Array<T>::operator new(size_t size, ClassLoaderData* loader_data, int length, TRAPS) noexcept {\n","filename":"src\/hotspot\/share\/oops\/array.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-void* Klass::operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, TRAPS) throw() {\n+void* Klass::operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, TRAPS) noexcept {\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-  void* operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, TRAPS) throw();\n+  void* operator new(size_t size, ClassLoaderData* loader_data, size_t word_size, TRAPS) noexcept;\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -798,1 +798,1 @@\n-void* FailedSpeculation::operator new(size_t size, size_t fs_size) throw() {\n+void* FailedSpeculation::operator new(size_t size, size_t fs_size) noexcept {\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1928,1 +1928,1 @@\n-  void* operator new(size_t size, size_t fs_size) throw();\n+  void* operator new(size_t size, size_t fs_size) noexcept;\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  void* operator new(size_t size) throw() {\n+  void* operator new(size_t size) noexcept {\n","filename":"src\/hotspot\/share\/opto\/callGenerator.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  void *operator new( size_t x, Compile* C ) throw() { return C->comp_arena()->Amalloc(x); }\n+  void *operator new( size_t x, Compile* C ) noexcept { return C->comp_arena()->Amalloc(x); }\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  void *operator new(size_t x) throw() {\n+  void *operator new(size_t x) noexcept {\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-  inline void* operator new(size_t x) throw() {\n+  inline void* operator new(size_t x) noexcept {\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -659,1 +659,1 @@\n-  inline void* operator new(size_t x) throw() {\n+  inline void* operator new(size_t x) noexcept {\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-  inline void* operator new( size_t x ) throw() {\n+  inline void* operator new( size_t x ) noexcept {\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-void* HandleMark::operator new(size_t size) throw() {\n+void* HandleMark::operator new(size_t size) noexcept {\n@@ -172,1 +172,1 @@\n-void* HandleMark::operator new [] (size_t size) throw() {\n+void* HandleMark::operator new [] (size_t size) noexcept {\n","filename":"src\/hotspot\/share\/runtime\/handles.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -268,2 +268,2 @@\n-  void* operator new(size_t size) throw();\n-  void* operator new [](size_t size) throw();\n+  void* operator new(size_t size) noexcept;\n+  void* operator new [](size_t size) noexcept;\n","filename":"src\/hotspot\/share\/runtime\/handles.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-void * ParkEvent::operator new (size_t sz) throw() {\n+void * ParkEvent::operator new (size_t sz) noexcept {\n","filename":"src\/hotspot\/share\/runtime\/park.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-    void * operator new (size_t sz) throw();\n+    void * operator new (size_t sz) noexcept;\n","filename":"src\/hotspot\/share\/runtime\/park.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-\/\/   void* operator new(size_t size) throw() NOINLINE;\n+\/\/   void* operator new(size_t size) noexcept NOINLINE;\n@@ -147,1 +147,1 @@\n-\/\/   NOINLINE void* CHeapObj<F>::operator new(size_t size) throw() {...}\n+\/\/   NOINLINE void* CHeapObj<F>::operator new(size_t size) noexcept {...}\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_xlc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -831,1 +831,1 @@\n-  void* operator new(size_t size, const std::nothrow_t&  nothrow_constant) throw() {\n+  void* operator new(size_t size, const std::nothrow_t&  nothrow_constant) noexcept {\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}