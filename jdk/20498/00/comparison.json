{"files":[{"patch":"@@ -1455,6 +1455,0 @@\n-\n-  \/\/ Init lock is a C union with component_mirror.  Only instanceKlass mirrors have\n-  \/\/ init_lock and only ArrayKlass mirrors have component_mirror.  Since both are oops\n-  \/\/ GC treats them the same.\n-  _init_lock_offset = _component_mirror_offset;\n-\n@@ -1467,1 +1461,0 @@\n-  f->do_u4((u4*)&_init_lock_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -212,0 +212,1 @@\n+  macro(java_lang_Class, init_lock,              object_signature,  false)\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337622\n+ * @summary (reflect) java.lang.Class componentType field not found.\n+ * @library \/test\/lib\n+ * @modules java.base\/java.lang:open\n+ * @run main ComponentTypeFieldTest\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import static jdk.test.lib.Asserts.*;\n+\n+public class ComponentTypeFieldTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        Field f = Class.class.getDeclaredField(\"componentType\");\n+        f.setAccessible(true);\n+        Object val = f.get(Runnable.class);\n+        assertTrue(val == null);\n+        System.out.println(\"val is \" + val);\n+\n+        Object arrayVal = f.get(Integer[].class);\n+        System.out.println(\"val is \" + arrayVal);\n+        String arrayValString = arrayVal.toString();\n+        assertTrue(arrayValString.equals(\"class java.lang.Integer\"));\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/reflect\/ComponentTypeFieldTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}