{"files":[{"patch":"@@ -3935,4 +3935,4 @@\n-    void gen_loads(Register base) {\n-      for (uint i = 0; i < L; i += 1) {\n-        __ ld(_regs[i], Address(base, 8 * i));\n-      }\n+    \/\/ generate load for the i'th register\n+    void gen_load(uint i, Register base) {\n+      assert(i < L, \"invalid i: %u\", i);\n+      __ ld(_regs[i], Address(base, 8 * i));\n@@ -3941,3 +3941,3 @@\n-    \/\/ Generate code extracting i-th unsigned word (4 bytes).\n-    void get_u32(Register dest, uint i, Register rmask32) {\n-      assert(i < 2 * L, \"invalid i: %u\", i);\n+    \/\/ add i'th 32-bit integer to dest\n+    void add_u32(const Register dest, uint i, const Register rtmp = t0) {\n+       assert(i < 2 * L, \"invalid i: %u\", i);\n@@ -3945,2 +3945,4 @@\n-      if (i % 2 == 0) {\n-        __ andr(dest, _regs[i \/ 2], rmask32);\n+      if (is_even(i)) {\n+        \/\/ Use the bottom 32 bits. No need to mask off the top 32 bits\n+        \/\/ as addw will do the right thing.\n+        __ addw(dest, dest, _regs[i \/ 2]);\n@@ -3948,1 +3950,3 @@\n-        __ srli(dest, _regs[i \/ 2], 32);\n+        \/\/ Use the top 32 bits by right-shifting them.\n+        __ srli(rtmp, _regs[i \/ 2], 32);\n+        __ addw(dest, dest, rtmp);\n@@ -3960,8 +3964,8 @@\n-                               Register rtmp1, Register rtmp2, Register rmask32) {\n-    \/\/ rtmp1 = rtmp1 + x + ac\n-    reg_cache.get_u32(rtmp2, k, rmask32);\n-    __ addw(rtmp1, rtmp1, rtmp2);\n-    __ mv(rtmp2, t);\n-    __ addw(rtmp1, rtmp1, rtmp2);\n-\n-    \/\/ a += rtmp1 + x + ac\n+                               Register rtmp1) {\n+    \/\/ a += ac\n+    __ mv(t1, t);\n+    __ addw(a, a, t1);\n+\n+    \/\/ a += x;\n+    reg_cache.add_u32(a, k);\n+    \/\/ a += rtmp1;\n@@ -3971,1 +3975,1 @@\n-    __ rolw_imm(a, a, s, rtmp1);\n+    __ rolw_imm(a, a, s);\n@@ -3980,1 +3984,1 @@\n-              Register rtmp1, Register rtmp2, Register rmask32) {\n+              Register rtmp1, Register rtmp2) {\n@@ -3990,2 +3994,1 @@\n-    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n-                            rtmp1, rtmp2, rmask32);\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t, rtmp1);\n@@ -3999,1 +4002,1 @@\n-              Register rtmp1, Register rtmp2, Register rmask32) {\n+              Register rtmp1, Register rtmp2) {\n@@ -4009,2 +4012,1 @@\n-    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n-                            rtmp1, rtmp2, rmask32);\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t, rtmp1);\n@@ -4018,1 +4020,1 @@\n-              Register rtmp1, Register rtmp2, Register rmask32) {\n+              Register rtmp1, Register rtmp2) {\n@@ -4020,2 +4022,2 @@\n-    __ xorr(rtmp1, b, c);\n-    __ xorr(rtmp1, rtmp1, d);\n+    __ xorr(rtmp2, b, c);\n+    __ xorr(rtmp1, rtmp2, d);\n@@ -4023,2 +4025,1 @@\n-    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n-                            rtmp1, rtmp2, rmask32);\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t, rtmp1);\n@@ -4032,1 +4033,1 @@\n-              Register rtmp1, Register rtmp2, Register rmask32) {\n+              Register rtmp1, Register rtmp2) {\n@@ -4034,2 +4035,2 @@\n-    __ orn(rtmp1, b, d);\n-    __ xorr(rtmp1, c, rtmp1);\n+    __ orn(rtmp2, b, d);\n+    __ xorr(rtmp1, c, rtmp2);\n@@ -4037,2 +4038,1 @@\n-    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n-                            rtmp1, rtmp2, rmask32);\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t, rtmp1);\n@@ -4055,3 +4055,3 @@\n-  \/\/    x5     t0  state0\n-  \/\/    x6     t1  state1\n-  \/\/    x7     t2  state2\n+  \/\/    x5     t0  (tmp register)\n+  \/\/    x6     t1  (tmp register)\n+  \/\/    x7     t2  state0\n@@ -4059,1 +4059,1 @@\n-  \/\/    x9     s1  state3  [saved-reg]\n+  \/\/    x9     s1\n@@ -4070,3 +4070,3 @@\n-  \/\/   x20     s4\n-  \/\/   x21     s5\n-  \/\/   x22     s6  mask32  [saved-reg]\n+  \/\/   x20     s4  state1  [saved-reg]\n+  \/\/   x21     s5  state2  [saved-reg]\n+  \/\/   x22     s6  state3  [saved-reg]\n@@ -4105,0 +4105,2 @@\n+    const int64_t mask32 = 0xffffffff;\n+\n@@ -4124,4 +4126,4 @@\n-    Register state0    =  x5; \/\/ t0\n-    Register state1    =  x6; \/\/ t1\n-    Register state2    =  x7; \/\/ t2\n-    Register state3    =  x9; \/\/ s1\n+    Register state0    =  x7; \/\/ t2\n+    Register state1    = x20; \/\/ s4\n+    Register state2    = x21; \/\/ s5\n+    Register state3    = x22; \/\/ s6\n@@ -4129,1 +4131,1 @@\n-    \/\/ using x9->x11 to allow compressed instructions\n+    \/\/ using x10->x11 to allow compressed instructions\n@@ -4133,3 +4135,0 @@\n-    const int64_t MASK_32 = 0xffffffff;\n-    Register rmask32   = x22; \/\/ s6\n-\n@@ -4146,1 +4145,1 @@\n-    saved_regs += RegSet::of(state3, rmask32);\n+    saved_regs += RegSet::of(state1, state2, state3);\n@@ -4157,1 +4156,0 @@\n-    __ mv(rmask32, MASK_32);\n@@ -4162,0 +4160,1 @@\n+    __ mv(t0, mask32);\n@@ -4164,1 +4163,1 @@\n-    __ andr(state0, state0, rmask32);\n+    __ andr(state0, state0, t0);\n@@ -4167,1 +4166,1 @@\n-    __ andr(state2, state2, rmask32);\n+    __ andr(state2, state2, t0);\n@@ -4172,2 +4171,0 @@\n-    reg_cache.gen_loads(buf);\n-\n@@ -4180,16 +4177,24 @@\n-    md5_FF(reg_cache, a, b, c, d,  0, S11, 0xd76aa478, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, d, a, b, c,  1, S12, 0xe8c7b756, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, c, d, a, b,  2, S13, 0x242070db, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, b, c, d, a,  3, S14, 0xc1bdceee, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, a, b, c, d,  4, S11, 0xf57c0faf, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, d, a, b, c,  5, S12, 0x4787c62a, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, c, d, a, b,  6, S13, 0xa8304613, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, b, c, d, a,  7, S14, 0xfd469501, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, a, b, c, d,  8, S11, 0x698098d8, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, d, a, b, c,  9, S12, 0x8b44f7af, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, c, d, a, b, 10, S13, 0xffff5bb1, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, b, c, d, a, 11, S14, 0x895cd7be, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, a, b, c, d, 12, S11, 0x6b901122, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, d, a, b, c, 13, S12, 0xfd987193, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, c, d, a, b, 14, S13, 0xa679438e, rtmp1, rtmp2, rmask32);\n-    md5_FF(reg_cache, b, c, d, a, 15, S14, 0x49b40821, rtmp1, rtmp2, rmask32);\n+    reg_cache.gen_load(0, buf);\n+    md5_FF(reg_cache, a, b, c, d,  0, S11, 0xd76aa478, rtmp1, rtmp2);\n+    md5_FF(reg_cache, d, a, b, c,  1, S12, 0xe8c7b756, rtmp1, rtmp2);\n+    reg_cache.gen_load(1, buf);\n+    md5_FF(reg_cache, c, d, a, b,  2, S13, 0x242070db, rtmp1, rtmp2);\n+    md5_FF(reg_cache, b, c, d, a,  3, S14, 0xc1bdceee, rtmp1, rtmp2);\n+    reg_cache.gen_load(2, buf);\n+    md5_FF(reg_cache, a, b, c, d,  4, S11, 0xf57c0faf, rtmp1, rtmp2);\n+    md5_FF(reg_cache, d, a, b, c,  5, S12, 0x4787c62a, rtmp1, rtmp2);\n+    reg_cache.gen_load(3, buf);\n+    md5_FF(reg_cache, c, d, a, b,  6, S13, 0xa8304613, rtmp1, rtmp2);\n+    md5_FF(reg_cache, b, c, d, a,  7, S14, 0xfd469501, rtmp1, rtmp2);\n+    reg_cache.gen_load(4, buf);\n+    md5_FF(reg_cache, a, b, c, d,  8, S11, 0x698098d8, rtmp1, rtmp2);\n+    md5_FF(reg_cache, d, a, b, c,  9, S12, 0x8b44f7af, rtmp1, rtmp2);\n+    reg_cache.gen_load(5, buf);\n+    md5_FF(reg_cache, c, d, a, b, 10, S13, 0xffff5bb1, rtmp1, rtmp2);\n+    md5_FF(reg_cache, b, c, d, a, 11, S14, 0x895cd7be, rtmp1, rtmp2);\n+    reg_cache.gen_load(6, buf);\n+    md5_FF(reg_cache, a, b, c, d, 12, S11, 0x6b901122, rtmp1, rtmp2);\n+    md5_FF(reg_cache, d, a, b, c, 13, S12, 0xfd987193, rtmp1, rtmp2);\n+    reg_cache.gen_load(7, buf);\n+    md5_FF(reg_cache, c, d, a, b, 14, S13, 0xa679438e, rtmp1, rtmp2);\n+    md5_FF(reg_cache, b, c, d, a, 15, S14, 0x49b40821, rtmp1, rtmp2);\n@@ -4198,16 +4203,16 @@\n-    md5_GG(reg_cache, a, b, c, d,  1, S21, 0xf61e2562, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, d, a, b, c,  6, S22, 0xc040b340, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, c, d, a, b, 11, S23, 0x265e5a51, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, b, c, d, a,  0, S24, 0xe9b6c7aa, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, a, b, c, d,  5, S21, 0xd62f105d, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, d, a, b, c, 10, S22, 0x02441453, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, c, d, a, b, 15, S23, 0xd8a1e681, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, b, c, d, a,  4, S24, 0xe7d3fbc8, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, a, b, c, d,  9, S21, 0x21e1cde6, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, d, a, b, c, 14, S22, 0xc33707d6, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, c, d, a, b,  3, S23, 0xf4d50d87, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, b, c, d, a,  8, S24, 0x455a14ed, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, a, b, c, d, 13, S21, 0xa9e3e905, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, d, a, b, c,  2, S22, 0xfcefa3f8, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, c, d, a, b,  7, S23, 0x676f02d9, rtmp1, rtmp2, rmask32);\n-    md5_GG(reg_cache, b, c, d, a, 12, S24, 0x8d2a4c8a, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, a, b, c, d,  1, S21, 0xf61e2562, rtmp1, rtmp2);\n+    md5_GG(reg_cache, d, a, b, c,  6, S22, 0xc040b340, rtmp1, rtmp2);\n+    md5_GG(reg_cache, c, d, a, b, 11, S23, 0x265e5a51, rtmp1, rtmp2);\n+    md5_GG(reg_cache, b, c, d, a,  0, S24, 0xe9b6c7aa, rtmp1, rtmp2);\n+    md5_GG(reg_cache, a, b, c, d,  5, S21, 0xd62f105d, rtmp1, rtmp2);\n+    md5_GG(reg_cache, d, a, b, c, 10, S22, 0x02441453, rtmp1, rtmp2);\n+    md5_GG(reg_cache, c, d, a, b, 15, S23, 0xd8a1e681, rtmp1, rtmp2);\n+    md5_GG(reg_cache, b, c, d, a,  4, S24, 0xe7d3fbc8, rtmp1, rtmp2);\n+    md5_GG(reg_cache, a, b, c, d,  9, S21, 0x21e1cde6, rtmp1, rtmp2);\n+    md5_GG(reg_cache, d, a, b, c, 14, S22, 0xc33707d6, rtmp1, rtmp2);\n+    md5_GG(reg_cache, c, d, a, b,  3, S23, 0xf4d50d87, rtmp1, rtmp2);\n+    md5_GG(reg_cache, b, c, d, a,  8, S24, 0x455a14ed, rtmp1, rtmp2);\n+    md5_GG(reg_cache, a, b, c, d, 13, S21, 0xa9e3e905, rtmp1, rtmp2);\n+    md5_GG(reg_cache, d, a, b, c,  2, S22, 0xfcefa3f8, rtmp1, rtmp2);\n+    md5_GG(reg_cache, c, d, a, b,  7, S23, 0x676f02d9, rtmp1, rtmp2);\n+    md5_GG(reg_cache, b, c, d, a, 12, S24, 0x8d2a4c8a, rtmp1, rtmp2);\n@@ -4216,16 +4221,16 @@\n-    md5_HH(reg_cache, a, b, c, d,  5, S31, 0xfffa3942, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, d, a, b, c,  8, S32, 0x8771f681, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, c, d, a, b, 11, S33, 0x6d9d6122, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, b, c, d, a, 14, S34, 0xfde5380c, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, a, b, c, d,  1, S31, 0xa4beea44, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, d, a, b, c,  4, S32, 0x4bdecfa9, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, c, d, a, b,  7, S33, 0xf6bb4b60, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, b, c, d, a, 10, S34, 0xbebfbc70, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, a, b, c, d, 13, S31, 0x289b7ec6, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, d, a, b, c,  0, S32, 0xeaa127fa, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, c, d, a, b,  3, S33, 0xd4ef3085, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, b, c, d, a,  6, S34, 0x04881d05, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, a, b, c, d,  9, S31, 0xd9d4d039, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, d, a, b, c, 12, S32, 0xe6db99e5, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, c, d, a, b, 15, S33, 0x1fa27cf8, rtmp1, rtmp2, rmask32);\n-    md5_HH(reg_cache, b, c, d, a,  2, S34, 0xc4ac5665, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, a, b, c, d,  5, S31, 0xfffa3942, rtmp1, rtmp2);\n+    md5_HH(reg_cache, d, a, b, c,  8, S32, 0x8771f681, rtmp1, rtmp2);\n+    md5_HH(reg_cache, c, d, a, b, 11, S33, 0x6d9d6122, rtmp1, rtmp2);\n+    md5_HH(reg_cache, b, c, d, a, 14, S34, 0xfde5380c, rtmp1, rtmp2);\n+    md5_HH(reg_cache, a, b, c, d,  1, S31, 0xa4beea44, rtmp1, rtmp2);\n+    md5_HH(reg_cache, d, a, b, c,  4, S32, 0x4bdecfa9, rtmp1, rtmp2);\n+    md5_HH(reg_cache, c, d, a, b,  7, S33, 0xf6bb4b60, rtmp1, rtmp2);\n+    md5_HH(reg_cache, b, c, d, a, 10, S34, 0xbebfbc70, rtmp1, rtmp2);\n+    md5_HH(reg_cache, a, b, c, d, 13, S31, 0x289b7ec6, rtmp1, rtmp2);\n+    md5_HH(reg_cache, d, a, b, c,  0, S32, 0xeaa127fa, rtmp1, rtmp2);\n+    md5_HH(reg_cache, c, d, a, b,  3, S33, 0xd4ef3085, rtmp1, rtmp2);\n+    md5_HH(reg_cache, b, c, d, a,  6, S34, 0x04881d05, rtmp1, rtmp2);\n+    md5_HH(reg_cache, a, b, c, d,  9, S31, 0xd9d4d039, rtmp1, rtmp2);\n+    md5_HH(reg_cache, d, a, b, c, 12, S32, 0xe6db99e5, rtmp1, rtmp2);\n+    md5_HH(reg_cache, c, d, a, b, 15, S33, 0x1fa27cf8, rtmp1, rtmp2);\n+    md5_HH(reg_cache, b, c, d, a,  2, S34, 0xc4ac5665, rtmp1, rtmp2);\n@@ -4234,16 +4239,16 @@\n-    md5_II(reg_cache, a, b, c, d,  0, S41, 0xf4292244, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, d, a, b, c,  7, S42, 0x432aff97, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, c, d, a, b, 14, S43, 0xab9423a7, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, b, c, d, a,  5, S44, 0xfc93a039, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, a, b, c, d, 12, S41, 0x655b59c3, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, d, a, b, c,  3, S42, 0x8f0ccc92, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, c, d, a, b, 10, S43, 0xffeff47d, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, b, c, d, a,  1, S44, 0x85845dd1, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, a, b, c, d,  8, S41, 0x6fa87e4f, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, d, a, b, c, 15, S42, 0xfe2ce6e0, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, c, d, a, b,  6, S43, 0xa3014314, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, b, c, d, a, 13, S44, 0x4e0811a1, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, a, b, c, d,  4, S41, 0xf7537e82, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, d, a, b, c, 11, S42, 0xbd3af235, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, c, d, a, b,  2, S43, 0x2ad7d2bb, rtmp1, rtmp2, rmask32);\n-    md5_II(reg_cache, b, c, d, a,  9, S44, 0xeb86d391, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, a, b, c, d,  0, S41, 0xf4292244, rtmp1, rtmp2);\n+    md5_II(reg_cache, d, a, b, c,  7, S42, 0x432aff97, rtmp1, rtmp2);\n+    md5_II(reg_cache, c, d, a, b, 14, S43, 0xab9423a7, rtmp1, rtmp2);\n+    md5_II(reg_cache, b, c, d, a,  5, S44, 0xfc93a039, rtmp1, rtmp2);\n+    md5_II(reg_cache, a, b, c, d, 12, S41, 0x655b59c3, rtmp1, rtmp2);\n+    md5_II(reg_cache, d, a, b, c,  3, S42, 0x8f0ccc92, rtmp1, rtmp2);\n+    md5_II(reg_cache, c, d, a, b, 10, S43, 0xffeff47d, rtmp1, rtmp2);\n+    md5_II(reg_cache, b, c, d, a,  1, S44, 0x85845dd1, rtmp1, rtmp2);\n+    md5_II(reg_cache, a, b, c, d,  8, S41, 0x6fa87e4f, rtmp1, rtmp2);\n+    md5_II(reg_cache, d, a, b, c, 15, S42, 0xfe2ce6e0, rtmp1, rtmp2);\n+    md5_II(reg_cache, c, d, a, b,  6, S43, 0xa3014314, rtmp1, rtmp2);\n+    md5_II(reg_cache, b, c, d, a, 13, S44, 0x4e0811a1, rtmp1, rtmp2);\n+    md5_II(reg_cache, a, b, c, d,  4, S41, 0xf7537e82, rtmp1, rtmp2);\n+    md5_II(reg_cache, d, a, b, c, 11, S42, 0xbd3af235, rtmp1, rtmp2);\n+    md5_II(reg_cache, c, d, a, b,  2, S43, 0x2ad7d2bb, rtmp1, rtmp2);\n+    md5_II(reg_cache, b, c, d, a,  9, S44, 0xeb86d391, rtmp1, rtmp2);\n@@ -4266,1 +4271,2 @@\n-    __ andr(state0, state0, rmask32);\n+    __ mv(t0, mask32);\n+    __ andr(state0, state0, t0);\n@@ -4270,1 +4276,1 @@\n-    __ andr(state2, state2, rmask32);\n+    __ andr(state2, state2, t0);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":128,"deletions":122,"binary":false,"changes":250,"status":"modified"}]}