{"files":[{"patch":"@@ -1468,0 +1468,1 @@\n+    assert(!free_code_cache_data, \"must not free when postponing unregistering\");\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2082,4 +2082,0 @@\n-    {\n-      GCTraceTime(Debug, gc, phases) t(\"Free Code Blobs\", gc_timer());\n-      ctx->free_code_blobs();\n-    }\n@@ -2090,0 +2086,4 @@\n+    {\n+      GCTraceTime(Debug, gc, phases) t(\"Free Code Blobs\", gc_timer());\n+      ctx->free_code_blobs();\n+    }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -222,4 +222,0 @@\n-    {\n-      GCTraceTime(Debug, gc, phases) t(\"Free Code Blobs\", gc_timer());\n-      ctx->free_code_blobs();\n-    }\n@@ -230,0 +226,4 @@\n+    {\n+      GCTraceTime(Debug, gc, phases) t(\"Free Code Blobs\", gc_timer());\n+      ctx->free_code_blobs();\n+    }\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-    if (data.on_list())\n+    if (data.on_list()) {\n@@ -250,0 +250,1 @@\n+    }\n@@ -260,1 +261,4 @@\n-    verify_nmethod(nm);\n+    \/\/ Can not verify already unlinked nmethods as they are partially invalid already.\n+    if (!nm->is_unlinked()) {\n+      verify_nmethod(nm);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shared\/scavengableNMethods.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}