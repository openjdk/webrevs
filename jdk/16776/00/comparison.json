{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Konstantin Eremin\n@@ -34,0 +33,2 @@\n+\n+import java.io.File;\n@@ -36,0 +37,1 @@\n+import java.awt.Rectangle;\n@@ -38,2 +40,13 @@\n-import javax.swing.*;\n-import java.awt.event.*;\n+import java.awt.event.ContainerAdapter;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.image.BufferedImage;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLayeredPane;\n+import javax.swing.JToolTip;\n+import javax.swing.KeyStroke;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.imageio.ImageIO;\n@@ -46,0 +59,2 @@\n+    private static JFrame frame;\n+    private static Robot robot;\n@@ -48,0 +63,3 @@\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -49,2 +67,1 @@\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(50);\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n@@ -52,1 +69,1 @@\n-        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n@@ -54,1 +71,2 @@\n-        javax.swing.SwingUtilities.invokeAndWait(new Runnable() {\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -56,2 +74,7 @@\n-            public void run() {\n-                createAndShowGUI();\n+            Point movePoint = getButtonPoint();\n+            robot.mouseMove(movePoint.x, movePoint.y);\n+            if (System.getProperty(\"os.name\").contains(\"OS X\")) {\n+                String version = System.getProperty(\"os.version\", \"\");\n+                if (version.startsWith(\"14.\")) {\n+                    robot.mouseMove(movePoint.x, movePoint.y);\n+                }\n@@ -59,3 +82,1 @@\n-        });\n-\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n@@ -63,3 +84,4 @@\n-        Point movePoint = getButtonPoint();\n-        robot.mouseMove(movePoint.x, movePoint.y);\n-        robot.waitForIdle();\n+            long timeout = System.currentTimeMillis() + 9000;\n+            while (!isTooltipAdded && (System.currentTimeMillis() < timeout)) {\n+                try {Thread.sleep(500);} catch (Exception e) {}\n+            }\n@@ -67,3 +89,7 @@\n-        long timeout = System.currentTimeMillis() + 9000;\n-        while (!isTooltipAdded && (System.currentTimeMillis() < timeout)) {\n-            try {Thread.sleep(500);} catch (Exception e) {}\n+            SwingUtilities.invokeAndWait(() -> checkToolTip());\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -71,2 +97,0 @@\n-\n-        checkToolTip();\n@@ -75,14 +99,13 @@\n-    private static void checkToolTip() throws Exception {\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                JToolTip tooltip = (JToolTip) Util.findSubComponent(\n-                        JFrame.getFrames()[0], \"JToolTip\");\n-\n-                if (tooltip == null) {\n-                    throw new RuntimeException(\"Tooltip has not been found!\");\n-                }\n-\n-                MetalToolTipUI tooltipUI = (MetalToolTipUI) MetalToolTipUI.createUI(tooltip);\n-                tooltipUI.installUI(tooltip);\n+    private static void checkToolTip() {\n+        JToolTip tooltip = (JToolTip) Util.findSubComponent(JFrame.getFrames()[0], \"JToolTip\");\n+\n+        if (tooltip == null) {\n+            try {\n+                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+                BufferedImage img = robot.createScreenCapture(\n+                            new Rectangle(0, 0, (int)screenSize.getWidth(),\n+                                                (int)screenSize.getHeight()));\n+                ImageIO.write(img, \"png\", new File(\"screen.png\"));\n+            } catch (Exception e) {}\n+            throw new RuntimeException(\"Tooltip has not been found!\");\n+        }\n@@ -90,3 +113,2 @@\n-                if (!\"-Insert\".equals(tooltipUI.getAcceleratorString())) {\n-                    throw new RuntimeException(\"Tooltip acceleration is not properly set!\");\n-                }\n+        MetalToolTipUI tooltipUI = (MetalToolTipUI) MetalToolTipUI.createUI(tooltip);\n+        tooltipUI.installUI(tooltip);\n@@ -94,2 +116,3 @@\n-            }\n-        });\n+        if (!\"-Insert\".equals(tooltipUI.getAcceleratorString())) {\n+            throw new RuntimeException(\"Tooltip acceleration is not properly set!\");\n+        }\n@@ -114,1 +137,1 @@\n-        JFrame frame = new JFrame(\"Test\");\n+        frame = new JFrame(\"Test\");\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/4846413\/bug4846413.java","additions":64,"deletions":41,"binary":false,"changes":105,"status":"modified"}]}