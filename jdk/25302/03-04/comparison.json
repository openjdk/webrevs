{"files":[{"patch":"@@ -35,1 +35,1 @@\n-  return jt->jfr_thread_local()->has_sample_request();\n+  return jt->jfr_thread_local()->has_sample_request() || jt->jfr_thread_local()->has_cpu_time_jfr_requests();\n","filename":"src\/hotspot\/share\/jfr\/jfr.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-  void sample_thread(JfrSampleRequest& request, void* ucontext, JavaThread* jt);\n+  void sample_thread(JfrSampleRequest& request, void* ucontext, JavaThread* jt, JfrThreadLocal* tl);\n@@ -348,0 +348,5 @@\n+static inline bool is_in_continuation(const frame& frame, JavaThread* jt) {\n+  return JfrThreadLocal::is_vthread(jt) &&\n+         (Continuation::is_frame_in_continuation(jt, frame) || Continuation::is_continuation_enterSpecial(frame));\n+}\n+\n@@ -350,1 +355,2 @@\n-  JfrCPUTimeTraceQueue& queue = thread->jfr_thread_local()->cpu_time_jfr_queue();\n+  JfrThreadLocal* tl = thread->jfr_thread_local();\n+  JfrCPUTimeTraceQueue& queue = tl->cpu_time_jfr_queue();\n@@ -377,1 +383,1 @@\n-    if (!stacktrace.record_inner(thread, top_frame, 0)) {\n+    if (!stacktrace.record_inner(thread, top_frame, is_in_continuation(top_frame, thread), 0)) {\n@@ -544,2 +550,2 @@\n-void JfrCPUTimeThreadSampler::sample_thread(JfrSampleRequest& request, void* ucontext, JavaThread* jt) {\n-  JfrSampleRequestBuilder::build_cpu_time_sample_request(request, ucontext, jt);\n+void JfrCPUTimeThreadSampler::sample_thread(JfrSampleRequest& request, void* ucontext, JavaThread* jt, JfrThreadLocal* tl) {\n+  JfrSampleRequestBuilder::build_cpu_time_sample_request(request, ucontext, jt, jt->jfr_thread_local());\n@@ -585,1 +591,1 @@\n-  sample_thread(request._request, context, jt);\n+  sample_thread(request._request, context, jt, tl);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -318,1 +318,2 @@\n-                                                            JavaThread* jt) {\n+                                                            JavaThread* jt,\n+                                                            JfrThreadLocal* tl) {\n@@ -324,1 +325,1 @@\n-  if (request._sample_sp == nullptr || !build_from_ljf(request, context, jt)) {\n+  if (request._sample_sp == nullptr || !build_from_ljf(request, context, tl, jt)) {\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrSampleRequest.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -86,1 +86,2 @@\n-                                            JavaThread* jt);\n+                                            JavaThread* jt,\n+                                            JfrThreadLocal* tl);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrSampleRequest.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"jfr\/support\/jfrThreadLocal.hpp\"\n@@ -164,1 +165,1 @@\n-static bool compute_top_frame(const JfrSampleRequest& request, frame& top_frame, bool& in_continuation, JavaThread* jt, bool* biased) {\n+static bool compute_top_frame(const JfrSampleRequest& request, frame& top_frame, bool& in_continuation, JavaThread* jt, bool& biased) {\n@@ -167,1 +168,1 @@\n-  *biased = false;\n+  biased = false;\n@@ -179,4 +180,0 @@\n-  CodeBlob* const sampled_cb = CodeCache::find_blob(sampled_pc);\n-  if (sampled_cb == nullptr) {\n-    \/\/ No code blob... probably native code. Perform a biased sample.\n-\n@@ -188,1 +185,1 @@\n-    &biased = true;\n+    biased = true;\n@@ -251,1 +248,1 @@\n-      *biased = true;\n+      biased = true;\n@@ -267,1 +264,1 @@\n-    *biased = true;\n+    biased = true;\n@@ -284,1 +281,1 @@\n-  if (!compute_top_frame(request, top_frame, in_continuation, jt, &biased)) {\n+  if (!compute_top_frame(request, top_frame, in_continuation, jt, biased)) {\n@@ -307,1 +304,1 @@\n-static void record_cpu_time_thread(const JfrCPUTimeSampleRequest& request, const JfrTicks& now, JavaThread* jt, Thread* current) {\n+static void record_cpu_time_thread(const JfrCPUTimeSampleRequest& request, const JfrTicks& now, const JfrThreadLocal* tl, JavaThread* jt, Thread* current) {\n@@ -309,0 +306,1 @@\n+  assert(tl != nullptr, \"invariant\");\n@@ -311,1 +309,0 @@\n-  const traceid tid = JfrThreadLocal::thread_id(jt);\n@@ -313,1 +310,5 @@\n-  if (!compute_top_frame(request._request, top_frame, jt, &biased)) {\n+  bool in_continuation = false;\n+  bool could_compute_top_frame = compute_top_frame(request._request, top_frame, in_continuation, jt, biased);\n+  const traceid tid = in_continuation ? tl->vthread_id_with_epoch_update(jt) : JfrThreadLocal::jvm_thread_id(jt);\n+\n+  if (!could_compute_top_frame) {\n@@ -321,1 +322,1 @@\n-    if (!stacktrace.record(jt, top_frame, request._request)) {\n+    if (!stacktrace.record(jt, top_frame, in_continuation, request._request)) {\n@@ -329,0 +330,2 @@\n+\n+\n@@ -330,1 +333,3 @@\n-  send_safepoint_latency_event(request._request, now, sid, jt);\n+  if (current == jt) {\n+    send_safepoint_latency_event(request._request, now, sid, jt);\n+  }\n@@ -361,1 +366,1 @@\n-      record_cpu_time_thread(queue.at(i), now, jt, current);\n+      record_cpu_time_thread(queue.at(i), now, tl, jt, current);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampling.cpp","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"}]}