{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"jfr\/utilities\/jfrTime.hpp\"\n@@ -36,1 +37,0 @@\n-#include \"jfr\/utilities\/jfrTime.hpp\"\n@@ -60,2 +60,2 @@\n-  JavaThread* jt;\n-  if ((jt = JavaThread::cast(raw_thread))->is_exiting()) {\n+  JavaThread* jt = JavaThread::cast(raw_thread);\n+  if (jt->is_exiting()) {\n@@ -114,1 +114,0 @@\n-  JfrCPUTimeSampleRequest* new_data = JfrCHeapObj::new_array<JfrCPUTimeSampleRequest>(capacity);\n@@ -116,1 +115,1 @@\n-  _data = new_data;\n+  _data = JfrCHeapObj::new_array<JfrCPUTimeSampleRequest>(capacity);\n@@ -195,1 +194,1 @@\n-  \/\/ process the queues for all threads that are in native state (and requested to be sampled)\n+  \/\/ process the queues for all threads that are in native state (and requested to be processed)\n@@ -272,1 +271,1 @@\n-    log_info(jfr)(\"Enrolling CPU thread sampler\");\n+    log_trace(jfr)(\"Enrolling CPU thread sampler\");\n@@ -281,1 +280,1 @@\n-    log_info(jfr)(\"Disenrolling CPU thread sampler\");\n+    log_trace(jfr)(\"Disenrolling CPU thread sampler\");\n@@ -322,0 +321,1 @@\n+  Thread* current = Thread::current();\n@@ -330,1 +330,1 @@\n-      JfrThreadSampling::process_cpu_time_request(jt, tl, false);\n+      JfrThreadSampling::process_cpu_time_request(jt, tl, current, false);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -249,2 +249,0 @@\n-    } else {\n-      biased = false;\n@@ -483,1 +481,1 @@\n-void JfrThreadSampling::process_cpu_time_request(JavaThread* jt, JfrThreadLocal* tl, bool lock) {\n+void JfrThreadSampling::process_cpu_time_request(JavaThread* jt, JfrThreadLocal* tl, Thread* current, bool lock) {\n@@ -488,1 +486,1 @@\n-  drain_enqueued_cpu_time_requests(now, tl, jt, jt, lock);\n+  drain_enqueued_cpu_time_requests(now, tl, jt, current, lock);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampling.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  static void process_cpu_time_request(JavaThread* jt, JfrThreadLocal* tl, bool lock);\n+  static void process_cpu_time_request(JavaThread* jt, JfrThreadLocal* tl, Thread* current, bool lock);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampling.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}