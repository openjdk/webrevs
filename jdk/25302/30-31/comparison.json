{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n@@ -49,2 +49,4 @@\n-static bool is_excluded(JavaThread* thread) {\n-  return thread->is_hidden_from_external_view() || thread->jfr_thread_local()->is_excluded();\n+static bool is_excluded(JavaThread* jt) {\n+  return jt->is_hidden_from_external_view() ||\n+         jt->jfr_thread_local()->is_excluded() ||\n+         jt->is_JfrRecorder_thread();\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,0 +174,1 @@\n+  assert(jt->thread_state() == _thread_in_Java || jt->thread_state() == _thread_in_native, \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrSampleRequest.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-  friend class JfrCPUTimeThreadSampler;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-  friend class JfrCPUTimeThreadSampler;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-  friend class JfrCPUTimeThreadSampler;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTraceRepository.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-#include \"jfr\/utilities\/jfrAllocation.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  int _nesting;                  \/\/ current # of nested ResourceMarks\n+  int _nesting;                 \/\/ current # of nested ResourceMarks\n@@ -189,1 +189,0 @@\n-\/\/ ResourceMark to mark that new resource area allocations are allowed\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -576,0 +576,1 @@\n+\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-     * @param autoadapt true if the rate should be adapted automatically\n+     * @param autoAdapt true if the rate should be adapted automatically\n@@ -281,1 +281,1 @@\n-    public static native void setCPUThrottle(double rate, boolean autoadapt);\n+    public static native void setCPUThrottle(double rate, boolean autoAdapt);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/CPUThrottleSetting.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/TimespanRate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeAndExecutionSample.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleMultipleRecordings.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleThrottling.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    static String sampleEvent = EventNames.ExecutionSample;\n+    final static String SAMPLE_EVENT = EventNames.ExecutionSample;\n@@ -50,2 +50,2 @@\n-            rs.enable(sampleEvent).withPeriod(Duration.ofMillis(1100));\n-            rs.onEvent(sampleEvent, e -> {\n+            rs.enable(SAMPLE_EVENT).withPeriod(Duration.ofMillis(1100));\n+            rs.onEvent(SAMPLE_EVENT, e -> {\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestSamplingLongPeriod.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n+ * Copyright (c) 2025 SAP SE. All rights reserved.\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/classes\/test\/RecursiveMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}