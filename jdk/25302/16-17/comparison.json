{"files":[{"patch":"@@ -257,1 +257,1 @@\n-    tl->set_cpu_timer(timerid);\n+    tl->set_cpu_timer(&timerid);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCPUTimeThreadSampler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,6 @@\n-  _dead(false) {\n+  _dead(false),\n+  _cpu_timer(nullptr),\n+  _cpu_time_jfr_locked(UNLOCKED),\n+  _has_cpu_time_jfr_requests(false),\n+  _cpu_time_jfr_queue(0),\n+  _wants_is_thread_in_native_stackwalking(false) {\n@@ -549,1 +554,1 @@\n-void JfrThreadLocal::set_cpu_timer(timer_t timer) {\n+void JfrThreadLocal::set_cpu_timer(timer_t* timer) {\n@@ -553,1 +558,1 @@\n-  *_cpu_timer = timer;\n+  *_cpu_timer = *timer;\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-\/\/ required for timer_t type\n-#include <signal.h>\n@@ -89,1 +87,1 @@\n-  timer_t* _cpu_timer = nullptr;\n+  timer_t* _cpu_timer;\n@@ -100,4 +98,4 @@\n-  volatile CPUTimeLockState _cpu_time_jfr_locked = UNLOCKED;\n-  volatile bool _has_cpu_time_jfr_requests = false;\n-  JfrCPUTimeTraceQueue _cpu_time_jfr_queue{0};\n-  volatile bool _wants_is_thread_in_native_stackwalking = false;\n+  volatile CPUTimeLockState _cpu_time_jfr_locked;\n+  volatile bool _has_cpu_time_jfr_requests;\n+  JfrCPUTimeTraceQueue _cpu_time_jfr_queue;\n+  volatile bool _wants_is_thread_in_native_stackwalking;\n@@ -371,1 +369,1 @@\n-  void set_cpu_timer(timer_t timer);\n+  void set_cpu_timer(timer_t* timer);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.hpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -195,2 +195,2 @@\n-        if (hasCutoff || isCPUTimeMethodSampling) {\n-            \/\/ Event has a duration, but not a threshold. Used by OldObjectSample and CPUTimeSample\n+        if (hasCutoff) {\n+            \/\/ Event has a duration, but not a threshold. Used by OldObjectSample\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformEventType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,3 +2,0 @@\n-<<<<<<<< HEAD:test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleFullStackTrace.java\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n-========\n@@ -6,1 +3,0 @@\n->>>>>>>> bbceab072555d5e2f5d3e99ae07a5ca5e909d7dc:test\/langtools\/tools\/javac\/diags\/examples\/SubtypeDoesntImplementSealed.java\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleFullStackTrace.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,54 +0,0 @@\n-\/*\n-<<<<<<<< HEAD:test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleFullStackTrace.java\n- * Copyright (c) 2024, SAP SE. All rights reserved.\n-========\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n->>>>>>>> bbceab072555d5e2f5d3e99ae07a5ca5e909d7dc:test\/langtools\/tools\/javac\/diags\/examples\/SubtypeDoesntImplementSealed.java\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-<<<<<<<< HEAD:test\/jdk\/jdk\/jfr\/event\/profiling\/TestCPUTimeSampleFullStackTrace.java\n-package jdk.jfr.event.profiling;\n-\n-import jdk.test.lib.jfr.EventNames;\n-\n-\/**\n- * @test\n- * @requires vm.hasJFR & os.family == \"linux\"\n- * @library \/test\/lib\n- * @build jdk.jfr.event.profiling.BaseTestFullStackTrace\n- * @run main\/othervm jdk.jfr.event.profiling.TestCPUTimeSampleFullStackTrace\n- *\/\n-public class TestCPUTimeSampleFullStackTrace {\n-\n-    public static void main(String[] args) throws Throwable {\n-        new BaseTestFullStackTrace(EventNames.CPUTimeSample, \"eventThread\").run();\n-    }\n-\n-}\n-========\n-\/\/ key: compiler.err.invalid.permits.clause\n-\/\/ key: compiler.misc.doesnt.implement.sealed\n-\n-sealed interface A3 permits B3 {}\n-interface B3 {}\n-\n->>>>>>>> bbceab072555d5e2f5d3e99ae07a5ca5e909d7dc:test\/langtools\/tools\/javac\/diags\/examples\/SubtypeDoesntImplementSealed.java\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/SubtypeDoesntImplementSealed.java","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"}]}