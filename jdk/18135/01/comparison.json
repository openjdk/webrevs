{"files":[{"patch":"@@ -59,0 +59,12 @@\n+  # Always include common test functionality\n+  TEST_CFLAGS := -I$(TOPDIR)\/test\/lib\/native\n+\n+  ifeq ($(TOOLCHAIN_TYPE), gcc)\n+    TEST_CFLAGS += -fvisibility=hidden\n+    TEST_LDFLAGS += -Wl,--exclude-libs,ALL\n+  else ifeq ($(TOOLCHAIN_TYPE), clang)\n+    TEST_CFLAGS += -fvisibility=hidden\n+  else ifeq ($(TOOLCHAIN_TYPE), xlc)\n+    TEST_CFLAGS += -qvisibility=hidden\n+  endif\n+\n@@ -64,3 +76,3 @@\n-    $1_BASE_CFLAGS := $(CFLAGS_JDKLIB)\n-    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKLIB)\n-    $1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(call SET_SHARED_LIBRARY_ORIGIN)\n+    $1_BASE_CFLAGS := $(CFLAGS_JDKLIB) $$(TEST_CFLAGS)\n+    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKLIB) $$(TEST_CFLAGS)\n+    $1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(TEST_LDFLAGS) $$(call SET_SHARED_LIBRARY_ORIGIN)\n@@ -72,3 +84,3 @@\n-    $1_BASE_CFLAGS := $(CFLAGS_JDKEXE)\n-    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKEXE)\n-    $1_LDFLAGS := $(LDFLAGS_JDKEXE) $(LDFLAGS_TESTEXE)\n+    $1_BASE_CFLAGS := $(CFLAGS_JDKEXE) $$(TEST_CFLAGS)\n+    $1_BASE_CXXFLAGS := $(CXXFLAGS_JDKEXE) $$(TEST_CFLAGS)\n+    $1_LDFLAGS := $(LDFLAGS_JDKEXE) $$(TEST_LDFLAGS) $(LDFLAGS_TESTEXE)\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,0 @@\n-TEST_LIB_NATIVE_SRC := $(TOPDIR)\/test\/lib\/native\n-\n@@ -72,8 +70,0 @@\n-\n-  # java.lang.foreign tests\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncStackWalk := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerUnnamed := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerModule := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLoaderLookupInvoker := -I$(TEST_LIB_NATIVE_SRC)\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncInvokers := -I$(TEST_LIB_NATIVE_SRC)\n-\n@@ -91,1 +81,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncStackWalk := -I$(TEST_LIB_NATIVE_SRC)\n@@ -93,1 +82,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libAsyncInvokers := -I$(TEST_LIB_NATIVE_SRC)\n@@ -95,1 +83,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerUnnamed := -I$(TEST_LIB_NATIVE_SRC)\n@@ -97,1 +84,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLinkerInvokerModule := -I$(TEST_LIB_NATIVE_SRC)\n@@ -99,1 +85,0 @@\n-  BUILD_JDK_JTREG_LIBRARIES_CFLAGS_libLoaderLookupInvoker := -I$(TEST_LIB_NATIVE_SRC)\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"AppLauncher.h\"\n@@ -28,0 +27,2 @@\n+#include \"AppLauncher.h\"\n+#include \"ErrorHandling.h\"\n@@ -29,0 +30,2 @@\n+#include \"jni.h\"\n+#include \"JvmLauncher.h\"\n@@ -31,2 +34,0 @@\n-#include \"JvmLauncher.h\"\n-#include \"ErrorHandling.h\"\n@@ -92,1 +93,1 @@\n-int main(int argc, char *argv[]) {\n+JNIEXPORT int main(int argc, char *argv[]) {\n","filename":"src\/jdk.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/libLinkToNativeRBP.c","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-                    new DwarfConstraint(0, \"dereference_null\", \"libTestDwarfHelper.h\", 44));\n+                    new DwarfConstraint(0, \"dereference_null\", \"libTestDwarfHelper.h\", 46));\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestDwarf.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"jni.h\"\n@@ -27,0 +26,3 @@\n+#include \"export.h\"\n+#include \"jni.h\"\n+\n@@ -42,1 +44,1 @@\n-void dereference_null() {\n+EXPORT void dereference_null() {\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/libTestDwarfHelper.h","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -216,5 +216,1 @@\n-                \"#ifdef _WIN64\\n\" +\n-                \"#define EXPORT __declspec(dllexport)\\n\" +\n-                \"#else\\n\" +\n-                \"#define EXPORT\\n\" +\n-                \"#endif\\n\"\n+                \"#include \\\"export.h\\\"\\n\"\n@@ -270,5 +266,1 @@\n-                \"#ifdef _WIN64\\n\" +\n-                \"#define EXPORT __declspec(dllexport)\\n\" +\n-                \"#else\\n\" +\n-                \"#define EXPORT\\n\" +\n-                \"#endif\\n\"\n+                \"#include \\\"export.h\\\"\\n\"\n","filename":"test\/jdk\/java\/foreign\/CallGeneratorHelper.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/arraystructs\/libArrayStructs.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/capturecallstate\/libCaptureCallState.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/critical\/libCritical.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/dontrelease\/libDontRelease.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libAddressDereference.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n@@ -88,1 +84,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/foreign\/libIntrinsics.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libLibraryLookup.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,8 +24,1 @@\n- #ifdef _WIN64\n- #define EXPORT __declspec(dllexport)\n- #else\n- #define EXPORT\n- #endif\n-\n- EXPORT void f() { }\n- EXPORT int c = 42;\n+#include \"export.h\"\n@@ -33,0 +26,2 @@\n+EXPORT void f() { }\n+EXPORT int c = 42;\n","filename":"test\/jdk\/java\/foreign\/libLookupTest.c","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n@@ -32,0 +26,2 @@\n+#include \"export.h\"\n+\n","filename":"test\/jdk\/java\/foreign\/libNull.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libSafeAccess.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libTestUpcallHighArity.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/libTestUpcallStructScope.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/lookup\/libFoo.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,2 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n+\n","filename":"test\/jdk\/java\/foreign\/nested\/libNested.c","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/normalize\/libNormalize.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/passheapsegment\/libPassHeapSegment.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+#include \"export.h\"\n+\n@@ -32,5 +34,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n","filename":"test\/jdk\/java\/foreign\/shared.h","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"export.h\"\n@@ -26,6 +27,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libAsyncStackWalk.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libReentrantUpcalls.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libStackWalk.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/upcalldeopt\/libUpcallDeopt.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,5 +25,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/jdk\/java\/foreign\/virtual\/libVirtual.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,1 +23,1 @@\n-#include <stdio.h>\n+\n@@ -25,0 +25,3 @@\n+#include <stdio.h>\n+\n+#include \"export.h\"\n@@ -31,1 +34,1 @@\n-void start_threads(int n, void *(*f)(void *)) {\n+EXPORT void start_threads(int n, void *(*f)(void *)) {\n","filename":"test\/jdk\/java\/lang\/Thread\/jni\/AttachCurrentThread\/libImplicitAttach.c","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"export.h\"\n@@ -33,1 +34,1 @@\n-int\n+EXPORT int\n","filename":"test\/jdk\/tools\/launcher\/exeJliLaunchTest.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,5 +26,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/libVThreadPinner.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef TEST_LIB_NATIVE_EXPORT_H\n+#define TEST_LIB_NATIVE_EXPORT_H\n+\n+#ifdef _WIN64\n+  #define EXPORT __declspec(dllexport)\n+#elif defined(__GNUC__)\n+  #define EXPORT __attribute__((visibility(\"default\")))\n+#else\n+  #define EXPORT\n+#endif\n+\n+#endif \/\/ TEST_LIB_NATIVE_EXPORT_H\n","filename":"test\/lib\/native\/export.h","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libCallOverhead.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libCriticalCalls.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n@@ -32,0 +26,2 @@\n+#include \"export.h\"\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libPtr.c","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,6 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libQSort.c","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,1 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n+#include \"export.h\"\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libUpcalls.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,1 +23,1 @@\n-#include <stdlib.h>\n+\n@@ -25,0 +25,1 @@\n+#include <stdlib.h>\n@@ -26,0 +27,1 @@\n+#include \"export.h\"\n@@ -28,6 +30,0 @@\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/libPoint.c","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}