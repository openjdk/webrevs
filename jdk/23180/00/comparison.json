{"files":[{"patch":"@@ -220,1 +220,1 @@\n-                \"used \"      SIZE_FORMAT \"K, \"\n+                \"used %zuK, \"\n@@ -229,1 +229,1 @@\n-                  \"used \"      SIZE_FORMAT \"K, \"\n+                  \"used %zuK, \"\n@@ -569,1 +569,1 @@\n-  assert(rs.size() == CompressedClassSpaceSize, SIZE_FORMAT \" != %zu\",\n+  assert(rs.size() == CompressedClassSpaceSize, \"%zu != %zu\",\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -137,6 +137,0 @@\n-\n-\/\/ Format integers which change size between 32- and 64-bit.\n-#define SIZE_FORMAT              \"%\"          PRIuPTR\n-#define SIZE_FORMAT_X            \"0x%\"        PRIxPTR\n-#define SIZE_FORMAT_W(width)     \"%\"   #width PRIuPTR\n-\n@@ -376,1 +370,1 @@\n-#define PROPERFMT             SIZE_FORMAT \"%s\"\n+#define PROPERFMT             \"%zu%s\"\n@@ -380,1 +374,1 @@\n-#define RANGEFMT              \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"), (\" SIZE_FORMAT \" bytes)\"\n+#define RANGEFMT              \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"), (%zu bytes)\"\n@@ -384,1 +378,1 @@\n-#define RANGE2FMT             \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"), (\" SIZE_FORMAT \" bytes)\"\n+#define RANGE2FMT             \"[\" PTR_FORMAT \" - \" PTR_FORMAT \"), (%zu bytes)\"\n@@ -417,1 +411,1 @@\n-#define EXACTFMT            SIZE_FORMAT \"%s\"\n+#define EXACTFMT            \"%zu%s\"\n@@ -422,1 +416,1 @@\n-#define HEAP_CHANGE_FORMAT \"%s: \" SIZE_FORMAT \"K(\" SIZE_FORMAT \"K)->\" SIZE_FORMAT \"K(\" SIZE_FORMAT \"K)\"\n+#define HEAP_CHANGE_FORMAT \"%s: %zuK(%zuK)->%zuK(%zuK)\"\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-    tty->print_cr(\"%u allocations: \" SIZE_FORMAT, _thread_number, _allocations);\n+    tty->print_cr(\"%u allocations: %zu\", _thread_number, _allocations);\n@@ -154,1 +154,1 @@\n-  tty->print_cr(\"total allocations: \" SIZE_FORMAT, total_allocations);\n+  tty->print_cr(\"total allocations: %zu\", total_allocations);\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1FreeIdSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-    tty->print_cr(\"allocations: \" SIZE_FORMAT, _allocations);\n+    tty->print_cr(\"allocations: %zu\", _allocations);\n@@ -237,2 +237,2 @@\n-  tty->print_cr(\"total allocations: \" SIZE_FORMAT, total_allocations);\n-  tty->print_cr(\"allocator free count: \" SIZE_FORMAT, allocator->free_count());\n+  tty->print_cr(\"total allocations: %zu\", total_allocations);\n+  tty->print_cr(\"allocator free count: %zu\", allocator->free_count());\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_bufferNodeAllocator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1139,3 +1139,3 @@\n-    expected_st.print(\"Test Storage: \" SIZE_FORMAT\n-                      \" entries in \" SIZE_FORMAT\n-                      \" blocks (%.F%%), \" SIZE_FORMAT \" bytes\",\n+    expected_st.print(\"Test Storage: %zu\"\n+                      \" entries in %zu\"\n+                      \" blocks (%.F%%), %zu bytes\",\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_oopStorage.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,4 +92,4 @@\n-  out.print(\" Min: \" SIZE_FORMAT\n-            \", Avg: %4.1lf, Max: \" SIZE_FORMAT\n-            \", Diff: \" SIZE_FORMAT \", Sum: \" SIZE_FORMAT\n-            \", Workers: \" SIZE_FORMAT \"\\n\",\n+  out.print(\" Min: %zu\"\n+            \", Avg: %4.1lf, Max: %zu\"\n+            \", Diff: %zu, Sum: %zu\"\n+            \", Workers: %zu\\n\",\n@@ -108,1 +108,1 @@\n-            \", Workers: \" SIZE_FORMAT \"\\n\",\n+            \", Workers: %zu\\n\",\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_workerDataArray.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-  int ret = jio_snprintf(buf, sizeof(buf), \"filesize=\" SIZE_FORMAT \"K\", SIZE_MAX);\n+  int ret = jio_snprintf(buf, sizeof(buf), \"filesize=%zuK\", SIZE_MAX);\n@@ -111,1 +111,1 @@\n-    int ret = jio_snprintf(rotated_file[i], len, \"%s.\" SIZE_FORMAT, filename, i);\n+    int ret = jio_snprintf(rotated_file[i], len, \"%s.%zu\", filename, i);\n","filename":"test\/hotspot\/gtest\/logging\/test_logFileOutput.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-    msg.info(\"Line #\" SIZE_FORMAT, i);\n+    msg.info(\"Line #%zu\", i);\n@@ -178,1 +178,1 @@\n-    jio_snprintf(&expected_lines_data[i][0], line_length, \"Line #\" SIZE_FORMAT, i);\n+    jio_snprintf(&expected_lines_data[i][0], line_length, \"Line #%zu\", i);\n","filename":"test\/hotspot\/gtest\/logging\/test_logMessageTest.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,1 +252,1 @@\n-    LOG((\"[%d]: \" PTR_FORMAT \", size \" SIZE_FORMAT \", aligned \" SIZE_FORMAT,\n+    LOG((\"[%d]: \" PTR_FORMAT \", size %zu, aligned %zu\",\n@@ -283,1 +283,1 @@\n-    LOG((\"[%d]: realloc \" PTR_FORMAT \", size \" SIZE_FORMAT \", aligned \" SIZE_FORMAT,\n+    LOG((\"[%d]: realloc \" PTR_FORMAT \", size %zu, aligned %zu\",\n","filename":"test\/hotspot\/gtest\/memory\/test_arena.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,1 +147,1 @@\n-  LOG(SIZE_FORMAT \": \" SIZE_FORMAT \".\", request_size, real_size);\n+  LOG(SIZE_FORMAT \": %zu.\", request_size, real_size);\n@@ -401,1 +401,1 @@\n-    LOG(\"Blocks in circulation: bt1=%d:\" SIZE_FORMAT \", bt2=%d:\" SIZE_FORMAT \".\",\n+    LOG(\"Blocks in circulation: bt1=%d:%zu, bt2=%d:%zu.\",\n@@ -407,1 +407,1 @@\n-    LOG(\"After Pingpong: bt1=%d:\" SIZE_FORMAT \", bt2=%d:\" SIZE_FORMAT \".\",\n+    LOG(\"After Pingpong: bt1=%d:%zu, bt2=%d:%zu.\",\n","filename":"test\/hotspot\/gtest\/metaspace\/test_blocktree.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    LOG(\"attempt_free_at \" SIZE_FORMAT \".\", index);\n+    LOG(\"attempt_free_at %zu.\", index);\n@@ -67,1 +67,1 @@\n-    LOG(\"attempt_allocate_at \" SIZE_FORMAT \".\", index);\n+    LOG(\"attempt_allocate_at %zu.\", index);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_chunkheaderpool.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-         \" (\" SIZE_FORMAT \" words).\",\n+         \" (%zu words).\",\n","filename":"test\/hotspot\/gtest\/metaspace\/test_commitmask.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-          \/\/ printf(\"commit_limit: \" SIZE_FORMAT \", min_committed_words: \" SIZE_FORMAT\n+          \/\/ printf(\"commit_limit: %zu, min_committed_words: %zu\"\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metachunk.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -643,1 +643,1 @@\n-      LOG(\">\" SIZE_FORMAT \"->\" SIZE_FORMAT \"(+\" SIZE_FORMAT \")\", capacity, capacity2, capacity_jump)\n+      LOG(\">%zu->%zu(+%zu)\", capacity, capacity2, capacity_jump)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -379,1 +379,1 @@\n-        \/\/LOG(\"c \" SIZE_FORMAT \",\" SIZE_FORMAT, r.start(), r.end());\n+        \/\/LOG(\"c %zu,%zu\", r.start(), r.end());\n@@ -399,1 +399,1 @@\n-        \/\/LOG(\"u \" SIZE_FORMAT \",\" SIZE_FORMAT, r.start(), r.end());\n+        \/\/LOG(\"u %zu,%zu\", r.start(), r.end());\n","filename":"test\/hotspot\/gtest\/metaspace\/test_virtualspacenode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-    \/\/ LOG_HERE(\"reallocating \" SIZE_FORMAT \"->\" SIZE_FORMAT, size, new_size);\n+    \/\/ LOG_HERE(\"reallocating %zu->%zu\", size, new_size);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_cornercases.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  LOG_HERE(\"C-block starts \" PTR_FORMAT \", size \" SIZE_FORMAT \".\", p2i(c), sz);\n+  LOG_HERE(\"C-block starts \" PTR_FORMAT \", size %zu.\", p2i(c), sz);\n@@ -76,1 +76,1 @@\n-  LOG_HERE(\"C-block starts \" PTR_FORMAT \", size \" SIZE_FORMAT \".\", p2i(c), sz);\n+  LOG_HERE(\"C-block starts \" PTR_FORMAT \", size %zu.\", p2i(c), sz);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_locationprinting.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-  LOG(\"t1: \" SIZE_FORMAT \" - \" SIZE_FORMAT \" - \" SIZE_FORMAT, t1.n, t1.s, t1.ovrh);\n+  LOG(\"t1: %zu - %zu - %zu\", t1.n, t1.s, t1.ovrh);\n@@ -97,1 +97,1 @@\n-  LOG(\"t2: \" SIZE_FORMAT \" - \" SIZE_FORMAT \" - \" SIZE_FORMAT, t2.n, t2.s, t2.ovrh);\n+  LOG(\"t2: %zu - %zu - %zu\", t2.n, t2.s, t2.ovrh);\n@@ -104,1 +104,1 @@\n-  LOG(\"t2 expected: \" SIZE_FORMAT \" - \" SIZE_FORMAT \" - \" SIZE_FORMAT, t2_expected.n, t2_expected.s, t2_expected.ovrh);\n+  LOG(\"t2 expected: %zu - %zu - %zu\", t2_expected.n, t2_expected.s, t2_expected.ovrh);\n@@ -113,1 +113,1 @@\n-  LOG(\"t3: \" SIZE_FORMAT \" - \" SIZE_FORMAT \" - \" SIZE_FORMAT, t3.n, t3.s, t3.ovrh);\n+  LOG(\"t3: %zu - %zu - %zu\", t3.n, t3.s, t3.ovrh);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_totals.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,1 +331,1 @@\n-    s.print(\"test_size: \" SIZE_FORMAT, test_size);\n+    s.print(\"test_size: %zu\", test_size);\n@@ -1034,1 +1034,1 @@\n-  tty->print_cr(SIZE_FORMAT \"->\" SIZE_FORMAT, sc.before, sc.after);\n+  tty->print_cr(\"%zu->%zu\", sc.before, sc.after);\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-  log(\"### Test: %c\" SIZE_FORMAT \" \" UINT64_FORMAT \" : %c\" SIZE_FORMAT \" \" UINT64_FORMAT \" ###\\n\",\n+  log(\"### Test: %c%zu \" UINT64_FORMAT \" : %c%zu \" UINT64_FORMAT \" ###\\n\",\n","filename":"test\/hotspot\/gtest\/utilities\/test_align.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -274,2 +274,4 @@\n-  check_format(SIZE_FORMAT,            (size_t)123u,      \"123\");\n-  check_format(SIZE_FORMAT_X,          (size_t)0x123u,    \"0x123\");\n+  check_format(\"%zu\",                  (size_t)123u,      \"123\");\n+  check_format(\"0x%zx\",                (size_t)0x123u,    \"0x123\");\n+  check_format(\"%5zu\",                 (size_t)123u,      \"  123\");\n+  check_format(\"%-5zu\",                (size_t)123u,      \"123  \");\n@@ -277,2 +279,0 @@\n-  check_format(SIZE_FORMAT_W(5),       (size_t)123u,      \"  123\");\n-  check_format(SIZE_FORMAT_W(-5),      (size_t)123u,      \"123  \");\n","filename":"test\/hotspot\/gtest\/utilities\/test_globalDefinitions.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-        tty->print_cr(\"thread %u processed \" SIZE_FORMAT, _id, _local_processed);\n+        tty->print_cr(\"thread %u processed %zu\", _id, _local_processed);\n","filename":"test\/hotspot\/gtest\/utilities\/test_lockFreeStack.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,1 +214,1 @@\n-        tty->print_cr(\"thread %u processed \" SIZE_FORMAT, _id, _local_processed);\n+        tty->print_cr(\"thread %u processed %zu\", _id, _local_processed);\n","filename":"test\/hotspot\/gtest\/utilities\/test_nonblockingQueue.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    tty->print_cr(\"reader iterations: \" SIZE_FORMAT \", changes: \" SIZE_FORMAT,\n+    tty->print_cr(\"reader iterations: %zu, changes: %zu\",\n","filename":"test\/hotspot\/gtest\/utilities\/test_singleWriterSynchronizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-           \"num=\" SIZE_FORMAT \" str=\\\"%s\\\"\", num, str);\n+           \"num=%zu str=\\\"%s\\\"\", num, str);\n@@ -61,1 +61,1 @@\n-            \"num=\" SIZE_FORMAT \" str=\\\"%s\\\"\", num, str);\n+            \"num=%zu str=\\\"%s\\\"\", num, str);\n@@ -69,1 +69,1 @@\n-  fatal(\"num=\" SIZE_FORMAT \" str=\\\"%s\\\"\", num, str);\n+  fatal(\"num=%zu str=\\\"%s\\\"\", num, str);\n","filename":"test\/hotspot\/gtest\/utilities\/test_vmerror.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}