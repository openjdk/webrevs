{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.awt.Rectangle;\n@@ -49,0 +50,2 @@\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -58,0 +61,1 @@\n+    private static volatile Rectangle size;\n@@ -61,1 +65,1 @@\n-    public static void main(String[] args) throws Exception {\n+     private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n@@ -63,51 +67,61 @@\n-            SwingUtilities.invokeAndWait(TestSplitPaneResetDividerLoc::createAndShowUI);\n-\n-            Robot robot = new Robot();\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-            SwingUtilities.invokeAndWait(() -> {\n-                point = openDialogButton.getLocationOnScreen();\n-            });\n-            robot.mouseMove(point.x, point.y);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                int divLoc = splitPane.getDividerLocation();\n-                splitPane.setDividerLocation(divLoc + 200);\n-            });\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-            robot.keyPress(KeyEvent.VK_ESCAPE);\n-            robot.keyRelease(KeyEvent.VK_ESCAPE);\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                setLoc = splitPane.getDividerLocation();\n-                System.out.println(setLoc);\n-            });\n-\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-            robot.mouseMove(point.x, point.y);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                curLoc = splitPane.getDividerLocation();\n-                System.out.println(curLoc);\n-            });\n-\n-            robot.keyPress(KeyEvent.VK_ESCAPE);\n-            robot.keyRelease(KeyEvent.VK_ESCAPE);\n-\n-            if (curLoc != setLoc) {\n-                throw new RuntimeException(\"Divider location is preserved\");\n-            }\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (frame != null) {\n-                    frame.dispose();\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing LAF : \" + laf.getClassName());\n+            try {\n+                setLookAndFeel(laf);\n+                SwingUtilities.invokeAndWait(TestSplitPaneResetDividerLoc::createAndShowUI);\n+\n+                Robot robot = new Robot();\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    point = openDialogButton.getLocationOnScreen();\n+                    size = openDialogButton.getBounds();\n+                });\n+                robot.mouseMove(point.x + size.width \/ 2, point.y + size.height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    int divLoc = splitPane.getDividerLocation();\n+                    splitPane.setDividerLocation(divLoc + 200);\n+                });\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_ESCAPE);\n+                robot.keyRelease(KeyEvent.VK_ESCAPE);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLoc = splitPane.getDividerLocation();\n+                    System.out.println(setLoc);\n+                });\n+\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.mouseMove(point.x + size.width \/ 2, point.y + size.height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    curLoc = splitPane.getDividerLocation();\n+                    System.out.println(curLoc);\n+                });\n+\n+                robot.keyPress(KeyEvent.VK_ESCAPE);\n+                robot.keyRelease(KeyEvent.VK_ESCAPE);\n+\n+                if (curLoc != setLoc) {\n+                    throw new RuntimeException(\"Divider location is not preserved\");\n@@ -115,1 +129,8 @@\n-            });\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                    lazyPanel = null;\n+                });\n+            }\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/TestSplitPaneResetDividerLoc.java","additions":74,"deletions":53,"binary":false,"changes":127,"status":"modified"}]}