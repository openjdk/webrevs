{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -372,0 +372,1 @@\n+        ComponentOrientation curOrn = this.getComponentOrientation();\n@@ -373,15 +374,17 @@\n-        Component leftComponent = this.getLeftComponent();\n-        Component rightComponent = this.getRightComponent();\n-        if (!this.getComponentOrientation().isLeftToRight()) {\n-            if (rightComponent != null) {\n-                setLeftComponent(rightComponent);\n-            }\n-            if (leftComponent != null) {\n-                setRightComponent(leftComponent);\n-            }\n-        } else {\n-            if (leftComponent != null) {\n-                setLeftComponent(leftComponent);\n-            }\n-            if (rightComponent != null) {\n-                setRightComponent(rightComponent);\n+        if (!orientation.equals(curOrn)) {\n+            Component leftComponent = this.getLeftComponent();\n+            Component rightComponent = this.getRightComponent();\n+            if (!this.getComponentOrientation().isLeftToRight()) {\n+                if (rightComponent != null) {\n+                    setLeftComponent(rightComponent);\n+                }\n+                if (leftComponent != null) {\n+                    setRightComponent(leftComponent);\n+                }\n+            } else {\n+                if (leftComponent != null) {\n+                    setLeftComponent(leftComponent);\n+                }\n+                if (rightComponent != null) {\n+                    setRightComponent(rightComponent);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JSplitPane.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,185 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356594\n+ * @key headful\n+ * @summary Verifies if JSplitPane loses divider location when\n+ *          reopened via JOptionPane.createDialog()\n+ * @run main TestSplitPaneResetDividerLoc\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JSplitPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class TestSplitPaneResetDividerLoc {\n+\n+    private static JPanel lazyPanel;\n+    private static JSplitPane splitPane;\n+    private static JButton openDialogButton;\n+    private static JDialog dialog;\n+    private static JFrame frame;\n+    private static volatile Point point;\n+    private static volatile Rectangle size;\n+    private static volatile int setLoc;\n+    private static volatile int curLoc;\n+\n+    private static boolean setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            return true;\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+            return false;\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing LAF : \" + laf.getClassName());\n+            try {\n+                if (!setLookAndFeel(laf)) {\n+                    continue;\n+                }\n+                SwingUtilities.invokeAndWait(TestSplitPaneResetDividerLoc::createAndShowUI);\n+\n+                Robot robot = new Robot();\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    point = openDialogButton.getLocationOnScreen();\n+                    size = openDialogButton.getBounds();\n+                });\n+                robot.mouseMove(point.x + size.width \/ 2, point.y + size.height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    int divLoc = splitPane.getDividerLocation();\n+                    splitPane.setDividerLocation(divLoc + 200);\n+                });\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_ESCAPE);\n+                robot.keyRelease(KeyEvent.VK_ESCAPE);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLoc = splitPane.getDividerLocation();\n+                    System.out.println(setLoc);\n+                });\n+\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.mouseMove(point.x + size.width \/ 2, point.y + size.height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    curLoc = splitPane.getDividerLocation();\n+                    System.out.println(curLoc);\n+                });\n+\n+                robot.keyPress(KeyEvent.VK_ESCAPE);\n+                robot.keyRelease(KeyEvent.VK_ESCAPE);\n+\n+                if (curLoc != setLoc) {\n+                    throw new RuntimeException(\"Divider location is not preserved\");\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                    lazyPanel = null;\n+                });\n+            }\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"JSplitPane Divider Location\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+         openDialogButton = new JButton(new AbstractAction(\"Open Dialog\") {\n+            public void actionPerformed(ActionEvent e) {\n+                openDialogFromOptionPane(frame);\n+            }\n+        });\n+\n+        frame.getContentPane().add(openDialogButton, BorderLayout.CENTER);\n+        frame.setSize(400, 100);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void openDialogFromOptionPane(JFrame parent) {\n+        if (lazyPanel == null) {\n+            System.out.println(\"Creating lazy panel...\");\n+            lazyPanel = new JPanel(new BorderLayout());\n+\n+            JPanel left = new JPanel();\n+            left.setBackground(Color.ORANGE);\n+            JPanel right = new JPanel();\n+            right.setBackground(Color.LIGHT_GRAY);\n+\n+            splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, left, right);\n+            splitPane.setPreferredSize(new Dimension(400, 200));\n+\n+            \/\/ Set initial divider location â€” not preserved across dialog openings in OpenJDK 24\n+            splitPane.setDividerLocation(120);\n+\n+            lazyPanel.add(splitPane, BorderLayout.CENTER);\n+        }\n+\n+        JOptionPane optionPane = new JOptionPane(lazyPanel, JOptionPane.PLAIN_MESSAGE, JOptionPane.DEFAULT_OPTION);\n+        dialog = optionPane.createDialog(parent, \"SplitPane Dialog (JOptionPane)\");\n+        dialog.setModal(false);\n+        dialog.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/TestSplitPaneResetDividerLoc.java","additions":185,"deletions":0,"binary":false,"changes":185,"status":"added"}]}