{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,3 +78,3 @@\n-            return (VectorShuffle<F>)v.castShape(species.asIntegral(), 0)\n-                    .reinterpretAsInts()\n-                    .toFPShuffle();\n+            return (VectorShuffle<F>) v.castShape(species.asIntegral(), 0)\n+                                       .reinterpretAsInts()\n+                                       .toFPShuffle();\n@@ -82,3 +82,3 @@\n-            return (VectorShuffle<F>)v.castShape(species.asIntegral(), 0)\n-                    .reinterpretAsLongs()\n-                    .toFPShuffle();\n+            return (VectorShuffle<F>) v.castShape(species.asIntegral(), 0)\n+                                       .reinterpretAsLongs()\n+                                       .toFPShuffle();\n@@ -108,1 +108,1 @@\n-                .cast(vspecies());\n+                      .cast(vspecies());\n@@ -117,2 +117,2 @@\n-                .toShuffle()\n-                .cast(vspecies());\n+                                   .toShuffle()\n+                                   .cast(vspecies());\n@@ -130,1 +130,1 @@\n-                    v.compare(VectorOperators.LT, 0));\n+                        v.compare(VectorOperators.LT, 0));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,1 +198,1 @@\n-                    : shuffleFromOp(i -> i * step + start);\n+                        : shuffleFromOp(i -> i * step + start);\n@@ -204,1 +204,1 @@\n-                .lanewise(VectorOperators.ADD, start);\n+                   .lanewise(VectorOperators.ADD, start);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorShape.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorShuffle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}