{"files":[{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6795356\n- * @summary Leak caused by javax.swing.UIDefaults.ProxyLazyValue.acc\n- * @author Alexander Potochkin\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n- * @run main\/othervm -Xmx128m bug6795356\n- *\/\n-\n-import java.lang.ref.WeakReference;\n-import java.security.ProtectionDomain;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import java.security.AccessControlContext;\n-import java.util.LinkedList;\n-import java.util.List;\n-import javax.swing.*;\n-\n-public class bug6795356 {\n-    volatile static WeakReference<ProtectionDomain> weakRef;\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        ProtectionDomain domain = new ProtectionDomain(null, null);\n-\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            public Object run() {\n-\n-                \/\/ this initialize ProxyLazyValues\n-                UIManager.getLookAndFeel();\n-\n-                return null;\n-            }\n-        }, new AccessControlContext(new ProtectionDomain[]{domain}));\n-\n-        weakRef = new WeakReference<ProtectionDomain>(domain);\n-        domain = null;\n-\n-        Util.generateOOME();\n-\n-        if (weakRef.get() != null) {\n-            throw new RuntimeException(\"Memory leak found!\");\n-        }\n-        System.out.println(\"Test passed\");\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/UIDefaults\/6795356\/bug6795356.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"}]}