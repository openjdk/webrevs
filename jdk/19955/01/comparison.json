{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,0 +89,11 @@\n+  static ContainerPtr empty_card_set() {\n+    \/\/ Work around https:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=114573\n+    \/\/ gcc issues -Wzero-as-null-pointer-constant here, even though\n+    \/\/ ContainerInlinePtr is a *non-literal* constant 0.  We cast a non-const\n+    \/\/ copy, and let the compiler's constant propagation optimize into\n+    \/\/ equivalent code.\n+    static_assert(G1CardSet::ContainerInlinePtr == 0, \"unnecessary warning dodge\");\n+    auto value = G1CardSet::ContainerInlinePtr;\n+    return reinterpret_cast<ContainerPtr>(value);\n+  }\n+\n@@ -90,1 +101,1 @@\n-  G1CardSetInlinePtr() : _value_addr(nullptr), _value((ContainerPtr)G1CardSet::ContainerInlinePtr) { }\n+  G1CardSetInlinePtr() : G1CardSetInlinePtr(empty_card_set()) {}\n@@ -92,3 +103,2 @@\n-  G1CardSetInlinePtr(ContainerPtr value) : _value_addr(nullptr), _value(value) {\n-    assert(G1CardSet::container_type(_value) == G1CardSet::ContainerInlinePtr, \"Value \" PTR_FORMAT \" is not a valid G1CardSetInlinePtr.\", p2i(_value));\n-  }\n+  explicit G1CardSetInlinePtr(ContainerPtr value) :\n+    G1CardSetInlinePtr(nullptr, value) {}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetContainers.hpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}