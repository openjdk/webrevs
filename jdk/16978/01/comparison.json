{"files":[{"patch":"@@ -61,1 +61,1 @@\n-\n+void (*fp_pw_deinit)(void);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/fp_pipewire.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,0 +92,5 @@\n+    if (pw.loop) {\n+        DEBUG_SCREENCAST(\"STOPPING loop\\n\", NULL);\n+        fp_pw_thread_loop_stop(pw.loop);\n+    }\n+\n@@ -96,1 +101,0 @@\n-                fp_pw_stream_disconnect(screenProps->data->stream);\n@@ -98,0 +102,1 @@\n+                fp_pw_stream_disconnect(screenProps->data->stream);\n@@ -119,2 +124,0 @@\n-    DEBUG_SCREENCAST(\"STOPPING loop\\n\", NULL)\n-\n@@ -122,1 +125,0 @@\n-        fp_pw_thread_loop_stop(pw.loop);\n@@ -133,0 +135,4 @@\n+    if (!sessionClosed) {\n+        fp_pw_deinit();\n+    }\n+\n@@ -574,0 +580,1 @@\n+    gboolean isLoopLockTaken = FALSE;\n@@ -602,0 +609,1 @@\n+        isLoopLockTaken = TRUE;\n@@ -642,1 +650,3 @@\n-    fp_pw_thread_loop_unlock(pw.loop);\n+    if (isLoopLockTaken) {\n+        fp_pw_thread_loop_unlock(pw.loop);\n+    }\n@@ -647,1 +657,3 @@\n-        fp_pw_thread_loop_unlock(pw.loop);\n+        if (isLoopLockTaken) {\n+            fp_pw_thread_loop_unlock(pw.loop);\n+        }\n@@ -703,0 +715,1 @@\n+    LOAD_SYMBOL(fp_pw_deinit, \"pw_deinit\");\n@@ -858,0 +871,27 @@\n+static int makeScreencast(\n+        const gchar *token,\n+        GdkRectangle *requestedArea,\n+        GdkRectangle *affectedScreenBounds,\n+        gint affectedBoundsLength\n+) {\n+    if (!initScreencast(token, affectedScreenBounds, affectedBoundsLength)) {\n+        return pw.pwFd;\n+    }\n+\n+    if (!doLoop(*requestedArea)) {\n+        return RESULT_ERROR;\n+    }\n+\n+    while (!isAllDataReady()) {\n+        fp_pw_thread_loop_lock(pw.loop);\n+        fp_pw_thread_loop_wait(pw.loop);\n+        fp_pw_thread_loop_unlock(pw.loop);\n+        if (hasPipewireFailed) {\n+            doCleanup();\n+            return RESULT_ERROR;\n+        }\n+    }\n+\n+    return RESULT_OK;\n+}\n+\n@@ -914,9 +954,2 @@\n-    if (!initScreencast(token, affectedScreenBounds, affectedBoundsLength)) {\n-        releaseToken(env, jtoken, token);\n-        return pw.pwFd;\n-    }\n-\n-    if (!doLoop(requestedArea)) {\n-        releaseToken(env, jtoken, token);\n-        return RESULT_ERROR;\n-    }\n+    int attemptResult = makeScreencast(\n+        token, &requestedArea, affectedScreenBounds, affectedBoundsLength);\n@@ -924,6 +957,2 @@\n-    while (!isAllDataReady()) {\n-        fp_pw_thread_loop_lock(pw.loop);\n-        fp_pw_thread_loop_wait(pw.loop);\n-        if (hasPipewireFailed) {\n-            fp_pw_thread_loop_unlock(pw.loop);\n-            doCleanup();\n+    if (attemptResult) {\n+        if (attemptResult == RESULT_DENIED) {\n@@ -931,1 +960,9 @@\n-            return RESULT_ERROR;\n+            return attemptResult;\n+        }\n+        DEBUG_SCREENCAST(\"Screencast attempt failed with %i, re-trying...\\n\",\n+                         attemptResult);\n+        attemptResult = makeScreencast(\n+            token, &requestedArea, affectedScreenBounds, affectedBoundsLength);\n+        if (attemptResult) {\n+            releaseToken(env, jtoken, token);\n+            return attemptResult;\n@@ -933,1 +970,0 @@\n-        fp_pw_thread_loop_unlock(pw.loop);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":59,"deletions":23,"binary":false,"changes":82,"status":"modified"}]}