{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4028130 4112308\n+ * @summary Test for location of Frame\/MenuBar when MenuBar is re-added\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuBarAddRemoveTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+\n+public class MenuBarAddRemoveTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Click the left mouse button on the \"Re-Add MenuBar\"\n+                button several times.\n+                3. The Frame\/MenuBar may repaint or flash, but the location\n+                of its upper left corner should never change.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MenuBarAddRemoveTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"Re-Add MenuBar Test Frame\");\n+        Button b = new Button(\"Re-Add MenuBar\");\n+        b.addActionListener(e -> f.setMenuBar(createMenuBar()));\n+        f.setMenuBar(createMenuBar());\n+        f.add(b);\n+        f.pack();\n+        return f;\n+    }\n+\n+    private static MenuBar createMenuBar() {\n+        MenuBar bar = new MenuBar();\n+        bar.add(new Menu(\"foo\"));\n+        return bar;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/MenuBarAddRemoveTest\/MenuBarAddRemoveTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6185057\n+ * @summary Disabling a frame does not disable the menus on the frame, on\n+ *      solaris\/linux\n+ * @requires os.family != \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuBarOnDisabledFrame\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class MenuBarOnDisabledFrame {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Check if MenuBar is disabled on 'Disabled frame'\n+                Press pass if menu bar is disabled, fail otherwise\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MenuBarOnDisabledFrame::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"Disabled frame\");\n+        MenuBar mb = new MenuBar();\n+        Menu m1 = new Menu(\"Disabled Menu 1\");\n+        Menu m2 = new Menu(\"Disabled Menu 2\");\n+        MenuItem m11 = new MenuItem(\"MenuItem 1.1\");\n+        MenuItem m21 = new MenuItem(\"MenuItem 2.1\");\n+        Button b = new Button(\"Disabled button\");\n+\n+        m1.add(m11);\n+        m2.add(m21);\n+        mb.add(m1);\n+        mb.add(m2);\n+        f.setMenuBar(mb);\n+        f.add(b);\n+        f.setEnabled(false);\n+        f.setSize(300, 300);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/MenuBarOnDisabledFrame\/MenuBarOnDisabledFrame.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6180416\n+ * @summary Tests MenuBar and drop down menu visuals\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuBarVisuals\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.MenuShortcut;\n+import java.awt.event.KeyEvent;\n+\n+public class MenuBarVisuals {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Look at the MenuBar and traverse the menus using mouse and\n+                keyboard. Then check if following is showing correctly:\n+                1. Mnemonic label Ctrl+A is NOT drawn for Menu 1\/Submenu 1.1\n+                2. Mnemonic label Ctrl+B is drawn for\n+                    Menu 1\/Submenu 1.1\/Item 1.1.1\n+                3. Mnemonic label Ctrl+C is drawn for Menu1\/Item 1.2\n+                Press PASS if Menu is drawing correctly, FAIL otherwise.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MenuBarVisuals::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"MenuBar Visuals Test\");\n+        MenuBar mb = new MenuBar();\n+        Menu menu1 = new Menu(\"Menu 1\");\n+        Menu submenu11 = new Menu(\"Submenu 1.1\");\n+        MenuItem item111 = new MenuItem(\"Item 1.1.1\");\n+        MenuItem item112 = new MenuItem(\"Item 1.1.2\");\n+        MenuItem item12 = new MenuItem(\"Item 1.2\");\n+        Menu menu2 = new Menu(\"Menu 2\");\n+        MenuItem item21 = new MenuItem(\"Item 2.1\");\n+        MenuItem item22 = new MenuItem(\"Item 2.2\");\n+        item111.setShortcut(new MenuShortcut(KeyEvent.VK_B, false));\n+        submenu11.add(item111);\n+        submenu11.add(item112);\n+        submenu11.setShortcut(new MenuShortcut(KeyEvent.VK_A, false));\n+        menu1.add(submenu11);\n+        item12.setShortcut(new MenuShortcut(KeyEvent.VK_C, false));\n+        menu1.add(item12);\n+        mb.add(menu1);\n+        menu2.add(item21);\n+        menu2.add(item22);\n+        mb.add(menu2);\n+        f.setMenuBar(mb);\n+        f.setSize(300, 300);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/MenuBarVisuals\/MenuBarVisuals.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4275843\n+ * @summary MenuBar doesn't display all of its Menus correctly on Windows\n+ * @requires os.family == \"windows\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetHelpMenuTest\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class SetHelpMenuTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                An empty frame should be visible. When focused, the MenuBar\n+                should have 5 menus (\"one\", \"two\", \"three\", \"Help 2\",\n+                \"four\"). If so, then the test passed. Otherwise, the test\n+                failed.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(SetHelpMenuTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"Help MenuBar Test\");\n+        f.setSize(100, 100);\n+\n+        MenuBar mb = new MenuBar();\n+        Menu h1, h2;\n+\n+        f.setMenuBar(mb);\n+        mb.add(createMenu(\"one\", false));\n+        mb.add(createMenu(\"two\", false));\n+        mb.add(createMenu(\"three\", true));\n+\n+        mb.add(h1 = createMenu(\"Help 1\", false));  \/\/ h1 is HelpMenu\n+        mb.setHelpMenu(h1);\n+\n+        mb.add(h2 = createMenu(\"Help 2\", false));  \/\/ h2 replaced h1\n+        mb.setHelpMenu(h2);\n+\n+        mb.add(createMenu(\"four\", false));\n+\n+        return f;\n+    }\n+\n+    private static Menu createMenu(String name, boolean tearOff) {\n+        Menu m = new Menu(name, tearOff);\n+        m.add(new MenuItem(name + \" item 1\"));\n+        m.add(new MenuItem(name + \" item 2\"));\n+        m.add(new MenuItem(name + \" item 3\"));\n+        return m;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/SetHelpMenuTest\/SetHelpMenuTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}