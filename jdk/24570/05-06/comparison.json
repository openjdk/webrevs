{"files":[{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8327963\n+ * @summary C2: fix construction of memory graph around Initialize node to prevent incorrect execution if allocation is removed\n+ * @run main\/othervm -XX:-BackgroundCompilation TestEarlyEliminationOfAllocationWithoutUse\n+ * @run main\/othervm TestEarlyEliminationOfAllocationWithoutUse\n+ *\/\n+\n+import java.util.Arrays;\n+\n+public class TestEarlyEliminationOfAllocationWithoutUse {\n+    private static volatile int volatileField;\n+\n+    public static void main(String[] args) {\n+        boolean[] allTrue = new boolean[3];\n+        Arrays.fill(allTrue, true);\n+        A a = new A();\n+        boolean[] allFalse = new boolean[3];\n+        for (int i = 0; i < 20_000; i++) {\n+            a.field1 = 0;\n+            test1(a, allTrue);\n+            test1(a, allFalse);\n+            if (a.field1 != 42) {\n+                throw new RuntimeException(\"Lost Store\");\n+            }\n+        }\n+    }\n+\n+    private static void test1(A otherA, boolean[] flags) {\n+        if (flags == null) {\n+        }\n+        otherA.field1 = 42;\n+        \/\/ Fully unrolled before EA\n+        for (int i = 0; i < 3; i++) {\n+            A a = new A(); \/\/ removed right after EA\n+            if (flags[i]) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    private static class A {\n+        int field1;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/macronodes\/TestEarlyEliminationOfAllocationWithoutUse.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"}]}