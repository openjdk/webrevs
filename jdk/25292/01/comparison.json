{"files":[{"patch":"@@ -179,1 +179,4 @@\n-    private static final Duration TIMEOUT = Duration.of(2, ChronoUnit.SECONDS);\n+    \/\/ Adjust this timeout to fail faster for test stalls\n+    private static final Duration TIMEOUT = Duration.ofNanos((long) (\n+            Duration.of(1, ChronoUnit.MINUTES).toNanos()\n+                    * Double.parseDouble(System.getProperty(\"test.timeout.factor\", \"1.0\"))));\n@@ -183,1 +186,1 @@\n-            if (!latch.await(2L, TimeUnit.SECONDS)) {\n+            if (!latch.await(TIMEOUT.toNanos(), TimeUnit.NANOSECONDS)) {\n@@ -212,1 +215,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n@@ -244,1 +246,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n@@ -266,1 +267,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n@@ -318,1 +318,4 @@\n-        if (!ForceGC.wait(() -> ref.refersTo(null))) {\n+        if (!ForceGC.wait(() -> {\n+            CV1.get(int.class); \/\/ flush the weak maps\n+            return ref.refersTo(null);\n+        })) {\n@@ -355,1 +358,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n@@ -401,1 +403,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n@@ -446,1 +447,0 @@\n-    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n","filename":"test\/jdk\/java\/lang\/invoke\/ClassValueTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}