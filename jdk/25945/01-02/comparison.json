{"files":[{"patch":"@@ -47,0 +47,1 @@\n+    static volatile int q;\n@@ -88,0 +89,10 @@\n+        } catch (IllegalArgumentException success) {}\n+    }\n+\n+    \/**\n+     * construction with static field throws IllegalArgumentException\n+     *\/\n+    public void testConstructor4() {\n+        try {\n+            updaterFor(\"q\");\n+            shouldThrow();\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/AtomicIntegerFieldUpdaterTest.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    static volatile long q;\n@@ -91,0 +92,10 @@\n+    \/**\n+     * construction with static field throws IllegalArgumentException\n+     *\/\n+    public void testConstructor4() {\n+        try {\n+            updaterFor(\"q\");\n+            shouldThrow();\n+        } catch (IllegalArgumentException success) {}\n+    }\n+\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/AtomicLongFieldUpdaterTest.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+    static volatile Item q;\n@@ -103,0 +104,11 @@\n+    \/**\n+     * construction with static field throws IllegalArgumentException\n+     *\/\n+    public void testConstructor5() {\n+        try {\n+            updaterFor(\"q\");\n+            shouldThrow();\n+        } catch (IllegalArgumentException success) {}\n+    }\n+\n+\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/AtomicReferenceFieldUpdaterTest.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}