{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-#define CHECK_EXCEPTION if (env->ExceptionOccurred()) { return; }\n+#define CHECK_EXCEPTION if (env->ExceptionCheck()) { return; }\n@@ -105,1 +105,1 @@\n-    if (!env->ExceptionOccurred()) {\n+    if (!env->ExceptionCheck()) {\n@@ -150,1 +150,1 @@\n-    if (!env->ExceptionOccurred()) {\n+    if (!env->ExceptionCheck()) {\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/DwarfParser.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-#define CHECK_EXCEPTION_(value) if (env->ExceptionOccurred()) { return value; }\n-#define CHECK_EXCEPTION if (env->ExceptionOccurred()) { return;}\n+#define CHECK_EXCEPTION_(value) if (env->ExceptionCheck()) { return value; }\n+#define CHECK_EXCEPTION if (env->ExceptionCheck()) { return;}\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/LinuxDebuggerLocal.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -143,2 +143,2 @@\n-#define CHECK_EXCEPTION_(value) if ((*env)->ExceptionOccurred(env)) { return value; }\n-#define CHECK_EXCEPTION if ((*env)->ExceptionOccurred(env)) { return;}\n+#define CHECK_EXCEPTION_(value) if ((*env)->ExceptionCheck(env)) { return value; }\n+#define CHECK_EXCEPTION if ((*env)->ExceptionCheck(env)) { return;}\n@@ -147,3 +147,3 @@\n-#define CHECK_EXCEPTION_CLEAR if ((*env)->ExceptionOccurred(env)) { (*env)->ExceptionClear(env); }\n-#define CHECK_EXCEPTION_CLEAR_VOID if ((*env)->ExceptionOccurred(env)) { (*env)->ExceptionClear(env); return; }\n-#define CHECK_EXCEPTION_CLEAR_(value) if ((*env)->ExceptionOccurred(env)) { (*env)->ExceptionClear(env); return value; }\n+#define CHECK_EXCEPTION_CLEAR if ((*env)->ExceptionCheck(env)) { (*env)->ExceptionClear(env); }\n+#define CHECK_EXCEPTION_CLEAR_VOID if ((*env)->ExceptionCheck(env)) { (*env)->ExceptionClear(env); return; }\n+#define CHECK_EXCEPTION_CLEAR_(value) if ((*env)->ExceptionCheck(env)) { (*env)->ExceptionClear(env); return value; }\n@@ -241,1 +241,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -1139,1 +1139,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/MacosxDebuggerLocal.m","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-  if (libname == NULL || (*env)->ExceptionOccurred(env)) {\n+  if (libname == NULL || (*env)->ExceptionCheck(env)) {\n@@ -142,1 +142,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -148,1 +148,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -179,1 +179,1 @@\n-    if (!(*env)->ExceptionOccurred(env)) {\n+    if (!(*env)->ExceptionCheck(env)) {\n@@ -183,1 +183,1 @@\n-    if ((*env)->ExceptionOccurred(env)) {\n+    if ((*env)->ExceptionCheck(env)) {\n@@ -194,1 +194,1 @@\n-  if (!(*env)->ExceptionOccurred(env)) {\n+  if (!(*env)->ExceptionCheck(env)) {\n@@ -199,1 +199,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -226,1 +226,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -231,1 +231,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -244,1 +244,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n@@ -253,1 +253,1 @@\n-  if ((*env)->ExceptionOccurred(env)) {\n+  if ((*env)->ExceptionCheck(env)) {\n","filename":"src\/jdk.hotspot.agent\/share\/native\/libsaproc\/sadis.c","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -167,2 +167,2 @@\n-#define CHECK_EXCEPTION_(value) if (env->ExceptionOccurred()) { return value; }\n-#define CHECK_EXCEPTION if (env->ExceptionOccurred()) { return; }\n+#define CHECK_EXCEPTION_(value) if (env->ExceptionCheck()) { return value; }\n+#define CHECK_EXCEPTION if (env->ExceptionCheck()) { return; }\n","filename":"src\/jdk.hotspot.agent\/windows\/native\/libsaproc\/sawindbg.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}