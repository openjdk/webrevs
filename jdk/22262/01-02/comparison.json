{"files":[{"patch":"@@ -2708,2 +2708,2 @@\n-                          vmSymbols::getResourceAsStream_name(),\n-                          vmSymbols::getResourceAsStream_signature(),\n+                          vmSymbols::getResourceAsByteArray_name(),\n+                          vmSymbols::getResourceAsByteArray_signature(),\n@@ -2714,11 +2714,2 @@\n-  assert(obj != nullptr, \"ClassLoader::getResourceAsStream should not return null\");\n-\n-  Handle input_stream = Handle(THREAD, obj);\n-  JavaValue res(T_OBJECT);\n-  \/\/ byte[] InputStream.readAllBytes()\n-  JavaCalls::call_virtual(&res,\n-                          input_stream,\n-                          vmClasses::InputStream_klass(),\n-                          vmSymbols::readAllBytes(),\n-                          vmSymbols::void_byte_array_signature(),\n-                          CHECK_NULL);\n+  assert(obj != nullptr, \"ClassLoader.getResourceAsStream should not return null\");\n+\n@@ -2726,3 +2717,2 @@\n-  oop res_oop = res.get_oop();\n-  assert(res_oop->is_typeArray(), \"just checking\");\n-  assert(TypeArrayKlass::cast(res_oop->klass())->element_type() == T_BYTE, \"just checking\");\n+  assert(obj->is_typeArray(), \"just checking\");\n+  assert(TypeArrayKlass::cast(obj->klass())->element_type() == T_BYTE, \"just checking\");\n@@ -2731,1 +2721,1 @@\n-  typeArrayOop ba = typeArrayOop(res_oop);\n+  typeArrayOop ba = typeArrayOop(obj);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -151,1 +151,0 @@\n-  do_klass(InputStream_klass,                           java_io_InputStream                                   ) \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -130,1 +130,0 @@\n-  template(java_io_InputStream,                       \"java\/io\/InputStream\")                      \\\n@@ -727,2 +726,2 @@\n-  template(getResourceAsStream_name,                        \"getResourceAsStream\")                                \\\n-  template(getResourceAsStream_signature,                   \"(Ljava\/lang\/String;)Ljava\/io\/InputStream;\")          \\\n+  template(getResourceAsByteArray_name,                     \"getResourceAsByteArray\")                             \\\n+  template(getResourceAsByteArray_signature,                \"(Ljava\/lang\/String;)[B\")          \\\n@@ -738,1 +737,0 @@\n-  template(readAllBytes,                                    \"readAllBytes\")                                       \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1688,0 +1688,13 @@\n+    \/**\n+     * Called by VM for constructing a ClassFileStream.\n+     *\/\n+    private byte[] getResourceAsByteArray(String name) {\n+        Objects.requireNonNull(name);\n+        InputStream is = getResourceAsStream(name);\n+        try {\n+            return is != null ? is.readAllBytes() : null;\n+        } catch (IOException e) {\n+            return null;\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -48,9 +48,9 @@\n-    static String[] getMain() {\n-        String[] sts = {\n-            \"public class Main {\",\n-            \"    public static void main(String[] args) throws Exception {\",\n-            \"        System.out.println(Class.forName(\\\"Foo\\\"));\",\n-            \"        System.out.println(Class.forName(\\\"Bar\\\"));\",\n-            \"    }\",\n-            \"}\"\n-        };\n+    static String getMain() {\n+        String sts = \"\"\"\n+            public class Main {\n+                public static void main(String[] args) throws Exception {\n+                    System.out.println(Class.forName(\\\"Foo\\\"));\n+                    System.out.println(Class.forName(\\\"Bar\\\"));\n+                }\n+            }\n+            \"\"\";\n@@ -60,8 +60,8 @@\n-    static String[] getFoo() {\n-        String[] sts = {\n-            \"class Foo {\",\n-            \"    static {\",\n-            \"        System.out.println(\\\"Hello from Foo old version \\\");\",\n-            \"    }\",\n-            \"}\",\n-        };\n+    static String getFoo() {\n+        String sts = \"\"\"\n+            class Foo {\n+                static {\n+                    System.out.println(\"Hello from Foo old version\");\n+                }\n+            }\n+        \"\"\";\n@@ -71,8 +71,8 @@\n-    static String[] getFooNewVersion() {\n-        String[] sts = {\n-            \"class Foo {\",\n-            \"    static {\",\n-            \"        System.out.println(\\\"Hello from Foo new version \\\");\",\n-            \"    }\",\n-            \"}\",\n-        };\n+    static String getFooNewVersion() {\n+        String sts = \"\"\"\n+            class Foo {\n+                static {\n+                    System.out.println(\"Hello from Foo new version\");\n+                }\n+            }\n+        \"\"\";\n@@ -82,8 +82,8 @@\n-    static String[] getBar() {\n-        String[] sts = {\n-            \"class Bar {\",\n-            \"    static {\",\n-            \"        System.out.println(\\\"Hello from Bar\\\");\",\n-            \"    }\",\n-            \"}\",\n-        };\n+    static String getBar() {\n+        String sts = \"\"\"\n+            class Bar {\n+                static {\n+                    System.out.println(\"Hello from Bar\");\n+                }\n+            }\n+        \"\"\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/CFLH\/MultiReleaseJars.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"}]}