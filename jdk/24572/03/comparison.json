{"files":[{"patch":"@@ -58,0 +58,1 @@\n+  bool is_uncommit_operation = state == StateType::Reserved && use_tag_inplace;\n@@ -61,0 +62,3 @@\n+    if (is_uncommit_operation) {\n+      return SummaryDiff(-1);\n+    }\n@@ -74,0 +78,3 @@\n+    if (is_uncommit_operation && leqA_state == StateType::Released) {\n+      return SummaryDiff(-1);\n+    }\n@@ -135,0 +142,1 @@\n+  bool is_remove_ok = true;\n@@ -138,10 +146,16 @@\n-    if (cmp_B < 0) {\n-      \/\/ Record all nodes preceding B.\n-      to_be_deleted_inbetween_a_b.push({head->key(), head->val()});\n-    } else if (cmp_B == 0) {\n-      \/\/ Re-purpose B node, unless it would result in a noop node, in\n-      \/\/ which case record old node at B for deletion and summary accounting.\n-      if (stB.is_noop()) {\n-        to_be_deleted_inbetween_a_b.push(AddressState{B, head->val()});\n-      } else {\n-        head->val() = stB;\n+    if (is_uncommit_operation && head->val().out.type() == StateType::Released)  {\n+      is_remove_ok = false;\n+    }\n+    if (is_remove_ok) {\n+      if (cmp_B < 0) {\n+        \/\/ Record all nodes preceding B.\n+        to_be_deleted_inbetween_a_b.push({head->key(), head->val()});\n+      } else if (cmp_B == 0) {\n+        \/\/ Re-purpose B node, unless it would result in a noop node, in\n+        \/\/ which case record old node at B for deletion and summary accounting.\n+        if (stB.is_noop()) {\n+          to_be_deleted_inbetween_a_b.push(AddressState{B, head->val()});\n+        } else {\n+          head->val() = stB;\n+        }\n+        B_needs_insert = false;\n@@ -149,1 +163,0 @@\n-      B_needs_insert = false;\n@@ -152,1 +165,3 @@\n-\n+  if (!is_remove_ok) {\n+    return SummaryDiff(-1);\n+  }\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":27,"deletions":12,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-    SummaryDiff() {\n+    SummaryDiff(int init = 0) {\n@@ -180,1 +180,1 @@\n-        tag[i] = SingleDiff{0, 0};\n+        tag[i] = SingleDiff{init, init};\n@@ -183,1 +183,7 @@\n-\n+    bool has_error() const {\n+      for (int i = 0; i < mt_number_of_tags; i++) {\n+        if (tag[i].reserve >= 0 || tag[i].commit >= 0)\n+          return false;\n+      }\n+      return true;\n+    }\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -742,0 +742,50 @@\n+}\n+\n+TEST_VM_F(NMTVMATreeTest, UncommmitReleasedRegion) {\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    VMATree::SummaryDiff diff = tree.uncommit_mapping(40, 20, rd2);\n+    EXPECT_TRUE(diff.has_error());\n+  }\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    tree.reserve_mapping(0, 100, rd);\n+    tree.release_mapping(50, 20);\n+    \/\/0-----50....70-----100\n+    \/\/   40----60\n+    VMATree::SummaryDiff diff = tree.uncommit_mapping(40, 20, rd2);\n+    EXPECT_TRUE(diff.has_error());\n+  }\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    tree.reserve_mapping(0, 100, rd);\n+    tree.release_mapping(50, 20);\n+    \/\/0-----50....70-----100\n+    \/\/         60----80\n+    VMATree::SummaryDiff diff = tree.uncommit_mapping(60, 20, rd2);\n+    EXPECT_TRUE(diff.has_error());\n+  }\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    tree.reserve_mapping(0, 100, rd);\n+    tree.release_mapping(50, 20);\n+    tree.set_tag(70, 30, mtClass);\n+    \/\/ mtTest    mtNone     mtClass\n+    \/\/0-------50.........70---------100\n+    \/\/    40-------------70\n+    \/\/ Node 70 should not be changed\n+    VMATree::SummaryDiff diff = tree.uncommit_mapping(40, 30, rd2);\n+    EXPECT_TRUE(diff.has_error());\n+    VMATree::VMATreap::Range r = tree.tree().find_enclosing_range(70);\n+    ASSERT_TRUE(r.start != nullptr);\n+    EXPECT_TRUE(r.start->val().out.type() == VMATree::StateType::Reserved);\n+    EXPECT_EQ(r.start->val().out.mem_tag(), mtClass);\n+  }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"}]}