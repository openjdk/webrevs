{"files":[{"patch":"@@ -58,0 +58,1 @@\n+  bool is_uncommit_operation = state == StateType::Reserved && use_tag_inplace;\n@@ -74,0 +75,1 @@\n+    assert(!is_uncommit_operation || leqA_state != StateType::Released, \"uncommitting a released region\");\n@@ -138,0 +140,2 @@\n+    tty->print_cr(\"uc: %d, adr: %d, st:%d\", is_uncommit_operation,(int) head->key(),(int) head->val().out.type());\n+    assert(!is_uncommit_operation || head->val().out.type() != StateType::Released, \"uncommitting a released region\");\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -742,0 +742,23 @@\n+}\n+\n+TEST_VM_F(NMTVMATreeTest, UncommmitReleasedRegion) {\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    tree.reserve_mapping(0, 100, rd);\n+    tree.release_mapping(50, 20);\n+    \/\/0-----50....70-----100\n+    \/\/   40----60\n+    EXPECT_DEATH(tree.uncommit_mapping(40, 20, rd2), \"\");\n+  }\n+  {\n+    Tree tree;\n+    VMATree::RegionData rd(si[0], mtTest);\n+    VMATree::RegionData rd2(si[0], mtNone);\n+    tree.reserve_mapping(0, 100, rd);\n+    tree.release_mapping(50, 20);\n+    \/\/0-----50....70-----100\n+    \/\/         60----80\n+    EXPECT_DEATH(tree.uncommit_mapping(60, 20, rd2), \"\");\n+  }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}