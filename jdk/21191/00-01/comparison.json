{"files":[{"patch":"@@ -792,0 +792,12 @@\n+ZPage* ZPageAllocator::prepare_to_recycle(ZPage* page, bool allow_defragment) {\n+  \/\/ Make sure we have a page that is safe to recycle\n+  ZPage* const to_recycle = _safe_recycle.register_and_clone_if_activated(page);\n+\n+  \/\/ Defragment the page before recycle if allowed and needed\n+  if (allow_defragment && should_defragment(to_recycle)) {\n+    return defragment_page(to_recycle);\n+  }\n+\n+  return to_recycle;\n+}\n+\n@@ -803,6 +815,2 @@\n-  ZPage* to_recycle;\n-  if (allow_defragment && should_defragment(page)) {\n-    to_recycle = defragment_page(_safe_recycle.register_and_clone_if_activated(page));\n-  } else {\n-    to_recycle = _safe_recycle.register_and_clone_if_activated(page);\n-  }\n+  \/\/ Prepare page for recycling before taking the lock\n+  ZPage* const to_recycle = prepare_to_recycle(page, allow_defragment);\n@@ -825,1 +833,1 @@\n-  ZArray<ZPage*> to_recycle;\n+  ZArray<ZPage*> to_recycle_pages;\n@@ -830,0 +838,1 @@\n+  \/\/ Prepare pages for recycling before taking the lock\n@@ -838,6 +847,5 @@\n-    \/\/ Check if page needs to be remapped to avoid fragmentation\n-    if (should_defragment(page)) {\n-      to_recycle.push(defragment_page(_safe_recycle.register_and_clone_if_activated(page)));\n-    } else {\n-      to_recycle.push(_safe_recycle.register_and_clone_if_activated(page));\n-    }\n+    \/\/ Prepare to recycle\n+    ZPage* const to_recycle = prepare_to_recycle(page, true \/* allow_defragment *\/);\n+\n+    \/\/ Register for recycling\n+    to_recycle_pages.push(to_recycle);\n@@ -854,1 +862,1 @@\n-  ZArrayIterator<ZPage*> iter(&to_recycle);\n+  ZArrayIterator<ZPage*> iter(&to_recycle_pages);\n@@ -864,1 +872,1 @@\n-  ZArray<ZPage*> to_recycle;\n+  ZArray<ZPage*> to_recycle_pages;\n@@ -866,0 +874,1 @@\n+  \/\/ Prepare pages for recycling before taking the lock\n@@ -868,1 +877,5 @@\n-    to_recycle.push(_safe_recycle.register_and_clone_if_activated(page));\n+    \/\/ Prepare to recycle\n+    ZPage* const to_recycle = prepare_to_recycle(page, false \/* allow_defragment *\/);\n+\n+    \/\/ Register for recycling\n+    to_recycle_pages.push(to_recycle);\n@@ -880,1 +893,1 @@\n-  ZArrayIterator<ZPage*> iter(&to_recycle);\n+  ZArrayIterator<ZPage*> iter(&to_recycle_pages);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":30,"deletions":17,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+  ZPage* prepare_to_recycle(ZPage* page, bool allow_defragment);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}