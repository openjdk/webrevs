{"files":[{"patch":"@@ -200,0 +200,4 @@\n+  \/\/ Enable WXWrite: the function is called directly from nmethod_entry_barrier\n+  \/\/ stub.\n+  MACOS_AARCH64_ONLY(ThreadWXEnable wx(WXWrite, Thread::current()));\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/barrierSetNMethod_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -11744,1 +11744,3 @@\n-    StubRoutines::_unsafe_setmemory = generate_unsafe_setmemory();\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_setMemory)) {\n+      StubRoutines::_unsafe_setmemory = generate_unsafe_setmemory();\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,2 +51,0 @@\n-  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n-\n@@ -143,1 +141,0 @@\n-  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n","filename":"src\/hotspot\/cpu\/aarch64\/vtableStubs_aarch64.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,4 @@\n-          \"Choose old W^X implementation.\")\n+          \"Choose old W^X implementation.\")                             \\\n+  product(bool, StressWXHealing, false, DIAGNOSTIC,                     \\\n+          \"Stress W xor X healing on MacOS\")\n+\n","filename":"src\/hotspot\/os\/bsd\/globals_bsd.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-      if (*entry_mode == WXArmedForWrite) {\n+      if (entry_mode != nullptr && *entry_mode == WXArmedForWrite) {\n@@ -258,0 +258,1 @@\n+        return thread->wx_enable_write();\n@@ -259,1 +260,0 @@\n-      return thread->wx_enable_write();\n@@ -566,1 +566,3 @@\n-  Thread::current()->wx_enable_write();\n+  if (!StressWXHealing) {\n+    Thread::current()->wx_enable_write();\n+  }\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -397,1 +397,0 @@\n-  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n@@ -512,0 +511,2 @@\n+\n+    MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2019,0 +2019,2 @@\n+  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n+\n@@ -2394,2 +2396,0 @@\n-  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n-\n@@ -2414,0 +2414,2 @@\n+  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,0 +54,3 @@\n+\n+  MACOS_AARCH64_ONLY(os::thread_wx_enable_write());\n+\n","filename":"src\/hotspot\/share\/code\/vtableStubs.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -122,0 +122,4 @@\n+  \/\/ Enable WXWrite: the function is called directly from nmethod_entry_barrier\n+  \/\/ stub.\n+  MACOS_AARCH64_ONLY(ThreadWXEnable wx(WXWrite, Thread::current()));\n+\n@@ -182,4 +186,0 @@\n-  \/\/ Enable WXWrite: the function is called directly from nmethod_entry_barrier\n-  \/\/ stub.\n-  MACOS_AARCH64_ONLY(ThreadWXEnable wx(DefaultWXWriteMode, Thread::current()));\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -285,0 +285,1 @@\n+    ThreadInVMfromJava __tiv(current);                               \\\n@@ -289,1 +290,0 @@\n-    ThreadInVMfromJava __tiv(current);                               \\\n@@ -370,0 +370,1 @@\n+    ThreadInVMfromNative __tiv(thread);                              \\\n@@ -374,1 +375,0 @@\n-    ThreadInVMfromNative __tiv(thread);                              \\\n@@ -398,0 +398,1 @@\n+    ThreadInVMfromNative __tiv(thread);                              \\\n@@ -402,1 +403,0 @@\n-    ThreadInVMfromNative __tiv(thread);                              \\\n@@ -411,0 +411,1 @@\n+    ThreadInVMfromNative __tiv(thread);                              \\\n@@ -415,1 +416,0 @@\n-    ThreadInVMfromNative __tiv(thread);                              \\\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    guarantee(new_mode != WXArmedForWrite, \"need a pointer to heal\");\n","filename":"src\/hotspot\/share\/runtime\/threadWXSetters.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}