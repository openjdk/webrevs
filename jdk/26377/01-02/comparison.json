{"files":[{"patch":"@@ -44,5 +44,2 @@\n- * NONEwithRSA Signature implementation using RSA\/ECB\/PKCS1Padding Cipher\n- * implementation.\n- *\n- * This is mostly refactored from the private static CipherAdapter class\n- * in the java.security.Signature class\n+ * NONEwithRSA Signature implementation using the RSA\/ECB\/PKCS1Padding Cipher\n+ * implementation from SunJCE.\n@@ -59,0 +56,1 @@\n+    @Override\n@@ -69,0 +67,1 @@\n+    @Override\n@@ -75,0 +74,1 @@\n+    @Override\n@@ -81,0 +81,1 @@\n+    @Override\n@@ -85,0 +86,1 @@\n+    @Override\n@@ -98,0 +100,1 @@\n+    @Override\n@@ -106,0 +109,1 @@\n+    @Override\n@@ -121,0 +125,1 @@\n+    @Override\n@@ -128,0 +133,1 @@\n+    @Override\n@@ -134,0 +140,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RSACipherAdaptor.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -514,1 +514,2 @@\n-     * The JDK Reference Implementation additionally uses\n+     * The JDK Reference Implementation additionally uses the following\n+     * security properties:\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    public static final boolean permits(String service, String algo) {\n+    public static boolean permits(String service, String algo) {\n@@ -84,0 +84,5 @@\n+            if (service.length() == 0 || algo.length() == 0) {\n+                debug(\"Remove invalid entry: \" + dk);\n+                disabledServices.remove(dk);\n+                continue;\n+            }\n@@ -124,1 +129,1 @@\n-    \/\/ Return false if algorithm is found in the disabledAlgorithms Set.\n+    \/\/ Return false if algorithm is found in the disabledServices Set.\n@@ -140,1 +145,0 @@\n-        \/\/ We won't check patterns if algorithm check fails.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CryptoAlgorithmConstraints.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -48,4 +48,1 @@\n- * implementation also from PKCS11.\n- *\n- * This is mostly refactored from the private static CipherAdapter class\n- * in the java.security.Signature class\n+ * implementation from SunPKCS11.\n@@ -68,0 +65,1 @@\n+    @Override\n@@ -78,0 +76,1 @@\n+    @Override\n@@ -84,0 +83,1 @@\n+    @Override\n@@ -90,0 +90,1 @@\n+    @Override\n@@ -94,0 +95,1 @@\n+    @Override\n@@ -107,0 +109,1 @@\n+    @Override\n@@ -115,0 +118,1 @@\n+    @Override\n@@ -130,0 +134,1 @@\n+    @Override\n@@ -137,0 +142,1 @@\n+    @Override\n@@ -143,0 +149,1 @@\n+    @Override\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/RSACipherAdaptor.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.io.IOException;\n@@ -35,1 +34,0 @@\n-import java.security.KeyStoreException;\n@@ -37,2 +35,1 @@\n-import java.security.KeyStore.PasswordProtection;\n-import java.security.NoSuchAlgorithmException;\n+import java.security.KeyStoreException;\n@@ -41,1 +38,0 @@\n-import java.security.cert.CertificateException;\n@@ -118,1 +114,0 @@\n-        Security.getProperty(PROP_NAME).equalsIgnoreCase(\"false\");\n","filename":"test\/jdk\/java\/security\/KeyStore\/TestDisabledAlgorithms.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-        Security.getProperty(PROP_NAME).equalsIgnoreCase(\"false\");\n","filename":"test\/jdk\/java\/security\/MessageDigest\/TestDisabledAlgorithms.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-        Security.getProperty(PROP_NAME).equalsIgnoreCase(\"false\");\n","filename":"test\/jdk\/java\/security\/Signature\/TestDisabledAlgorithms.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}