{"files":[{"patch":"@@ -47,0 +47,4 @@\n+    \/\/ for validating the service\n+    private static final Set<String> SUPPORTED_SERVICES =\n+            Set.of(\"Cipher\", \"KeyStore\", \"MessageDigest\", \"Signature\");\n+\n@@ -63,2 +67,2 @@\n-        return CryptoHolder.CONSTRAINTS.permits(null, service + \".\" + algo,\n-                null);\n+        String serviceDesc = service + \".\" + algo;\n+        return CryptoHolder.CONSTRAINTS.cachedCheckAlgorithm(serviceDesc);\n@@ -95,4 +99,2 @@\n-            if (service.equalsIgnoreCase(\"Cipher\") ||\n-                    service.equalsIgnoreCase(\"KeyStore\") ||\n-                    service.equalsIgnoreCase(\"MessageDigest\") ||\n-                    service.equalsIgnoreCase(\"Signature\")) {\n+            if (SUPPORTED_SERVICES.stream().anyMatch(e->e.equalsIgnoreCase\n+                    (service))) {\n@@ -118,4 +120,0 @@\n-    \/*\n-     * This checks if the specified service descriptor is in the\n-     * disabledServices Set. If found, this method return false.\n-     *\/\n@@ -125,5 +123,1 @@\n-        if (serviceDesc == null || serviceDesc.isEmpty()) {\n-            throw new IllegalArgumentException(\"No algorithm name specified\");\n-        }\n-\n-        return cachedCheckAlgorithm(serviceDesc);\n+        throw new UnsupportedOperationException(\"Unsupported permits() method\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CryptoAlgorithmConstraints.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8244336\n+ * @summary Check that invalid property values for\n+ *         \"jdk.crypto.disabledAlgorithms\" are rejected\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"*\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \".\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \".AES\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"Cipher.\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"A.B\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"KeyStore.MY,.\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"KeyStore.MY,.AES\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"KeyStore.MY,Cipher.\"\n+ * @run main\/othervm InvalidCryptoDisabledAlgos \"KeyStore.MY,A.B\"\n+ *\/\n+\n+import java.security.MessageDigest;\n+import java.security.Security;\n+\n+public class InvalidCryptoDisabledAlgos {\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Invalid Property Value = \" + args[0]);\n+        Security.setProperty(\"jdk.crypto.disabledAlgorithms\", args[0]);\n+        \/\/ Trigger the check to parse and validate property value\n+        try {\n+            MessageDigest md = MessageDigest.getInstance(\"SHA-512\");\n+            throw new RuntimeException(\"Should Fail!\");\n+        } catch (ExceptionInInitializerError e) {\n+            Throwable t = e.getException();\n+            if (t instanceof IllegalArgumentException) {\n+                System.out.println(\"Expected Ex thrown for \" + t.getMessage());\n+            } else {\n+                \/\/ pass it up\n+                throw e;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/Security\/SecurityPropFile\/InvalidCryptoDisabledAlgos.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}