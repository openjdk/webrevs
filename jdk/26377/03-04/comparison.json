{"files":[{"patch":"@@ -49,1 +49,10 @@\n-        String property = Security.getProperty(propertyName);\n+        return getAlgorithms(propertyName, false);\n+    }\n+\n+    \/\/ Get algorithm constraints from the specified security property or\n+    \/\/ system property if allowSystemOverride == true.\n+    static Set<String> getAlgorithms(String propertyName,\n+            boolean allowSystemOverride) {\n+        String property = allowSystemOverride ?\n+                SecurityProperties.getOverridableProperty(propertyName) :\n+                Security.getProperty(propertyName);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AbstractAlgorithmConstraints.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,4 +39,4 @@\n- * Algorithm constraints for disabled crypto algorithms property\n- *\n- * See the \"jdk.crypto.disabledAlgorithms\" specification in java.security\n- * for the syntax of the disabled algorithm string.\n+ * This class implements the algorithm constraints for the\n+ * \"jdk.crypto.disabledAlgorithms\" security property. This security property\n+ * can be overridden by the system property of the same name. See the\n+ * java.security file for the syntax of the property value.\n@@ -47,0 +47,4 @@\n+    \/\/ Disabled algorithm security property for JCE crypto services\n+    public static final String PROPERTY_CRYPTO_DISABLED_ALGS =\n+            \"jdk.crypto.disabledAlgorithms\";\n+\n@@ -49,1 +53,1 @@\n-                new CryptoAlgorithmConstraints(\"jdk.crypto.disabledAlgorithms\");\n+                new CryptoAlgorithmConstraints(PROPERTY_CRYPTO_DISABLED_ALGS);\n@@ -59,1 +63,2 @@\n-        return CryptoHolder.CONSTRAINTS.permits(null, service + \".\" + algo, null);\n+        return CryptoHolder.CONSTRAINTS.permits(null, service + \".\" + algo,\n+                null);\n@@ -76,6 +81,1 @@\n-        String val = System.getProperty(propertyName);\n-        \/\/ Override the security property with system property value if set\n-        if (val != null) {\n-            Security.setProperty(propertyName, val);\n-        }\n-        disabledServices = getAlgorithms(propertyName);\n+        disabledServices = getAlgorithms(propertyName, true);\n@@ -86,3 +86,2 @@\n-                debug(\"Remove invalid entry: \" + dk);\n-                disabledServices.remove(dk);\n-                continue;\n+                \/\/ wrong syntax\n+                throw new IllegalArgumentException(\"Invalid entry: \" + dk);\n@@ -93,3 +92,2 @@\n-                debug(\"Remove invalid entry: \" + dk);\n-                disabledServices.remove(dk);\n-                continue;\n+                \/\/ missing service or algorithm\n+                throw new IllegalArgumentException(\"Invalid entry: \" + dk);\n@@ -97,9 +95,14 @@\n-            KnownOIDs oid = KnownOIDs.findMatch(algo);\n-            if (oid != null) {\n-                debug(\"Add oid: \" + oid.value());\n-                disabledServices.add(service + \".\" + oid.value());\n-                debug(\"Add oid stdName: \" + oid.stdName());\n-                disabledServices.add(service + \".\" + oid.stdName());\n-                for (String a : oid.aliases()) {\n-                    debug(\"Add oid alias: \" + a);\n-                    disabledServices.add(service + \".\" + a);\n+            if (service.equalsIgnoreCase(\"Cipher\") ||\n+                    service.equalsIgnoreCase(\"KeyStore\") ||\n+                    service.equalsIgnoreCase(\"MessageDigest\") ||\n+                    service.equalsIgnoreCase(\"Signature\")) {\n+                KnownOIDs oid = KnownOIDs.findMatch(algo);\n+                if (oid != null) {\n+                    debug(\"Add oid: \" + oid.value());\n+                    disabledServices.add(service + \".\" + oid.value());\n+                    debug(\"Add oid stdName: \" + oid.stdName());\n+                    disabledServices.add(service + \".\" + oid.stdName());\n+                    for (String a : oid.aliases()) {\n+                        debug(\"Add oid alias: \" + a);\n+                        disabledServices.add(service + \".\" + a);\n+                    }\n@@ -107,0 +110,3 @@\n+            } else {\n+                \/\/ unsupported service\n+                throw new IllegalArgumentException(\"Invalid entry: \" + dk);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CryptoAlgorithmConstraints.java","additions":33,"deletions":27,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -792,1 +792,1 @@\n-# Service:  (one of the following, more service may be added later)\n+# Service:  (one of the following, more services may be added later)\n@@ -804,1 +804,2 @@\n-# Note: Entries with unsupported services will be ignored\n+# Note: IllegalArgumentException will be thrown if the property value contains\n+# entries with invalid syntax or unsupported services.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm TestDisabledAlgorithms what false\n+ * @run main\/othervm TestDisabledAlgorithms KeyStore.what false\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -Djdk.crypto.disabledAlgorithms=\"what\" TestDisabledAlgorithms KeyStore.JKS false\n+ * @run main\/othervm -Djdk.crypto.disabledAlgorithms=\"KeyStore.what\" TestDisabledAlgorithms KeyStore.JKS false\n","filename":"test\/jdk\/java\/security\/KeyStore\/TestDisabledAlgorithms.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @run main\/othervm TestDisabledAlgorithms what false\n- * @run main\/othervm TestDisabledAlgorithms MessagestDigest.SHA-512\/224 false\n+ * @run main\/othervm TestDisabledAlgorithms MessageDigest.what false\n+ * @run main\/othervm TestDisabledAlgorithms MessageDigest.SHA-512\/224 false\n","filename":"test\/jdk\/java\/security\/MessageDigest\/TestDisabledAlgorithms.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm TestDisabledAlgorithms what false\n+ * @run main\/othervm TestDisabledAlgorithms Signature.what false\n","filename":"test\/jdk\/java\/security\/Signature\/TestDisabledAlgorithms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run main\/othervm TestDisabledAlgorithms what false\n+ * @run main\/othervm TestDisabledAlgorithms Cipher.what false\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/TestDisabledAlgorithms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @run main\/othervm TestDisabledAlgorithms what false\n+ * @run main\/othervm TestDisabledAlgorithms Cipher.what false\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestDisabledAlgorithms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}