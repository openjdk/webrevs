{"files":[{"patch":"@@ -268,0 +268,8 @@\n+Handle ObjectMergeValue::value() const {\n+  if (_selected != nullptr) {\n+    return _selected->value();\n+  } else {\n+    return Handle();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/code\/debugInfo.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  Handle                      value() const                   { assert(_selected != nullptr, \"Should call select() first.\"); return _selected->value(); }\n+  Handle                      value() const;\n","filename":"src\/hotspot\/share\/code\/debugInfo.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8319784\n+ * @summary Check that the JVM is able to dump the heap even when there are ReduceAllocationMerge in the scope.\n+ * @library \/test\/lib \/\n+ * @run main\/othervm compiler.c2.TestReduceAllocationAndHeapDump\n+ *\/\n+\n+package compiler.c2;\n+\n+import java.io.File;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestReduceAllocationAndHeapDump {\n+    public static void main(String[] args) throws Exception {\n+        File dumpDirectory = new File(\"dumps\");\n+\n+        try {\n+            if (!dumpDirectory.exists()) {\n+                dumpDirectory.mkdir();\n+            }\n+\n+            String[] dumperArgs = {\n+                \"-server\",\n+                \"-XX:CompileThresholdScaling=0.01\",\n+                \"-XX:+HeapDumpAfterFullGC\",\n+                \"-XX:HeapDumpPath=\" + dumpDirectory.getAbsolutePath(),\n+                \"-XX:CompileCommand=compileonly,compiler.c2.HeapDumper::testIt\",\n+                \"-XX:CompileCommand=exclude,compiler.c2.HeapDumper::dummy\",\n+                HeapDumper.class.getName()\n+            };\n+\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(dumperArgs);\n+            Process p = pb.start();\n+            OutputAnalyzer out = new OutputAnalyzer(p);\n+\n+            if (out.getExitValue() != 0) {\n+                throw new IllegalStateException(\"Subprocess finished with non-zero exit code.\");\n+            }\n+        } finally {\n+            File[] files = dumpDirectory.listFiles((dir, name) -> name.endsWith(\".hprof\"));\n+\n+            for (File file : files) {\n+                System.out.println(\"Deleting \" + file.getAbsolutePath());\n+                file.delete();\n+            }\n+        }\n+    }\n+}\n+\n+class HeapDumper {\n+    public static Point p = new Point(0);\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < 5000; i++) {\n+            testIt(i);\n+        }\n+    }\n+\n+    public static void testIt(int i) throws Exception {\n+        Point p = (i % 2 == 0) ? new Point(i) : new Point(i);\n+\n+        dummy(i);\n+\n+        if (i < 5000) {\n+            dummy(i);\n+        } else {\n+            dummy(p.x + i);\n+        }\n+    }\n+\n+    public static void dummy(int x) {\n+        if (x > 4900) {\n+            System.gc();\n+        }\n+    }\n+}\n+\n+\/\/ Helper class\n+class Point {\n+    public int x;\n+\n+    public Point(int xx) {\n+        this.x = xx;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestReduceAllocationAndHeapDump.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"}]}