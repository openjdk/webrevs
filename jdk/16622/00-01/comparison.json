{"files":[{"patch":"@@ -235,1 +235,1 @@\n-  Handle                      value() const ;\n+  Handle                      value() const;\n","filename":"src\/hotspot\/share\/code\/debugInfo.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @requires vm.compiler2.enabled & vm.flagless\n@@ -30,6 +29,1 @@\n- * @run main\/othervm -server\n- *                   -XX:CompileThresholdScaling=0.01\n- *                   -XX:+HeapDumpAfterFullGC\n- *                   -XX:CompileCommand=compileonly,compiler.c2.TestReduceAllocationAndHeapDump::testIt\n- *                   -XX:CompileCommand=exclude,compiler.c2.TestReduceAllocationAndHeapDump::dummy\n- *                   compiler.c2.TestReduceAllocationAndHeapDump\n+ * @run main\/othervm compiler.c2.TestReduceAllocationAndHeapDump\n@@ -40,0 +34,4 @@\n+import java.io.File;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -41,0 +39,37 @@\n+    public static void main(String[] args) throws Exception {\n+        File dumpDirectory = new File(\"dumps\");\n+\n+        try {\n+            if (!dumpDirectory.exists()) {\n+                dumpDirectory.mkdir();\n+            }\n+\n+            String[] dumper_args = {\n+                \"-server\",\n+                \"-XX:CompileThresholdScaling=0.01\",\n+                \"-XX:+HeapDumpAfterFullGC\",\n+                \"-XX:HeapDumpPath=\" + dumpDirectory.getAbsolutePath(),\n+                \"-XX:CompileCommand=compileonly,compiler.c2.HeapDumper::testIt\",\n+                \"-XX:CompileCommand=exclude,compiler.c2.HeapDumper::dummy\",\n+                HeapDumper.class.getName()\n+            };\n+\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(dumper_args);\n+            Process p = pb.start();\n+            OutputAnalyzer out = new OutputAnalyzer(p);\n+\n+            if (out.getExitValue() != 0) {\n+                throw new IllegalStateException(\"Subprocess finished with non-zero exit code.\");\n+            }\n+        } finally {\n+            File[] files = dumpDirectory.listFiles((dir, name) -> name.endsWith(\".hprof\"));\n+\n+            for (File file : files) {\n+                System.out.println(\"Deleting \" + file.getAbsolutePath());\n+                file.delete();\n+            }\n+        }\n+    }\n+}\n+\n+class HeapDumper {\n@@ -62,1 +97,1 @@\n-        if (x > 4900)\n+        if (x > 4900) {\n@@ -64,0 +99,1 @@\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestReduceAllocationAndHeapDump.java","additions":44,"deletions":8,"binary":false,"changes":52,"status":"modified"}]}