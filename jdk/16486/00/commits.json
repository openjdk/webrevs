[{"commit":{"message":"8319233: AArch64: Build failure with clang due to -Wformat-nonliteral warning\n\nThe root cause is that an incorrect variant of function\nVMError::report_and_die() is used. We should introduce another variadic\nfunction, just as macos_aarch64 did before.\n\nGCC toolchain:\nFrom [1][2], GCC differs from Clang in flag -Wformat-nonliteral\nslightly, i.e. GCC may **not** raise a warning if \"the format function\ntakes its fromat arguments as a va_list\". That's why this issue is not\nexposed by GCC toolchain before.\n\nBesides, I suppose platforms ppc and risc-v may have the same issue.\n\n[1] https:\/\/gcc.gnu.org\/onlinedocs\/gcc-11.4.0\/gcc\/Warning-Options.html\n[2] https:\/\/releases.llvm.org\/14.0.0\/tools\/clang\/docs\/DiagnosticsReference.html"},"files":[{"filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp"},{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp"},{"filename":"src\/hotspot\/os_cpu\/linux_riscv\/os_linux_riscv.cpp"},{"filename":"src\/hotspot\/share\/utilities\/vmError.cpp"},{"filename":"src\/hotspot\/share\/utilities\/vmError.hpp"}],"sha":"0fd676f67881def278df266cb1b7cc8ae7f7ccb5"}]