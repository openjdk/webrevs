{"files":[{"patch":"@@ -46,3 +46,1 @@\n-    int32_t offset;\n-    __ la(t0, safepoint_pc.target(), offset);\n-    __ addi(t0, t0, offset);\n+    __ la(t0, safepoint_pc.target());\n","filename":"src\/hotspot\/cpu\/riscv\/c1_CodeStubs_riscv.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1409,3 +1409,1 @@\n-    int32_t offset;\n-    __ la(exceptionPC->as_register(), pc_for_athrow.target(), offset);\n-    __ addi(exceptionPC->as_register(), exceptionPC->as_register(), offset);\n+    __ la(exceptionPC->as_register(), pc_for_athrow.target());\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,3 +48,1 @@\n-    int32_t offset;\n-    __ la(t0, safepoint_pc.target(), offset);\n-    __ addi(t0, t0, offset);\n+    __ la(t0, safepoint_pc.target());\n","filename":"src\/hotspot\/cpu\/riscv\/c2_CodeStubs_riscv.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -196,3 +196,1 @@\n-    int32_t offset;\n-    la(xdispatch, target.target(), offset);\n-    addi(xdispatch, xdispatch, offset);\n+    la(xdispatch, target.target());\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,3 +78,1 @@\n-    int32_t offset;\n-    __ la(rcounter_addr, target.target(), offset);\n-    __ addi(rcounter_addr, rcounter_addr, offset);\n+    __ la(rcounter_addr, target.target());\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-  \/\/ call indirectly to solve generation ordering problem\n+  \/\/ Call indirectly to solve generation ordering problem\n@@ -578,1 +578,1 @@\n-  \/\/ call indirectly to solve generation ordering problem\n+  \/\/ Call indirectly to solve generation ordering problem\n@@ -2573,1 +2573,0 @@\n-  int32_t offset = 0;\n@@ -2581,0 +2580,1 @@\n+\n@@ -4213,1 +4213,1 @@\n-void  MacroAssembler::set_narrow_oop(Register dst, jobject obj) {\n+void MacroAssembler::set_narrow_oop(Register dst, jobject obj) {\n@@ -4514,2 +4514,3 @@\n-void MacroAssembler::cmpptr(Register src1, Address src2, Label& equal) {\n-  assert_different_registers(src1, t0);\n+void MacroAssembler::cmpptr(Register src1, const Address &src2, Label& equal, Register tmp) {\n+  assert_different_registers(src1, tmp);\n+  assert(src2.getMode() == Address::literal, \"must be applied to a literal address\");\n@@ -4518,2 +4519,2 @@\n-    la(t0, src2.target(), offset);\n-    ld(t0, Address(t0, offset));\n+    la(tmp, src2.target(), offset);\n+    ld(tmp, Address(tmp, offset));\n@@ -4521,1 +4522,1 @@\n-  beq(src1, t0, equal);\n+  beq(src1, tmp, equal);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1330,1 +1330,1 @@\n-  void cmpptr(Register src1, Address src2, Label& equal);\n+  void cmpptr(Register src1, const Address &src2, Label& equal, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2468,1 +2468,1 @@\n-    ExternalAddress target((address) JvmtiExport::get_field_access_count_addr());\n+    ExternalAddress target(JvmtiExport::get_field_access_count_addr());\n@@ -2679,1 +2679,1 @@\n-    ExternalAddress target((address)JvmtiExport::get_field_modification_count_addr());\n+    ExternalAddress target(JvmtiExport::get_field_modification_count_addr());\n@@ -2972,1 +2972,1 @@\n-    ExternalAddress target((address)JvmtiExport::get_field_modification_count_addr());\n+    ExternalAddress target(JvmtiExport::get_field_modification_count_addr());\n@@ -3104,1 +3104,1 @@\n-    ExternalAddress target((address)JvmtiExport::get_field_access_count_addr());\n+    ExternalAddress target(JvmtiExport::get_field_access_count_addr());\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}