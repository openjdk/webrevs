{"files":[{"patch":"@@ -46,1 +46,1 @@\n-inline bool os::must_commit_stack_guard_pages() {\n+inline bool os::must_allocate_stack_guard_pages() {\n","filename":"src\/hotspot\/os\/aix\/os_aix.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1684,1 +1684,2 @@\n-  return os::commit_memory(addr, size, !ExecMem);\n+  ShouldNotReachHere();\n+  return true;\n@@ -1687,2 +1688,0 @@\n-\/\/ If this is a growable mapping, remove the guard pages entirely by\n-\/\/ munmap()ping them.  If not, just call uncommit_memory().\n@@ -1690,1 +1689,2 @@\n-  return os::uncommit_memory(addr, size);\n+  ShouldNotReachHere();\n+  return true;\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-inline bool os::must_commit_stack_guard_pages() {\n+inline bool os::must_allocate_stack_guard_pages() {\n@@ -43,3 +43,0 @@\n-#if !defined(__FreeBSD__) || __FreeBSD__ < 5\n-  \/\/ Since FreeBSD 4 uses malloc() for allocating the thread stack\n-  \/\/ there is no need to do anything extra to allocate the guard pages\n@@ -47,5 +44,0 @@\n-#else\n-  \/\/ FreeBSD 5+ uses mmap MAP_STACK for allocating the thread stacks.\n-  \/\/ Must 'allocate' them or guard pages are ignored.\n-  return true;\n-#endif\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.inline.hpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3475,2 +3475,23 @@\n-    if (stack_extent < (uintptr_t)addr) {\n-      ::munmap((void*)stack_extent, (uintptr_t)(addr - stack_extent));\n+    \/\/ stack grows towards lower address\n+    \/\/\n+    \/\/ lower address first\n+    \/\/\n+    \/\/ |             |\n+    \/\/ |    stack    |\n+    \/\/ |    frame    |\n+    \/\/ |             | <----- stack_extent (stack end)\n+    \/\/ |             |\n+    \/\/ |xxxxxxxxxxxxx| <------ addr\n+    \/\/ |xxxxxxxxxxxxx|\n+    \/\/ |xxxxxxxxxxxxx|         stack-guard-pages\n+    \/\/ |xxxxxxxxxxxxx| <------ addr + size\n+    \/\/ |             |\n+    \/\/ |             |\n+    \/\/ |ooooooooooooo| <------ actually used by thread\n+    \/\/ |ooooooooooooo|\n+    \/\/ |ooooooooooooo|\n+    \/\/ |ooooooooooooo| <------ stack start\n+    \/\/\n+    \/\/ Truncate the mapping if there is overlapping.\n+    if (stack_extent < (uintptr_t)addr + size) {\n+      ::munmap((void*)stack_extent, (uintptr_t)(addr + size - stack_extent));\n@@ -3478,0 +3499,1 @@\n+    return os::pd_attempt_reserve_memory_at(addr, size, !ExecMem) != nullptr;\n@@ -3480,1 +3502,1 @@\n-  return os::commit_memory(addr, size, !ExecMem);\n+  return true;\n@@ -3496,1 +3518,1 @@\n-  return os::uncommit_memory(addr, size);\n+  return true;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-inline bool os::must_commit_stack_guard_pages() {\n+inline bool os::must_allocate_stack_guard_pages() {\n","filename":"src\/hotspot\/os\/linux\/os_linux.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-inline bool os::must_commit_stack_guard_pages() {\n+inline bool os::must_allocate_stack_guard_pages() {\n","filename":"src\/hotspot\/os\/windows\/os_windows.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-  inline static bool must_commit_stack_guard_pages();\n+  inline static bool must_allocate_stack_guard_pages();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  bool must_commit = os::must_commit_stack_guard_pages();\n+  bool must_allocate = os::must_allocate_stack_guard_pages();\n@@ -95,1 +95,1 @@\n-  if (must_commit && !os::create_stack_guard_pages((char *) low_addr, len)) {\n+  if (must_allocate && !os::create_stack_guard_pages((char *) low_addr, len)) {\n@@ -118,1 +118,1 @@\n-  if (os::must_commit_stack_guard_pages()) {\n+  if (os::must_allocate_stack_guard_pages()) {\n","filename":"src\/hotspot\/share\/runtime\/stackOverflow.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}