{"files":[{"patch":"@@ -2299,9 +2299,5 @@\n-            } catch (IndexOutOfBoundsException ex) {\n-                if (pos.getErrorIndex() < 0) {\n-                    pos.setErrorIndex(0);\n-                }\n-                return null;\n-            }\n-            if (context == null) {\n-                if (pos.getErrorIndex() < 0) {\n-                    pos.setErrorIndex(0);\n+                if (context == null) {\n+                    if (pos.getErrorIndex() < 0) {\n+                        pos.setErrorIndex(0);\n+                    }\n+                    return null;\n@@ -2309,3 +2305,0 @@\n-                return null;\n-            }\n-            try {\n@@ -2318,1 +2311,3 @@\n-                pos.setErrorIndex(0);\n+                if (pos.getErrorIndex() < 0) {\n+                    pos.setErrorIndex(0);\n+                }\n@@ -2323,1 +2318,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatter.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import static java.time.temporal.ChronoField.HOUR_OF_DAY;\n@@ -68,0 +69,1 @@\n+import static java.time.temporal.ChronoField.MINUTE_OF_HOUR;\n@@ -74,0 +76,1 @@\n+import java.text.ParsePosition;\n@@ -83,0 +86,1 @@\n+import java.time.format.SignStyle;\n@@ -84,0 +88,1 @@\n+import java.util.Locale;\n@@ -91,1 +96,1 @@\n- * @bug 8223773 8272473\n+ * @bug 8223773 8272473 8319640\n@@ -240,0 +245,17 @@\n+\n+    \/\/ Checks ::toFormat().parseObject(text, pos) do not throw DateTimeException\n+    @Test\n+    public void test_toFormat_2arg_null_on_error() {\n+        var f = new DateTimeFormatterBuilder()\n+            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE)\n+            .optionalStart()\n+            .appendLiteral(':')\n+            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE)\n+            .optionalEnd()\n+            .optionalStart()\n+            .appendOffset(\"+HHmm\", \"Z\")\n+            .optionalEnd()\n+            .toFormatter(Locale.ROOT)\n+            .toFormat();\n+        assertEquals(f.parseObject(\"17-30\", new ParsePosition(0)), null);\n+    }\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeParsing.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}