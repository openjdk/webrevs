{"files":[{"patch":"@@ -666,0 +666,5 @@\n+  if (log_is_enabled(Info, os)) {\n+    char buffer[2048];\n+    os::check_dump_limit(buffer, sizeof(buffer));\n+    log_info(os)(\"core dump info: %s\", buffer);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,4 @@\n-            runTest(\"-XX:+CreateCoredumpOnCrash\").shouldNotContain(\"CreateCoredumpOnCrash turned off, no core file dumped\")\n-                                                 .shouldNotHaveExitValue(0);\n+          OutputAnalyzer oa = runTest(\"-XX:+CreateCoredumpOnCrash\");\n+          oa.reportDiagnosticSummary();\n+          oa.shouldContain(\"core dump info\").shouldNotContain(\"CreateCoredumpOnCrash turned off, no core file dumped\").\n+                  shouldNotHaveExitValue(0);\n@@ -58,1 +60,0 @@\n-\n@@ -60,0 +61,1 @@\n+\n@@ -63,1 +65,1 @@\n-            \"-Xmx128m\", \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\", option, Crasher.class.getName())\n+            \"-Xmx128m\", \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\", \"-Xlog:os=info:stdout\", option, Crasher.class.getName())\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/CreateCoredumpOnCrash.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}