[{"commit":{"message":"Revert unnecessary changes"},"files":[],"sha":"01dd8618ba85a911f8e364078d7b4fdcefb44d58"},{"commit":{"message":"Move check to original location"},"files":[{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"}],"sha":"c3ae5283aa949be9984aaf936a8d1de2a35319b3"},{"commit":{"message":"Enable zLoadP as implicit null check candidates on riscv and ppc"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/gc\/z\/z_ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/z_riscv.ad"},{"filename":"src\/hotspot\/cpu\/riscv\/riscv.ad"}],"sha":"0e3b8b1c735c889dbbea2c71220311b8685e7614"},{"commit":{"message":"Refactor assertion"},"files":[{"filename":"src\/hotspot\/share\/opto\/output.cpp"}],"sha":"7fd227fa1de9cb6eb819edb23eb010c5ccedeb12"},{"commit":{"message":"Simplify test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestImplicitNullChecks.java"}],"sha":"156f183e7274df4af4cbfa3e83c9527f6897d309"},{"commit":{"message":"Mark zLoadP in x64 as exploitable by implicit null check optimization"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/z\/z_x86_64.ad"}],"sha":"e80fc1d8266785de009fdea47feb1a9ed94467e0"},{"commit":{"message":"Fix comment"},"files":[{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"}],"sha":"b2f4d5b223e5769899ad8e3d583537448bbe12ea"},{"commit":{"message":"Do not mark g1LoadP\/g1LoadN as initial_implicit_null_check_candidate, they cannot be exploited anyway due to indirect memory operand"},"files":[],"sha":"c3d5fab9e871e9841ef9f2c9593814e8ef938ae9"},{"commit":{"message":"Exploit zLoadP only if the memory operand is indOffL8 (indirect does not work anyway due to limitations in C2's analysis)"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"}],"sha":"a906d4ace62f9e7202e9854dc5967bf7028803f8"},{"commit":{"message":"Complete test with stores and atomics"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestImplicitNullChecks.java"}],"sha":"efe2b79159983ac7569bd4256ca00814e2e2ec3a"},{"commit":{"message":"Extend test to G1"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestImplicitNullChecks.java"}],"sha":"5e5204b82fbad6be4f274ba5beaa2b3a280ffd8c"},{"commit":{"message":"Do not mark zLoadPVolatile as a candidate: it cannot be used anyway (due to indirect memory operand)"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestImplicitNullChecks.java"}],"sha":"41bfdd2585bb5946f93165dd92fd82abc623b02a"},{"commit":{"message":"Add initial test for ZGC"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestImplicitNullChecks.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"aa2d90b886ac3a2da6a9660a7c5fcfad19529485"},{"commit":{"message":"Add temporarily a few nops to simulate implicit null check bug"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"}],"sha":"2a5099168ee443eb42fa3922dc16e95107d5d6b0"},{"commit":{"message":"Enable g1LoadP\/N as candidates to implement implicit null checks on aarch64"},"files":[],"sha":"84f55b1ee793cde188d207858118ab9af04bd2c7"},{"commit":{"message":"Enable zLoadPVolatile as a candidate to implement implicit null checks on aarch64"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"}],"sha":"534c4dd956b1446d9fec86594218fd34b07936a6"},{"commit":{"message":"Refine comment"},"files":[{"filename":"src\/hotspot\/share\/opto\/machnode.hpp"}],"sha":"63f70d091d46cd9971845be6e2bf625a3ac306c1"},{"commit":{"message":"Simplify zLoadP check"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"}],"sha":"c65a84d188a060a1c9664f56ef50f27c185233ce"},{"commit":{"message":"Do implicit null check for aarch64 only for simple memory operands"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad"},{"filename":"src\/hotspot\/share\/opto\/output.cpp"}],"sha":"ec432c439edf2cffb0f6550cf5c4be9e0ee83b3c"},{"commit":{"message":"Add initial implementation"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/output_h.cpp"},{"filename":"src\/hotspot\/share\/opto\/block.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.hpp"}],"sha":"ed7fefc627cea4994e173f09054231bb24e9b5a4"}]