{"files":[{"patch":"@@ -868,0 +868,4 @@\n+  \/\/ Save ConstMethod* in r5_ConstMethod for later use to avoid loading multiple times\n+  Register r5_ConstMethod = r5;\n+  __ ldr(r5_ConstMethod, Address(rmethod, Method::const_offset()));\n+\n@@ -878,2 +882,2 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::const_offset()));    \/\/ get ConstMethod\n-    __ add(rbcp, rscratch1, in_bytes(ConstMethod::codes_offset())); \/\/ get codebase\n+    \/\/ Use stored ConstMethod* to avoid loading again\n+    __ add(rbcp, r5_ConstMethod, in_bytes(ConstMethod::codes_offset())); \/\/ get codebase\n@@ -899,3 +903,5 @@\n-  __ ldr(rcpool, Address(rmethod, Method::const_offset()));\n-  __ ldr(rcpool, Address(rcpool, ConstMethod::constants_offset()));\n-  __ ldr(rcpool, Address(rcpool, ConstantPool::cache_offset()));\n+  \/\/ Save ConstantPool* in r11_ConstantPool for later use to avoid loading multiple times\n+  \/\/ Use stored ConstMethod* to avoid loading again\n+  Register r11_ConstantPool = r11;\n+  __ ldr(r11_ConstantPool, Address(r5_ConstMethod, ConstMethod::constants_offset()));\n+  __ ldr(rcpool, Address(r11_ConstantPool, ConstantPool::cache_offset()));\n@@ -912,1 +918,4 @@\n-  __ load_mirror(r10, rmethod, r5, rscratch2);\n+  \/\/ Use stored ConstantPool* to avoid loading again, resolve ConstantPool* -> InstanceKlass* -> Java mirror.\n+  __ ldr(r10, Address(r11_ConstantPool, ConstantPool::pool_holder_offset()));\n+  __ ldr(r10, Address(r10, in_bytes(Klass::java_mirror_offset())));\n+  __ resolve_oop_handle(r10, rscratch1, rscratch2);\n@@ -914,2 +923,2 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::const_offset()));\n-    __ ldrh(rscratch1, Address(rscratch1, ConstMethod::max_stack_offset()));\n+    \/\/ Use stored ConstMethod* to avoid loading again\n+    __ ldrh(rscratch1, Address(r5_ConstMethod, ConstMethod::max_stack_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"}]}