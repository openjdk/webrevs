{"files":[{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Alibaba Group Holding Limited. All Rights Reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import java.io.*;\n-\n-import sun.jvm.hotspot.debugger.Address;\n-\n-public class AttachListenerThread extends JavaThread {\n-\n-  public AttachListenerThread (Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean isJavaThread() { return false; }\n-\n-  public boolean isAttachListenerThread() { return true; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/AttachListenerThread.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,3 +68,12 @@\n-  public boolean isJavaThread() { return false; }\n-  public boolean isHiddenFromExternalView() { return true; }\n-  public boolean isCompilerThread() { return true; }\n+  @Override\n+  public boolean isHiddenFromExternalView() {\n+      \/*\n+       * See JDK-8348317. CompilerThreads are sometimes hidden and sometimes not. They\n+       * are not when JVMCI is enabled and a compiler implemented in java is running\n+       * on the CompilerThread. This is hard for SA to determine, and not something a customer\n+       * is likely to ever run across or care about, so by default all CompilerThreads\n+       * are considered to be hidden. However, we allow this behaviour to be overridden\n+       * in case the user has a need to make the CompilerThreads visible.\n+       *\/\n+      return !Boolean.getBoolean(\"sun.jvm.hotspot.runtime.CompilerThread.visible\");\n+  }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/CompilerThread.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import java.io.*;\n-\n-import sun.jvm.hotspot.debugger.Address;\n-\n-public class DeoptimizeObjectsALotThread extends JavaThread {\n-\n-  public DeoptimizeObjectsALotThread (Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean isJavaThread() { return false; }\n-  public boolean isHiddenFromExternalView() { return true; }\n-\n-  public boolean isDeoptimizeObjectsALotThread() { return true; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/DeoptimizeObjectsALotThread.java","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package sun.jvm.hotspot.runtime;\n+\n+import sun.jvm.hotspot.debugger.Address;\n+\n+public class HiddenJavaThread extends JavaThread {\n+\n+    public HiddenJavaThread(Address addr) {\n+        super(addr);\n+    }\n+\n+    @Override\n+    public boolean isHiddenFromExternalView() { return true; }\n+\n+}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/HiddenJavaThread.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,6 +36,3 @@\n-\/** This is an abstract class because there are certain OS- and\n-    CPU-specific operations (like the setting and getting of the last\n-    Java frame pointer) which need to be factored out. These\n-    operations are implemented by, for example,\n-    SolarisSPARCJavaThread, and the concrete subclasses are\n-    instantiated by the JavaThreadFactory in the Threads class. *\/\n+\/** This class is no longer abstract. Platform dependent functionality is now implmented\n+    in the JavaThreadPDAccess subclasses.\n+ *\/\n@@ -136,10 +133,0 @@\n-  \/** NOTE: for convenience, this differs in definition from the underlying VM.\n-      Only \"pure\" JavaThreads return true; CompilerThreads,\n-      JVMDIDebuggerThreads return false.\n-      FIXME:\n-      consider encapsulating platform-specific functionality in an\n-      object instead of using inheritance (which is the primary reason\n-      we can't traverse CompilerThreads, etc; didn't want to have, for\n-      example, \"SolarisSPARCCompilerThread\".) *\/\n-  public boolean isJavaThread() { return true; }\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JavaThread.java","additions":4,"deletions":17,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2003, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import java.io.*;\n-\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.types.*;\n-\n-\/** FIXME: should be in ..\/prims dir if that directory existed; for\n-    now keep it in runtime dir *\/\n-\n-public class JvmtiAgentThread extends JavaThread {\n-  public JvmtiAgentThread(Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean isJavaThread() { return false; }\n-\n-  public boolean isJvmtiAgentThread() { return true; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JvmtiAgentThread.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import java.io.*;\n-\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.types.*;\n-\n-public class MonitorDeflationThread extends JavaThread {\n-  public MonitorDeflationThread(Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean isJavaThread() { return false; }\n-  public boolean isHiddenFromExternalView() { return true; }\n-  public boolean isMonitorDeflationThread() { return true; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/MonitorDeflationThread.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-\n-import sun.jvm.hotspot.debugger.Address;\n-\n-public class NotificationThread extends JavaThread {\n-    public NotificationThread(Address addr) {\n-        super(addr);\n-    }\n-\n-    public boolean isJavaThread() { return false; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/NotificationThread.java","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import java.io.*;\n-\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.types.*;\n-\n-public class ServiceThread extends JavaThread {\n-  public ServiceThread(Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean isJavaThread() { return false; }\n-  public boolean isHiddenFromExternalView() { return true; }\n-  public boolean isServiceThread() { return true; }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ServiceThread.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.runtime;\n-\n-import sun.jvm.hotspot.debugger.Address;\n-\n-public class StringDedupThread extends JavaThread {\n-    public StringDedupThread(Address addr) {\n-        super(addr);\n-    }\n-\n-    public boolean isJavaThread() { return false; }\n-    public boolean isHiddenFromExternalView() { return true; }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/StringDedupThread.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -83,3 +83,0 @@\n-  public boolean   isJavaThread()                { return false; }\n-  public boolean   isCompilerThread()            { return false; }\n-  public boolean   isCodeCacheSweeperThread()    { return false; }\n@@ -87,6 +84,0 @@\n-  public boolean   isJvmtiAgentThread()          { return false; }\n-  public boolean   isWatcherThread()             { return false; }\n-  public boolean   isServiceThread()             { return false; }\n-  public boolean   isMonitorDeflationThread()    { return false; }\n-  public boolean   isAttachListenerThread()      { return false; }\n-  public boolean   isDeoptimizeObjectsALotThread() { return false; }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Thread.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,3 +49,0 @@\n-        if (!thread.isJavaThread()) {\n-            return;\n-        }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ThreadStackTrace.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -147,1 +147,5 @@\n-        \/\/ Add mappings for all known thread types\n+\n+        \/*\n+         * Add mappings for JavaThread types\n+         *\/\n+\n@@ -149,0 +153,1 @@\n+\n@@ -152,6 +157,0 @@\n-        virtualConstructor.addMapping(\"JvmtiAgentThread\", JvmtiAgentThread.class);\n-        virtualConstructor.addMapping(\"ServiceThread\", ServiceThread.class);\n-        virtualConstructor.addMapping(\"MonitorDeflationThread\", MonitorDeflationThread.class);\n-        virtualConstructor.addMapping(\"NotificationThread\", NotificationThread.class);\n-        virtualConstructor.addMapping(\"StringDedupThread\", StringDedupThread.class);\n-        virtualConstructor.addMapping(\"AttachListenerThread\", AttachListenerThread.class);\n@@ -159,1 +158,10 @@\n-        \/* Only add DeoptimizeObjectsALotThread if it is actually present in the type database. *\/\n+        \/\/ These are all the visible JavaThread subclasses that execute java code.\n+        virtualConstructor.addMapping(\"JvmtiAgentThread\", JavaThread.class);\n+        virtualConstructor.addMapping(\"NotificationThread\", JavaThread.class);\n+        virtualConstructor.addMapping(\"AttachListenerThread\", JavaThread.class);\n+\n+        \/\/ These are all the hidden JavaThread subclasses that don't execute java code.\n+        virtualConstructor.addMapping(\"StringDedupThread\", HiddenJavaThread.class);\n+        virtualConstructor.addMapping(\"ServiceThread\", HiddenJavaThread.class);\n+        virtualConstructor.addMapping(\"MonitorDeflationThread\", HiddenJavaThread.class);\n+        \/\/ Only add DeoptimizeObjectsALotThread if it is actually present in the type database.\n@@ -161,1 +169,1 @@\n-            virtualConstructor.addMapping(\"DeoptimizeObjectsALotThread\", DeoptimizeObjectsALotThread.class);\n+            virtualConstructor.addMapping(\"DeoptimizeObjectsALotThread\", HiddenJavaThread.class);\n@@ -169,11 +177,0 @@\n-    \/** NOTE: this returns objects of type JavaThread or one if its subclasses:\n-      CompilerThread, JvmtiAgentThread, NotificationThread, MonitorDeflationThread,\n-      StringDedupThread, AttachListenerThread, DeoptimizeObjectsALotThread and\n-      ServiceThread. Most operations (fetching the top frame, etc.) are only\n-      allowed to be performed on a \"pure\" JavaThread. For this reason,\n-      {@link sun.jvm.hotspot.runtime.JavaThread#isJavaThread} has been\n-      changed from the definition in the VM (which returns true for\n-      all of these thread types) to return true for JavaThreads and\n-      false for the seven subclasses. FIXME: should reconsider the\n-      inheritance hierarchy; see {@link\n-      sun.jvm.hotspot.runtime.JavaThread#isJavaThread}. *\/\n@@ -263,1 +260,1 @@\n-            if (thread.isCompilerThread() || thread.isCodeCacheSweeperThread()) {\n+            if (thread.isHiddenFromExternalView()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-                if (cur.isJavaThread()) {\n+                if (!cur.isHiddenFromExternalView()) {\n@@ -129,16 +129,15 @@\n-              }\n-          }\n-      }\n-      catch (AddressException e) {\n-        System.err.println(\"Error accessing address 0x\" + Long.toHexString(e.getAddress()));\n-        e.printStackTrace();\n-      }\n-   }\n-\n-   public static void main(String[] args) {\n-      StackTrace st = new StackTrace();\n-      st.execute(args);\n-   }\n-\n-   private boolean verbose;\n-   private boolean concurrentLocks;\n+                }\n+            }\n+        } catch (AddressException e) {\n+            System.err.println(\"Error accessing address 0x\" + Long.toHexString(e.getAddress()));\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        StackTrace st = new StackTrace();\n+        st.execute(args);\n+    }\n+\n+    private boolean verbose;\n+    private boolean concurrentLocks;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/StackTrace.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -467,1 +467,1 @@\n-        if (t.isJavaThread()) {\n+        if (!t.isHiddenFromExternalView()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/JavaThreadsPanel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-  sun.jvm.hotspot.runtime.Thread handleThread;\n+  JavaThread handleThread;\n@@ -203,1 +203,1 @@\n-  public sun.jvm.hotspot.runtime.Thread getJNIHandleThread() {\n+  public JavaThread getJNIHandleThread() {\n@@ -359,8 +359,3 @@\n-      tty.print(\" JNI handle block (\" + handleBlock.top() + \" handle slots present)\");\n-      if (handleThread.isJavaThread()) {\n-        tty.print(\" for JavaThread \");\n-        ((JavaThread) handleThread).printThreadIDOn(tty);\n-        tty.println();\n-      } else {\n-        tty.println(\" for a non-Java Thread\");\n-      }\n+      tty.print(\" JNI handle block (\" + handleBlock.top() + \" handle slots present) for JavaThread \");\n+      handleThread.printThreadIDOn(tty);\n+      tty.println();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"}]}