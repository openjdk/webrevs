{"files":[{"patch":"@@ -24,0 +24,1 @@\n+import static java.util.Map.entry;\n@@ -37,0 +38,1 @@\n+import java.util.Map;\n@@ -46,0 +48,1 @@\n+import jdk.jpackage.internal.util.IdentityWrapper;\n@@ -336,1 +339,1 @@\n-    private record DirectoryVerifier(Path path) implements PathVerifier {\n+    private record DirectoryVerifier(Path path, IdentityWrapper<Content> origin) implements PathVerifier {\n@@ -397,1 +400,1 @@\n-                            return new DirectoryVerifier(dstFile);\n+                            return new DirectoryVerifier(dstFile, new IdentityWrapper<>(this));\n@@ -413,1 +416,1 @@\n-                    verifiers.add(new DirectoryVerifier(cur));\n+                    verifiers.add(new DirectoryVerifier(cur, new IdentityWrapper<>(this)));\n@@ -457,1 +460,1 @@\n-     * Creates a content from {@link TKit#TEST_SRC_ROOT} directory.\n+     * Creates a content from a directory tree.\n@@ -459,1 +462,1 @@\n-     * @param path source path relative to {@link TKit#TEST_SRC_ROOT} directory\n+     * @param path name of directory where to create a directory tree\n@@ -461,1 +464,1 @@\n-    private static ContentFactory createTestSrcContent(Path path) {\n+    private static ContentFactory createDirTreeContent(Path path) {\n@@ -467,1 +470,17 @@\n-            return TKit.TEST_SRC_ROOT.resolve(path);\n+            var basedir = TKit.createTempDirectory(\"content\").resolve(path);\n+\n+            for (var textFile : Map.ofEntries(\n+                    entry(\"woods\/moose\", \"The moose\"),\n+                    entry(\"woods\/bear\", \"The bear\"),\n+                    entry(\"woods\/trees\/jay\", \"The gray jay\")\n+            ).entrySet()) {\n+                var src = basedir.resolve(textFile.getKey());\n+                Files.createDirectories(src.getParent());\n+                TKit.createTextFile(src, Stream.of(textFile.getValue()));\n+            }\n+\n+            for (var emptyDir : List.of(\"sky\")) {\n+                Files.createDirectories(basedir.resolve(emptyDir));\n+            }\n+\n+            return basedir;\n@@ -471,2 +490,2 @@\n-    private static ContentFactory createTestSrcContent(String path) {\n-        return createTestSrcContent(Path.of(path));\n+    private static ContentFactory createDirTreeContent(String path) {\n+        return createDirTreeContent(Path.of(path));\n@@ -624,1 +643,1 @@\n-    private static final ContentFactory TEST_JAVA = createTestSrcContent(\"apps\/PrintEnv.java\");\n+    private static final ContentFactory TEST_JAVA = createTextFileContent(\"apps\/PrintEnv.java\", \"Not what someone would expect\");\n@@ -626,1 +645,1 @@\n-    private static final ContentFactory TEST_DIR = createTestSrcContent(\"apps\");\n+    private static final ContentFactory TEST_DIR = createDirTreeContent(\"apps\");\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppContentTest.java","additions":30,"deletions":11,"binary":false,"changes":41,"status":"modified"}]}