{"files":[{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8361608\n+ * @summary assert in do_unroll does not hold in some cases when peeling comes\n+ *          just before unrolling. It seems to happen only with stress peeling\n+ *\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+StressLoopPeeling\n+ *                   -XX:CompileCommand=compileonly,compiler.loopopts.TooStrictAssertForUnrollAfterStressPeeling::test\n+ *                   -XX:-TieredCompilation\n+ *                   -Xbatch\n+ *                   -XX:PerMethodTrapLimit=0\n+ *                   compiler.loopopts.TooStrictAssertForUnrollAfterStressPeeling\n+ * @run driver compiler.loopopts.TooStrictAssertForUnrollAfterStressPeeling\n+ *\/\n+package compiler.loopopts;\n+\n+public class TooStrictAssertForUnrollAfterStressPeeling {\n+    public static void main(String[] args) {\n+        for (int i = 1; i < 1000; i++) {\n+            test();\n+        }\n+    }\n+\n+    static long test() {\n+        int s = 0;\n+        int iArr[] = new int[400];\n+        for (int i = 0; i < 70; i++) {}\n+\n+        for (int i = 0; i < 36; i++) {\n+            for (int j = 0; j < 3; j++) {\n+                s += iArr[0] = 7;\n+                if (s != 0) {\n+                    return s + foo(iArr);\n+                }\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    public static long foo(int[] a) {\n+        long sum = 0;\n+        for (int i = 0; i < a.length; i++) {\n+            sum += a[i];\n+        }\n+        return sum;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TooStrictAssertForUnrollAfterStressPeeling.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}