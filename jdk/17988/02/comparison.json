{"files":[{"patch":"@@ -71,3 +71,9 @@\n-performance reasons (proxies often do provide caching mechanisms).\n-The following properties allow for configuration of the various type\n-of proxies.<\/P>\n+performance reasons (proxies often do provide caching mechanisms).<\/P>\n+<P>Applications may use the {@link java.net.ProxySelector#select(URI)} method\n+to determine the proxy that should be used for connecting to a given URI.<\/P>\n+<P>The following properties are used to configure the JDK default\n+\t{@link java.net.ProxySelector} implementation.\n+\tThis is the ProxySelector returned by {@link java.net.ProxySelector#getDefault()}\n+\twhen no default ProxySelector was installed by\n+\t{@link java.net.ProxySelector#setDefault(ProxySelector)}\n+<\/P>\n@@ -76,1 +82,3 @@\n-\t<P>The following proxy settings are used by the HTTP protocol handler.<\/P>\n+\t<P>The following properties are used to configure the proxy\n+\t\tthat is {@linkplain java.net.ProxySelector#select(URI) selected}\n+\t\tfor URIs with the {@code http:\/\/} scheme.<\/P>\n@@ -95,3 +103,4 @@\n-\t<LI><P>HTTPS<BR>This is HTTP over SSL, a secure version of HTTP\n-\tmainly used when confidentiality (like on payment sites) is needed.<\/P>\n-\t<P>The following proxy settings are used by the HTTPS protocol handler.<\/P>\n+\t<LI><P>HTTPS<\/P>\n+\t<P>The following properties are used to configure the proxy\n+\t\tthat is {@linkplain java.net.ProxySelector#select(URI) selected}\n+\t\tfor URIs with the {@code https:\/\/} scheme.<\/P>\n@@ -104,1 +113,1 @@\n-\t\t<P>The HTTPS protocol handler will use the same nonProxyHosts\n+\t\t<P>The HTTPS protocol uses the same nonProxyHosts\n@@ -108,1 +117,3 @@\n-\t<P>The following proxy settings are used by the FTP protocol handler.<\/P>\n+\t<P>The following properties are used to configure the proxy\n+\t\tthat is {@linkplain java.net.ProxySelector#select(URI) selected}\n+\t\tfor URIs with the {@code ftp:\/\/} scheme.<\/P>\n@@ -121,1 +132,1 @@\n-\t\t{@code -Dhttp.nonProxyHosts=\"*.foo.com|localhost\"}\n+\t\t{@code -Dftp.nonProxyHosts=\"*.foo.com|localhost\"}\n@@ -127,6 +138,5 @@\n-\t<LI><P>SOCKS<BR>This is another type of proxy. It allows for lower-level\n-\ttype of tunneling since it works at the TCP level. In effect,\n-\tin the Java(tm) platform setting a SOCKS proxy server will result in\n-\tall TCP connections to go through that proxy, unless other proxies\n-\tare specified. If SOCKS is supported by a Java SE implementation, the\n-\tfollowing properties will be used:<\/P>\n+\t<LI><P>SOCKS<\/P>\n+\t<P>This is a lower-level proxy that is\n+\t\t{@linkplain java.net.ProxySelector#select(URI) selected}\n+\t\tfor all of the above URI schemes unless a scheme-specific proxy\n+\t\tis configured. It is also selected for the {@code socket:\/\/} URI scheme.<\/P>\n@@ -138,1 +148,12 @@\n-                <LI><P><B>{@systemProperty socksProxyVersion}<\/B> (default: {@code 5})<BR>\n+\t\t<LI><P><B>{@systemProperty socksNonProxyHosts}<\/B> (default: {@code localhost|127.*|[::1]})<BR>\n+\t\t\tIndicates the hosts that should be accessed without going\n+\t\t\tthrough the proxy. Typically this defines internal hosts.\n+\t\t\tThe value of this property is a list of hosts, separated by\n+\t\t\tthe '|' character. In addition, the wildcard character\n+\t\t\t'*' can be used for pattern matching. For example,\n+\t\t\t{@code -DsocksNonProxyHosts=\"*.foo.com|localhost\"}\n+\t\t\twill indicate that every host in the foo.com domain and the\n+\t\t\tlocalhost should be accessed directly even if a proxy server is\n+\t\t\tspecified.<\/P>\n+\t\t\t<P>The default value excludes all common variations of the loopback address.<\/P>\n+\t\t<LI><P><B>{@systemProperty socksProxyVersion}<\/B> (default: {@code 5})<BR>\n@@ -143,9 +164,0 @@\n-\t\t<LI><P><B>{@systemProperty java.net.socks.username}<\/B> (default: &lt;none&gt;)<BR>\n-\t        Username to use if the SOCKSv5 server asks for authentication\n-\t        and no {@link java.net.Authenticator java.net.Authenticator} instance was found.<\/P>\n-\t\t<LI><P><B>{@systemProperty java.net.socks.password}<\/B> (default: &lt;none&gt;)<BR>\n-\t        Password to use if the SOCKSv5 server asks for authentication\n-\t        and no {@code java.net.Authenticator} instance was found.<\/P>\n-\t\t<P>Note that if no authentication is provided with either the above\n-\t\tproperties or an Authenticator, and the proxy requires one, then\n-\t\tthe <B>user.name<\/B> property will be used with no password.<\/P>\n@@ -195,2 +207,1 @@\n-\t<LI><P><B>{@systemProperty http.auth.digest.cnonceRepeat}<\/B> (default: {@code 5})<\/P>\n-\t<P>These 3 properties modify the behavior of the HTTP digest\n+\t<P>These properties modify the behavior of the HTTP digest\n@@ -201,1 +212,1 @@\n-\tfirst two properties can be set to true to enforce this check for\n+\tproperties can be set to true to enforce this check for\n@@ -203,6 +214,0 @@\n-\t<P>It is usually not necessary to change the third property. It\n-\tdetermines how many times a cnonce value is re-used. This can be\n-\tuseful when the MD5-sess algorithm is being used. Increasing this\n-\tvalue reduces the computational overhead on both client and server\n-\tby reducing the amount of material that has to be hashed for each\n-\tHTTP request.<\/P>\n","filename":"src\/java.base\/share\/classes\/java\/net\/doc-files\/net-properties.html","additions":40,"deletions":35,"binary":false,"changes":75,"status":"modified"}]}