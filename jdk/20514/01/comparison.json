{"files":[{"patch":"@@ -2181,10 +2181,1 @@\n-  char* base = map_memory(_fd, _full_path, r->file_offset(),\n-                          addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n-                          r->allow_exec());\n-  if (base == nullptr || base != addr) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n-                  INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n-                  p2i(addr), _mapped_heap_memregion.byte_size());\n-    return false;\n-  }\n+  char* base;\n@@ -2192,4 +2183,27 @@\n-  if (VerifySharedSpaces && !r->check_region_crc(base)) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n-    return false;\n+  if (MetaspaceShared::use_windows_memory_mapping()) {\n+    if (!read_region(MetaspaceShared::hp, addr,\n+                     align_up(_mapped_heap_memregion.byte_size(), os::vm_page_size()),\n+                     \/* do_commit = *\/ true)) {\n+      dealloc_heap_region();\n+      log_error(cds)(\"Failed to read archived heap region into \" INTPTR_FORMAT, p2i(addr));\n+      return false;\n+    }\n+    \/\/ Checks for VerifySharedSpaces is already done inside read_region()\n+    base = addr;\n+  } else {\n+    base = map_memory(_fd, _full_path, r->file_offset(),\n+                      addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n+                      r->allow_exec());\n+    if (base == nullptr || base != addr) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+                    INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n+                    p2i(addr), _mapped_heap_memregion.byte_size());\n+      return false;\n+    }\n+\n+    if (VerifySharedSpaces && !r->check_region_crc(base)) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      return false;\n+    }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1557,1 +1557,0 @@\n-  int i;\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -624,1 +624,1 @@\n-#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64) && !defined(_WINDOWS)\n+#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64)\n","filename":"src\/hotspot\/share\/utilities\/macros.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}