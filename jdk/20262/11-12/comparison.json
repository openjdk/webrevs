{"files":[{"patch":"@@ -3309,10 +3309,0 @@\n-  enc_class enc_cmove_reg(iRegIdst dst, flagsRegSrc crx, iRegIsrc src, cmpOp cmp) %{\n-    int cc        = $cmp$$cmpcode;\n-    int flags_reg = $crx$$reg;\n-    Label done;\n-    assert((Assembler::bcondCRbiIs1 & ~Assembler::bcondCRbiIs0) == 8, \"check encoding\");\n-    \/\/ Branch if not (cmp crx).\n-    __ bc(cc_to_inverse_boint(cc), cc_to_biint(cc, flags_reg), done);\n-    __ mr($dst$$Register, $src$$Register);\n-    __ bind(done);\n-  %}\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,3 +98,0 @@\n-  if (FLAG_IS_DEFAULT(ConditionalMoveLimit)) {\n-    FLAG_SET_ERGO(ConditionalMoveLimit, 0);\n-  }\n@@ -170,3 +167,1 @@\n-               \"ppc64%s%s%s%s\",\n-               (\" sha\"),\n-               (\" aes\"),\n+               \"ppc64 aes sha%s%s\",\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}