{"files":[{"patch":"@@ -2959,1 +2959,1 @@\n-                                              BasicType bt, uint vector_length, VectorMask vm) {\n+                                              BasicType bt, uint len, VectorMask vm) {\n@@ -2961,1 +2961,0 @@\n-  uint len = vector_length \/ type2aelembytes(bt);\n@@ -2999,1 +2998,1 @@\n-                                        BasicType bt, uint vector_length, VectorMask vm) {\n+                                        BasicType bt, uint len, VectorMask vm) {\n@@ -3001,1 +3000,0 @@\n-  uint len = vector_length \/ type2aelembytes(bt);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-                             uint vector_length, VectorMask vm = Assembler::unmasked);\n+                             uint len, VectorMask vm = Assembler::unmasked);\n@@ -248,1 +248,1 @@\n-                       uint vector_length, VectorMask vm = Assembler::unmasked);\n+                       uint len, VectorMask vm = Assembler::unmasked);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+        \/\/ When vlen < 4, our log2(vlen) implementation does not help to gain performance improvement.\n@@ -2440,2 +2441,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2443,1 +2442,2 @@\n-                             as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg), bt, length_in_bytes);\n+                             as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg),\n+                             Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this));\n@@ -2455,2 +2455,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2459,1 +2457,2 @@\n-                             bt, length_in_bytes, Assembler::v0_t);\n+                             Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this),\n+                             Assembler::v0_t);\n@@ -2464,1 +2463,1 @@\n-instruct reduce_mulL(iRegLNoSp dst, iRegLNoSp isrc, vReg vsrc,\n+instruct reduce_mulL(iRegLNoSp dst, iRegL isrc, vReg vsrc,\n@@ -2471,2 +2470,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2474,1 +2471,2 @@\n-                             as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg), bt, length_in_bytes);\n+                             as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg),\n+                             Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this));\n@@ -2479,1 +2477,1 @@\n-instruct reduce_mulL_masked(iRegLNoSp dst, iRegLNoSp isrc, vReg vsrc,\n+instruct reduce_mulL_masked(iRegLNoSp dst, iRegL isrc, vReg vsrc,\n@@ -2486,2 +2484,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2490,1 +2486,2 @@\n-                             bt, length_in_bytes, Assembler::v0_t);\n+                             Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this),\n+                             Assembler::v0_t);\n@@ -2502,2 +2499,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2505,1 +2500,2 @@\n-                       as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg), bt, length_in_bytes);\n+                       as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg),\n+                       Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this));\n@@ -2517,2 +2513,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2521,1 +2515,2 @@\n-                       bt, length_in_bytes, Assembler::v0_t);\n+                       Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this),\n+                       Assembler::v0_t);\n@@ -2533,2 +2528,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2536,1 +2529,2 @@\n-                       as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg), bt, length_in_bytes);\n+                       as_VectorRegister($tmp1$$reg), as_VectorRegister($tmp2$$reg),\n+                       Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this));\n@@ -2548,2 +2542,0 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $vsrc);\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n@@ -2552,1 +2544,2 @@\n-                       bt, length_in_bytes, Assembler::v0_t);\n+                       Matcher::vector_element_basic_type(this, $vsrc), Matcher::vector_length(this),\n+                       Assembler::v0_t);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":19,"deletions":26,"binary":false,"changes":45,"status":"modified"}]}