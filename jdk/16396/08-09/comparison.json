{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,5 +32,26 @@\n-import java.awt.*;\n-import java.awt.datatransfer.*;\n-import java.awt.dnd.*;\n-import java.awt.event.*;\n-import java.io.*;\n+import java.awt.Frame;\n+import java.awt.Component;\n+import java.awt.Point;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Toolkit;\n+import java.awt.AWTEvent;\n+import java.awt.Robot;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.datatransfer.StringSelection;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSourceAdapter;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DropTargetDropEvent;\n+import java.awt.dnd.DropTargetAdapter;\n+import java.awt.dnd.DragGestureRecognizer;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.DropTargetListener;\n+import java.awt.dnd.DragGestureEvent;\n+import java.io.File;\n+import java.io.InputStream;\n@@ -41,1 +62,1 @@\n-    private boolean successCodes[] = { true, false };\n+    private final boolean successCodes[] = new boolean[]{ true, false };\n@@ -139,1 +160,1 @@\n-    public static final int FRAME_ACTIVATION_TIMEOUT = 3000;\n+    public static final int FRAME_ACTIVATION_TIMEOUT = 1000;\n@@ -161,6 +182,0 @@\n-    private Component clickedComponent = null;\n-\n-    private void reset() {\n-        clickedComponent = null;\n-    }\n-\n@@ -169,1 +184,0 @@\n-            clickedComponent = (Component)e.getSource();\n@@ -175,25 +189,0 @@\n-\n-    public static boolean pointInComponent(Robot robot, Point p, Component comp)\n-      throws InterruptedException {\n-        return theInstance.pointInComponentImpl(robot, p, comp);\n-    }\n-\n-    private boolean pointInComponentImpl(Robot robot, Point p, Component comp)\n-      throws InterruptedException {\n-        robot.waitForIdle();\n-        reset();\n-        robot.mouseMove(p.x, p.y);\n-        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        synchronized (SYNC_LOCK) {\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            SYNC_LOCK.wait(MOUSE_RELEASE_TIMEOUT);\n-        }\n-\n-        Component c = clickedComponent;\n-\n-        while (c != null && c != comp) {\n-            c = c.getParent();\n-        }\n-\n-        return c == comp;\n-    }\n@@ -271,1 +260,0 @@\n-            robot.setAutoWaitForIdle(true);\n@@ -273,0 +261,1 @@\n+            robot.waitForIdle();\n@@ -277,1 +266,1 @@\n-                             Util.sign(targetPoint.y - p.y))) {\n+                            Util.sign(targetPoint.y - p.y))) {\n@@ -297,0 +286,1 @@\n+            robot.waitForIdle();\n@@ -301,1 +291,1 @@\n-                             Util.sign(targetPoint.y - p.y))) {\n+                            Util.sign(targetPoint.y - p.y))) {\n","filename":"test\/jdk\/java\/awt\/dnd\/InterJVMGetDropSuccessTest\/InterJVMGetDropSuccessTest.java","additions":33,"deletions":43,"binary":false,"changes":76,"status":"modified"}]}