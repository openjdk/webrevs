{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,5 +32,26 @@\n-import java.awt.*;\n-import java.awt.datatransfer.*;\n-import java.awt.dnd.*;\n-import java.awt.event.*;\n-import java.io.*;\n+import java.awt.AWTEvent;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.datatransfer.StringSelection;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragGestureRecognizer;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.DragSourceAdapter;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.DropTargetAdapter;\n+import java.awt.dnd.DropTargetDropEvent;\n+import java.awt.dnd.DropTargetListener;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseEvent;\n+import java.io.File;\n+import java.io.InputStream;\n@@ -41,1 +62,1 @@\n-    private boolean successCodes[] = { true, false };\n+    private final boolean[] successCodes = { true, false };\n@@ -71,1 +92,3 @@\n-            Thread.sleep(Util.FRAME_ACTIVATION_TIMEOUT);\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(Util.FRAME_ACTIVATION_TIMEOUT);\n@@ -138,3 +161,1 @@\n-\n-    public static final int FRAME_ACTIVATION_TIMEOUT = 3000;\n-\n+    public static final int FRAME_ACTIVATION_TIMEOUT = 1000;\n@@ -142,2 +163,0 @@\n-    static final int MOUSE_RELEASE_TIMEOUT = 1000;\n-\n@@ -161,6 +180,0 @@\n-    private Component clickedComponent = null;\n-\n-    private void reset() {\n-        clickedComponent = null;\n-    }\n-\n@@ -169,1 +182,0 @@\n-            clickedComponent = (Component)e.getSource();\n@@ -175,25 +187,0 @@\n-\n-    public static boolean pointInComponent(Robot robot, Point p, Component comp)\n-      throws InterruptedException {\n-        return theInstance.pointInComponentImpl(robot, p, comp);\n-    }\n-\n-    private boolean pointInComponentImpl(Robot robot, Point p, Component comp)\n-      throws InterruptedException {\n-        robot.waitForIdle();\n-        reset();\n-        robot.mouseMove(p.x, p.y);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        synchronized (SYNC_LOCK) {\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-            SYNC_LOCK.wait(MOUSE_RELEASE_TIMEOUT);\n-        }\n-\n-        Component c = clickedComponent;\n-\n-        while (c != null && c != comp) {\n-            c = c.getParent();\n-        }\n-\n-        return c == comp;\n-    }\n@@ -229,0 +216,3 @@\n+    private volatile boolean success1 = false;\n+    private volatile boolean success2 = false;\n+\n@@ -261,1 +251,3 @@\n-            Thread.sleep(Util.FRAME_ACTIVATION_TIMEOUT);\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(Util.FRAME_ACTIVATION_TIMEOUT);\n@@ -264,1 +256,0 @@\n-\n@@ -267,1 +258,0 @@\n-            Robot robot = new Robot();\n@@ -269,1 +259,3 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n+            robot.waitForIdle();\n+            robot.delay(50);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -271,2 +263,2 @@\n-                 p.translate(Util.sign(targetPoint.x - p.x),\n-                             Util.sign(targetPoint.y - p.y))) {\n+                p.translate(Util.sign(targetPoint.x - p.x),\n+                            Util.sign(targetPoint.y - p.y))) {\n@@ -274,1 +266,1 @@\n-                Thread.sleep(50);\n+                robot.delay(5);\n@@ -278,1 +270,1 @@\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -282,3 +274,7 @@\n-            if (!dragSourceListener.isDropFinished()) {\n-                throw new RuntimeException(\"Drop not finished\");\n-            }\n+            EventQueue.invokeAndWait(() -> {\n+                if (!dragSourceListener.isDropFinished()) {\n+                    throw new RuntimeException(\"Drop not finished\");\n+                }\n+                success1 = dragSourceListener.getDropSuccess();\n+                dragSourceListener.reset();\n+            });\n@@ -286,1 +282,0 @@\n-            boolean success1 = dragSourceListener.getDropSuccess();\n@@ -288,1 +283,0 @@\n-            dragSourceListener.reset();\n@@ -290,1 +284,3 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n+            robot.waitForIdle();\n+            robot.delay(50);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -292,2 +288,2 @@\n-                 p.translate(Util.sign(targetPoint.x - p.x),\n-                             Util.sign(targetPoint.y - p.y))) {\n+                p.translate(Util.sign(targetPoint.x - p.x),\n+                            Util.sign(targetPoint.y - p.y))) {\n@@ -295,1 +291,1 @@\n-                Thread.sleep(50);\n+                robot.delay(5);\n@@ -299,1 +295,1 @@\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -303,3 +299,7 @@\n-            if (!dragSourceListener.isDropFinished()) {\n-                throw new RuntimeException(\"Drop not finished\");\n-            }\n+            EventQueue.invokeAndWait(() -> {\n+                if (!dragSourceListener.isDropFinished()) {\n+                    throw new RuntimeException(\"Drop not finished\");\n+                }\n+                success2 = dragSourceListener.getDropSuccess();\n+                dragSourceListener.reset();\n+            });\n@@ -307,1 +307,0 @@\n-            boolean success2 = dragSourceListener.getDropSuccess();\n","filename":"test\/jdk\/java\/awt\/dnd\/InterJVMGetDropSuccessTest\/InterJVMGetDropSuccessTest.java","additions":66,"deletions":67,"binary":false,"changes":133,"status":"modified"}]}