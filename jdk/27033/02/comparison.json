{"files":[{"patch":"@@ -66,0 +66,1 @@\n+#include <new>\n@@ -299,1 +300,1 @@\n-  ResourceMark _rm;\n+  static int level;\n@@ -301,0 +302,5 @@\n+  bool _has_rm;\n+  \/\/ Union members of class type are implicitly allocated but not constructed automatically.\n+  \/\/ We therefore have to explicitly construct _rm with a placement new call (see 'onThread()') and\n+  \/\/ clean it up afterwards with an explicit destructor call (see '~Command()').\n+  union { ResourceMark _rm; };\n@@ -302,5 +308,6 @@\n-  static int level;\n-  Command(const char* str) {\n-    if (level++ > 0)  return;\n-    tty->cr();\n-    tty->print_cr(\"\\\"Executing %s\\\"\", str);\n+  Command(const char* str) : _has_rm(false) {\n+    if (level++ == 0) {\n+      tty->cr();\n+      tty->print_cr(\"\\\"Executing %s\\\"\", str);\n+    }\n+    tty->flush();\n@@ -308,1 +315,0 @@\n-\n@@ -310,0 +316,1 @@\n+    if (_has_rm) _rm.~ResourceMark();\n@@ -313,0 +320,14 @@\n+\n+  bool onThread() {\n+    Thread* thread = Thread::current_or_null();\n+    if (thread == nullptr) {\n+      tty->print_cr(\"Failed: Current thread is not attached\");\n+      return false;\n+    }\n+\n+    if (!_has_rm) {\n+      ::new (&_rm) ResourceMark();\n+      _has_rm = true;\n+    }\n+    return true;\n+  }\n@@ -373,0 +394,1 @@\n+  if (!c.onThread()) return;\n@@ -382,0 +404,1 @@\n+  if (!c.onThread()) return;\n@@ -396,0 +419,1 @@\n+  if (!c.onThread()) return;\n@@ -419,2 +443,0 @@\n-extern \"C\" DEBUGEXPORT void findpc(intptr_t x);\n-\n@@ -422,3 +444,0 @@\n-  if (Thread::current_or_null() == nullptr) return;\n-  Command c(\"ps\");\n-\n@@ -426,0 +445,2 @@\n+  Command c(\"ps\");\n+  if (!c.onThread()) return;\n@@ -427,0 +448,4 @@\n+  if (p == nullptr) {\n+    tty->print_cr(\"Failed: JavaThread::active is null\");\n+    return;\n+  }\n@@ -453,0 +478,1 @@\n+  if (!c.onThread()) return;\n@@ -454,0 +480,4 @@\n+  if (p == nullptr) {\n+    tty->print_cr(\"Failed: JavaThread::active is null\");\n+    return;\n+  }\n@@ -463,9 +493,12 @@\n-  {\n-    Command c(\"psf\");\n-    JavaThread* p = JavaThread::active();\n-    tty->print(\" for thread: \");\n-    p->print();\n-    tty->cr();\n-    if (p->has_last_Java_frame()) {\n-      p->trace_frames();\n-    }\n+  Command c(\"psf\");\n+  if (!c.onThread()) return;\n+  JavaThread* p = JavaThread::active();\n+  if (p == nullptr) {\n+    tty->print_cr(\"Failed: JavaThread::active is null\");\n+    return;\n+  }\n+  tty->print(\" for thread: \");\n+  p->print();\n+  tty->cr();\n+  if (p->has_last_Java_frame()) {\n+    p->trace_frames();\n@@ -478,0 +511,1 @@\n+  if (!c.onThread()) return;\n@@ -484,0 +518,1 @@\n+  if (!c.onThread()) return;\n@@ -489,1 +524,0 @@\n-  if (Thread::current_or_null() == nullptr) return;\n@@ -491,0 +525,1 @@\n+  if (!c.onThread()) return;\n@@ -537,0 +572,1 @@\n+  if (!c.onThread()) return;\n@@ -543,0 +579,1 @@\n+  if (!c.onThread()) return;\n@@ -554,0 +591,1 @@\n+  if (!c.onThread()) return;\n@@ -561,0 +599,1 @@\n+  if (!c.onThread()) return;\n@@ -647,0 +686,1 @@\n+  if (!c.onThread()) return;\n@@ -665,0 +705,1 @@\n+  if (!c.onThread()) return;\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":63,"deletions":22,"binary":false,"changes":85,"status":"modified"}]}