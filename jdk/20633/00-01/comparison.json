{"files":[{"patch":"@@ -6766,2 +6766,2 @@\n-  assert(VM_Version::supports_sha512(), \"\");\n-  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  assert(VM_Version::supports_sha512() && VM_Version::supports_avx(), \"\");\n+  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n@@ -6773,2 +6773,2 @@\n-  assert(VM_Version::supports_sha512(), \"\");\n-  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  assert(VM_Version::supports_sha512() && VM_Version::supports_avx(), \"\");\n+  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n@@ -6780,2 +6780,2 @@\n-  assert(VM_Version::supports_sha512(), \"\");\n-  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  assert(VM_Version::supports_sha512() && VM_Version::supports_avx(), \"\");\n+  InstructionAttr attributes(AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n@@ -11696,1 +11696,1 @@\n-void Assembler::vbroadcasti128(XMMRegister dst, Address src) {\n+void Assembler::vbroadcasti128(XMMRegister dst, Address src, int vector_len) {\n@@ -11698,0 +11698,1 @@\n+  assert(vector_len == AVX_256bit, \"\");\n@@ -11700,1 +11701,2 @@\n-  InstructionAttr attributes(Assembler::AVX_256bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_T4, \/* input_size_in_bits *\/ EVEX_32bit);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3034,1 +3034,1 @@\n-  void vbroadcasti128(XMMRegister dst, Address src);\n+  void vbroadcasti128(XMMRegister dst, Address src, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3485,1 +3485,1 @@\n-void MacroAssembler::vbroadcasti128(XMMRegister dst, AddressLiteral src, Register rscratch) {\n+void MacroAssembler::vbroadcasti128(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch) {\n@@ -3489,1 +3489,1 @@\n-    Assembler::vbroadcasti128(dst, as_Address(src));\n+    Assembler::vbroadcasti128(dst, as_Address(src), vector_len);\n@@ -3492,1 +3492,1 @@\n-    Assembler::vbroadcasti128(dst, Address(rscratch, 0));\n+    Assembler::vbroadcasti128(dst, Address(rscratch, 0), vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1221,1 +1221,1 @@\n-  void vbroadcasti128(XMMRegister dst, AddressLiteral src, Register rscratch = noreg);\n+  void vbroadcasti128(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch = noreg);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1526,1 +1526,1 @@\n-    vbroadcasti128(xmm15, ExternalAddress(StubRoutines::x86::pshuffle_byte_flip_mask_addr_sha512()), rbx);\n+    vbroadcasti128(xmm15, ExternalAddress(StubRoutines::x86::pshuffle_byte_flip_mask_addr_sha512()), Assembler::AVX_256bit, r10);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_sha.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1559,2 +1559,2 @@\n-  assert(VM_Version::supports_avx2() || VM_Version::supports_sha512(), \"\");\n-  assert(VM_Version::supports_bmi2(), \"\");\n+  assert(VM_Version::supports_avx2(), \"\");\n+  assert(VM_Version::supports_bmi2() || VM_Version::supports_sha512(), \"\");\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -446,1 +446,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            checkLongValue(\"VM_Version::CPU_SHA\",\n+            checkLongValue(\"VM_Version::CPU_SHA \",\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbLongConstant.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}