{"files":[{"patch":"@@ -190,1 +190,1 @@\n-  __ save_LR_CR(tmp); \/\/ Save in old frame.\n+  __ save_LR(tmp); \/\/ Save in old frame.\n@@ -305,1 +305,1 @@\n-  __ restore_LR_CR(tmp);\n+  __ restore_LR(tmp);\n","filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    __ save_LR_CR(R0);\n+    __ save_LR(R0);\n@@ -92,1 +92,1 @@\n-    __ restore_LR_CR(R0);\n+    __ restore_LR(R0);\n@@ -103,1 +103,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -109,1 +109,1 @@\n-  __ restore_LR_CR(R0);\n+  __ restore_LR(R0);\n@@ -209,1 +209,1 @@\n-    __ save_LR_CR(tmp1);\n+    __ save_LR(tmp1);\n@@ -223,1 +223,1 @@\n-    __ restore_LR_CR(tmp1);\n+    __ restore_LR(tmp1);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -301,1 +301,1 @@\n-  __ restore_LR_CR(R0);\n+  __ restore_LR(R0);\n@@ -345,1 +345,1 @@\n-      \/\/ NOP. Conditions registers are covered by save_LR_CR\n+      ShouldNotReachHere(); \/\/ live condition registers are unexpected at this point\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-    __ save_LR_CR(R11_tmp);\n+    __ save_LR(R11_tmp);\n@@ -172,1 +172,1 @@\n-    __ restore_LR_CR(R11_tmp);\n+    __ restore_LR(R11_tmp);\n@@ -307,1 +307,1 @@\n-    __ save_LR_CR(tmp1);\n+    __ save_LR(tmp1);\n@@ -328,1 +328,1 @@\n-    __ restore_LR_CR(tmp1);\n+    __ restore_LR(tmp1);\n@@ -480,1 +480,1 @@\n-    __ save_LR_CR(tmp1);\n+    __ save_LR(tmp1);\n@@ -520,1 +520,1 @@\n-    __ restore_LR_CR(tmp1);\n+    __ restore_LR(tmp1);\n@@ -919,1 +919,1 @@\n-  __ save_LR_CR(R11_tmp1);\n+  __ save_LR(R11_tmp1);\n@@ -927,1 +927,1 @@\n-  __ restore_LR_CR(R11_tmp1);\n+  __ restore_LR(R11_tmp1);\n@@ -992,1 +992,1 @@\n-  __ save_LR_CR(R11_tmp);\n+  __ save_LR(R11_tmp);\n@@ -1000,1 +1000,1 @@\n-  __ restore_LR_CR(R11_tmp);\n+  __ restore_LR(R11_tmp);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shenandoah\/shenandoahBarrierSetAssembler_ppc.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-    __ save_LR_CR(tmp1);\n+    __ save_LR(tmp1);\n@@ -141,1 +141,1 @@\n-    __ restore_LR_CR(tmp1);\n+    __ restore_LR(tmp1);\n@@ -223,1 +223,1 @@\n-    __ save_LR_CR(tmp_R11);\n+    __ save_LR(tmp_R11);\n@@ -246,1 +246,1 @@\n-  __ restore_LR_CR(tmp_R11);\n+  __ restore_LR(tmp_R11);\n@@ -360,1 +360,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -374,1 +374,1 @@\n-  __ restore_LR_CR(R3_RET);\n+  __ restore_LR(R3_RET);\n@@ -416,1 +416,1 @@\n-    __ save_LR_CR(R0);\n+    __ save_LR(R0);\n@@ -426,1 +426,1 @@\n-    __ restore_LR_CR(R0);\n+    __ restore_LR(R0);\n@@ -482,1 +482,1 @@\n-        \/\/ NOP. Conditions registers are covered by save_LR_CR\n+        ShouldNotReachHere(); \/\/ live condition registers are unexpected at this point.\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/x\/xBarrierSetAssembler_ppc.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-      __ save_LR_CR(R0);\n+      __ save_LR(R0);\n@@ -87,1 +87,1 @@\n-      __ restore_LR_CR(R0);\n+      __ restore_LR(R0);\n@@ -788,1 +788,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -802,1 +802,1 @@\n-  __ restore_LR_CR(R3_RET);\n+  __ restore_LR(R3_RET);\n@@ -818,1 +818,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -828,1 +828,1 @@\n-  __ restore_LR_CR(R3_RET);\n+  __ restore_LR(R3_RET);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/z\/zBarrierSetAssembler_ppc.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -898,3 +898,1 @@\n-void MacroAssembler::save_LR_CR(Register tmp) {\n-  mfcr(tmp);\n-  std(tmp, _abi0(cr), R1_SP);\n+void MacroAssembler::save_LR(Register tmp) {\n@@ -903,1 +901,0 @@\n-  \/\/ Tmp must contain lr on exit! (see return_addr and prolog in ppc64.ad)\n@@ -906,1 +903,1 @@\n-void MacroAssembler::restore_LR_CR(Register tmp) {\n+void MacroAssembler::restore_LR(Register tmp) {\n@@ -910,0 +907,11 @@\n+}\n+\n+void MacroAssembler::save_LR_CR(Register tmp) {\n+  mfcr(tmp);\n+  std(tmp, _abi0(cr), R1_SP);\n+  save_LR(tmp);\n+  \/\/ Tmp must contain lr on exit! (see return_addr and prolog in ppc64.ad)\n+}\n+\n+void MacroAssembler::restore_LR_CR(Register tmp) {\n+  restore_LR(tmp);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -301,1 +301,3 @@\n-  void save_LR_CR(   Register tmp);     \/\/ tmp contains LR on return.\n+  void save_LR(Register tmp);\n+  void restore_LR(Register tmp);\n+  void save_LR_CR(Register tmp);     \/\/ tmp contains LR on return.\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -584,1 +584,1 @@\n-  __ save_LR_CR(tmp); \/\/ save in old frame\n+  __ save_LR(tmp); \/\/ save in old frame\n@@ -595,1 +595,1 @@\n-  __ restore_LR_CR(tmp);\n+  __ restore_LR(tmp);\n","filename":"src\/hotspot\/cpu\/ppc\/methodHandles_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -293,3 +293,1 @@\n-  \/\/ Do the save_LR_CR by hand and adjust the return pc if requested.\n-  __ mfcr(R30);\n-  __ std(R30, frame_size_in_bytes + _abi0(cr), R1_SP);\n+  \/\/ Do the save_LR by hand and adjust the return pc if requested.\n@@ -439,3 +437,0 @@\n-  __ ld(R31, frame_size_in_bytes + _abi0(cr), R1_SP);\n-  __ mtcr(R31);\n-\n@@ -2244,1 +2239,1 @@\n-  __ save_LR_CR(r_temp_1);\n+  __ save_LR(r_temp_1);\n@@ -2697,1 +2692,1 @@\n-  __ restore_LR_CR(R11);\n+  __ restore_LR(R11);\n@@ -2709,1 +2704,1 @@\n-  __ restore_LR_CR(R11);\n+  __ restore_LR(R11);\n@@ -3067,1 +3062,1 @@\n-  __ restore_LR_CR(R0);\n+  __ restore_LR(R0);\n@@ -3114,1 +3109,1 @@\n-  __ save_LR_CR(R11_scratch1);\n+  __ save_LR(R11_scratch1);\n@@ -3204,1 +3199,1 @@\n-  __ restore_LR_CR(R11_scratch1);\n+  __ restore_LR(R11_scratch1);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -472,1 +472,1 @@\n-    __ save_LR_CR(R4_ARG2);\n+    __ save_LR(R4_ARG2);\n@@ -482,1 +482,1 @@\n-    __ restore_LR_CR(R0);\n+    __ restore_LR(R0);\n@@ -553,1 +553,1 @@\n-    __ save_LR_CR(R11_scratch1);\n+    __ save_LR(R11_scratch1);\n@@ -607,1 +607,1 @@\n-    __ restore_LR_CR(R11_scratch1);\n+    __ restore_LR(R11_scratch1);\n@@ -3577,1 +3577,1 @@\n-    __ save_LR_CR(R0);\n+    __ save_LR(R0);\n@@ -3584,1 +3584,1 @@\n-    __ restore_LR_CR(R3_RET \/* used as tmp register *\/);\n+    __ restore_LR(R3_RET \/* used as tmp register *\/);\n@@ -3603,1 +3603,1 @@\n-    __ restore_LR_CR(R0);\n+    __ restore_LR(R0);\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -314,1 +314,1 @@\n-  __ restore_LR_CR(R0);\n+  __ restore_LR(R0);\n@@ -444,1 +444,1 @@\n-  __ save_LR_CR(R0);\n+  __ save_LR(R0);\n@@ -454,1 +454,1 @@\n-  __ restore_LR_CR(R0);\n+  __ restore_LR(R0);\n@@ -1129,1 +1129,1 @@\n-    __ save_LR_CR(R0);\n+    __ save_LR(R0);\n@@ -1136,1 +1136,1 @@\n-    __ restore_LR_CR(R0);\n+    __ restore_LR(R0);\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}