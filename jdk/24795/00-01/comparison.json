{"files":[{"patch":"@@ -686,1 +686,1 @@\n-        printStackTrace(new WrappedPrintStream(s));\n+        printStackTrace(s);\n@@ -689,1 +689,1 @@\n-    private void printStackTrace(PrintStreamOrWriter s) {\n+    private void printStackTrace(Object printer) {\n@@ -695,1 +695,1 @@\n-        synchronized(s.lock()) {\n+        synchronized(printer) {\n@@ -697,1 +697,1 @@\n-            s.println(this);\n+            println(printer, this);\n@@ -700,1 +700,1 @@\n-                s.println(\"\\tat \" + traceElement);\n+                println(printer, \"\\tat \" + traceElement);\n@@ -704,1 +704,1 @@\n-                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION, \"\\t\", dejaVu);\n+                se.printEnclosedStackTrace(printer, trace, SUPPRESSED_CAPTION, \"\\t\", dejaVu);\n@@ -709,1 +709,14 @@\n-                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, \"\", dejaVu);\n+                ourCause.printEnclosedStackTrace(printer, trace, CAUSE_CAPTION, \"\", dejaVu);\n+        }\n+    }\n+\n+    \/**\n+     * Prints the specified string as a line on this StreamOrWriter\n+     * @param printer PrintStream or PrintWriter to use for output\n+     * @param o String to print\n+     *\/\n+    private static void println(Object printer, Object o) {\n+        if (printer instanceof PrintStream ps) {\n+            ps.println(o);\n+        } else {\n+            ((PrintWriter) printer).println(o);\n@@ -717,1 +730,1 @@\n-    private void printEnclosedStackTrace(PrintStreamOrWriter s,\n+    private void printEnclosedStackTrace(Object printer,\n@@ -722,1 +735,1 @@\n-        assert Thread.holdsLock(s.lock());\n+        assert Thread.holdsLock(printer);\n@@ -724,1 +737,1 @@\n-            s.println(prefix + caption + \"[CIRCULAR REFERENCE: \" + this + \"]\");\n+            println(printer, prefix + caption + \"[CIRCULAR REFERENCE: \" + this + \"]\");\n@@ -737,1 +750,1 @@\n-            s.println(prefix + caption + this);\n+            println(printer, prefix + caption + this);\n@@ -739,1 +752,1 @@\n-                s.println(prefix + \"\\tat \" + trace[i]);\n+                println(printer, prefix + \"\\tat \" + trace[i]);\n@@ -741,1 +754,1 @@\n-                s.println(prefix + \"\\t... \" + framesInCommon + \" more\");\n+                println(printer, prefix + \"\\t... \" + framesInCommon + \" more\");\n@@ -745,1 +758,1 @@\n-                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION,\n+                se.printEnclosedStackTrace(printer, trace, SUPPRESSED_CAPTION,\n@@ -751,1 +764,1 @@\n-                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, prefix, dejaVu);\n+                ourCause.printEnclosedStackTrace(printer, trace, CAUSE_CAPTION, prefix, dejaVu);\n@@ -763,33 +776,1 @@\n-        printStackTrace(new WrappedPrintWriter(s));\n-    }\n-\n-    \/**\n-     * Wrapper class for PrintStream and PrintWriter to enable a single\n-     * implementation of printStackTrace.\n-     *\/\n-    private interface PrintStreamOrWriter {\n-        \/** Returns the object to be locked when using this StreamOrWriter *\/\n-        abstract Object lock();\n-\n-        \/** Prints the specified string as a line on this StreamOrWriter *\/\n-        abstract void println(Object o);\n-    }\n-\n-    private record WrappedPrintStream(PrintStream printStream) implements PrintStreamOrWriter {\n-        public Object lock() {\n-            return printStream;\n-        }\n-\n-        public void println(Object o) {\n-            printStream.println(o);\n-        }\n-    }\n-\n-    private record WrappedPrintWriter(PrintWriter printWriter) implements PrintStreamOrWriter {\n-        public Object lock() {\n-            return printWriter;\n-        }\n-\n-        public void println(Object o) {\n-            printWriter.println(o);\n-        }\n+        printStackTrace(s);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Throwable.java","additions":29,"deletions":48,"binary":false,"changes":77,"status":"modified"}]}