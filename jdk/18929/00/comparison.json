{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,10 +84,0 @@\n-\n-size_t Generation::max_contiguous_available() const {\n-  \/\/ The largest number of contiguous free words in this or any higher generation.\n-  size_t avail = contiguous_available();\n-  size_t old_avail = 0;\n-  if (SerialHeap::heap()->is_young_gen(this)) {\n-    old_avail = SerialHeap::heap()->old_gen()->contiguous_available();\n-  }\n-  return MAX2(avail, old_avail);\n-}\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.cpp","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -102,2 +102,0 @@\n-  \/\/ The largest number of contiguous free bytes in this or any higher generation.\n-  virtual size_t max_contiguous_available() const;\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -419,1 +419,1 @@\n-  size_t available = max_contiguous_available();\n+  size_t available = contiguous_available();\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}