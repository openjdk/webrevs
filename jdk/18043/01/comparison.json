{"files":[{"patch":"@@ -77,0 +77,9 @@\n+ifeq ($(call isTargetOs, windows), true)\n+  ifeq ($(STATIC_LIBS), true)\n+    GTEST_WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/gtest\/static-win-exports.def\n+  else\n+    GTEST_WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/gtest\/win-exports.def\n+  endif\n+  JVM_LDFLAGS += -def:$(GTEST_WIN_EXPORT_FILE)\n+endif\n+\n@@ -122,2 +131,1 @@\n-  $(BUILD_GTEST_LIBJVM_TARGET): $(WIN_EXPORT_FILE)\n-endif\n+    $(eval $(call CreateWinExportFile, $(GTEST_WIN_EXPORT_FILE), $(BUILD_GTEST_LIBJVM_ALL_OBJS)))\n@@ -125,0 +133,2 @@\n+  $(BUILD_GTEST_LIBJVM_TARGET): $(GTEST_WIN_EXPORT_FILE)\n+endif\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -149,1 +149,5 @@\n-  WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/win-exports.def\n+  ifeq ($(STATIC_LIBS), true)\n+    WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/static-win-exports.def\n+  else\n+    WIN_EXPORT_FILE := $(JVM_OUTPUTDIR)\/win-exports.def\n+  endif\n@@ -151,1 +155,1 @@\n-  JVM_LDFLAGS += -def:$(WIN_EXPORT_FILE)\n+  JVM_LDFLAGS_NO_GTEST += -def:$(WIN_EXPORT_FILE)\n@@ -205,1 +209,1 @@\n-    LDFLAGS := $(JVM_LDFLAGS), \\\n+    LDFLAGS := $(JVM_LDFLAGS) $(JVM_LDFLAGS_NO_GTEST), \\\n@@ -235,1 +239,1 @@\n-        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print $$7; \\\n+        if ($$7 ~ \/\\?\\?_7.*@@6B@\/ && $$7 !~ \/type_info\/ && $$7 !~ \/lambda\/) print \"  \" $$7; \\\n@@ -238,12 +242,18 @@\n-  # A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n-  # cd && *.obj, but this will result in very long command lines, which could be\n-  # problematic.\n-  $(WIN_EXPORT_FILE): $(BUILD_LIBJVM_ALL_OBJS)\n-\t$(call LogInfo, Generating list of symbols to export from object files)\n-\t$(call MakeDir, $(@D))\n-\t$(CD) $(JVM_OUTPUTDIR)\/objs && \\\n-\t    $(DUMPBIN) -symbols *$(OBJ_SUFFIX) | $(AWK) $(FILTER_SYMBOLS_AWK_SCRIPT) | $(SORT) -u > $@.syms\n-\t$(ECHO) \"EXPORTS\" > $@.tmp\n-\t$(AWK) '{ if ($$0 ~ \".\") { print \"  \" $$0 } }'  < $@.syms >> $@.tmp\n-\t$(RM) $@\n-\t$(MV) $@.tmp $@\n+  # Setup a rule to create a win-exports.def file\n+  # $1: the name of the file to create\n+  # $2: the object targets to depend on\n+  define CreateWinExportFile\n+    # A more correct solution would be to send BUILD_LIBJVM_ALL_OBJS instead of\n+    # cd && *.obj, but this will result in very long command lines, which could be\n+    # problematic.\n+    $1: $2\n+\t$$(call LogInfo, Generating list of symbols to export from object files)\n+\t$$(call MakeDir, $$(@D))\n+\t$$(ECHO) \"EXPORTS\" > $$@.tmp\n+\t$$(CD) $$(BUILD_LIBJVM_OBJECT_DIR) && \\\n+\t    $$(DUMPBIN) -symbols *$$(OBJ_SUFFIX) | $$(AWK) $$(FILTER_SYMBOLS_AWK_SCRIPT) | $$(SORT) -u >> $$@.tmp\n+\t$$(RM) $$@\n+\t$$(MV) $$@.tmp $$@\n+  endef\n+\n+  $(eval $(call CreateWinExportFile, $(WIN_EXPORT_FILE), $(BUILD_LIBJVM_ALL_OBJS)))\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"}]}