{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    SegmentAllocator arenaAllocator = new RingAllocator(arena);\n-    SlicingPool pool = new SlicingPool();\n+    SegmentAllocator arenaAllocator;\n+    SlicingPool pool;\n@@ -60,1 +60,1 @@\n-    @Param({\"5\", \"20\", \"100\"})\n+    @Param({\"5\", \"20\", \"100\", \"451\"})\n@@ -79,0 +79,2 @@\n+        arenaAllocator = new RingAllocator(arena, size + 1);\n+        pool = new SlicingPool(size + 1);\n@@ -145,0 +147,3 @@\n+        while (lorem.length() < size) {\n+            lorem += lorem;\n+        }\n@@ -153,2 +158,2 @@\n-        public RingAllocator(Arena session) {\n-            this.segment = session.allocate(1024, 1);\n+        public RingAllocator(Arena session, int size) {\n+            this.segment = session.allocate(size, 1);\n@@ -176,1 +181,1 @@\n-        final MemorySegment pool = Arena.ofAuto().allocate(1024);\n+        final MemorySegment pool;\n@@ -179,0 +184,4 @@\n+        public SlicingPool(int size) {\n+            this.pool = Arena.ofAuto().allocate(size);\n+        }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    @Param({\"5\", \"20\", \"100\", \"200\"})\n+    @Param({\"5\", \"20\", \"100\", \"200\", \"451\"})\n@@ -100,0 +100,3 @@\n+        while (lorem.length() < size) {\n+            lorem += lorem;\n+        }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToCStringTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    @Param({\"5\", \"20\", \"100\", \"200\"})\n+    @Param({\"5\", \"20\", \"100\", \"200\", \"451\"})\n@@ -61,0 +61,3 @@\n+        while (LOREM.length() < size) {\n+            LOREM += LOREM;\n+        }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToJavaStringTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}