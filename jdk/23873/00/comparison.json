{"files":[{"patch":"@@ -57,2 +57,2 @@\n-    SegmentAllocator arenaAllocator = new RingAllocator(arena);\n-    SlicingPool pool = new SlicingPool();\n+    SegmentAllocator arenaAllocator;\n+    SlicingPool pool;\n@@ -79,0 +79,2 @@\n+        arenaAllocator = new RingAllocator(arena, size + 1);\n+        pool = new SlicingPool(size + 1);\n@@ -145,0 +147,2 @@\n+        while (lorem.length() < size)\n+            lorem += lorem;\n@@ -153,2 +157,2 @@\n-        public RingAllocator(Arena session) {\n-            this.segment = session.allocate(1024, 1);\n+        public RingAllocator(Arena session, int size) {\n+            this.segment = session.allocate(size, 1);\n@@ -176,1 +180,1 @@\n-        final MemorySegment pool = Arena.ofAuto().allocate(1024);\n+        final MemorySegment pool;\n@@ -179,0 +183,4 @@\n+        public SlicingPool(int size) {\n+            this.pool = Arena.ofAuto().allocate(size);\n+        }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+        while (lorem.length() < size) lorem += lorem;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToCStringTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+        while (LOREM.length() < size) LOREM += LOREM;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/ToJavaStringTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}