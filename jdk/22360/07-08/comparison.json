{"files":[{"patch":"@@ -31,0 +31,1 @@\n+#include \"utilities\/rbTree.hpp\"\n@@ -310,0 +311,25 @@\n+  void test_stable_nodes_addresses() {\n+    using Tree = RBTreeCHeap<int, void*, Cmp, mtOther>;\n+    using Node = Tree::RBNode;\n+    Tree rbtree;\n+    for (int i = 0; i < 10000; i++) {\n+      rbtree.upsert(i, nullptr);\n+      Node* inserted_node = rbtree.find_node(rbtree._root, i);\n+      inserted_node->val() = inserted_node;\n+    }\n+\n+    for (int i = 0; i < 2000; i++) {\n+      int r = os::random() % 10000;\n+      Node* to_delete = rbtree.find_node(rbtree._root, r);\n+      if (to_delete != nullptr && to_delete->_left != nullptr &&\n+          to_delete->_right != nullptr) {\n+        rbtree.remove(to_delete);\n+      }\n+    }\n+\n+    \/\/ After deleting, values should have remained consistant\n+    rbtree.visit_in_order([&](Node* node) {\n+      assert(node == node->val(), \"node value must be its own address\");\n+    });\n+  }\n+\n@@ -414,0 +440,4 @@\n+TEST_VM_F(RBTreeTest, NodeStableAddressTest) {\n+  this->test_stable_nodes_addresses();\n+}\n+\n","filename":"test\/hotspot\/gtest\/utilities\/test_rbtree.cpp","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"}]}