{"files":[{"patch":"@@ -274,1 +274,1 @@\n-  void visit_in_order(F f);\n+  void visit_in_order(F f) const;\n@@ -287,1 +287,1 @@\n-template <MemTag mt>\n+template <MemTag mem_tag>\n@@ -291,1 +291,1 @@\n-    void* allocation = os::malloc(sz, mt);\n+    void* allocation = os::malloc(sz, mem_tag);\n@@ -302,2 +302,2 @@\n-template <typename K, typename V, typename COMPARATOR, MemTag mt>\n-using RBTreeCHeap = RBTree<K, V, COMPARATOR, RBTreeCHeapAllocator<mt>>;\n+template <typename K, typename V, typename COMPARATOR, MemTag mem_tag>\n+using RBTreeCHeap = RBTree<K, V, COMPARATOR, RBTreeCHeapAllocator<mem_tag>>;\n","filename":"src\/hotspot\/share\/utilities\/rbTree.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include <utility> \/\/ for std::swap\n@@ -480,1 +481,1 @@\n-inline void RBTree<K, V, COMPARATOR, ALLOCATOR>::visit_in_order(F f) {\n+inline void RBTree<K, V, COMPARATOR, ALLOCATOR>::visit_in_order(F f) const {\n","filename":"src\/hotspot\/share\/utilities\/rbTree.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}