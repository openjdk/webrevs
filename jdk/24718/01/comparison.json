{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -33,0 +34,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -36,1 +39,0 @@\n-import java.nio.file.Files;\n@@ -38,1 +40,0 @@\n-import java.security.cert.CertificateException;\n@@ -69,1 +70,2 @@\n-        File ksFile = File.createTempFile(\"test\", \".test\");\n+        \/\/ temporary files are created in scratch directory\n+        final File ksFile = Utils.createTempFile(\"test\", \".test\").toFile();\n@@ -71,5 +73,4 @@\n-        try {\n-            try (FileOutputStream fos = new FileOutputStream(ksFile)) {\n-                ks.store(fos, pw);\n-                fos.flush();\n-            }\n+        try (FileOutputStream fos = new FileOutputStream(ksFile)) {\n+            ks.store(fos, pw);\n+            fos.flush();\n+        }\n@@ -77,13 +78,12 @@\n-            \/\/ now see if we can get it back\n-            try (FileInputStream fis = new FileInputStream(ksFile)) {\n-                KeyStore ks2 = KeyStore.getInstance(keystoreType);\n-                ks2.load(fis, pw);\n-                KeyStore.Entry entry = ks2.getEntry(ALIAS, kspp);\n-                SecretKey keyIn = ((KeyStore.SecretKeyEntry) entry).getSecretKey();\n-                if (Arrays.equals(key.getEncoded(), keyIn.getEncoded())) {\n-                    System.err.println(\"OK: worked just fine with \" + keystoreType +\n-                            \" keystore\");\n-                } else {\n-                    System.err.println(\"ERROR: keys are NOT equal after storing in \"\n-                            + keystoreType + \" keystore\");\n-                }\n+        \/\/ now see if we can get it back\n+        try (FileInputStream fis = new FileInputStream(ksFile)) {\n+            KeyStore ks2 = KeyStore.getInstance(keystoreType);\n+            ks2.load(fis, pw);\n+            KeyStore.Entry entry = ks2.getEntry(ALIAS, kspp);\n+            SecretKey keyIn = ((KeyStore.SecretKeyEntry) entry).getSecretKey();\n+            if (Arrays.equals(key.getEncoded(), keyIn.getEncoded())) {\n+                System.err.println(\"OK: worked just fine with \" + keystoreType +\n+                                   \" keystore\");\n+            } else {\n+                System.err.println(\"ERROR: keys are NOT equal after storing in \"\n+                                   + keystoreType + \" keystore\");\n@@ -91,2 +91,0 @@\n-        } finally {\n-            Files.deleteIfExists(ksFile.toPath());\n","filename":"test\/jdk\/sun\/security\/pkcs12\/P12SecretKey.java","additions":22,"deletions":24,"binary":false,"changes":46,"status":"modified"}]}