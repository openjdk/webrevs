{"files":[{"patch":"@@ -37,0 +37,12 @@\n+    private static final String ONLY_ALG\n+            = System.getProperty(\"acvp.test.alg\");\n+\n+    private static final Provider PROVIDER;\n+\n+    static {\n+        var provProp = System.getProperty(\"acvp.test.provider\");\n+        PROVIDER = provProp != null\n+                ? Security.getProvider(provProp)\n+                : null;\n+    }\n+\n@@ -46,1 +58,4 @@\n-        \/\/ runs test on them. Only very limited algorithms are supported.\n+        \/\/ runs test on them.\n+        \/\/\n+        \/\/ Set the \"acvp.test.alg\" system property to only test this algorithm.\n+        \/\/\n@@ -64,6 +79,5 @@\n-        var provProp = System.getProperty(\"acvp.test.provider\");\n-        Provider provider = provProp != null\n-                ? Security.getProvider(provProp)\n-                : null;\n-        if (provider != null) {\n-            System.out.println(\"Provider: \" + provProp);\n+        if (PROVIDER != null) {\n+            System.out.println(\"Provider: \" + PROVIDER.getName());\n+        }\n+        if (ONLY_ALG != null) {\n+            System.out.println(\"Algorithm: \" + ONLY_ALG);\n@@ -76,1 +90,1 @@\n-                    .forEach(p -> run(provider, p));\n+                    .forEach(Launcher::run);\n@@ -80,2 +94,1 @@\n-    static void run(Provider provider, Path test) {\n-        System.out.println(\">>> Testing \" + test + \"...\");\n+    static void run(Path test) {\n@@ -87,1 +100,1 @@\n-                System.out.println(\"Warning: cannot parse JSON. Skipped\");\n+                System.out.println(\"Warning: cannot parse \" + test + \". Skipped\");\n@@ -91,0 +104,4 @@\n+            if (ONLY_ALG != null && !alg.equals(ONLY_ALG)) {\n+                return;\n+            }\n+            System.out.println(\">>> Testing \" + test + \"...\");\n@@ -92,2 +109,2 @@\n-                case \"ML-DSA\" -> ML_DSA_Test.run(kat, provider);\n-                case \"ML-KEM\" -> ML_KEM_Test.run(kat, provider);\n+                case \"ML-DSA\" -> ML_DSA_Test.run(kat, PROVIDER);\n+                case \"ML-KEM\" -> ML_KEM_Test.run(kat, PROVIDER);\n@@ -95,1 +112,1 @@\n-                    -> SHA_Test.run(kat, provider);\n+                    -> SHA_Test.run(kat, PROVIDER);\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/Launcher.java","additions":31,"deletions":14,"binary":false,"changes":45,"status":"modified"}]}