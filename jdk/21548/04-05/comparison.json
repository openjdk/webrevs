{"files":[{"patch":"@@ -23,1 +23,0 @@\n-import jdk.test.lib.compiler.CompilerUtils;\n@@ -30,3 +29,0 @@\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n@@ -38,2 +34,0 @@\n- * @build jdk.test.lib.Asserts jdk.test.lib.json.JSONValue\n- * @run main Launcher\n@@ -43,9 +37,0 @@\n-    public interface Test {\n-        \/\/\/ Algorithms (as named in ACVP JSON files) this test supports\n-        List<String> supportedAlgs();\n-        \/\/\/ Runs the KAT with an optional provider\n-        void run(JSONValue kat, Provider p) throws Exception;\n-    }\n-\n-    private static Map<String, Test> tests = new HashMap<>();\n-\n@@ -70,3 +55,1 @@\n-        \/\/ Tests are included in this directory and each must implement\n-        \/\/ the Launcher.Test interface. Tests for each algorithm must be\n-        \/\/ compliant to its specification linked from\n+        \/\/ Tests for each algorithm must be compliant to its specification linked from\n@@ -89,2 +72,0 @@\n-        setup();\n-\n@@ -99,25 +80,0 @@\n-    static void setup() throws Exception {\n-        var srcDir = Path.of(System.getProperty(\"test.src\"));\n-        try (var files = Files.newDirectoryStream(srcDir)) {\n-            for (var file : files) {\n-                var name = file.getFileName().toString();\n-                if (!name.equals(\"Launcher.java\") && name.endsWith(\".java\")) {\n-                    CompilerUtils.compile(file,\n-                            Path.of(System.getProperty(\"test.classes\")),\n-                            \"-cp\",\n-                            System.getProperty(\"test.class.path\"));\n-                    var obj = Class.forName(name.substring(0, name.length() - 5))\n-                            .getConstructor().newInstance();\n-                    if (obj instanceof Test t) {\n-                        for (var alg : t.supportedAlgs()) {\n-                            tests.put(alg, t);\n-                        }\n-                    } else {\n-                        throw new RuntimeException(\n-                                name + \" has not implemented Test\");\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n@@ -135,5 +91,6 @@\n-            var t = tests.get(alg);\n-            if (t != null) {\n-                t.run(kat, provider);\n-            } else {\n-                System.out.println(\"Skipped unsupported algorithm: \" + alg);\n+            switch (alg) {\n+                case \"ML-DSA\" -> ML_DSA_Test.run(kat, provider);\n+                case \"ML-KEM\" -> ML_KEM_Test.run(kat, provider);\n+                case \"SHA2-256\", \"SHA2-224\", \"SHA3-256\", \"SHA3-224\"\n+                    -> SHA_Test.run(kat, provider);\n+                default -> System.out.println(\"Skipped unsupported algorithm: \" + alg);\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/Launcher.java","additions":7,"deletions":50,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.List;\n@@ -34,1 +33,1 @@\n-public class ML_DSA_Test implements Launcher.Test {\n+public class ML_DSA_Test {\n@@ -36,7 +35,1 @@\n-    @Override\n-    public List<String> supportedAlgs() {\n-        return List.of(\"ML-DSA\");\n-    }\n-\n-    @Override\n-    public void run(JSONValue kat, Provider provider) throws Exception {\n+    public static void run(JSONValue kat, Provider provider) throws Exception {\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_DSA_Test.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.List;\n@@ -35,1 +34,1 @@\n-public class ML_KEM_Test implements Launcher.Test {\n+public class ML_KEM_Test {\n@@ -37,7 +36,1 @@\n-    @Override\n-    public List<String> supportedAlgs() {\n-        return List.of(\"ML-KEM\");\n-    }\n-\n-    @Override\n-    public void run(JSONValue kat, Provider provider) throws Exception {\n+    public static void run(JSONValue kat, Provider provider) throws Exception {\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_KEM_Test.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.List;\n@@ -33,1 +32,1 @@\n-public class SHA_Test implements Launcher.Test {\n+public class SHA_Test {\n@@ -35,8 +34,1 @@\n-    @Override\n-    public List<String> supportedAlgs() {\n-        return List.of(\"SHA2-256\", \"SHA2-224\",\n-                \"SHA3-256\", \"SHA3-224\");\n-    }\n-\n-    @Override\n-    public void run(JSONValue kat, Provider provider) throws Exception {\n+    public static void run(JSONValue kat, Provider provider) throws Exception {\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/SHA_Test.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"}]}