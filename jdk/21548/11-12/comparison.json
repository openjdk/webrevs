{"files":[{"patch":"@@ -42,2 +42,2 @@\n-\/\/\/ file names equals to or ending with `internalProjection.json` and\n-\/\/\/ runs test on them.\n+\/\/\/ file names equal to or ending with `internalProjection.json` and\n+\/\/\/ runs tests on them.\n@@ -45,1 +45,1 @@\n-\/\/\/ Set the `test.acvp.alg` test property to only test this algorithm.\n+\/\/\/ Set the `test.acvp.alg` test property to only test the specified algorithm.\n@@ -51,1 +51,1 @@\n-\/\/\/ If you want to test on a specific provider, set the\n+\/\/\/ If you want to test a specific provider, set the\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/Launcher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-            case \"keyGen\" -> mldsaGen(kat, provider);\n-            case \"sigGen\" -> mldsaSign(kat, provider);\n-            case \"sigVer\" -> mldsaVerify(kat, provider);\n+            case \"keyGen\" -> keyGenTest(kat, provider);\n+            case \"sigGen\" -> sigGenTest(kat, provider);\n+            case \"sigVer\" -> sigVerTest(kat, provider);\n@@ -46,1 +46,1 @@\n-    static void mldsaGen(JSONValue kat, Provider p) throws Exception {\n+    static void keyGenTest(JSONValue kat, Provider p) throws Exception {\n@@ -70,1 +70,1 @@\n-    static void mldsaSign(JSONValue kat, Provider p) throws Exception {\n+    static void sigGenTest(JSONValue kat, Provider p) throws Exception {\n@@ -85,1 +85,2 @@\n-                var sr = new FixedSecureRandom(det ? new byte[32] : toByteArray(c.get(\"rnd\").asString()));\n+                var sr = new FixedSecureRandom(\n+                        det ? new byte[32] : toByteArray(c.get(\"rnd\").asString()));\n@@ -89,1 +90,2 @@\n-                Asserts.assertEqualsByteArray(sig, toByteArray(c.get(\"signature\").asString()));\n+                Asserts.assertEqualsByteArray(\n+                        sig, toByteArray(c.get(\"signature\").asString()));\n@@ -95,1 +97,1 @@\n-    static void mldsaVerify(JSONValue kat, Provider p) throws Exception {\n+    static void sigVerTest(JSONValue kat, Provider p) throws Exception {\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_DSA_Test.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-            case \"keyGen\" -> mlkemGen(kat, provider);\n-            case \"encapDecap\" -> mlkemEnc(kat, provider);\n+            case \"keyGen\" -> keyGenTest(kat, provider);\n+            case \"encapDecap\" -> encapDecapTest(kat, provider);\n@@ -46,1 +46,1 @@\n-    static void mlkemGen(JSONValue kat, Provider p) throws Exception {\n+    static void keyGenTest(JSONValue kat, Provider p) throws Exception {\n@@ -71,1 +71,1 @@\n-    static void mlkemEnc(JSONValue kat, Provider p) throws Exception {\n+    static void encapDecapTest(JSONValue kat, Provider p) throws Exception {\n@@ -90,1 +90,2 @@\n-                    Asserts.assertEqualsByteArray(enc.encapsulation(), toByteArray(c.get(\"c\").asString()));\n+                    Asserts.assertEqualsByteArray(\n+                            enc.encapsulation(), toByteArray(c.get(\"c\").asString()));\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_KEM_Test.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-Put JSON files here.\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/data\/README","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"}]}