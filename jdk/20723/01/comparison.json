{"files":[{"patch":"@@ -50,1 +50,2 @@\n-    private static volatile boolean checkmarkFound = false;\n+    private static volatile boolean checkmarkFound = true;\n+    private static final int TOLERANCE = 10;\n@@ -55,0 +56,15 @@\n+        int[][] checkerIndexPattern = {\n+                {0, 3},\n+                {0, 4},\n+                {1, 3},\n+                {1, 4},\n+                {1, 5},\n+                {2, 4},\n+                {2, 5},\n+                {2, 6},\n+                {3, 5},\n+                {3, 6},\n+                {4, 4},\n+                {4, 5}\n+        };\n+\n@@ -61,0 +77,1 @@\n+                frame.setLocationRelativeTo(null);\n@@ -72,8 +89,6 @@\n-                check: {\n-                    for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n-                        for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n-                            if (Color.black.getRGB() == imageAfterChecked.getRGB(i, j)) {\n-                                checkmarkFound = true;\n-                                break check;\n-                            }\n-                        }\n+                for (int i = 0; i < 12; i++) {\n+                    Color pixelColor = new Color(imageAfterChecked.getRGB(\n+                            checkerIndexPattern[i][0], checkerIndexPattern[i][1]));\n+                    if (!compareColor(pixelColor)) {\n+                        checkmarkFound = false;\n+                        break;\n@@ -102,0 +117,6 @@\n+\n+    private static boolean compareColor(Color c) {\n+        return Math.abs(Color.black.getRed() - c.getRed()) < TOLERANCE &&\n+                Math.abs(Color.black.getGreen() - c.getGreen()) < TOLERANCE &&\n+                Math.abs(Color.black.getBlue() - c.getBlue()) < TOLERANCE;\n+    }\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxCheckerScalingTest.java","additions":30,"deletions":9,"binary":false,"changes":39,"status":"modified"}]}