{"files":[{"patch":"@@ -49,2 +49,5 @@\n-    private static BufferedImage imageAfterChecked;\n-    private static volatile boolean checkmarkFound = false;\n+    private static volatile Point point;\n+    private static boolean checkmarkFound = false;\n+    private static final int TOLERANCE = 5;\n+    private static final int COLOR_CHECK_THRESHOLD = 8;\n+    private static int colorCounter = 0;\n@@ -55,0 +58,1 @@\n+\n@@ -57,1 +61,1 @@\n-                frame = new Frame(\"ComboBox checker scaling test\");\n+                frame = new Frame(\"CheckBox checker scaling test\");\n@@ -61,0 +65,1 @@\n+                frame.setLocationRelativeTo(null);\n@@ -67,9 +72,10 @@\n-            EventQueue.invokeAndWait(() -> {\n-                Point point = checkbox.getLocationOnScreen();\n-                Rectangle rect = new Rectangle(point.x + 5, point.y + 7, 8, 8);\n-                imageAfterChecked = robot.createScreenCapture(rect);\n-\n-                check: {\n-                    for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n-                        for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n-                            if (Color.black.getRGB() == imageAfterChecked.getRGB(i, j)) {\n+            EventQueue.invokeAndWait(() -> point = checkbox.getLocationOnScreen());\n+            Rectangle rect = new Rectangle(point.x + 5, point.y + 7, 8, 8);\n+            BufferedImage imageAfterChecked = robot.createScreenCapture(rect);\n+            check:\n+            {\n+                for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n+                    for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n+                        Color pixelColor = new Color(imageAfterChecked.getRGB(i, j));\n+                        if (compareColor(pixelColor)) {\n+                            if (++colorCounter >= COLOR_CHECK_THRESHOLD) {\n@@ -80,0 +86,1 @@\n+\n@@ -82,1 +89,1 @@\n-            });\n+            }\n@@ -102,0 +109,6 @@\n+\n+    private static boolean compareColor(Color c) {\n+        return Math.abs(Color.black.getRed() - c.getRed()) < TOLERANCE &&\n+                Math.abs(Color.black.getGreen() - c.getGreen()) < TOLERANCE &&\n+                Math.abs(Color.black.getBlue() - c.getBlue()) < TOLERANCE;\n+    }\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxCheckerScalingTest.java","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"}]}