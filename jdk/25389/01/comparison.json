{"files":[{"patch":"@@ -2263,8 +2263,4 @@\n-            if (arg_ptn != src_ptn) {\n-              \/\/ Special arraycopy edge:\n-              \/\/ A destination object's field can't have the source object\n-              \/\/ as base since objects escape states are not related.\n-              \/\/ Only escape state of destination object's fields affects\n-              \/\/ escape state of fields in source object.\n-              add_arraycopy(call, es, src_ptn, arg_ptn);\n-            }\n+            \/\/ Special arraycopy edge:\n+            \/\/ Only escape state of destination object's fields affects\n+            \/\/ escape state of fields in source object.\n+            add_arraycopy(call, es, src_ptn, arg_ptn);\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8356989\n+ * @summary Unexpected null in C2 compiled code\n+ * @run main\/othervm -XX:-BackgroundCompilation TestArrayCopySameSrcDstInitializesNonEscapingArray\n+ * @run main TestArrayCopySameSrcDstInitializesNonEscapingArray\n+ *\/\n+\n+ public class TestArrayCopySameSrcDstInitializesNonEscapingArray {\n+    private static volatile int volatileField;\n+\n+    public static void main(String[] args) {\n+        Object obj = new Object();\n+        for (int i = 0; i < 20_000; i++) {\n+            test1(obj);\n+        }\n+    }\n+\n+    private static void test1(Object obj) {\n+        A a = new A();\n+        Object[] array = new Object[2];\n+        array[0] = obj;\n+        a.field = array;\n+        System.arraycopy(array, 0, array, 1, 1);\n+        if (a.field[1] == null) {\n+            throw new RuntimeException(\"Can't be null\");\n+        }\n+    }\n+\n+    private static class A {\n+        Object[] field;\n+\n+        public A() {\n+            field = null;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestArrayCopySameSrcDstInitializesNonEscapingArray.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}