{"files":[{"patch":"@@ -187,0 +187,3 @@\n+        else if (arg instanceof JCDiagnostic.AnnotatedType type) {\n+            preprocessType(type.type());\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/RichDiagnosticFormatter.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,19 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8334757\n+ * @compile\/fail\/ref=CantAnnotateClassWithTypeVariable.out -XDrawDiagnostics CantAnnotateClassWithTypeVariable.java\n+ *\/\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+public class CantAnnotateClassWithTypeVariable {\n+  @Target(ElementType.TYPE_USE)\n+  @interface TA {}\n+\n+  static class A {\n+    static class B<T> {}\n+  }\n+\n+  <T> @TA A.B<T> f() {}\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/CantAnnotateClassWithTypeVariable.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+CantAnnotateClassWithTypeVariable.java:18:14: compiler.err.type.annotation.inadmissible: (compiler.misc.type.annotation.1: @CantAnnotateClassWithTypeVariable.TA), CantAnnotateClassWithTypeVariable.A, @CantAnnotateClassWithTypeVariable.TA CantAnnotateClassWithTypeVariable.A.B<T>\n+1 error\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/CantAnnotateClassWithTypeVariable.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}