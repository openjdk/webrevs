{"files":[{"patch":"@@ -524,8 +524,7 @@\n-        applyIfCPUFeature = {\"avx2\", \"true\"})\n-    \/\/ Does not currently vectorize on aarch64. NOTE: This check does not\n-    \/\/ document the _desired_ behavior of the system but the current behavior\n-    \/\/ (no vectorization)\n-    @IR(counts = { IRNode.ADD_VI,    \"= 0\",\n-                   IRNode.RSHIFT_VI, \"= 0\",\n-                   IRNode.SUB_VI,    \"= 0\" },\n-        applyIfCPUFeature = {\"asimd\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx2\", \"true\", \"sve\", \"true\"})\n+    \/\/ Not vectorized: On aarch64, vectorization for this example results in\n+    \/\/ MulVL nodes, which asimd does not support.\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\",\n+                   IRNode.MUL_L,         \"> 0\" },\n+        applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n@@ -545,8 +544,7 @@\n-        applyIfCPUFeature = {\"avx2\", \"true\"})\n-    \/\/ Does not currently vectorize on aarch64. NOTE: This check does not\n-    \/\/ document the _desired_ behavior of the system but the current behavior\n-    \/\/ (no vectorization)\n-    @IR(counts = { IRNode.ADD_VI,    \"= 0\",\n-                   IRNode.RSHIFT_VI, \"= 0\",\n-                   IRNode.SUB_VI,    \"= 0\" },\n-        applyIfCPUFeature = {\"asimd\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx2\", \"true\", \"sve\", \"true\"})\n+    \/\/ Not vectorized: On aarch64, vectorization for this example results in\n+    \/\/ MulVL nodes, which asimd does not support.\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\",\n+                   IRNode.MUL_L,         \"> 0\" },\n+        applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr7200264\/TestIntVect.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"}]}