{"files":[{"patch":"@@ -53,8 +53,10 @@\n-           \"test_addc\", \"test_addv\", \"test_adda\", \"test_subc\", \"test_subv\",\n-           \"test_suba\", \"test_mulc\", \"test_mulc_n\", \"test_mulv\", \"test_mula\",\n-           \"test_divc\", \"test_divc_n\", \"test_andc\", \"test_andv\", \"test_anda\",\n-           \"test_orc\", \"test_orv\", \"test_ora\", \"test_xorc\", \"test_xorv\",\n-           \"test_xora\", \"test_sllc\", \"test_sllc_n\", \"test_sllc_o\",\n-           \"test_sllc_on\", \"test_sllv\", \"test_srlc\", \"test_srlc_n\",\n-           \"test_srlc_o\", \"test_srlc_on\", \"test_srlv\", \"test_srac\",\n-           \"test_srac_n\", \"test_srac_o\", \"test_srac_on\", \"test_srav\"\n+           \"test_sum\", \"test_addc\", \"test_addv\", \"test_adda\", \"test_subc\",\n+           \"test_subv\", \"test_suba\", \"test_mulc\", \"test_mulc_n\", \"test_mulv\",\n+           \"test_mula\", \"test_divc\", \"test_divc_n\", \"test_divv\", \"test_diva\",\n+           \"test_andc\", \"test_andv\", \"test_anda\", \"test_orc\", \"test_orv\",\n+           \"test_ora\", \"test_xorc\", \"test_xorv\", \"test_xora\", \"test_sllc\",\n+           \"test_sllc_n\", \"test_sllc_o\", \"test_sllc_on\", \"test_sllv\",\n+           \"test_srlc\", \"test_srlc_n\", \"test_srlc_o\", \"test_srlc_on\",\n+           \"test_srlv\", \"test_srac\", \"test_srac_n\", \"test_srac_o\",\n+           \"test_srac_on\", \"test_srav\", \"test_pack2\", \"test_unpack2\",\n+           \"test_pack2_swap\", \"test_unpack2_swap\"\n@@ -411,1 +413,6 @@\n-    \/\/ Not vectorized: simple addition not profitable, see JDK-8307516.\n+    \/\/ Not vectorized: simple addition not profitable, see JDK-8307516. NOTE:\n+    \/\/ This check does not document the _desired_ behavior of the system but\n+    \/\/ the current behavior (no vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -511,3 +518,6 @@\n-    @IR(counts = { IRNode.ADD_VI,    \"> 0\",\n-                   IRNode.RSHIFT_VI, \"> 0\",\n-                   IRNode.SUB_VI,    \"> 0\" },\n+    @IR(counts = { IRNode.ADD_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\",\n+                   IRNode.RSHIFT_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\",\n+                   IRNode.SUB_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\" },\n@@ -522,3 +532,6 @@\n-    @IR(counts = { IRNode.ADD_VI,    \"> 0\",\n-                   IRNode.RSHIFT_VI, \"> 0\",\n-                   IRNode.SUB_VI,    \"> 0\" },\n+    @IR(counts = { IRNode.ADD_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\",\n+                   IRNode.RSHIFT_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\",\n+                   IRNode.SUB_VI,\n+                   IRNode.VECTOR_SIZE + \"min(max_int, max_long)\", \"> 0\" },\n@@ -532,1 +545,6 @@\n-    \/\/ Not vectorized: no vector div.\n+    \/\/ Not vectorized: no vector div. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -539,1 +557,6 @@\n-    \/\/ Not vectorized: no vector div.\n+    \/\/ Not vectorized: no vector div. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -645,0 +668,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -656,0 +680,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -694,0 +719,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -705,0 +731,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -743,0 +770,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -754,0 +782,1 @@\n+    \/\/ Vector shift not expected as shift is a NOP.\n@@ -774,1 +803,6 @@\n-    \/\/ Not vectorized currently\n+    \/\/ Not vectorized currently. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -784,1 +818,6 @@\n-    \/\/ Not vectorized currently\n+    \/\/ Not vectorized currently. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -794,1 +833,6 @@\n-    \/\/ Not vectorized currently\n+    \/\/ Not vectorized currently. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n@@ -804,1 +848,6 @@\n-    \/\/ Not vectorized currently\n+    \/\/ Not vectorized currently. NOTE: This check does not document the\n+    \/\/ _desired_ behavior of the system but the current behavior (no\n+    \/\/ vectorization)\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR_I, \"= 0\",\n+                   IRNode.STORE_VECTOR,  \"= 0\" })\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr7200264\/TestIntVect.java","additions":70,"deletions":21,"binary":false,"changes":91,"status":"modified"}]}