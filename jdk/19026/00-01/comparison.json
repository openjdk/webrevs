{"files":[{"patch":"@@ -119,1 +119,1 @@\n-  const VMReg vm_reg = r->as_VMReg();\n+  VMReg vm_reg = r->as_VMReg();\n@@ -121,12 +121,6 @@\n-  OptoReg::Name reg = OptoReg::as_OptoReg(vm_reg);\n-  \/\/ Subtract not only reg, but also all related OptoRegs that are sub-registers\n-  \/\/ of the same general-purpose, processor register (e.g. {R11, R11_H} for r11\n-  \/\/ in aarch64). We assume that all related OptoRegs have contiguous indices.\n-  while (OptoReg::is_reg(reg)) {\n-    const VMReg vm_reg = OptoReg::as_VMReg(reg);\n-    if (!(vm_reg->is_Register()) || vm_reg->as_Register() != r) {\n-      break;\n-    }\n-    _preserve.Remove(reg);\n-    reg = OptoReg::add(reg, 1);\n-  }\n+  \/\/ Subtract the given register and all its sub-registers (e.g. {R11, R11_H}\n+  \/\/ for r11 in aarch64).\n+  do {\n+    _preserve.Remove(OptoReg::as_OptoReg(vm_reg));\n+    vm_reg = vm_reg->next();\n+  } while (vm_reg->is_Register() && !vm_reg->is_concrete());\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"}]}