{"files":[{"patch":"@@ -190,0 +190,12 @@\n+void Assembler::prfm(const Address &adr, prfop pfop) {\n+  if (adr.getMode() == Address::literal) {\n+    starti;\n+    f(0b11, 31, 30), f(0b011, 29, 27), f(0b000, 26, 24);\n+    f(pfop, 4, 0);\n+    int64_t offset = (adr.target() - pc()) >> 2;\n+    sf(offset, 23, 5);\n+  } else {\n+    ld_st2(as_Register(pfop), adr, 0b11, 0b10);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -800,0 +800,2 @@\n+  void prfm(const Address &adr, prfop pfop = PLDL1KEEP);\n+\n@@ -1577,11 +1579,0 @@\n-#define INSN(NAME, size, op)                                    \\\n-  void NAME(const Address &adr, prfop pfop = PLDL1KEEP) {       \\\n-    ld_st2(as_Register(pfop), adr, size, op);                   \\\n-  }\n-\n-  INSN(prfm, 0b11, 0b10); \/\/ FIXME: PRFM should not be used with\n-                          \/\/ writeback modes, but the assembler\n-                          \/\/ doesn't enfore that.\n-\n-#undef INSN\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}