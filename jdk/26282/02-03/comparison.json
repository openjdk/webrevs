{"files":[{"patch":"@@ -24,4 +24,0 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n-\n@@ -39,0 +35,4 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n@@ -137,1 +137,1 @@\n-    void testGetChars_range(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsRange(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -144,0 +144,15 @@\n+        \/\/ test that calling getChars did not move the position\n+        assertEquals(expected[start], actual.charAt(0), \"first char after calling getChars: \" + description);\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetCharsAll(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[stop - start];\n+        actual.getChars(0, val.length, val, 0);\n+\n+        for (int i = 0; i < val.length; ++i) {\n+            assertEquals(expected[i + start], val[i], \"val at offset of \" + i + \" from \" + description);\n+        }\n+        \/\/ test that calling getChars did not move the position\n+        assertEquals(expected[start], actual.charAt(0), \"first char after calling getChars: \" + description);\n@@ -148,1 +163,1 @@\n-    void testGetChars_neg_beg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsNegativeSourceBeg(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -155,1 +170,1 @@\n-    void testGetChars_neg_end(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsNegativeSourceEnd(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -162,1 +177,1 @@\n-    void testGetChars_end_before_beg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsSourceEndBeforeBeg(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -169,1 +184,1 @@\n-    void testGetChars_dst_pos_neg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsNegativeDestBeg(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -176,1 +191,1 @@\n-    void testGetChars_dst_pos_oob(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsDestBegOOB(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -183,1 +198,1 @@\n-    void testGetChars_dst_length_oob(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testGetCharsDestLengthOOB(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -198,1 +213,1 @@\n-    void testCharAt_negative(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testCharAtNegativePos(CharSequence actual, char[] expected, int start, int stop, String description) {\n@@ -204,1 +219,1 @@\n-    void testCharAt_too_long(CharSequence actual, char[] expected, int start, int stop, String description) {\n+    void testCharAtPosOOB(CharSequence actual, char[] expected, int start, int stop, String description) {\n","filename":"test\/jdk\/java\/nio\/Buffer\/CharBufferAsCharSequenceTest.java","additions":28,"deletions":13,"binary":false,"changes":41,"status":"modified"}]}