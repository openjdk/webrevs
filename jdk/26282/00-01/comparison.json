{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -107,0 +108,42 @@\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_neg_beg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(-1, 4, val, 1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_neg_end(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(0, -4, val, 1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_end_before_beg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(3, 2, val, 1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_dst_pos_neg(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(1, 3, val, -1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_dst_pos_oob(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(1, 4, val, val.length + 1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testGetChars_dst_length_oob(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        char[] val = new char[16];\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.getChars(1, 4, val, val.length - 2));\n+    }\n+\n@@ -115,0 +158,12 @@\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testCharAt_negative(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.charAt(-1));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"charBufferArguments\")\n+    void testCharAt_too_long(CharSequence actual, char[] expected, int start, int stop, String description) {\n+        assertThrows(IndexOutOfBoundsException.class, () -> actual.charAt(stop - start + 1));\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/Buffer\/CharBufferAsCharSequenceTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}