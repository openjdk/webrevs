{"files":[{"patch":"@@ -164,1 +164,1 @@\n-  product(size_t, G1ShrinkByPercentOfAvailable, 50, EXPERIMENTAL,           \\\n+  product(uint, G1ShrinkByPercentOfAvailable, 50, EXPERIMENTAL,           \\\n@@ -168,1 +168,1 @@\n-  product(size_t, G1MinimumPercentOfGCTimeRatio, 25, EXPERIMENTAL,          \\\n+  product(uint, G1MinimumPercentOfGCTimeRatio, 25, EXPERIMENTAL,          \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,8 +35,0 @@\n-void AbsSeq::reset() {\n-  _num = 0;\n-  _sum = 0.0;\n-  _sum_of_squares = 0.0;\n-  _davg = 0.0;\n-  _dvariance = 0.0;\n-}\n-\n@@ -148,1 +140,1 @@\n-TruncatedSeq::TruncatedSeq(uint length, double alpha):\n+TruncatedSeq::TruncatedSeq(int length, double alpha):\n@@ -151,1 +143,2 @@\n-  TruncatedSeq::reset();\n+  for (int i = 0; i < _length; ++i)\n+    _sequence[i] = 0.0;\n@@ -187,1 +180,1 @@\n-  for (uint i = 1; i < _num; ++i) {\n+  for (int i = 1; i < _num; ++i) {\n@@ -234,1 +227,1 @@\n-  for (uint i = 0; i < _num; ++i) {\n+  for (int i = 0; i < _num; ++i) {\n@@ -254,7 +247,0 @@\n-void TruncatedSeq::reset() {\n-  AbsSeq::reset();\n-  for (uint i = 0; i < _length; ++i) {\n-    _sequence[i] = 0.0;\n-  }\n-  _next = 0;\n-}\n@@ -281,1 +267,1 @@\n-  for (uint i = 0; i < _length; i++) {\n+  for (int i = 0; i < _length; i++) {\n","filename":"src\/hotspot\/share\/utilities\/numberSeq.cpp","additions":6,"deletions":20,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  uint    _num; \/\/ the number of elements in the sequence\n+  int    _num; \/\/ the number of elements in the sequence\n@@ -65,1 +65,0 @@\n-  virtual void reset();\n@@ -110,1 +109,1 @@\n-  enum PrivateConstants : uint {\n+  enum PrivateConstants {\n@@ -116,1 +115,1 @@\n-  uint    _length; \/\/ this is L\n+  int     _length; \/\/ this is L\n@@ -121,1 +120,1 @@\n-  TruncatedSeq(uint length = DefaultSeqLength,\n+  TruncatedSeq(int length = DefaultSeqLength,\n@@ -131,2 +130,0 @@\n-  virtual void reset();\n-  bool is_full() const { return _length == _num; }\n","filename":"src\/hotspot\/share\/utilities\/numberSeq.hpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}