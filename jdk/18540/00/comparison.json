{"files":[{"patch":"@@ -122,1 +122,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+      write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -125,1 +125,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n@@ -383,0 +383,14 @@\n+void JvmtiClassFileReconstituter::write_annotations_attribute(const char* attr_name,\n+                                                              const char* fallback_attr_name,\n+                                                              AnnotationArray* annos) {\n+  TempNewSymbol sym = SymbolTable::probe(attr_name, (int)strlen(attr_name));\n+  if (sym != nullptr) {\n+    if (symbol_to_cpool_index(sym) != 0) {\n+      write_annotations_attribute(attr_name, annos);\n+      return;\n+    }\n+  }\n+  \/\/ use fallback name\n+  write_annotations_attribute(fallback_attr_name, annos);\n+}\n+\n@@ -522,1 +536,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleAnnotations\", component->annotations());\n+      write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", component->annotations());\n@@ -525,1 +539,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", component->type_annotations());\n+      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", component->type_annotations());\n@@ -764,1 +778,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+    write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -767,1 +781,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleParameterAnnotations\", param_anno);\n+    write_annotations_attribute(\"RuntimeVisibleParameterAnnotations\", \"RuntimeInvisibleParameterAnnotations\", param_anno);\n@@ -770,1 +784,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n@@ -830,1 +844,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+    write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -833,1 +847,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,7 @@\n+  \/\/ With PreserveAllAnnotations option \"runtime invisible\" annotations\n+  \/\/ (RuntimeInvisibleAnnotations\/RuntimeInvisibleTypeAnnotations\/RuntimeInvisibleParameterAnnotations)\n+  \/\/ are considered \"runtime visible\" and ClassFileReconstituter writes them as\n+  \/\/ RuntimeVisibleAnnotations\/RuntimeVisibleTypeAnnotations\/RuntimeVisibleParameterAnnotations.\n+  \/\/ This helper method is for the corner case when \"runtime visible\" attribute name is not presents\n+  \/\/ in the class constant pool and the annotations are written with fallback \"runtime invisible\" name.\n+  void write_annotations_attribute(const char* attr_name, const char* fallback_attr_name, AnnotationArray* annos);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8315575\n+ * @bug 8315575 8328137\n@@ -32,0 +32,1 @@\n+ * @run main\/othervm -javaagent:retransformAgent.jar -XX:+PreserveAllAnnotations -Xlog:redefine+class=trace RetransformRecordAnnotation\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformRecordAnnotation.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}