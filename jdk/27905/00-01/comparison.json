{"files":[{"patch":"@@ -529,1 +529,1 @@\n-    public BufferedImage copyArea(SunGraphics2D sg2d, int x, int y, int w, int h, BufferedImage dstImage) {\n+    public synchronized BufferedImage copyArea(SunGraphics2D sg2d, int x, int y, int w, int h, BufferedImage dstImage) {\n@@ -544,1 +544,1 @@\n-    public boolean xorSurfacePixels(SunGraphics2D sg2d, BufferedImage srcPixels, int x, int y, int w, int h, int colorXOR) {\n+    public synchronized boolean xorSurfacePixels(SunGraphics2D sg2d, BufferedImage srcPixels, int x, int y, int w, int h, int colorXOR) {\n@@ -556,1 +556,1 @@\n-    public void clearRect(BufferedImage bim, int w, int h) {\n+    public synchronized void clearRect(BufferedImage bim, int w, int h) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/OSXOffScreenSurfaceData.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -986,1 +986,1 @@\n-    public void doLine(CRenderer renderer, SunGraphics2D sg2d, float x1, float y1, float x2, float y2) {\n+    public synchronized void doLine(CRenderer renderer, SunGraphics2D sg2d, float x1, float y1, float x2, float y2) {\n@@ -992,1 +992,1 @@\n-    public void doRect(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, boolean isfill) {\n+    public synchronized void doRect(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, boolean isfill) {\n@@ -1002,1 +1002,1 @@\n-    public void doRoundRect(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, float arcW, float arcH, boolean isfill) {\n+    public synchronized void doRoundRect(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, float arcW, float arcH, boolean isfill) {\n@@ -1012,1 +1012,1 @@\n-    public void doOval(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, boolean isfill) {\n+    public synchronized void doOval(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, boolean isfill) {\n@@ -1022,1 +1022,1 @@\n-    public void doArc(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, float startAngle, float arcAngle, int type, boolean isfill) {\n+    public synchronized void doArc(CRenderer renderer, SunGraphics2D sg2d, float x, float y, float width, float height, float startAngle, float arcAngle, int type, boolean isfill) {\n@@ -1033,1 +1033,1 @@\n-    public void doPolygon(CRenderer renderer, SunGraphics2D sg2d, int[] xpoints, int[] ypoints, int npoints, boolean ispolygon, boolean isfill) {\n+    public synchronized void doPolygon(CRenderer renderer, SunGraphics2D sg2d, int[] xpoints, int[] ypoints, int npoints, boolean ispolygon, boolean isfill) {\n@@ -1066,1 +1066,1 @@\n-    public void drawfillShape(CRenderer renderer, SunGraphics2D sg2d, GeneralPath gp, boolean isfill, boolean shouldApplyOffset) {\n+    public synchronized void drawfillShape(CRenderer renderer, SunGraphics2D sg2d, GeneralPath gp, boolean isfill, boolean shouldApplyOffset) {\n@@ -1091,1 +1091,1 @@\n-    public void blitImage(CRenderer renderer, SunGraphics2D sg2d, SurfaceData img, boolean fliph, boolean flipv, int sx, int sy, int sw, int sh, int dx, int dy, int dw, int dh, Color bgColor) {\n+    public synchronized void blitImage(CRenderer renderer, SunGraphics2D sg2d, SurfaceData img, boolean fliph, boolean flipv, int sx, int sy, int sw, int sh, int dx, int dy, int dw, int dh, Color bgColor) {\n@@ -1114,1 +1114,1 @@\n-    public void drawString(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, String str, double x, double y) {\n+    public synchronized void drawString(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, String str, double x, double y) {\n@@ -1123,1 +1123,1 @@\n-    public void drawGlyphs(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, GlyphVector gv, float x, float y) {\n+    public synchronized void drawGlyphs(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, GlyphVector gv, float x, float y) {\n@@ -1129,1 +1129,1 @@\n-    public void drawUnicodes(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, char[] unicodes, int offset, int length, float x, float y) {\n+    public synchronized void drawUnicodes(CTextPipe renderer, SunGraphics2D sg2d, long nativeStrikePtr, char[] unicodes, int offset, int length, float x, float y) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/OSXSurfaceData.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -833,3 +833,5 @@\n-                delegate.surfaceData.invalidate();\n-                delegate.dispose();\n-                delegate = null;\n+                synchronized (sd) {\n+                    sd.invalidate();\n+                    delegate.dispose();\n+                    delegate = null;\n+                }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.awt.Graphics;\n@@ -35,0 +36,2 @@\n+import java.awt.JobAttributes.DialogType;\n+import java.awt.JobAttributes.DestinationType;\n@@ -37,2 +40,2 @@\n-import java.awt.Graphics;\n-import java.awt.JobAttributes.DialogType;\n+import java.awt.Toolkit;\n+import java.util.concurrent.CountDownLatch;\n@@ -42,1 +45,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -46,0 +49,3 @@\n+        jobAttributes.setDestination(DestinationType.FILE);\n+        jobAttributes.setFileName(\"out.prn\");\n+\n@@ -49,7 +55,47 @@\n-        PrintJob job = f.getToolkit().getPrintJob(f, \"Portrait Test\", jobAttributes,\n-                                          pageAttributes);\n-        if (job != null) {\n-            Graphics g = job.getGraphics();\n-            job.end();\n-            g.drawLine(0, 200, 200, 200);\n-            g.dispose();\n+        Toolkit tk = f.getToolkit();\n+\n+        for (int i = 0; i < 500; i++) {\n+            PrintJob job = tk.getPrintJob(f, \"Print Crash Test\", jobAttributes, pageAttributes);\n+            if (job != null) {\n+                Graphics g = job.getGraphics();\n+                CountDownLatch latch = new CountDownLatch(1);\n+\n+                Thread endThread = new Thread(() -> {\n+                    try {\n+                        latch.await();\n+                        job.end();\n+                    } catch (Throwable t) {\n+                        t.printStackTrace();\n+                    }\n+                });\n+\n+                Thread drawThread = new Thread(() -> {\n+                    try {\n+                        latch.await();\n+                        g.clearRect(10, 10, 100, 100);\n+                        g.drawRect(0, 300, 200, 400);\n+                        g.fillRect(0, 300, 200, 400);\n+                        g.drawLine(0, 100, 200, 100);\n+                        g.drawString(\"Hello\", 200, 200);\n+                        g.drawOval(200, 200, 200, 200);\n+                        int[] pts = new int[] { 10, 200, 100 };\n+                        g.drawPolyline(pts, pts, pts.length);\n+                        g.drawPolygon(pts, pts, pts.length);\n+                        g.fillPolygon(pts, pts, pts.length);\n+                    } catch (Throwable t) {\n+                        t.printStackTrace();\n+                    }\n+                });\n+\n+                if ( i % 2 == 0) {\n+                    drawThread.start();\n+                    endThread.start();\n+                } else {\n+                    endThread.start();\n+                    drawThread.start();\n+                }\n+                latch.countDown();\n+\n+                endThread.join();\n+                drawThread.join();\n+            }\n","filename":"test\/jdk\/java\/awt\/PrintJob\/PrintJobAfterEndTest.java","additions":56,"deletions":10,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -39,0 +39,4 @@\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.standard.Destination;\n+import java.io.File;\n+import java.util.concurrent.CountDownLatch;\n@@ -42,2 +46,2 @@\n-    static volatile Graphics peekgraphics;\n-    static volatile Graphics pathgraphics;\n+    volatile Graphics peekgraphics;\n+    volatile Graphics pathgraphics;\n@@ -45,1 +49,1 @@\n-    public static void main(String args[]) throws PrinterException {\n+    public static void main(String args[]) throws Exception {\n@@ -47,0 +51,7 @@\n+        for (int i = 0; i < 500; i++) {\n+            PrintAfterEndTest paet = new PrintAfterEndTest();\n+            paet.print();\n+        }\n+    }\n+\n+    void print() throws Exception {\n@@ -48,2 +59,12 @@\n-        pjob.setPrintable(new PrintAfterEndTest());\n-        pjob.print();\n+        if (pjob == null || pjob.getPrintService() == null) {\n+            System.out.println(\"Unable to create a PrintJob\");\n+            return;\n+        }\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+        HashPrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();\n+        File file = new File(\"out.prn\");\n+        Destination destination = new Destination(file.toURI());\n+        aset.add(destination);\n+        pjob.setPrintable(this);\n+        pjob.print(aset);\n@@ -51,0 +72,8 @@\n+        DrawRunnable tpeek = new DrawRunnable(peekgraphics, latch);\n+        DrawRunnable tpath = new DrawRunnable(pathgraphics, latch);\n+        tpeek.start();\n+        tpath.start();\n+        latch.countDown();\n+        tpeek.join();\n+        tpath.join();\n+   }\n@@ -52,2 +81,1 @@\n-        System.out.println(\"PeekGraphics= \" + peekgraphics);\n-        System.out.println(\"PathGraphics= \" + pathgraphics);\n+    static class DrawRunnable extends Thread {\n@@ -55,4 +83,5 @@\n-        if (peekgraphics != null) {\n-            peekgraphics.drawString(\"random string\", 200, 200);\n-            peekgraphics.drawLine(100, 100, 300, 300);\n-            peekgraphics.dispose();\n+        Graphics g;\n+        CountDownLatch latch;\n+        DrawRunnable(Graphics g, CountDownLatch latch) {\n+            this.g = g;\n+            this.latch = latch;\n@@ -60,4 +89,20 @@\n-        if (pathgraphics != null) {\n-            pathgraphics.drawString(\"random string\", 200, 200);\n-            pathgraphics.drawLine(100, 100, 300, 300);\n-            pathgraphics.dispose();\n+\n+        public void run() {\n+            if (g == null) {\n+                return;\n+            }\n+            try {\n+                latch.await();\n+                g.clearRect(10, 10, 100, 100);\n+                g.drawRect(0, 300, 200, 400);\n+                g.fillRect(0, 300, 200, 400);\n+                g.drawLine(0, 100, 200, 100);\n+                g.drawString(\"Hello\", 200, 200);\n+                g.drawOval(200, 200, 200, 200);\n+                int[] pts = new int[] { 10, 200, 100 };\n+                g.drawPolyline(pts, pts, pts.length);\n+                g.drawPolygon(pts, pts, pts.length);\n+                g.fillPolygon(pts, pts, pts.length);\n+                g.dispose();\n+            } catch (Throwable t) {\n+            }\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintAfterEndTest.java","additions":60,"deletions":15,"binary":false,"changes":75,"status":"modified"}]}