{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -3746,1 +3746,1 @@\n-     * Return a lazily populated {@code Stream}, the elements of\n+     * Returns a lazily populated {@code Stream}, the elements of\n@@ -3837,1 +3837,1 @@\n-     * Return a {@code Stream} that is lazily populated with {@code\n+     * Returns a {@code Stream} that is lazily populated with {@code\n@@ -3839,3 +3839,4 @@\n-     * file tree is traversed <em>depth-first<\/em>, the elements in the stream\n-     * are {@link Path} objects that are obtained as if by {@link\n-     * Path#resolve(Path) resolving} the relative path against {@code start}.\n+     * file tree is traversed in <em>pre-order<\/em>, <em>depth-first<\/em>\n+     * fashion, the elements in the stream are {@link Path} objects that are\n+     * obtained as if by {@link Path#resolve(Path) resolving} the relative\n+     * path against {@code start}.\n@@ -3936,1 +3937,1 @@\n-     * Return a {@code Stream} that is lazily populated with {@code\n+     * Returns a {@code Stream} that is lazily populated with {@code\n@@ -3938,3 +3939,4 @@\n-     * file tree is traversed <em>depth-first<\/em>, the elements in the stream\n-     * are {@link Path} objects that are obtained as if by {@link\n-     * Path#resolve(Path) resolving} the relative path against {@code start}.\n+     * file tree is traversed in <em>pre-order<\/em>, <em>depth-first<\/em>\n+     * fashion, the elements in the stream are {@link Path} objects that are\n+     * obtained as if by {@link Path#resolve(Path) resolving} the relative\n+     * path against {@code start}.\n@@ -3981,1 +3983,1 @@\n-     * Return a {@code Stream} that is lazily populated with {@code\n+     * Returns a {@code Stream} that is lazily populated with {@code\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-    static Path[] all_folowLinks;\n+    static Path[] all_followLinks;\n@@ -133,1 +133,1 @@\n-        all_folowLinks = set.toArray(new Path[0]);\n+        all_followLinks = set.toArray(new Path[0]);\n@@ -182,1 +182,1 @@\n-            assertEquals(actual, all_folowLinks);\n+            assertEquals(actual, all_followLinks);\n","filename":"test\/jdk\/java\/nio\/file\/Files\/StreamTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}