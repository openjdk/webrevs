{"files":[{"patch":"@@ -106,4 +106,0 @@\n-  bool all_controllers_read_only = true;\n-  for (int n = 0; n < CG_INFO_LENGTH && all_controllers_read_only; n++) {\n-    all_controllers_read_only &= cg_infos[n]._read_only;\n-  }\n@@ -114,1 +110,1 @@\n-        memory = new CgroupV1MemoryController(CgroupV1Controller(info._root_mount_path, info._mount_path, all_controllers_read_only));\n+        memory = new CgroupV1MemoryController(CgroupV1Controller(info._root_mount_path, info._mount_path, info._read_only));\n@@ -117,1 +113,1 @@\n-        cpuset = new CgroupV1Controller(info._root_mount_path, info._mount_path, all_controllers_read_only);\n+        cpuset = new CgroupV1Controller(info._root_mount_path, info._mount_path, info._read_only);\n@@ -120,1 +116,1 @@\n-        cpu = new CgroupV1CpuController(CgroupV1Controller(info._root_mount_path, info._mount_path, all_controllers_read_only));\n+        cpu = new CgroupV1CpuController(CgroupV1Controller(info._root_mount_path, info._mount_path, info._read_only));\n@@ -123,1 +119,1 @@\n-        cpuacct = new CgroupV1Controller(info._root_mount_path, info._mount_path, all_controllers_read_only);\n+        cpuacct = new CgroupV1Controller(info._root_mount_path, info._mount_path, info._read_only);\n@@ -126,1 +122,1 @@\n-        pids = new CgroupV1Controller(info._root_mount_path, info._mount_path, all_controllers_read_only);\n+        pids = new CgroupV1Controller(info._root_mount_path, info._mount_path, info._read_only);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    if (strcmp(_root, \"\/\") == 0 || !is_read_only()) {\n+    if (strcmp(_root, \"\/\") == 0) {\n@@ -212,1 +212,0 @@\n-  \/\/ (all v1 controllers are initialized with a single combined read-only flag)\n@@ -214,1 +213,4 @@\n-  return _memory->controller()->is_read_only();\n+  return _memory->controller()->is_read_only() &&\n+         _cpu->controller()->is_read_only() &&\n+         _cpuacct->is_read_only() &&\n+         _cpuset->is_read_only();\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    private String mountOptions;\n@@ -80,8 +79,0 @@\n-    public String getMountOptions() {\n-        return mountOptions;\n-    }\n-\n-    public void setMountOptions(String mountOptions) {\n-        this.mountOptions = mountOptions;\n-    }\n-\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupInfo.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -78,3 +78,2 @@\n-        \"([^\\\\s]+)\\\\s+\" +                      \/\/ (6)          - group 3: mount options\n-        \"[^-]*-\\\\s+\" +                         \/\/ (7), (8)\n-        \"([^\\\\s]+)\\\\s+\" +                      \/\/ (9)          - group 4: filesystem type\n+        \"[^-]+-\\\\s+\" +                         \/\/ (6), (7), (8)\n+        \"([^\\\\s]+)\\\\s+\" +                      \/\/ (9)          - group 3: filesystem type\n@@ -313,2 +312,1 @@\n-            String mountOptions = lineMatcher.group(3);\n-            String fsType = lineMatcher.group(4);\n+            String fsType = lineMatcher.group(3);\n@@ -327,1 +325,1 @@\n-                            setMountPoints(info, mountPath, mountRoot, mountOptions);\n+                            setMountPoints(info, mountPath, mountRoot);\n@@ -341,1 +339,1 @@\n-                        setMountPoints(info, mountPath, mountRoot, mountOptions);\n+                        setMountPoints(info, mountPath, mountRoot);\n@@ -350,1 +348,1 @@\n-    private static void setMountPoints(CgroupInfo info, String mountPath, String mountRoot, String mountOptions) {\n+    private static void setMountPoints(CgroupInfo info, String mountPath, String mountRoot) {\n@@ -364,1 +362,0 @@\n-        info.setMountOptions(mountOptions);\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-    public CgroupV1MemorySubSystemController(String root, String mountPoint, boolean isContainerized) {\n-        super(root, mountPoint, isContainerized);\n+    public CgroupV1MemorySubSystemController(String root, String mountPoint) {\n+        super(root, mountPoint);\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1MemorySubSystemController.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,18 +75,0 @@\n-        boolean allControllersReadOnly = true;\n-\n-        for (CgroupInfo info: infos.values()) {\n-            String mo = info.getMountOptions();\n-            boolean readOnly = false;\n-            if (mo != null) {\n-                for (String o : mo.split(\",\")) {\n-                    if (o.equals(\"ro\")) {\n-                        readOnly = true;\n-                        break;\n-                    }\n-                }\n-            }\n-            if (!readOnly) {\n-                allControllersReadOnly = false;\n-                break;\n-            }\n-        }\n@@ -101,1 +83,1 @@\n-                    CgroupV1MemorySubSystemController controller = new CgroupV1MemorySubSystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1MemorySubSystemController controller = new CgroupV1MemorySubSystemController(info.getMountRoot(), info.getMountPoint());\n@@ -114,1 +96,1 @@\n-                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n@@ -123,1 +105,1 @@\n-                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n@@ -132,1 +114,1 @@\n-                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n@@ -141,1 +123,1 @@\n-                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n@@ -150,1 +132,1 @@\n-                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint(), allControllersReadOnly);\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-\n@@ -41,1 +40,0 @@\n-    boolean isContainerized = false;\n@@ -43,1 +41,1 @@\n-    public CgroupV1SubsystemController(String root, String mountPoint, boolean isContainerized) {\n+    public CgroupV1SubsystemController(String root, String mountPoint) {\n@@ -46,1 +44,0 @@\n-        this.isContainerized = isContainerized;\n@@ -52,1 +49,1 @@\n-            if (root.equals(\"\/\") || !isContainerized) {\n+            if (root.equals(\"\/\")) {\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1SubsystemController.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-  bool read_only;\n@@ -430,2 +429,1 @@\n-    \"\/sys\/fs\/cgroup\/memory\/user.slice\/user-1000.slice\/user@1000.service\",\/\/ expected_path\n-    false                                                                \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\/memory\/user.slice\/user-1000.slice\/user@1000.service\" \/\/ expected_path\n@@ -437,9 +435,1 @@\n-    \"\/sys\/fs\/cgroup\/mem\",                            \/\/ expected_path\n-    true                                             \/\/ read-only mount\n-  };\n-  TestCase host_non_standard = {\n-    \"\/sys\/fs\/cgroup\/mem\",                                              \/\/ mount_path\n-    \"\/user.slice\/user-1000.slice\",                                     \/\/ root_path\n-    \"\/user.slice\/user-1000.slice\/user@1000.service\",                   \/\/ cgroup_path\n-    \"\/sys\/fs\/cgroup\/mem\/user.slice\/user-1000.slice\/user@1000.service\", \/\/ expected_path\n-    false                                                              \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\/mem\"                             \/\/ expected_path\n@@ -451,2 +441,1 @@\n-    \"\/sys\/fs\/cgroup\/cpu,cpuacct\",                                            \/\/ expected_path\n-    true                                                                     \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\/cpu,cpuacct\"                                             \/\/ expected_path\n@@ -458,9 +447,1 @@\n-    \"\/sys\/fs\/cgroup\/memory\", \/\/ expected_path\n-    true                     \/\/ read-only mount\n-  };\n-  TestCase host_prefix = {\n-    \"\/sys\/fs\/cgroup\/memory\",     \/\/ mount_path\n-    \"\/a\",                        \/\/ root_path\n-    \"\/a\/b\",                      \/\/ cgroup_path\n-    \"\/sys\/fs\/cgroup\/memory\/a\/b\", \/\/ expected_path\n-    false                        \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\/memory\"  \/\/ expected_path\n@@ -468,1 +449,1 @@\n-  int length = 6;\n+  int length = 4;\n@@ -471,1 +452,0 @@\n-                            &host_non_standard,\n@@ -473,2 +453,1 @@\n-                            &container_prefix,\n-                            &host_prefix };\n+                            &container_prefix };\n@@ -478,1 +457,1 @@\n-                                                       testCases[i]->read_only \/* read-only mount *\/);\n+                                                       true \/* read-only mount *\/);\n@@ -489,2 +468,1 @@\n-    \"\/sys\/fs\/cgroup\",       \/\/ expected_path\n-    true                    \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\"        \/\/ expected_path\n@@ -496,2 +474,1 @@\n-    \"\/sys\/fs\/cgroup\/foobar\",\/\/ expected_path\n-    true                    \/\/ read-only mount\n+    \"\/sys\/fs\/cgroup\/foobar\" \/\/ expected_path\n@@ -505,1 +482,1 @@\n-                                                       testCases[i]->read_only \/* read-only mount *\/);\n+                                                       true \/* read-only mount *\/);\n","filename":"test\/hotspot\/gtest\/runtime\/test_cgroupSubsystem_linux.cpp","additions":10,"deletions":33,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Red Hat, Inc.\n+ * Copyright (c) 2022, 2024, Red Hat, Inc.\n@@ -48,1 +48,1 @@\n-        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint, true);\n+        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint);\n@@ -60,1 +60,1 @@\n-        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint, false);\n+        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint);\n@@ -74,1 +74,1 @@\n-        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint, false);\n+        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint);\n@@ -77,1 +77,1 @@\n-        String expectedPath = mountPoint + cgroupPath;\n+        String expectedPath = mountPoint;\n@@ -79,3 +79,0 @@\n-        ctrl = new CgroupV1SubsystemController(root, mountPoint, true);\n-        ctrl.setPath(cgroupPath);\n-        assertEquals(mountPoint, ctrl.path());\n@@ -88,1 +85,1 @@\n-        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint, false);\n+        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint);\n@@ -91,1 +88,1 @@\n-        String expectedPath = mountPoint + cgroupPath;\n+        String expectedPath = mountPoint;\n@@ -93,3 +90,0 @@\n-        ctrl = new CgroupV1SubsystemController(root, mountPoint, true);\n-        ctrl.setPath(cgroupPath);\n-        assertEquals(mountPoint, ctrl.path());\n@@ -102,1 +96,1 @@\n-        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint, false);\n+        CgroupV1SubsystemController ctrl = new CgroupV1SubsystemController(root, mountPoint);\n@@ -105,1 +99,1 @@\n-        String expectedPath = mountPoint + cgroupPath;\n+        String expectedPath = mountPoint;\n@@ -107,3 +101,0 @@\n-        ctrl = new CgroupV1SubsystemController(root, mountPoint, true);\n-        ctrl.setPath(cgroupPath);\n-        assertEquals(mountPoint, ctrl.path());\n","filename":"test\/jdk\/jdk\/internal\/platform\/cgroup\/CgroupV1SubsystemControllerTest.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Red Hat Inc.\n+ * Copyright (c) 2020, 2024, Red Hat Inc.\n@@ -476,1 +476,1 @@\n-        CgroupV1SubsystemController cgroupv1MemoryController = new CgroupV1SubsystemController(cpuInfo.getMountRoot(), cpuInfo.getMountPoint(), false);\n+        CgroupV1SubsystemController cgroupv1MemoryController = new CgroupV1SubsystemController(cpuInfo.getMountRoot(), cpuInfo.getMountPoint());\n@@ -480,7 +480,2 @@\n-        String expectedPath = expectedMountPoint + cpuInfo.getCgroupPath();\n-        assertEquals(\"Should be equal to mount point plus cgroup path in host mode\", expectedPath, actualPath);\n-        \/\/ set readonly=true and repeat\n-        cgroupv1MemoryController = new CgroupV1SubsystemController(cpuInfo.getMountRoot(), cpuInfo.getMountPoint(), true);\n-        cgroupv1MemoryController.setPath(cpuInfo.getCgroupPath());\n-        actualPath = cgroupv1MemoryController.path();\n-        assertEquals(\"Should be equal to mount point in container mode\", expectedMountPoint, actualPath);\n+        String expectedPath = expectedMountPoint;\n+        assertEquals(\"Should be equal to the mount point path\", expectedPath, actualPath);\n","filename":"test\/jdk\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemFactory.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}