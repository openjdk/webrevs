{"files":[{"patch":"@@ -40,2 +40,41 @@\n- * When runs in a container, the method handles the case\n- * when a process is moved between cgroups.\n+ *\n+ * The method determines whether it runs in\n+ * - host mode\n+ * - container mode\n+ *\n+ * In the host mode, _root is equal to \"\/\" and\n+ * the subsystem path is equal to the _mount_point path\n+ * joined with cgroup_path.\n+ *\n+ * In the container mode, it can be two possibilities:\n+ * - private namespace (cgroupns=private)\n+ * - host namespace (cgroupns=host, default mode in cgroup V1 hosts)\n+ *\n+ * Private namespace is equivalent to the host mode, i.e.\n+ * the subsystem path is set by concatenating\n+ * _mount_point and cgroup_path.\n+ *\n+ * In the host namespace, _root is equal to host's cgroup path\n+ * of the control group to which the containerized process\n+ * belongs to at the moment of creation. The mountinfo and\n+ * cgroup files are mirrored from the host, while the subsystem\n+ * specific files are mapped directly at _mount_point, i.e.\n+ * at \/sys\/fs\/cgroup\/<controller>\/, the subsystem path is\n+ * then set equal to _mount_point.\n+ *\n+ * A special case of the subsystem path is when a cgroup path\n+ * includes a subgroup, when a containerized process was associated\n+ * with an existing cgroup, that is different from cgroup\n+ * in which the process has been created.\n+ * Here, the _root is equal to the host's initial cgroup path,\n+ * cgroup_path will be equal to host's new cgroup path.\n+ * As host cgroup hierarchies are not accessible in the container,\n+ * it needs to be determined which part of cgroup path\n+ * is accessible inside container, i.e. mapped under\n+ * \/sys\/fs\/cgroup\/<controller>\/<subgroup>.\n+ * In Docker default setup, host's cgroup path can be\n+ * of the form: \/docker\/<CONTAINER_ID>\/<subgroup>,\n+ * from which only <subgroup> is mapped.\n+ * The method trims cgroup path from left, until the subgroup\n+ * component is found. The subsystem path will be set to\n+ * the _mount_point joined with the subgroup path.\n@@ -77,0 +116,1 @@\n+            log_trace(os, container)(\"set_subsystem_path: skipped non-existent directory: %s.\", suffix);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":42,"deletions":2,"binary":false,"changes":44,"status":"modified"}]}