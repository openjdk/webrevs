{"files":[{"patch":"@@ -53,1 +53,0 @@\n-import java.util.concurrent.locks.ReentrantLock;\n@@ -375,3 +374,0 @@\n-    \/\/ used to coordinate changing TTL with the deprecated send method\n-    private final ReentrantLock sendLock = new ReentrantLock();\n-\n@@ -385,6 +381,1 @@\n-        sendLock.lock();\n-        try {\n-            setIntOption(StandardSocketOptions.IP_MULTICAST_TTL, ttl);\n-        } finally {\n-            sendLock.unlock();\n-        }\n+        setIntOption(StandardSocketOptions.IP_MULTICAST_TTL, ttl);\n@@ -395,6 +386,1 @@\n-        sendLock.lock();\n-        try {\n-            return getIntOption(StandardSocketOptions.IP_MULTICAST_TTL);\n-        } finally {\n-            sendLock.unlock();\n-        }\n+        return getIntOption(StandardSocketOptions.IP_MULTICAST_TTL);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/DatagramSocketAdaptor.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @summary Make sure MulticastSocket.setTimeToLive() can be set to 0\n+ * @summary Make sure TTL can be set to 0\n","filename":"test\/jdk\/java\/net\/MulticastSocket\/SetTTLTo0.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -410,7 +410,1 @@\n-        final int oldTTL = s.getTimeToLive();\n-        s.setTimeToLive(1);\n-        try {\n-            s.send(p);\n-        } finally {\n-            s.setTimeToLive(oldTTL);\n-        }\n+        s.send(p);\n@@ -460,7 +454,1 @@\n-        final int oldTTL = s.getTimeToLive();\n-        s.setTimeToLive(1);\n-        try {\n-            s.send(p);\n-        } finally {\n-            s.setTimeToLive(oldTTL);\n-        }\n+        s.send(p);\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/AdaptorMulticasting.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"}]}