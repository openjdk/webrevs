{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,0 @@\n-    dlerror(); \/* clear any old error message not fetched *\/\n@@ -127,3 +126,0 @@\n-    \/\/ clear any old error message not fetched\n-    dlerror();\n-\n@@ -161,20 +157,2 @@\n-    if (jGetFunctionList != NULL) {\n-        getFunctionListStr = (*env)->GetStringUTFChars(env,\n-            jGetFunctionList, 0);\n-        if (getFunctionListStr == NULL) {\n-            goto cleanup;\n-        }\n-        C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule,\n-            getFunctionListStr);\n-        if ((systemErrorMessage = dlerror()) != NULL){\n-            p11ThrowIOException(env, systemErrorMessage);\n-            goto cleanup;\n-        }\n-        if (C_GetFunctionList == NULL) {\n-            TRACE1(\"Connect: No %s func\\n\", getFunctionListStr);\n-            p11ThrowIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n-            goto cleanup;\n-        }\n-        TRACE1(\"Connect: Found %s func\\n\", getFunctionListStr);\n-    } else {\n-        \/\/ if none specified, then we try 3.0 API first before trying 2.40\n+    \/\/ if none specified, then we try 3.0 API first before trying 2.40\n+    if (jGetFunctionList == NULL) {\n@@ -182,1 +160,1 @@\n-        if ((C_GetInterface != NULL) && (dlerror() == NULL)) {\n+        if (C_GetInterface != NULL) {\n@@ -185,1 +163,3 @@\n-            if (ckAssertReturnValueOK(env, rv) == CK_ASSERT_OK) {\n+            \/\/ don't use ckAssertReturnValueOK as we want to continue trying\n+            \/\/ C_GetFunctionList() or method named by \"getFunctionListStr\"\n+            if (rv == CKR_OK) {\n@@ -189,9 +169,5 @@\n-        C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule,\n-                \"C_GetFunctionList\");\n-        if ((systemErrorMessage = dlerror()) != NULL){\n-            p11ThrowIOException(env, systemErrorMessage);\n-            goto cleanup;\n-        }\n-        if (C_GetFunctionList == NULL) {\n-            TRACE0(\"Connect: No C_GetFunctionList func\\n\");\n-            p11ThrowIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n+        getFunctionListStr = \"C_GetFunctionList\";\n+    } else {\n+        getFunctionListStr = (*env)->GetStringUTFChars(env,\n+            jGetFunctionList, 0);\n+        if (getFunctionListStr == NULL) {\n@@ -200,1 +176,0 @@\n-        TRACE0(\"Connect: Found C_GetFunctionList func\\n\");\n@@ -203,0 +178,14 @@\n+    dlerror(); \/\/ clear any old error message not fetched\n+    C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule,\n+            getFunctionListStr);\n+    if ((systemErrorMessage = dlerror()) != NULL){\n+        p11ThrowIOException(env, systemErrorMessage);\n+        goto cleanup;\n+    }\n+    if (C_GetFunctionList == NULL) {\n+        TRACE1(\"Connect: No %s func\\n\", getFunctionListStr);\n+        p11ThrowIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n+        goto cleanup;\n+    }\n+    TRACE1(\"Connect: Found %s func\\n\", getFunctionListStr);\n+\n","filename":"src\/jdk.crypto.cryptoki\/unix\/native\/libj2pkcs11\/p11_md.c","additions":26,"deletions":37,"binary":false,"changes":63,"status":"modified"}]}