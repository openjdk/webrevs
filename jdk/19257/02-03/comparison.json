{"files":[{"patch":"@@ -1101,1 +1101,1 @@\n-            If <code>size<\/code> is zero, <code>null<\/code> pointer is returned.\n+            If <code>size<\/code> is zero, null pointer is returned.\n@@ -1517,1 +1517,1 @@\n-        The function may return <code>null<\/code> pointer in the start phase if the\n+        The function may return a null pointer in the start phase if the\n@@ -1523,1 +1523,1 @@\n-        as an argument will accept <code>null<\/code> pointer to mean\n+        as an argument will accept null to mean\n@@ -1682,1 +1682,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>null<\/code> pointer\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1779,1 +1779,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>null<\/code> pointer\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1901,1 +1901,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>null<\/code> pointer\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1996,1 +1996,1 @@\n-            <code>null<\/code> pointer if the thread has terminated.\n+            null pointer if the thread has terminated.\n@@ -2142,1 +2142,1 @@\n-              <code>null<\/code> pointer if there is none.\n+              null pointer if there is none.\n@@ -2262,1 +2262,1 @@\n-            <nullok><code>null<\/code> pointer is passed to the start function<\/nullok>\n+            <nullok>null pointer is passed to the start function<\/nullok>\n@@ -2295,1 +2295,1 @@\n-        This value is <code>null<\/code> pointer unless set with this function.\n+        This value is null unless set with this function.\n@@ -2319,1 +2319,1 @@\n-            <nullok>value is set to <code>null<\/code> pointer<\/nullok>\n+            <nullok>value is set to null<\/nullok>\n@@ -3149,1 +3149,1 @@\n-            An object or <code>null<\/code> pointer.\n+            An object or a null pointer.\n@@ -4277,1 +4277,1 @@\n-            Otherwise <code>null<\/code> pointer.\n+            Otherwise null pointer.\n@@ -4322,1 +4322,1 @@\n-            <code>null<\/code> pointer if the referrer in not an object (that is,\n+            null pointer if the referrer in not an object (that is,\n@@ -4624,1 +4624,1 @@\n-        Whether a callback is provided or is <code>null<\/code> pointer only determines\n+        Whether a callback is provided or is null only determines\n@@ -4769,1 +4769,1 @@\n-            <nullok><code>null<\/code> pointer is passed as the user supplied data<\/nullok>\n+            <nullok>null pointer is passed as the user supplied data<\/nullok>\n@@ -4815,1 +4815,1 @@\n-        Whether a callback is provided or is <code>null<\/code> pointer only determines\n+        Whether a callback is provided or is null only determines\n@@ -4945,1 +4945,1 @@\n-            <nullok><code>null<\/code> pointer is passed as the user supplied data<\/nullok>\n+            <nullok>null pointer is passed as the user supplied data<\/nullok>\n@@ -5593,1 +5593,1 @@\n-            <nullok><code>null<\/code> pointer is passed as the user supplied data<\/nullok>\n+            <nullok>null pointer is passed as the user supplied data<\/nullok>\n@@ -5637,1 +5637,1 @@\n-        specified as <code>null<\/code> pointer then this function returns after\n+        specified as null pointer then this function returns after\n@@ -5691,1 +5691,1 @@\n-            <nullok><code>null<\/code> pointer is passed as the user supplied data<\/nullok>\n+            <nullok>>null pointer is passed as the user supplied data<\/nullok>\n@@ -5750,1 +5750,1 @@\n-            <nullok><code>null<\/code> pointer is passed as the user supplied data<\/nullok>\n+            <nullok>null pointer is passed as the user supplied data<\/nullok>\n@@ -5818,1 +5818,1 @@\n-            <nullok><code>null<\/code> pointeris passed as the user supplied data<\/nullok>\n+            <nullok>null pointeris passed as the user supplied data<\/nullok>\n@@ -6770,1 +6770,1 @@\n-        otherwise <code>null<\/code> pointer is returned.\n+        otherwise null pointer is returned.\n@@ -6784,1 +6784,1 @@\n-            If the <code>class_loader<\/code> is not <code>null<\/code> pointer\n+            If the <code>class_loader<\/code> is not null\n@@ -6809,1 +6809,1 @@\n-          If class loader is not <code>null<\/code> pointer and is not a class loader object.\n+          If class loader is not null and is not a class loader object.\n@@ -8117,1 +8117,1 @@\n-          One of <code>class_bytes<\/code> is <code>null<\/code> pointer.\n+          One of <code>class_bytes<\/code> is null.\n@@ -8252,1 +8252,1 @@\n-              The thread owning this monitor, or <code>null<\/code> pointer if unused\n+              The thread owning this monitor, or null if unused\n@@ -8905,1 +8905,1 @@\n-            The value of this field will be <code>null<\/code> pointer for any local\n+            The value of this field will be null for any local\n@@ -9243,1 +9243,1 @@\n-         <code>null<\/code> pointer is the same as calling this function with\n+         null pointer is the same as calling this function with\n@@ -9663,1 +9663,1 @@\n-        When an entry is <code>null<\/code> pointer or when the event is beyond\n+        When an entry is null or when the event is beyond\n@@ -9711,1 +9711,1 @@\n-        If <code>event_thread<\/code> is <code>null<\/code> pointer,\n+        If <code>event_thread<\/code> is null,\n@@ -9776,1 +9776,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>null<\/code> pointer and is not a valid thread.\n+          <paramlink id=\"event_thread\"\/> is non-null and is not a valid thread.\n@@ -9779,1 +9779,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>null<\/code> pointer and is not alive\n+          <paramlink id=\"event_thread\"\/> is non-null and is not alive\n@@ -10000,1 +10000,1 @@\n-              Is a <code>null<\/code> pointer argument permitted? Applies only to pointer and object types.\n+              Is a null pointer argument permitted? Applies only to pointer and object types.\n@@ -10228,1 +10228,1 @@\n-          enables the event. Or, if the callback is <code>null<\/code> pointer, disables\n+          enables the event. Or, if the callback is null, disables\n@@ -10252,1 +10252,1 @@\n-              If <code>callback<\/code> is non-<code>null<\/code> pointer,\n+              If <code>callback<\/code> is non-null,\n@@ -11639,1 +11639,1 @@\n-        This value is <code>null<\/code> pointer unless set with this function.\n+        This value is null unless set with this function.\n@@ -12458,1 +12458,1 @@\n-            instance field; <code>null<\/code> pointer otherwise\n+            instance field; null pointer otherwise\n@@ -12528,1 +12528,1 @@\n-            instance field; <code>null<\/code> pointer otherwise\n+            instance field; null pointer otherwise\n@@ -12762,1 +12762,1 @@\n-            Will be <code>null<\/code> pointer if sent during the primordial\n+            Will be null if sent during the primordial\n@@ -12879,1 +12879,1 @@\n-            Class that will catch the exception, or <code>null<\/code> pointer if no known catch\n+            Class that will catch the exception, or null pointer if no known catch\n@@ -12885,1 +12885,1 @@\n-            Method that will catch the exception, or <code>null<\/code> pointer if no known catch\n+            Method that will catch the exception, or null pointer if no known catch\n@@ -12917,1 +12917,1 @@\n-      to <code>null<\/code> pointer.\n+      to null.\n@@ -13350,1 +13350,1 @@\n-    <code>class_being_redefined<\/code> is non-<code>null<\/code> pointer and so\n+    <code>class_being_redefined<\/code> is non-null and so\n@@ -13397,1 +13397,1 @@\n-          <code>null<\/code> pointer if sent by class load.\n+          null pointer if sent by class load.\n@@ -13404,1 +13404,1 @@\n-            <code>null<\/code> pointer if the bootstrap class loader.\n+            null pointer if the bootstrap class loader.\n@@ -13413,2 +13413,2 @@\n-            Note: if the class is defined with a <code>null<\/code> pointer name or\n-            without a name specified, <code>name<\/code> will be <code>null<\/code> pointer.\n+            Note: if the class is defined with a null pointer name or\n+            without a name specified, <code>name<\/code> will be null.\n@@ -13632,1 +13632,1 @@\n-          <code>null<\/code> pointer if mapping information cannot be supplied.\n+          null pointer if mapping information cannot be supplied.\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"}]}