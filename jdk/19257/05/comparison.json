{"files":[{"patch":"@@ -1007,1 +1007,1 @@\n-    returned as <code>nullptr<\/code>.\n+    returned as a null pointer (C <code>NULL<\/code> or C++ <code>nullptr<\/code>).\n@@ -1101,1 +1101,1 @@\n-            If <code>size<\/code> is zero, <code>nullptr<\/code> is returned.\n+            If <code>size<\/code> is zero, a null pointer is returned.\n@@ -1517,1 +1517,1 @@\n-        The function may return <code>nullptr<\/code> in the start phase if the\n+        The function may return a null pointer in the start phase if the\n@@ -1523,1 +1523,1 @@\n-        as an argument will accept <code>nullptr<\/code> to mean\n+        as an argument will accept null to mean\n@@ -1533,1 +1533,1 @@\n-             On return, points to the current thread, or <code>nullptr<\/code>.\n+             On return, points to the current thread, or null.\n@@ -1682,1 +1682,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1779,1 +1779,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1901,1 +1901,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was null\n@@ -1996,1 +1996,1 @@\n-            <code>nullptr<\/code> if the thread has terminated.\n+            Null if the thread has terminated.\n@@ -2142,1 +2142,1 @@\n-              nullptr if there is none.\n+              null if there is none.\n@@ -2262,1 +2262,1 @@\n-            <nullok><code>nullptr<\/code> is passed to the start function<\/nullok>\n+            <nullok>A null pointer is passed to the start function<\/nullok>\n@@ -2295,1 +2295,1 @@\n-        This value is <code>nullptr<\/code> unless set with this function.\n+        This value is null unless set with this function.\n@@ -2319,1 +2319,1 @@\n-            <nullok>value is set to <code>nullptr<\/code><\/nullok>\n+            <nullok>value is set to null<\/nullok>\n@@ -2353,1 +2353,1 @@\n-            pointer is <code>nullptr<\/code>.\n+            pointer is null.\n@@ -2592,1 +2592,1 @@\n-                       &amp;methodName, nullptr, nullptr);\n+                       &amp;methodName, NULL, NULL);\n@@ -3149,1 +3149,1 @@\n-            An object or <code>nullptr<\/code>.\n+            An object or a null pointer.\n@@ -4277,1 +4277,1 @@\n-            Otherwise <code>nullptr<\/code>.\n+            Otherwise a null pointer.\n@@ -4322,1 +4322,1 @@\n-            <code>nullptr<\/code> if the referrer in not an object (that is,\n+            Null if the referrer in not an object (that is,\n@@ -4624,1 +4624,1 @@\n-        Whether a callback is provided or is <code>nullptr<\/code> only determines\n+        Whether a callback is provided or is null only determines\n@@ -4769,1 +4769,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>a null pointer is passed as the user supplied data<\/nullok>\n@@ -4815,1 +4815,1 @@\n-        Whether a callback is provided or is <code>nullptr<\/code> only determines\n+        Whether a callback is provided or is null only determines\n@@ -4945,1 +4945,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>a null pointer is passed as the user supplied data<\/nullok>\n@@ -5593,1 +5593,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>a null pointer is passed as the user supplied data<\/nullok>\n@@ -5637,1 +5637,1 @@\n-        specified as <code>nullptr<\/code> then this function returns after\n+        specified as null then this function returns after\n@@ -5691,1 +5691,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>a null pointer is passed as the user supplied data<\/nullok>\n@@ -5750,1 +5750,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>a null pointer is passed as the user supplied data<\/nullok>\n@@ -5818,1 +5818,1 @@\n-            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok>null pointeris passed as the user supplied data<\/nullok>\n@@ -6770,1 +6770,1 @@\n-        otherwise <code>nullptr<\/code> is returned.\n+        otherwise null is returned.\n@@ -6784,1 +6784,1 @@\n-            If the <code>class_loader<\/code> is not <code>nullptr<\/code>\n+            If the <code>class_loader<\/code> is not null\n@@ -6803,1 +6803,1 @@\n-            or points to <code>nullptr<\/code>.\n+            or points to null.\n@@ -6809,1 +6809,1 @@\n-          If class loader is not <code>nullptr<\/code> and is not a class loader object.\n+          If class loader is not null and is not a class loader object.\n@@ -7264,1 +7264,1 @@\n-            on return, points to <code>nullptr<\/code>.\n+            on return, points to null.\n@@ -7794,1 +7794,1 @@\n-              points to <code>nullptr<\/code>.\n+              points to null.\n@@ -8117,1 +8117,1 @@\n-          One of <code>class_bytes<\/code> is <code>nullptr<\/code>.\n+          One of <code>class_bytes<\/code> is null.\n@@ -8252,1 +8252,1 @@\n-              The platform thread owning this monitor, or <code>nullptr<\/code> if owned\n+              The platform thread owning this monitor, or null if owned\n@@ -8425,1 +8425,1 @@\n-            on return, points to <code>nullptr<\/code>.\n+            on return, points to null.\n@@ -8618,1 +8618,1 @@\n-            on return, points to <code>nullptr<\/code>.\n+            on return, points to null.\n@@ -8916,1 +8916,1 @@\n-            The value of this field will be <code>nullptr<\/code> for any local\n+            The value of this field will be null for any local\n@@ -9254,1 +9254,1 @@\n-         <code>nullptr<\/code> is the same as calling this function with\n+         a null pointer is the same as calling this function with\n@@ -9674,1 +9674,1 @@\n-        When an entry is <code>nullptr<\/code> or when the event is beyond\n+        When an entry is null or when the event is beyond\n@@ -9722,1 +9722,1 @@\n-        If <code>event_thread<\/code> is <code>nullptr<\/code>,\n+        If <code>event_thread<\/code> is null,\n@@ -9787,1 +9787,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>nullptr<\/code> and is not a valid thread.\n+          <paramlink id=\"event_thread\"\/> is non-null and is not a valid thread.\n@@ -9790,1 +9790,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>nullptr<\/code> and is not alive\n+          <paramlink id=\"event_thread\"\/> is non-null and is not alive\n@@ -10011,1 +10011,1 @@\n-              Is a <code>nullptr<\/code> argument permitted? Applies only to pointer and object types.\n+              Is a null pointer argument permitted? Applies only to pointer and object types.\n@@ -10239,1 +10239,1 @@\n-          enables the event. Or, if the callback is <code>nullptr<\/code>, disables\n+          enables the event. Or, if the callback is null, disables\n@@ -10263,1 +10263,1 @@\n-              If <code>callback<\/code> is non-<code>nullptr<\/code>,\n+              If <code>callback<\/code> is non-null,\n@@ -11057,1 +11057,1 @@\n-  GetThreadCpuTime(env, nullptr, nanos_ptr)\n+  GetThreadCpuTime(env, NULL, nanos_ptr)\n@@ -11650,1 +11650,1 @@\n-        This value is <code>nullptr<\/code> unless set with this function.\n+        This value is null unless set with this function.\n@@ -11668,1 +11668,1 @@\n-            <nullok>value is set to <code>nullptr<\/code><\/nullok>\n+            <nullok>value is set to null<\/nullok>\n@@ -11696,1 +11696,1 @@\n-            pointer is <code>nullptr<\/code>.\n+            pointer is null.\n@@ -11962,1 +11962,1 @@\n-      Pointer is unexpectedly <code>nullptr<\/code>.\n+      Pointer is unexpectedly null.\n@@ -12469,1 +12469,1 @@\n-            instance field; <code>nullptr<\/code> otherwise\n+            instance field; a null pointer otherwise\n@@ -12539,1 +12539,1 @@\n-            instance field; <code>nullptr<\/code> otherwise\n+            instance field; a null pointer otherwise\n@@ -12773,1 +12773,1 @@\n-            Will be <code>nullptr<\/code> if sent during the primordial\n+            Will be null if sent during the primordial\n@@ -12890,1 +12890,1 @@\n-            Class that will catch the exception, or <code>nullptr<\/code> if no known catch\n+            Class that will catch the exception, or null if no known catch\n@@ -12896,1 +12896,1 @@\n-            Method that will catch the exception, or <code>nullptr<\/code> if no known catch\n+            Method that will catch the exception, or null if no known catch\n@@ -12928,1 +12928,1 @@\n-      to <code>nullptr<\/code>.\n+      to null.\n@@ -13361,1 +13361,1 @@\n-    <code>class_being_redefined<\/code> is non <code>nullptr<\/code> and so\n+    <code>class_being_redefined<\/code> is non-null and so\n@@ -13408,1 +13408,1 @@\n-          <code>nullptr<\/code> if sent by class load.\n+          A null pointer if sent by class load.\n@@ -13415,1 +13415,1 @@\n-            <code>nullptr<\/code> if the bootstrap class loader.\n+            A null pointer if the bootstrap class loader.\n@@ -13424,2 +13424,2 @@\n-            Note: if the class is defined with a <code>nullptr<\/code> name or\n-            without a name specified, <code>name<\/code> will be <code>nullptr<\/code>.\n+            Note: if the class is defined with a null pointer name,\n+            <code>name<\/code> will be null.\n@@ -13643,1 +13643,1 @@\n-          <code>nullptr<\/code> if mapping information cannot be supplied.\n+          A null pointer if mapping information cannot be supplied.\n@@ -14706,1 +14706,1 @@\n-    Allow nullptr as RunAgentThread arg.\n+    Allow null as RunAgentThread arg.\n@@ -14716,1 +14716,1 @@\n-    Change GetFieldName to allow nullptr like GetMethodName.\n+    Change GetFieldName to allow null like GetMethodName.\n@@ -14825,1 +14825,1 @@\n-      <code>GetClassLoader<\/code> return nullptr for the bootstrap class loader.\n+      <code>GetClassLoader<\/code> return a null pointer for the bootstrap class loader.\n@@ -14835,1 +14835,1 @@\n-      Zero length allocations return nullptr.\n+      Zero length allocations return a null pointer.\n@@ -14857,1 +14857,1 @@\n-      nullptr thread parameter on most functions is current\n+      A null pointer thread parameter on most functions is current\n@@ -14894,1 +14894,1 @@\n-      to be set to nullptr.\n+      to be set to null pointer.\n@@ -14934,1 +14934,1 @@\n-      Allow thread and environment local storage to be set to nullptr.\n+      Allow thread and environment local storage to be set to null pointer.\n@@ -14966,1 +14966,1 @@\n-      Allow nullptr (means bootstrap loader) for GetClassloaderClasses.\n+      Allow null pointer (means bootstrap loader) for GetClassloaderClasses.\n@@ -15065,1 +15065,1 @@\n-      Allow nullptr user_data in heap iterators.\n+      Allow null pointer user_data in heap iterators.\n@@ -15213,1 +15213,1 @@\n-      Clarify that name in CFLH can be nullptr.\n+      Clarify that name in CFLH can be null pointer.\n@@ -15226,1 +15226,1 @@\n-      disallow nullptr for this parameter.\n+      disallow null pointer for this parameter.\n@@ -15421,1 +15421,1 @@\n-      The function may return nullptr in the start phase if the\n+      The function may return null pointer in the start phase if the\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":75,"deletions":75,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -424,1 +424,1 @@\n-        <xsl:value-of select=\"@const\"\/>, nullptr)<\/code>\n+        <xsl:value-of select=\"@const\"\/>, NULL)<\/code>\n@@ -1589,1 +1589,1 @@\n-  <code>nullptr<\/code>\n+  a null pointer\n","filename":"src\/hotspot\/share\/prims\/jvmti.xsl","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-\/\/ method - pre-checked for validity, but may be nullptr meaning obsolete method<\/xsl:text>\n+\/\/ method - pre-checked for validity, but may be null meaning obsolete method<\/xsl:text>\n@@ -169,1 +169,1 @@\n-      <xsl:text> - pre-checked for nullptr<\/xsl:text>\n+      <xsl:text> - pre-checked for null<\/xsl:text>\n@@ -175,1 +175,1 @@\n-      <xsl:text> - nullptr is a valid value, must be checked<\/xsl:text>\n+      <xsl:text> - null is a valid value, must be checked<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.xsl","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-  <code>nullptr<\/code>, <xsl:apply-templates\/>.\n+  <code>null<\/code> pointer, <xsl:apply-templates\/>.\n@@ -381,1 +381,1 @@\n-    <code>nullptr<\/code>, the current thread is used.\n+    null, the current thread is used.\n","filename":"src\/hotspot\/share\/prims\/jvmtiLib.xsl","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}