{"files":[{"patch":"@@ -8252,1 +8252,2 @@\n-              The thread owning this monitor, or <code>nullptr<\/code> if unused\n+              The platform thread owning this monitor, or <code>nullptr<\/code> if owned\n+              by a virtual thread or not owned\n@@ -8258,1 +8259,2 @@\n-            The number of times the owning thread has entered the monitor\n+            The number of times the platform thread owning this monitor has entered it, \n+            or <code>0<\/code> if owned by a virtual thread or not owned\n@@ -8264,1 +8266,2 @@\n-            The number of threads waiting to own this monitor\n+            The number of platform threads waiting to own this monitor, or <code>0<\/code>\n+            if only virtual threads are waiting or no threads are waiting\n@@ -8270,1 +8273,1 @@\n-              The <code>waiter_count<\/code> waiting threads\n+              The <code>waiter_count<\/code> waiting platform threads\n@@ -8276,1 +8279,3 @@\n-            The number of threads waiting to be notified by this monitor\n+            The number of platform threads waiting to own this monitor, or <code>0<\/code>\n+            if only virtual threads are waiting to be notified or no threads are waiting\n+            to be notified\n@@ -8282,1 +8287,1 @@\n-              The <code>notify_waiter_count<\/code> threads waiting to be notified\n+              The <code>notify_waiter_count<\/code> platform threads waiting to be notified\n@@ -8290,0 +8295,6 @@\n+        <p\/>\n+        <b> This function does not support getting information about an object's monitor\n+            when it is owned by a virtual thread. It also does not support returning a\n+            reference to virtual threads that are waiting to own a monitor or waiting to\n+            be notified.\n+        <\/b>\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1485,1 +1485,6 @@\n-    Handle th(current_thread, get_vthread_or_thread_oop(owning_thread));\n+    oop thread_oop = get_vthread_or_thread_oop(owning_thread);\n+    bool is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n+    if (is_virtual) {\n+      thread_oop = nullptr;\n+    }\n+    Handle th(current_thread, thread_oop);\n@@ -1492,1 +1497,1 @@\n-    ret.entry_count = count_locked_objects(owning_thread, hobj);\n+    ret.entry_count = is_virtual ? 0 : count_locked_objects(owning_thread, hobj);\n@@ -1516,0 +1521,1 @@\n+  jint skipped = 0;\n@@ -1525,0 +1531,5 @@\n+      JavaThread *w = mon->thread_of_waiter(waiter);\n+      oop thread_oop = get_vthread_or_thread_oop(w);\n+      if (java_lang_VirtualThread::is_instance(thread_oop)) {\n+        skipped++;\n+      }\n@@ -1529,1 +1540,1 @@\n-  ret.notify_waiter_count = nWait;\n+  ret.notify_waiter_count = nWait - skipped;\n@@ -1564,0 +1575,1 @@\n+      jint skipped = 0;\n@@ -1566,0 +1578,2 @@\n+        oop thread_oop = get_vthread_or_thread_oop(w);\n+        bool is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n@@ -1567,4 +1581,8 @@\n-        \/\/ If the thread was found on the ObjectWaiter list, then\n-        \/\/ it has not been notified.\n-        Handle th(current_thread, get_vthread_or_thread_oop(w));\n-        ret.notify_waiters[i] = (jthread)jni_reference(calling_thread, th);\n+        if (java_lang_VirtualThread::is_instance(thread_oop)) {\n+          skipped++;\n+        } else {\n+          \/\/ If the thread was found on the ObjectWaiter list, then\n+          \/\/ it has not been notified.\n+          Handle th(current_thread, get_vthread_or_thread_oop(w));\n+          ret.notify_waiters[i - skipped] = (jthread)jni_reference(calling_thread, th);\n+        }\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1186,1 +1186,2 @@\n-\/\/ Get count of Java threads that are waiting to enter or re-enter the specified monitor.\n+\/\/ Get Java threads that are waiting to enter or re-enter the specified monitor.\n+\/\/ Java threads that are executing mounted virtual threads are not included.\n@@ -1197,0 +1198,4 @@\n+    oop thread_oop = JvmtiEnvBase::get_vthread_or_thread_oop(p);\n+    if (java_lang_VirtualThread::is_instance(thread_oop)) {\n+      continue;\n+    }\n@@ -1201,4 +1206,2 @@\n-    oop thread_oop = JvmtiEnvBase::get_vthread_or_thread_oop(p);\n-    bool is_virtual = java_lang_VirtualThread::is_instance(thread_oop);\n-    jint state = is_virtual ? JvmtiEnvBase::get_vthread_state(thread_oop, p)\n-                            : JvmtiEnvBase::get_thread_state(thread_oop, p);\n+    \/\/ do not include virtual threads to the list\n+    jint state = JvmtiEnvBase::get_thread_state(thread_oop, p);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -132,1 +132,2 @@\n-  \/\/ Get count of Java threads that are waiting to enter or re-enter the specified monitor.\n+  \/\/ Get Java threads that are waiting to enter or re-enter the specified monitor.\n+  \/\/ Java threads that are executing mounted virtual threads are not included.\n","filename":"src\/hotspot\/share\/runtime\/threads.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1620,5 +1620,8 @@\n-            (threadObject owner \"The monitor owner, or null if it is not currently owned.\")\n-            (int entryCount \"The number of times the monitor has been entered.\")\n-            (Repeat waiters \"The total number of threads that are waiting to enter or re-enter \"\n-                            \"the monitor, or waiting to be notified by the monitor.\"\n-                (threadObject thread \"A thread waiting for this monitor.\")\n+            (threadObject owner \"The platform thread owning this monitor, or null \"\n+                                \"if owned by a virtual thread or not owned.\")\n+            (int entryCount \"The number of times the owning platform thread has entered the monitor, \"\n+                            \"or 0 if owned by a virtual thread or not owned.\")\n+            (Repeat waiters \"The total number of platform threads that are waiting to enter or re-enter \"\n+                            \"the monitor, or waiting to be notified by the monitor, or 0 if \"\n+                            \"only virtual threads are waiting or no threads are waiting.\"\n+                (threadObject thread \"A platform thread waiting for this monitor.\")\n@@ -2874,1 +2877,1 @@\n-                             \"Request that generated event (or 0 if this \"\n+                             \"Request that generated event, or 0 if this \"\n","filename":"src\/java.se\/share\/data\/jdwp\/jdwp.spec","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-     * each thread currently waiting for this object's monitor.\n+     * each platform thread currently waiting for this object's monitor.\n@@ -358,1 +358,2 @@\n-     * has zero length if no threads are waiting for the monitor.\n+     * has zero length if no threads are waiting for the monitor,\n+     * or only virtual threads are waiting for the monitor.\n@@ -369,1 +370,1 @@\n-     * Returns an {@link ThreadReference} for the thread, if any,\n+     * Returns a {@link ThreadReference} for the platform thread, if any,\n@@ -378,2 +379,3 @@\n-     * @return the {@link ThreadReference} which currently owns the\n-     * monitor, or null if it is unowned.\n+     * @return the {@link ThreadReference} of the platform thread which\n+     * currently owns the monitor, or null if the monitor is owned\n+     * by a virtual thread or not owned.\n@@ -389,2 +391,3 @@\n-     * Returns the number times this object's monitor has been\n-     * entered by the current owning thread.\n+     * Returns the number of times this object's monitor has been entered by\n+     * the current owning thread if the owning thread is platform thread;\n+     * Returns 0 if not owned by a platform thread.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ObjectReference.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -117,0 +117,7 @@\n+    static Thread expOwnerThread() {\n+        return Thread.currentThread().isVirtual() ? null : Thread.currentThread();\n+    }\n+\n+    static int expEntryCount() {\n+        return Thread.currentThread().isVirtual() ? 0 : 1;\n+    }\n@@ -130,0 +137,1 @@\n+        final int expWaitingCount = isVirtual ? 0 : NUMBER_OF_WAITING_THREADS;\n@@ -131,0 +139,3 @@\n+        \/\/ The numbers below describe the testing scenario, not the expected results.\n+        \/\/ The expected numbers are different for virtual threads because\n+        \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -137,1 +148,1 @@\n-              NUMBER_OF_WAITING_THREADS);\n+              expWaitingCount);\n@@ -161,0 +172,7 @@\n+            \/\/ Virtual threads are not supported by GetObjectMonitorUsage.\n+            \/\/ Correct the expected values for the virtual thread case.\n+            int expEnteringCount = isVirtual ? 0 : NUMBER_OF_ENTERING_THREADS;\n+\n+            \/\/ The numbers below describe the testing scenario, not the expected results.\n+            \/\/ The expected numbers are different for virtual threads because\n+            \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -165,1 +183,1 @@\n-            check(lockCheck, Thread.currentThread(), 1, 0, 0);\n+            check(lockCheck, expOwnerThread(), expEntryCount(), 0, 0);\n@@ -169,0 +187,3 @@\n+            \/\/ The numbers below describe the testing scenario, not the expected results.\n+            \/\/ The expected numbers are different for virtual threads because\n+            \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -173,2 +194,2 @@\n-            check(lockCheck, Thread.currentThread(), 1,\n-                  NUMBER_OF_ENTERING_THREADS,\n+            check(lockCheck, expOwnerThread(), expEntryCount(),\n+                  expEnteringCount,\n@@ -198,0 +219,5 @@\n+            \/\/ Virtual threads are not supported by the GetObjectMonitorUsage.\n+            \/\/ Correct the expected values for the virtual thread case.\n+            int expEnteringCount = isVirtual ? 0 : NUMBER_OF_ENTERING_THREADS;\n+            int expWaitingCount  = isVirtual ? 0 : NUMBER_OF_WAITING_THREADS;\n+\n@@ -200,0 +226,3 @@\n+            \/\/ The numbers below describe the testing scenario, not the expected results.\n+            \/\/ The expected numbers are different for virtual threads because\n+            \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -204,3 +233,3 @@\n-            check(lockCheck, Thread.currentThread(), 1,\n-                  NUMBER_OF_ENTERING_THREADS,\n-                  NUMBER_OF_WAITING_THREADS);\n+            check(lockCheck, expOwnerThread(), expEntryCount(),\n+                  expEnteringCount,\n+                  expWaitingCount);\n@@ -237,0 +266,8 @@\n+            \/\/ Virtual threads are not supported by GetObjectMonitorUsage.\n+            \/\/ Correct the expected values for the virtual thread case.\n+            int expEnteringCount = isVirtual ? 0 : NUMBER_OF_ENTERING_THREADS;\n+            int expWaitingCount  = isVirtual ? 0 : NUMBER_OF_WAITING_THREADS;\n+\n+            \/\/ The numbers below describe the testing scenario, not the expected results.\n+            \/\/ The expected numbers are different for virtual threads because\n+            \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -241,1 +278,1 @@\n-            check(lockCheck, Thread.currentThread(), 1,\n+            check(lockCheck, expOwnerThread(), expEntryCount(),\n@@ -243,1 +280,1 @@\n-                  NUMBER_OF_WAITING_THREADS);\n+                  expWaitingCount);\n@@ -247,0 +284,3 @@\n+            \/\/ The numbers below describe the testing scenario, not the expected results.\n+            \/\/ The expected numbers are different for virtual threads because\n+            \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -251,3 +291,3 @@\n-            check(lockCheck, Thread.currentThread(), 1,\n-                  NUMBER_OF_ENTERING_THREADS,\n-                  NUMBER_OF_WAITING_THREADS);\n+            check(lockCheck, expOwnerThread(), expEntryCount(),\n+                  expEnteringCount,\n+                  expWaitingCount);\n@@ -256,0 +296,2 @@\n+                expEnteringCount = isVirtual ? 0 : NUMBER_OF_ENTERING_THREADS + i + 1;\n+                expWaitingCount  = isVirtual ? 0 : NUMBER_OF_WAITING_THREADS - i - 1;\n@@ -259,0 +301,3 @@\n+                \/\/ The numbers below describe the testing scenario, not the expected results.\n+                \/\/ The expected numbers are different for virtual threads because\n+                \/\/ they are not supported by JVMTI GetObjectMonitorUsage.\n@@ -263,3 +308,3 @@\n-                check(lockCheck, Thread.currentThread(), 1,\n-                      NUMBER_OF_ENTERING_THREADS + i + 1,\n-                      NUMBER_OF_WAITING_THREADS  - i - 1);\n+                check(lockCheck, expOwnerThread(), expEntryCount(),\n+                      expEnteringCount,\n+                      expWaitingCount);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/ObjectMonitorUsage\/ObjectMonitorUsage.java","additions":60,"deletions":15,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -200,0 +200,2 @@\n+                                 \/\/ The lockRef.entryCount() is expected to return 0 if the owner thread is virtual.\n+                                 int expEntryCount = mainThread.isVirtual() ? 0 : i;\n@@ -201,1 +203,2 @@\n-                                 if (entryCount != i) {\n+\n+                                 if (entryCount != expEntryCount) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/entryCount\/entrycount002.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -203,0 +203,9 @@\n+                                 \/\/ The lockRef.owningThread() is expected to return null if tested threads are virtual.\n+                                 if (eventThread.isVirtual()) {\n+                                     if (thread == null) {\n+                                        display(\"expected null is returned` by owningThread method on virtual thread: \" + eventThread.name());\n+                                     } else {\n+                                        complain(\"owningThread returned ThreadReference of virtual thread instead of null: \" + thread.name());\n+                                     }\n+                                     continue;\n+                                 }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/owningThread\/owningthread002.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -125,0 +125,3 @@\n+                        \/\/ Virtual threads are not present in result returned by objRef.waitingThreads().\n+                        if (!thread.isVirtual()) {\n+                        }\n@@ -162,1 +165,3 @@\n-                        if (waitingThreads.size() != waitingthreads002a.threadCount) {\n+                        final boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"test.thread.factory\"));\n+                        final int expWaitingCount = vthreadMode ? 0 : waitingthreads002a.threadCount;\n+                        if (waitingThreads.size() != expWaitingCount) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/waitingThreads\/waitingthreads002.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -64,0 +64,5 @@\n+        \/\/ Virtual threads are not supported by GetObjectMonitorUsage.\n+        \/\/ Correct the expected values if the test is executed with\n+        \/\/ JTREG_TEST_THREAD_FACTORY=Virtual.\n+        Thread expOwner = mainThread.isVirtual() ? null : mainThread;\n+        int expEntryCount = mainThread.isVirtual() ? 0 : 1;\n@@ -66,0 +71,3 @@\n+            Thread expNotifyWaiter = runn[i].isVirtual() ? null : runn[i];\n+            int expNotifyWaitingCount = runn[i].isVirtual() ? 0 : 1;\n+\n@@ -95,2 +103,2 @@\n-                check(NUMBER_OF_THREADS + i, syncObject[i], mainThread, 1,\n-                      null, 0, runn[i], 1);\n+                check(NUMBER_OF_THREADS + i, syncObject[i], expOwner, expEntryCount,\n+                      null, 0, expNotifyWaiter, expNotifyWaitingCount);\n@@ -120,1 +128,1 @@\n-                  null, 0, runn[i], 1);\n+                  null, 0, expNotifyWaiter, expNotifyWaitingCount);\n@@ -150,0 +158,8 @@\n+        \/\/ Virtual threads are not supported by GetObjectMonitorUsage.\n+        \/\/ Correct the expected values if the test is executed with\n+        \/\/ JTREG_TEST_THREAD_FACTORY=Virtual.\n+        Thread expOwner = this.isVirtual() ? null : this;\n+        Thread expNotifyWaiter = mainThread.isVirtual() ? null : mainThread;\n+        int expEntryCount = this.isVirtual() ? 0 : 1;\n+        int expNotifyWaitingCount = mainThread.isVirtual() ? 0 : 1;\n+\n@@ -169,2 +185,2 @@\n-            objmonusage001.check(index, syncObject, this, 1,\n-                                 null, 0, mainThread, 1);\n+            objmonusage001.check(index, syncObject, expOwner, expEntryCount,\n+                                 null, 0, expNotifyWaiter, expNotifyWaitingCount);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage001.java","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,6 @@\n+            \/\/ Virtual threads are not supported by GetObjectMonitorUsage.\n+            \/\/ Correct the expected values if the test is executed with\n+            \/\/ JTREG_TEST_THREAD_FACTORY=Virtual.\n+            Thread expOwner = currThread.isVirtual() ? null : currThread;\n+            int expEntryCount = currThread.isVirtual() ? 0 : 2;\n+\n@@ -64,1 +70,1 @@\n-                check(lockCheck, currThread, 2, 0);\n+                check(lockCheck, expOwner, expEntryCount, 0);\n@@ -66,0 +72,3 @@\n+            expEntryCount = currThread.isVirtual() ? 0 : 1;\n+            int expWaiterCount = 0;\n+\n@@ -68,0 +77,3 @@\n+                if (!thr[i].isVirtual()) {\n+                    expWaiterCount++;\n+                }\n@@ -77,1 +89,1 @@\n-            check(lockCheck, currThread, 1, i + 1);\n+                check(lockCheck, expOwner, expEntryCount, expWaiterCount);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage004.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}