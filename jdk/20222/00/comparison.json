{"files":[{"patch":"@@ -3333,0 +3333,1 @@\n+        Assert.check(!type.hasTag(VOID));\n@@ -3849,1 +3850,1 @@\n-            tree.body = tree.getBodyKind() == BodyKind.EXPRESSION ?\n+            tree.body = !currentRestype.hasTag(VOID) && tree.getBodyKind() == BodyKind.EXPRESSION ?\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8336491\n+ * @summary Verify that void returning expression lambdas don't box their result\n+ * @modules jdk.compiler\n+ *          jdk.jdeps\/com.sun.tools.javap\n+ *\/\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.file.Path;\n+\n+public class VoidReturnBoxing {\n+\n+    public static void main(String[] args) {\n+        new VoidReturnBoxing().run();\n+    }\n+\n+    void run() {\n+        Path path = Path.of(System.getProperty(\"test.classes\"), \"T.class\");\n+        StringWriter s;\n+        String out;\n+        try (PrintWriter pw = new PrintWriter(s = new StringWriter())) {\n+            com.sun.tools.javap.Main.run(new String[] {\"-p\", \"-c\", path.toString()}, pw);\n+            out = s.toString();\n+        }\n+        if (out.contains(\"java\/lang\/Integer.valueOf\")) {\n+            throw new AssertionError(\n+                    \"Unnecessary boxing of void returning expression lambda result:\\n\\n\" + out);\n+        }\n+    }\n+}\n+\n+class T {\n+    int g() {\n+        return 0;\n+    }\n+\n+    Runnable r = () -> g();\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/VoidReturnBoxing.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}