{"files":[{"patch":"@@ -1002,1 +1002,1 @@\n-      MetaspaceShared::report_loading_error();\n+      MetaspaceShared::report_loading_error(\"\");\n","filename":"src\/hotspot\/share\/cds\/aotClassLocation.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -650,6 +650,0 @@\n-  if (!is_using_archive()) {\n-    \/\/ During JDK build when dumping a classlist (DumpLoadedClassList), exclude error\n-    \/\/ message from the classlist as it interferes with the default CDS archive creation.\n-    return true;\n-  }\n-\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1432,2 +1432,4 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"CDS archive has aot-linked classes but the archived \"\n-                                                   \"heap objects cannot be loaded. Try increasing your heap size.\");\n+      log_error(cds)(\"%s has aot-linked classes but the archived \"\n+                     \"heap objects cannot be loaded. Try increasing your heap size.\",\n+                     CDSConfig::type_of_archive_being_loaded());\n+      MetaspaceShared::unrecoverable_loading_error();\n@@ -1795,0 +1797,1 @@\n+    const char* archive_type = CDSConfig::type_of_archive_being_loaded();\n@@ -1797,1 +1800,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\",\n+                     archive_type);\n@@ -1801,1 +1805,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\",\n+                     archive_type);\n@@ -1805,1 +1810,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when archived full module graph is not used.\",\n+                     archive_type);\n@@ -1811,1 +1817,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\", prop);\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\",\n+                     archive_type, prop);\n@@ -1817,1 +1824,1 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used with JDWP agent\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used with JDWP agent\", archive_type);\n@@ -1877,2 +1884,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when the \"\n-                     \"java.system.class.loader property is specified.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when the \"\n+                     \"java.system.class.loader property is specified.\", CDSConfig::type_of_archive_being_loaded());\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -932,1 +932,1 @@\n-      log_info(cds)(\"archivedBootLayer not available, disabling full module graph\");\n+      report_loading_error(\"archivedBootLayer not available, disabling full module graph\");\n@@ -1121,1 +1121,1 @@\n-void MetaspaceShared::report_loading_error(const char* message) {\n+void MetaspaceShared::report_loading_error(const char* format, ...) {\n@@ -1129,1 +1129,1 @@\n-  LogStream& ls = CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n+  LogStream& ls = (!CDSConfig::is_using_archive()) || CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n@@ -1131,3 +1131,11 @@\n-  ls.print_cr(\"An error has occurred while processing the %s.\", CDSConfig::type_of_archive_being_loaded());\n-  if (message != nullptr) {\n-     ls.print(\"%s\", message);\n+  static bool printed_error = false;\n+  if (!printed_error) { \/\/ No need for locks. Loading error checks happen only in main thread.\n+    ls.print_cr(\"An error has occurred while processing the %s. Run with -Xlog:cds for details.\", CDSConfig::type_of_archive_being_loaded());\n+    printed_error = true;\n+  }\n+\n+  if (format != nullptr) {\n+    va_list ap;\n+    va_start(ap, format);\n+    ls.vprint_cr(format, ap);\n+    va_end(ap);\n@@ -1716,2 +1724,2 @@\n-    log_info(cds)(\"Unable to map CDS archive -- core_region_alignment() expected: %zu\"\n-                  \" actual: %zu\", mapinfo->core_region_alignment(), core_region_alignment());\n+    report_loading_error(\"Unable to map CDS archive -- core_region_alignment() expected: %zu\"\n+                         \" actual: %zu\", mapinfo->core_region_alignment(), core_region_alignment());\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  static void report_loading_error(const char* message = nullptr);\n+  static void report_loading_error(const char* format, ...);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -610,1 +610,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n@@ -615,1 +615,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n@@ -618,1 +618,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n@@ -624,1 +624,1 @@\n-    log_info(cds)(\"Disabling optimized module handling\");\n+    MetaspaceShared::report_loading_error(\"Disabling optimized module handling\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -69,1 +69,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -74,1 +74,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -78,1 +78,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -81,1 +81,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -94,1 +94,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -135,1 +135,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n@@ -153,1 +153,1 @@\n-                                \"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+                                \"shared archive file has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTClassLinkingVMOptions.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+            final String archiveType = (args[0].equals(\"AOT\")) ? \"AOT cache\" : \"shared archive file\";\n@@ -120,1 +121,1 @@\n-            out.shouldContain(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+            out.shouldContain(archiveType + \" has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-            out.shouldContain(\"CDS archive has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n+            out.shouldContain(\"shared archive file has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/CFLH\/ClassFileLoadHookTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}