{"files":[{"patch":"@@ -1002,0 +1002,1 @@\n+      MetaspaceShared::report_loading_error();\n","filename":"src\/hotspot\/share\/cds\/aotClassLocation.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -649,0 +649,14 @@\n+bool CDSConfig::is_using_only_default_archive() {\n+  if (!is_using_archive()) {\n+    \/\/ During JDK build when dumping a classlist (DumpLoadedClassList), exclude error\n+    \/\/ message from the classlist as it interferes with the default CDS archive creation.\n+    return true;\n+  }\n+\n+  return is_using_archive() &&\n+         input_static_archive_path() != nullptr &&\n+         default_archive_path() != nullptr &&\n+         strcmp(input_static_archive_path(), default_archive_path()) == 0 &&\n+         input_dynamic_archive_path() == nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+  static bool is_using_only_default_archive()                NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-    log_info(cds)(\"optimized module handling: disabled because extra module path(s) are specified\");\n+    MetaspaceShared::report_loading_error(\"optimized module handling: disabled because extra module path(s) are specified\");\n@@ -1256,1 +1256,1 @@\n-    log_info(cds)(\"failed to map relocation bitmap\");\n+    MetaspaceShared::report_loading_error(\"failed to map relocation bitmap\");\n@@ -1418,1 +1418,1 @@\n-        log_info(cds)(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n+        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n@@ -1420,1 +1420,1 @@\n-        log_info(cds)(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n+        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n@@ -1599,1 +1599,1 @@\n-    log_info(cds)(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n+    MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n@@ -1634,1 +1634,1 @@\n-      log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      MetaspaceShared::report_loading_error(\"UseSharedSpaces: mapped heap region is corrupt\");\n@@ -1658,1 +1658,1 @@\n-      log_info(cds)(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n+      MetaspaceShared::report_loading_error(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n@@ -1771,1 +1771,1 @@\n-    log_info(cds)(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n+    MetaspaceShared::report_loading_error(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n@@ -1777,1 +1777,1 @@\n-      log_info(cds)(\"Loading static archive failed.\");\n+      MetaspaceShared::report_loading_error(\"Loading static archive failed.\");\n@@ -1780,1 +1780,1 @@\n-      log_info(cds)(\"Loading dynamic archive failed.\");\n+      MetaspaceShared::report_loading_error(\"Loading dynamic archive failed.\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1110,4 +1110,1 @@\n-  log_error(cds)(\"An error has occurred while processing the %s.\", CDSConfig::type_of_archive_being_loaded());\n-  if (message != nullptr) {\n-    log_error(cds)(\"%s\", message);\n-  }\n+  report_loading_error(message);\n@@ -1124,0 +1121,16 @@\n+void MetaspaceShared::report_loading_error(const char* message) {\n+  \/\/ If the user doesn't specify any CDS options, we will try to load the default CDS archive, which\n+  \/\/ may fail due to incompatible VM options. Print at the info level to avoid excessive verbosity.\n+  \/\/ However, if the user has specified a CDS archive (or AOT cache), they would be interested in\n+  \/\/ knowing that the loading fails, so we print at the error level.\n+  Log(cds) log;\n+  LogStream ls_error(log.error());\n+  LogStream ls_info(log.info());\n+  LogStream& ls = CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n+\n+  ls.print_cr(\"An error has occurred while processing the %s.\", CDSConfig::type_of_archive_being_loaded());\n+  if (message != nullptr) {\n+     ls.print(\"%s\", message);\n+  }\n+}\n+\n@@ -1185,1 +1198,0 @@\n-    log_info(cds)(\"Unable to map shared spaces\");\n@@ -1188,2 +1200,6 @@\n-    } else if (RequireSharedSpaces) {\n-      MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+    } else {\n+      if (RequireSharedSpaces) {\n+        MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+      } else {\n+        report_loading_error(\"Unable to map shared spaces\");\n+      }\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+  static void report_loading_error(const char* message = nullptr);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+    public static final String errMsg = \"An error has occurred while processing the shared archive file.\";\n@@ -173,0 +174,1 @@\n+        output.shouldContain(errMsg);\n@@ -197,0 +199,1 @@\n+        output.shouldContain(errMsg);\n@@ -240,1 +243,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n@@ -246,1 +249,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n@@ -252,1 +255,1 @@\n-        testAndCheck(verifyExecArgs, \"The shared archive file has been truncated.\");\n+        testAndCheck(verifyExecArgs, \"The shared archive file has been truncated.\", errMsg);\n@@ -259,1 +262,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+        String errMsg = \"An error has occurred while processing the shared archive file.\";\n@@ -78,1 +79,1 @@\n-          .assertNormalExit(topArchiveMsg);\n+          .assertNormalExit(topArchiveMsg, errMsg);\n@@ -87,1 +88,1 @@\n-          .assertNormalExit(topArchiveMsg, mismatchMsg, hintMsg);\n+          .assertNormalExit(topArchiveMsg, mismatchMsg, hintMsg, errMsg);\n@@ -99,0 +100,1 @@\n+                  .shouldContain(errMsg)\n@@ -114,0 +116,1 @@\n+              output.shouldContain(errMsg);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/WrongTopClasspath.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}