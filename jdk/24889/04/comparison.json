{"files":[{"patch":"@@ -1002,0 +1002,1 @@\n+      MetaspaceShared::report_loading_error(nullptr);\n","filename":"src\/hotspot\/share\/cds\/aotClassLocation.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -649,0 +649,8 @@\n+bool CDSConfig::is_using_only_default_archive() {\n+  return is_using_archive() &&\n+         input_static_archive_path() != nullptr &&\n+         default_archive_path() != nullptr &&\n+         strcmp(input_static_archive_path(), default_archive_path()) == 0 &&\n+         input_dynamic_archive_path() == nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+  static bool is_using_only_default_archive()                NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-    log_info(cds)(\"optimized module handling: disabled because extra module path(s) are specified\");\n+    MetaspaceShared::report_loading_error(\"optimized module handling: disabled because extra module path(s) are specified\");\n@@ -1256,1 +1256,1 @@\n-    log_info(cds)(\"failed to map relocation bitmap\");\n+    MetaspaceShared::report_loading_error(\"failed to map relocation bitmap\");\n@@ -1418,1 +1418,1 @@\n-        log_info(cds)(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n+        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n@@ -1420,1 +1420,1 @@\n-        log_info(cds)(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n+        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n@@ -1432,2 +1432,4 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"CDS archive has aot-linked classes but the archived \"\n-                                                   \"heap objects cannot be loaded. Try increasing your heap size.\");\n+      log_error(cds)(\"%s has aot-linked classes but the archived \"\n+                     \"heap objects cannot be loaded. Try increasing your heap size.\",\n+                     CDSConfig::type_of_archive_being_loaded());\n+      MetaspaceShared::unrecoverable_loading_error();\n@@ -1599,1 +1601,1 @@\n-    log_info(cds)(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n+    MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n@@ -1634,1 +1636,1 @@\n-      log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      MetaspaceShared::report_loading_error(\"UseSharedSpaces: mapped heap region is corrupt\");\n@@ -1658,1 +1660,1 @@\n-      log_info(cds)(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n+      MetaspaceShared::report_loading_error(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n@@ -1771,1 +1773,1 @@\n-    log_info(cds)(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n+    MetaspaceShared::report_loading_error(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n@@ -1777,1 +1779,1 @@\n-      log_info(cds)(\"Loading static archive failed.\");\n+      MetaspaceShared::report_loading_error(\"Loading static archive failed.\");\n@@ -1780,1 +1782,1 @@\n-      log_info(cds)(\"Loading dynamic archive failed.\");\n+      MetaspaceShared::report_loading_error(\"Loading dynamic archive failed.\");\n@@ -1795,0 +1797,1 @@\n+    const char* archive_type = CDSConfig::type_of_archive_being_loaded();\n@@ -1797,1 +1800,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\",\n+                     archive_type);\n@@ -1801,1 +1805,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\",\n+                     archive_type);\n@@ -1805,1 +1810,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when archived full module graph is not used.\",\n+                     archive_type);\n@@ -1811,1 +1817,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\", prop);\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\",\n+                     archive_type, prop);\n@@ -1817,1 +1824,1 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used with JDWP agent\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used with JDWP agent\", archive_type);\n@@ -1877,2 +1884,2 @@\n-      log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used when the \"\n-                     \"java.system.class.loader property is specified.\");\n+      log_error(cds)(\"%s has aot-linked classes. It cannot be used when the \"\n+                     \"java.system.class.loader property is specified.\", CDSConfig::type_of_archive_being_loaded());\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":26,"deletions":19,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -932,1 +932,1 @@\n-      log_info(cds)(\"archivedBootLayer not available, disabling full module graph\");\n+      report_loading_error(\"archivedBootLayer not available, disabling full module graph\");\n@@ -1110,4 +1110,1 @@\n-  log_error(cds)(\"An error has occurred while processing the %s.\", CDSConfig::type_of_archive_being_loaded());\n-  if (message != nullptr) {\n-    log_error(cds)(\"%s\", message);\n-  }\n+  report_loading_error(message);\n@@ -1124,0 +1121,24 @@\n+void MetaspaceShared::report_loading_error(const char* format, ...) {\n+  \/\/ If the user doesn't specify any CDS options, we will try to load the default CDS archive, which\n+  \/\/ may fail due to incompatible VM options. Print at the info level to avoid excessive verbosity.\n+  \/\/ However, if the user has specified a CDS archive (or AOT cache), they would be interested in\n+  \/\/ knowing that the loading fails, so we print at the error level.\n+  Log(cds) log;\n+  LogStream ls_error(log.error());\n+  LogStream ls_info(log.info());\n+  LogStream& ls = (!CDSConfig::is_using_archive()) || CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n+\n+  static bool printed_error = false;\n+  if (!printed_error) { \/\/ No need for locks. Loading error checks happen only in main thread.\n+    ls.print_cr(\"An error has occurred while processing the %s. Run with -Xlog:cds for details.\", CDSConfig::type_of_archive_being_loaded());\n+    printed_error = true;\n+  }\n+\n+  if (format != nullptr) {\n+    va_list ap;\n+    va_start(ap, format);\n+    ls.vprint_cr(format, ap);\n+    va_end(ap);\n+  }\n+}\n+\n@@ -1185,1 +1206,0 @@\n-    log_info(cds)(\"Unable to map shared spaces\");\n@@ -1188,2 +1208,6 @@\n-    } else if (RequireSharedSpaces) {\n-      MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+    } else {\n+      if (RequireSharedSpaces) {\n+        MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+      } else {\n+        report_loading_error(\"Unable to map shared spaces\");\n+      }\n@@ -1700,2 +1724,2 @@\n-    log_info(cds)(\"Unable to map CDS archive -- core_region_alignment() expected: %zu\"\n-                  \" actual: %zu\", mapinfo->core_region_alignment(), core_region_alignment());\n+    report_loading_error(\"Unable to map CDS archive -- core_region_alignment() expected: %zu\"\n+                         \" actual: %zu\", mapinfo->core_region_alignment(), core_region_alignment());\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":34,"deletions":10,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -112,1 +112,2 @@\n-  static void unrecoverable_loading_error(const char* message = nullptr);\n+  static void unrecoverable_loading_error(const char* message = nullptr) ATTRIBUTE_PRINTF(1, 0);\n+  static void report_loading_error(const char* format, ...) ATTRIBUTE_PRINTF(1, 0);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -610,1 +610,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n@@ -615,1 +615,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n@@ -618,1 +618,1 @@\n-      log_info(cds)(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n+      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n@@ -624,1 +624,1 @@\n-    log_info(cds)(\"Disabling optimized module handling\");\n+    MetaspaceShared::report_loading_error(\"Disabling optimized module handling\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+    public static final String errMsg = \"An error has occurred while processing the shared archive file.\";\n@@ -173,0 +174,1 @@\n+        output.shouldContain(errMsg);\n@@ -197,0 +199,1 @@\n+        output.shouldContain(errMsg);\n@@ -240,1 +243,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n@@ -246,1 +249,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n@@ -252,1 +255,1 @@\n-        testAndCheck(verifyExecArgs, \"The shared archive file has been truncated.\");\n+        testAndCheck(verifyExecArgs, \"The shared archive file has been truncated.\", errMsg);\n@@ -259,1 +262,1 @@\n-        testAndCheck(verifyExecArgs);\n+        testAndCheck(verifyExecArgs, errMsg);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -69,1 +69,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -74,1 +74,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -78,1 +78,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -81,1 +81,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -94,1 +94,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes.\" +\n@@ -135,1 +135,1 @@\n-            .assertAbnormalExit(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+            .assertAbnormalExit(\"shared archive file has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n@@ -153,1 +153,1 @@\n-                                \"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+                                \"shared archive file has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTClassLinkingVMOptions.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+            final String archiveType = (args[0].equals(\"AOT\")) ? \"AOT cache\" : \"shared archive file\";\n@@ -120,1 +121,1 @@\n-            out.shouldContain(\"CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n+            out.shouldContain(archiveType + \" has aot-linked classes. It cannot be used when archived full module graph is not used.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+        String errMsg = \"An error has occurred while processing the shared archive file.\";\n@@ -78,1 +79,1 @@\n-          .assertNormalExit(topArchiveMsg);\n+          .assertNormalExit(topArchiveMsg, errMsg);\n@@ -87,1 +88,1 @@\n-          .assertNormalExit(topArchiveMsg, mismatchMsg, hintMsg);\n+          .assertNormalExit(topArchiveMsg, mismatchMsg, hintMsg, errMsg);\n@@ -99,0 +100,1 @@\n+                  .shouldContain(errMsg)\n@@ -114,0 +116,1 @@\n+              output.shouldContain(errMsg);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/WrongTopClasspath.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-            out.shouldContain(\"CDS archive has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n+            out.shouldContain(\"shared archive file has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/CFLH\/ClassFileLoadHookTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}