{"files":[{"patch":"@@ -53,0 +53,1 @@\n+#include \"utilities\/utf8.hpp\"\n@@ -117,1 +118,1 @@\n-    check_class_name_length(_class_name);\n+    check_class_name(_class_name);\n@@ -459,1 +460,2 @@\n-void ClassListParser::check_class_name_length(const char* class_name) {\n+void ClassListParser::check_class_name(const char* class_name) {\n+  const char* err = nullptr;\n@@ -461,0 +463,8 @@\n+    err = \"class name too long\";\n+  } else {\n+    int len = (int)strlen(class_name);\n+    if (!UTF8::is_legal_utf8((const unsigned char*)class_name, len, \/*version_leq_47*\/false)) {\n+      err = \"class name is not valid UTF8\";\n+    }\n+  }\n+  if (err != nullptr) {\n@@ -462,2 +472,2 @@\n-              \"An error has occurred while processing class list file %s:%d class name too long\\n\",\n-              _classlist_file, _line_no);\n+              \"An error has occurred while processing class list file %s:%d %s\\n\",\n+              _classlist_file, _line_no, err);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-  void check_class_name_length(const char* class_name);\n+  void check_class_name(const char* class_name);\n","filename":"src\/hotspot\/share\/cds\/classListParser.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.FileOutputStream;\n@@ -112,1 +113,3 @@\n-        \/\/ Tests for corner cases in the C++ class LineReader.\n+        \/\/ Tests for corner cases in the C++ class LineReader, or invalid UTF8. These can't\n+        \/\/ be tested with dumpShouldPass\/dumpShouldFail as we need to prepare a special class\n+        \/\/ list file.\n@@ -156,0 +159,13 @@\n+        {\n+            System.out.println(\"TESTCASE A7.4: invalid UTF8 character\");\n+            String classList = \"BadUTF8.classlist\";\n+            try (FileOutputStream fos = new FileOutputStream(classList)) {\n+                byte chars[] = new byte[] { (byte)0xa0, (byte)0xa1, '\\n'};\n+                fos.write(chars);\n+            }\n+            CDSOptions opts = (new CDSOptions())\n+                .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList, \"-Xlog:cds\");\n+            CDSTestUtils.createArchive(opts)\n+                .shouldContain(\"class name is not valid UTF8\")\n+                .shouldHaveExitValue(1);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/ClassListFormatA.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}