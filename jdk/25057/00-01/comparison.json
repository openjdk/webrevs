{"files":[{"patch":"@@ -4,1 +4,1 @@\n-#Format <ISO 3166 country code>\t<currency code>\t<numeric code>\t<default fraction digits>\t<cutover timestamp>\t<new currency code>\t<new numeric code>\t<new default fraction digits>\n+#Format <country code>\t<currency code>\t<numeric code>\t<default fraction digits>\t<cutover timestamp>\t<new currency code>\t<new numeric code>\t<new default fraction digits>\n","filename":"test\/jdk\/java\/util\/Currency\/currencyEnhancedCoverage\/CurrencyList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n- * @run main\/othervm ValidateCurrencyCoverage\n@@ -28,0 +27,1 @@\n+ * @run main\/othervm ValidateCurrencyCoverage\n@@ -90,0 +90,2 @@\n+     * Lines are expected to be tab-delimited with country code, currency code, numeric code,\n+     * and minor unit. Optionally, a future transition date and replacement values can be included.\n@@ -91,1 +93,3 @@\n-     * @return\n+     * @return a list of String arrays, each representing a parsed line with country code,\n+     *         currency code, numeric code, and minor unit\n+     * @throws Exception if an error occurs while reading or parsing the file\n@@ -149,0 +153,1 @@\n+\n@@ -160,1 +165,9 @@\n-     * Validates the locale based currency instance returned.\n+     * Validates the currency instance returned for a given country (Locale) and checks\n+     * it against expected values.\n+     *\n+     * @param country code (e.g., \"US\", \"JP\")\n+     * @param currencyCode for the given country\n+     * @param numericCode\n+     * @param digits\n+     * @param index of a two-letter country code\n+     * @return null if the currency validation passes; otherwise, a failure message indicating the issue\n@@ -187,1 +200,1 @@\n-     * Validates the currencycode based currency instance.\n+     * Validates the currency code-based currency instance.\n@@ -189,1 +202,4 @@\n-     * @return\n+     * @param currencyCode the currency code\n+     * @param numericCode the expected numeric code for the currency\n+     * @param digits the expected default number of fraction digits\n+     * @return null if validation passes; otherwise, a failure message indicating the reason\n","filename":"test\/jdk\/java\/util\/Currency\/currencyEnhancedCoverage\/ValidateCurrencyCoverage.java","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-# Format <ISO 3166 country code>=<currency code>|<numeric code>|<default fraction digits>|<cutover timestamp>\n+# Format <country code>=<currency code>|<numeric code>|<default fraction digits>|<cutover timestamp>\n","filename":"test\/jdk\/java\/util\/Currency\/currencyEnhancedCoverage\/currency.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}