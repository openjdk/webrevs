{"files":[{"patch":"@@ -640,1 +640,1 @@\n-https:\/\/sleef.org\/) is optional. But it will provide performance enhancement\n+https:\/\/sleef.org\/) is optional, but it will provide performance enhancement\n","filename":"doc\/building.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -992,3 +992,3 @@\n-  # for SVE. Set SVE_CFLAGS to -march=armv8-a+sve if it does. Empty otherwise.\n-  # ACLE and this flag are required to build the Arm SVE related functions in\n-  # libvmath.\n+  # for SVE. Set SVE_CFLAGS to -march=armv8-a+sve if it does.\n+  # ACLE and this flag are required to build the aarch64 SVE related functions in\n+  # libvectormath.\n","filename":"make\/autoconf\/flags-cflags.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-  $(eval $(call SetupJdkLibrary, BUILD_LIBVMATH, \\\n-      NAME := vmath, \\\n+  $(eval $(call SetupJdkLibrary, BUILD_LIBVECTORMATH, \\\n+      NAME := vectormath, \\\n@@ -46,1 +46,1 @@\n-      vect_math_sve.c_CFLAGS := $(SVE_CFLAGS), \\\n+      vector_math_sve.c_CFLAGS := $(SVE_CFLAGS), \\\n@@ -52,1 +52,1 @@\n-  TARGETS += $(BUILD_LIBVMATH)\n+  TARGETS += $(BUILD_LIBVECTORMATH)\n","filename":"make\/modules\/jdk.incubator.vector\/Lib.gmk","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -8542,1 +8542,1 @@\n-    void* libvmath = nullptr;\n+    void* libvectormath = nullptr;\n@@ -8545,2 +8545,2 @@\n-    if (os::dll_locate_lib(dll_name, sizeof(dll_name), Arguments::get_dll_dir(), \"vmath\")) {\n-      libvmath = os::dll_load(dll_name, ebuf, sizeof ebuf);\n+    if (os::dll_locate_lib(dll_name, sizeof(dll_name), Arguments::get_dll_dir(), \"vectormath\")) {\n+      libvectormath = os::dll_load(dll_name, ebuf, sizeof ebuf);\n@@ -8548,1 +8548,1 @@\n-    if (libvmath != nullptr) {\n+    if (libvectormath != nullptr) {\n@@ -8566,1 +8566,1 @@\n-      log_info(library)(\"Loaded library %s, handle \" INTPTR_FORMAT, JNI_LIB_PREFIX \"vmath\" JNI_LIB_SUFFIX, p2i(libvmath));\n+      log_info(library)(\"Loaded library %s, handle \" INTPTR_FORMAT, JNI_LIB_PREFIX \"vectormath\" JNI_LIB_SUFFIX, p2i(libvectormath));\n@@ -8577,1 +8577,1 @@\n-          StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_SCALABLE][op] = (address)os::dll_lookup(libvmath, ebuf);\n+          StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_SCALABLE][op] = (address)os::dll_lookup(libvectormath, ebuf);\n@@ -8580,1 +8580,1 @@\n-          StubRoutines::_vector_d_math[VectorSupport::VEC_SIZE_SCALABLE][op] = (address)os::dll_lookup(libvmath, ebuf);\n+          StubRoutines::_vector_d_math[VectorSupport::VEC_SIZE_SCALABLE][op] = (address)os::dll_lookup(libvectormath, ebuf);\n@@ -8592,1 +8592,1 @@\n-        StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_64][op] = (address)os::dll_lookup(libvmath, ebuf);\n+        StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_64][op] = (address)os::dll_lookup(libvectormath, ebuf);\n@@ -8595,1 +8595,1 @@\n-        StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_128][op] = (address)os::dll_lookup(libvmath, ebuf);\n+        StubRoutines::_vector_f_math[VectorSupport::VEC_SIZE_128][op] = (address)os::dll_lookup(libvectormath, ebuf);\n@@ -8598,1 +8598,1 @@\n-        StubRoutines::_vector_d_math[VectorSupport::VEC_SIZE_128][op] = (address)os::dll_lookup(libvmath, ebuf);\n+        StubRoutines::_vector_d_math[VectorSupport::VEC_SIZE_128][op] = (address)os::dll_lookup(libvectormath, ebuf);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include <vect_math.h>\n+#include <jni_md.h>\n@@ -28,1 +28,1 @@\n-VMATH_EXPORT                               \\\n+JNIEXPORT                                  \\\n@@ -34,1 +34,1 @@\n-VMATH_EXPORT                                  \\\n+JNIEXPORT                                     \\\n","filename":"src\/jdk.incubator.vector\/linux\/native\/libvectormath\/vector_math_neon.c","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.vector\/linux\/native\/libvmath\/vect_math_neon.c","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-#include <vect_math.h>\n+#include <jni_md.h>\n@@ -28,1 +28,1 @@\n-VMATH_EXPORT                                   \\\n+JNIEXPORT                                      \\\n@@ -34,1 +34,1 @@\n-VMATH_EXPORT                                    \\\n+JNIEXPORT                                       \\\n","filename":"src\/jdk.incubator.vector\/linux\/native\/libvectormath\/vector_math_sve.c","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.vector\/linux\/native\/libvmath\/vect_math_sve.c","status":"renamed"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Arm Limited. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef _VECT_MATH_H_\n-#define _VECT_MATH_H_\n-\n-#ifndef __has_attribute\n-#define __has_attribute(x) 0\n-#endif\n-\n-#ifndef VMATH_EXPORT\n-  #if (defined(__GNUC__) && (__GNUC__ >= 4)) || __has_attribute(visibility)\n-    #define VMATH_EXPORT __attribute__((visibility(\"default\")))\n-  #else\n-    #define VMATH_EXPORT\n-  #endif\n-#endif \/* VMATH_EXPORT *\/\n-\n-#endif \/* _VECT_MATH_H_ *\/\n","filename":"src\/jdk.incubator.vector\/linux\/native\/libvmath\/vect_math.h","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"}]}