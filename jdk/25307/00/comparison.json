{"files":[{"patch":"@@ -250,13 +250,0 @@\n-void JVMCIEnv::check_init(TRAPS) {\n-  if (_init_error == JNI_OK) {\n-    return;\n-  }\n-  if (_init_error == JNI_ENOMEM) {\n-    THROW_MSG(vmSymbols::java_lang_OutOfMemoryError(), \"JNI_ENOMEM creating or attaching to libjvmci\");\n-  }\n-  stringStream st;\n-  st.print(\"Error creating or attaching to libjvmci (err: %d, description: %s)\",\n-           _init_error, _init_error_msg == nullptr ? \"unknown\" : _init_error_msg);\n-  THROW_MSG(vmSymbols::java_lang_OutOfMemoryError(), st.freeze());\n-}\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -246,4 +246,0 @@\n-  \/\/ Checks the value of init_error() and throws an exception in `TRAPS`\n-  \/\/ if it is not JNI_OK.\n-  void check_init(TRAPS);\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -748,1 +748,9 @@\n-  JVMCIENV->check_init(CHECK);\n+  int init_error = JVMCIENV->init_error();\n+  if (init_error != JNI_OK) {\n+    if (PrintCompilation) {\n+      const char* msg = JVMCIENV->init_error_msg();\n+      tty->print_cr(\"COMPILER INIT ERROR: Error creating or attaching to libjvmci (err: %d, description: %s)\",\n+        init_error, msg == nullptr ? \"unknown\" : msg);\n+    }\n+    return;\n+  }\n@@ -1603,2 +1611,3 @@\n-    JVMCIENV->check_init(CHECK);\n-    JVMCIENV->call_HotSpotJVMCIRuntime_bootstrapFinished(_HotSpotJVMCIRuntime_instance, JVMCIENV);\n+    if (JVMCIENV->init_error() == JNI_OK) {\n+      JVMCIENV->call_HotSpotJVMCIRuntime_bootstrapFinished(_HotSpotJVMCIRuntime_instance, JVMCIENV);\n+    }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}