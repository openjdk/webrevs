{"files":[{"patch":"@@ -154,1 +154,1 @@\n-void JVMCI::initialize_compiler(TRAPS) {\n+void JVMCI::initialize_compiler_in_create_vm(TRAPS) {\n@@ -165,1 +165,18 @@\n-  runtime->call_getCompiler(CHECK);\n+\n+  \/\/ Enter a JVMCI env, which will load libjvmci if it's in use\n+  JVMCIENV_FROM_THREAD(THREAD);\n+  int init_error = JVMCIENV->init_error();\n+  if (init_error != JNI_OK) {\n+    if (PrintCompilation) {\n+      const char* msg = JVMCIENV->init_error_msg();\n+      tty->print_cr(\"COMPILER INIT ERROR: Error creating or attaching to libjvmci (err: %d, description: %s)\",\n+        init_error, msg == nullptr ? \"unknown\" : msg);\n+    }\n+    return;\n+  }\n+\n+  \/\/ Failures in the calls below will propagate to the caller\n+  \/\/ and cause VM to exit.\n+  JVMCIObject jvmciRuntime = runtime->get_HotSpotJVMCIRuntime(JVMCI_CHECK);\n+  runtime->initialize(JVMCI_CHECK);\n+  JVMCIENV->call_HotSpotJVMCIRuntime_getCompiler(jvmciRuntime, JVMCI_CHECK);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.cpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -194,3 +194,2 @@\n-  \/\/ Called to force initialization of the JVMCI compiler\n-  \/\/ early in VM startup.\n-  static void initialize_compiler(TRAPS);\n+  \/\/ Called to initialize the JVMCI compiler during VM startup.\n+  static void initialize_compiler_in_create_vm(TRAPS);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -250,13 +250,0 @@\n-void JVMCIEnv::check_init(TRAPS) {\n-  if (_init_error == JNI_OK) {\n-    return;\n-  }\n-  if (_init_error == JNI_ENOMEM) {\n-    THROW_MSG(vmSymbols::java_lang_OutOfMemoryError(), \"JNI_ENOMEM creating or attaching to libjvmci\");\n-  }\n-  stringStream st;\n-  st.print(\"Error creating or attaching to libjvmci (err: %d, description: %s)\",\n-           _init_error, _init_error_msg == nullptr ? \"unknown\" : _init_error_msg);\n-  THROW_MSG(vmSymbols::java_lang_OutOfMemoryError(), st.freeze());\n-}\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -246,4 +246,0 @@\n-  \/\/ Checks the value of init_error() and throws an exception in `TRAPS`\n-  \/\/ if it is not JNI_OK.\n-  void check_init(TRAPS);\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -746,8 +746,0 @@\n-void JVMCIRuntime::call_getCompiler(TRAPS) {\n-  JVMCIENV_FROM_THREAD(THREAD);\n-  JVMCIENV->check_init(CHECK);\n-  JVMCIObject jvmciRuntime = JVMCIRuntime::get_HotSpotJVMCIRuntime(JVMCI_CHECK);\n-  initialize(JVMCI_CHECK);\n-  JVMCIENV->call_HotSpotJVMCIRuntime_getCompiler(jvmciRuntime, JVMCI_CHECK);\n-}\n-\n@@ -1603,2 +1595,3 @@\n-    JVMCIENV->check_init(CHECK);\n-    JVMCIENV->call_HotSpotJVMCIRuntime_bootstrapFinished(_HotSpotJVMCIRuntime_instance, JVMCIENV);\n+    if (JVMCIENV->init_error() == JNI_OK) {\n+      JVMCIENV->call_HotSpotJVMCIRuntime_bootstrapFinished(_HotSpotJVMCIRuntime_instance, JVMCIENV);\n+    }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -376,2 +376,0 @@\n-  void call_getCompiler(TRAPS);\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -838,1 +838,1 @@\n-    JVMCI::initialize_compiler(CHECK_JNI_ERR);\n+    JVMCI::initialize_compiler_in_create_vm(CHECK_JNI_ERR);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}