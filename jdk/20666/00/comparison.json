{"files":[{"patch":"@@ -476,3 +476,3 @@\n-#ifdef STATIC_BUILD\n-    strcat(buf, \"\/lib\");\n-#endif\n+    if (is_vm_statically_linked()) {\n+      strcat(buf, \"\/lib\");\n+    }\n@@ -1096,3 +1096,4 @@\n-#ifdef STATIC_BUILD\n-  return os::get_default_process_handle();\n-#else\n+  if (is_vm_statically_linked()) {\n+    return os::get_default_process_handle();\n+  }\n+\n@@ -1102,1 +1103,0 @@\n-#endif \/\/ STATIC_BUILD\n@@ -1106,3 +1106,4 @@\n-#ifdef STATIC_BUILD\n-  return os::get_default_process_handle();\n-#else\n+  if (is_vm_statically_linked()) {\n+    return os::get_default_process_handle();\n+  }\n+\n@@ -1272,1 +1273,0 @@\n-#endif \/\/ STATIC_BUILD\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+#include \"runtime\/java.hpp\"\n@@ -788,7 +789,7 @@\n-#ifdef STATIC_BUILD\n-  char* p = strrchr(buf, '\/');\n-  *p = '\\0';\n-  strcat(p, \"\/lib\/\");\n-  lib_offset = jvm_offset = (int)strlen(buf);\n-#else\n-  {\n+\n+  if (is_vm_statically_linked()) {\n+    char* p = strrchr(buf, '\/');\n+    *p = '\\0';\n+    strcat(p, \"\/lib\/\");\n+    lib_offset = jvm_offset = (int)strlen(buf);\n+  } else {\n@@ -808,1 +809,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -183,0 +183,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_IsStaticallyLinked(void);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3451,0 +3451,4 @@\n+JVM_ENTRY_NO_ENV(jboolean, JVM_IsStaticallyLinked(void))\n+  return is_vm_statically_linked() ? JNI_TRUE : JNI_FALSE;\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,3 @@\n+\/\/ This is defined in linkType.cpp due to linking restraints\n+extern bool is_vm_statically_linked();\n+\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"runtime\/java.hpp\"\n+\n+\/\/ This is in a separate file since it will need to be compiled to two different\n+\/\/ object files, depending on if we are going to build a static or a dynamic\n+\/\/ library.\n+\n+bool is_vm_statically_linked(void) {\n+#ifdef STATIC_BUILD\n+  return true;\n+#else\n+  return false;\n+#endif\n+}\n","filename":"src\/hotspot\/share\/runtime\/linkType.cpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -431,3 +431,3 @@\n-#ifdef STATIC_BUILD\n-    return JNI_TRUE;\n-#else\n+    if (JLI_IsStaticallyLinked()) {\n+        return JNI_TRUE;\n+    }\n@@ -441,1 +441,0 @@\n-#endif\n@@ -454,10 +453,11 @@\n-#ifdef STATIC_BUILD\n-        char jvm_cfg[MAXPATHLEN];\n-        JLI_Snprintf(jvm_cfg, sizeof(jvm_cfg), \"%s\/lib\/jvm.cfg\", path);\n-        if (access(jvm_cfg, F_OK) == 0) {\n-            return JNI_TRUE;\n-        }\n-#else\n-        JLI_Snprintf(libjava, sizeof(libjava), \"%s\/lib\/\" JAVA_DLL, path);\n-        if (access(libjava, F_OK) == 0) {\n-            return JNI_TRUE;\n+        if (JLI_IsStaticallyLinked()) {\n+            char jvm_cfg[MAXPATHLEN];\n+            JLI_Snprintf(jvm_cfg, sizeof(jvm_cfg), \"%s\/lib\/jvm.cfg\", path);\n+            if (access(jvm_cfg, F_OK) == 0) {\n+                return JNI_TRUE;\n+            }\n+        } else {\n+            JLI_Snprintf(libjava, sizeof(libjava), \"%s\/lib\/\" JAVA_DLL, path);\n+            if (access(libjava, F_OK) == 0) {\n+                return JNI_TRUE;\n+            }\n@@ -465,1 +465,0 @@\n-#endif\n@@ -484,15 +483,17 @@\n-#ifdef STATIC_BUILD\n-    char jvm_cfg[MAXPATHLEN];\n-    char *p = NULL;\n-    strncpy(jvm_cfg, selfInfo.dli_fname, MAXPATHLEN);\n-    p = strrchr(jvm_cfg, '\/'); *p = '\\0';\n-    p = strrchr(jvm_cfg, '\/');\n-    if (strcmp(p, \"\/.\") == 0) {\n-      *p = '\\0';\n-      p = strrchr(jvm_cfg, '\/'); *p = '\\0';\n-    }\n-    else *p = '\\0';\n-    strncpy(path, jvm_cfg, pathsize);\n-    strncat(jvm_cfg, \"\/lib\/jvm.cfg\", MAXPATHLEN);\n-    if (access(jvm_cfg, F_OK) == 0) {\n-      return JNI_TRUE;\n+    if (JLI_IsStaticallyLinked()) {\n+        char jvm_cfg[MAXPATHLEN];\n+        char *p = NULL;\n+        strncpy(jvm_cfg, selfInfo.dli_fname, MAXPATHLEN);\n+        p = strrchr(jvm_cfg, '\/'); *p = '\\0';\n+        p = strrchr(jvm_cfg, '\/');\n+        if (strcmp(p, \"\/.\") == 0) {\n+            *p = '\\0';\n+            p = strrchr(jvm_cfg, '\/'); *p = '\\0';\n+        } else {\n+          *p = '\\0';\n+        }\n+        strncpy(path, jvm_cfg, pathsize);\n+        strncat(jvm_cfg, \"\/lib\/jvm.cfg\", MAXPATHLEN);\n+        if (access(jvm_cfg, F_OK) == 0) {\n+           return JNI_TRUE;\n+        }\n@@ -500,1 +501,0 @@\n-#endif\n@@ -552,5 +552,6 @@\n-#ifndef STATIC_BUILD\n-    libjvm = dlopen(jvmpath, RTLD_NOW + RTLD_GLOBAL);\n-#else\n-    libjvm = dlopen(NULL, RTLD_FIRST);\n-#endif\n+    if (!JLI_IsStaticallyLinked()) {\n+        libjvm = dlopen(jvmpath, RTLD_NOW + RTLD_GLOBAL);\n+    } else {\n+        libjvm = dlopen(NULL, RTLD_FIRST);\n+    }\n+\n@@ -606,2 +607,0 @@\n-\n-#ifdef STATIC_BUILD\n@@ -609,5 +608,6 @@\n-        fptr = (void *)&SetExecname;\n-#else\n-        int (*fptr)();\n-        fptr = (int (*)())dlsym(RTLD_DEFAULT, \"main\");\n-#endif\n+\n+        if (JLI_IsStaticallyLinked()) {\n+            fptr = (void *)&SetExecname;\n+        } else {\n+            fptr = dlsym(RTLD_DEFAULT, \"main\");\n+        }\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":44,"deletions":44,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -116,0 +116,3 @@\n+\/\/ This is defined in link_type.c due to linking restraints\n+jboolean JLI_IsStaticallyLinked();\n+\n","filename":"src\/java.base\/share\/native\/libjli\/jli_util.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+\n+\/\/ This is in a separate file since it will need to be compiled to two different\n+\/\/ object files, depending on if we are going to build a static or a dynamic\n+\/\/ library.\n+\n+jboolean JLI_IsStaticallyLinked(void) {\n+#ifdef STATIC_BUILD\n+  return JNI_TRUE;\n+#else\n+  return JNI_FALSE;\n+#endif\n+}\n","filename":"src\/java.base\/share\/native\/libjli\/link_type.c","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,7 +119,1 @@\n-#ifndef STATIC_BUILD\n-    \/* Get address of this library and the directory containing it. *\/\n-    dladdr((void *)AWT_OnLoad, &dlinfo);\n-    realpath((char *)dlinfo.dli_fname, buf);\n-    len = strlen(buf);\n-    p = strrchr(buf, '\/');\n-#endif\n+\n@@ -132,1 +126,1 @@\n-        tk = LWAWT_PATH;\n+    tk = LWAWT_PATH;\n@@ -134,2 +128,1 @@\n-        tk = XAWT_PATH;\n-#endif\n+    tk = XAWT_PATH;\n@@ -137,1 +130,0 @@\n-#ifndef MACOSX\n@@ -143,4 +135,6 @@\n-#ifndef STATIC_BUILD\n-    \/* Calculate library name to load *\/\n-    strncpy(p, tk, MAXPATHLEN-len-1);\n-#endif\n+    if (!JVM_IsStaticallyLinked()) {\n+        \/* Get address of this library and the directory containing it. *\/\n+        dladdr((void *)AWT_OnLoad, &dlinfo);\n+        realpath((char *)dlinfo.dli_fname, buf);\n+        len = strlen(buf);\n+        p = strrchr(buf, '\/');\n@@ -148,6 +142,11 @@\n-#ifndef STATIC_BUILD\n-    jstring jbuf = JNU_NewStringPlatform(env, buf);\n-    CHECK_EXCEPTION_FATAL(env, \"Could not allocate library name\");\n-    JNU_CallStaticMethodByName(env, NULL, \"java\/lang\/System\", \"load\",\n-                               \"(Ljava\/lang\/String;)V\",\n-                               jbuf);\n+        \/* Calculate library name to load *\/\n+        strncpy(p, tk, MAXPATHLEN-len-1);\n+\n+        jstring jbuf = JNU_NewStringPlatform(env, buf);\n+        CHECK_EXCEPTION_FATAL(env, \"Could not allocate library name\");\n+        JNU_CallStaticMethodByName(env, NULL, \"java\/lang\/System\", \"load\",\n+                                   \"(Ljava\/lang\/String;)V\",\n+                                   jbuf);\n+\n+        awtHandle = dlopen(buf, RTLD_LAZY | RTLD_GLOBAL);\n+    }\n@@ -155,2 +154,0 @@\n-    awtHandle = dlopen(buf, RTLD_LAZY | RTLD_GLOBAL);\n-#endif\n","filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c","additions":21,"deletions":24,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"jvm.h\"\n@@ -124,1 +125,5 @@\n-#ifndef STATIC_BUILD\n+\n+    if (JVM_IsStaticallyLinked()) {\n+        return (dbgsysLoadLibrary(NULL, buf, sizeof(buf)));\n+    }\n+\n@@ -148,3 +153,0 @@\n-#else\n-    return (dbgsysLoadLibrary(NULL, buf, sizeof(buf)));\n-#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/transport.c","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}