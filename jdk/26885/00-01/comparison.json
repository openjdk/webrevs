{"files":[{"patch":"@@ -204,1 +204,0 @@\n-            \/\/\"#type #name = \", type.con(), \";\\n\"\n","filename":"test\/hotspot\/jtreg\/compiler\/igvn\/ExpressionFuzzer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * argument types, and an result with a specified result type. Once can {@link #make} a new\n+ * argument types, and a result with a specified result type. Once can {@link #make} a new\n@@ -358,1 +358,1 @@\n-        tokens.add(strings.get(strings.size()-1));\n+        tokens.add(strings.getLast());\n@@ -380,1 +380,1 @@\n-        sb.append(this.strings.get(this.strings.size()-1));\n+        sb.append(this.strings.getLast());\n@@ -465,1 +465,1 @@\n-        newStrings.add(nestingExpression.strings.get(nestingExpression.strings.size() - 1) +\n+        newStrings.add(nestingExpression.strings.getLast() +\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/Expression.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,7 +61,7 @@\n-        ops.add(Expression.make(BYTES, \"(byte)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", INTS,     \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(BYTES, \"(byte)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", INTS,    \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(BYTES, \"(byte)(\", DOUBLES, \")\"));\n@@ -75,4 +75,4 @@\n-        ops.add(Expression.make(INTS, \"Byte.compare(\", BYTES, \", \", BYTES, \")\"));\n-        ops.add(Expression.make(INTS, \"Byte.compareUnsigned(\", BYTES, \", \", BYTES, \")\"));\n-        ops.add(Expression.make(INTS, \"Byte.toUnsignedInt(\", BYTES, \")\"));\n-        ops.add(Expression.make(LONGS, \"Byte.toUnsignedLong(\", BYTES, \")\"));\n+        ops.add(Expression.make(INTS,  \"Byte.compare(\",         BYTES, \", \", BYTES, \")\"));\n+        ops.add(Expression.make(INTS,  \"Byte.compareUnsigned(\", BYTES, \", \", BYTES, \")\"));\n+        ops.add(Expression.make(INTS,  \"Byte.toUnsignedInt(\",   BYTES, \")\"));\n+        ops.add(Expression.make(LONGS, \"Byte.toUnsignedLong(\",  BYTES, \")\"));\n@@ -81,7 +81,7 @@\n-        ops.add(Expression.make(CHARS, \"(char)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", INTS,     \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(CHARS, \"(char)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", INTS,    \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(CHARS, \"(char)(\", DOUBLES, \")\"));\n@@ -95,1 +95,1 @@\n-        ops.add(Expression.make(INTS, \"Character.compare(\", CHARS, \", \", CHARS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Character.compare(\",      CHARS, \", \", CHARS, \")\"));\n@@ -99,7 +99,7 @@\n-        ops.add(Expression.make(SHORTS, \"(short)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", INTS,     \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(SHORTS, \"(short)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", INTS,    \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(SHORTS, \"(short)(\", DOUBLES, \")\"));\n@@ -113,5 +113,5 @@\n-        ops.add(Expression.make(INTS, \"Short.compare(\", SHORTS, \", \", SHORTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Short.compareUnsigned(\", SHORTS, \", \", SHORTS, \")\"));\n-        ops.add(Expression.make(SHORTS, \"Short.reverseBytes(\", SHORTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Short.toUnsignedInt(\", SHORTS, \")\"));\n-        ops.add(Expression.make(LONGS, \"Short.toUnsignedLong(\", SHORTS, \")\"));\n+        ops.add(Expression.make(INTS,   \"Short.compare(\",         SHORTS, \", \", SHORTS, \")\"));\n+        ops.add(Expression.make(INTS,   \"Short.compareUnsigned(\", SHORTS, \", \", SHORTS, \")\"));\n+        ops.add(Expression.make(SHORTS, \"Short.reverseBytes(\",    SHORTS, \")\"));\n+        ops.add(Expression.make(INTS,   \"Short.toUnsignedInt(\",   SHORTS, \")\"));\n+        ops.add(Expression.make(LONGS,  \"Short.toUnsignedLong(\",  SHORTS, \")\"));\n@@ -120,7 +120,7 @@\n-        ops.add(Expression.make(INTS, \"(int)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", INTS,     \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(INTS, \"(int)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", INTS,    \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(INTS, \"(int)(\", DOUBLES, \")\"));\n@@ -133,5 +133,5 @@\n-        ops.add(Expression.make(INTS, \"(\", INTS, \" + \",   INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"(\", INTS, \" - \",   INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"(\", INTS, \" * \",   INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"(\", INTS, \" \/ \",   INTS, \")\", withArithmeticException));\n-        ops.add(Expression.make(INTS, \"(\", INTS, \" % \",   INTS, \")\", withArithmeticException));\n+        ops.add(Expression.make(INTS, \"(\", INTS, \" + \", INTS, \")\"));\n+        ops.add(Expression.make(INTS, \"(\", INTS, \" - \", INTS, \")\"));\n+        ops.add(Expression.make(INTS, \"(\", INTS, \" * \", INTS, \")\"));\n+        ops.add(Expression.make(INTS, \"(\", INTS, \" \/ \", INTS, \")\", withArithmeticException));\n+        ops.add(Expression.make(INTS, \"(\", INTS, \" % \", INTS, \")\", withArithmeticException));\n@@ -149,6 +149,6 @@\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" == \",   INTS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" != \",   INTS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" > \",    INTS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" < \",    INTS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" >= \",   INTS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" <= \",   INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" == \", INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" != \", INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" > \",  INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" < \",  INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" >= \", INTS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", INTS, \" <= \", INTS, \")\"));\n@@ -157,19 +157,19 @@\n-        ops.add(Expression.make(INTS, \"Integer.bitCount(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.compare(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.compareUnsigned(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.compress(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.divideUnsigned(\", INTS, \", \", INTS, \")\", withArithmeticException));\n-        ops.add(Expression.make(INTS, \"Integer.expand(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.highestOneBit(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.lowestOneBit(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.max(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.min(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.numberOfLeadingZeros(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.numberOfTrailingZeros(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.remainderUnsigned(\", INTS, \", \", INTS, \")\", withArithmeticException));\n-        ops.add(Expression.make(INTS, \"Integer.reverse(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.reverseBytes(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.rotateLeft(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.rotateRight(\", INTS, \", \", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.signum(\", INTS, \")\"));\n-        ops.add(Expression.make(INTS, \"Integer.sum(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.bitCount(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.compare(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.compareUnsigned(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.compress(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.divideUnsigned(\", INTS, \", \", INTS, \")\", withArithmeticException));\n+        ops.add(Expression.make(INTS,  \"Integer.expand(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.highestOneBit(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.lowestOneBit(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.max(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.min(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.numberOfLeadingZeros(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.numberOfTrailingZeros(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.remainderUnsigned(\", INTS, \", \", INTS, \")\", withArithmeticException));\n+        ops.add(Expression.make(INTS,  \"Integer.reverse(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.reverseBytes(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.rotateLeft(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.rotateRight(\", INTS, \", \", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.signum(\", INTS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Integer.sum(\", INTS, \", \", INTS, \")\"));\n@@ -179,7 +179,7 @@\n-        ops.add(Expression.make(LONGS, \"(long)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", INTS,     \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(LONGS, \"(long)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", INTS,    \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(LONGS, \"(long)(\", DOUBLES, \")\"));\n@@ -192,5 +192,5 @@\n-        ops.add(Expression.make(LONGS, \"(\", LONGS, \" + \",   LONGS, \")\"));\n-        ops.add(Expression.make(LONGS, \"(\", LONGS, \" - \",   LONGS, \")\"));\n-        ops.add(Expression.make(LONGS, \"(\", LONGS, \" * \",   LONGS, \")\"));\n-        ops.add(Expression.make(LONGS, \"(\", LONGS, \" \/ \",   LONGS, \")\", withArithmeticException));\n-        ops.add(Expression.make(LONGS, \"(\", LONGS, \" % \",   LONGS, \")\", withArithmeticException));\n+        ops.add(Expression.make(LONGS, \"(\", LONGS, \" + \", LONGS, \")\"));\n+        ops.add(Expression.make(LONGS, \"(\", LONGS, \" - \", LONGS, \")\"));\n+        ops.add(Expression.make(LONGS, \"(\", LONGS, \" * \", LONGS, \")\"));\n+        ops.add(Expression.make(LONGS, \"(\", LONGS, \" \/ \", LONGS, \")\", withArithmeticException));\n+        ops.add(Expression.make(LONGS, \"(\", LONGS, \" % \", LONGS, \")\", withArithmeticException));\n@@ -208,6 +208,6 @@\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" == \",   LONGS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" != \",   LONGS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" > \",    LONGS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" < \",    LONGS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" >= \",   LONGS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" <= \",   LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" == \", LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" != \", LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" > \",  LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" < \",  LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" >= \", LONGS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", LONGS, \" <= \", LONGS, \")\"));\n@@ -216,3 +216,3 @@\n-        ops.add(Expression.make(INTS, \"Long.bitCount(\", LONGS, \")\"));\n-        ops.add(Expression.make(INTS, \"Long.compare(\", LONGS, \", \", LONGS, \")\"));\n-        ops.add(Expression.make(INTS, \"Long.compareUnsigned(\", LONGS, \", \", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.bitCount(\", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.compare(\", LONGS, \", \", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.compareUnsigned(\", LONGS, \", \", LONGS, \")\"));\n@@ -226,2 +226,2 @@\n-        ops.add(Expression.make(INTS, \"Long.numberOfLeadingZeros(\", LONGS, \")\"));\n-        ops.add(Expression.make(INTS, \"Long.numberOfTrailingZeros(\", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.numberOfLeadingZeros(\", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.numberOfTrailingZeros(\", LONGS, \")\"));\n@@ -233,1 +233,1 @@\n-        ops.add(Expression.make(INTS, \"Long.signum(\", LONGS, \")\"));\n+        ops.add(Expression.make(INTS,  \"Long.signum(\", LONGS, \")\"));\n@@ -237,7 +237,7 @@\n-        ops.add(Expression.make(FLOATS, \"(float)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", INTS,     \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(FLOATS, \"(float)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", INTS,    \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(FLOATS, \"(float)(\", DOUBLES, \")\"));\n@@ -250,5 +250,5 @@\n-        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" + \",   FLOATS, \")\"));\n-        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" - \",   FLOATS, \")\"));\n-        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" * \",   FLOATS, \")\"));\n-        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" \/ \",   FLOATS, \")\"));\n-        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" % \",   FLOATS, \")\"));\n+        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" + \", FLOATS, \")\"));\n+        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" - \", FLOATS, \")\"));\n+        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" * \", FLOATS, \")\"));\n+        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" \/ \", FLOATS, \")\"));\n+        ops.add(Expression.make(FLOATS, \"(\", FLOATS, \" % \", FLOATS, \")\"));\n@@ -280,7 +280,7 @@\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", BYTES,    \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", SHORTS,   \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", CHARS,    \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", INTS,     \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", LONGS,    \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", FLOATS,   \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(double)(\", DOUBLES,  \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", BYTES,   \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", SHORTS,  \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", CHARS,   \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", INTS,    \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", LONGS,   \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", FLOATS,  \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(double)(\", DOUBLES, \")\"));\n@@ -293,5 +293,5 @@\n-        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" + \",   DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" - \",   DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" * \",   DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" \/ \",   DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" % \",   DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" + \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" - \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" * \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" \/ \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES, \"(\", DOUBLES, \" % \", DOUBLES, \")\"));\n@@ -308,3 +308,2 @@\n-        ops.add(Expression.make(INTS, \"Double.compare(\", DOUBLES, \", \", DOUBLES, \")\"));\n-        ops.add(Expression.make(LONGS, \"Double.doubleToLongBits(\", DOUBLES, \")\"));\n-        ops.add(Expression.make(LONGS, \"Double.doubleToRawLongBits(\", DOUBLES, \")\", withNondeterministicResult));\n+        ops.add(Expression.make(INTS,     \"Double.compare(\", DOUBLES, \", \", DOUBLES, \")\"));\n+        ops.add(Expression.make(LONGS,    \"Double.doubleToLongBits(\", DOUBLES, \")\"));\n@@ -312,1 +311,2 @@\n-        ops.add(Expression.make(DOUBLES, \"Double.longBitsToDouble(\", LONGS, \")\"));\n+        ops.add(Expression.make(LONGS,    \"Double.doubleToRawLongBits(\", DOUBLES, \")\", withNondeterministicResult));\n+        ops.add(Expression.make(DOUBLES,  \"Double.longBitsToDouble(\", LONGS, \")\"));\n@@ -316,3 +316,3 @@\n-        ops.add(Expression.make(DOUBLES, \"Double.max(\", DOUBLES, \", \", DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"Double.min(\", DOUBLES, \", \", DOUBLES, \")\"));\n-        ops.add(Expression.make(DOUBLES, \"Double.sum(\", DOUBLES, \", \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES,  \"Double.max(\", DOUBLES, \", \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES,  \"Double.min(\", DOUBLES, \", \", DOUBLES, \")\"));\n+        ops.add(Expression.make(DOUBLES,  \"Double.sum(\", DOUBLES, \", \", DOUBLES, \")\"));\n@@ -329,3 +329,3 @@\n-        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" || \",   BOOLEANS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" && \",   BOOLEANS, \")\"));\n-        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" ^ \",   BOOLEANS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" || \", BOOLEANS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" && \", BOOLEANS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"(\", BOOLEANS, \" ^ \",  BOOLEANS, \")\"));\n@@ -334,1 +334,1 @@\n-        ops.add(Expression.make(INTS, \"Boolean.compare(\", BOOLEANS, \", \", BOOLEANS, \")\"));\n+        ops.add(Expression.make(INTS,     \"Boolean.compare(\",    BOOLEANS, \", \", BOOLEANS, \")\"));\n@@ -336,1 +336,1 @@\n-        ops.add(Expression.make(BOOLEANS, \"Boolean.logicalOr(\", BOOLEANS, \", \", BOOLEANS, \")\"));\n+        ops.add(Expression.make(BOOLEANS, \"Boolean.logicalOr(\",  BOOLEANS, \", \", BOOLEANS, \")\"));\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/Operations.java","additions":128,"deletions":128,"binary":false,"changes":256,"status":"modified"}]}