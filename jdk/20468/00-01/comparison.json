{"files":[{"patch":"@@ -64,0 +64,9 @@\n+class ArchiveHeapWriterConsts : AllStatic {\n+public:\n+  \/\/ The minimum region size of all collectors that are supported by CDS.\n+  \/\/ Currently only G1 is supported. G1's region size depends on -Xmx,\n+  \/\/ but can never be smaller than 1 * M.\n+  \/\/ (TODO: Perhaps change to 256K to be compatible with Shenandoah)\n+  static constexpr int MIN_GC_REGION_ALIGNMENT = 1 * M;\n+};\n+\n@@ -65,1 +74,1 @@\n-class ArchiveHeapWriter : AllStatic {\n+class ArchiveHeapWriter : ArchiveHeapWriterConsts {\n@@ -115,6 +124,0 @@\n-  \/\/ The minimum region size of all collectors that are supported by CDS.\n-  \/\/ Currently only G1 is supported. G1's region size depends on -Xmx,\n-  \/\/ but can never be smaller than 1 * M.\n-  \/\/ (TODO: Perhaps change to 256K to be compatible with Shenandoah)\n-  static constexpr int MIN_GC_REGION_ALIGNMENT = 1 * M;\n-\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2523,1 +2523,1 @@\n-  if (ShenandoahHeapRegion::region_size_bytes() < ArchiveHeapWriter::MIN_GC_REGION_ALIGNMENT) {\n+  if (ShenandoahHeapRegion::region_size_bytes() < ArchiveHeapWriterConsts::MIN_GC_REGION_ALIGNMENT) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}