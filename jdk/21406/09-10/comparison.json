{"files":[{"patch":"@@ -99,2 +99,2 @@\n-  __ mov_metadata(t0, method->holder()->constant_encoding());\n-  __ clinit_barrier(t0, t1, &L_skip_barrier \/* L_fast_path *\/);\n+  __ mov_metadata(t1, method->holder()->constant_encoding());\n+  __ clinit_barrier(t1, t0, &L_skip_barrier \/* L_fast_path *\/);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1421,2 +1421,2 @@\n-    __ mov_metadata(t0, C->method()->holder()->constant_encoding());\n-    __ clinit_barrier(t0, t1, &L_skip_barrier);\n+    __ mov_metadata(t1, C->method()->holder()->constant_encoding());\n+    __ clinit_barrier(t1, t0, &L_skip_barrier);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,0 @@\n-  const Register tmp = t2;  \/\/ A call-clobbered register not used for arg passing\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -163,0 +163,7 @@\n+  \/\/ Real entry arguments:\n+  \/\/  t0: CompiledICData\n+  \/\/  j_rarg0: Receiver\n+  \/\/ Make sure the move of CompiledICData from t0 to t1 is the frist thing that happens.\n+  \/\/ Otherwise we risk clobber t0 as it is used as scratch.\n+  __ mv(t1, t0);\n+\n@@ -173,2 +180,2 @@\n-  \/\/ Entry arguments:\n-  \/\/  t0: CompiledICData\n+  \/\/ Arguments from this point:\n+  \/\/  t1 (moved from t0): CompiledICData\n@@ -184,1 +191,1 @@\n-  const Register icdata_reg         = t0;\n+  const Register icdata_reg         = t1;\n","filename":"src\/hotspot\/cpu\/riscv\/vtableStubs_riscv.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}