[{"commit":{"message":"Revert all the changes not related to the bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"19e782c6189e3df68c9a3ebfc6bd8ee5934ee67e"},{"commit":{"message":"Simplify pace_for_alloc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"494d4782e260aa73fe3b05e4539f070d61533471"},{"commit":{"message":"Revert \"8342044: Increase timeout of gc\/shenandoah\/oom\/TestClassLoaderLeak.java\"\n\nThis reverts commit 2c0c65353b2f67bdcd954b4d2c2ae3e9b24d1c22."},"files":[{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestClassLoaderLeak.java"}],"sha":"d83dfbd470504cf216c8fa6684d4d294245a0ab5"},{"commit":{"message":"Use os::javaTimeNanos() instead of os::elapsed_counter()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"64751d8fe69ba1cd4846c3ebff22319731fc294c"},{"commit":{"message":"format"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"05c7ea96e922a9bed5aeb46f408a7424a38609d2"},{"commit":{"message":"os::elapsed_counter() is not always nanoseconds, e.g. Windows"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"008416d19b48b27ad807eb917ee5109f10fcbbf8"},{"commit":{"message":"Use os::elapsedTime()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"746ed783cf7ad82875d416195e9d4beb4a47c76e"},{"commit":{"message":"Use os::javaTimeMillis instead of os::elapsed_counter() since we don't really need high-res time"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"39d921ff56ca9af0d04b70ffa5d742c3958525f6"},{"commit":{"message":"Merge branch 'openjdk:master' into JDK-8342041"},"files":[],"sha":"d150af811031da0375cfdf3a50af38c48dc6c578"},{"commit":{"message":"fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"8abda3a34503a4050279ba60a927f18bb1e35f04"},{"commit":{"message":"Packer stop waiting whenever budget is replenished"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"9f64f097474e3c4df3ca7d27e84ca9cd6d9e4ddc"},{"commit":{"message":"Always take _wait_monitor lock at least once when claim_for_alloc fails"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"8fdad7cd148eb6698b4fd7752255192b0a6371db"},{"commit":{"message":"8342041: Test gc\/shenandoah\/oom\/TestClassLoaderLeak.java slow on Windows after JDK-8340490"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp"}],"sha":"5cfbf086253e0f5b67f63fb4cc7cd1cb0680ebdf"}]