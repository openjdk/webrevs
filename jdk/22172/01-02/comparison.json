{"files":[{"patch":"@@ -211,1 +211,1 @@\n-  return new_val >= 0;\n+  return true;\n@@ -242,2 +242,0 @@\n-  claimed = claim_for_alloc<true>(words);\n-\n@@ -254,0 +252,1 @@\n+    claim_for_alloc<true>(words);\n@@ -257,0 +256,7 @@\n+  jlong const start_time = os::javaTimeNanos();\n+  jlong const deadline = start_time + (ShenandoahPacingMaxDelay * NANOSECS_PER_MILLISEC);\n+  while (!claimed && os::javaTimeNanos() < deadline) {\n+    \/\/ We could instead assist GC, but this would suffice for now.\n+    wait(1);\n+    claimed = claim_for_alloc<false>(words);\n+  }\n@@ -258,12 +264,5 @@\n-    jlong const start_time = os::javaTimeNanos();\n-    jlong const deadline = start_time + (ShenandoahPacingMaxDelay * NANOSECS_PER_MILLISEC);\n-    bool timeout = false;\n-    while (Atomic::load(&_budget) < 0 &&\n-           os::javaTimeNanos() < deadline) {\n-      \/\/ We could instead assist GC, but this would suffice for now.\n-      timeout = wait(1);\n-      \/\/ Finish pacing wait if no timeout, but not for Windows.\n-      \/\/ In Windows, thread is usually waken up before timeout interval elapses, even w\/o notify\n-      NOT_WINDOWS(if (!timeout) break;)\n-    }\n-    ShenandoahThreadLocalData::add_paced_time(current, (double)(os::javaTimeNanos() - start_time) \/ NANOSECS_PER_SEC);\n+    \/\/ Spent local time budget to wait for enough GC progress.\n+    \/\/ Force allocating anyway, which may mean we outpace GC,\n+    \/\/ and start Degenerated GC cycle.\n+    claimed = claim_for_alloc<true>(words);\n+    assert(claimed, \"Should always succeed\");\n@@ -271,0 +270,1 @@\n+  ShenandoahThreadLocalData::add_paced_time(current, (double)(os::javaTimeNanos() - start_time) \/ NANOSECS_PER_SEC);\n@@ -273,1 +273,1 @@\n-bool ShenandoahPacer::wait(size_t time_ms) {\n+void ShenandoahPacer::wait(size_t time_ms) {\n@@ -279,1 +279,1 @@\n-  return _wait_monitor->wait(time_ms);\n+  _wait_monitor->wait(time_ms);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-  bool wait(size_t time_ms);\n+  void wait(size_t time_ms);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}