{"files":[{"patch":"@@ -211,1 +211,1 @@\n-  return true;\n+  return new_val >= 0;\n@@ -242,0 +242,2 @@\n+  claimed = claim_for_alloc<true>(words);\n+\n@@ -252,1 +254,0 @@\n-    claim_for_alloc<true>(words);\n@@ -256,7 +257,0 @@\n-  jlong const max_delay = ShenandoahPacingMaxDelay * NANOSECS_PER_MILLISEC;\n-  jlong const start_time = os::elapsed_counter();\n-  while (!claimed && (os::elapsed_counter() - start_time) < max_delay) {\n-    \/\/ We could instead assist GC, but this would suffice for now.\n-    wait(1);\n-    claimed = claim_for_alloc<false>(words);\n-  }\n@@ -264,5 +258,12 @@\n-    \/\/ Spent local time budget to wait for enough GC progress.\n-    \/\/ Force allocating anyway, which may mean we outpace GC,\n-    \/\/ and start Degenerated GC cycle.\n-    claimed = claim_for_alloc<true>(words);\n-    assert(claimed, \"Should always succeed\");\n+    jlong const start_time = os::javaTimeNanos();\n+    jlong const deadline = start_time + (ShenandoahPacingMaxDelay * NANOSECS_PER_MILLISEC);\n+    bool timeout = false;\n+    while (Atomic::load(&_budget) < 0 &&\n+           os::javaTimeNanos() < deadline) {\n+      \/\/ We could instead assist GC, but this would suffice for now.\n+      timeout = wait(1);\n+      \/\/ Finish pacing wait if no timeout, but not for Windows.\n+      \/\/ In Windows, thread is usually waken up before timeout interval elapses, even w\/o notify\n+      NOT_WINDOWS(if (!timeout) break;)\n+    }\n+    ShenandoahThreadLocalData::add_paced_time(current, (double)(os::javaTimeNanos() - start_time) \/ NANOSECS_PER_SEC);\n@@ -270,1 +271,0 @@\n-  ShenandoahThreadLocalData::add_paced_time(current, (double)(os::elapsed_counter() - start_time) \/ NANOSECS_PER_SEC);\n@@ -273,1 +273,1 @@\n-void ShenandoahPacer::wait(size_t time_ms) {\n+bool ShenandoahPacer::wait(size_t time_ms) {\n@@ -279,1 +279,1 @@\n-  _wait_monitor->wait((long)time_ms);\n+  return _wait_monitor->wait(time_ms);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-  void wait(size_t time_ms);\n+  bool wait(size_t time_ms);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}