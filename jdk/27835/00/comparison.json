{"files":[{"patch":"@@ -345,0 +345,4 @@\n+        } else if (cmd.hasArgument(\"--resource-dir\") &&\n+                   Files.exists(Path.of(cmd.getArgumentValue(\"--resource-dir\")).resolve(cmd.name() + \".entitlements\"))) {\n+            expected = new PListReader(Files.readAllBytes(\n+                    Path.of(cmd.getArgumentValue(\"--resource-dir\")).resolve(cmd.name() + \".entitlements\"))).toMap(true);\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherVerifier.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import static jdk.jpackage.internal.util.PListWriter.writeDict;\n+import static jdk.jpackage.internal.util.PListWriter.writePList;\n+import static jdk.jpackage.internal.util.PListWriter.writeBoolean;\n+import static jdk.jpackage.internal.util.XmlUtils.createXml;\n+import static jdk.jpackage.internal.util.XmlUtils.toXmlConsumer;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Date;\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Annotations.Parameter;\n+\n+\/**\n+ * Test generates signed app-image with custom entitlements file from the\n+ * \"--mac-entitlements\" parameter and the resource directory. Following cases\n+ * are covered:\n+ * - Custom entitlements file in the resource directory.\n+ * - Custom entitlements file specified with the \"--mac-entitlements\" parameter.\n+ * - Custom entitlements file in the resource directory and specified with the\n+ * \"--mac-entitlements\" parameter.\n+ *\/\n+\n+ \/*\n+ * @test\n+ * @summary jpackage with --type app-image \"--mac-entitlements\" parameter\n+ * @library \/test\/jdk\/tools\/jpackage\/helpers\n+ * @library base\n+ * @build SigningBase\n+ * @build jdk.jpackage.test.*\n+ * @build EntitlementsTest\n+ * @requires (jpackage.test.MacSignTests == \"run\")\n+ * @run main\/othervm\/timeout=720 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=EntitlementsTest\n+ *  --jpt-before-run=SigningBase.verifySignTestEnvReady\n+ *\/\n+public class EntitlementsTest {\n+\n+    void createEntitlementsFile(Path file, boolean microphone) throws IOException {\n+        createXml(file, xml -> {\n+            writePList(xml, toXmlConsumer(() -> {\n+                writeDict(xml, toXmlConsumer(() -> {\n+                    writeBoolean(xml, \"com.apple.security.cs.allow-jit\", true);\n+                    writeBoolean(xml, \"com.apple.security.cs.allow-unsigned-executable-memory\", true);\n+                    writeBoolean(xml, \"com.apple.security.cs.disable-library-validation\", true);\n+                    writeBoolean(xml, \"com.apple.security.cs.allow-dyld-environment-variables\", true);\n+                    writeBoolean(xml, \"com.apple.security.cs.debugger\", true);\n+                    writeBoolean(xml, \"com.apple.security.device.audio-input\", true);\n+                    writeBoolean(xml, \"com.apple.security.device.microphone\", microphone);\n+                }));\n+            }));\n+        });\n+    }\n+\n+    @Test\n+    \/\/ ({\"--mac-app-store\", doMacEntitlements\", \"doResources\"})\n+    @Parameter({\"false\", \"true\", \"false\"})\n+    @Parameter({\"false\", \"false\", \"true\"})\n+    @Parameter({\"false\", \"true\", \"true\"})\n+    @Parameter({\"true\", \"true\", \"false\"})\n+    @Parameter({\"true\", \"false\", \"true\"})\n+    @Parameter({\"true\", \"true\", \"true\"})\n+    public void test(boolean appStore, boolean doMacEntitlements, boolean doResources) throws Exception {\n+        final Path macEntitlementsFile;\n+        final Path resourcesDir;\n+\n+        if (doMacEntitlements) {\n+            macEntitlementsFile = TKit.createTempFile(\"EntitlementsTest.plist\");\n+            createEntitlementsFile(macEntitlementsFile, true);\n+        } else {\n+            macEntitlementsFile = null;\n+        }\n+\n+        if (doResources) {\n+            resourcesDir = TKit.createTempDirectory(\"resources\");\n+            createEntitlementsFile(resourcesDir.resolve(\"EntitlementsTest.entitlements\"), false);\n+        } else {\n+            resourcesDir = null;\n+        }\n+\n+        JPackageCommand cmd = JPackageCommand.helloAppImage()\n+                .addArguments(\"--mac-sign\",\n+                              \"--mac-signing-keychain\",\n+                                SigningBase.getKeyChain(),\n+                              \"--mac-app-image-sign-identity\",\n+                                SigningBase.getAppCert(\n+                                    SigningBase.CertIndex.ASCII_INDEX.value()));\n+        if (appStore) {\n+            cmd.addArguments(\"--mac-app-store\");\n+        }\n+        if (doMacEntitlements) {\n+            cmd.addArguments(\"--mac-entitlements\",\n+                             macEntitlementsFile.toAbsolutePath().toString());\n+\n+        }\n+        if (doResources) {\n+            cmd.addArguments(\"--resource-dir\",\n+                             resourcesDir.toAbsolutePath().toString());\n+\n+        }\n+\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/EntitlementsTest.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"}]}