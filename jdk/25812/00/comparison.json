{"files":[{"patch":"@@ -80,0 +80,3 @@\n+<li><a href=\"#initializing-variables-with-static-storage-duration\"\n+id=\"toc-initializing-variables-with-static-storage-duration\">Initializing\n+variables with static storage duration<\/a><\/li>\n@@ -794,0 +797,19 @@\n+<h3\n+id=\"initializing-variables-with-static-storage-duration\">Initializing\n+variables with static storage duration<\/h3>\n+<p>Avoid variables with static storage duration and non-constant\n+initialization, or with non-trivial destruction. Such variables can lead\n+to the so-called \"static initialization order fiasco\", or its dual on\n+the destruction size. Some of the alternatives used in HotSpot\n+include:<\/p>\n+<ul>\n+<li><p>Use the <code>Deferred&lt;T&gt;<\/code> class template. Add a call\n+to its initialization function at an appropriate place during VM\n+initialization. The underlying object is never destroyed.<\/p><\/li>\n+<li><p>For objects of class type, use a variable whose value is a\n+pointer to the class, initialized to <code>nullptr<\/code>. Provide an\n+initialization function that sets the variable to a dynamically\n+allocated object. Add a call to that function at an appropriate place\n+during VM initialization. Such objects are usually never\n+destroyed.<\/p><\/li>\n+<\/ul>\n","filename":"doc\/hotspot-style.html","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -773,0 +773,17 @@\n+### Initializing variables with static storage duration\n+\n+Avoid variables with static storage duration and non-constant initialization,\n+or with non-trivial destruction.  Such variables can lead to the so-called\n+\"static initialization order fiasco\", or its dual on the destruction size.\n+Some of the alternatives used in HotSpot include:\n+\n+* Use the `Deferred<T>` class template. Add a call to its initialization\n+function at an appropriate place during VM initialization. The underlying\n+object is never destroyed.\n+\n+* For objects of class type, use a variable whose value is a pointer to the\n+class, initialized to `nullptr`. Provide an initialization function that sets\n+the variable to a dynamically allocated object. Add a call to that function at\n+an appropriate place during VM initialization. Such objects are usually never\n+destroyed.\n+\n","filename":"doc\/hotspot-style.md","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}