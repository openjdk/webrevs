[{"commit":{"message":"Drop recomputation improvements\n\nThis reverts e18c0444cbe9f325d7122b97531869d2b8fedc56. Both `rank`\nand `supertype` are _cached_ anyway, so the performance is not\na concern here. As for readability, while it's not really better,\nit stands out from the rest of the file where everything is\nrecomputed on demand rather than cached and reused.\n\nHowever, this adds clarifying parentheses for `rank` in `precedes`."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"fb550f7f7ff9938a0d0b703aee022de37c09403a"},{"commit":{"message":"Repair botched merge\n\n6515bf762a0ffb4a8686e07ae37611507cf2b1be"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"283d66ace538454a43dae14e513e877add907108"},{"commit":{"message":"Revert (unneeded) final on CompoundIterator"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java"}],"sha":"6cda4b37086e0ce3a42c47c802f4f83c90173a2f"},{"commit":{"message":"Clarify an iterator comment"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java"}],"sha":"cf908193c30331962927294672ae7d3409f7d78d"},{"commit":{"message":"Respond to feedback"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java"}],"sha":"140afc8a4559b28651b75eb5ca8e360df6ebc0a1"},{"commit":{"message":"Merge branch 'master' into 8303755\n\n# Conflicts:\n#\tsrc\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"6515bf762a0ffb4a8686e07ae37611507cf2b1be"},{"commit":{"message":"Improve CompoundIterator\n\n- it could be improved even further, but kept as is to retain its\n  laziness\n- `remove` is deleted as it now is a default Iterator method"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java"}],"sha":"d7e5c566c2022489898b90a5e1b063bd483a7f1e"},{"commit":{"message":"Improve Iterators.createFilterIterator\n\nAssert that the mechanics relies on iterator being filtered never\nto return null."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java"}],"sha":"0cc2c7c04628e81f901b037a312791dcd781c6e3"},{"commit":{"message":"Fix typos and improve consistency"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Scope.java"}],"sha":"03b26343b98c1cf172e754c52582aaa6b256aa60"},{"commit":{"message":"Avoid unnecessary recomputation"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"e18c0444cbe9f325d7122b97531869d2b8fedc56"},{"commit":{"message":"Fix typos and {@inheritDoc} that stands out"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"}],"sha":"3a7f5df649f5b7eb8b0805924061992e87aec4c3"}]