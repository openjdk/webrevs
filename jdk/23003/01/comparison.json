{"files":[{"patch":"@@ -52,0 +52,1 @@\n+#include \"vm_version_riscv.hpp\"\n@@ -1336,15 +1337,0 @@\n-\n-#define INSN(NAME, CSR)                       \\\n-  void MacroAssembler::NAME(Register Rd) {    \\\n-    csrr(Rd, CSR);                            \\\n-  }\n-\n-  INSN(rdinstret,  CSR_INSTRET);\n-  INSN(rdcycle,    CSR_CYCLE);\n-  INSN(rdtime,     CSR_TIME);\n-  INSN(frcsr,      CSR_FCSR);\n-  INSN(frrm,       CSR_FRM);\n-  INSN(frflags,    CSR_FFLAGS);\n-\n-#undef INSN\n-\n@@ -1352,0 +1338,4 @@\n+  \/\/ These three are specified in zicntr and are unused.\n+  \/\/ Before adding use-cases add the appropriate hwprobe and flag.\n+  assert(csr != CSR_INSTRET && csr != CSR_CYCLE && csr != CSR_TIME,\n+         \"Not intended for use without enabling zicntr.\");\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -594,3 +594,0 @@\n-  void rdinstret(Register Rd);                  \/\/ read instruction-retired counter\n-  void rdcycle(Register Rd);                    \/\/ read cycle counter\n-  void rdtime(Register Rd);                     \/\/ read time\n@@ -604,6 +601,6 @@\n-  void frcsr(Register Rd);                      \/\/ read float-point csr\n-  void fscsr(Register Rd, Register Rs);         \/\/ swap float-point csr\n-  void fscsr(Register Rs);                      \/\/ write float-point csr\n-  void frrm(Register Rd);                       \/\/ read float-point rounding mode\n-  void fsrm(Register Rd, Register Rs);          \/\/ swap float-point rounding mode\n-  void fsrm(Register Rs);                       \/\/ write float-point rounding mode\n+  void frcsr(Register Rd) { csrr(Rd, CSR_FCSR); }; \/\/ read float-point csr\n+  void fscsr(Register Rd, Register Rs);            \/\/ swap float-point csr\n+  void fscsr(Register Rs);                         \/\/ write float-point csr\n+  void frrm(Register Rd) { csrr(Rd, CSR_FRM); };   \/\/ read float-point rounding mode\n+  void fsrm(Register Rd, Register Rs);             \/\/ swap float-point rounding mode\n+  void fsrm(Register Rs);                          \/\/ write float-point rounding mode\n@@ -612,3 +609,3 @@\n-  void frflags(Register Rd);                    \/\/ read float-point exception flags\n-  void fsflags(Register Rd, Register Rs);       \/\/ swap float-point exception flags\n-  void fsflags(Register Rs);                    \/\/ write float-point exception flags\n+  void frflags(Register Rd) { csrr(Rd, CSR_FFLAGS); }; \/\/ read float-point exception flags\n+  void fsflags(Register Rd, Register Rs);              \/\/ swap float-point exception flags\n+  void fsflags(Register Rs);                           \/\/ write float-point exception flags\n@@ -617,0 +614,4 @@\n+  \/\/ Requires Zicntr\n+  void rdinstret(Register Rd) { csrr(Rd, CSR_INSTRET); }; \/\/ read instruction-retired counter\n+  void rdcycle(Register Rd)   { csrr(Rd, CSR_CYCLE); };   \/\/ read cycle counter\n+  void rdtime(Register Rd)    { csrr(Rd, CSR_TIME); };    \/\/ read time\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -161,0 +161,1 @@\n+  decl(ext_Zicntr      , \"Zicntr\"      , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}