{"files":[{"patch":"@@ -4004,2 +4004,1 @@\n-                v.owner.kind == TYP &&\n-                types.isSubtype(env.enclClass.type, v.owner.type)) {\n+                v.isMemberOf(env.enclClass.sym, types)) {\n@@ -4007,1 +4006,1 @@\n-            \/\/ Handle the qualified case \"Foo.x\"\n+            \/\/ Allow \"Foo.this.x\" when \"Foo\" is (also) an outer class, as this refers to the outer instance\n@@ -4012,14 +4011,1 @@\n-            \/\/ Handle the unqualified case \"x\". First we allow an unqualified reference to an instance field\n-            \/\/ declared in a superclass S if (a) the field is private, and (b) S is also an outer class.\n-            \/\/ It's OK because the expression \"x\" then refers to the outer instance, not the current instance.\n-            if (env.enclClass.type != v.owner.type && (v.flags() & PRIVATE) != 0) {\n-                    Type.ClassType rawOwnerType = (Type.ClassType)types.erasure(v.owner.type);\n-                    Type.ClassType rawCurrentType = (Type.ClassType)types.erasure(env.enclClass.type);\n-                    Symbol.ClassSymbol rawOwnerSym = (Symbol.ClassSymbol)rawOwnerType.tsym;\n-                    Symbol.ClassSymbol rawCurrentSym = (Symbol.ClassSymbol)rawCurrentType.tsym;\n-                if (rawCurrentSym.isEnclosedBy(rawOwnerSym)) {\n-                    return false;\n-                }\n-            }\n-\n-            \/\/ It's an early reference to an instance field of the current instance\n+            \/\/ It's an early reference to an instance field member of the current instance\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"}]}