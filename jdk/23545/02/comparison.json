{"files":[{"patch":"@@ -4011,5 +4011,13 @@\n-        return env.info.ctorPrologue &&\n-            (v.flags() & STATIC) == 0 &&\n-            v.owner.kind == TYP &&\n-            types.isSubtype(env.enclClass.type, v.owner.type) &&\n-            (base == null || TreeInfo.isExplicitThisReference(types, (ClassType)env.enclClass.type, base));\n+        if (env.info.ctorPrologue &&\n+                (v.flags() & STATIC) == 0 &&\n+                v.isMemberOf(env.enclClass.sym, types)) {\n+\n+            \/\/ Allow \"Foo.this.x\" when \"Foo\" is (also) an outer class, as this refers to the outer instance\n+            if (base != null) {\n+                return TreeInfo.isExplicitThisReference(types, (ClassType)env.enclClass.type, base);\n+            }\n+\n+            \/\/ It's an early reference to an instance field member of the current instance\n+            return true;\n+        }\n+        return false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8194743 8345438 8356551\n+ * @bug 8194743 8345438 8356551 8349754\n@@ -504,0 +504,11 @@\n+    \/\/ Test for JDK-8349754\n+    public static class Test24 {\n+        private int i;\n+        class Sub extends Test24 {\n+            Sub() {\n+                i = 3;      \/\/ here \"i\" refers to \"Test23.this.i\", not \"this.i\" - so it's OK\n+                super();\n+            }\n+        }\n+    }\n+\n@@ -550,0 +561,1 @@\n+        new Test24();\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitGood.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}