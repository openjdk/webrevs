{"files":[{"patch":"@@ -412,1 +412,1 @@\n-      aot_log_info(aot)(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n+      MetaspaceShared::report_loading_error(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n@@ -1221,2 +1221,2 @@\n-      aot_log_info(aot)(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n-                    shared_region_name[i], p2i(requested_addr));\n+      MetaspaceShared::report_loading_error(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n+                                            shared_region_name[i], p2i(requested_addr));\n@@ -1235,2 +1235,2 @@\n-      aot_log_info(aot)(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n-                    shared_region_name[i], p2i(requested_addr));\n+      MetaspaceShared::report_loading_error(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n+                                            shared_region_name[i], p2i(requested_addr));\n@@ -1301,2 +1301,2 @@\n-      aot_log_info(aot)(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n-                    p2i(requested_base));\n+      MetaspaceShared::report_loading_error(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n+                                            p2i(requested_base));\n@@ -1314,1 +1314,1 @@\n-    aot_log_info(aot)(\"failed to map aot code region\");\n+    MetaspaceShared::report_loading_error(\"failed to map aot code region\");\n@@ -1690,3 +1690,3 @@\n-      aot_log_info(aot)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n-                    INTPTR_FORMAT \", size = %zu bytes\",\n-                    p2i(addr), _mapped_heap_memregion.byte_size());\n+      MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+                                            INTPTR_FORMAT \", size = %zu bytes\",\n+                                            p2i(addr), _mapped_heap_memregion.byte_size());\n@@ -1928,3 +1928,3 @@\n-    aot_log_info(aot)(\"The %s's ObjectAlignmentInBytes of %d\"\n-                  \" does not equal the current ObjectAlignmentInBytes of %d.\",\n-                  file_type, _obj_alignment, ObjectAlignmentInBytes);\n+    MetaspaceShared::report_loading_error(\"The %s's ObjectAlignmentInBytes of %d\"\n+                                          \" does not equal the current ObjectAlignmentInBytes of %d.\",\n+                                          file_type, _obj_alignment, ObjectAlignmentInBytes);\n@@ -1934,4 +1934,4 @@\n-    aot_log_info(aot)(\"The %s's CompactStrings setting (%s)\"\n-                  \" does not equal the current CompactStrings setting (%s).\", file_type,\n-                  _compact_strings ? \"enabled\" : \"disabled\",\n-                  CompactStrings   ? \"enabled\" : \"disabled\");\n+    MetaspaceShared::report_loading_error(\"The %s's CompactStrings setting (%s)\"\n+                                          \" does not equal the current CompactStrings setting (%s).\", file_type,\n+                                          _compact_strings ? \"enabled\" : \"disabled\",\n+                                          CompactStrings   ? \"enabled\" : \"disabled\");\n@@ -2021,1 +2021,1 @@\n-      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when the \"\n+      MetaspaceShared::report_loading_error(\"%s has aot-linked classes. It cannot be used when the \"\n@@ -2034,4 +2034,4 @@\n-    aot_log_info(aot)(\"The %s's BytecodeVerificationLocal setting (%s)\"\n-                               \" does not equal the current BytecodeVerificationLocal setting (%s).\", file_type,\n-                               _verify_local ? \"enabled\" : \"disabled\",\n-                               BytecodeVerificationLocal ? \"enabled\" : \"disabled\");\n+    MetaspaceShared::report_loading_error(\"The %s's BytecodeVerificationLocal setting (%s)\"\n+                                          \" does not equal the current BytecodeVerificationLocal setting (%s).\", file_type,\n+                                          _verify_local ? \"enabled\" : \"disabled\",\n+                                          BytecodeVerificationLocal ? \"enabled\" : \"disabled\");\n@@ -2058,2 +2058,2 @@\n-    aot_log_warning(aot)(\"The setting of the AllowArchivingWithJavaAgent is different \"\n-                               \"from the setting in the %s.\", file_type);\n+    MetaspaceShared::report_loading_error(\"The setting of the AllowArchivingWithJavaAgent is different \"\n+                                          \"from the setting in the %s.\", file_type);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -1431,1 +1431,1 @@\n-    aot_log_info(aot)(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\");\n+    report_loading_error(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\");\n@@ -1439,1 +1439,1 @@\n-      aot_log_info(aot)(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n+      report_loading_error(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n@@ -1444,1 +1444,1 @@\n-    aot_log_info(aot)(\"ArchiveRelocationMode == 2: never map archive(s) at an alternative address\");\n+    report_loading_error(\"ArchiveRelocationMode == 2: never map archive(s) at an alternative address\");\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,2 @@\n-        \/\/ Force the log level to warning for all tags to supressed the CDS logs. Also disable the timestamp.\n+        \/\/ Force the log level to warning for all tags to suppress the CDS logs. Also disable the timestamp.\n+        \/\/ Disable CDS error by turing off CDS logging.\n@@ -54,1 +55,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"-Xlog:cds=off\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}