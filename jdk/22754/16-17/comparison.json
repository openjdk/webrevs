{"files":[{"patch":"@@ -942,15 +942,15 @@\n-                                                                                                                         \\\n-  \/* Float16Math API intrinsification support *\/                                                                         \\\n-  \/* Float16 signatures *\/                                                                                               \\\n-  do_signature(float16_unary_math_op_sig, \"(Ljava\/lang\/Class;\"                                                           \\\n-                                           \"Ljava\/lang\/Object;\"                                                          \\\n-                                           \"Ljdk\/internal\/vm\/vector\/Float16Math$Float16UnaryMathOp;)\"                    \\\n-                                           \"Ljava\/lang\/Object;\")                                                         \\\n-  do_signature(float16_ternary_math_op_sig, \"(Ljava\/lang\/Class;\"                                                         \\\n-                                             \"Ljava\/lang\/Object;\"                                                        \\\n-                                             \"Ljava\/lang\/Object;\"                                                        \\\n-                                             \"Ljava\/lang\/Object;\"                                                        \\\n-                                             \"Ljdk\/internal\/vm\/vector\/Float16Math$Float16TernaryMathOp;)\"                \\\n-                                             \"Ljava\/lang\/Object;\")                                                       \\\n-  do_intrinsic(_sqrt_float16, jdk_internal_vm_vector_Float16Math, sqrt_name, float16_unary_math_op_sig, F_S)             \\\n-  do_intrinsic(_fma_float16, jdk_internal_vm_vector_Float16Math, fma_name, float16_ternary_math_op_sig, F_S)             \\\n+                                                                                                                             \\\n+  \/* Float16Math API intrinsification support *\/                                                                             \\\n+  \/* Float16 signatures *\/                                                                                                   \\\n+  do_signature(float16_unary_math_op_sig, \"(Ljava\/lang\/Class;\"                                                               \\\n+                                           \"Ljava\/lang\/Object;\"                                                              \\\n+                                           \"Ljava\/util\/function\/UnaryOperator;)\"                                             \\\n+                                           \"Ljava\/lang\/Object;\")                                                             \\\n+  do_signature(float16_ternary_math_op_sig, \"(Ljava\/lang\/Class;\"                                                             \\\n+                                             \"Ljava\/lang\/Object;\"                                                            \\\n+                                             \"Ljava\/lang\/Object;\"                                                            \\\n+                                             \"Ljava\/lang\/Object;\"                                                            \\\n+                                             \"Ljdk\/internal\/vm\/vector\/Float16Math$TernaryOperator;)\"                         \\\n+                                             \"Ljava\/lang\/Object;\")                                                           \\\n+  do_intrinsic(_sqrt_float16, jdk_internal_vm_vector_Float16Math, sqrt_name, float16_unary_math_op_sig, F_S)                 \\\n+  do_intrinsic(_fma_float16, jdk_internal_vm_vector_Float16Math, fma_name, float16_ternary_math_op_sig, F_S)                 \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.function.UnaryOperator;\n@@ -29,12 +30,1 @@\n-\/**\n- * The class {@code Float16Math} constains intrinsic entry points corresponding\n- * to scalar numeric operations defined in Float16 class.\n- * @since   25\n- *\/\n-public final class Float16Math {\n-    private Float16Math() {\n-    }\n-\n-    public interface Float16UnaryMathOp {\n-        Object apply(Object a);\n-    }\n+public class Float16Math {\n@@ -42,2 +32,3 @@\n-    public interface Float16TernaryMathOp {\n-        Object apply(Object a, Object b, Object c);\n+    @FunctionalInterface\n+    public interface TernaryOperator<T> {\n+        T apply(T a, T b, T c);\n@@ -47,1 +38,1 @@\n-    public static Object sqrt(Class<?> box_class, Object oa, Float16UnaryMathOp defaultImpl) {\n+    public static <T> T sqrt(Class<T> box_class, T oa, UnaryOperator<T> defaultImpl) {\n@@ -53,1 +44,1 @@\n-    public static Object fma(Class<?> box_class, Object oa, Object ob, Object oc, Float16TernaryMathOp defaultImpl) {\n+    public static <T> T fma(Class<T> box_class, T oa, T ob, T oc, TernaryOperator<T> defaultImpl) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/Float16Math.java","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1202,1 +1202,1 @@\n-        return (Float16) Float16Math.sqrt(Float16.class, radicand,\n+        return Float16Math.sqrt(Float16.class, radicand,\n@@ -1209,1 +1209,1 @@\n-               return valueOf(Math.sqrt(((Float16)(_radicand)).doubleValue()));\n+               return valueOf(Math.sqrt(_radicand.doubleValue()));\n@@ -1413,1 +1413,1 @@\n-         return (Float16) Float16Math.fma(Float16.class, a, b, c,\n+         return Float16Math.fma(Float16.class, a, b, c,\n@@ -1418,2 +1418,2 @@\n-                    double product = (double)(((Float16)_a).floatValue() * ((Float16)_b).floatValue());\n-                    return valueOf(product + ((Float16)_c).doubleValue());\n+                    double product = (double)(_a.floatValue() * _b.floatValue());\n+                    return valueOf(product + _c.doubleValue());\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float16.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}