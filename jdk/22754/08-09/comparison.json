{"files":[{"patch":"@@ -990,2 +990,1 @@\n-    default:\n-      return false;\n+    default: ShouldNotReachHere();\n","filename":"src\/hotspot\/share\/opto\/convertnode.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -8657,8 +8657,11 @@\n-  \/\/ Unary operations\n-  case vmIntrinsics::_sqrt_float16:      result = _gvn.transform(new SqrtHFNode(C, control(), fld1)); break;\n-\n-  \/\/ Ternary operations\n-  case vmIntrinsics::_fma_float16:       result = _gvn.transform(new FmaHFNode(control(), fld1, fld2, fld3)); break;\n-  default:\n-    fatal_unexpected_iid(id);\n-    break;\n+    \/\/ Unary operations\n+    case vmIntrinsics::_sqrt_float16:\n+      result = _gvn.transform(new SqrtHFNode(C, control(), fld1));\n+      break;\n+    \/\/ Ternary operations\n+    case vmIntrinsics::_fma_float16:\n+      result = _gvn.transform(new FmaHFNode(control(), fld1, fld2, fld3));\n+      break;\n+    default:\n+      fatal_unexpected_iid(id);\n+      break;\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -560,1 +560,3 @@\n-  if(t0 == Type::HALF_FLOAT || t1 == Type::HALF_FLOAT) return Type::HALF_FLOAT;\n+  if (t0 == Type::HALF_FLOAT || t1 == Type::HALF_FLOAT) {\n+    return Type::HALF_FLOAT;\n+  }\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -460,1 +460,1 @@\n-  HALF_FLOAT   = make(HalfFloatBot); \/\/ All half floats\n+  HALF_FLOAT = make(HalfFloatBot); \/\/ All half floats\n@@ -1086,1 +1086,1 @@\n-    if (_base == HalfFloatTop) return this;\n+    if (_base == HalfFloatTop) { return this; }\n@@ -1088,3 +1088,3 @@\n-    if (_base == HalfFloatBot || _base == HalfFloatTop) return HALF_FLOAT;\n-    if (_base == FloatBot || _base == FloatTop) return Type::BOTTOM;\n-    if (_base == DoubleTop || _base == DoubleBot) return Type::BOTTOM;\n+    if (_base == HalfFloatBot || _base == HalfFloatTop) { return HALF_FLOAT; }\n+    if (_base == FloatBot || _base == FloatTop) { return Type::BOTTOM; }\n+    if (_base == DoubleTop || _base == DoubleBot) { return Type::BOTTOM; }\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @author\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/Float16Math.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}