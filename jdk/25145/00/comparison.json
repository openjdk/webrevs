{"files":[{"patch":"@@ -2469,0 +2469,5 @@\n+    public static final String RISCV_VFNMSUB_MASKED = PREFIX + \"RISCV_VFNMSUB_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(RISCV_VFNMSUB_MASKED, \"vfnmsub_masked\");\n+    }\n+\n@@ -2474,0 +2479,5 @@\n+    public static final String RISCV_VFNMADD_MASKED = PREFIX + \"RISCV_VFNMADD_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(RISCV_VFNMADD_MASKED, \"vfnmadd_masked\");\n+    }\n+\n@@ -2479,0 +2489,5 @@\n+    public static final String RISCV_VFMSUB_MASKED = PREFIX + \"RISCV_VFMSUB_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(RISCV_VFMSUB_MASKED, \"vfmsub_masked\");\n+    }\n+\n@@ -2484,0 +2499,5 @@\n+    public static final String RISCV_VFMADD_MASKED = PREFIX + \"RISCV_VFMADD_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(RISCV_VFMADD_MASKED, \"vfmadd_masked\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2025, Rivos Inc. All rights reserved.\n@@ -41,0 +42,1 @@\n+import jdk.test.lib.Platform;\n@@ -48,2 +50,2 @@\n- * @requires vm.cpu.features ~= \".*sve.*\"\n- * @summary AArch64: Add optimized rules for masked vector multiply-add\/sub for SVE\n+ * @requires vm.cpu.features ~= \".*sve.*\" | vm.cpu.features ~= \".*rvv.*\"\n+ * @summary Add optimized rules for masked vector multiply-add\/sub for SVE and RVV\n@@ -247,1 +249,1 @@\n-    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -260,1 +262,1 @@\n-    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -273,1 +275,1 @@\n-    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -286,1 +288,1 @@\n-    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -299,1 +301,1 @@\n-    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -312,1 +314,1 @@\n-    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -325,1 +327,1 @@\n-    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -338,1 +340,1 @@\n-    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n+    @IR(applyIfPlatformOr = {\"aarch64\", \"true\", \"riscv64\", \"true\"}, counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -351,1 +353,2 @@\n-    @IR(counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFNMSUB_MASKED, \">= 1\" })\n@@ -364,1 +367,2 @@\n-    @IR(counts = { IRNode.VFMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMADD_MASKED, \">= 1\" })\n@@ -377,1 +381,2 @@\n-    @IR(counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFNMADD_MASKED, \">= 1\" })\n@@ -390,1 +395,2 @@\n-    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMSUB_MASKED, \">= 1\" })\n@@ -403,1 +409,2 @@\n-    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMSUB_MASKED, \">= 1\" })\n@@ -416,1 +423,2 @@\n-    @IR(counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFNMSUB_MASKED, \">= 1\" })\n@@ -429,1 +437,2 @@\n-    @IR(counts = { IRNode.VFMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMADD_MASKED, \">= 1\" })\n@@ -442,1 +451,2 @@\n-    @IR(counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFNMADD_MASKED, \">= 1\" })\n@@ -455,1 +465,2 @@\n-    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMSUB_MASKED, \">= 1\" })\n@@ -468,1 +479,2 @@\n-    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"aarch64\", \"true\"}, counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"}, counts = { IRNode.RISCV_VFMSUB_MASKED, \">= 1\" })\n@@ -482,3 +494,5 @@\n-        testFramework.setDefaultWarmup(5000)\n-                     .addFlags(\"--add-modules=jdk.incubator.vector\", \"-XX:UseSVE=1\")\n-                     .start();\n+        testFramework.setDefaultWarmup(5000).addFlags(\"--add-modules=jdk.incubator.vector\");\n+        if (Platform.isAArch64()) {\n+            testFramework.addFlags(\"-XX:UseSVE=1\");\n+        }\n+        testFramework.start();\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFusedMultiplyAddSubTest.java","additions":37,"deletions":23,"binary":false,"changes":60,"status":"modified"}]}