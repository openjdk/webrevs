{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -392,1 +392,1 @@\n-  void* const addr = mmap(0, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, offset);\n+  void* const addr = mmap(nullptr, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, offset);\n@@ -442,1 +442,1 @@\n-  void* const addr = mmap(0, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, offset);\n+  void* const addr = mmap(nullptr, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, offset);\n","filename":"src\/hotspot\/os\/linux\/gc\/x\/xPhysicalMemoryBacking_linux.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -394,1 +394,1 @@\n-  void* const addr = mmap(0, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, untype(offset));\n+  void* const addr = mmap(nullptr, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, untype(offset));\n@@ -444,1 +444,1 @@\n-  void* const addr = mmap(0, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, untype(offset));\n+  void* const addr = mmap(nullptr, length, PROT_READ|PROT_WRITE, MAP_SHARED, _fd, untype(offset));\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-  _heap_start = 0;\n+  _heap_start = nullptr;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parMarkBitMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -664,1 +664,1 @@\n-  return 0;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-  if (vspace != 0) {\n+  if (vspace != nullptr) {\n@@ -249,1 +249,1 @@\n-  return 0;\n+  return nullptr;\n@@ -258,1 +258,1 @@\n-  if (_region_vspace != 0) {\n+  if (_region_vspace != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-    return 0;\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        if (mid == 0) {\n+        if (mid == nullptr) {\n@@ -59,1 +59,1 @@\n-        if (mid2 == 0) {\n+        if (mid2 == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/nativeGC01\/libnativeGC01.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        if (fid == 0) {\n+        if (fid == nullptr) {\n@@ -56,1 +56,1 @@\n-        if (mid == 0) {\n+        if (mid == nullptr) {\n@@ -69,1 +69,1 @@\n-        if (mid2 == 0) {\n+        if (mid2 == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/nativeGC02\/libnativeGC02.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-                if (mid == 0) {\n+                if (mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/nativeGC03\/libnativeGC03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,2 @@\n-        jclass matrixClass, stackClass, pairClass = 0;\n-        jmethodID stack_pop_mid, stack_empty_mid, matrix_repopulate_mid, pair_geti_mid = 0, pair_getj_mid = 0;\n+        jclass matrixClass, stackClass, pairClass = nullptr;\n+        jmethodID stack_pop_mid, stack_empty_mid, matrix_repopulate_mid, pair_geti_mid = nullptr, pair_getj_mid = nullptr;\n@@ -43,1 +43,1 @@\n-        if (stack_pop_mid == 0) {\n+        if (stack_pop_mid == nullptr) {\n@@ -48,1 +48,1 @@\n-        if (stack_empty_mid == 0) {\n+        if (stack_empty_mid == nullptr) {\n@@ -54,1 +54,1 @@\n-        if (matrix_repopulate_mid == 0) {\n+        if (matrix_repopulate_mid == nullptr) {\n@@ -65,1 +65,1 @@\n-                if (pairClass == 0) {\n+                if (pairClass == nullptr) {\n@@ -68,1 +68,1 @@\n-                        if (pair_geti_mid == 0) {\n+                        if (pair_geti_mid == nullptr) {\n@@ -73,1 +73,1 @@\n-                        if (pair_getj_mid == 0) {\n+                        if (pair_getj_mid == nullptr) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/nativeGC05\/libnativeGC05.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}