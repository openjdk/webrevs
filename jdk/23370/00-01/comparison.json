{"files":[{"patch":"@@ -44,4 +44,5 @@\n-\/\/\/ This test runs on `internalProjection.json`-style files generated\n-\/\/\/ by NIST's ACVP Server. See [https:\/\/github.com\/usnistgov\/ACVP-Server].\n-\/\/\/ Download zip archive, for instance -\n-\/\/\/ https:\/\/github.com\/usnistgov\/ACVP-Server\/archive\/refs\/tags\/v1.1.0.38.zip\n+\/\/\/ This test runs on `internalProjection.json`-style files generated by NIST's\n+\/\/\/ ACVP Server ([GitHub repository](https:\/\/github.com\/usnistgov\/ACVP-Server)).\n+\/\/\/ These files are included in ZIP archives available under the\n+\/\/\/ [tags section](https:\/\/github.com\/usnistgov\/ACVP-Server\/tags)\n+\/\/\/ of the repository.\n@@ -51,1 +52,1 @@\n-\/\/\/ The test looks for test data files in archive listed with `TEST_FILES`.\n+\/\/\/ The test looks for test data files in the archive listed with `TEST_FILES`.\n@@ -55,5 +56,0 @@\n-\/\/\/ Set the `test.acvp.alg` test property to only test the specified algorithm.\n-\/\/\/\n-\/\/\/ Sample files can be downloaded from\n-\/\/\/ [https:\/\/github.com\/usnistgov\/ACVP-Server\/tree\/master\/gen-val\/json-files].\n-\/\/\/\n@@ -79,3 +75,0 @@\n-    private static final String ONLY_ALG\n-            = System.getProperty(\"test.acvp.alg\");\n-\n@@ -122,3 +115,0 @@\n-        if (ONLY_ALG != null) {\n-            System.out.println(\"Algorithm: \" + ONLY_ALG);\n-        }\n@@ -147,1 +137,5 @@\n-            throw new SkippedException(\"No supported test found\");\n+            throw new RuntimeException(\"No supported test found\");\n+        }\n+\n+        if (invalidTest != 0 || unsupportedTest != 0){\n+            throw new RuntimeException(\"Invalid or Unsupported tests found\");\n@@ -162,3 +156,0 @@\n-            if (ONLY_ALG != null && !alg.equals(ONLY_ALG)) {\n-                return;\n-            }\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/Launcher.java","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -82,14 +82,0 @@\n-    static String h2h(String in) {\n-        return switch (in) {\n-            case \"SHA2-512\/224\" -> \"SHA-512\/224\";\n-            case \"SHA2-512\/256\" -> \"SHA-512\/256\";\n-            case \"SHA2-224\" -> \"SHA-224\";\n-            case \"SHA2-256\" -> \"SHA-256\";\n-            case \"SHA2-384\" -> \"SHA-384\";\n-            case \"SHA2-512\" -> \"SHA-512\";\n-            case \"SHAKE-128\" -> \"SHAKE128\";\n-            case \"SHAKE-256\" -> \"SHAKE256\";\n-            default -> in;\n-        };\n-    }\n-\n@@ -116,2 +102,1 @@\n-                var preHash = hashAlg.equals(\"none\") ? null : h2h(hashAlg);\n-                if (preHash != null || ctxt.length != 0) {\n+                if (!hashAlg.equals(\"none\") || ctxt.length != 0) {\n@@ -159,2 +144,1 @@\n-                var preHash = hashAlg.equals(\"none\") ? null : h2h(hashAlg);\n-                if (preHash != null || ctxt.length != 0) {\n+                if (!hashAlg.equals(\"none\") || ctxt.length != 0) {\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_DSA_Test.java","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"}]}