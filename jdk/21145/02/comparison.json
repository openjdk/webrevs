{"files":[{"patch":"@@ -216,2 +216,20 @@\n-    public PassFailJFrame(String instructions) throws InterruptedException,\n-            InvocationTargetException {\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons with the given instructions, and\n+     * the default timeout of {@value #TEST_TIMEOUT} minutes,\n+     * the default title of {@value #TITLE} and\n+     * the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param instructions the instructions for the tester\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n+    public PassFailJFrame(String instructions)\n+            throws InterruptedException, InvocationTargetException {\n@@ -221,2 +239,21 @@\n-    public PassFailJFrame(String instructions, long testTimeOut) throws\n-            InterruptedException, InvocationTargetException {\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given instructions and timeout as well as\n+     * the default title of {@value #TITLE}\n+     * and the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n+    public PassFailJFrame(String instructions, long testTimeOut)\n+            throws InterruptedException, InvocationTargetException {\n@@ -226,0 +263,20 @@\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given title, instructions and timeout as well as\n+     * the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * The screenshot feature is not enabled, if you use this constructor.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n@@ -227,2 +284,2 @@\n-                          long testTimeOut) throws InterruptedException,\n-            InvocationTargetException {\n+                          long testTimeOut)\n+            throws InterruptedException, InvocationTargetException {\n@@ -233,6 +290,7 @@\n-     * Constructs a JFrame with a given title & serves as test instructional\n-     * frame where the user follows the specified test instruction in order\n-     * to test the test case & mark the test pass or fail. If the expected\n-     * result is seen then the user click on the 'Pass' button else click\n-     * on the 'Fail' button and the reason for the failure should be\n-     * specified in the JDialog JTextArea.\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given title, instructions, timeout, number of rows and columns.\n+     * The screenshot feature is not enabled, if you use this constructor.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n@@ -240,11 +298,10 @@\n-     * @param title        title of the Frame.\n-     * @param instructions the instruction for the tester on how to test\n-     *                     and what is expected (pass) and what is not\n-     *                     expected (fail).\n-     * @param testTimeOut  test timeout where time is specified in minutes.\n-     * @param rows         number of visible rows of the JTextArea where the\n-     *                     instruction is show.\n-     * @param columns      Number of columns of the instructional\n-     *                     JTextArea\n-     * @throws InterruptedException      exception thrown when thread is\n-     *                                   interrupted\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     * @param rows         the number of rows for the text component\n+     *                     which displays test instructions\n+     * @param columns      the number of columns for the text component\n+     *                     which displays test instructions\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n@@ -252,2 +309,1 @@\n-     *                                   creating the test instruction frame on\n-     *                                   EDT\n+     *              creating UI components on EDT\n@@ -255,3 +311,4 @@\n-    public PassFailJFrame(String title, String instructions, long testTimeOut,\n-                          int rows, int columns) throws InterruptedException,\n-            InvocationTargetException {\n+    public PassFailJFrame(String title, String instructions,\n+                          long testTimeOut,\n+                          int rows, int columns)\n+            throws InterruptedException, InvocationTargetException {\n@@ -262,6 +319,24 @@\n-     * Constructs a JFrame with a given title & serves as test instructional\n-     * frame where the user follows the specified test instruction in order\n-     * to test the test case & mark the test pass or fail. If the expected\n-     * result is seen then the user click on the 'Pass' button else click\n-     * on the 'Fail' button and the reason for the failure should be\n-     * specified in the JDialog JTextArea.\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * as well as supporting UI components with the given title, instructions,\n+     * timeout, number of rows and columns,\n+     * and screen capture functionality.\n+     * All the UI components are created on the EDT, so it is safe to call\n+     * the constructor on the main thread.\n+     * <p>\n+     * After you create a test UI window, register the window using\n+     * {@link #addTestWindow(Window) addTestWindow} for disposal, and\n+     * position it close to the instruction frame using\n+     * {@link #positionTestWindow(Window, Position) positionTestWindow}.\n+     * As the last step, make your test UI window visible.\n+     * <p>\n+     * Call the {@link #awaitAndCheck() awaitAndCheck} method on the instance\n+     * of {@code PassFailJFrame} when you set up the testing environment.\n+     * <p>\n+     * If the tester clicks the <i>Fail<\/i> button, a dialog prompting for\n+     * a description of the problem is displayed, and then an exception\n+     * is thrown which fails the test.\n+     * If the tester clicks the <i>Pass<\/i> button, the test completes\n+     * successfully.\n+     * If the timeout occurs or the instruction frame is closed,\n+     * the test fails.\n@@ -269,4 +344,20 @@\n-     * The test instruction frame also provides a way for the tester to take\n-     * a screenshot (full screen or individual frame) if this feature\n-     * is enabled by passing {@code true} as {@code  enableScreenCapture}\n-     * parameter.\n+     * The {@code rows} and {@code columns} parameters control\n+     * the size of a text component which displays the instructions.\n+     * The preferred size of the instructions is calculated by\n+     * creating {@code new JTextArea(rows, columns)}.\n+     * <p>\n+     * If you enable screenshots by setting the {@code screenCapture}\n+     * parameter to {@code true}, a <i>Screenshot<\/i> button is added.\n+     * Clicking the <i>Screenshot<\/i> button takes screenshots of\n+     * all the monitors or all the windows registered with\n+     * {@code PassFailJFrame}.\n+     *\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     * @param rows         the number of rows for the text component\n+     *                     which displays test instructions\n+     * @param columns      the number of columns for the text component\n+     *                     which displays test instructions\n+     * @param screenCapture if set to {@code true}, enables screen capture\n+     *                      functionality\n@@ -274,14 +365,2 @@\n-     * @param title        title of the Frame.\n-     * @param instructions the instruction for the tester on how to test\n-     *                     and what is expected (pass) and what is not\n-     *                     expected (fail).\n-     * @param testTimeOut  test timeout where time is specified in minutes.\n-     * @param rows         number of visible rows of the JTextArea where the\n-     *                     instruction is show.\n-     * @param columns      Number of columns of the instructional\n-     *                     JTextArea\n-     * @param enableScreenCapture if set to true, 'Capture Screen' button & its\n-     *                            associated UIs are added to test instruction\n-     *                            frame\n-     * @throws InterruptedException      exception thrown when thread is\n-     *                                   interrupted\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n@@ -289,2 +368,4 @@\n-     *                                   creating the test instruction frame on\n-     *                                   EDT\n+     *              creating UI components on EDT\n+     *\n+     * @see JTextArea#JTextArea(int,int) JTextArea(int rows, int columns)\n+     * @see Builder Builder\n@@ -292,1 +373,2 @@\n-    public PassFailJFrame(String title, String instructions, long testTimeOut,\n+    public PassFailJFrame(String title, String instructions,\n+                          long testTimeOut,\n@@ -294,1 +376,1 @@\n-                          boolean enableScreenCapture)\n+                          boolean screenCapture)\n@@ -299,1 +381,1 @@\n-                                   enableScreenCapture));\n+                                   screenCapture));\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":139,"deletions":57,"binary":false,"changes":196,"status":"modified"}]}