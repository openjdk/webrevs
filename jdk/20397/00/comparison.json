{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+static jrawMonitorID event_mon = NULL;\n@@ -71,1 +72,1 @@\n-        exit(err);\n+        abort();\n@@ -320,1 +321,1 @@\n-VMInit(jvmtiEnv *jvmti, JNIEnv* jnii, jthread thread) {\n+VMInit(jvmtiEnv *jvmti, JNIEnv* jni, jthread thread) {\n@@ -332,0 +333,14 @@\n+static void JNICALL\n+VMDeath(jvmtiEnv *jvmti, JNIEnv* jni) {\n+    jvmtiError err;\n+\n+    \/\/ Block ClassPrepare events while this callback is executed.\n+    err  = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorEnter\", err);\n+\n+    printf(\"VMDeath event\\n\");\n+\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorExit\", err);\n+}\n+\n@@ -340,0 +355,6 @@\n+    jvmtiError err;\n+\n+    \/\/ Block VMDeath event and other ClassPrepare events while this callback is executed.\n+    \/\/ Sync with VMDeath event guards agains JVMTI_ERROR WRONG_PHASE.\n+    err = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorEnter\", err);\n@@ -345,0 +366,3 @@\n+\n+        err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+        check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -363,0 +387,2 @@\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -403,0 +429,3 @@\n+    err = (*jvmti)->CreateRawMonitor(jvmti, \"Events Monitor\", &event_mon);\n+    check_jvmti_error(jvmti, \"## Agent_Initialize: CreateRawMonitor\", err);\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/StartPhase\/AllowedFunctions\/libAllowedFunctions.c","additions":32,"deletions":3,"binary":false,"changes":35,"status":"modified"}]}