{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+static jrawMonitorID event_mon = NULL;\n+static jboolean is_vm_dead = JNI_FALSE;\n@@ -71,1 +73,1 @@\n-        exit(err);\n+        abort();\n@@ -320,1 +322,1 @@\n-VMInit(jvmtiEnv *jvmti, JNIEnv* jnii, jthread thread) {\n+VMInit(jvmtiEnv *jvmti, JNIEnv* jni, jthread thread) {\n@@ -332,0 +334,15 @@\n+static void JNICALL\n+VMDeath(jvmtiEnv *jvmti, JNIEnv* jni) {\n+    jvmtiError err;\n+\n+    \/\/ Block ClassPrepare events while this callback is executed.\n+    err  = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorEnter\", err);\n+\n+    is_vm_dead = JNI_TRUE;\n+    printf(\"VMDeath event\\n\");\n+\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"VMDeath event: Failed in RawMonitorExit\", err);\n+}\n+\n@@ -336,1 +353,0 @@\n-    jthread cur_thread = get_cur_thread(jvmti);\n@@ -340,0 +356,6 @@\n+    jvmtiError err;\n+\n+    \/\/ Block VMDeath event and other ClassPrepare events while this callback is executed.\n+    \/\/ Sync with VMDeath event and check for is_vm_dead guard against JVMTI_ERROR WRONG_PHASE.\n+    err = (*jvmti)->RawMonitorEnter(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorEnter\", err);\n@@ -341,0 +363,6 @@\n+    if (is_vm_dead == JNI_TRUE) {\n+        printf(\"\\nIgnoring ClassPrepare event during the dead phase\\n\");\n+        err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+        check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n+        return;\n+    }\n@@ -345,0 +373,3 @@\n+        result = FAILED;\n+        err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+        check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -348,0 +379,1 @@\n+        jthread cur_thread = get_cur_thread(jvmti);\n@@ -363,0 +395,2 @@\n+    err = (*jvmti)->RawMonitorExit(jvmti, event_mon);\n+    check_jvmti_error(jvmti, \"ClassPrepare event: Failed in RawMonitorExit\", err);\n@@ -403,0 +437,3 @@\n+    err = (*jvmti)->CreateRawMonitor(jvmti, \"Events Monitor\", &event_mon);\n+    check_jvmti_error(jvmti, \"## Agent_Initialize: CreateRawMonitor\", err);\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/StartPhase\/AllowedFunctions\/libAllowedFunctions.c","additions":41,"deletions":4,"binary":false,"changes":45,"status":"modified"}]}