{"files":[{"patch":"@@ -498,3 +498,0 @@\n-     * Get the application's main class. It also checks if the main\n-     * method exists.\n-     *\n@@ -543,0 +540,18 @@\n+    \/*\n+     * validateMainMethod ensures that the main method's signature is correct,\n+     * therefore further checking is not required.\n+     *\/\n+#define MAIN_WITHOUT_ARGS 1\n+#define MAIN_NONSTATIC 2\n+\n+    \/*\n+     * getMainType determines whether the main method is static and whether it has a\n+     * String[] argument.\n+     *\/\n+    jmethodID getMainType = (*env)->GetStaticMethodID(env, helperClass,\n+                                                      \"getMainType\",\n+                                                      \"(Ljava\/lang\/reflect\/Method;)I\");\n+    CHECK_EXCEPTION_NULL_LEAVE(getMainType);\n+    mainType = (*env)->CallStaticIntMethod(env, helperClass, getMainType, mainMethod);\n+    CHECK_EXCEPTION_LEAVE(-1);\n+\n@@ -544,2 +559,6 @@\n-    mainArgs = CreateApplicationArgs(env, argv, argc);\n-    CHECK_EXCEPTION_NULL_LEAVE(mainArgs);\n+    if ((mainType & MAIN_WITHOUT_ARGS) == 0) {\n+        mainArgs = CreateApplicationArgs(env, argv, argc);\n+        CHECK_EXCEPTION_NULL_LEAVE(mainArgs);\n+    } else {\n+        mainArgs = NULL;\n+    }\n@@ -563,3 +582,2 @@\n-     * validateMainMethod ensures that the main method's signature is correct,\n-     * therefore further checking is not required. The main method is invoked\n-     * here so that extraneous java stacks are not in the application stack trace.\n+     * The main method is invoked here so that extraneous java stacks are not in\n+     * the application stack trace.\n@@ -567,2 +585,0 @@\n-#define MAIN_WITHOUT_ARGS 1\n-#define MAIN_NONSTATIC 2\n@@ -570,6 +586,0 @@\n-    jmethodID getMainType = (*env)->GetStaticMethodID(env, helperClass,\n-                                                      \"getMainType\",\n-                                                      \"(Ljava\/lang\/reflect\/Method;)I\");\n-    CHECK_EXCEPTION_NULL_LEAVE(getMainType);\n-    mainType = (*env)->CallStaticIntMethod(env, helperClass, getMainType, mainMethod);\n-    CHECK_EXCEPTION_LEAVE(-1);\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"}]}