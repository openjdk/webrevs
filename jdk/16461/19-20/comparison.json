{"files":[{"patch":"@@ -438,0 +438,4 @@\n+    public boolean isImplicit() {\n+        return (flags_field & IMPLICIT_CLASS) != 0;\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5551,1 +5551,1 @@\n-                if ((c.flags_field & Flags.IMPLICIT_CLASS) != 0) {\n+                if (c.isImplicit()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -464,1 +464,2 @@\n-            if (sym.kind == TYP && sym.name == name && sym.name != names.error) {\n+            if (sym.kind == TYP && sym.name == name && sym.name != names.error &&\n+                    !sym.isImplicit()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1164,1 +1164,1 @@\n-        return sym.kind == TYP && (sym.flags_field & Flags.IMPLICIT_CLASS) != 0;\n+        return sym.kind == TYP && sym.isImplicit();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}