{"files":[{"patch":"","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitClass.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnnamedClass.java","status":"renamed"},{"patch":"","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitClassBad-Filename.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnnamedClassBad-Filename.java","status":"renamed"},{"patch":"","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitClassHasPackage.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnnamedClassHasPackage.java","status":"renamed"},{"patch":"","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitClassNoMain.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnnamedClassNoMain.java","status":"renamed"},{"patch":"@@ -0,0 +1,8 @@\n+\/**\n+ * @test \/nodynamiccopyright\/\n+ * @compile\/fail\/ref=ImplicitClassRecovery.out -XDrawDiagnostics --enable-preview --source ${jdk.version} ImplicitClassRecovery.java\n+ *\/\n+public void main() {\n+    \/\/the following is intentionally missing a semicolon:\n+    System.err.println(\"Hello!\")\n+}\n","filename":"test\/langtools\/tools\/javac\/implicit\/ImplicitClassRecovery.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+ImplicitClassRecovery.java:7:33: compiler.err.expected: ';'\n+- compiler.note.preview.filename: ImplicitClassRecovery.java, DEFAULT\n+- compiler.note.preview.recompile\n+1 error\n","filename":"test\/langtools\/tools\/javac\/implicit\/ImplicitClassRecovery.out","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -1,8 +0,0 @@\n-\/**\n- * @test \/nodynamiccopyright\/\n- * @compile\/fail\/ref=UnnamedClassRecovery.out -XDrawDiagnostics --enable-preview --source ${jdk.version} UnnamedClassRecovery.java\n- *\/\n-public void main() {\n-    \/\/the following is intentionally missing a semicolon:\n-    System.err.println(\"Hello!\")\n-}\n","filename":"test\/langtools\/tools\/javac\/unnamed\/UnnamedClassRecovery.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-UnnamedClassRecovery.java:7:33: compiler.err.expected: ';'\n-- compiler.note.preview.filename: UnnamedClassRecovery.java, DEFAULT\n-- compiler.note.preview.recompile\n-1 error\n","filename":"test\/langtools\/tools\/javac\/unnamed\/UnnamedClassRecovery.out","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"}]}