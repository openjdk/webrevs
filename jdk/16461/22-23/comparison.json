{"files":[{"patch":"@@ -4791,4 +4791,2 @@\n-    private Method getAnyMethod(String name, Class<?>... parameterTypes) {\n-        Objects.requireNonNull(name, \"name must not be null\");\n-        Objects.requireNonNull(parameterTypes, \"parameterTypes must not be null\");\n-        PublicMethods.MethodList res = getMethodsRecursive(name, parameterTypes, true, false);\n+    private Method findMethod(boolean publicOnly, String name, Class<?>... parameterTypes) {\n+        PublicMethods.MethodList res = getMethodsRecursive(name, parameterTypes, true, publicOnly);\n@@ -4842,0 +4840,2 @@\n+        boolean isPreview = PreviewFeatures.isEnabled();\n+\n@@ -4845,1 +4845,2 @@\n-            checkMemberAccess(sm, Member.DECLARED, Reflection.getCallerClass(), true);\n+            checkMemberAccess(sm, isPreview ? Member.DECLARED : Member.PUBLIC,\n+                    Reflection.getCallerClass(), true);\n@@ -4848,2 +4849,1 @@\n-        boolean isPreview = PreviewFeatures.isEnabled();\n-        Method mainMethod = getAnyMethod(\"main\", String[].class);\n+        Method mainMethod = findMethod(!isPreview, \"main\", String[].class);\n@@ -4852,1 +4852,1 @@\n-            mainMethod = getAnyMethod(\"main\");\n+            mainMethod = findMethod(false, \"main\");\n@@ -4855,2 +4855,3 @@\n-        if (mainMethod != null) {\n-            int mods = mainMethod.getModifiers();\n+        if (mainMethod == null) {\n+            return null;\n+        }\n@@ -4858,6 +4859,7 @@\n-            if (Modifier.isPrivate(mods) || Modifier.isAbstract(mods) ||\n-                    mainMethod.getReturnType() != void.class) {\n-                mainMethod = null;\n-            } else if (!isPreview && !(Modifier.isStatic(mods) && Modifier.isPublic(mods))) {\n-                mainMethod = null;\n-            }\n+        int mods = mainMethod.getModifiers();\n+\n+        if (Modifier.isAbstract(mods) ||\n+                mainMethod.getReturnType() != void.class ||\n+                (isPreview && Modifier.isPrivate(mods)) ||\n+                (!isPreview && !Modifier.isStatic(mods))) {\n+            return null;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"}]}