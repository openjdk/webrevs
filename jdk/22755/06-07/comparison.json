{"files":[{"patch":"@@ -1021,3 +1021,0 @@\n-VectorNode* VectorReinterpretNode::make(Node* n, const TypeVect* dst_vt, const TypeVect* src_vt) {\n-  return new VectorReinterpretNode(n, dst_vt, src_vt);\n-}\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1831,1 +1831,0 @@\n-  static VectorNode* make(Node* n, const TypeVect* dst_vt, const TypeVect* src_vt);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -582,1 +582,1 @@\n-    vn = VectorReinterpretNode::make(in1, vt, in1->bottom_type()->is_vect());\n+    vn = new VectorReinterpretNode(in1, vt, in1->bottom_type()->is_vect());\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,3 +58,1 @@\n-        Float16 expected_fp16 = valueOf(expected);\n-        Float16 actual_fp16 = valueOf(actual);\n-        if (isNaN(expected_fp16) ^ isNaN(actual_fp16)) {\n+        if (Float.isNaN(Float.float16ToFloat(expected)) && Float.isNaN(Float.float16ToFloat(actual))) {\n@@ -63,1 +61,1 @@\n-        return !expected_fp16.equals(actual_fp16);\n+        return expected != actual;\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestFloat16VectorOperations.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}