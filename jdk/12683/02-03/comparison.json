{"files":[{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -88,1 +88,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -98,1 +98,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -115,6 +115,4 @@\n-        if (total == valid) {\n-            System.out.println(op + \": Success\");\n-        } else {\n-            System.out.println(\"Invalid total: \" + total);\n-            System.out.println(\"Expected value = \" + valid);\n-            throw new Exception(op + \": Failed\");\n+        if (total != valid) {\n+            throw new Exception(\n+                \"Invalid total: \" + total + \" \" +\n+                \"Expected value = \" + valid + \" \" + op + \": Failed\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Double.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -84,1 +84,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Float.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -83,1 +83,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Int.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-        Scenario[] scenarios = new Scenario[8];\n-        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+        Scenario[] scenarios = new Scenario[6];\n+        for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -52,1 +52,1 @@\n-        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+        for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -71,1 +71,0 @@\n-        int[] d = new int[NUM];\n@@ -74,1 +73,1 @@\n-        int valid = 0;\n+        int valid = 1454604288;\n@@ -76,4 +75,1 @@\n-            total = sumReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid += d[j];\n+            total = sumReductionImplement(a, b, c, total);\n@@ -83,1 +79,2 @@\n-        valid = 0;\n+        total = 0;\n+        valid = 91586175;\n@@ -85,4 +82,1 @@\n-            total = orReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid |= d[j];\n+            total = orReductionImplement(a, b, c, total);\n@@ -92,1 +86,2 @@\n-        valid = -1;\n+        total = -1;\n+        valid = 91492404;\n@@ -94,4 +89,1 @@\n-            total = andReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid &= d[j];\n+            total = andReductionImplement(a, b, c, total);\n@@ -101,0 +93,1 @@\n+        total = -1;\n@@ -103,4 +96,1 @@\n-            total = xorReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid ^= d[j];\n+            total = xorReductionImplement(a, b, c, total);\n@@ -111,1 +101,2 @@\n-        valid = 1;\n+        total = 1;\n+        valid = 1690042369;\n@@ -113,4 +104,1 @@\n-            total = mulReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid *= d[j];\n+            total = mulReductionImplement(a, b, c, total);\n@@ -145,1 +133,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -154,2 +142,1 @@\n-            int[] d) {\n-        int total = 0;\n+            int total) {\n@@ -157,2 +144,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total += d[i];\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -164,1 +150,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -173,2 +159,1 @@\n-            int[] d) {\n-        int total = 0;\n+            int total) {\n@@ -176,2 +161,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total |= d[i];\n+            total |= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -183,1 +167,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -192,2 +176,1 @@\n-            int[] d) {\n-        int total = -1;\n+            int total) {\n@@ -195,2 +178,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total &= d[i];\n+            total &= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -202,1 +184,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -211,2 +193,1 @@\n-            int[] d) {\n-        int total = -1;\n+            int total) {\n@@ -214,2 +195,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total ^= d[i];\n+            total ^= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -221,1 +201,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -230,2 +210,1 @@\n-            int[] d) {\n-        int total = 1;\n+            int total) {\n@@ -233,2 +212,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total = total*d[i];\n+            total *= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -243,6 +221,4 @@\n-        if (total == valid) {\n-            System.out.println(op + \": Success\");\n-        } else {\n-            System.out.println(\"Invalid total: \" + total);\n-            System.out.println(\"Expected value = \" + valid);\n-            throw new Exception(op + \": Failed\");\n+        if (total != valid) {\n+            throw new Exception(\n+                \"Invalid total: \" + total + \" \" +\n+                \"Expected value = \" + valid + \" \" + op + \": Failed\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_int.java","additions":35,"deletions":59,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-        Scenario[] scenarios = new Scenario[8];\n-        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+        Scenario[] scenarios = new Scenario[6];\n+        for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -53,1 +53,1 @@\n-        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+        for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -72,1 +72,0 @@\n-        long[] d = new long[NUM];\n@@ -75,1 +74,1 @@\n-        long valid = 0;\n+        long valid = 374944929792000L;\n@@ -77,4 +76,1 @@\n-            total = sumReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid += d[j];\n+            total = sumReductionImplement(a, b, c, total);\n@@ -84,1 +80,2 @@\n-        valid = 0;\n+        total = 0;\n+        valid = 91586175;\n@@ -86,4 +83,1 @@\n-            total = orReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid |= d[j];\n+            total = orReductionImplement(a, b, c, total);\n@@ -93,1 +87,2 @@\n-        valid = -1;\n+        total = -1;\n+        valid = 91492404;\n@@ -95,4 +90,1 @@\n-            total = andReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid &= d[j];\n+            total = andReductionImplement(a, b, c, total);\n@@ -102,0 +94,1 @@\n+        total = -1;\n@@ -104,4 +97,1 @@\n-            total = xorReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid ^= d[j];\n+            total = xorReductionImplement(a, b, c, total);\n@@ -112,1 +102,2 @@\n-        valid = 1;\n+        total = 1;\n+        valid = 2953257964269338625L;\n@@ -114,4 +105,1 @@\n-            total = mulReductionImplement(a, b, c, d);\n-        }\n-        for (int j = 0; j < d.length; j++) {\n-            valid *= d[j];\n+            total = mulReductionImplement(a, b, c, total);\n@@ -148,4 +136,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.ADD_REDUCTION_VL})\n-    @IR(applyIfCPUFeature = {\"avx2\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -160,2 +145,1 @@\n-            long[] d) {\n-        long total = 0;\n+            long total) {\n@@ -163,2 +147,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total += d[i];\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -170,4 +153,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.OR_REDUCTION_V})\n-    @IR(applyIfCPUFeature = {\"avx2\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -182,2 +162,1 @@\n-            long[] d) {\n-        long total = 0;\n+            long total) {\n@@ -185,2 +164,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total |= d[i];\n+            total |= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -192,4 +170,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.AND_REDUCTION_V})\n-    @IR(applyIfCPUFeature = {\"avx2\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -204,2 +179,1 @@\n-            long[] d) {\n-        long total = -1;\n+            long total) {\n@@ -207,2 +181,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total &= d[i];\n+            total &= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -214,4 +187,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.XOR_REDUCTION_V})\n-    @IR(applyIfCPUFeature = {\"avx2\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -226,2 +196,1 @@\n-            long[] d) {\n-        long total = -1;\n+            long total) {\n@@ -229,2 +198,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total ^= d[i];\n+            total ^= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -236,4 +204,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.MUL_REDUCTION_VL})\n-    @IR(applyIfCPUFeature = {\"avx512dq\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -248,2 +213,1 @@\n-            long[] d) {\n-        long total = 1;\n+            long total) {\n@@ -251,2 +215,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total = total*d[i];\n+            total *= (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n@@ -261,6 +224,4 @@\n-        if (total == valid) {\n-            System.out.println(op + \": Success\");\n-        } else {\n-            System.out.println(\"Invalid total: \" + total);\n-            System.out.println(\"Expected value = \" + valid);\n-            throw new Exception(op + \": Failed\");\n+        if (total != valid) {\n+            throw new Exception(\n+                \"Invalid total: \" + total + \" \" +\n+                \"Expected value = \" + valid + \" \" + op + \": Failed\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_long.java","additions":35,"deletions":74,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -47,1 +47,0 @@\n-                                               \"-XX:LoopUnrollLimit=\" + 250,\n@@ -62,1 +61,0 @@\n-        double[] d = new double[256 * 1024];\n@@ -68,1 +66,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n+            total = sumReductionImplement(a, b, c, total);\n@@ -96,1 +94,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -102,1 +100,0 @@\n-            double[] d,\n@@ -105,2 +102,1 @@\n-            d[i] = Math.abs(-a[i] * -b[i]) + Math.abs(-a[i] * -c[i]) + Math.abs(-b[i] * -c[i]);\n-            total += d[i];\n+            total += Math.abs(-a[i] * -b[i]) + Math.abs(-a[i] * -c[i]) + Math.abs(-b[i] * -c[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedAbsNeg_Double.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -47,1 +47,0 @@\n-                                               \"-XX:LoopUnrollLimit=\" + 250,\n@@ -93,1 +92,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedAbsNeg_Float.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -46,1 +46,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -56,1 +56,1 @@\n-    @Run(test = {\"sumReductionImplement\"},\n+    @Run(test = {\"sumReductionWithStoreImplement\"},\n@@ -67,8 +67,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n-        }\n-        if (total == valid) {\n-            System.out.println(\"Success\");\n-        } else {\n-            System.out.println(\"Invalid sum of elements variable in total: \" + total);\n-            System.out.println(\"Expected value = \" + valid);\n-            throw new Exception(\"Failed\");\n+            total = sumReductionWithStoreImplement(a, b, c, d, total);\n@@ -76,0 +69,1 @@\n+        testCorrectness(total, valid, \"sumReductionWithStore\");\n@@ -91,1 +85,3 @@\n-    \/\/ Require avx for SQRT_VD\n+    \/* Vectorization is expected but not enabled without store.\n+       The store could be removed later.\n+       Require avx for SQRT_VD. *\/\n@@ -93,4 +89,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.ADD_REDUCTION_VD, IRNode.SQRT_V})\n-    @IR(applyIfCPUFeature = {\"avx\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -101,1 +94,1 @@\n-    public static double sumReductionImplement(\n+    public static double sumReductionWithStoreImplement(\n@@ -114,0 +107,11 @@\n+    public static void testCorrectness(\n+            double total,\n+            double valid,\n+            String op) throws Exception {\n+        if (total != valid) {\n+            throw new Exception(\n+                \"Invalid total: \" + total + \" \" +\n+                \"Expected value = \" + valid + \" \" + op + \": Failed\");\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedSqrt_Double.java","additions":21,"deletions":17,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -55,1 +55,2 @@\n-    @Run(test = {\"sumReductionImplement\"},\n+    @Run(test = {\"sumReductionImplement\",\n+                 \"sumReductionWithStoreImplement\"},\n@@ -66,1 +67,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n+            total = sumReductionImplement(a, b, c, total);\n@@ -68,6 +69,4 @@\n-        if (total == valid) {\n-            System.out.println(\"Success\");\n-        } else {\n-            System.out.println(\"Invalid sum of elements variable in total: \" + total);\n-            System.out.println(\"Expected value = \" + valid);\n-            throw new Exception(\"Failed\");\n+        testCorrectness(total, valid, \"sumReduction\");\n+        total = 0;\n+        for (int j = 0; j < 2000; j++) {\n+            total = sumReductionWithStoreImplement(a, b, c, d, total);\n@@ -75,0 +74,1 @@\n+        testCorrectness(total, valid, \"sumReductionWithStore\");\n@@ -90,0 +90,2 @@\n+    \/* Vectorization is expected but not enabled.\n+       A positive IR rule should be added later. *\/\n@@ -91,1 +93,15 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VD})\n+    public static double sumReductionImplement(\n+            double[] a,\n+            double[] b,\n+            double[] c,\n+            double total) {\n+        for (int i = 0; i < a.length; i++) {\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n+        }\n+        return total;\n+    }\n+\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -96,1 +112,1 @@\n-    public static double sumReductionImplement(\n+    public static double sumReductionWithStoreImplement(\n@@ -109,0 +125,11 @@\n+    public static void testCorrectness(\n+            double total,\n+            double valid,\n+            String op) throws Exception {\n+        if (total != valid) {\n+            throw new Exception(\n+                \"Invalid total: \" + total + \" \" +\n+                \"Expected value = \" + valid + \" \" + op + \": Failed\");\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Double.java","additions":39,"deletions":12,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -61,1 +61,0 @@\n-        float[] d = new float[256 * 1024];\n@@ -66,1 +65,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n+            total = sumReductionImplement(a, b, c, total);\n@@ -91,1 +90,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -100,1 +99,0 @@\n-            float[] d,\n@@ -103,2 +101,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total += d[i];\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Float.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Scenario[] scenarios = new Scenario[8];\n+        Scenario[] scenarios = new Scenario[6];\n@@ -45,1 +45,1 @@\n-            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+            for (int maxUnroll : new int[] {4, 8, 16}) {\n@@ -61,1 +61,0 @@\n-        int[] d = new int[256 * 1024];\n@@ -66,1 +65,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n+            total = sumReductionImplement(a, b, c, total);\n@@ -91,1 +90,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -100,1 +99,0 @@\n-            int[] d,\n@@ -103,2 +101,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total += d[i];\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Int.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-        long[] d = new long[256 * 1024];\n@@ -67,1 +66,1 @@\n-            total = sumReductionImplement(a, b, c, d, total);\n+            total = sumReductionImplement(a, b, c, total);\n@@ -93,2 +92,1 @@\n-       for long and int (SuperWord::implemented).\n-       Additionally providing a negative test for this. *\/\n+       for long and int (SuperWord::implemented). *\/\n@@ -96,4 +94,1 @@\n-    @IR(applyIfOr = {\"SuperWordReductions\", \"false\", \"LoopMaxUnroll\", \"< 8\"},\n-        failOn = {IRNode.ADD_REDUCTION_VL})\n-    @IR(applyIfCPUFeature = {\"avx2\", \"false\"},\n-        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n@@ -108,1 +103,0 @@\n-            long[] d,\n@@ -111,2 +105,1 @@\n-            d[i] = (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n-            total += d[i];\n+            total += (a[i] * b[i]) + (a[i] * c[i]) + (b[i] * c[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Long.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"}]}