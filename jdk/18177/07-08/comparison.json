{"files":[{"patch":"@@ -544,1 +544,43 @@\n-        this(new CharArraySequence(in, offset, len), mc);\n+        this(offset == 0 && len == in.length\n+                        ? new CharArraySequence0(in)\n+                        : new CharArraySequence1(in, offset, len),\n+                mc);\n+    }\n+\n+    private record CharArraySequence0(char[] array) implements CharSequence {\n+        @Override\n+        public int length() {\n+            return array.length;\n+        }\n+\n+        @Override\n+        public char charAt(int index) {\n+            return array[index];\n+        }\n+\n+        @Override\n+        public CharSequence subSequence(int offset, int length) {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+\n+    private record CharArraySequence1(char[] array, int offset, int length) implements CharSequence {\n+        CharArraySequence1 {\n+            if ((offset | length) < 0 || length > array.length - offset)\n+                throw new NumberFormatException();\n+        }\n+\n+        @Override\n+        public int length() {\n+            return length;\n+        }\n+\n+        @Override\n+        public char charAt(int index) {\n+            return array[offset + index];\n+        }\n+\n+        @Override\n+        public CharSequence subSequence(int offset, int length) {\n+            throw new UnsupportedOperationException();\n+        }\n@@ -833,22 +875,0 @@\n-    private record CharArraySequence(char[] array, int offset, int length) implements CharSequence {\n-        CharArraySequence {\n-            if ((offset | length) < 0 || offset + length > array.length)\n-                throw new NumberFormatException();\n-        }\n-\n-        @Override\n-        public int length() {\n-            return length;\n-        }\n-\n-        @Override\n-        public char charAt(int offset) {\n-            return array[offset];\n-        }\n-\n-        @Override\n-        public CharSequence subSequence(int offset, int length) {\n-            throw new UnsupportedOperationException();\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":43,"deletions":23,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-        if (numDigits < 10)\n+        if (numDigits < 10) {\n@@ -615,1 +615,1 @@\n-        else {\n+        } else {\n@@ -617,1 +617,1 @@\n-            if (numBits + 31 >= (1L << 32))\n+            if (numBits + 31 >= (1L << 32)) {\n@@ -619,0 +619,1 @@\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}