{"files":[{"patch":"@@ -559,1 +559,4 @@\n-            return array[offset + index];\n+            index += offset;\n+            if (index >= length)\n+                throw new IndexOutOfBoundsException();\n+            return array[index];\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import static org.testng.Assert.assertThrows;\n+\n@@ -70,0 +72,23 @@\n+\n+    @Test\n+    public void errorInput() {\n+        String[] strings = {\"+\", \"-\", \"\", \"e\", \".\"};\n+        for (String string : strings) {\n+            assertThrows(\n+                    NumberFormatException.class,\n+                    () -> new BigDecimal(string));\n+            assertThrows(\n+                    NumberFormatException.class,\n+                    () -> new BigDecimal(string.toCharArray()));\n+\n+            if (!string.isEmpty()) {\n+                assertThrows(\n+                        NumberFormatException.class,\n+                        () -> new BigDecimal(\n+                                (string + \"123\").toCharArray(), 0, 1));\n+            }\n+            assertThrows(\n+                    NumberFormatException.class,\n+                    () -> new BigDecimal((\"12e\" + string + \"123\").toCharArray(), 3, 1));\n+        }\n+    }\n","filename":"test\/jdk\/java\/math\/BigDecimal\/Constructor.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"}]}