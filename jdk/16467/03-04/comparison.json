{"files":[{"patch":"@@ -25,0 +25,2 @@\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n@@ -48,6 +50,2 @@\n-    private static JProgressBar progressBar;\n-    private static volatile BufferedImage withBorder = null;\n-    private static volatile BufferedImage withoutBorder = null;\n-\n-    public static void main(String[] args) throws Exception {\n-        boolean equal;\n+    public static void main(String[] args) throws InvocationTargetException,\n+            InterruptedException {\n@@ -60,10 +58,15 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                setLookAndFeel(laf);\n-                initProgressBar();\n-                progressBar.setBorderPainted(true);\n-                withBorder = paintToImage(progressBar);\n-                progressBar.setBorderPainted(false);\n-                withoutBorder = paintToImage(progressBar);\n-            });\n-            equal = Util.compareBufferedImages(withBorder, withoutBorder);\n-            if (equal) {\n+            SwingUtilities.invokeAndWait(() -> test(laf));\n+        }\n+    }\n+\n+    private static void test(UIManager.LookAndFeelInfo laf) {\n+        setLookAndFeel(laf);\n+        JProgressBar progressBar = createProgressBar();\n+        progressBar.setBorderPainted(true);\n+        BufferedImage withBorder = paintToImage(progressBar);\n+        progressBar.setBorderPainted(false);\n+        BufferedImage withoutBorder = paintToImage(progressBar);\n+\n+        boolean equal = Util.compareBufferedImages(withBorder, withoutBorder);\n+        if (equal) {\n+            try {\n@@ -72,3 +75,3 @@\n-                throw new RuntimeException(\"JProgressBar border is painted when border\\n\" +\n-                        \" painting is set to false\");\n-            }\n+            } catch (IOException e) {}\n+            throw new RuntimeException(\"JProgressBar border is painted when border\\n\" +\n+                    \" painting is set to false\");\n@@ -89,2 +92,2 @@\n-    private static void initProgressBar() {\n-        progressBar = new JProgressBar();\n+    private static JProgressBar createProgressBar() {\n+        JProgressBar progressBar = new JProgressBar();\n@@ -94,0 +97,1 @@\n+        return progressBar;\n","filename":"test\/jdk\/javax\/swing\/JProgressBar\/TestProgressBarBorder.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"}]}