{"files":[{"patch":"@@ -112,1 +112,2 @@\n- * whether a security manager is allowed or disallowed<\/a><\/b>:\n+ * whether a security manager is\n+ * <a href=\"..\/..\/..\/java\/lang\/SecurityManager.html#set-security-manager\">allowed or disallowed<\/a><\/a><\/b>:\n@@ -118,8 +119,8 @@\n- * {@code getSubject(AccessControlContext)} method.\n-*  <li>If a security manager is not allowed, which means it\n- * {@linkplain System#setSecurityManager is not set and not allowed to be set\n- * dynamically}, a {@code doAs} or {@code callAs} call binds a {@code Subject}\n- * object to the period of execution of an action, and the subject can be\n- * retrieved using the {@code current} method inside the action. This subject\n- * can be inherited by child threads if they are started and terminate within\n- * the execution of its parent thread using structured concurrency.\n+ * {@code getSubject(AccessControlContext)} or {@code current} method.\n+*  <li>If a security manager is not allowed, which means it is not set and\n+ * not allowed to be set dynamically, a {@code doAs} or {@code callAs} call\n+ * binds a {@code Subject} object to the period of execution of an action,\n+ * and the subject can be retrieved using the {@code current} method inside\n+ * the action. This subject can be inherited by child threads if they are\n+ * started and terminate within the execution of its parent thread using\n+ * structured concurrency.\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Subject.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.security.AccessController;\n@@ -69,1 +70,1 @@\n-            Subject subject = Subject.current();\n+            Subject subject = Subject.getSubject(AccessController.getContext());\n","filename":"test\/jdk\/javax\/management\/monitor\/ThreadPoolAccTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @summary Implement Subject.current and Subject.callAs using scoped values\n+ * @summary Implement Subject.current and Subject.callAs using scoped values.\n+ *      Need @enablePreview to use StructuredTaskScope.\n","filename":"test\/jdk\/javax\/security\/auth\/Subject\/CallAsWithScopedValue.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @bug 8296244\n@@ -35,0 +36,1 @@\n+ * @summary ensures the old implementation still works when SM is allowed\n@@ -38,3 +40,0 @@\n-\/\/    static PrivilegedAction<AccessControlContext> action\n-\/\/            = () -> AccessController.getContext();\n-\n","filename":"test\/jdk\/javax\/security\/auth\/Subject\/Compat.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        \/\/ Here, AccessController::getContext returns a plan ACC without\n+        \/\/ Here, AccessController::getContext returns a plain ACC without\n","filename":"test\/jdk\/javax\/security\/auth\/Subject\/UnsupportedSV.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.security.AccessControlContext;\n@@ -30,0 +31,1 @@\n+import java.security.AccessController;\n@@ -283,1 +285,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -294,1 +297,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -324,1 +328,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -348,1 +353,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -366,1 +372,2 @@\n-        Subject s = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject s = Subject.getSubject(acc);\n@@ -386,1 +393,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -417,1 +425,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -443,1 +452,2 @@\n-        Subject s = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject s = Subject.getSubject(acc);\n@@ -473,1 +483,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -492,1 +503,2 @@\n-        Subject subject = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject subject = Subject.getSubject(acc);\n@@ -506,1 +518,2 @@\n-        Subject s = Subject.current();\n+        AccessControlContext acc = AccessController.getContext();\n+        Subject s = Subject.getSubject(acc);\n","filename":"test\/jdk\/javax\/security\/auth\/Subject\/doAs\/NestedActions.java","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"}]}