[{"commit":{"message":"Review comments + extending IR tests with instruction level checks"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"c128291c83520b34a70bbdfe9b94cdc27da3df09"},{"commit":{"message":"Review suggestions incorporated."},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"84f2e04fae589ba5924851c703d13f7f939022dc"},{"commit":{"message":"Removing target specific hooks"},"files":[],"sha":"433200639abf1b38ca1852f82ab5341a0f6d3cf0"},{"commit":{"message":"Merge branch 'master' of http:\/\/github.com\/openjdk\/jdk into JDK-8341137"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"73a402a997948188f460e55092e4f69aa75266b2"},{"commit":{"message":"Review resoultions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorMultiplyOptBenchmark.java"}],"sha":"dee16fea8ad9503c7168d55a5bcd0c9f213e3411"},{"commit":{"message":"Merge branch 'master' of http:\/\/github.com\/openjdk\/jdk into JDK-8341137"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"555ffbb78845ce1ddb34c5c73372e05442ae3e7c"},{"commit":{"message":"Handle new I2L pattern, IR tests, Rewiring pattern inputs to MulVL further optimizes JIT code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"5b1c4a03a4de0af07a60ba004a7745e2c84a6e26"},{"commit":{"message":"Review resolutions"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"3d01718e7a099a1d3ab098a20eadd370852704d6"},{"commit":{"message":"8341137: Optimize long vector multiplication using x86 VPMULUDQ instruction"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorXXH3HashingBenchmark.java"}],"sha":"a5c1f27a702ccd66a7ebdc1f64f5b151d44b61ce"}]