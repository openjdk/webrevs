[{"commit":{"message":"Refining comment"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"}],"sha":"eba586b5342ad7702fedffca9248b4f7a96fa39f"},{"commit":{"message":"Review resolutions"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"0dbdc7e30062b166522441f3136be7823ca675c6"},{"commit":{"message":"Creating specialized IR to shield pattern from subsequent transforms in optimization pipeline"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"613f491bad43ec456c937046fa0a1885e9679f0e"},{"commit":{"message":"Removing target specific hooks"},"files":[],"sha":"433200639abf1b38ca1852f82ab5341a0f6d3cf0"},{"commit":{"message":"Merge branch 'master' of http:\/\/github.com\/openjdk\/jdk into JDK-8341137"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"73a402a997948188f460e55092e4f69aa75266b2"},{"commit":{"message":"Review resoultions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorMultiplyOptBenchmark.java"}],"sha":"dee16fea8ad9503c7168d55a5bcd0c9f213e3411"},{"commit":{"message":"Merge branch 'master' of http:\/\/github.com\/openjdk\/jdk into JDK-8341137"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"555ffbb78845ce1ddb34c5c73372e05442ae3e7c"},{"commit":{"message":"Handle new I2L pattern, IR tests, Rewiring pattern inputs to MulVL further optimizes JIT code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"5b1c4a03a4de0af07a60ba004a7745e2c84a6e26"},{"commit":{"message":"Review resolutions"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"}],"sha":"3d01718e7a099a1d3ab098a20eadd370852704d6"},{"commit":{"message":"8341137: Optimize long vector multiplication using x86 VPMULUDQ instruction"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMultiplyOpt.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorXXH3HashingBenchmark.java"}],"sha":"a5c1f27a702ccd66a7ebdc1f64f5b151d44b61ce"}]