{"files":[{"patch":"@@ -16584,0 +16584,5 @@\n+                                     $vtmp3$$FloatRegister, $vtmp2$$FloatRegister,\n+                                     $vtmp1$$FloatRegister, $vtmp0$$FloatRegister,\n+                                     $vtmp4$$FloatRegister, $vtmp5$$FloatRegister,\n+                                     $vtmp6$$FloatRegister, $vtmp7$$FloatRegister,\n+                                     $vtmp8$$FloatRegister, $vtmp9$$FloatRegister,\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -52,0 +52,5 @@\n+                                           FloatRegister vdata0, FloatRegister vdata1,\n+                                           FloatRegister vdata2, FloatRegister vdata3,\n+                                           FloatRegister vmul0, FloatRegister vmul1,\n+                                           FloatRegister vmul2, FloatRegister vmul3,\n+                                           FloatRegister vpow, FloatRegister vpowm,\n@@ -53,1 +58,1 @@\n-  assert_different_registers(ary, cnt, result, rscratch1, rscratch2);\n+  ARRAYS_HASHCODE_REGISTERS;\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,5 @@\n-  address arrays_hashcode(Register ary, Register cnt, Register result, BasicType eltype);\n+  address arrays_hashcode(Register ary, Register cnt, Register result, FloatRegister vdata0,\n+                          FloatRegister vdata1, FloatRegister vdata2, FloatRegister vdata3,\n+                          FloatRegister vmul0, FloatRegister vmul1, FloatRegister vmul2,\n+                          FloatRegister vmul3, FloatRegister vpow, FloatRegister vpowm,\n+                          BasicType eltype);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1442,0 +1442,18 @@\n+\/\/ Ensure that the inline code and the stub use the same registers.\n+#define ARRAYS_HASHCODE_REGISTERS \\\n+  do {                      \\\n+    assert(result == r0  && \\\n+           ary    == r1  && \\\n+           cnt    == r2  && \\\n+           vdata0 == v3  && \\\n+           vdata1 == v2  && \\\n+           vdata2 == v1  && \\\n+           vdata3 == v0  && \\\n+           vmul0  == v4  && \\\n+           vmul1  == v5  && \\\n+           vmul2  == v6  && \\\n+           vmul3  == v7  && \\\n+           vpow   == v12 && \\\n+           vpowm  == v13, \"registers must match aarch64.ad\"); \\\n+  } while (0)\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -5327,3 +5327,1 @@\n-    assert_different_registers(ary, cnt, result);\n-    assert_different_registers(vdata0, vdata1, vdata2, vdata3, vmul0, vmul1, vmul2, vmul3, vpow,\n-                               vpowm);\n+    ARRAYS_HASHCODE_REGISTERS;\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}