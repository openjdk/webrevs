{"files":[{"patch":"@@ -677,2 +677,1 @@\n-        Path path = Paths.get(fileName);\n-        if (!Files.exists(path)) {\n+        if (!Files.exists(fullp)) {\n@@ -818,1 +817,0 @@\n-     * @returns the parsed configuration\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Config.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.krb5.Config;\n+import sun.security.krb5.KrbException;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+\/*\n+ * @test\n+ * @bug 8356997\n+ * @summary Support \"include\" anywhere\n+ * @modules java.security.jgss\/sun.security.krb5\n+ * @library \/test\/lib\n+ * @run main\/othervm DuplicatedIncludes\n+ *\/\n+public class DuplicatedIncludes {\n+    public static void main(String[] args) throws Exception {\n+\n+        var cwd = Path.of(\"\").toAbsolutePath().toString();\n+        System.setProperty(\"java.security.krb5.conf\", \"krb5.conf\");\n+\n+        \/\/ It's OK to include a file multiple times\n+        Files.writeString(Path.of(\"krb5.conf\"), String.format(\"\"\"\n+                include %1$s\/sub\n+                include %1$s\/sub\n+                \"\"\", cwd));\n+\n+        Files.writeString(Path.of(\"sub\"), \"\"\"\n+                [a]\n+                b = c\n+                \"\"\");\n+        Config.refresh();\n+\n+        \/\/ But a file cannot include itself\n+        Files.writeString(Path.of(\"sub\"), String.format(\"\"\"\n+                include %1$s\/sub\n+                \"\"\", cwd));\n+        Asserts.assertThrows(KrbException.class, () -> Config.refresh());\n+\n+        \/\/ A file also cannot include a file that includes it\n+        Files.writeString(Path.of(\"sub\"), String.format(\"\"\"\n+                include %1$s\/sub2\n+                \"\"\", cwd));\n+        Files.writeString(Path.of(\"sub2\"), String.format(\"\"\"\n+                include %1$s\/sub\n+                \"\"\", cwd));\n+        Asserts.assertThrows(KrbException.class, () -> Config.refresh());\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/config\/DuplicatedIncludes.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -37,1 +37,1 @@\n- * @run main\/othervm IncludeDup\n+ * @run main\/othervm IncludeSameKey\n@@ -39,1 +39,1 @@\n-public class IncludeDup {\n+public class IncludeSameKey {\n","filename":"test\/jdk\/sun\/security\/krb5\/config\/IncludeSameKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/sun\/security\/krb5\/config\/IncludeDup.java","status":"renamed"}]}