{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,3 @@\n+    public static final String LABEL_PROPERTY = \"label\";\n+    public static final String COLOR_PROPERTY = \"color\";\n+\n@@ -54,0 +57,11 @@\n+    \/\/ Return the node properties that are present in the input graph, excluding\n+    \/\/ properties computed by IGV itself. This is useful e.g. to produce the\n+    \/\/ difference view, where nodes should be compared based only on their\n+    \/\/ intrinsic characteristics.\n+    public Properties getPrimaryProperties() {\n+        Properties primaryProperties = new Properties(getProperties());\n+        primaryProperties.setProperty(LABEL_PROPERTY, null);\n+        primaryProperties.setProperty(COLOR_PROPERTY, null);\n+        return primaryProperties;\n+    }\n+\n@@ -75,1 +89,1 @@\n-            getProperties().setProperty(\"color\", hexColor);\n+            getProperties().setProperty(COLOR_PROPERTY, hexColor);\n@@ -77,1 +91,1 @@\n-            getProperties().setProperty(\"color\", null);\n+            getProperties().setProperty(COLOR_PROPERTY, null);\n@@ -82,1 +96,1 @@\n-        String hexColor = getProperties().get(\"color\");\n+        String hexColor = getProperties().get(COLOR_PROPERTY);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputNode.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-    public static final String LABEL_PROPERTY = \"label\";\n+    public static final String EDGE_LABEL_PROPERTY = \"label\";\n@@ -658,1 +658,1 @@\n-                label = readAttribute(LABEL_PROPERTY);\n+                label = readAttribute(EDGE_LABEL_PROPERTY);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Parser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-        for (Property p : otherNode.getProperties()) {\n+        for (Property p : otherNode.getPrimaryProperties()) {\n@@ -367,1 +367,1 @@\n-        for (Property p : firstNode.getProperties()) {\n+        for (Property p : firstNode.getPrimaryProperties()) {\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -374,1 +374,1 @@\n-        inputNode.getProperties().setProperty(\"label\", label.replaceAll(\"\\\\R\", \" \"));\n+        inputNode.getProperties().setProperty(InputNode.LABEL_PROPERTY, label.replaceAll(\"\\\\R\", \" \"));\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,2 +51,0 @@\n-    private static final String DEFAULT_PROPERTY = \"label\";\n-\n@@ -75,1 +73,1 @@\n-            name = DEFAULT_PROPERTY;\n+            name = InputNode.LABEL_PROPERTY;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}