{"files":[{"patch":"@@ -45,1 +45,1 @@\n-short short_array[4] = { 0, 0, 0, 0 };\n+long array[2] = { 0 };\n@@ -63,1 +63,1 @@\n-  address generate_detect_misaligned_vector(address* fault_pc1, address* fault_pc2, address* continuation_pc) {\n+  address generate_detect_misaligned_vector(address* fault_pc1, address* fault_pc2, address* continuation_pc, int esize) {\n@@ -67,0 +67,1 @@\n+    Assembler::SEW sew = Assembler::elembytes_to_sew(esize);\n@@ -70,3 +71,3 @@\n-    __ la(t1, ExternalAddress((address) short_array));\n-    __ addi(t1, t1, 1);   \/\/ Misaligned address\n-    __ vsetivli(x0, 1, Assembler::e16);\n+    __ la(t1, ExternalAddress((address) array));\n+    __ addi(t1, t1, esize - 1);   \/\/ Misaligned address\n+    __ vsetivli(x0, 1, sew);\n@@ -78,1 +79,1 @@\n-    __ vse16_v(v1, t1);   \/\/ Misaligned vector store\n+    __ vsex_v(v1, t1, sew);   \/\/ Misaligned vector store\n@@ -81,1 +82,1 @@\n-    __ vle16_v(v2, t1);   \/\/ Misaligned vector load\n+    __ vlex_v(v2, t1, sew);   \/\/ Misaligned vector load\n@@ -558,0 +559,7 @@\n+  \/\/ Detect with element sizes of 2, 4, and 8 bytes\n+  return detect_misaligned_vector_support(2) &&\n+         detect_misaligned_vector_support(4) &&\n+         detect_misaligned_vector_support(8);\n+}\n+\n+bool VM_Version::detect_misaligned_vector_support(int esize) {\n@@ -561,3 +569,3 @@\n-    if (stub_blob == nullptr) {\n-      vm_exit_during_initialization(\"Unable to allocate detect_misaligned_vector_stub\");\n-    }\n+  if (stub_blob == nullptr) {\n+    vm_exit_during_initialization(\"Unable to allocate detect_misaligned_vector_stub\");\n+  }\n@@ -565,7 +573,7 @@\n-    CodeBuffer c(stub_blob);\n-    VM_Version_StubGenerator g(&c);\n-    detect_misaligned_vector_stub = CAST_TO_FN_PTR(detect_misaligned_vector_stub_t,\n-                                                   g.generate_detect_misaligned_vector(\n-                                                   &VM_Version::_misaligned_vector_fault_pc1,\n-                                                   &VM_Version::_misaligned_vector_fault_pc2,\n-                                                   &VM_Version::_misaligned_vector_continuation_pc));\n+  CodeBuffer c(stub_blob);\n+  VM_Version_StubGenerator g(&c);\n+  detect_misaligned_vector_stub = CAST_TO_FN_PTR(detect_misaligned_vector_stub_t,\n+                                                 g.generate_detect_misaligned_vector(\n+                                                 &VM_Version::_misaligned_vector_fault_pc1,\n+                                                 &VM_Version::_misaligned_vector_fault_pc2,\n+                                                 &VM_Version::_misaligned_vector_continuation_pc, esize));\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":25,"deletions":17,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -535,0 +535,3 @@\n+\n+  \/\/ Detect misaligned vector support by sew\n+  static bool detect_misaligned_vector_support(int esize);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}