{"files":[{"patch":"@@ -505,1 +505,1 @@\n-  static bool supports_misaligned_vector_accesses() { return unaligned_vector.value() == MISALIGNED_VECTOR_FAST; }\n+  static bool supports_misaligned_vector_accesses() { return !AlignVector; }\n@@ -507,1 +507,1 @@\n-  static bool is_check_misaligned_vector_fault(address pc) {\n+  static bool is_misaligned_vector_fault(address pc) {\n@@ -511,1 +511,1 @@\n-  static address continuation_for_check_misaligned_vector_fault(address pc) {\n+  static address continuation_for_misaligned_vector_fault(address pc) {\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -291,2 +291,2 @@\n-    if (sig == SIGBUS && VM_Version::is_check_misaligned_vector_fault(pc)) {\n-      os::Posix::ucontext_set_pc(uc, VM_Version::continuation_for_check_misaligned_vector_fault(pc));\n+    if (sig == SIGBUS && VM_Version::is_misaligned_vector_fault(pc)) {\n+      os::Posix::ucontext_set_pc(uc, VM_Version::continuation_for_misaligned_vector_fault(pc));\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/os_linux_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}