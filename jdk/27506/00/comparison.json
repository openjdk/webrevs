{"files":[{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -645,1 +645,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -652,1 +652,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n@@ -665,1 +665,1 @@\n-        int index = fi.apply((int) a.byteSize());\n+        int index = fi.apply((int) a.byteSize()) & (~(SPECIES.elementSize() - 1));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}