{"files":[{"patch":"@@ -423,1 +423,0 @@\n-            \/\/ remove leading zero bytes per RFC 5246 Section 8.1.2\n@@ -425,0 +424,1 @@\n+                \/\/ remove leading zero bytes per RFC 5246 Section 8.1.2\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHKeyAgreement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -662,5 +662,8 @@\n-     * @param algorithm the requested secret-key algorithm. This is\n-     *      different from the {@code KeyAgreement} algorithm provided\n-     *      to the {@code getInstance} method. Use \"Generic\" if\n-     *      the output will be used as the input keying material of a\n-     *      {@link javax.crypto.KDF}.\n+     * @param algorithm the requested secret-key algorithm. This is different\n+     *      from the {@code KeyAgreement} algorithm provided to the\n+     *      {@code getInstance} method. See the SecretKey Algorithms section in the\n+     *      <a href=\"{@docRoot}\/..\/specs\/security\/standard-names.html#secretkey-algorithms\">\n+     *      Java Security Standard Algorithm Names Specification<\/a>\n+     *      for information about standard secret key algorithm names.\n+     *      Use \"Generic\" if the output will be used as the input keying\n+     *      material of a {@link javax.crypto.KDF}.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyAgreement.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @summary make sure Generic is accepted by all KeyAgreement\n+ * @summary make sure Generic is accepted by all KeyAgreement implementations\n","filename":"test\/jdk\/java\/security\/KeyAgreement\/Generic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}