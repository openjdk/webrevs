{"files":[{"patch":"@@ -88,1 +88,1 @@\n-  assert(_obj_pool != NULL, \"object pool does not exist\");\n+  assert(_obj_pool != nullptr, \"object pool does not exist\");\n@@ -230,1 +230,1 @@\n-  assert(fr != NULL && reg_map != NULL, \"sanity\");\n+  assert(fr != nullptr && reg_map != nullptr, \"sanity\");\n@@ -233,1 +233,1 @@\n-  if (_selected != NULL) {\n+  if (_selected != nullptr) {\n@@ -269,1 +269,1 @@\n-    \/\/ Returns NULL and that should indicate to the caller that\n+    \/\/ Returns null and that should indicate to the caller that\n@@ -272,1 +272,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/code\/debugInfo.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-\/\/ least one of them were scalar replaced.\n+\/\/ least one of them was scalar replaced.\n@@ -213,1 +213,1 @@\n-     , _selected(NULL)\n+     , _selected(nullptr)\n@@ -219,3 +219,3 @@\n-     , _selector(NULL)\n-     , _merge_pointer(NULL)\n-     , _selected(NULL)\n+     , _selector(nullptr)\n+     , _merge_pointer(nullptr)\n+     , _selected(nullptr)\n@@ -233,1 +233,1 @@\n-  ObjectValue*                selected()                      { assert(_selected != NULL, \"not yet.\"); return _selected; };\n+  ObjectValue*                selected()                      { assert(_selected != nullptr, \"not yet.\"); return _selected; };\n","filename":"src\/hotspot\/share\/code\/debugInfo.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1109,1 +1109,1 @@\n-  return (_name != NULL && !strcmp(_name, \"uncommon_trap\"));\n+  return (_name != nullptr && !strcmp(_name, \"uncommon_trap\"));\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-  bool        is_loc(uint i) const { return locoff()<= i && i < stkoff(); }\n+  bool        is_loc(uint i) const { return locoff() <= i && i < stkoff(); }\n@@ -534,1 +534,1 @@\n-\/\/    SafePoint->in(_merge_pointer_idx + 0) ----> Phi(Region, ccpp, NULL, NULL)\n+\/\/    SafePoint->in(_merge_pointer_idx + 0) ----> Phi(Region, ccpp, nullptr, nullptr)\n@@ -543,1 +543,1 @@\n-\/\/    SafePoint->in(_merge_pointer_idx + 0) ----> Phi(Region, ccpp, NULL, NULL)\n+\/\/    SafePoint->in(_merge_pointer_idx + 0) ----> Phi(Region, ccpp, nullptr, nullptr)\n@@ -613,1 +613,1 @@\n-    assert(jvms != NULL, \"JVMS reference is NULL.\");\n+    assert(jvms != nullptr, \"JVMS reference is null.\");\n@@ -618,1 +618,1 @@\n-    assert(jvms != NULL, \"JVMS reference is NULL.\");\n+    assert(jvms != nullptr, \"JVMS reference is nullptr.\");\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -392,1 +392,1 @@\n-      reduce_this_phi(ptnode_adr(n->_idx)->as_LocalVar());\n+      reduce_this_phi(n->as_Phi());\n@@ -422,2 +422,2 @@\n-bool ConnectionGraph::can_reduce_this_phi_inputs(PhiNode* phi) const {\n-  \/\/ Check if there is an scalar replaceable allocate in the Phi\n+bool ConnectionGraph::can_reduce_this_phi_check_inputs(PhiNode* phi) const {\n+  \/\/ Check if there is a scalar replaceable allocate in the Phi\n@@ -435,3 +435,3 @@\n-    if (ptn != NULL && ptn->scalar_replaceable()) {\n-      assert(ptn->ideal_node() != NULL && ptn->ideal_node()->is_Allocate(), \"sanity\");\n-      Node* alloc = ptn->ideal_node()->as_Allocate();\n+    if (ptn != nullptr && ptn->scalar_replaceable()) {\n+      assert(ptn->ideal_node() != nullptr && ptn->ideal_node()->is_Allocate(), \"sanity\");\n+      AllocateNode* alloc = ptn->ideal_node()->as_Allocate();\n@@ -439,1 +439,1 @@\n-      if (PhaseMacroExpand::can_eliminate_allocation(_igvn, alloc->as_Allocate(), NULL, true)) {\n+      if (PhaseMacroExpand::can_eliminate_allocation(_igvn, alloc, nullptr, true)) {\n@@ -453,1 +453,1 @@\n-bool ConnectionGraph::can_reduce_this_phi_users(PhiNode* phi) const {\n+bool ConnectionGraph::can_reduce_this_phi_check_users(PhiNode* phi) const {\n@@ -471,1 +471,1 @@\n-\/\/ Returns true if: 1) It's profitable to reduce the merge, and 2) It The Phi is\n+\/\/ Returns true if: 1) It's profitable to reduce the merge, and 2) The Phi is\n@@ -475,6 +475,3 @@\n-bool ConnectionGraph::can_reduce_this_phi(PointsToNode* var) const {\n-  assert(var->escape_state() == PointsToNode::NoEscape, \"Phi should be NoEscape\");\n-\n-  PhiNode* phi = var->ideal_node()->as_Phi();\n-  const Type* phi_t = _igvn->type(phi);\n-  if (phi_t == NULL || phi_t->isa_instptr() == NULL || !phi_t->is_instptr()->klass_is_exact()) {\n+bool ConnectionGraph::can_reduce_this_phi(PhiNode* ophi) const {\n+  const Type* phi_t = _igvn->type(ophi);\n+  if (phi_t == nullptr || phi_t->isa_instptr() == nullptr || !phi_t->is_instptr()->klass_is_exact()) {\n@@ -484,1 +481,1 @@\n-  if (!can_reduce_this_phi_inputs(phi) || !can_reduce_this_phi_users(phi)) {\n+  if (!can_reduce_this_phi_check_inputs(ophi) || !can_reduce_this_phi_check_users(ophi)) {\n@@ -488,1 +485,1 @@\n-  NOT_PRODUCT(if (TraceReduceAllocationMerges) { tty->print_cr(\"Can reduce this Phi during invocation %d: \", _invocation); phi->dump(); })\n+  NOT_PRODUCT(if (TraceReduceAllocationMerges) { tty->print_cr(\"Can reduce this Phi during invocation %d: \", _invocation); ophi->dump(); })\n@@ -492,3 +489,3 @@\n-\/\/ This method will create SafePointScalarObjectNode for each combination of\n-\/\/ scalar replaceable allocation in 'var' and SafePoint node in 'safepoints'.\n-\/\/ Each SafePointScalarObjectNodes created here may describe multiple scalar\n+\/\/ This method will create a SafePointScalarObjectNode for each combination of\n+\/\/ scalar replaceable allocation in 'ophi' and SafePoint node in 'safepoints'.\n+\/\/ Each SafePointScalarObjectNode created here may describe multiple scalar\n@@ -498,4 +495,2 @@\n-\/\/ This method will set to 'NULL' entries in the Phi that are scalar replaceable.\n-void ConnectionGraph::reduce_this_phi_on_safepoints(LocalVarNode* var, Unique_Node_List* safepoints) {\n-  assert(var->ideal_node()->is_Phi(), \"Not a Phi!\");\n-  PhiNode* ophi             = var->ideal_node()->as_Phi();\n+\/\/ This method will set entries in the Phi that are scalar replaceable to 'null'.\n+void ConnectionGraph::reduce_this_phi_on_safepoints(PhiNode* ophi, Unique_Node_List* safepoints) {\n@@ -519,1 +514,1 @@\n-   if (ptn != NULL && ptn->scalar_replaceable()) {\n+   if (ptn != nullptr && ptn->scalar_replaceable()) {\n@@ -547,1 +542,1 @@\n-     if (ptn == NULL || !ptn->scalar_replaceable()) {\n+     if (ptn == nullptr || !ptn->scalar_replaceable()) {\n@@ -558,1 +553,1 @@\n-     assert(base_klass_node != NULL, \"This shouldn't happen.\");\n+     assert(base_klass_node != nullptr, \"This shouldn't happen.\");\n@@ -566,1 +561,1 @@\n-       const Type* field_type    = NULL;\n+       const Type* field_type    = nullptr;\n@@ -585,1 +580,1 @@\n-       assert(field_val != NULL, \"field_val is NULL\");\n+       assert(field_val != nullptr, \"field_val is null\");\n@@ -596,1 +591,1 @@\n-   NOT_PRODUCT(NULL),\n+   NOT_PRODUCT(nullptr),\n@@ -620,1 +615,1 @@\n-    if (ptn != NULL && ptn->scalar_replaceable()) {\n+    if (ptn != nullptr && ptn->scalar_replaceable()) {\n@@ -622,2 +617,1 @@\n-    }\n-    else {\n+    } else {\n@@ -633,2 +627,1 @@\n-void ConnectionGraph::reduce_this_phi(LocalVarNode* var) {\n-  Node* phi = var->ideal_node();\n+void ConnectionGraph::reduce_this_phi(PhiNode* ophi) {\n@@ -637,2 +630,2 @@\n-  for (uint i = 0; i < phi->outcnt(); i++) {\n-    Node* use = phi->raw_out(i);\n+  for (uint i = 0; i < ophi->outcnt(); i++) {\n+    Node* use = ophi->raw_out(i);\n@@ -640,4 +633,4 @@\n-    \/\/ All SafePoint nodes using the same Phi node uses the same debug\n-    \/\/ information (regarding to the Phi). Furthermore, reducing the Phi used\n-    \/\/ by a SafePoint requires changing the Phi Therefore, I collect all\n-    \/\/ safepoints and patch them all at once later.\n+    \/\/ All SafePoint nodes using the same Phi node use the same debug\n+    \/\/ information (regarding the Phi). Furthermore, reducing the Phi used by a\n+    \/\/ SafePoint requires changing the Phi. Therefore, I collect all safepoints\n+    \/\/ and patch them all at once later.\n@@ -649,1 +642,1 @@\n-  reduce_this_phi_on_safepoints(var, &safepoints);\n+  reduce_this_phi_on_safepoints(ophi, &safepoints);\n@@ -2156,0 +2149,1 @@\n+        Node* use_ideal = use->ideal_node();\n@@ -2157,2 +2151,2 @@\n-            use->ideal_node()->is_Phi() && can_reduce_this_phi(use)) {\n-          reducible_merges.push(use->ideal_node());\n+            use_ideal->is_Phi() && can_reduce_this_phi(use_ideal->as_Phi())) {\n+          reducible_merges.push(use_ideal);\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":38,"deletions":44,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -593,3 +593,3 @@\n-  bool can_reduce_this_phi(PointsToNode* var) const;\n-  bool can_reduce_this_phi_users(PhiNode* phi) const;\n-  bool can_reduce_this_phi_inputs(PhiNode* phi) const;\n+  bool can_reduce_this_phi(PhiNode* ophi) const;\n+  bool can_reduce_this_phi_check_users(PhiNode* ophi) const;\n+  bool can_reduce_this_phi_check_inputs(PhiNode* ophi) const;\n@@ -597,2 +597,2 @@\n-  void reduce_this_phi_on_safepoints(LocalVarNode* var, Unique_Node_List* safepoints);\n-  void reduce_this_phi(LocalVarNode* var);\n+  void reduce_this_phi_on_safepoints(PhiNode* ophi, Unique_Node_List* safepoints);\n+  void reduce_this_phi(PhiNode* ophi);\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-        } else if (safepoints != NULL) {\n+        } else if (safepoints != nullptr) {\n@@ -656,1 +656,1 @@\n-  if (PrintEliminateAllocations && safepoints != NULL) {\n+  if (PrintEliminateAllocations && safepoints != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -302,1 +302,1 @@\n-    ObjectValue* sv = NULL;\n+    ObjectValue* sv = nullptr;\n@@ -1216,1 +1216,1 @@\n-      if (sv == NULL) {\n+      if (sv == nullptr) {\n@@ -1583,1 +1583,1 @@\n-      \/\/ If the pointer didn't came from a scalar replaced object then\n+      \/\/ If the pointer didn't come from a scalar replaced object then\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}