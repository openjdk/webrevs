{"files":[{"patch":"@@ -799,2 +799,1 @@\n-      ConINode* con_stride = _igvn.intcon(stride);\n-      set_ctrl(con_stride, C->root());\n+      ConINode* con_stride = intcon(stride);\n@@ -808,2 +807,1 @@\n-      ConLNode* con_stride = _igvn.longcon(stride);\n-      set_ctrl(con_stride, C->root());\n+      ConLNode* con_stride = longcon(stride);\n@@ -826,2 +824,1 @@\n-    ConNode* con_scale = _igvn.intcon(scale);\n-    set_ctrl(con_scale, C->root());\n+    ConNode* con_scale = intcon(scale);\n@@ -844,2 +841,1 @@\n-      con_scale = _igvn.longcon(scale);\n-      set_ctrl(con_scale, C->root());\n+      con_scale = longcon(scale);\n@@ -1374,2 +1370,1 @@\n-  ConNode* zero = _igvn.intcon(0);\n-  set_ctrl(zero, C->root());\n+  ConNode* zero = intcon(0);\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1907,2 +1907,1 @@\n-  Node* max_value = _igvn.intcon(new_stride_con);\n-  set_ctrl(max_value, C->root());\n+  Node* max_value = intcon(new_stride_con);\n@@ -2107,2 +2106,1 @@\n-      new_limit = _igvn.intcon(limit->get_int() - stride_con);\n-      set_ctrl(new_limit, C->root());\n+      new_limit = intcon(limit->get_int() - stride_con);\n@@ -2114,2 +2112,1 @@\n-      Node* stride_l = _igvn.longcon(stride_con);\n-      set_ctrl(stride_l, C->root());\n+      Node* stride_l = longcon(stride_con);\n@@ -2122,2 +2119,1 @@\n-      Node* underflow_clamp_l = _igvn.longcon((stride_con > 0) ? min_jint : max_jint);\n-      set_ctrl(underflow_clamp_l, C->root());\n+      Node* underflow_clamp_l = longcon((stride_con > 0) ? min_jint : max_jint);\n@@ -2213,2 +2209,1 @@\n-  Node *one = _igvn.intcon(1);\n-  set_ctrl(one, C->root());\n+  Node *one = intcon(1);\n@@ -2350,2 +2345,1 @@\n-  Node* scale = _igvn.longcon(scale_con);\n-  set_ctrl(scale, C->root());\n+  Node* scale = longcon(scale_con);\n@@ -2390,2 +2384,1 @@\n-    Node* one = _igvn.longcon(1);\n-    set_ctrl(one, C->root());\n+    Node* one = longcon(1);\n@@ -2596,2 +2589,1 @@\n-      Node *zero = _igvn.zerocon(bt);\n-      set_ctrl(zero, C->root());\n+      Node *zero = zerocon(bt);\n@@ -2648,2 +2640,1 @@\n-          Node *zero = _igvn.integercon(0, exp_bt);\n-          set_ctrl(zero, C->root());\n+          Node *zero = integercon(0, exp_bt);\n@@ -2767,2 +2758,2 @@\n-  Node* zero = _igvn.longcon(0);\n-  Node* one  = _igvn.longcon(1);\n+  Node* zero = longcon(0);\n+  Node* one  = longcon(1);\n@@ -2770,4 +2761,1 @@\n-  Node* mini = _igvn.longcon(-max_jint);\n-  set_ctrl(zero, C->root());\n-  set_ctrl(one,  C->root());\n-  set_ctrl(mini, C->root());\n+  Node* mini = longcon(-max_jint);\n@@ -2975,2 +2963,1 @@\n-      Node *kill_con = _igvn.intcon(1-flip);\n-      set_ctrl(kill_con, C->root());\n+      Node *kill_con = intcon(1-flip);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":13,"deletions":26,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -316,2 +316,1 @@\n-  Node* outer_test = _igvn.intcon(0);\n-  set_ctrl(outer_test, C->root());\n+  Node* outer_test = intcon(0);\n@@ -972,2 +971,1 @@\n-  Node* int_zero = _igvn.intcon(0);\n-  set_ctrl(int_zero, C->root());\n+  Node* int_zero = intcon(0);\n@@ -980,2 +978,1 @@\n-  Node* int_stride = _igvn.intcon(stride_con);\n-  set_ctrl(int_stride, C->root());\n+  Node* int_stride = intcon(stride_con);\n@@ -1276,8 +1273,4 @@\n-  Node* long_zero = _igvn.longcon(0);\n-  set_ctrl(long_zero, C->root());\n-  Node* int_zero = _igvn.intcon(0);\n-  set_ctrl(int_zero, this->C->root());\n-  Node* long_one = _igvn.longcon(1);\n-  set_ctrl(long_one, this->C->root());\n-  Node* int_stride = _igvn.intcon(checked_cast<int>(stride_con));\n-  set_ctrl(int_stride, this->C->root());\n+  Node* long_zero = longcon(0);\n+  Node* int_zero = intcon(0);\n+  Node* long_one = longcon(1);\n+  Node* int_stride = intcon(checked_cast<int>(stride_con));\n@@ -1305,2 +1298,1 @@\n-    Node* K = _igvn.longcon(scale);\n-    set_ctrl(K, this->C->root());\n+    Node* K = longcon(scale);\n@@ -1337,2 +1329,1 @@\n-      Node* max_jint_plus_one_long = _igvn.longcon((jlong)max_jint + 1);\n-      set_ctrl(max_jint_plus_one_long, C->root());\n+      Node* max_jint_plus_one_long = longcon((jlong)max_jint + 1);\n@@ -1392,2 +1383,1 @@\n-    Node* max_jlong_long = _igvn.longcon(max_jlong);\n-    set_ctrl(max_jlong_long, this->C->root());\n+    Node* max_jlong_long = longcon(max_jlong);\n@@ -1427,2 +1417,1 @@\n-    K = _igvn.intcon(checked_cast<int>(scale));\n-    set_ctrl(K, this->C->root());\n+    K = intcon(checked_cast<int>(scale));\n@@ -4070,2 +4059,1 @@\n-    Node* ratio = _igvn.integercon(ratio_con, stride_con2_bt);\n-    set_ctrl(ratio, C->root());\n+    Node* ratio = integercon(ratio_con, stride_con2_bt);\n@@ -4491,2 +4479,1 @@\n-      ConINode* one = _igvn.intcon(1);\n-      set_ctrl(one, C->root());\n+      ConINode* one = intcon(1);\n@@ -6869,0 +6856,30 @@\n+ConINode* PhaseIdealLoop::intcon(jint i) {\n+  ConINode* node = _igvn.intcon(i);\n+  set_ctrl(node, C->root());\n+  return node;\n+}\n+\n+ConLNode *PhaseIdealLoop::longcon(jlong i) {\n+  ConLNode* node = _igvn.longcon(i);\n+  set_ctrl(node, C->root());\n+  return node;\n+}\n+\n+ConNode *PhaseIdealLoop::makecon(const Type* t) {\n+  ConNode* node = _igvn.makecon(t);\n+  set_ctrl(node, C->root());\n+  return node;\n+}\n+\n+ConNode* PhaseIdealLoop::integercon(jlong l, BasicType bt) {\n+  ConNode* node = _igvn.integercon(l, bt);\n+  set_ctrl(node, C->root());\n+  return node;\n+}\n+\n+ConNode *PhaseIdealLoop::zerocon(BasicType bt) {\n+  ConNode* node = _igvn.zerocon(bt);\n+  set_ctrl(node, C->root());\n+  return node;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":43,"deletions":26,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -1800,0 +1800,10 @@\n+\n+  ConINode* intcon(jint i);\n+\n+  ConLNode* longcon(jlong i);\n+\n+  ConNode* makecon(const Type* t);\n+\n+  ConNode* integercon(jlong l, BasicType bt);\n+\n+  ConNode* zerocon(BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -334,2 +334,1 @@\n-  Node *con = _igvn.makecon(pop == Op_IfTrue ? TypeInt::ONE : TypeInt::ZERO);\n-  set_ctrl(con, C->root()); \/\/ Constant gets a new use\n+  Node *con = makecon(pop == Op_IfTrue ? TypeInt::ONE : TypeInt::ZERO);\n@@ -475,2 +474,1 @@\n-      Node* zero = _igvn.integercon(0, bt);\n-      set_ctrl(zero, C->root());\n+      Node* zero = integercon(0, bt);\n@@ -2909,2 +2907,1 @@\n-  Node *con = _igvn.intcon(proj_con);\n-  set_ctrl(con, C->root());\n+  Node *con = intcon(proj_con);\n@@ -3219,2 +3216,1 @@\n-    rhs_cmpi = _igvn.makecon(TypeInt::ZERO); \/\/ For i < 0\n-    set_ctrl(rhs_cmpi, C->root());\n+    rhs_cmpi = makecon(TypeInt::ZERO); \/\/ For i < 0\n@@ -3249,2 +3245,1 @@\n-  Node *con = _igvn.makecon(lp_proj->is_IfTrue() ? TypeInt::ONE : TypeInt::ZERO);\n-  set_ctrl(con, C->root());\n+  Node *con = makecon(lp_proj->is_IfTrue() ? TypeInt::ONE : TypeInt::ZERO);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"}]}