{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    static boolean supportsLinks;\n+    static boolean supportsSymbolicLinks;\n@@ -55,1 +55,1 @@\n-            supportsLinks = TestUtil.supportsLinks(dir);\n+            supportsSymbolicLinks = TestUtil.supportsSymbolicLinks(dir);\n@@ -79,1 +79,1 @@\n-        if (supportsLinks)\n+        if (supportsSymbolicLinks)\n@@ -83,1 +83,1 @@\n-        if (supportsLinks)\n+        if (supportsSymbolicLinks)\n@@ -95,1 +95,1 @@\n-        assertTrue(count == (supportsLinks ? 4 : 2));\n+        assertTrue(count == (supportsSymbolicLinks ? 4 : 2));\n@@ -120,1 +120,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -142,1 +142,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -156,1 +156,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -166,1 +166,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -189,1 +189,1 @@\n-        if (supportsLinks)\n+        if (supportsSymbolicLinks)\n@@ -214,1 +214,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n","filename":"test\/jdk\/java\/nio\/file\/DirectoryStream\/SecureDS.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-            if (TestUtil.supportsLinks(testdir)) {\n+            if (TestUtil.supportsSymbolicLinks(testdir)) {\n@@ -300,1 +300,1 @@\n-            if (TestUtil.supportsLinks(testdir)) {\n+            if (TestUtil.supportsSymbolicLinks(testdir)) {\n@@ -314,1 +314,1 @@\n-            if (TestUtil.supportsLinks(testdir)) {\n+            if (TestUtil.supportsHardLinks(testdir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CheckPermissions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,2 @@\n-            testCopyFileToFile(dir1, dir1, TestUtil.supportsLinks(dir1));\n-            testMove(dir1, dir1, TestUtil.supportsLinks(dir1));\n+            testCopyFileToFile(dir1, dir1, TestUtil.supportsSymbolicLinks(dir1));\n+            testMove(dir1, dir1, TestUtil.supportsSymbolicLinks(dir1));\n@@ -90,2 +90,2 @@\n-                    testCopyFileToFile(dir2, dir2, TestUtil.supportsLinks(dir2));\n-                    testMove(dir2, dir2, TestUtil.supportsLinks(dir2));\n+                    testCopyFileToFile(dir2, dir2, TestUtil.supportsSymbolicLinks(dir2));\n+                    testMove(dir2, dir2, TestUtil.supportsSymbolicLinks(dir2));\n@@ -104,1 +104,1 @@\n-                    TestUtil.supportsLinks(dir1) && TestUtil.supportsLinks(dir2);\n+                    TestUtil.supportsSymbolicLinks(dir1) && TestUtil.supportsSymbolicLinks(dir2);\n@@ -312,1 +312,1 @@\n-    static void testMove(Path dir1, Path dir2, boolean supportsLinks)\n+    static void testMove(Path dir1, Path dir2, boolean supportsSymbolicLinks)\n@@ -534,1 +534,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -547,1 +547,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -558,1 +558,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -570,1 +570,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -587,1 +587,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -599,1 +599,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -611,1 +611,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -631,1 +631,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -746,1 +746,1 @@\n-    static void testCopyFileToFile(Path dir1, Path dir2, boolean supportsLinks)\n+    static void testCopyFileToFile(Path dir1, Path dir2, boolean supportsSymbolicLinks)\n@@ -950,1 +950,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -963,1 +963,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -976,1 +976,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -990,1 +990,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -1002,1 +1002,1 @@\n-        if (supportsLinks && Platform.isWindows()) {\n+        if (supportsSymbolicLinks && Platform.isWindows()) {\n@@ -1069,1 +1069,1 @@\n-            if (TestUtil.supportsLinks(tmpdir)) {\n+            if (TestUtil.supportsSymbolicLinks(tmpdir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyAndMove.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-        if (TestUtil.supportsLinks(dir)) {\n+        if (TestUtil.supportsSymbolicLinks(dir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyInterference.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        if (!TestUtil.supportsLinks(top)) {\n+        if (!TestUtil.supportsSymbolicLinks(top)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CreateDirectories.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-            if (TestUtil.supportsLinks(dir)) {\n+            if (TestUtil.supportsSymbolicLinks(dir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/DeleteOnClose.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-            if (TestUtil.supportsLinks(tmpdir)) {\n+            if (TestUtil.supportsSymbolicLinks(tmpdir)) {\n@@ -201,1 +201,1 @@\n-            if (TestUtil.supportsLinks(tmpdir)) {\n+            if (TestUtil.supportsSymbolicLinks(tmpdir)) {\n@@ -225,0 +225,4 @@\n+            }\n+\n+            if (TestUtil.supportsHardLinks(tmpdir)) {\n+                Path link = tmpdir.resolve(\"hardlink\");\n@@ -237,1 +241,0 @@\n-\n@@ -276,1 +279,1 @@\n-            if (TestUtil.supportsLinks(tmpdir)) {\n+            if (TestUtil.supportsSymbolicLinks(tmpdir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/Misc.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    static boolean supportsLinks;\n+    static boolean supportsSymbolicLinks;\n@@ -47,1 +47,1 @@\n-            supportsLinks = TestUtil.supportsLinks(dir);\n+            supportsSymbolicLinks = TestUtil.supportsSymbolicLinks(dir);\n@@ -87,1 +87,1 @@\n-            if (supportsLinks) {\n+            if (supportsSymbolicLinks) {\n@@ -124,1 +124,1 @@\n-            if (supportsLinks) {\n+            if (supportsSymbolicLinks) {\n@@ -227,1 +227,1 @@\n-        if (!supportsLinks)\n+        if (!supportsSymbolicLinks)\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SBC.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        if (TestUtil.supportsLinks(testDir)) {\n+        if (TestUtil.supportsSymbolicLinks(testDir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SetLastModifiedTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-    static boolean supportsLinks;\n+    static boolean supportsSymbolicLinks;\n@@ -83,1 +83,1 @@\n-        supportsLinks = TestUtil.supportsLinks(testFolder);\n+        supportsSymbolicLinks = TestUtil.supportsSymbolicLinks(testFolder);\n@@ -99,1 +99,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -116,1 +116,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -126,1 +126,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -215,1 +215,1 @@\n-        if (!supportsLinks) {\n+        if (!supportsSymbolicLinks) {\n@@ -516,1 +516,1 @@\n-        if (supportsLinks) {\n+        if (supportsSymbolicLinks) {\n@@ -542,1 +542,1 @@\n-            if (supportsLinks) {\n+            if (supportsSymbolicLinks) {\n@@ -565,1 +565,1 @@\n-            if (supportsLinks) {\n+            if (supportsSymbolicLinks) {\n@@ -642,1 +642,1 @@\n-            if (supportsLinks) {\n+            if (supportsSymbolicLinks) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/StreamTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,1 +280,1 @@\n-        if (!TestUtil.supportsLinks(TEST_TEMP_DIRECTORY)) {\n+        if (!TestUtil.supportsSymbolicLinks(TEST_TEMP_DIRECTORY)) {\n@@ -311,1 +312,1 @@\n-        if (!TestUtil.supportsLinks(TEST_TEMP_DIRECTORY)) {\n+        if (!TestUtil.supportsSymbolicLinks(TEST_TEMP_DIRECTORY)) {\n@@ -353,1 +354,1 @@\n-        if (!TestUtil.supportsLinks(TEST_TEMP_DIRECTORY)) {\n+        if (!TestUtil.supportsSymbolicLinks(TEST_TEMP_DIRECTORY)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SubstDrive.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        if (!TestUtil.supportsLinks(dir)) {\n+        if (!TestUtil.supportsSymbolicLinks(dir)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SymlinkTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    private static boolean supportsLinks(Path dir) {\n+    private static boolean supportsSymbolicLinks(Path dir) {\n@@ -80,1 +80,1 @@\n-        if (supportsLinks(top)) {\n+        if (supportsSymbolicLinks(top)) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/walkFileTree\/CreateFileTree.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            SUPPORTS_LINKS = TestUtil.supportsLinks(DIR);\n+            SUPPORTS_LINKS = TestUtil.supportsSymbolicLinks(DIR);\n@@ -67,1 +67,1 @@\n-    public boolean supportsLinks() {\n+    public boolean supportsSymbolicLinks() {\n@@ -90,1 +90,1 @@\n-    @EnabledIf(\"supportsLinks\")\n+    @EnabledIf(\"supportsSymbolicLinks\")\n@@ -113,1 +113,1 @@\n-    @EnabledIf(\"supportsLinks\")\n+    @EnabledIf(\"supportsSymbolicLinks\")\n@@ -146,1 +146,1 @@\n-    @EnabledIf(\"supportsLinks\")\n+    @EnabledIf(\"supportsSymbolicLinks\")\n@@ -166,1 +166,1 @@\n-    @EnabledIf(\"supportsLinks\")\n+    @EnabledIf(\"supportsSymbolicLinks\")\n","filename":"test\/jdk\/java\/nio\/file\/Path\/ToRealPath.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-    static boolean supportsLinks(Path dir) {\n+    static boolean supportsSymbolicLinks(Path dir) {\n@@ -118,0 +118,17 @@\n+\n+    \/**\n+     * Returns true if hard links are supported\n+     *\/\n+    static boolean supportsHardLinks(Path dir) {\n+        Path link = dir.resolve(\"testlink\");\n+        Path target = dir.resolve(\"testtarget\");\n+        try {\n+            Files.createLink(link, target);\n+            Files.delete(link);\n+            return true;\n+        } catch (UnsupportedOperationException x) {\n+            return false;\n+        } catch (IOException x) {\n+            return false;\n+        }\n+    }\n","filename":"test\/jdk\/java\/nio\/file\/TestUtil.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-            if (!TestUtil.supportsLinks(dir))\n+            if (!TestUtil.supportsSymbolicLinks(dir))\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/DosFileAttributeView\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,1 +170,1 @@\n-        if (TestUtil.supportsLinks(dir)) {\n+        if (TestUtil.supportsSymbolicLinks(dir)) {\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/PosixFileAttributeView\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -302,1 +302,1 @@\n-            if (TestUtil.supportsLinks(dir)) {\n+            if (TestUtil.supportsSymbolicLinks(dir)) {\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}