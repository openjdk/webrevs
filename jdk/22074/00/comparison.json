{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,0 +126,2 @@\n+  assert(value > 0, \"Invalid value\");\n+  if (value == 1) return 0;\n","filename":"src\/hotspot\/share\/utilities\/powerOfTwo.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -308,0 +308,20 @@\n+\n+template <typename T> void test_ceil_log2() {\n+  EXPECT_EQ(ceil_log2(T(1)), T(0)) << \"value = \" << T(1);\n+  EXPECT_EQ(ceil_log2(T(2)), T(1)) << \"value = \" << T(2);\n+  EXPECT_EQ(ceil_log2(T(3)), T(2)) << \"value = \" << T(3);\n+  EXPECT_EQ(ceil_log2(T(4)), T(2)) << \"value = \" << T(4);\n+  EXPECT_EQ(ceil_log2(T(5)), T(3)) << \"value = \" << T(5);\n+  EXPECT_EQ(ceil_log2(T(127)), T(7)) << \"value = \" << T(127);\n+}\n+\n+TEST(power_of_2, ceil_log2) {\n+  test_ceil_log2<int8_t>();\n+  test_ceil_log2<int16_t>();\n+  test_ceil_log2<int32_t>();\n+  test_ceil_log2<int64_t>();\n+  test_ceil_log2<uint8_t>();\n+  test_ceil_log2<uint16_t>();\n+  test_ceil_log2<uint32_t>();\n+  test_ceil_log2<uint64_t>();\n+}\n","filename":"test\/hotspot\/gtest\/utilities\/test_powerOfTwo.cpp","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"}]}