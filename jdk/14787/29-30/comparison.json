{"files":[{"patch":"@@ -99,1 +99,1 @@\n-ifeq ($(JLINK_PRODUCE_RUNTIME_LINK_JDK), true)\n+ifeq ($(JLINK_PRODUCE_LINKABLE_RUNTIME), true)\n","filename":"make\/Images.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-      RESULT: JLINK_PRODUCE_RUNTIME_LINK_JDK,\n+      RESULT: JLINK_PRODUCE_LINKABLE_RUNTIME,\n@@ -589,1 +589,1 @@\n-  AC_SUBST(JLINK_PRODUCE_RUNTIME_LINK_JDK)\n+  AC_SUBST(JLINK_PRODUCE_LINKABLE_RUNTIME)\n@@ -591,1 +591,1 @@\n-  if test \"x$JLINK_PRODUCE_RUNTIME_LINK_JDK\" = xtrue; then\n+  if test \"x$JLINK_PRODUCE_LINKABLE_RUNTIME\" = xtrue; then\n","filename":"make\/autoconf\/jdk-options.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -711,1 +711,1 @@\n-JLINK_PRODUCE_RUNTIME_LINK_JDK := @JLINK_PRODUCE_RUNTIME_LINK_JDK@\n+JLINK_PRODUCE_LINKABLE_RUNTIME := @JLINK_PRODUCE_LINKABLE_RUNTIME@\n","filename":"make\/autoconf\/spec.gmk.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,7 +130,3 @@\n-        if (obj instanceof JRTArchive) {\n-            JRTArchive other = (JRTArchive)obj;\n-            return Objects.equals(module, other.module) &&\n-                   Objects.equals(path, other.path);\n-        }\n-\n-        return false;\n+        return (obj instanceof JRTArchive other &&\n+                   Objects.equals(module, other.module) &&\n+                   Objects.equals(path, other.path));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JRTArchive.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * Class representing a difference between a jimage resource. For all intents\n+ * Class representing a difference of a jimage resource. For all intents\n@@ -42,3 +42,3 @@\n- * which the optimized image got derived from. The differences are being used\n- * in JRTArchive so as to back-track from an optimized jimage to the original\n- * (i.e. it restores original resources using the diff).\n+ * which the optimized image got derived from (e.g. packaged modules). The\n+ * differences are being used in JRTArchive so as to back-track from an optimized\n+ * jimage to the original (i.e. it restores original resources using the diff).\n@@ -215,1 +215,0 @@\n-            e.printStackTrace();\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/runtimelink\/ResourceDiff.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.stream.Collectors;\n@@ -49,1 +48,1 @@\n-        return pool.entries().map(a -> a.path()).collect(Collectors.toList());\n+        return pool.entries().map(a -> a.path()).toList();\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/runtimelink\/ResourcePoolReader.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -119,2 +119,4 @@\n-err.runtime.link.jdk.jlink.prohibited=Including jdk.jlink module for run-time image based links is not allowed.\n-err.runtime.link.packaged.mods=--keep-packaged-modules is not allowed for run-time image based links.\n+err.runtime.link.jdk.jlink.prohibited=This linkable run-time image does not contain packaged modules\\\n+\\ and cannot be used to create another run-time image that includes the jdk.jlink module.\n+err.runtime.link.packaged.mods=--keep-packaged-modules is not allowed. This linkable run-time image\\\n+\\ does not include packaged modules.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink.properties","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-package tests;\n+\n","filename":"test\/jdk\/tools\/jlink\/JmodLess\/JImageHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/lib\/tests\/JImageHelper.java","status":"renamed"},{"patch":"@@ -69,1 +69,3 @@\n-        String expectedMsg = \"Including jdk.jlink module for run-time image based links is not allowed.\";\n+        String expectedMsg = \"This linkable run-time image does not contain packaged modules \" +\n+                             \"and cannot be used to create another run-time image that includes \" +\n+                             \"the jdk.jlink module.\";\n","filename":"test\/jdk\/tools\/jlink\/JmodLess\/MultiHopTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import tests.JImageHelper;\n","filename":"test\/jdk\/tools\/jlink\/JmodLess\/PackagedModulesVsJmodLessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}