{"files":[{"patch":"@@ -214,0 +214,2 @@\n+      \/\/ We need to move up return pc and fp. They will be read next in\n+      \/\/ set_anchor() and set as _last_Java_pc and _last_Java_fp respectively.\n@@ -338,0 +340,1 @@\n+  \/\/ We only need to set the return pc. rfp will be restored back in gen_continuation_enter().\n@@ -339,1 +342,0 @@\n-  sp[-2] = (intptr_t)enterSpecial.fp();\n@@ -347,0 +349,1 @@\n+  \/\/ We only need to set the return pc. rfp will be restored back in generate_cont_preempt_stub().\n","filename":"src\/hotspot\/cpu\/aarch64\/continuationFreezeThaw_aarch64.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -221,0 +221,2 @@\n+      \/\/ We need to move up return pc and fp. They will be read next in\n+      \/\/ set_anchor() and set as _last_Java_pc and _last_Java_fp respectively.\n@@ -339,0 +341,1 @@\n+  \/\/ We only need to set the return pc. fp will be restored back in gen_continuation_enter().\n@@ -340,1 +343,0 @@\n-  sp[-2] = (intptr_t)enterSpecial.fp();\n@@ -348,0 +350,1 @@\n+  \/\/ We only need to set the return pc. fp will be restored back in generate_cont_preempt_stub().\n","filename":"src\/hotspot\/cpu\/riscv\/continuationFreezeThaw_riscv.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -205,0 +205,2 @@\n+      \/\/ We need to move up return pc and fp. They will be read next in\n+      \/\/ set_anchor() and set as _last_Java_pc and _last_Java_fp respectively.\n@@ -325,0 +327,1 @@\n+  \/\/ We only need to set the return pc. rbp will be restored back in gen_continuation_enter().\n@@ -326,1 +329,0 @@\n-  sp[-2] = (intptr_t)enterSpecial.fp();\n@@ -334,0 +336,1 @@\n+  \/\/ We only need to set the return pc. rbp will be restored back in generate_cont_preempt_stub().\n","filename":"src\/hotspot\/cpu\/x86\/continuationFreezeThaw_x86.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1686,1 +1686,1 @@\n-  HandleMarkCleaner hm(current);  \/\/ Cleanup vth and so._conth Handles\n+  HandleMarkCleaner hm(current);  \/\/ Cleanup all handles (including so._conth) before returning to Java.\n@@ -1689,1 +1689,0 @@\n-\n@@ -2355,2 +2354,0 @@\n-  set_anchor(_thread, rs.sp());\n-  log_frames(_thread);\n@@ -2358,0 +2355,3 @@\n+    frame top(rs.sp());\n+    AnchorMark am(_thread, top);\n+    log_frames(_thread);\n@@ -2360,1 +2360,0 @@\n-  clear_anchor(_thread);\n@@ -2687,1 +2686,1 @@\n-    HandleMarkCleaner hmc(current);  \/\/ Cleanup so._conth Handle\n+    HandleMarkCleaner hmc(current);  \/\/ Cleanup all handles (including so._conth) before returning to Java.\n@@ -2734,1 +2733,1 @@\n-  HandleMarkCleaner hm(current);  \/\/ Cleanup so._conth Handle\n+  HandleMarkCleaner hm(current);  \/\/ Cleanup all handles (including so._conth) before returning to Java.\n@@ -2736,2 +2735,1 @@\n-  \/\/ Since we might safepoint set the anchor so that the stack can be walked.\n-  set_anchor(current, top.sp());\n+  AnchorMark am(current, top);  \/\/ Set the anchor so that the stack is walkable.\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -942,13 +942,2 @@\n-      \/\/ we are at a call site & the expression stack is not empty\n-      \/\/ => process callee's arguments\n-      \/\/\n-      \/\/ Note: The expression stack can be empty if an exception\n-      \/\/       occurred during method resolution\/execution. In all\n-      \/\/       cases we empty the expression stack completely be-\n-      \/\/       fore handling the exception (the exception handling\n-      \/\/       code in the interpreter calls a blocking runtime\n-      \/\/       routine which can cause this code to be executed).\n-      \/\/       (was bug gri 7\/27\/98)\n-      \/\/ if (dolog) {\n-      \/\/   log_trace(continuations, tracking)(\"Processing arguments\");\n-      \/\/ }\n+      \/\/ We are at a call site & the expression stack is not empty\n+      \/\/ so we might have callee arguments we need to process.\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run junit\/othervm\/timeout=480 -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit*\n+ *      -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n@@ -35,1 +36,2 @@\n- * @run junit\/othervm\/timeout=480 -Xint -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -Xint -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit*\n+ *      -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n@@ -42,1 +44,2 @@\n- * @run junit\/othervm\/timeout=480 -Xcomp -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -Xcomp -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit*\n+ *      -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n@@ -49,1 +52,2 @@\n- * @run junit\/othervm\/timeout=480 -Xcomp -XX:TieredStopAtLevel=1 -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -Xcomp -XX:TieredStopAtLevel=1 -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit*\n+ *      -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n@@ -56,1 +60,2 @@\n- * @run junit\/othervm\/timeout=480 -Xcomp -XX:-TieredCompilation -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -Xcomp -XX:-TieredCompilation -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit*\n+ *      -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n@@ -63,1 +68,3 @@\n- * @run junit\/othervm\/timeout=480 -XX:+UnlockDiagnosticVMOptions -XX:+FullGCALot -XX:FullGCALotInterval=1000 -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n+ * @run junit\/othervm\/timeout=480 -XX:+UnlockDiagnosticVMOptions -XX:+FullGCALot -XX:FullGCALotInterval=1000\n+ *      -XX:CompileCommand=exclude,KlassInit::lambda$testReleaseAtKlassInit* -XX:CompileCommand=exclude,KlassInit$$Lambda*::run\n+ *      -XX:CompileCommand=exclude,KlassInit$1Driver::foo KlassInit\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/KlassInit.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"}]}