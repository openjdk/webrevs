{"files":[{"patch":"@@ -317,2 +317,2 @@\n-                \/\/ A class cannot be strictfp and sealed so it is\n-                \/\/ sufficient to check for sealed-ness after all\n+                \/\/ A class cannot be strictfp and sealed\/non-sealed so\n+                \/\/ it is sufficient to check for sealed-ness after all\n@@ -320,4 +320,1 @@\n-                boolean isSealed = isSealed();\n-                if (isSealed) {\n-                    sb.append(\"sealed \");\n-                }\n+                addSealingInfo(modifiers, sb);\n@@ -355,0 +352,32 @@\n+    private void addSealingInfo(int modifiers, StringBuilder sb) {\n+        \/\/ A class can be final XOR sealed XOR non-sealed.\n+        if (Modifier.isFinal(modifiers)) {\n+            return; \/\/ no-op\n+        } else {\n+            boolean isSealed = isSealed();\n+            if (isSealed) {\n+                sb.append(\"sealed \");\n+                return;\n+            } else {\n+                \/\/ Check for sealed ancestor, which implies this class\n+                \/\/ is non-sealed.\n+                if (hasSealedAncestor(this)) {\n+                    sb.append(\"non-sealed \");\n+                }\n+            }\n+        }\n+    }\n+\n+    private boolean hasSealedAncestor(Class<?> clazz) {\n+        var superclass = clazz.getSuperclass();\n+        if (superclass != null) {\n+            if (superclass.isSealed() || hasSealedAncestor(superclass))\n+                return true;\n+        }\n+        for (var superinterface : clazz.getInterfaces()) {\n+            if (superinterface.isSealed() || hasSealedAncestor(superinterface))\n+                return true;\n+        }\n+        return false;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":35,"deletions":6,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            Map.of(int.class,                          \"int\",\n+            Map.of(\/\/int.class,                          \"int\",\n@@ -57,1 +57,3 @@\n-                   java.lang.ref.Reference.class,      \"public abstract sealed class java.lang.ref.Reference<T>\"\n+                   java.lang.ref.Reference.class,      \"public abstract sealed class java.lang.ref.Reference<T>\",\n+                   \/\/ non-sealed class\n+                   java.lang.ref.WeakReference.class,  \"public non-sealed class java.lang.ref.WeakReference<T>\"\n","filename":"test\/jdk\/java\/lang\/Class\/GenericStringTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}