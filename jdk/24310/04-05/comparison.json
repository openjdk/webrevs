{"files":[{"patch":"@@ -1323,0 +1323,1 @@\n+      stringStream ss(buf, buflen);\n@@ -1330,2 +1331,1 @@\n-      char* lib_p = buf + len;\n-      snprintf(lib_p, buflen - len, \"\/lib\");\n+      ss.print(\"%s\/lib\", buf);\n@@ -1335,3 +1335,3 @@\n-        len = strlen(buf);\n-        snprintf(buf + len, buflen - len, \"\/%s\/libjvm%s\",\n-                 Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+        ss.print(\"\/%s\/libjvm%s\", Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+        assert(strcmp(buf + strlen(buf) - strlen(JNI_LIB_SUFFIX), JNI_LIB_SUFFIX) == 0,\n+               \"buf has been truncated\");\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1516,0 +1516,1 @@\n+      stringStream ss(buf, buflen);\n@@ -1523,1 +1524,2 @@\n-      char* lib_p = buf + len;\n+      \/\/ Add the appropriate library  and JVM variant subdirs\n+      ss.print(\"%s\/lib\/%s\", buf, Abstract_VM_Version::vm_variant());\n@@ -1525,7 +1527,0 @@\n-      \/\/ Add the appropriate library subdir\n-      snprintf(lib_p, buflen - len, \"\/lib\");\n-\n-      \/\/ Add the appropriate JVM variant subdir\n-      len = strlen(buf);\n-      lib_p = buf + len;\n-      snprintf(lib_p, buflen - len, \"\/%s\", Abstract_VM_Version::vm_variant());\n@@ -1533,1 +1528,2 @@\n-        snprintf(lib_p, buflen - len, \"%s\", \"\");\n+        ss.reset();\n+        ss.print(\"%s\/lib\", buf);\n@@ -1541,2 +1537,3 @@\n-        len = strlen(buf);\n-        snprintf(buf + len, buflen - len, \"\/libjvm%s\", JNI_LIB_SUFFIX);\n+        ss.print(\"\/libjvm%s\", JNI_LIB_SUFFIX);\n+        assert(strcmp(buf + strlen(buf) - strlen(JNI_LIB_SUFFIX), JNI_LIB_SUFFIX) == 0,\n+               \"buf has been truncated\");\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2789,0 +2789,1 @@\n+      stringStream ss(buf, buflen);\n@@ -2796,2 +2797,1 @@\n-      char* lib_p = buf + len;\n-      snprintf(lib_p, buflen - len, \"\/lib\");\n+      ss.print(\"%s\/lib\", buf);\n@@ -2801,3 +2801,3 @@\n-        len = (int)strlen(buf);\n-        snprintf(buf + len, buflen - len, \"\/%s\/libjvm%s\",\n-                 Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+        ss.print(\"\/%s\/libjvm%s\", Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+        assert(strcmp(buf + strlen(buf) - strlen(JNI_LIB_SUFFIX), JNI_LIB_SUFFIX) == 0,\n+               \"buf has been truncated\");\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2214,8 +2214,5 @@\n-      strncpy(buf, java_home_var, buflen);\n-\n-      size_t len = strlen(buf);\n-      char* bin_p = buf + len;\n-      jio_snprintf(bin_p, buflen - len, \"\\\\bin\\\\\");\n-      len = strlen(buf);\n-      jio_snprintf(buf + len, buflen - len, \"%s\\\\jvm%s\",\n-                   Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+      stringStream ss(buf, buflen);\n+      ss.print(\"%s\\\\bin\\\\%s\\\\jvm%s\",\n+               java_home_var, Abstract_VM_Version::vm_variant(), JNI_LIB_SUFFIX);\n+      assert(strcmp(buf + strlen(buf) - strlen(JNI_LIB_SUFFIX), JNI_LIB_SUFFIX) == 0,\n+             \"buf has been truncated\");\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}