{"files":[{"patch":"@@ -126,0 +126,1 @@\n+    maybe_log_call_stack();\n@@ -155,0 +156,1 @@\n+  maybe_log_call_stack();\n@@ -611,0 +613,14 @@\n+  maybe_log_call_stack();\n+}\n+\n+void Exceptions::maybe_log_call_stack() {\n+  LogStreamHandle(Info, exceptions, stacktrace) st;\n+  if (st.is_enabled()) {\n+    Thread* t = Thread::current_or_null();\n+    if (t != nullptr && t->is_Java_thread()) { \/\/ sanity\n+      JavaThread* jt = JavaThread::current();\n+      if (jt->has_last_Java_frame()) {\n+        jt->print_active_stack_on(&st);\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,0 +118,3 @@\n+\n+  \/\/ Logging\n+  static void maybe_log_call_stack();\n","filename":"src\/hotspot\/share\/utilities\/exceptions.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8141211 8147477\n+ * @bug 8141211 8147477 8358080\n@@ -48,0 +48,1 @@\n+        System.out.println(output.getStdout());\n@@ -50,1 +51,5 @@\n-        output.shouldHaveExitValue(0);\n+        output.shouldMatch(\"info..exceptions,stacktrace.*at ExceptionsTest[$]InternalClass.bar[(]ExceptionsTest.java:[0-9]+\" +\n+                           \".*\\n.*\" +\n+                           \"info..exceptions,stacktrace.*at ExceptionsTest[$]InternalClass.foo[(]ExceptionsTest.java:[0-9]+\" +\n+                           \".*\\n.*\" +\n+                           \"info..exceptions,stacktrace.*at ExceptionsTest[$]InternalClass.main[(]ExceptionsTest.java:[0-9]+\");\n@@ -60,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:exceptions=info\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:exceptions,exceptions+stacktrace\",\n@@ -69,1 +74,1 @@\n-        updateEnvironment(pb, \"_JAVA_OPTIONS\", \"-Xlog:exceptions=info\");\n+        updateEnvironment(pb, \"_JAVA_OPTIONS\", \"-Xlog:exceptions,exceptions+stacktrace\");\n@@ -83,1 +88,9 @@\n-        public static void main(String[] args) throws Exception {\n+        public static void main(String[] args) {\n+            foo();\n+        }\n+\n+        static void foo() {\n+            bar();\n+        }\n+\n+        static void bar() {\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ExceptionsTest.java","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n--Xlog:exceptions=info\n+-Xlog:exceptions,exceptions+stacktrace\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ExceptionsTest_options_file","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}