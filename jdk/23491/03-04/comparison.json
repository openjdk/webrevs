{"files":[{"patch":"@@ -71,4 +71,5 @@\n-     * Note that this method is often called with an associated {@link Handler}\n-     * instance locked so, to avoid deadlock risk, it is important to avoid\n-     * making callbacks to unknown user-provided arguments (e.g. log record\n-     * parameters captured from previous calls to {@link #format(LogRecord)}.\n+     * @implNote Note that this method is often called with an associated\n+     * {@link Handler} instance locked so, to avoid deadlock risk, it is\n+     * important to avoid making callbacks to unknown user-provided arguments\n+     * (e.g. log record parameters captured from previous calls to\n+     * {@link #format(LogRecord)}.\n@@ -89,4 +90,5 @@\n-     * Note that this method is often called with an associated {@link Handler}\n-     * instance locked so, to avoid deadlock risk, it is important to avoid\n-     * making callbacks to unknown user-provided arguments (e.g. log record\n-     * parameters captured from previous calls to {@link #format(LogRecord)}.\n+     * @implNote Note that this method is often called with an associated\n+     * {@link Handler} instance locked so, to avoid deadlock risk, it is\n+     * important to avoid making callbacks to unknown user-provided arguments\n+     * (e.g. log record parameters captured from previous calls to\n+     * {@link #format(LogRecord)}.\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/Formatter.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n- * When implementing new {@code Handler} subclasses, it is important to\n- * understand the potential effects of synchronization.\n+ * @implNote When implementing new {@code Handler} subclasses, it is important\n+ * to understand the potential effects of synchronization.\n@@ -65,3 +65,3 @@\n- * Another principle is to avoid synchronizing {@code Handler} instances (or\n- * holding any other locks) while processing user-provided arguments, such as\n- * {@link LogRecord} parameters.\n+ * @implNote Another principle is to avoid synchronizing {@code Handler}\n+ * instances (or holding any other locks) while processing user-provided\n+ * arguments, such as {@link LogRecord} parameters.\n@@ -164,2 +164,2 @@\n-     * Implementations of this method should avoid holding any locks around the\n-     * formatting of {@code LogRecord}.\n+     * @implNote Implementations of this method should avoid holding any locks\n+     * around the formatting of {@code LogRecord}.\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/Handler.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}