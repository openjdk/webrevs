{"files":[{"patch":"@@ -156,2 +156,0 @@\n-java\/awt\/Mixing\/AWT_Mixing\/JMenuBarOverlapping.java 8159451 linux-all,windows-all,macosx-all\n-java\/awt\/Mixing\/AWT_Mixing\/JSplitPaneOverlapping.java 6986109 generic-all\n@@ -159,3 +157,0 @@\n-java\/awt\/Mixing\/AWT_Mixing\/MixingPanelsResizing.java 8049405 generic-all\n-java\/awt\/Mixing\/AWT_Mixing\/JComboBoxOverlapping.java 8049405 macosx-all\n-java\/awt\/Mixing\/AWT_Mixing\/JPopupMenuOverlapping.java 8049405 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @run main JMenuBarOverlapping\n+ * @run main\/timeout=180 JMenuBarOverlapping\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/JMenuBarOverlapping.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,1 @@\n+                frame.setVisible(false);\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/JPopupMenuOverlapping.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,2 @@\n+        currentAwtControl.setForeground(Color.white);\n+        currentAwtControl.setBackground(Color.white);\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/JSplitPaneOverlapping.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+    static final int COLOR_TOLERANCE_MACOSX = 15;\n@@ -117,0 +118,1 @@\n+                jbutton.setOpaque(true);\n@@ -123,0 +125,1 @@\n+                jbutton2.setOpaque(true);\n@@ -160,1 +163,2 @@\n-                if (!c.equals(jbColor)) {\n+                System.out.println(\"Color picked for jbutton: \"+c);\n+                if (!isAlmostEqualColor(c, jbColor)) {\n@@ -166,1 +170,2 @@\n-                if (!c.equals(awtColor)) {\n+                System.out.println(\"Color picked for awtButton: \"+c);\n+                if (!isAlmostEqualColor(c, awtColor)) {\n@@ -172,1 +177,2 @@\n-                if (!c.equals(jb2Color)) {\n+                System.out.println(\"Color picked for jbutton2: \"+c);\n+                if (!isAlmostEqualColor(c, jb2Color)) {\n@@ -178,1 +184,2 @@\n-                if (!c.equals(awt2Color)) {\n+                System.out.println(\"Color picked for awtButton2: \"+c);\n+                if (!isAlmostEqualColor(c, awt2Color)) {\n@@ -301,0 +308,13 @@\n+    private static boolean isAlmostEqualColor(Color color, Color refColor) {\n+        System.out.println(\"Comparing color: \"+color+\" with reference color: \"+refColor);\n+                if(color.equals(refColor)){\n+            return true;\n+        } else {\n+            return Math.abs(color.getRed() - refColor.getRed()) <\n+                    COLOR_TOLERANCE_MACOSX &&\n+                    Math.abs(color.getGreen() - refColor.getGreen()) <\n+                            COLOR_TOLERANCE_MACOSX &&\n+                    Math.abs(color.getBlue() - refColor.getBlue()) <\n+                            COLOR_TOLERANCE_MACOSX;\n+        }\n+    }\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/MixingPanelsResizing.java","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -379,1 +379,3 @@\n-        if ((component instanceof java.awt.Scrollbar) || isMac && (component instanceof java.awt.Button)) {\n+        if (component == null ||\n+                (component instanceof java.awt.Scrollbar) ||\n+                isMac && (component instanceof java.awt.Button)) {\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/OverlappingTestBase.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}