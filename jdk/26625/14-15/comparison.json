{"files":[{"patch":"@@ -25,1 +25,7 @@\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n@@ -27,2 +33,10 @@\n-import javax.swing.*;\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n@@ -66,0 +80,1 @@\n+\n@@ -68,1 +83,2 @@\n-            Process p = Runtime.getRuntime().exec(JAVA_HOME + \"\/bin\/java FrameBorderCounter\");\n+            Process p = Runtime.getRuntime()\n+                    .exec(JAVA_HOME + \"\/bin\/java FrameBorderCounter\");\n@@ -76,1 +92,3 @@\n-                throw new RuntimeException(\"FrameBorderCounter exited with not null code!\\n\" + readInputStream(p.getErrorStream()));\n+                throw new RuntimeException(\n+                        \"FrameBorderCounter exited with not null code!\\n\" +\n+                                readInputStream(p.getErrorStream()));\n@@ -86,0 +104,1 @@\n+\n@@ -101,1 +120,2 @@\n-        borderShift = Math.abs(borderShift) == 1 ? borderShift : (borderShift \/ 2);\n+        borderShift =\n+                Math.abs(borderShift) == 1 ? borderShift : (borderShift \/ 2);\n@@ -149,0 +169,1 @@\n+\n@@ -150,1 +171,2 @@\n-                lLoc.translate(frame.getWidth() + borderShift, frame.getHeight() + borderShift);\n+                lLoc.translate(frame.getWidth() + borderShift,\n+                        frame.getHeight() + borderShift);\n@@ -161,0 +183,1 @@\n+\n@@ -208,0 +231,1 @@\n+\n@@ -231,0 +255,1 @@\n+\n@@ -234,3 +259,2 @@\n-        }\n-        catch (Exception e) {\n-            throw  new RuntimeException(e);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n@@ -260,1 +284,2 @@\n-            throw new RuntimeException(\"Timed out after \" + sleepTime \/ 1000 + \" seconds\");\n+            throw new RuntimeException(\n+                    \"Timed out after \" + sleepTime \/ 1000 + \" seconds\");\n@@ -279,0 +304,1 @@\n+\n@@ -283,0 +309,1 @@\n+\n@@ -304,0 +331,1 @@\n+\n@@ -316,0 +344,1 @@\n+\n@@ -317,0 +346,1 @@\n+\n@@ -320,6 +350,6 @@\n-               Math.abs(color.getRed() - refColor.getRed()) <\n-                       TOLERANCE_MACOSX &&\n-               Math.abs(color.getGreen() - refColor.getGreen()) <\n-                       TOLERANCE_MACOSX &&\n-               Math.abs(color.getBlue() - refColor.getBlue()) <\n-                       TOLERANCE_MACOSX;\n+                Math.abs(color.getRed() - refColor.getRed()) <\n+                        TOLERANCE_MACOSX &&\n+                        Math.abs(color.getGreen() - refColor.getGreen()) <\n+                                TOLERANCE_MACOSX &&\n+                        Math.abs(color.getBlue() - refColor.getBlue()) <\n+                                TOLERANCE_MACOSX;\n@@ -327,0 +357,5 @@\n+\n+    static class TestPassedException extends RuntimeException {\n+\n+    }\n+\n@@ -328,2 +363,0 @@\n-class TestPassedException extends RuntimeException {\n-}\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/MixingPanelsResizing.java","additions":52,"deletions":19,"binary":false,"changes":71,"status":"modified"}]}