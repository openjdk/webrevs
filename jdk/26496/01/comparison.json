{"files":[{"patch":"@@ -961,5 +961,2 @@\n-\/\/ This method should contain all heap-specific policy for invoking a full\n-\/\/ collection.  invoke_no_policy() will only attempt to compact the heap; it\n-\/\/ will do nothing further.  If we need to bail out for policy reasons, scavenge\n-\/\/ before full gc, or any other specialized behavior, it needs to be added here.\n-\/\/\n+\/\/ This method invokes a full collection. The argument controls whether\n+\/\/ soft-refs should be cleared or not.\n@@ -968,5 +965,0 @@\n-\/\/\n-\/\/ Note that the all_soft_refs_clear flag in the soft ref policy\n-\/\/ may be true because this method can be called without intervening\n-\/\/ activity.  For example when the heap space is tight and full measure\n-\/\/ are being taken to free space.\n@@ -981,4 +973,0 @@\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-  clear_all_soft_refs = clear_all_soft_refs\n-                     || heap->soft_ref_policy()->should_clear_all_soft_refs();\n-\n@@ -1004,5 +992,0 @@\n-  \/\/ The scope of casr should end after code that can change\n-  \/\/ SoftRefPolicy::_should_clear_all_soft_refs.\n-  ClearedAllSoftRefs casr(clear_all_soft_refs,\n-                          heap->soft_ref_policy());\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -764,2 +764,2 @@\n-  static bool invoke(bool maximum_heap_compaction);\n-  static bool invoke_no_policy(bool maximum_heap_compaction);\n+  static bool invoke(bool clear_all_soft_refs);\n+  static bool invoke_no_policy(bool clear_all_soft_refs);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}