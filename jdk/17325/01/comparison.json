{"files":[{"patch":"@@ -44,0 +44,2 @@\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.CompletionException;\n@@ -110,1 +112,6 @@\n-    private static boolean waitForSubPids(File commFile) throws Exception {\n+    enum Result {\n+        FOUND_LEAKS_FD,\n+        FOUND_RETAINS_FD,\n+        FOUND_NONE \/\/ Unexpected.\n+    };\n+    private static Result waitForSubPids(File commFile) throws Exception {\n@@ -217,2 +224,7 @@\n-\n-        return out.contains(RETAINS_FD);\n+        if (out.contains(RETAINS_FD)) {\n+            return Result.FOUND_RETAINS_FD;\n+        } else if (out.contains(LEAKS_FD)) {\n+            return Result.FOUND_LEAKS_FD;\n+        } else {\n+            return Result.FOUND_NONE;\n+        }\n@@ -241,1 +253,2 @@\n-        if (waitForSubPids(commFile)) {\n+        Result result = waitForSubPids(commFile);\n+        if (result == Result.FOUND_RETAINS_FD) {\n@@ -243,1 +256,1 @@\n-        } else {\n+        } else if (result == Result.FOUND_LEAKS_FD) {\n@@ -245,0 +258,2 @@\n+        } else {\n+            throw new RuntimeException(\"Found neither message, test failed to run correctly\");\n@@ -293,0 +308,3 @@\n+            } catch (CompletionException e) {\n+                System.out.println(\"(Third VM) Timed out waiting for second VM: \" + e.toString());\n+                throw e;\n@@ -294,1 +312,1 @@\n-                System.out.println(\"Exception was thrown: \" + e.toString());\n+                System.out.println(\"(Third VM) Exception was thrown: \" + e.toString());\n@@ -364,1 +382,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/8176717\/TestInheritFD.java","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"}]}