{"files":[{"patch":"@@ -329,1 +329,0 @@\n-        lock.set(-2);\n@@ -335,0 +334,4 @@\n+        \/\/ These two threads proceed the scopes array in a lock-step manner, the first thread wait\n+        \/\/ for the second thread on the lock variable, while the second thread wait for the first\n+        \/\/ thread on the closing of the current scope\n+\n@@ -337,1 +340,1 @@\n-            for (int i = 0; i < iteration; i++) {\n+            for (int i = 0; i < iteration;) {\n@@ -342,0 +345,1 @@\n+                        \/\/ Continue to the next iteration after a successful close\n@@ -343,1 +347,3 @@\n-                    } catch (IllegalStateException e) {}\n+                    } catch (IllegalStateException e) {\n+                        \/\/ Wait for the release and try again\n+                    }\n@@ -345,3 +351,4 @@\n-                \/\/ Keep the 2 threads operating on the same scope\n-                int k = lock.getAndAdd(1) + 1;\n-                while (k != i * 2) {\n+                \/\/ Wait for the other thread to complete its iteration\n+                int prev = i;\n+                while (prev == i) {\n+                    i = lock.get();\n@@ -349,1 +356,0 @@\n-                    k = lock.get();\n@@ -356,1 +362,1 @@\n-            for (int i = 0; i < iteration; i++) {\n+            for (int i = 0; i < iteration;) {\n@@ -362,0 +368,1 @@\n+                        \/\/ The scope has been closed, proceed to the next iteration\n@@ -367,0 +374,1 @@\n+                    \/\/ Release and try again\n@@ -369,6 +377,2 @@\n-                \/\/ Keep the 2 threads operating on the same scope\n-                int k = lock.getAndAdd(1) + 1;\n-                while (k != i * 2) {\n-                    Thread.onSpinWait();\n-                    k = lock.get();\n-                }\n+                \/\/ Proceed to the next iteration\n+                i = lock.getAndAdd(1) + 1;\n","filename":"test\/jdk\/java\/foreign\/TestMemorySession.java","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"}]}