{"files":[{"patch":"@@ -181,6 +181,11 @@\n-void CodeCache::report_cache_minimal_size_error(const char *codeheap, size_t size, size_t required_size) {\n-  log_debug(codecache)(\"CodeCache minimum size fail for %s %lld vs %lld\",\n-                       codeheap, (long long) size, (long long) required_size);\n-  err_msg title(\"Not enough space in %s to run VM\", codeheap);\n-  err_msg message(SIZE_FORMAT \"K < \" SIZE_FORMAT \"K\", size, required_size);\n-  vm_exit_during_initialization(title, message);\n+static bool check_min_size(const char *codeheap, size_t size, size_t required_size) {\n+  if (size >= required_size) {\n+    return true;\n+  } else {\n+    log_debug(codecache)(\"CodeCache minimum size fail for %s %lld vs %lld\",\n+                         codeheap, (long long) size, (long long) required_size);\n+    err_msg title(\"Not enough space in %s to run VM\", codeheap);\n+    err_msg message(SIZE_FORMAT \"K < \" SIZE_FORMAT \"K\", size\/K, required_size\/K);\n+    vm_exit_during_initialization(title, message);\n+    return false;\n+  }\n@@ -189,2 +194,2 @@\n-void CodeCache::report_cache_size_error(const CodeCacheSegment& non_nmethod, const CodeCacheSegment& profiled,\n-                                          const CodeCacheSegment& non_profiled, size_t cache_size) {\n+static void report_cache_size_error(const CodeHeapInfo& non_nmethod, const CodeHeapInfo& profiled,\n+                                    const CodeHeapInfo& non_profiled, size_t cache_size) {\n@@ -215,0 +220,10 @@\n+struct CodeHeapInfo {\n+  size_t size;\n+  bool set;\n+  bool enabled;\n+};\n+\n+static size_t subtract_size(size_t cache_size, size_t known_segments_size, size_t min_size) {\n+  return (cache_size > known_segments_size + min_size) ? (cache_size - known_segments_size) : min_size;\n+}\n+\n@@ -217,3 +232,3 @@\n-  CodeCacheSegment non_nmethod = {NonNMethodCodeHeapSize, FLAG_IS_CMDLINE(NonNMethodCodeHeapSize), true};\n-  CodeCacheSegment profiled = {ProfiledCodeHeapSize, FLAG_IS_CMDLINE(ProfiledCodeHeapSize), true};\n-  CodeCacheSegment non_profiled = {NonProfiledCodeHeapSize, FLAG_IS_CMDLINE(NonProfiledCodeHeapSize), true};\n+  CodeHeapInfo non_nmethod = {NonNMethodCodeHeapSize, FLAG_IS_CMDLINE(NonNMethodCodeHeapSize), true};\n+  CodeHeapInfo profiled = {ProfiledCodeHeapSize, FLAG_IS_CMDLINE(ProfiledCodeHeapSize), true};\n+  CodeHeapInfo non_profiled = {NonProfiledCodeHeapSize, FLAG_IS_CMDLINE(NonProfiledCodeHeapSize), true};\n@@ -232,1 +247,1 @@\n-    \/\/ Profiled segment is not available, forcibly set size to 0\n+    \/\/ Profiled code heap is not available, forcibly set size to 0\n@@ -241,1 +256,1 @@\n-    \/\/ Non-Profiled segment is not available, forcibly set size to 0\n+    \/\/ Non-Profiled code heap is not available, forcibly set size to 0\n@@ -290,17 +305,4 @@\n-  if (non_nmethod.size < non_nmethod_min_size) {\n-    report_cache_minimal_size_error(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size);\n-    return;\n-  }\n-\n-  if (profiled.enabled && profiled.size < min_size) {\n-    report_cache_minimal_size_error(\"profiled code heap\", profiled.size, min_size);\n-    return;\n-  }\n-\n-  if (non_profiled.enabled && non_profiled.size < min_size) {\n-    report_cache_minimal_size_error(\"non-profiled code heap\", profiled.size, min_size);\n-    return;\n-  }\n-\n-  if (cache_size_set && cache_size < min_cache_size) {\n-    report_cache_minimal_size_error(\"reserved code cache\", cache_size, min_cache_size);\n+  if (!check_min_size(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size) ||\n+     (profiled.enabled && !check_min_size(\"profiled code heap\", profiled.size, min_size)) ||\n+     (non_profiled.enabled && !check_min_size(\"non-profiled code heap\", non_profiled.size, min_size)) ||\n+     (cache_size_set && !check_min_size(\"reserved code cache\", cache_size, min_cache_size))) {\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":32,"deletions":30,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -82,1 +82,0 @@\n-struct CodeCacheSegment;\n@@ -115,5 +114,0 @@\n-  static void report_cache_size_error(const CodeCacheSegment& non_nmethod, const CodeCacheSegment& profiled, const CodeCacheSegment& non_profiled, size_t cache_size);\n-  static void report_cache_minimal_size_error(const char *codeheap, size_t size, size_t required_size);\n-  static size_t subtract_size(size_t cache_size, size_t known_segments_size, size_t min_size) {\n-    return (cache_size > known_segments_size + min_size) ? (cache_size - known_segments_size) : min_size;\n-  }\n@@ -469,7 +463,0 @@\n-struct CodeCacheSegment {\n-  size_t size;\n-  bool set;\n-  bool enabled;\n-};\n-\n-\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}