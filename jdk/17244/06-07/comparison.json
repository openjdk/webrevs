{"files":[{"patch":"@@ -181,4 +181,2 @@\n-static bool check_min_size(const char *codeheap, size_t size, size_t required_size) {\n-  if (size >= required_size) {\n-    return true;\n-  } else {\n+static void check_min_size(const char *codeheap, size_t size, size_t required_size) {\n+  if (size < required_size) {\n@@ -190,1 +188,0 @@\n-    return false;\n@@ -229,2 +226,1 @@\n-    \/\/ MethodNonProfiled heap is always available for segmented code heap\n-    ShouldNotReachHere();\n+    assert(false, \"MethodNonProfiled heap is always available for segmented code heap\");\n@@ -255,1 +251,0 @@\n-  \/\/ Override Non-NMethod default size if two other segments are set explicitly\n@@ -276,5 +271,9 @@\n-  if (!check_min_size(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size) ||\n-     (profiled.enabled && !check_min_size(\"profiled code heap\", profiled.size, min_size)) ||\n-     (non_profiled.enabled && !check_min_size(\"non-profiled code heap\", non_profiled.size, min_size)) ||\n-     (cache_size_set && !check_min_size(\"reserved code cache\", cache_size, min_cache_size))) {\n-    return;\n+  check_min_size(\"non-nmethod code heap\", non_nmethod.size, non_nmethod_min_size);\n+  if (profiled.enabled) {\n+    check_min_size(\"profiled code heap\", profiled.size, min_size);\n+  }\n+  if (non_profiled.enabled) {\n+    check_min_size(\"non-profiled code heap\", non_profiled.size, min_size);\n+  }\n+  if (cache_size_set) {\n+    check_min_size(\"reserved code cache\", cache_size, min_cache_size);\n@@ -297,1 +296,0 @@\n-    return;\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"}]}