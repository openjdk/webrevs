{"files":[{"patch":"@@ -226,2 +226,3 @@\n-static size_t subtract_size(size_t cache_size, size_t known_segments_size, size_t min_size) {\n-  return (cache_size > known_segments_size + min_size) ? (cache_size - known_segments_size) : min_size;\n+static void set_size_of_unset_code_heap(CodeHeapInfo* heap, size_t available_size, size_t known_segments_size, size_t min_size) {\n+  assert(!heap->set, \"sanity\");\n+  heap->size = (available_size > known_segments_size + min_size) ? (available_size - known_segments_size) : min_size;\n@@ -254,6 +255,2 @@\n-    \/\/ Compatibility\n-    non_nmethod.size += profiled.size;\n-    \/\/ Non-Profiled code heap is not available, forcibly set size to 0\n-    non_profiled.size = 0;\n-    non_profiled.set = true;\n-    non_profiled.enabled = false;\n+    \/\/ MethodNonProfiled heap is always available for segmented code heap\n+    ShouldNotReachHere();\n@@ -276,1 +273,1 @@\n-    non_profiled.size = subtract_size(cache_size, non_nmethod.size + profiled.size, min_size);\n+    set_size_of_unset_code_heap(&non_profiled, cache_size, non_nmethod.size + profiled.size, min_size);\n@@ -280,1 +277,1 @@\n-    profiled.size = subtract_size(cache_size, non_nmethod.size + non_profiled.size, min_size);\n+    set_size_of_unset_code_heap(&profiled, cache_size, non_nmethod.size + non_profiled.size, min_size);\n@@ -287,1 +284,1 @@\n-    non_nmethod.size = subtract_size(cache_size, profiled.size + non_profiled.size, non_nmethod_min_size);\n+    set_size_of_unset_code_heap(&non_nmethod, cache_size, profiled.size + non_profiled.size, non_nmethod_min_size);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}