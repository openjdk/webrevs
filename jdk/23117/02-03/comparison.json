{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.io.BufferedReader;\n@@ -45,0 +44,4 @@\n+    \/\/\n+    \/\/ If exceptionExpected == null, then any IOException thrown by\n+    \/\/ File.createTempFile is ignored.\n+    \/\/\n@@ -46,1 +49,1 @@\n-                             boolean exceptionExpected) throws IOException\n+                             Boolean exceptionExpected) throws IOException\n@@ -73,8 +76,13 @@\n-                    if (exceptionExpected) {\n-                        if (e.getMessage().startsWith(exceptionMsg))\n-                            exceptionThrown = true;\n-                        else\n-                            System.out.println(\"Wrong error message:\" +\n-                                               e.getMessage());\n-                    } else {\n-                        throw e;\n+                    if (exceptionExpected != null) {\n+                        if (exceptionExpected) {\n+                            if (e.getMessage().startsWith(exceptionMsg))\n+                                exceptionThrown = true;\n+                            else\n+                                System.out.println(\"Wrong error message:\" +\n+                                                   e.getMessage());\n+                        } else {\n+                            throw e;\n+                        }\n+\n+                        if (exceptionExpected && (!exceptionThrown || f != null))\n+                            throw new RuntimeException(\"IOException expected\");\n@@ -83,26 +91,0 @@\n-\n-                if (exceptionExpected && (!exceptionThrown || f != null))\n-                    throw new RuntimeException(\"IOException is expected\");\n-            }\n-        }\n-    }\n-\n-    private static int windowsBuild() throws IOException {\n-        if (!OperatingSystem.isWindows())\n-            throw new UnsupportedOperationException();\n-\n-        String cmd = \"Systeminfo\";\n-        Process p = Runtime.getRuntime().exec(new String[] {cmd});\n-        int build = 0;\n-        try (BufferedReader in = p.inputReader()) {\n-            String s;\n-            int i = 0;\n-            while ((s = in.readLine()) != null) {\n-                \/\/ skip header\n-                if (i++ == 0) continue;\n-                if (s.startsWith(\"OS Version\")) {\n-                    String[] elts = s.trim().split(\" \");\n-                    String buildString = elts[elts.length - 1];\n-                    build = Integer.valueOf(buildString);\n-                    break;\n-                }\n@@ -111,1 +93,0 @@\n-        return build;\n@@ -139,1 +120,0 @@\n-        int osBuild = windowsBuild();\n@@ -141,3 +121,1 @@\n-                           \"OS version: \" + OSVersion.current() + \"\\n\" +\n-                           \"OS build:   \" + osBuild);\n-        boolean exceptionExpected = osBuild < WINDOWS_11_MINIMUM_BUILD;\n+                           \"OS version: \" + OSVersion.current());\n@@ -145,1 +123,3 @@\n-        test(\"ReservedName\", resvPre, resvSuf, exceptionExpected);\n+        \/\/ Here the test is for whether File.createTempFile hangs, so whether\n+        \/\/ an exception is thrown is ignored: expectedException == null\n+        test(\"ReservedName\", resvPre, resvSuf, null);\n","filename":"test\/jdk\/java\/io\/File\/createTempFile\/SpecialTempFile.java","additions":22,"deletions":42,"binary":false,"changes":64,"status":"modified"}]}