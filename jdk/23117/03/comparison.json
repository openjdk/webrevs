{"files":[{"patch":"@@ -42,0 +42,6 @@\n+    private static final int WINDOWS_11_MINIMUM_BUILD = 22000;\n+\n+    \/\/\n+    \/\/ If exceptionExpected == null, then any IOException thrown by\n+    \/\/ File.createTempFile is ignored.\n+    \/\/\n@@ -43,1 +49,1 @@\n-                             boolean exceptionExpected) throws IOException\n+                             Boolean exceptionExpected) throws IOException\n@@ -70,8 +76,13 @@\n-                    if (exceptionExpected) {\n-                        if (e.getMessage().startsWith(exceptionMsg))\n-                            exceptionThrown = true;\n-                        else\n-                            System.out.println(\"Wrong error message:\" +\n-                                               e.getMessage());\n-                    } else {\n-                        throw e;\n+                    if (exceptionExpected != null) {\n+                        if (exceptionExpected) {\n+                            if (e.getMessage().startsWith(exceptionMsg))\n+                                exceptionThrown = true;\n+                            else\n+                                System.out.println(\"Wrong error message:\" +\n+                                                   e.getMessage());\n+                        } else {\n+                            throw e;\n+                        }\n+\n+                        if (exceptionExpected && (!exceptionThrown || f != null))\n+                            throw new RuntimeException(\"IOException expected\");\n@@ -80,3 +91,0 @@\n-\n-                if (exceptionExpected && (!exceptionThrown || f != null))\n-                    throw new RuntimeException(\"IOException is expected\");\n@@ -111,4 +119,7 @@\n-        boolean exceptionExpected =\n-            !(StaticProperty.osName().matches(\"^.*[11|2025]$\") ||\n-              new OSVersion(10, 0).compareTo(OSVersion.current()) > 0);\n-        test(\"ReservedName\", resvPre, resvSuf, exceptionExpected);\n+\n+        System.out.println(\"OS name:    \" + StaticProperty.osName() + \"\\n\" +\n+                           \"OS version: \" + OSVersion.current());\n+\n+        \/\/ Here the test is for whether File.createTempFile hangs, so whether\n+        \/\/ an exception is thrown is ignored: expectedException == null\n+        test(\"ReservedName\", resvPre, resvSuf, null);\n","filename":"test\/jdk\/java\/io\/File\/createTempFile\/SpecialTempFile.java","additions":27,"deletions":16,"binary":false,"changes":43,"status":"modified"}]}