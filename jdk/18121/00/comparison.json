{"files":[{"patch":"@@ -530,29 +530,0 @@\n-void ParallelCompactData::add_obj(HeapWord* addr, size_t len)\n-{\n-  const size_t obj_ofs = pointer_delta(addr, _heap_start);\n-  const size_t beg_region = obj_ofs >> Log2RegionSize;\n-  \/\/ end_region is inclusive\n-  const size_t end_region = (obj_ofs + len - 1) >> Log2RegionSize;\n-\n-  if (beg_region == end_region) {\n-    \/\/ All in one region.\n-    _region_data[beg_region].add_live_obj(len);\n-    return;\n-  }\n-\n-  \/\/ First region.\n-  const size_t beg_ofs = region_offset(addr);\n-  _region_data[beg_region].add_live_obj(RegionSize - beg_ofs);\n-\n-  \/\/ Middle regions--completely spanned by this object.\n-  for (size_t region = beg_region + 1; region < end_region; ++region) {\n-    _region_data[region].set_partial_obj_size(RegionSize);\n-    _region_data[region].set_partial_obj_addr(addr);\n-  }\n-\n-  \/\/ Last region.\n-  const size_t end_ofs = region_offset(addr + len - 1);\n-  _region_data[end_region].set_partial_obj_size(end_ofs + 1);\n-  _region_data[end_region].set_partial_obj_addr(addr);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":0,"deletions":29,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -410,3 +410,0 @@\n-  void add_obj(HeapWord* addr, size_t len);\n-  void add_obj(oop p, size_t len) { add_obj(cast_from_oop<HeapWord*>(p), len); }\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}