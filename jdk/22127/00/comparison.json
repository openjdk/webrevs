{"files":[{"patch":"@@ -316,1 +316,0 @@\n-        java.datatransfer,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -134,1 +133,1 @@\n-        ReflectUtil.checkPackageAccess(className);\n+        ClassLoader loader = ClassLoader.getSystemClassLoader();\n@@ -136,20 +135,12 @@\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                sm.checkPermission(new RuntimePermission(\"getClassLoader\"));\n-            }\n-            ClassLoader loader = ClassLoader.getSystemClassLoader();\n-            try {\n-                \/\/ bootstrap class loader and system class loader if present\n-                return Class.forName(className, true, loader);\n-            }\n-            catch (ClassNotFoundException exception) {\n-                \/\/ thread context class loader if and only if present\n-                loader = Thread.currentThread().getContextClassLoader();\n-                if (loader != null) {\n-                    try {\n-                        return Class.forName(className, true, loader);\n-                    }\n-                    catch (ClassNotFoundException e) {\n-                        \/\/ fallback to user's class loader\n-                    }\n+            \/\/ bootstrap class loader and system class loader if present\n+            return Class.forName(className, true, loader);\n+        }\n+        catch (ClassNotFoundException exception) {\n+            \/\/ thread context class loader if and only if present\n+            loader = Thread.currentThread().getContextClassLoader();\n+            if (loader != null) {\n+                try {\n+                    return Class.forName(className, true, loader);\n+                }\n+                catch (ClassNotFoundException e) {\n+                    \/\/ fallback to user's class loader\n@@ -158,2 +149,0 @@\n-        } catch (SecurityException exception) {\n-            \/\/ ignore secured class loaders\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/DataFlavor.java","additions":13,"deletions":24,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -205,4 +203,1 @@\n-        @SuppressWarnings(\"removal\")\n-        InputStream is = AccessController.doPrivileged(\n-            (PrivilegedAction<InputStream>) () -> {\n-                return SystemFlavorMap.class.getResourceAsStream(\n+        InputStream is = SystemFlavorMap.class.getResourceAsStream(\n@@ -210,1 +205,0 @@\n-            });\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/SystemFlavorMap.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}