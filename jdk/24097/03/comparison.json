{"files":[{"patch":"@@ -2061,0 +2061,6 @@\n+  quick_notify(current);\n+}\n+\n+void ObjectMonitor::quick_notify(JavaThread* current) {\n+  assert(has_owner(current), \"Precondition\");\n+\n@@ -2083,0 +2089,6 @@\n+  quick_notifyAll(current);\n+}\n+\n+void ObjectMonitor::quick_notifyAll(JavaThread* current) {\n+  assert(has_owner(current), \"Precondition\");\n+\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -388,0 +388,2 @@\n+  void      quick_notify(JavaThread* current);\n+  void      quick_notifyAll(JavaThread* current);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -371,2 +371,1 @@\n-      \/\/ that we own, we can transfer one or more threads from the waitset\n-      \/\/ to the entry_list here and now, avoiding the slow-path.\n+      \/\/ that we own, we quickly notify them here and now, avoiding the slow-path.\n@@ -374,1 +373,1 @@\n-        DTRACE_MONITOR_PROBE(notifyAll, mon, obj, current);\n+        mon->quick_notifyAll(current);\n@@ -376,1 +375,1 @@\n-        DTRACE_MONITOR_PROBE(notify, mon, obj, current);\n+        mon->quick_notify(current);\n@@ -378,3 +377,0 @@\n-      do {\n-        mon->notify_internal(current);\n-      } while (mon->first_waiter() != nullptr && all);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}