{"files":[{"patch":"@@ -2038,0 +2038,7 @@\n+  quick_notify(current);\n+}\n+\n+void ObjectMonitor::quick_notify(TRAPS) {\n+  JavaThread* current = THREAD;\n+  assert(has_owner(current), \"Precondition\");\n+\n@@ -2061,0 +2068,7 @@\n+  quick_notifyAll(current);\n+}\n+\n+void ObjectMonitor::quick_notifyAll(TRAPS) {\n+  JavaThread* current = THREAD;\n+  assert(has_owner(current), \"Precondition\");\n+\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -426,0 +426,2 @@\n+  void      quick_notify(TRAPS);\n+  void      quick_notifyAll(TRAPS);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -372,2 +372,1 @@\n-      \/\/ that we own, we can transfer one or more threads from the waitset\n-      \/\/ to the entry_list here and now, avoiding the slow-path.\n+      \/\/ that we own, we quickly notify it here and now, avoiding the slow-path.\n@@ -375,1 +374,1 @@\n-        DTRACE_MONITOR_PROBE(notifyAll, mon, obj, current);\n+        mon->quick_notifyAll(current);\n@@ -377,1 +376,1 @@\n-        DTRACE_MONITOR_PROBE(notify, mon, obj, current);\n+        mon->quick_notify(current);\n@@ -379,6 +378,0 @@\n-      int free_count = 0;\n-      do {\n-        mon->notify_internal(current);\n-        ++free_count;\n-      } while (mon->first_waiter() != nullptr && all);\n-      OM_PERFDATA_OP(Notifications, inc(free_count));\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"}]}