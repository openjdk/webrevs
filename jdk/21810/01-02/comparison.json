{"files":[{"patch":"@@ -51,2 +51,3 @@\n-    static final int ELEM_SIZE = 1_000;\n-    static final long ALLOC_SIZE = ELEM_SIZE * ValueLayout.JAVA_INT.byteSize();\n+    static final long ELEM_SIZE = ValueLayout.JAVA_INT.byteSize();\n+    static final int ELEM_COUNT = 1_000;\n+    static final long ALLOC_SIZE = ELEM_COUNT * ELEM_SIZE;\n@@ -64,1 +65,1 @@\n-        indices = new Random().ints(0, ELEM_SIZE).limit(ELEM_SIZE).toArray();\n+        indices = new Random().ints(0, ELEM_COUNT).limit(ELEM_COUNT).toArray();\n@@ -67,1 +68,1 @@\n-        for (int i = 0; i < ELEM_SIZE; i++) {\n+        for (int i = 0; i < ELEM_COUNT; i++) {\n@@ -80,1 +81,1 @@\n-        for (int i = 0; i < ELEM_SIZE; i++) {\n+        for (int i = 0; i < ELEM_COUNT; i++) {\n@@ -90,2 +91,2 @@\n-        for (int i = 0; i < ELEM_SIZE; i++) {\n-            sum += ALL.get(ValueLayout.JAVA_INT_UNALIGNED, ValueLayout.JAVA_INT.scale(segment.address(), indices[i]));\n+        for (int i = 0; i < ELEM_COUNT; i++) {\n+            sum += ALL.get(ValueLayout.JAVA_INT_UNALIGNED, segment.address() + indices[i] * ELEM_SIZE);\n@@ -100,1 +101,1 @@\n-        for (int i = 0; i < ELEM_SIZE; i++) {\n+        for (int i = 0; i < ELEM_COUNT; i++) {\n@@ -110,2 +111,2 @@\n-        for (int i = 0; i < ELEM_SIZE; i++) {\n-            sum += unsafe.getInt(ValueLayout.JAVA_INT.scale(segment.address(), indices[i]));\n+        for (int i = 0; i < ELEM_COUNT; i++) {\n+            sum += unsafe.getInt(segment.address() + indices[i] * ELEM_SIZE);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverRandom.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"}]}