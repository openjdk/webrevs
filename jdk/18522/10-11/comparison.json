{"files":[{"patch":"@@ -1327,0 +1327,3 @@\n+        @Override public abstract Set<K> keySet();\n+        @Override public abstract Collection<V> values();\n+\n@@ -1697,0 +1700,29 @@\n+        @Override\n+        public Set<K> keySet() {\n+            Set<K> ks = keySet;\n+            if (ks == null) {\n+                ks = new AbstractImmutableSet<>() {\n+                    @Override\n+                    public int size() {\n+                        return delegate.size();\n+                    }\n+\n+                    @Override\n+                    public Iterator<K> iterator() {\n+                        return new KeyIterator();\n+                    }\n+\n+                    @Override\n+                    public int hashCode() {\n+                        int hash = 0;\n+                        for (K k : delegate.keySet()) {\n+                            hash += k.hashCode();\n+                        }\n+                        return hash;\n+                    }\n+                };\n+                keySet = ks;\n+            }\n+            return ks;\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- *          4802647 7123424 8024709 8193128 8328821 8327858\n+ *          4802647 7123424 8024709 8193128 8327858 8328821\n","filename":"test\/jdk\/java\/util\/Collection\/MOAT.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}