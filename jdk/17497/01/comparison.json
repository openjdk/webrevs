{"files":[{"patch":"@@ -186,15 +186,0 @@\n-\n-class GenerationObjIterateClosure : public SpaceClosure {\n- private:\n-  ObjectClosure* _cl;\n- public:\n-  virtual void do_space(Space* s) {\n-    s->object_iterate(_cl);\n-  }\n-  GenerationObjIterateClosure(ObjectClosure* cl) : _cl(cl) {}\n-};\n-\n-void Generation::object_iterate(ObjectClosure* cl) {\n-  GenerationObjIterateClosure blk(cl);\n-  space_iterate(&blk);\n-}\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -90,1 +90,0 @@\n-    Other\n@@ -102,3 +101,0 @@\n-\n-  virtual Generation::Name kind() { return Generation::Other; }\n-\n@@ -115,4 +111,0 @@\n-  \/\/ If this is a young generation, the maximum number of bytes that can be\n-  \/\/ allocated in this generation before a GC is triggered.\n-  virtual size_t capacity_before_gc() const { return 0; }\n-\n@@ -239,12 +231,0 @@\n-  \/\/ Accessing \"marks\".\n-\n-  \/\/ This function gives a generation a chance to note a point between\n-  \/\/ collections.  For example, a contiguous generation might note the\n-  \/\/ beginning allocation point post-collection, which might allow some later\n-  \/\/ operations to be optimized.\n-  virtual void save_marks() {}\n-\n-  \/\/ This function is \"true\" iff any no allocations have occurred in the\n-  \/\/ generation since the last call to \"save_marks\".\n-  virtual bool no_allocs_since_save_marks() = 0;\n-\n@@ -255,6 +235,0 @@\n-  \/\/ Iteration.\n-\n-  \/\/ Iterate over all objects in the generation, calling \"cl.do_object\" on\n-  \/\/ each.\n-  virtual void object_iterate(ObjectClosure* cl);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":26,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -220,1 +220,0 @@\n-  declare_constant(Generation::Other)                                       \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-  private static int NAME_OTHER;\n@@ -83,1 +82,0 @@\n-    NAME_OTHER = db.lookupIntConstant(\"Generation::Other\").intValue();\n@@ -114,2 +112,0 @@\n-     } else if (value == NAME_OTHER) {\n-        return Name.OTHER;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/Generation.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}