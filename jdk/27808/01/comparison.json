{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author darcy\n","filename":"test\/langtools\/tools\/javac\/HexThree.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/OneCaseSwitches.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/StringsInSwitch\/StringSwitches.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/BadTwr.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-BadTwr.java:12:46: compiler.err.already.defined: kindname.variable, r1, kindname.method, meth(java.lang.String...)\n-BadTwr.java:17:20: compiler.err.already.defined: kindname.variable, args, kindname.method, meth(java.lang.String...)\n-BadTwr.java:20:13: compiler.err.cant.assign.val.to.var: final, thatsIt\n-BadTwr.java:25:24: compiler.err.already.defined: kindname.variable, name, kindname.method, meth(java.lang.String...)\n+BadTwr.java:11:46: compiler.err.already.defined: kindname.variable, r1, kindname.method, meth(java.lang.String...)\n+BadTwr.java:16:20: compiler.err.already.defined: kindname.variable, args, kindname.method, meth(java.lang.String...)\n+BadTwr.java:19:13: compiler.err.cant.assign.val.to.var: final, thatsIt\n+BadTwr.java:24:24: compiler.err.already.defined: kindname.variable, name, kindname.method, meth(java.lang.String...)\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/BadTwr.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/BadTwrSyntax.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-BadTwrSyntax.java:13:43: compiler.err.illegal.start.of.expr\n+BadTwrSyntax.java:12:43: compiler.err.illegal.start.of.expr\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/BadTwrSyntax.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/ExplicitFinal.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n@@ -6,1 +5,1 @@\n- * @compile\/fail\/ref=PlainTry.out  -XDrawDiagnostics                           PlainTry.java\n+ * @compile\/fail\/ref=PlainTry.out -XDrawDiagnostics PlainTry.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/PlainTry.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-PlainTry.java:10:9: compiler.err.try.without.catch.finally.or.resource.decls\n+PlainTry.java:9:9: compiler.err.try.without.catch.finally.or.resource.decls\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/PlainTry.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrFlow.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-TwrFlow.java:14:11: compiler.err.except.never.thrown.in.try: java.io.IOException\n-TwrFlow.java:12:21: compiler.err.unreported.exception.implicit.close: CustomCloseException, twrFlow\n+TwrFlow.java:13:11: compiler.err.except.never.thrown.in.try: java.io.IOException\n+TwrFlow.java:11:21: compiler.err.unreported.exception.implicit.close: CustomCloseException, twrFlow\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrFlow.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrLint.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-TwrLint.java:14:15: compiler.warn.try.explicit.close.call\n-TwrLint.java:13:21: compiler.warn.try.resource.not.referenced: r3\n+TwrLint.java:13:15: compiler.warn.try.explicit.close.call\n+TwrLint.java:12:21: compiler.warn.try.resource.not.referenced: r3\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrLint.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrMultiCatch.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrOnNonResource.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-TwrOnNonResource.java:11:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n-TwrOnNonResource.java:14:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n-TwrOnNonResource.java:17:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n+TwrOnNonResource.java:10:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n+TwrOnNonResource.java:13:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n+TwrOnNonResource.java:16:30: compiler.err.prob.found.req: (compiler.misc.try.not.applicable.to.type: (compiler.misc.inconvertible.types: TwrOnNonResource, java.lang.AutoCloseable))\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrOnNonResource.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrSuppression.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/WeirdTwr.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author darcy\n","filename":"test\/langtools\/tools\/javac\/annotations\/pos\/TrailingComma.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/boxing\/BoxingCaching.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/6350057\/T6350057.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/AbstractEmptyEnum.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-AbstractEmptyEnum.java:10:8: compiler.err.does.not.override.abstract: AbstractEmptyEnum, m(), AbstractEmptyEnum\n+AbstractEmptyEnum.java:9:8: compiler.err.does.not.override.abstract: AbstractEmptyEnum, m(), AbstractEmptyEnum\n","filename":"test\/langtools\/tools\/javac\/enum\/AbstractEmptyEnum.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumImplicitPrivateConstructor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumPrivateConstructor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumProtectedConstructor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-EnumProtectedConstructor.java:16:15: compiler.err.mod.not.allowed.here: protected\n+EnumProtectedConstructor.java:15:15: compiler.err.mod.not.allowed.here: protected\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumProtectedConstructor.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumPublicConstructor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-EnumPublicConstructor.java:16:12: compiler.err.mod.not.allowed.here: public\n+EnumPublicConstructor.java:15:12: compiler.err.mod.not.allowed.here: public\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumPublicConstructor.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyAbstractEnum1.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ExplicitlyAbstractEnum1.java:9:10: compiler.err.mod.not.allowed.here: abstract\n+ExplicitlyAbstractEnum1.java:8:10: compiler.err.mod.not.allowed.here: abstract\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyAbstractEnum1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyAbstractEnum2.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ExplicitlyAbstractEnum2.java:9:10: compiler.err.mod.not.allowed.here: abstract\n+ExplicitlyAbstractEnum2.java:8:10: compiler.err.mod.not.allowed.here: abstract\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyAbstractEnum2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyFinalEnum1.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ExplicitlyFinalEnum1.java:9:7: compiler.err.mod.not.allowed.here: final\n+ExplicitlyFinalEnum1.java:8:7: compiler.err.mod.not.allowed.here: final\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyFinalEnum1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyFinalEnum2.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ExplicitlyFinalEnum2.java:9:7: compiler.err.mod.not.allowed.here: final\n+ExplicitlyFinalEnum2.java:8:7: compiler.err.mod.not.allowed.here: final\n","filename":"test\/langtools\/tools\/javac\/enum\/ExplicitlyFinalEnum2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxEnum1.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-FauxEnum1.java:10:8: compiler.err.enum.no.subclassing\n+FauxEnum1.java:9:8: compiler.err.enum.no.subclassing\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxEnum1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxEnum3.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-FauxEnum3.java:10:14: compiler.err.enum.types.not.extensible\n+FauxEnum3.java:9:14: compiler.err.enum.types.not.extensible\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxEnum3.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxSpecialEnum1.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-FauxSpecialEnum1.java:14:5: compiler.err.does.not.override.abstract: compiler.misc.anonymous.class: FauxSpecialEnum1$2, test(), compiler.misc.anonymous.class: FauxSpecialEnum1$2\n+FauxSpecialEnum1.java:13:5: compiler.err.does.not.override.abstract: compiler.misc.anonymous.class: FauxSpecialEnum1$2, test(), compiler.misc.anonymous.class: FauxSpecialEnum1$2\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxSpecialEnum1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxSpecialEnum2.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-FauxSpecialEnum2.java:12:5: compiler.err.does.not.override.abstract: compiler.misc.anonymous.class: FauxSpecialEnum2$1, test(), compiler.misc.anonymous.class: FauxSpecialEnum2$1\n+FauxSpecialEnum2.java:11:5: compiler.err.does.not.override.abstract: compiler.misc.anonymous.class: FauxSpecialEnum2$1, test(), compiler.misc.anonymous.class: FauxSpecialEnum2$1\n","filename":"test\/langtools\/tools\/javac\/enum\/FauxSpecialEnum2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author darcy\n","filename":"test\/langtools\/tools\/javac\/generics\/InheritanceConflict3.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-InheritanceConflict3.java:14:10: compiler.err.name.clash.same.erasure: f(java.lang.Object), f(T)\n-InheritanceConflict3.java:17:1: compiler.err.concrete.inheritance.conflict: f(java.lang.Object), inheritance.conflict3.X1, f(T), inheritance.conflict3.X1, inheritance.conflict3.X1\n+InheritanceConflict3.java:13:10: compiler.err.name.clash.same.erasure: f(java.lang.Object), f(T)\n+InheritanceConflict3.java:16:1: compiler.err.concrete.inheritance.conflict: f(java.lang.Object), inheritance.conflict3.X1, f(T), inheritance.conflict3.X1, inheritance.conflict3.X1\n","filename":"test\/langtools\/tools\/javac\/generics\/InheritanceConflict3.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6,1 +6,0 @@\n- * @author darcy\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg01.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Neg01.java:22:19: compiler.err.except.never.thrown.in.try: Neg01.B2\n+Neg01.java:21:19: compiler.err.except.never.thrown.in.try: Neg01.B2\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg01.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,0 @@\n- * @author darcy\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg01eff_final.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Neg01eff_final.java:22:19: compiler.err.except.never.thrown.in.try: Neg01eff_final.B2\n+Neg01eff_final.java:21:19: compiler.err.except.never.thrown.in.try: Neg01eff_final.B2\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg01eff_final.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg07.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-Neg07.java:14:56: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Class<compiler.misc.type.captureof: 1, ? extends Neg07.ParentException>, java.lang.Class<? extends Neg07.HasFoo>)\n+Neg07.java:13:56: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Class<compiler.misc.type.captureof: 1, ? extends Neg07.ParentException>, java.lang.Class<? extends Neg07.HasFoo>)\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Neg07.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/multicatch\/Pos10.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author  Joseph D. Darcy\n@@ -16,1 +15,1 @@\n- * @compile\/fail\/ref=T6365040.out -XDrawDiagnostics -processor NotThere -proc:only T6365040.java\n+ * @compile\/fail\/ref=T6365040.out -XDrawDiagnostics -processor NotThere          -proc:only T6365040.java\n@@ -26,1 +25,0 @@\n-\n","filename":"test\/langtools\/tools\/javac\/processing\/6365040\/T6365040.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/6378728\/T6378728.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/6634138\/T6634138.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/completion\/TestCompletions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/TestSourceVersion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/round\/TestElementsAnnotatedWith.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestFatalityOfParseErrors.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestOptionSyntaxErrors.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/errors\/TestReturnCode.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestFilerConstraints.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestGetResource.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestPackageInfo.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/messager\/MessagerBasics.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/TestExceptions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/TestSourceVersion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestAnonClassNames.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestElement.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestExecutableElement.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestNames.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestPackageElement.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestResourceVariable.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/MirroredTypeEx\/NpeTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/MirroredTypeEx\/Plurality.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/TestTypeKind.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/deprecation\/TestDeprecation.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetConstantExpression.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetPackageOf.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestIsFunctionalInterface.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/VacuousEnum.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/filter\/TestIterables.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestPseudoTypeHandling.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+\n@@ -28,1 +29,0 @@\n- * @author  Joseph D. Darcy\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/TestSourceVersionWarnings.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}