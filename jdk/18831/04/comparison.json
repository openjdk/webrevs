{"files":[{"patch":"@@ -0,0 +1,135 @@\n+################################################################################\n+#           JAXP Compatibility Configuration File\n+#\n+# ** Warning: unsafe configuration, use with security assessment\n+# ** Note: this file can change over time as the security configuration evolves\n+# ** along with new development. They may also be phased out and removed.\n+#\n+# This is one of the three configuration files provided in the JDK:\n+#\n+# jaxp.properties: this is the default configuration that the JDK uses to set\n+# property values when XML factories are initiated.\n+#\n+# jaxp-strict.properties: this property file provides settings that will be\n+# equivalent to what will be the default JAXP settings in a future release to\n+# make the use of JAXP more secure by default. This file allows deployments to\n+# test the more secure\/strict behavior, identify issues such as a processor\n+# unknowingly makes outbound network connections to fetch DTD, or processes XML\n+# that relies on extension functions.\n+#\n+# jaxp-compat.properties: this configuration specifies the property values that\n+# are the same as the properties' default values. It can be used to regain\n+# compatibility from a more strict configuration in a future release.\n+# The difference from the default `jaxp.properties` is that it contains additional\n+# properties that were not included in jaxp.properties, setting them to their\n+# default values.\n+#\n+# In this configuration, properties that have more restrictive settings as in the\n+# strict configuration (jaxp-strict.properties) are reversed back to their\n+# defaults. In particular:\n+#   - JDKCatalog Resolve is set to \"continue\"\n+#   - Extension Functions are enabled\n+#   - JAXP Limits are set to their default values\n+#\n+# This configuration file can be used to reverse back to a working environment\n+# prior to any more restrictive configuration that may have been applied.\n+# Use the system property java.xml.config.file to override the default configuration:\n+#\n+#     java -Djava.xml.config.file=$JAVA_HOME\/conf\/jaxp-compat.properties\n+################################################################################\n+\n+#\n+# ---- Implementation Specific Properties ----\n+# For a complete list of properties, refer to the Implementation Specific Properties\n+# table in the java.xml\/module-summary.\n+#\n+# Extension Functions:\n+#\n+# This property determines whether XSLT and XPath extension functions are allowed.\n+# The value type is boolean and the default value is true (allowing\n+# extension functions). The following entry would override any change that may\n+# have been made by the default configuration:\n+#\n+jdk.xml.enableExtensionFunctions=true\n+#\n+#\n+# Overriding the default parser:\n+#\n+# This property allows using a third party implementation to override the default\n+# parser provided by the JDK. The value type is boolean and the default value is\n+# false, disallowing overriding the default parser. The setting below reflects\n+# the default property setting:\n+#\n+jdk.xml.overrideDefaultParser=false\n+#\n+# Implementation Specific Properties - jdkcatalog.resolve\n+#\n+# This property instructs the JDK default CatalogResolver to act in accordance with\n+# the setting when unable to resolve an external reference with the built-in Catalog.\n+# The options are:\n+#     continue -- indicates that the processing should continue\n+#     ignore -- indicates that the reference is skipped\n+#     strict -- indicates that the resolver should throw a CatalogException\n+#\n+# The following setting would allow the resolution to continue in cases where\n+# external references are not resolved by a user-defined resolver or catalog if\n+# any, and the JDKCatalog:\n+jdk.xml.jdkcatalog.resolve=continue\n+#\n+# Implementation Specific Properties - DTD\n+#\n+# This property instructs the parsers to: deny, ignore or allow DTD processing.\n+# The following setting would cause the parser to reject DTD by throwing an exception.\n+# jdk.xml.dtd.support=deny\n+#\n+# The following setting permits the processor to continue processing DTDs\n+jdk.xml.dtd.support=allow\n+#\n+# Implementation Specific Properties - Limits\n+#\n+# Limits have a value type Integer. The values must be positive integers. Zero\n+# means no limit.\n+#\n+# Limits the number of entity expansions\n+jdk.xml.entityExpansionLimit=64000\n+#\n+# Limits the total size of all entities that include general and parameter entities.\n+# The size is calculated as an aggregation of all entities.\n+jdk.xml.totalEntitySizeLimit=10000000\n+#\n+# Limits the maximum size of any general entities.\n+jdk.xml.maxGeneralEntitySizeLimit=0\n+#\n+# Limits the maximum size of any parameter entities, including the result of\n+# nesting multiple parameter entities.\n+jdk.xml.maxParameterEntitySizeLimit=1000000\n+#\n+# Limits the total number of nodes in all entity references.\n+jdk.xml.entityReplacementLimit=3000000\n+#\n+# Limits the number of attributes an element can have. The default value is 10000.\n+jdk.xml.elementAttributeLimit=10000\n+#\n+# Limits the number of content model nodes that may be created when building a\n+# grammar for a W3C XML Schema that contains maxOccurs attributes with values\n+# other than \"unbounded\". The default value is 5000.\n+jdk.xml.maxOccurLimit=5000\n+#\n+# Limits the maximum element depth. The default value is 0.\n+jdk.xml.maxElementDepth=0\n+#\n+# Limits the maximum size of XML names, including element name, attribute name\n+# and namespace prefix and URI. The default value is 1000.\n+jdk.xml.maxXMLNameLimit=1000\n+#\n+#\n+# XPath Limits\n+#\n+# Limits the number of groups an XPath expression can contain. The default value is 10.\n+jdk.xml.xpathExprGrpLimit=10\n+#\n+# Limits the number of operators an XPath expression can contain. The default value is 100.\n+jdk.xml.xpathExprOpLimit=100\n+#\n+# Limits the total number of XPath operators in an XSL Stylesheet. The default value is 10000.\n+jdk.xml.xpathTotalOpLimit=10000\n","filename":"src\/java.xml\/share\/conf\/jaxp-compat.properties","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"@@ -0,0 +1,135 @@\n+################################################################################\n+#           JAXP Strict Configuration File\n+#\n+# ** Note: this file can change over time as the security configuration evolves\n+# ** along with new development. They may also be phased out and removed.\n+#\n+# This is one of the three configuration files provided in the JDK:\n+#\n+# jaxp.properties: this is the default configuration that the JDK uses to set\n+# property values when XML factories are initiated.\n+#\n+# jaxp-strict.properties: this property file provides settings that will be\n+# equivalent to what will be the default JAXP settings in a future release to\n+# make the use of JAXP more secure by default. This file allows deployments to\n+# test the more secure\/strict behavior, identify issues such as a processor\n+# unknowingly makes outbound network connections to fetch DTD, or processes XML\n+# that relies on extension functions.\n+#\n+# jaxp-compat.properties: this configuration specifies the property values that\n+# are the same as the properties' default values. It can be used to regain\n+# compatibility from a more strict configuration in a future release.\n+# The difference from the default `jaxp.properties` is that it contains additional\n+# properties that were not included in jaxp.properties, setting them to their\n+# default values.\n+#\n+# This file, jaxp-strict.properties represents more restrictive settings than the\n+# default jaxp.properties. In particular:\n+#   - JDKCatalog Resolve is on \"strict\" setting\n+#   - Extension Functions are disabled\n+#   - JAXP Limits are set to smaller numbers\n+#\n+# This configuration file can be set up using the system property\n+# java.xml.config.file to override the default configuration jaxp.properties\n+# and used to assess the impact of a stricter configuration:\n+#\n+#     java -Djava.xml.config.file=$JAVA_HOME\/conf\/jaxp-strict.properties\n+################################################################################\n+\n+#\n+# ---- Implementation Specific Properties ----\n+# For a complete list of properties, refer to the Implementation Specific Properties\n+# table in the java.xml\/module-summary.\n+#\n+# Extension Functions:\n+#\n+# This property determines whether XSLT and XPath extension functions are allowed.\n+# The value type is boolean and the default value is true (allowing\n+# extension functions). The following entry would override the default value and\n+# disallow extension functions:\n+#\n+jdk.xml.enableExtensionFunctions=false\n+#\n+#\n+# Overriding the default parser:\n+#\n+# This property allows using a third party implementation to override the default\n+# parser provided by the JDK. The value type is boolean and the default value is\n+# false, disallowing overriding the default parser. The setting below reflects\n+# the default property setting:\n+#\n+jdk.xml.overrideDefaultParser=false\n+#\n+# Implementation Specific Properties - jdkcatalog.resolve\n+#\n+# This property instructs the JDK default CatalogResolver to act in accordance with\n+# the setting when unable to resolve an external reference with the built-in Catalog.\n+# The options are:\n+#     continue -- indicates that the processing should continue\n+#     ignore -- indicates that the reference is skipped\n+#     strict -- indicates that the resolver should throw a CatalogException\n+#\n+# The following setting would cause the resolve to throw a CatalogException when\n+# external references are not resolved by a user-defined resolver or catalog,\n+# or the JDKCatalog:\n+jdk.xml.jdkcatalog.resolve=strict\n+#\n+# Implementation Specific Properties - DTD\n+#\n+# This property instructs the parsers to: deny, ignore or allow DTD processing.\n+# The following setting would cause the parser to reject DTD by throwing an exception.\n+# jdk.xml.dtd.support=deny\n+#\n+# The following setting permits the processor to continue processing DTDs. Note\n+# that while DTDs are allowed in this configuration, external references are\n+# restricted, and limits on DTD entities are tightened:\n+jdk.xml.dtd.support=allow\n+#\n+# Implementation Specific Properties - Limits\n+#\n+# Limits have a value type Integer. The values must be positive integers. Zero\n+# means no limit.\n+#\n+# Limits the number of entity expansions\n+jdk.xml.entityExpansionLimit=2500\n+#\n+# Limits the total size of all entities that include general and parameter entities.\n+# The size is calculated as an aggregation of all entities.\n+jdk.xml.totalEntitySizeLimit=100000\n+#\n+# Limits the maximum size of any general entities.\n+jdk.xml.maxGeneralEntitySizeLimit=100000\n+#\n+# Limits the maximum size of any parameter entities, including the result of\n+# nesting multiple parameter entities.\n+jdk.xml.maxParameterEntitySizeLimit=15000\n+#\n+# Limits the total number of nodes in all entity references.\n+jdk.xml.entityReplacementLimit=100000\n+#\n+# Limits the number of attributes an element can have. The default value is 10000.\n+jdk.xml.elementAttributeLimit=10000\n+#\n+# Limits the number of content model nodes that may be created when building a\n+# grammar for a W3C XML Schema that contains maxOccurs attributes with values\n+# other than \"unbounded\". The default value is 5000.\n+jdk.xml.maxOccurLimit=5000\n+#\n+# Limits the maximum element depth. The default value is 0.\n+jdk.xml.maxElementDepth=0\n+#\n+# Limits the maximum size of XML names, including element name, attribute name\n+# and namespace prefix and URI. The default value is 1000.\n+jdk.xml.maxXMLNameLimit=1000\n+#\n+#\n+# XPath Limits\n+#\n+# Limits the number of groups an XPath expression can contain. The default value is 10.\n+jdk.xml.xpathExprGrpLimit=10\n+#\n+# Limits the number of operators an XPath expression can contain. The default value is 100.\n+jdk.xml.xpathExprOpLimit=100\n+#\n+# Limits the total number of XPath operators in an XSL Stylesheet. The default value is 10000.\n+jdk.xml.xpathTotalOpLimit=10000\n","filename":"src\/java.xml\/share\/conf\/jaxp-strict.properties","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"}]}