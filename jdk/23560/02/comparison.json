{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,1 +198,1 @@\n-                byte[] pathForSysCall = path.asByteArray();\n+                byte[] pathForSysCall = path.getByteArrayForSysCalls();\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixChannelFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887\n+ * @bug 4313887 8349812\n@@ -66,0 +66,1 @@\n+            emptyPathTest();\n@@ -427,0 +428,20 @@\n+    static void emptyPathTest() throws Exception {\n+        try {\n+            Files.newByteChannel(Path.of(\"\"), WRITE, CREATE_NEW);\n+            throw new RuntimeException(\"FileAlreadyExistsException expected\");\n+        } catch (FileAlreadyExistsException x) { }\n+\n+        try {\n+            Files.newByteChannel(Path.of(\"\"), WRITE, CREATE, DELETE_ON_CLOSE);\n+            throw new RuntimeException(\"FileSystemException expected\");\n+        } catch (FileSystemException x) { }\n+\n+        try {\n+            Files.newByteChannel(Path.of(\"\"), WRITE, LinkOption.NOFOLLOW_LINKS);\n+            throw new RuntimeException(\"FileSystemException expected\");\n+        } catch (FileSystemException x) { }\n+\n+        try (var channel = Files.newByteChannel(Path.of(\"\"), READ, LinkOption.NOFOLLOW_LINKS)) {\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SBC.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"}]}