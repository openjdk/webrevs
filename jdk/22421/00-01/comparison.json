{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,2 +87,2 @@\n-                Class<?> socketFactoryClass =\n-                        Obj.helper.loadClass(socketFactory);\n+                Class<?> socketFactoryClass = Class.forName(socketFactory,\n+                        true, Thread.currentThread().getContextClassLoader());\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/ClientId.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-        worker = Obj.helper.createThread(this);\n+        worker = new Thread(this);\n@@ -312,1 +312,2 @@\n-                    (Class<? extends SocketFactory>) Obj.helper.loadClass(socketFactoryName);\n+                    (Class<? extends SocketFactory>) Class.forName(socketFactoryName,\n+                            true, Thread.currentThread().getContextClassLoader());\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        qThread = Obj.helper.createThread(this);\n+        qThread = new Thread(this);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/EventQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,2 @@\n-                Class<?> socketFactoryClass = Obj.helper.loadClass(socketFactory);\n+                Class<?> socketFactoryClass = Class.forName(socketFactory, true,\n+                        Thread.currentThread().getContextClassLoader());\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapPoolManager.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-        worker = Obj.helper.createThread(this);\n+        worker = new Thread(this);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/NamingEventNotifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,2 +60,13 @@\n-    \/\/ package private; used by Connection\n-    static VersionHelper helper = VersionHelper.getVersionHelper();\n+    \/**\n+     * Determines whether objects may be deserialized or reconstructed from a content of\n+     * 'javaSerializedData', 'javaRemoteLocation' or 'javaReferenceAddress' LDAP attributes.\n+     *\/\n+    private static final boolean trustSerialData;\n+\n+    static {\n+        \/\/ System property to control whether classes are allowed to be loaded from\n+        \/\/ 'javaSerializedData', 'javaRemoteLocation' or 'javaReferenceAddress' attributes.\n+        String trustSerialDataSp = System.getProperty(\n+                \"com.sun.jndi.ldap.object.trustSerialData\", \"false\");\n+        trustSerialData = \"true\".equalsIgnoreCase(trustSerialDataSp);\n+    }\n@@ -236,1 +247,1 @@\n-                if (!VersionHelper.isSerialDataAllowed()) {\n+                if (!trustSerialData) {\n@@ -243,1 +254,1 @@\n-                 if (!VersionHelper.isSerialDataAllowed()) {\n+                 if (!trustSerialData) {\n@@ -474,1 +485,1 @@\n-                    if (!VersionHelper.isSerialDataAllowed()) {\n+                    if (!trustSerialData) {\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Obj.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,72 +0,0 @@\n-\/*\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.jndi.ldap;\n-\n-public final class VersionHelper {\n-\n-    private static final VersionHelper helper = new VersionHelper();\n-\n-    \/**\n-     * Determines whether objects may be deserialized or reconstructed from a content of\n-     * 'javaSerializedData', 'javaRemoteLocation' or 'javaReferenceAddress' LDAP attributes.\n-     *\/\n-    private static final boolean trustSerialData;\n-\n-    static {\n-        \/\/ System property to control whether classes are allowed to be loaded from\n-        \/\/ 'javaSerializedData', 'javaRemoteLocation' or 'javaReferenceAddress' attributes.\n-        String trustSerialDataSp = System.getProperty(\n-                \"com.sun.jndi.ldap.object.trustSerialData\", \"false\");\n-        trustSerialData = \"true\".equalsIgnoreCase(trustSerialDataSp);\n-    }\n-\n-    private VersionHelper() {\n-    }\n-\n-    static VersionHelper getVersionHelper() {\n-        return helper;\n-    }\n-\n-    \/**\n-     * Returns true if deserialization or reconstruction of objects from\n-     * 'javaSerializedData', 'javaRemoteLocation' and 'javaReferenceAddress'\n-     * LDAP attributes is allowed.\n-     *\n-     * @return true if deserialization is allowed; false - otherwise\n-     *\/\n-    public static boolean isSerialDataAllowed() {\n-        return trustSerialData;\n-    }\n-\n-    Class<?> loadClass(String className) throws ClassNotFoundException {\n-        return Class.forName(className, true,\n-                             Thread.currentThread().getContextClassLoader());\n-    }\n-\n-    Thread createThread(Runnable r) {\n-        return new Thread(r);\n-    }\n-}\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/VersionHelper.java","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"}]}