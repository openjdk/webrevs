{"files":[{"patch":"@@ -186,1 +186,2 @@\n- *   extensions apart from language identification.<\/dd>\n+ *   extensions apart from language identification. Keys must not be repeated, unless\n+ *   used as values for the key 'x'.<\/dd>\n@@ -249,1 +250,2 @@\n- * form as a locale type subtag).\n+ * form as a locale type subtag). When duplicate keys or attributes occur, they\n+ * are considered ill-formed.\n@@ -564,0 +566,2 @@\n+ * @spec https:\/\/www.rfc-editor.org\/info\/rfc6067\n+ *      RFC 6067: BCP 47 Extension U\n@@ -2715,1 +2719,1 @@\n-         * must be well-formed (see {@link Locale}) or an exception is\n+         * must be {@linkplain Locale##def_language well-formed} or an exception is\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-                setUnicodeLocaleExtension(val, true);\n+                setUnicodeLocaleExtension(val, false);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/InternalLocaleBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- *      8369590\n+ *      8369590 8369739\n@@ -748,1 +748,2 @@\n-        assertTrue(assertThrows(IllformedLocaleException.class,\n+        assertEquals(\"Duplicate extension 'A' [at index 17]\",\n+                assertThrows(IllformedLocaleException.class,\n@@ -750,1 +751,1 @@\n-                .getMessage().contains(\"Duplicate extension 'A'\"));\n+                .getMessage());\n@@ -752,1 +753,2 @@\n-        assertTrue(assertThrows(IllformedLocaleException.class,\n+        assertEquals(\"Duplicate U-extension key: \\\"NU\\\"\",\n+                assertThrows(IllformedLocaleException.class,\n@@ -754,1 +756,1 @@\n-                .getMessage().contains(\"Duplicate U-extension key: \\\"NU\\\"\"));\n+                .getMessage());\n@@ -756,1 +758,2 @@\n-        assertTrue(assertThrows(IllformedLocaleException.class,\n+        assertEquals(\"Duplicate U-extension attribute: \\\"FOO\\\"\",\n+                assertThrows(IllformedLocaleException.class,\n@@ -758,1 +761,1 @@\n-                .getMessage().contains(\"Duplicate U-extension attribute: \\\"FOO\\\"\"));\n+                .getMessage());\n@@ -1048,2 +1051,4 @@\n-        \/\/ redundant locale extensions are ignored\n-        result = builder\n+        \/\/ redundant locale extensions should fail\n+        assertEquals(\"Duplicate U-extension key: \\\"NU\\\"\",\n+                assertThrows(IllformedLocaleException.class, () ->\n+                builder\n@@ -1052,3 +1057,1 @@\n-                .build()\n-                .toLanguageTag();\n-        assertEquals(\"und-u-nu-thai-xx-1234\", result, \"duplicate keys\");\n+                .build()).getMessage());\n@@ -1056,2 +1059,4 @@\n-        \/\/ redundant locale attributes are ignored\n-        result = builder\n+        \/\/ redundant locale attributes should fail\n+        assertEquals(\"Duplicate U-extension attribute: \\\"bar\\\"\",\n+                assertThrows(IllformedLocaleException.class, () ->\n+                builder\n@@ -1060,3 +1065,1 @@\n-                .build()\n-                .toLanguageTag();\n-        assertEquals(\"und-u-bar-foo\", result, \"duplicate attributes\");\n+                .build()).getMessage());\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleEnhanceTest.java","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"}]}