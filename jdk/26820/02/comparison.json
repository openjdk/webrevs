{"files":[{"patch":"@@ -83,0 +83,1 @@\n+    vm.cds.nocoops.archive.available \\\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @requires vm.cds.default.archive.available\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedCPUSpecificClassSpaceReservation.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,2 +97,2 @@\n-    private static boolean isCOHArchiveAvailable(char coops, char coh,\n-                                                 String archiveSuffix) throws Exception {\n+    private static boolean isArchiveAvailable(char coops, char coh,\n+                                              String archiveSuffix) throws Exception {\n@@ -116,0 +116,4 @@\n+                if (!isArchiveAvailable(coops, coh, archiveSuffix)) {\n+                    throw new SkippedException(\"Skipping test due to \" +\n+                                               archivePath(archiveSuffix).toString() + \" not available\");\n+                }\n@@ -121,1 +125,1 @@\n-                if (!isCOHArchiveAvailable(coops, coh, archiveSuffix)) {\n+                if (!isArchiveAvailable(coops, coh, archiveSuffix)) {\n@@ -130,0 +134,4 @@\n+                if (!isArchiveAvailable(coops, coh, archiveSuffix)) {\n+                    throw new SkippedException(\"Skipping test due to \" +\n+                                               archivePath(archiveSuffix).toString() + \" not available\");\n+                }\n@@ -134,1 +142,1 @@\n-                if (!isCOHArchiveAvailable(coops, coh, archiveSuffix)) {\n+                if (!isArchiveAvailable(coops, coh, archiveSuffix)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestDefaultArchiveLoading.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,1 @@\n+ * @requires vm.cds.nocoops.archive.available\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/loaderConstraints\/DynamicLoaderConstraintsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+        map.put(\"vm.cds.nocoops.archive.available\", this::vmCDSNocoopsArchiveAvailable);\n@@ -443,0 +444,10 @@\n+    \/**\n+     * Check for CDS no compressed oops archive existence.\n+     *\n+     * @return true if CDS archive classes_nocoops.jsa exists in the JDK to be tested.\n+     *\/\n+    protected String vmCDSNocoopsArchiveAvailable() {\n+        Path archive = Paths.get(System.getProperty(\"java.home\"), \"lib\", \"server\", \"classes_nocoops.jsa\");\n+        return \"\" + (\"true\".equals(vmCDS()) && Files.exists(archive));\n+    }\n+\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}