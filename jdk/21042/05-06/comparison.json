{"files":[{"patch":"@@ -323,1 +323,1 @@\n-  bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+  bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -313,1 +313,1 @@\n-  bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+  bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1002,1 +1002,1 @@\n-bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2156,1 +2156,1 @@\n-bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+  bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1758,1 +1758,1 @@\n-bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2215,1 +2215,1 @@\n-bool Matcher::vector_needs_load_shuffle(BasicType elem_bt, int vlen) {\n+bool Matcher::vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen) {\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-  static bool vector_needs_load_shuffle(BasicType elem_bt, int vlen);\n+  static bool vector_rearrange_requires_load_shuffle(BasicType elem_bt, int vlen);\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1757,1 +1757,1 @@\n-  bool need_load_shuffle = Matcher::vector_needs_load_shuffle(shuffle_bt, num_elem);\n+  bool need_load_shuffle = Matcher::vector_rearrange_requires_load_shuffle(shuffle_bt, num_elem);\n@@ -1800,1 +1800,0 @@\n-  const TypeVect* vt = TypeVect::make(elem_bt, num_elem);\n@@ -1937,1 +1936,1 @@\n-  bool need_load_shuffle = Matcher::vector_needs_load_shuffle(shuffle_bt, num_elem);\n+  bool need_load_shuffle = Matcher::vector_rearrange_requires_load_shuffle(shuffle_bt, num_elem);\n@@ -2670,1 +2669,1 @@\n-  if (Matcher::vector_needs_load_shuffle(shuffle_bt, num_elem)) {\n+  if (Matcher::vector_rearrange_requires_load_shuffle(shuffle_bt, num_elem)) {\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1694,3 +1694,4 @@\n-\/\/ shuffle vector into 1 that we can do byte rearrange such that it would provide the same result.\n-\/\/ This can be done in VectorRearrangeNode during code emission but we eagerly expand out this\n-\/\/ because it is often the case that an index vector is reused in many rearrange operations.\n+\/\/ shuffle vector into one that we can do byte rearrange such that it would provide the same\n+\/\/ result. This could have been done in VectorRearrangeNode during code emission but we eagerly\n+\/\/ expand out this because it is often the case that an index vector is reused in many rearrange\n+\/\/ operations. This allows the index preparation to be GVN-ed as well as hoisted out of loops, etc.\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}