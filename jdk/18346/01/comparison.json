{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,3 +108,0 @@\n-  \/\/ We need to do reference discovery while processing evacuated objects.\n-  virtual ReferenceIterationMode reference_iteration_mode() { return DO_DISCOVERED_AND_DISCOVERY; }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,0 @@\n-    DO_DISCOVERED_AND_DISCOVERY, \/\/ Apply closure to discovered field and do discovery\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,6 +111,0 @@\n-  \/\/ Used for a special case in G1 where the closure needs to be applied\n-  \/\/ to the discovered field. Reference discovery is also done if the\n-  \/\/ closure provides a ReferenceProcessor.\n-  template <typename T, class OopClosureType, class Contains>\n-  static void oop_oop_iterate_discovered_and_discovery(oop obj, ReferenceType type, OopClosureType* closure, Contains& contains);\n-\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,8 +93,0 @@\n-template <typename T, class OopClosureType, class Contains>\n-void InstanceRefKlass::oop_oop_iterate_discovered_and_discovery(oop obj, ReferenceType type, OopClosureType* closure, Contains& contains) {\n-  \/\/ Explicitly apply closure to the discovered field.\n-  do_discovered<T>(obj, closure, contains);\n-  \/\/ Then do normal reference processing with discovery.\n-  oop_oop_iterate_discovery<T>(obj, type, closure, contains);\n-}\n-\n@@ -121,4 +113,0 @@\n-    case OopIterateClosure::DO_DISCOVERED_AND_DISCOVERY:\n-      trace_reference_gc<T>(\"do_discovered_and_discovery\", obj);\n-      oop_oop_iterate_discovered_and_discovery<T>(obj, reference_type(), closure, contains);\n-      break;\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.inline.hpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"}]}