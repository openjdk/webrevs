{"files":[{"patch":"@@ -294,1 +294,1 @@\n-  JvmtiAgentList::Iterator it =JvmtiAgentList::java_agents();\n+  JvmtiAgentList::Iterator it = JvmtiAgentList::java_agents();\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-JvmtiAgent** JvmtiAgentList::_tail = nullptr;\n@@ -103,17 +102,15 @@\n-  while (true) {\n-    \/\/ set _tail to address of agent->_next\n-    JvmtiAgent** tail = Atomic::load_acquire(&_tail);\n-    if (Atomic::cmpxchg(&_tail, tail, &agent->_next) != tail) {\n-      \/\/ _tail has been updated by another thread, retry\n-      continue;\n-    }\n-\n-    if (tail == nullptr) {\n-      \/\/ the list was empty, set _head\n-      Atomic::release_store(&_head, agent);\n-    } else {\n-      \/\/ set \"_next\" of the last element to point to agent\n-      Atomic::store(tail, agent); \/\/ *tail = agent;\n-    }\n-    return;\n-  }\n+  \/\/ address of the pointer to add new agent (&_head when the list is empty or &agent->_next of the last agent in the list)\n+  JvmtiAgent** tail_ptr = &_head;\n+  while (true) {\r\n+    JvmtiAgent* next = Atomic::load(tail_ptr);\r\n+    if (next == nullptr) {\r\n+      \/\/ *tail_ptr == nullptr here\n+      if (Atomic::cmpxchg(tail_ptr, (JvmtiAgent*)nullptr, agent) != nullptr) {\r\n+        \/\/ another thread added an agent, reload next from tail_ptr\r\n+        continue;\r\n+      }\r\n+      \/\/ successfully set, exit\r\n+      break;\r\n+    }\r\n+    tail_ptr = &next->_next;\r\n+  }\r\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgentList.cpp","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    Iterator(): _filter(ALL), _next(nullptr) {}\n@@ -59,2 +60,0 @@\n-  \/\/ address of the last JvmtiAgent::_next (nullptr when the list is empty)\n-  static JvmtiAgent** _tail;\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgentList.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}