{"files":[{"patch":"@@ -2578,0 +2578,3 @@\n+                if (LOCSIG(buf) != LOCSIG) {\n+                    throw new ZipException(\"invalid loc header (bad signature)\");\n+                }\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8316141\n+ * @bug 8316141 8321802\n@@ -290,0 +290,10 @@\n+    \/*\n+     * A ZipException is thrown when a LOC header has an unexpected signature\n+     *\/\n+    @Test\n+    public void invalidLOCSignature() throws IOException {\n+        int existingSignature = buffer.getInt(locpos);\n+        buffer.putInt(locpos, existingSignature +1);\n+        assertZipException(\".*bad signature.*\");\n+    }\n+\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/CorruptedZipFilesTest.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}