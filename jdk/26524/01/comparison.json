{"files":[{"patch":"@@ -45,3 +45,4 @@\n- * |+16                | <size_t:user_size>   | User data size |\n- * |+sizeof(uintptr_t) | <tag>                | Tag word       |\n- * |+sizeof(uintptr_t) | <tag2>               | Tag word       |\n+ * |+16                | padding              | For alignment  |\n+ * |+sizeof(void*)     | <size_t:user_size>   | User data size |\n+ * |+sizeof(size_t)    | <tag>                | Tag word       |\n+ * |+sizeof(void*)     | <tag2>               | Tag word       |\n@@ -135,0 +136,4 @@\n+   *\n+   * NB: the size of the GuardHeader must be such that the user-ptr\n+   * is maximally aligned i.e. 16-byte alignment for x86 ABI for\n+   * stack alignment and use of vector (xmm) instructions.\n@@ -138,0 +143,3 @@\n+\n+    void* padding; \/\/ Ensures 16-byte alignment\n+\n@@ -139,2 +147,0 @@\n-    \/\/ Take care in modifying fields here, will effect alignment\n-    \/\/ e.g. x86 ABI 16 byte stack alignment\n@@ -158,0 +164,3 @@\n+  static_assert(sizeof(GuardHeader) % 16 == 0,\n+                \"GuardHeader size must ensure _base_addr is 16-byte aligned\");\n+\n","filename":"src\/hotspot\/share\/memory\/guardedMemory.hpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"}]}