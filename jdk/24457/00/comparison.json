{"files":[{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4119993\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Check that mouse button 3 is reserved for popup invocation not selection.\n+ * @run main\/manual bug4119993\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import javax.swing.BoxLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.JTextArea;\n+import javax.swing.border.BevelBorder;\n+\n+\/*\n+ * This is a sort of negative test. Mouse Button 3 is not supposed to cause selections.\n+ * If it did, then it would not be useable to invoke popup menus.\n+ * So this popup menu test .. does not popup menus.\n+ *\/\n+\n+public class bug4119993 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+<html>\n+        The test window contains a text area, a table, and a list.\n+        <p>\n+        For each component, try to select text\/cells\/rows\/items as appropriate\n+        using the <font size=+2 color=red>RIGHT<\/font> mouse button (Mouse Button 3).\n+        <p>\n+        If the selection changes, then press <em><b>FAIL<\/b><\/em>.\n+        <p>\n+        If the selection does not change, press <em><b>PASS<\/b><\/em><\/html\n+ <\/html>\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .instructions(INSTRUCTIONS)\n+            .columns(60)\n+            .testUI(bug4119993::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4119993\");\n+        JPanel p = new JPanel();\n+        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));\n+        frame.add(p);\n+\n+        String text = \"This is some text that you should try to select using the right mouse button\";\n+        JTextArea area = new JTextArea(text, 5, 40);\n+        JScrollPane scrollpane0 = new JScrollPane(area);\n+        scrollpane0.setBorder(new BevelBorder(BevelBorder.LOWERED));\n+        scrollpane0.setPreferredSize(new Dimension(430, 200));\n+        p.add(scrollpane0);\n+\n+        String[][] data = new String[5][5];\n+        String[] cols = new String[5];\n+        for (int r = 0; r < 5; r ++) {\n+            cols[r] = \"col \" + r;\n+            for (int c = 0; c < 5; c ++) {\n+               data[r][c]  = \"(\" + r + \",\" + c + \")\";\n+            }\n+        }\n+\n+        JTable tableView = new JTable(data, cols);\n+        JScrollPane scrollpane = new JScrollPane(tableView);\n+        scrollpane.setBorder(new BevelBorder(BevelBorder.LOWERED));\n+        scrollpane.setPreferredSize(new Dimension(430, 200));\n+        p.add(scrollpane);\n+\n+        String[] s = {\"1\",\"2\",\"3\",\"4\",\"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\n+        JList listView = new JList(s);\n+        JScrollPane scrollpane2 = new JScrollPane(listView);\n+        scrollpane2.setBorder(new BevelBorder(BevelBorder.LOWERED));\n+        scrollpane2.setPreferredSize(new Dimension(430, 200));\n+        p.add(scrollpane2);\n+\n+       frame.pack();\n+       return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4119993.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4187004\n+   @summary test that title\/label is show on menu for Motif L&F\n+   @key headful\n+*\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class bug4187004 {\n+\n+    static volatile JPopupMenu m;\n+    static volatile Dimension d1, d2;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(bug4187004::createUI);\n+\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            d1 = m.getSize();\n+            SwingUtilities.invokeAndWait(bug4187004::hideMenu);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(bug4187004::updateUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(bug4187004::showMenu);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            d2 = m.getSize();\n+        } finally {\n+            SwingUtilities.invokeAndWait(bug4187004::hideMenu);\n+        }\n+        System.out.println(d1);\n+        System.out.println(d2);\n+        if (d1.width <= d2.width) {\n+            throw new RuntimeException(\"Menu not updated\");\n+        }\n+    }\n+\n+   static void createUI() {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+        m = new JPopupMenu(\"One really long menu title\");\n+        m.add(\"Item 1\");\n+        m.add(\"Item 2\");\n+        m.add(\"Item 3\");\n+        m.add(\"Item 4\");\n+        m.pack();\n+        m.setVisible(true);\n+    }\n+\n+    static void hideMenu() {\n+        m.setVisible(false);\n+    }\n+\n+    static void showMenu() {\n+        m.setVisible(true);\n+    }\n+\n+    static void updateUI() {\n+        m.setLabel(\"short\");\n+        m.pack();\n+    }\n+\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4187004.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4530303\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests JPopupMenu.pack()\n+ * @key headful\n+ * @run main\/manual bug4530303\n+ *\/\n+\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+\n+public class bug4530303 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The test window has a menu bar.\n+        Open the menu \"Menu\" and place the mouse pointer over the first menu item, \"Point here\".\n+        The second menu item, \"Ghost\", should be replaced with another item, \"Fixed!\".\n+        If it the item just disappears and no new item appears in the empty space, the test FAILS.\n+    \"\"\";\n+\n+    static volatile JMenu menu;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .instructions(INSTRUCTIONS)\n+            .columns(60)\n+            .testUI(bug4530303::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4530303\");\n+        menu = new JMenu(\"Menu\");\n+        JMenuItem item = new JMenuItem(\"Point here\");\n+        item.addMouseListener(new MenuBuilder());\n+        menu.add(item);\n+        menu.add(new JMenuItem(\"Ghost\"));\n+\n+        JMenuBar mbar = new JMenuBar();\n+        mbar.add(menu);\n+        frame.setJMenuBar(mbar);\n+        frame.setSize(300, 300);\n+        return frame;\n+    }\n+\n+    static class MenuBuilder extends MouseAdapter {\n+        public void mouseEntered(MouseEvent ev) {\n+            menu.remove(1);\n+            menu.add(new JMenuItem(\"Fixed!\"));\n+\n+            JPopupMenu pm = menu.getPopupMenu();\n+            pm.pack();\n+            pm.paintImmediately(pm.getBounds());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4530303.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}