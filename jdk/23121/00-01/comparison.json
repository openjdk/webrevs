{"files":[{"patch":"@@ -575,0 +575,1 @@\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -617,0 +618,1 @@\n+  ResourceMark rm;\n@@ -631,0 +633,1 @@\n+  ResourceMark rm;\n@@ -634,1 +637,0 @@\n-    os::free((void*)native_access_names);\n@@ -639,0 +641,1 @@\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -643,0 +646,1 @@\n+  ResourceMark rm;\n@@ -645,2 +649,1 @@\n-    const char* native_access_names = get_native_access_flags_as_sorted_string();\n-    check_archived_flag_consistency(_archived_native_access_flags, native_access_names, \"jdk.module.enable.native.access\");\n+    check_archived_flag_consistency(_archived_native_access_flags, get_native_access_flags_as_sorted_string(), \"jdk.module.enable.native.access\");\n@@ -650,1 +653,0 @@\n-    os::free((void*)native_access_names);\n@@ -655,0 +657,1 @@\n+  ResourceMark rm;\n@@ -658,1 +661,0 @@\n-    os::free((void*)addmods_names);\n@@ -667,0 +669,1 @@\n+  ResourceMark rm;\n@@ -674,1 +677,0 @@\n-    os::free((void*)addmods_names);\n@@ -679,1 +681,1 @@\n-  ResourceMark rm;\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -732,1 +734,1 @@\n-  return (st.size() > 0) ? os::strdup(st.as_string()) : nullptr;  \/\/ Example: \"java.base,java.compiler\"\n+  return (st.size() > 0) ? st.as_string() : nullptr;  \/\/ Example: \"java.base,java.compiler\"\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}