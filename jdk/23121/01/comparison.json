{"files":[{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -575,0 +575,1 @@\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -617,0 +618,1 @@\n+  ResourceMark rm;\n@@ -631,0 +633,1 @@\n+  ResourceMark rm;\n@@ -638,0 +641,1 @@\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -642,0 +646,1 @@\n+  ResourceMark rm;\n@@ -652,0 +657,1 @@\n+  ResourceMark rm;\n@@ -663,0 +669,1 @@\n+  ResourceMark rm;\n@@ -665,1 +672,2 @@\n-    check_archived_flag_consistency(_archived_addmods_names, get_addmods_names_as_sorted_string(), \"jdk.module.addmods\");\n+    const char* addmods_names = get_addmods_names_as_sorted_string();\n+    check_archived_flag_consistency(_archived_addmods_names, addmods_names, \"jdk.module.addmods\");\n@@ -673,1 +681,1 @@\n-  ResourceMark rm;\n+  assert(Thread::current()->current_resource_mark() != nullptr, \"Setup by caller\");\n@@ -726,1 +734,1 @@\n-  return (st.size() > 0) ? os::strdup(st.as_string()) : nullptr;  \/\/ Example: \"java.base,java.compiler\"\n+  return (st.size() > 0) ? st.as_string() : nullptr;  \/\/ Example: \"java.base,java.compiler\"\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}