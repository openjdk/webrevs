{"files":[{"patch":"@@ -50,1 +50,1 @@\n-        String VERY_LONG_LINE = \"VERYLONGLINE\".repeat(30);\n+        String VERY_LONG_LINE = \"X\".repeat(257);\n@@ -54,0 +54,4 @@\n+            test(\"\\n\");\n+            test(\"\\nARG1\");\n+            test(\"\\nARG1\\n\");\n+            test(\"ARG1\/n\");\n@@ -60,0 +64,3 @@\n+            test(\"\\nARG1\\n\" + VERY_LONG_LINE + VERY_LONG_LINE + VERY_LONG_LINE + \"\\nARG2\\n\");\n+            test(\"\\nARG1\\n\" + VERY_LONG_LINE + VERY_LONG_LINE + VERY_LONG_LINE);\n+\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/ProcessToolsLastLineTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -99,1 +99,2 @@\n-     * Additionally this method also split data read from buffer into the lines and process each line using linePumps.\n+     * Additionally this method also splits the data read from the buffer into lines,\n+     * and processes each line using linePumps.\n@@ -137,2 +138,4 @@\n-                    \/\/ The remaining after last '\\n' (lastcrlf position) buffer data is written into lineBos.\n-                    \/\/ The end of this line from next buffer is concatenated to this data in the next iteration.\n+                    \/\/ If no crlf was found, or there was additional data after the last crlf was found, then write the leftover data\n+                    \/\/ in lineBos. If there is more data to read it will be concatenated with the current data on the next iteration.\n+                    \/\/ If there is no more data, or no more crlf found, all the remaining data will be processed after the loop, as the\n+                    \/\/ final line.\n@@ -148,2 +151,3 @@\n-            \/\/ Process data remaining after last '\\n' in the last buffer.\n-            \/\/ It is already written in the lineBos buffer but not processed because '\\n' hasn't been met.\n+\n+            \/\/ If there was no terminating crlf the remaining data has been written to lineBos,\n+            \/\/ but this final line of data now needs to be processed by the linePumper.\n","filename":"test\/lib\/jdk\/test\/lib\/process\/StreamPumper.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}