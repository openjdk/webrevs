{"files":[{"patch":"@@ -94,1 +94,1 @@\n-      str(zr, Address(rthread, JavaThread::vm_result_offset()));\n+      str(zr, Address(rthread, JavaThread::vm_result_oop_offset()));\n@@ -97,1 +97,1 @@\n-      str(zr, Address(rthread, JavaThread::vm_result_2_offset()));\n+      str(zr, Address(rthread, JavaThread::vm_result_metadata_offset()));\n@@ -111,1 +111,1 @@\n-    get_vm_result(oop_result1, rthread);\n+    get_vm_result_oop(oop_result1, rthread);\n@@ -114,1 +114,1 @@\n-    get_vm_result_2(metadata_result, rthread);\n+    get_vm_result_metadata(metadata_result, rthread);\n@@ -409,2 +409,2 @@\n-    __ str(zr, Address(rthread, JavaThread::vm_result_offset()));\n-    __ str(zr, Address(rthread, JavaThread::vm_result_2_offset()));\n+    __ str(zr, Address(rthread, JavaThread::vm_result_oop_offset()));\n+    __ str(zr, Address(rthread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -852,1 +852,1 @@\n-    get_vm_result(oop_result, java_thread);\n+    get_vm_result_oop(oop_result, java_thread);\n@@ -1148,3 +1148,3 @@\n-void MacroAssembler::get_vm_result(Register oop_result, Register java_thread) {\n-  ldr(oop_result, Address(java_thread, JavaThread::vm_result_offset()));\n-  str(zr, Address(java_thread, JavaThread::vm_result_offset()));\n+void MacroAssembler::get_vm_result_oop(Register oop_result, Register java_thread) {\n+  ldr(oop_result, Address(java_thread, JavaThread::vm_result_oop_offset()));\n+  str(zr, Address(java_thread, JavaThread::vm_result_oop_offset()));\n@@ -1154,3 +1154,3 @@\n-void MacroAssembler::get_vm_result_2(Register metadata_result, Register java_thread) {\n-  ldr(metadata_result, Address(java_thread, JavaThread::vm_result_2_offset()));\n-  str(zr, Address(java_thread, JavaThread::vm_result_2_offset()));\n+void MacroAssembler::get_vm_result_metadata(Register metadata_result, Register java_thread) {\n+  ldr(metadata_result, Address(java_thread, JavaThread::vm_result_metadata_offset()));\n+  str(zr, Address(java_thread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -826,2 +826,2 @@\n-  void get_vm_result  (Register oop_result, Register thread);\n-  void get_vm_result_2(Register metadata_result, Register thread);\n+  void get_vm_result_oop(Register oop_result, Register thread);\n+  void get_vm_result_metadata(Register metadata_result, Register thread);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2786,1 +2786,1 @@\n-  __ get_vm_result_2(rmethod, rthread);\n+  __ get_vm_result_metadata(rmethod, rthread);\n@@ -2805,1 +2805,1 @@\n-  __ str(zr, Address(rthread, JavaThread::vm_result_offset()));\n+  __ str(zr, Address(rthread, JavaThread::vm_result_oop_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1981,1 +1981,1 @@\n-  __ str(r0, Address(rthread, JavaThread::vm_result_offset()));\n+  __ str(r0, Address(rthread, JavaThread::vm_result_oop_offset()));\n@@ -1985,1 +1985,1 @@\n-  __ get_vm_result(r0, rthread);\n+  __ get_vm_result_oop(r0, rthread);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-  __ get_vm_result_2(flags, rthread);\n+  __ get_vm_result_metadata(flags, rthread);\n@@ -3726,2 +3726,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(r0, rthread);\n+  __ get_vm_result_metadata(r0, rthread);\n@@ -3780,2 +3779,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(r0, rthread);\n+  __ get_vm_result_metadata(r0, rthread);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    get_vm_result(oop_result1, Rtemp);\n+    get_vm_result_oop(oop_result1, Rtemp);\n@@ -77,1 +77,1 @@\n-    get_vm_result_2(metadata_result, Rtemp);\n+    get_vm_result_metadata(metadata_result, Rtemp);\n","filename":"src\/hotspot\/cpu\/arm\/c1_Runtime1_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-    get_vm_result(oop_result, tmp);\n+    get_vm_result_oop(oop_result, tmp);\n@@ -531,1 +531,1 @@\n-void MacroAssembler::get_vm_result(Register oop_result, Register tmp) {\n+void MacroAssembler::get_vm_result_oop(Register oop_result, Register tmp) {\n@@ -533,2 +533,2 @@\n-  ldr(oop_result, Address(Rthread, JavaThread::vm_result_offset()));\n-  str(zero_register(tmp), Address(Rthread, JavaThread::vm_result_offset()));\n+  ldr(oop_result, Address(Rthread, JavaThread::vm_result_oop_offset()));\n+  str(zero_register(tmp), Address(Rthread, JavaThread::vm_result_oop_offset()));\n@@ -538,1 +538,1 @@\n-void MacroAssembler::get_vm_result_2(Register metadata_result, Register tmp) {\n+void MacroAssembler::get_vm_result_metadata(Register metadata_result, Register tmp) {\n@@ -540,2 +540,2 @@\n-  ldr(metadata_result, Address(Rthread, JavaThread::vm_result_2_offset()));\n-  str(zero_register(tmp), Address(Rthread, JavaThread::vm_result_2_offset()));\n+  ldr(metadata_result, Address(Rthread, JavaThread::vm_result_metadata_offset()));\n+  str(zero_register(tmp), Address(Rthread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -260,2 +260,2 @@\n-  void get_vm_result(Register oop_result, Register tmp);\n-  void get_vm_result_2(Register metadata_result, Register tmp);\n+  void get_vm_result_oop(Register oop_result, Register tmp);\n+  void get_vm_result_metadata(Register metadata_result, Register tmp);\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1720,1 +1720,1 @@\n-  __ get_vm_result_2(R1, Rtemp);\n+  __ get_vm_result_metadata(R1, Rtemp);\n@@ -1733,1 +1733,1 @@\n-  __ str(Rzero, Address(Rthread, JavaThread::vm_result_2_offset()));\n+  __ str(Rzero, Address(Rthread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1470,1 +1470,1 @@\n-  __ str(R0_tos, Address(Rthread, JavaThread::vm_result_offset()));\n+  __ str(R0_tos, Address(Rthread, JavaThread::vm_result_oop_offset()));\n@@ -1474,1 +1474,1 @@\n-  __ get_vm_result(Rexception_obj, Rtemp);\n+  __ get_vm_result_oop(Rexception_obj, Rtemp);\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -541,1 +541,1 @@\n-  __ get_vm_result_2(flags, rtmp);\n+  __ get_vm_result_metadata(flags, rtmp);\n@@ -4146,2 +4146,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(Rsuper, Robj);\n+  __ get_vm_result_metadata(Rsuper, Robj);\n@@ -4217,2 +4216,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(Rsuper, Robj);\n+  __ get_vm_result_metadata(Rsuper, Robj);\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        std(R0, in_bytes(JavaThread::vm_result_offset()), R16_thread);\n+        std(R0, in_bytes(JavaThread::vm_result_oop_offset()), R16_thread);\n@@ -88,1 +88,1 @@\n-        std(R0, in_bytes(JavaThread::vm_result_2_offset()), R16_thread);\n+        std(R0, in_bytes(JavaThread::vm_result_metadata_offset()), R16_thread);\n@@ -115,1 +115,1 @@\n-    get_vm_result(oop_result1);\n+    get_vm_result_oop(oop_result1);\n@@ -118,1 +118,1 @@\n-    get_vm_result_2(metadata_result);\n+    get_vm_result_metadata(metadata_result);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_Runtime1_ppc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1340,1 +1340,1 @@\n-    get_vm_result(oop_result);\n+    get_vm_result_oop(oop_result);\n@@ -3428,1 +3428,1 @@\n-void MacroAssembler::get_vm_result(Register oop_result) {\n+void MacroAssembler::get_vm_result_oop(Register oop_result) {\n@@ -3431,1 +3431,1 @@\n-  \/\/   R16_thread->in_bytes(JavaThread::vm_result_offset())\n+  \/\/   R16_thread->in_bytes(JavaThread::vm_result_oop_offset())\n@@ -3435,1 +3435,1 @@\n-  \/\/   R16_thread->in_bytes(JavaThread::vm_result_offset())\n+  \/\/   R16_thread->in_bytes(JavaThread::vm_result_oop_offset())\n@@ -3437,1 +3437,1 @@\n-  ld(oop_result, in_bytes(JavaThread::vm_result_offset()), R16_thread);\n+  ld(oop_result, in_bytes(JavaThread::vm_result_oop_offset()), R16_thread);\n@@ -3439,1 +3439,1 @@\n-  std(R0, in_bytes(JavaThread::vm_result_offset()), R16_thread);\n+  std(R0, in_bytes(JavaThread::vm_result_oop_offset()), R16_thread);\n@@ -3444,1 +3444,1 @@\n-void MacroAssembler::get_vm_result_2(Register metadata_result) {\n+void MacroAssembler::get_vm_result_metadata(Register metadata_result) {\n@@ -3447,1 +3447,1 @@\n-  \/\/   R16_thread->in_bytes(JavaThread::vm_result_2_offset())\n+  \/\/   R16_thread->in_bytes(JavaThread::vm_result_metadata_offset())\n@@ -3451,1 +3451,1 @@\n-  \/\/   R16_thread->in_bytes(JavaThread::vm_result_2_offset())\n+  \/\/   R16_thread->in_bytes(JavaThread::vm_result_metadata_offset())\n@@ -3453,1 +3453,1 @@\n-  ld(metadata_result, in_bytes(JavaThread::vm_result_2_offset()), R16_thread);\n+  ld(metadata_result, in_bytes(JavaThread::vm_result_metadata_offset()), R16_thread);\n@@ -3455,1 +3455,1 @@\n-  std(R0, in_bytes(JavaThread::vm_result_2_offset()), R16_thread);\n+  std(R0, in_bytes(JavaThread::vm_result_metadata_offset()), R16_thread);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -748,2 +748,2 @@\n-  void get_vm_result  (Register oop_result);\n-  void get_vm_result_2(Register metadata_result);\n+  void get_vm_result_oop(Register oop_result);\n+  void get_vm_result_metadata(Register metadata_result);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3407,1 +3407,1 @@\n-  __ get_vm_result_2(R19_method);\n+  __ get_vm_result_metadata(R19_method);\n@@ -3421,1 +3421,1 @@\n-  __ std(R11_scratch1, in_bytes(JavaThread::vm_result_offset()), R16_thread);\n+  __ std(R11_scratch1, in_bytes(JavaThread::vm_result_oop_offset()), R16_thread);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2163,1 +2163,1 @@\n-    __ std(Rexception, in_bytes(JavaThread::vm_result_offset()), R16_thread);\n+    __ std(Rexception, in_bytes(JavaThread::vm_result_oop_offset()), R16_thread);\n@@ -2168,1 +2168,1 @@\n-    __ get_vm_result(Rexception);\n+    __ get_vm_result_oop(Rexception);\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -389,1 +389,1 @@\n-  __ get_vm_result_2(flags);\n+  __ get_vm_result_metadata(flags);\n@@ -3967,1 +3967,1 @@\n-  __ get_vm_result_2(RspecifiedKlass);\n+  __ get_vm_result_metadata(RspecifiedKlass);\n@@ -4029,1 +4029,1 @@\n-  __ get_vm_result_2(RspecifiedKlass);\n+  __ get_vm_result_metadata(RspecifiedKlass);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-      sd(zr, Address(xthread, JavaThread::vm_result_offset()));\n+      sd(zr, Address(xthread, JavaThread::vm_result_oop_offset()));\n@@ -95,1 +95,1 @@\n-      sd(zr, Address(xthread, JavaThread::vm_result_2_offset()));\n+      sd(zr, Address(xthread, JavaThread::vm_result_metadata_offset()));\n@@ -109,1 +109,1 @@\n-    get_vm_result(oop_result, xthread);\n+    get_vm_result_oop(oop_result, xthread);\n@@ -112,1 +112,1 @@\n-    get_vm_result_2(metadata_result, xthread);\n+    get_vm_result_metadata(metadata_result, xthread);\n@@ -430,2 +430,2 @@\n-      __ sd(zr, Address(xthread, JavaThread::vm_result_offset()));\n-      __ sd(zr, Address(xthread, JavaThread::vm_result_2_offset()));\n+      __ sd(zr, Address(xthread, JavaThread::vm_result_oop_offset()));\n+      __ sd(zr, Address(xthread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-    get_vm_result(oop_result, java_thread);\n+    get_vm_result_oop(oop_result, java_thread);\n@@ -505,3 +505,3 @@\n-void MacroAssembler::get_vm_result(Register oop_result, Register java_thread) {\n-  ld(oop_result, Address(java_thread, JavaThread::vm_result_offset()));\n-  sd(zr, Address(java_thread, JavaThread::vm_result_offset()));\n+void MacroAssembler::get_vm_result_oop(Register oop_result, Register java_thread) {\n+  ld(oop_result, Address(java_thread, JavaThread::vm_result_oop_offset()));\n+  sd(zr, Address(java_thread, JavaThread::vm_result_oop_offset()));\n@@ -511,3 +511,3 @@\n-void MacroAssembler::get_vm_result_2(Register metadata_result, Register java_thread) {\n-  ld(metadata_result, Address(java_thread, JavaThread::vm_result_2_offset()));\n-  sd(zr, Address(java_thread, JavaThread::vm_result_2_offset()));\n+void MacroAssembler::get_vm_result_metadata(Register metadata_result, Register java_thread) {\n+  ld(metadata_result, Address(java_thread, JavaThread::vm_result_metadata_offset()));\n+  sd(zr, Address(java_thread, JavaThread::vm_result_metadata_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -125,2 +125,2 @@\n-  void get_vm_result(Register oop_result, Register java_thread);\n-  void get_vm_result_2(Register metadata_result, Register java_thread);\n+  void get_vm_result_oop(Register oop_result, Register java_thread);\n+  void get_vm_result_metadata(Register metadata_result, Register java_thread);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2649,1 +2649,1 @@\n-  __ get_vm_result_2(xmethod, xthread);\n+  __ get_vm_result_metadata(xmethod, xthread);\n@@ -2667,1 +2667,1 @@\n-  __ sd(zr, Address(xthread, JavaThread::vm_result_offset()));\n+  __ sd(zr, Address(xthread, JavaThread::vm_result_oop_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1728,1 +1728,1 @@\n-  __ sd(x10, Address(xthread, JavaThread::vm_result_offset()));\n+  __ sd(x10, Address(xthread, JavaThread::vm_result_oop_offset()));\n@@ -1732,1 +1732,1 @@\n-  __ get_vm_result(x10, xthread);\n+  __ get_vm_result_oop(x10, xthread);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-  __ get_vm_result_2(flags, xthread);\n+  __ get_vm_result_metadata(flags, xthread);\n@@ -3660,2 +3660,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(x10, xthread);\n+  __ get_vm_result_metadata(x10, xthread);\n@@ -3715,2 +3714,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(x10, xthread);\n+  __ get_vm_result_metadata(x10, xthread);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-      clear_mem(Address(Z_thread, JavaThread::vm_result_offset()), sizeof(jlong));\n+      clear_mem(Address(Z_thread, JavaThread::vm_result_oop_offset()), sizeof(jlong));\n@@ -92,1 +92,1 @@\n-      clear_mem(Address(Z_thread, JavaThread::vm_result_2_offset()), sizeof(jlong));\n+      clear_mem(Address(Z_thread, JavaThread::vm_result_metadata_offset()), sizeof(jlong));\n@@ -112,1 +112,1 @@\n-    get_vm_result(oop_result1);\n+    get_vm_result_oop(oop_result1);\n@@ -115,1 +115,1 @@\n-    get_vm_result_2(metadata_result);\n+    get_vm_result_metadata(metadata_result);\n@@ -889,2 +889,2 @@\n-      __ clear_mem(Address(Z_thread, JavaThread::vm_result_offset()),   sizeof(oop));\n-      __ clear_mem(Address(Z_thread, JavaThread::vm_result_2_offset()), sizeof(Metadata*));\n+      __ clear_mem(Address(Z_thread, JavaThread::vm_result_oop_offset()),   sizeof(oop));\n+      __ clear_mem(Address(Z_thread, JavaThread::vm_result_metadata_offset()), sizeof(Metadata*));\n","filename":"src\/hotspot\/cpu\/s390\/c1_Runtime1_s390.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2307,1 +2307,1 @@\n-    get_vm_result(oop_result);\n+    get_vm_result_oop(oop_result);\n@@ -4070,3 +4070,3 @@\n-void MacroAssembler::get_vm_result(Register oop_result) {\n-  z_lg(oop_result, Address(Z_thread, JavaThread::vm_result_offset()));\n-  clear_mem(Address(Z_thread, JavaThread::vm_result_offset()), sizeof(void*));\n+void MacroAssembler::get_vm_result_oop(Register oop_result) {\n+  z_lg(oop_result, Address(Z_thread, JavaThread::vm_result_oop_offset()));\n+  clear_mem(Address(Z_thread, JavaThread::vm_result_oop_offset()), sizeof(void*));\n@@ -4077,3 +4077,3 @@\n-void MacroAssembler::get_vm_result_2(Register result) {\n-  z_lg(result, Address(Z_thread, JavaThread::vm_result_2_offset()));\n-  clear_mem(Address(Z_thread, JavaThread::vm_result_2_offset()), sizeof(void*));\n+void MacroAssembler::get_vm_result_metadata(Register result) {\n+  z_lg(result, Address(Z_thread, JavaThread::vm_result_metadata_offset()));\n+  clear_mem(Address(Z_thread, JavaThread::vm_result_metadata_offset()), sizeof(void*));\n@@ -4085,1 +4085,1 @@\n-  z_stg(oop_result, Address(Z_thread, JavaThread::vm_result_offset()));\n+  z_stg(oop_result, Address(Z_thread, JavaThread::vm_result_oop_offset()));\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -819,2 +819,2 @@\n-  void get_vm_result  (Register oop_result);\n-  void get_vm_result_2(Register result);\n+  void get_vm_result_oop  (Register oop_result);\n+  void get_vm_result_metadata(Register result);\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3046,1 +3046,1 @@\n-  __ get_vm_result_2(Z_method);\n+  __ get_vm_result_metadata(Z_method);\n@@ -3060,1 +3060,1 @@\n-  __ clear_mem(Address(Z_thread, JavaThread::vm_result_offset()), sizeof(jlong));\n+  __ clear_mem(Address(Z_thread, JavaThread::vm_result_oop_offset()), sizeof(jlong));\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2231,1 +2231,1 @@\n-  __ get_vm_result(Z_ARG1);     \/\/ Restore exception.\n+  __ get_vm_result_oop(Z_ARG1);     \/\/ Restore exception.\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-  __ get_vm_result_2(flags);\n+  __ get_vm_result_metadata(flags);\n@@ -4066,1 +4066,1 @@\n-  __ get_vm_result_2(Z_tos);\n+  __ get_vm_result_metadata(Z_tos);\n@@ -4138,1 +4138,1 @@\n-  __ get_vm_result_2(Z_tos);\n+  __ get_vm_result_metadata(Z_tos);\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-      movptr(Address(thread, JavaThread::vm_result_offset()), NULL_WORD);\n+      movptr(Address(thread, JavaThread::vm_result_oop_offset()), NULL_WORD);\n@@ -109,1 +109,1 @@\n-      movptr(Address(thread, JavaThread::vm_result_2_offset()), NULL_WORD);\n+      movptr(Address(thread, JavaThread::vm_result_metadata_offset()), NULL_WORD);\n@@ -123,1 +123,1 @@\n-    get_vm_result(oop_result1);\n+    get_vm_result_oop(oop_result1);\n@@ -126,1 +126,1 @@\n-    get_vm_result_2(metadata_result);\n+    get_vm_result_metadata(metadata_result);\n@@ -535,2 +535,2 @@\n-    __ movptr(Address(thread, JavaThread::vm_result_offset()),   NULL_WORD);\n-    __ movptr(Address(thread, JavaThread::vm_result_2_offset()), NULL_WORD);\n+    __ movptr(Address(thread, JavaThread::vm_result_oop_offset()),   NULL_WORD);\n+    __ movptr(Address(thread, JavaThread::vm_result_metadata_offset()), NULL_WORD);\n","filename":"src\/hotspot\/cpu\/x86\/c1_Runtime1_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1616,1 +1616,1 @@\n-    get_vm_result(oop_result);\n+    get_vm_result_oop(oop_result);\n@@ -1706,3 +1706,3 @@\n-void MacroAssembler::get_vm_result(Register oop_result) {\n-  movptr(oop_result, Address(r15_thread, JavaThread::vm_result_offset()));\n-  movptr(Address(r15_thread, JavaThread::vm_result_offset()), NULL_WORD);\n+void MacroAssembler::get_vm_result_oop(Register oop_result) {\n+  movptr(oop_result, Address(r15_thread, JavaThread::vm_result_oop_offset()));\n+  movptr(Address(r15_thread, JavaThread::vm_result_oop_offset()), NULL_WORD);\n@@ -1712,3 +1712,3 @@\n-void MacroAssembler::get_vm_result_2(Register metadata_result) {\n-  movptr(metadata_result, Address(r15_thread, JavaThread::vm_result_2_offset()));\n-  movptr(Address(r15_thread, JavaThread::vm_result_2_offset()), NULL_WORD);\n+void MacroAssembler::get_vm_result_metadata(Register metadata_result) {\n+  movptr(metadata_result, Address(r15_thread, JavaThread::vm_result_metadata_offset()));\n+  movptr(Address(r15_thread, JavaThread::vm_result_metadata_offset()), NULL_WORD);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -287,2 +287,2 @@\n-  void get_vm_result  (Register oop_result);\n-  void get_vm_result_2(Register metadata_result);\n+  void get_vm_result_oop(Register oop_result);\n+  void get_vm_result_metadata(Register metadata_result);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3236,1 +3236,1 @@\n-  __ get_vm_result_2(rbx);\n+  __ get_vm_result_metadata(rbx);\n@@ -3255,1 +3255,1 @@\n-  __ movptr(Address(r15_thread, JavaThread::vm_result_offset()), NULL_WORD);\n+  __ movptr(Address(r15_thread, JavaThread::vm_result_oop_offset()), NULL_WORD);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1546,1 +1546,1 @@\n-  __ movptr(Address(thread, JavaThread::vm_result_offset()), rax);\n+  __ movptr(Address(thread, JavaThread::vm_result_oop_offset()), rax);\n@@ -1550,1 +1550,1 @@\n-  __ get_vm_result(rax);\n+  __ get_vm_result_oop(rax);\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-  __ get_vm_result_2(flags);\n+  __ get_vm_result_metadata(flags);\n@@ -3683,2 +3683,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(rax);\n+  __ get_vm_result_metadata(rax);\n@@ -3740,2 +3739,1 @@\n-  \/\/ vm_result_2 has metadata result\n-  __ get_vm_result_2(rax);\n+  __ get_vm_result_metadata(rax);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -373,1 +373,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -389,1 +389,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -412,1 +412,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -431,1 +431,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -645,1 +645,1 @@\n-  current->set_vm_result(exception());\n+  current->set_vm_result_oop(exception());\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-  current->set_vm_result(java_class);\n+  current->set_vm_result_oop(java_class);\n@@ -196,1 +196,1 @@\n-  current->set_vm_result(result);\n+  current->set_vm_result_oop(result);\n@@ -203,1 +203,1 @@\n-    current->set_vm_result_2((Metadata*)flags);\n+    current->set_vm_result_metadata((Metadata*)flags);\n@@ -223,1 +223,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -229,1 +229,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -236,1 +236,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -264,1 +264,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -286,1 +286,1 @@\n-  current->set_vm_result_2(klass);\n+  current->set_vm_result_metadata(klass);\n@@ -386,1 +386,1 @@\n-  current->set_vm_result(exception());\n+  current->set_vm_result_oop(exception());\n@@ -405,1 +405,1 @@\n-  current->set_vm_result(exception());\n+  current->set_vm_result_oop(exception());\n@@ -464,1 +464,1 @@\n-    current->set_vm_result(h_exception());\n+    current->set_vm_result_oop(h_exception());\n@@ -479,1 +479,1 @@\n-    current->set_vm_result(exception);\n+    current->set_vm_result_oop(exception);\n@@ -580,1 +580,1 @@\n-  current->set_vm_result(h_exception());\n+  current->set_vm_result_oop(h_exception());\n@@ -768,1 +768,1 @@\n-  Handle exception(current, current->vm_result());\n+  Handle exception(current, current->vm_result_oop());\n@@ -770,1 +770,1 @@\n-  current->set_vm_result(nullptr); \/\/ clear vm result before continuing (may cause memory leaks and assert failures)\n+  current->set_vm_result_oop(nullptr); \/\/ clear vm result before continuing (may cause memory leaks and assert failures)\n@@ -772,1 +772,1 @@\n-  current->set_vm_result(exception());\n+  current->set_vm_result_oop(exception());\n@@ -1477,1 +1477,1 @@\n-\/\/ and return it as a vm_result so that it can be reloaded in the list of invokestatic parameters.\n+\/\/ and return it as a vm_result_oop so that it can be reloaded in the list of invokestatic parameters.\n@@ -1498,1 +1498,1 @@\n-    current->set_vm_result(member_name_oop);\n+    current->set_vm_result_oop(member_name_oop);\n@@ -1500,1 +1500,1 @@\n-    current->set_vm_result(nullptr);\n+    current->set_vm_result_oop(nullptr);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2036,2 +2036,2 @@\n-        SET_STACK_OBJECT(THREAD->vm_result(), 0);\n-        THREAD->set_vm_result(nullptr);\n+        SET_STACK_OBJECT(THREAD->vm_result_oop(), 0);\n+        THREAD->set_vm_result_oop(nullptr);\n@@ -2048,2 +2048,2 @@\n-        SET_STACK_OBJECT(THREAD->vm_result(), -1);\n-        THREAD->set_vm_result(nullptr);\n+        SET_STACK_OBJECT(THREAD->vm_result_oop(), -1);\n+        THREAD->set_vm_result_oop(nullptr);\n@@ -2065,2 +2065,2 @@\n-        SET_STACK_OBJECT(THREAD->vm_result(), -dims);\n-        THREAD->set_vm_result(nullptr);\n+        SET_STACK_OBJECT(THREAD->vm_result_oop(), -dims);\n+        THREAD->set_vm_result_oop(nullptr);\n@@ -2147,2 +2147,2 @@\n-                SET_STACK_OBJECT(THREAD->vm_result(), 0);\n-                THREAD->set_vm_result(nullptr);\n+                SET_STACK_OBJECT(THREAD->vm_result_oop(), 0);\n+                THREAD->set_vm_result_oop(nullptr);\n@@ -2164,2 +2164,2 @@\n-            SET_STACK_OBJECT(THREAD->vm_result(), 0);\n-            THREAD->set_vm_result(nullptr);\n+            SET_STACK_OBJECT(THREAD->vm_result_oop(), 0);\n+            THREAD->set_vm_result_oop(nullptr);\n@@ -2172,1 +2172,1 @@\n-              oop result = THREAD->vm_result();\n+              oop result = THREAD->vm_result_oop();\n@@ -2214,1 +2214,1 @@\n-              oop result = THREAD->vm_result();\n+              oop result = THREAD->vm_result_oop();\n@@ -2253,1 +2253,1 @@\n-          result = THREAD->vm_result();\n+          result = THREAD->vm_result_oop();\n@@ -2521,2 +2521,2 @@\n-        SET_STACK_OBJECT(THREAD->vm_result(), -1);\n-        THREAD->set_vm_result(nullptr);\n+        SET_STACK_OBJECT(THREAD->vm_result_oop(), -1);\n+        THREAD->set_vm_result_oop(nullptr);\n@@ -2962,2 +2962,2 @@\n-    except_oop = Handle(THREAD, THREAD->vm_result());\n-    THREAD->set_vm_result(nullptr);\n+    except_oop = Handle(THREAD, THREAD->vm_result_oop());\n+    THREAD->set_vm_result_oop(nullptr);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -280,1 +280,1 @@\n-  f->do_oop((oop*) &_vm_result);\n+  f->do_oop((oop*) &_vm_result_oop);\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/rootResolver.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-\/\/   2. null is written to JavaThread::_vm_result\n+\/\/   2. null is written to JavaThread::_vm_result_oop\n@@ -110,1 +110,1 @@\n-        THREAD->set_vm_result(nullptr);\n+        THREAD->set_vm_result_oop(nullptr);\n@@ -130,1 +130,1 @@\n-      current->set_vm_result(nullptr);\n+      current->set_vm_result_oop(nullptr);\n@@ -135,1 +135,1 @@\n-    current->set_vm_result(obj);\n+    current->set_vm_result_oop(obj);\n@@ -169,1 +169,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -180,1 +180,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -186,1 +186,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -204,1 +204,1 @@\n-    current->set_vm_result(nullptr);\n+    current->set_vm_result_oop(nullptr);\n@@ -209,1 +209,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -536,1 +536,1 @@\n-    current->set_vm_result(result.get_oop());\n+    current->set_vm_result_oop(result.get_oop());\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  nonstatic_field(JavaThread,                  _vm_result,                                    oop)                                   \\\n+  nonstatic_field(JavaThread,                  _vm_result_oop,                                oop)                                   \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-    Node* adr = basic_plus_adr(top(), thread, in_bytes(JavaThread::vm_result_offset()));\n+    Node* adr = basic_plus_adr(top(), thread, in_bytes(JavaThread::vm_result_oop_offset()));\n","filename":"src\/hotspot\/share\/opto\/generateOptoStub.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-    current->set_vm_result(result);\n+    current->set_vm_result_oop(result);\n@@ -391,1 +391,1 @@\n-  current->set_vm_result(result);\n+  current->set_vm_result_oop(result);\n@@ -419,1 +419,1 @@\n-  current->set_vm_result(result);\n+  current->set_vm_result_oop(result);\n@@ -426,1 +426,1 @@\n-  oop result = current->vm_result();\n+  oop result = current->vm_result_oop();\n@@ -463,1 +463,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -480,1 +480,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -498,1 +498,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -517,1 +517,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -535,1 +535,1 @@\n-  current->set_vm_result(obj);\n+  current->set_vm_result_oop(obj);\n@@ -1870,1 +1870,1 @@\n-  thread->set_vm_result(exception);\n+  thread->set_vm_result_oop(exception);\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-        thread->set_vm_result(result->get_oop());\n+        thread->set_vm_result_oop(result->get_oop());\n@@ -441,2 +441,2 @@\n-    result->set_oop(thread->vm_result());\n-    thread->set_vm_result(nullptr);\n+    result->set_oop(thread->vm_result_oop());\n+    thread->set_vm_result_oop(nullptr);\n","filename":"src\/hotspot\/share\/runtime\/javaCalls.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -426,2 +426,2 @@\n-  _vm_result(nullptr),\n-  _vm_result_2(nullptr),\n+  _vm_result_oop(nullptr),\n+  _vm_result_metadata(nullptr),\n@@ -1415,1 +1415,1 @@\n-  f->do_oop((oop*) &_vm_result);\n+  f->do_oop((oop*) &_vm_result_oop);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -148,2 +148,2 @@\n-  oop           _vm_result;    \/\/ oop result is GC-preserved\n-  Metadata*     _vm_result_2;  \/\/ non-oop result\n+  oop           _vm_result_oop;       \/\/ oop result is GC-preserved\n+  Metadata*     _vm_result_metadata;  \/\/ non-oop result\n@@ -787,2 +787,2 @@\n-  oop  vm_result() const                         { return _vm_result; }\n-  void set_vm_result  (oop x)                    { _vm_result   = x; }\n+  oop  vm_result_oop() const                     { return _vm_result_oop; }\n+  void set_vm_result_oop(oop x)                  { _vm_result_oop   = x; }\n@@ -790,1 +790,1 @@\n-  void set_vm_result_2  (Metadata* x)            { _vm_result_2   = x; }\n+  void set_vm_result_metadata(Metadata* x)       { _vm_result_metadata = x; }\n@@ -856,2 +856,2 @@\n-  static ByteSize vm_result_offset()             { return byte_offset_of(JavaThread, _vm_result); }\n-  static ByteSize vm_result_2_offset()           { return byte_offset_of(JavaThread, _vm_result_2); }\n+  static ByteSize vm_result_oop_offset()         { return byte_offset_of(JavaThread, _vm_result_oop); }\n+  static ByteSize vm_result_metadata_offset()    { return byte_offset_of(JavaThread, _vm_result_metadata); }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1442,1 +1442,1 @@\n-    current->set_vm_result_2(callee_method());\n+    current->set_vm_result_metadata(callee_method());\n@@ -1473,1 +1473,1 @@\n-    current->set_vm_result_2(callee);\n+    current->set_vm_result_metadata(callee);\n@@ -1495,1 +1495,1 @@\n-    current->set_vm_result_2(callee_method());\n+    current->set_vm_result_metadata(callee_method());\n@@ -1553,1 +1553,1 @@\n-    current->set_vm_result_2(callee_method());\n+    current->set_vm_result_metadata(callee_method());\n@@ -1564,1 +1564,1 @@\n-    current->set_vm_result_2(callee_method());\n+    current->set_vm_result_metadata(callee_method());\n@@ -1577,1 +1577,1 @@\n-    current->set_vm_result_2(callee_method());\n+    current->set_vm_result_metadata(callee_method());\n@@ -3171,1 +3171,1 @@\n-  oop new_obj = current->vm_result();\n+  oop new_obj = current->vm_result_oop();\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -607,1 +607,1 @@\n-  nonstatic_field(JavaThread,                  _scopedValueCache,                              OopHandle)                             \\\n+  nonstatic_field(JavaThread,                  _scopedValueCache,                              OopHandle)                            \\\n@@ -609,2 +609,0 @@\n-  nonstatic_field(JavaThread,                  _vm_result,                                    oop)                                   \\\n-  nonstatic_field(JavaThread,                  _vm_result_2,                                  Metadata*)                             \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}