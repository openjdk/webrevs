{"files":[{"patch":"@@ -26,0 +26,4 @@\n+ *\n+ * If the VM does not have continuations, then no VTs can ever be scheduled\n+ * @requires vm.continuations\n+ *\n@@ -41,0 +45,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -82,1 +87,2 @@\n-        var quiescent = new Object();\n+        var quiescentLatch = new CountDownLatch(1);\n+\n@@ -97,6 +103,5 @@\n-                synchronized (quiescent) {\n-                    try {\n-                        quiescent.wait();\n-                    } catch (Throwable ex) {\n-                        throw new AssertionError(ex);\n-                    }\n+                \/\/ wait for ForkJoinPool to contract\n+                try {\n+                    quiescentLatch.await();\n+                } catch (Throwable ex) {\n+                    throw new AssertionError(ex);\n@@ -127,4 +132,1 @@\n-\n-        synchronized (quiescent) {\n-            quiescent.notify();\n-        }\n+        quiescentLatch.countDown(); \/\/ notify the thread that accesses the MemorySegment\n@@ -133,10 +135,0 @@\n-\n-        executor.shutdown();\n-        if (!executor.awaitTermination(5, TimeUnit.MINUTES)) {\n-            \/\/ The VT never got scheduled or the VT was \"quiescent.notify()\":ed\n-            \/\/ by the main thread before the VT \"quiescent.wait()\":ed.\n-            \/\/ This is a corner case for rare configurations\n-            System.out.println(duration(begin) + \"ABORTED\");\n-            System.exit(0);\n-        }\n-\n@@ -145,0 +137,1 @@\n+\n","filename":"test\/jdk\/java\/foreign\/TestBufferStackStress2.java","additions":14,"deletions":21,"binary":false,"changes":35,"status":"modified"}]}