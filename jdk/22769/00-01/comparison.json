{"files":[{"patch":"@@ -85,1 +85,1 @@\n-  LintCategory.forOption({0})\n+  LintCategory.get({0}).get()\n","filename":"make\/langtools\/tools\/propertiesparser\/resources\/templates.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -366,10 +366,0 @@\n-        \/**\n-         * Get the {@link LintCategory} having the given command line option, if any.\n-         *\n-         * @param option lint category option string\n-         * @return corresponding {@link LintCategory}, or null if none\n-         *\/\n-        public static LintCategory get(String option) {\n-            return map.get(option);\n-        }\n-\n@@ -380,2 +370,1 @@\n-         * @return corresponding {@link LintCategory}\n-         * @throws IllegalArgumentException if no such lint category exists\n+         * @return corresponding {@link LintCategory}, or empty if none exists\n@@ -383,3 +372,2 @@\n-        public static LintCategory forOption(String option) {\n-            return Optional.ofNullable(get(option))\n-              .orElseThrow(() -> new IllegalArgumentException(option));\n+        public static Optional<LintCategory> get(String option) {\n+            return Optional.ofNullable(map.get(option));\n@@ -463,3 +451,2 @@\n-                LintCategory lc = LintCategory.get((String) (value.value));\n-                if (lc != null)\n-                    suppress(lc);\n+                LintCategory.get((String)value.value)\n+                  .ifPresent(this::suppress);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":5,"deletions":18,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8346294\n- * @summary Verify LintWarnings.DanglingDocComment has a non-null associated LintCategory\n- * @modules\n- *      jdk.compiler\/com.sun.tools.javac.resources\n- *      jdk.compiler\/com.sun.tools.javac.util\n- * @run main LintWarningCategoryTest\n- *\/\n-\n-import com.sun.tools.javac.resources.CompilerProperties.LintWarnings;\n-\n-public class LintWarningCategoryTest {\n-\n-    public static void main(String... args) throws Exception {\n-        if (LintWarnings.DanglingDocComment.getLintCategory() == null)\n-            throw new AssertionError(\"Missing category\");\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/lint\/LintWarningCategoryTest.java","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"}]}