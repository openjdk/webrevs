{"files":[{"patch":"@@ -205,2 +205,1 @@\n-template <typename DerivedPointerClosureType>\n-class EncodeGCModeConcurrentFrameClosure {\n+class TransformStackChunkClosure {\n@@ -208,1 +207,0 @@\n-  DerivedPointerClosureType* _cl;\n@@ -211,3 +209,2 @@\n-  EncodeGCModeConcurrentFrameClosure(stackChunkOop chunk, DerivedPointerClosureType* cl)\n-    : _chunk(chunk),\n-      _cl(cl) {\n+  TransformStackChunkClosure(stackChunkOop chunk)\n+    : _chunk(chunk) {\n@@ -218,1 +215,2 @@\n-    f.iterate_derived_pointers(_cl, map);\n+    DerivedPointersSupport::RelativizeClosure derived_cl;\n+    f.iterate_derived_pointers(&derived_cl, map);\n@@ -298,2 +296,1 @@\n-  DerivedPointersSupport::RelativizeClosure derived_cl;\n-  EncodeGCModeConcurrentFrameClosure<decltype(derived_cl)> frame_cl(this, &derived_cl);\n+  TransformStackChunkClosure frame_cl(this);\n@@ -305,20 +302,0 @@\n-class TransformStackChunkClosure {\n-  stackChunkOop _chunk;\n-\n-public:\n-  TransformStackChunkClosure(stackChunkOop chunk) : _chunk(chunk) { }\n-\n-  template <ChunkFrames frame_kind, typename RegisterMapT>\n-  bool do_frame(const StackChunkFrameStream<frame_kind>& f, const RegisterMapT* map) {\n-    DerivedPointersSupport::RelativizeClosure derived_cl;\n-    f.iterate_derived_pointers(&derived_cl, map);\n-\n-    BarrierSetStackChunk* bs_chunk = BarrierSet::barrier_set()->barrier_set_stack_chunk();\n-    frame fr = f.to_frame();\n-    FrameOopIterator<RegisterMapT> iterator(fr, map);\n-    bs_chunk->encode_gc_mode(_chunk, &iterator);\n-\n-    return true;\n-  }\n-};\n-\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.cpp","additions":6,"deletions":29,"binary":false,"changes":35,"status":"modified"}]}