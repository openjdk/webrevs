{"files":[{"patch":"@@ -36,9 +36,0 @@\n-\n-     \/**\n-      * Returns true if loading a native library only if\n-      * it's present on the file system.\n-      *\/\n-      static boolean loadLibraryOnlyIfPresent() {\n-          return false;\n-      }\n-\n@@ -46,7 +37,12 @@\n-     * Returns an alternate path name for the given file\n-     * such that if the original pathname did not exist, then the\n-     * file may be located at the alternate location.\n-     * For AIX, this replaces the final .so suffix with .a\n-     * If the path name has a member, we place the member name after\n-     * .a.\n-     *\/\n+     * Returns true if loading a native library only if\n+     * it's present on the file system.\n+    *\/\n+    static boolean loadLibraryOnlyIfPresent() {\n+        return false;\n+    }\n+    \/**\n+    * Returns an alternate path name for the given file\n+    * such that if the original pathname did not exist, then the\n+    * file may be located at the alternate location.\n+    * For most platforms, this behavior is not supported and returns null.\n+    *\/\n@@ -54,6 +50,1 @@\n-        String name = lib.toString();\n-        int index = name.lastIndexOf('.');\n-        if (index < 0) {\n-            return null;\n-        }\n-        return new File(name.substring(0, index) + \".a\");\n+        return null;\n@@ -61,1 +52,1 @@\n-\n+   \n@@ -66,1 +57,1 @@\n-     *\/\n+    *\/\n","filename":"src\/java.base\/aix\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":15,"deletions":24,"binary":false,"changes":39,"status":"modified"}]}