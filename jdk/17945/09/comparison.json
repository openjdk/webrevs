{"files":[{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+package jdk.internal.loader;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+\n+class ClassLoaderHelper {\n+\n+    private ClassLoaderHelper() {}\n+\n+    \/**\n+    * Shared objects may be loaded from .a archive object on AIX and .so may not exist.\n+    * This method returns false so that loading of shared library continues if libname.so is not present.\n+    *\/\n+    static boolean loadLibraryOnlyIfPresent() {\n+        return false;\n+    }\n+    \/**\n+    * AIX implementation of JVM_LoadLibrary handles the alternate path name mapping.\n+    * If loading of the given library name with \".so\" suffix fails, it will attempt to load the library of\n+    * the same name with \".a\" suffix as the alternate name.\n+    * This method simply returns null.  It could implement the alternate name converting \".so\" with \".a\" suffix but redundant.\n+    *\/\n+    static File mapAlternativeName(File lib) {\n+        return null;\n+    }\n+\n+    \/**\n+    * Parse a PATH env variable.\n+    *\n+    * Empty elements will be replaced by dot.\n+    *\/\n+    static String[] parsePath(String ldPath) {\n+        char ps = File.pathSeparatorChar;\n+        ArrayList<String> paths = new ArrayList<>();\n+        int pathStart = 0;\n+        int pathEnd;\n+        while ((pathEnd = ldPath.indexOf(ps, pathStart)) >= 0) {\n+            paths.add((pathStart < pathEnd) ?\n+                    ldPath.substring(pathStart, pathEnd) : \".\");\n+            pathStart = pathEnd + 1;\n+        }\n+        int ldLen = ldPath.length();\n+        paths.add((pathStart < ldLen) ?\n+                ldPath.substring(pathStart, ldLen) : \".\");\n+        return paths.toArray(new String[paths.size()]);\n+    }\n+}\n","filename":"src\/java.base\/aix\/classes\/jdk\/internal\/loader\/ClassLoaderHelper.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2024, IBM Corporation. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8319516\n+ * @requires os.family == \"aix\"\n+ * @run  main\/native\/othervm -Djava.library.path=\/usr\/lib LoadLibraryTestAIX\n+ *\/\n+\n+public class LoadLibraryTestAIX {\n+    public static void main(String[] args) throws Exception {\n+        String libraryName=\"perfstat\";\n+        try {\n+            System.loadLibrary(libraryName);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"LoadLibraryTestAIX : could not load libperfstat.a\"+e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/loadLibrary\/LoadLibraryTestAIX.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"}]}