{"files":[{"patch":"@@ -224,2 +224,2 @@\n-        return LEGACY_PREVIEW_METHODS.containsKey(currentVersion)\n-                && LEGACY_PREVIEW_METHODS.get(currentVersion).contains(uniqueId);\n+        return LEGACY_PREVIEW_METHODS.getOrDefault(currentVersion, Set.of())\n+                .contains(uniqueId);\n@@ -305,1 +305,4 @@\n-                version = extractSinceVersionFromText(moduleInfoContent).toString();\n+                var extractedVersion = extractSinceVersionFromText(moduleInfoContent);\n+                if (extractedVersion != null) {\n+                    version = extractedVersion.toString();\n+                }\n@@ -308,2 +311,0 @@\n-            } catch (NullPointerException e) {\n-                error(\"module-info.java does not contain an `@since`\");\n@@ -327,1 +328,4 @@\n-                packageTopVersion = extractSinceVersionFromText(packageContent).toString();\n+                var extractedVersion = extractSinceVersionFromText(packageContent);\n+                if (extractedVersion != null) {\n+                    packageTopVersion = extractedVersion.toString();\n+                }\n@@ -330,2 +334,0 @@\n-            } catch (NullPointerException e) {\n-                error(ed.getPackage().getQualifiedName() + \": package-info.java  does not contain an `@since`\");\n@@ -345,0 +347,22 @@\n+    private boolean isNotCommonRecordMethod(TypeElement te, Element element , Types types) {\n+        var isRecord = te.getKind() == ElementKind.RECORD;\n+        if (!isRecord) {\n+            return true;\n+        }\n+        String uniqueId = getElementName(te, element, types);\n+        boolean isCommonMethod = uniqueId.endsWith(\"toString()\") ||\n+                uniqueId.endsWith(\".hashCode()\") ||\n+                uniqueId.endsWith(\".equals(java.lang.Object)\");\n+        if (isCommonMethod) {\n+            return false;\n+        }\n+        for (var parameter : te.getEnclosedElements()) {\n+            if (parameter.getKind() == ElementKind.RECORD_COMPONENT) {\n+                if (uniqueId.endsWith(String.format(\"%s.%s()\", te.getSimpleName(), parameter.getSimpleName().toString()))) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n@@ -352,3 +376,0 @@\n-        if( te.getKind() == ElementKind.RECORD){\n-            return;\n-        }\n@@ -357,0 +378,1 @@\n+                .filter(element -> isNotCommonRecordMethod(te, element, types))\n","filename":"test\/jdk\/tools\/sincechecker\/SinceChecker.java","additions":33,"deletions":11,"binary":false,"changes":44,"status":"modified"}]}