{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n- * @LastModified: Mar 2022\n+ * @LastModified: Feb 2025\n@@ -958,1 +958,1 @@\n-        if (i + 1 >= end)\n+        if (i + 1 >= end && m_highSurrogate == 0)\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/ToStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+ * @bug 8207760 8349699\n+ * @summary Verifies that a surrogate pair at the edge of a buffer is properly handled\n@@ -46,2 +48,0 @@\n- * @summary Verifies that a surrogate pair at the edge of a buffer is properly handled\n- * @bug 8207760\n@@ -104,0 +104,26 @@\n+    \/*\n+     * @bug 8349699\n+     * Verifies that a surrogate pair at the edge of a buffer is properly handled\n+     * when serializing into a Character section.\n+     *\/\n+    @Test\n+    public final void testBug8349699() throws Exception {\n+        String xs = \"x\".repeat(1017);\n+        String expected = xs + \"\\uD835\\uDF03\\uD835\\uDF00\\uD835\\uDF00\\uD835\\uDF00\\uD835\\uDF00\";\n+        String xml = \"<?xml version=\\\"1.0\\\" ?><a>{1017x}\\uD835\\uDF03\\uD835\\uDF00\\uD835\\uDF00<b>\\uD835\\uDF00<\/b>\\uD835\\uDF00<\/a> \"\n+                .replace(\"{1017x}\", xs);\n+        String xsl = \"\"\"\n+                <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+                <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\">\n+                  <xsl:output encoding=\"UTF-8\" method=\"text\" \/>\n+                  <xsl:template match=\"\/\"><xsl:apply-templates select=\"node()\" \/><\/xsl:template>\n+                <\/xsl:stylesheet>\n+                \"\"\";\n+\n+        Transformer t = createTransformerFromInputstream(\n+                new ByteArrayInputStream(xsl.getBytes(StandardCharsets.UTF_8)));\n+        StringWriter sw = new StringWriter();\n+        t.transform(new StreamSource(new StringReader(xml)), new StreamResult(sw));\n+        Assert.assertEquals(sw.toString(), expected);\n+    }\n+\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/transform\/JDK8207760.java","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}