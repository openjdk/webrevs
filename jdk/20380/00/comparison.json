{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.Collections;\n@@ -86,1 +87,1 @@\n-        return list;\n+        return Collections.unmodifiableList(list);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AttributedElement.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                requireNonNull(typeParameters),\n+                List.copyOf(requireNonNull(typeParameters)),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassSignature.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Collections;\n@@ -93,1 +94,1 @@\n-        return list;\n+        return Collections.unmodifiableList(list);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CompoundElement.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.util.Collections;\n@@ -40,1 +41,1 @@\n-    private final List<E> elements;\n+    final List<E> elements;\n@@ -44,1 +45,1 @@\n-        this.elements = elements;\n+        this.elements = Collections.unmodifiableList(elements);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractUnboundModel.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.util.Objects;\n@@ -137,1 +138,0 @@\n-        var apo = ((ClassReaderImpl)reader).context().attributesProcessingOption();\n@@ -151,1 +151,1 @@\n-                filled.add((Attribute)mapper.readAttribute(enclosing, reader, p));\n+                filled.add((Attribute<?>) Objects.requireNonNull(mapper.readAttribute(enclosing, reader, p)));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BoundAttribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-            super(elements);\n+            super(BufferedCodeBuilder.this.elements);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedCodeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            super(elements);\n+            super(BufferedFieldBuilder.this.elements);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedFieldBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-            super(elements);\n+            super(BufferedMethodBuilder.this.elements);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufferedMethodBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -288,0 +288,4 @@\n+        public StackMapFrameImpl {\n+            locals = List.copyOf(locals);\n+            stack = List.copyOf(stack);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapDecoder.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,0 +95,2 @@\n+import jdk.internal.access.SharedSecrets;\n+\n@@ -630,1 +632,7 @@\n-            this.elements = List.copyOf(elements);\n+            \/\/ deep copy\n+            var array = elements.toArray().clone();\n+            for (int i = 0; i < array.length; i++) {\n+                array[i] = List.copyOf((List<?>) array[i]);\n+            }\n+\n+            this.elements = SharedSecrets.getJavaUtilCollectionAccess().listFromTrustedArray(array);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/UnboundAttribute.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Collections;\n@@ -136,1 +137,1 @@\n-            return errors;\n+            return Collections.unmodifiableList(errors);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerifierImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}