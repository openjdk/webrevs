{"files":[{"patch":"@@ -92,2 +92,13 @@\n-  assert(!ReduceInitialCardMarks || !ShenandoahCardBarrier || ShenandoahGenerationalHeap::heap()->is_in_young(new_obj),\n-         \"Allocating new object outside of young generation: \" INTPTR_FORMAT, p2i(new_obj));\n+  if (ReduceInitialCardMarks && ShenandoahCardBarrier && !ShenandoahHeap::heap()->is_in_young(new_obj)) {\n+    log_debug(gc)(\"Newly allocated object (\" PTR_FORMAT \") is not in the young generation\", p2i(new_obj));\n+    \/\/ This can happen when an object is newly allocated, but we come to a safepoint before returning\n+    \/\/ the object. If the safepoint runs a degenerated cycle that is upgraded to a full GC, this object\n+    \/\/ will have survived two GC cycles. If the tenuring age is very low (1), this object may be promoted.\n+    \/\/ In this case, we have an allocated object, but it has received no stores yet. If card marking barriers\n+    \/\/ have been elided, we could end up with an object in old holding pointers to young that won't be in\n+    \/\/ the remembered set. The solution here is conservative, but this problem should be rare, and it will\n+    \/\/ correct itself on subsequent cycles when the remembered set is updated.\n+    ShenandoahGenerationalHeap::heap()->old_generation()->card_scan()->mark_range_as_dirty(\n+      cast_from_oop<HeapWord*>(new_obj), new_obj->size()\n+    );\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-  log_debug(gc)(\"SMC:initialize_top_at_mark_start for Region %zu, TAMS: \" PTR_FORMAT \", TopOfBitMap: \" PTR_FORMAT,\n-                r->index(), p2i(bottom), p2i(r->end()));\n+  log_debug(gc, mark)(\"SMC:initialize_top_at_mark_start for Region %zu, TAMS: \" PTR_FORMAT \", TopOfBitMap: \" PTR_FORMAT,\n+                      r->index(), p2i(bottom), p2i(r->end()));\n@@ -89,2 +89,2 @@\n-  log_debug(gc)(\"SMC:clear_bitmap for %s Region %zu, top_bitmap: \" PTR_FORMAT,\n-                r->affiliation_name(), r->index(), p2i(top_bitmap));\n+  log_debug(gc, mark)(\"SMC:clear_bitmap for %s Region %zu, top_bitmap: \" PTR_FORMAT,\n+                      r->affiliation_name(), r->index(), p2i(top_bitmap));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -107,2 +107,2 @@\n-  log_debug(gc)(\"Capturing TAMS for %s Region %zu, was: \" PTR_FORMAT \", now: \" PTR_FORMAT,\n-                r->affiliation_name(), idx, p2i(old_tams), p2i(new_tams));\n+  log_debug(gc, mark)(\"Capturing TAMS for %s Region %zu, was: \" PTR_FORMAT \", now: \" PTR_FORMAT,\n+                      r->affiliation_name(), idx, p2i(old_tams), p2i(new_tams));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -686,3 +686,3 @@\n-    log_debug(gc)(\"ShenandoahScanRememberedTask::do_work(%u), processing slice of region \"\n-                  \"%zu at offset %zu, size: %zu\",\n-                  worker_id, region->index(), assignment._chunk_offset, assignment._chunk_size);\n+    log_debug(gc, remset)(\"ShenandoahScanRememberedTask::do_work(%u), processing slice of region \"\n+                          \"%zu at offset %zu, size: %zu\",\n+                          worker_id, region->index(), assignment._chunk_offset, assignment._chunk_size);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -346,3 +346,3 @@\n-  log_debug(gc)(\"Remembered set scan processing Region %zu, from \" PTR_FORMAT \" to \" PTR_FORMAT \", using %s table\",\n-                region->index(), p2i(start_of_range), p2i(end_of_range),\n-                use_write_table? \"read\/write (updating)\": \"read (marking)\");\n+  log_debug(gc, remset)(\"Remembered set scan processing Region %zu, from \" PTR_FORMAT \" to \" PTR_FORMAT \", using %s table\",\n+                        region->index(), p2i(start_of_range), p2i(end_of_range),\n+                        use_write_table? \"read\/write (updating)\": \"read (marking)\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}