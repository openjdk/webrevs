{"files":[{"patch":"@@ -341,11 +341,1 @@\n-        final String text;\n-        final Icon icon = b.getIcon();\n-        final View v = (View)c.getClientProperty(BasicHTML.propertyKey);\n-        if (v != null && icon == null) {\n-            \/\/ use zero insets for HTML without an icon\n-            \/\/ since layout only handles text calculations\n-            text = layoutAndGetText(g, b, aquaBorder, new Insets(0,0,0,0),\n-                    viewRect, iconRect, textRect);\n-        } else {\n-            text = layoutAndGetText(g, b, aquaBorder, i, viewRect, iconRect, textRect);\n-        }\n+        final String text = layoutAndGetText(g, b, aquaBorder, i, viewRect, iconRect, textRect);\n@@ -354,1 +344,1 @@\n-        if (icon != null) {\n+        if (b.getIcon() != null) {\n@@ -363,0 +353,1 @@\n+            final View v = (View)c.getClientProperty(BasicHTML.propertyKey);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonUI.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import sun.awt.AppContext;\n-import sun.swing.SwingUtilities2;\n@@ -64,0 +62,3 @@\n+import sun.awt.AppContext;\n+import sun.swing.SwingUtilities2;\n+\n@@ -601,9 +602,1 @@\n-        Insets i;\n-\n-        final View v = (View)b.getClientProperty(BasicHTML.propertyKey);\n-        if (v != null) {\n-            i = new Insets(0, 0, 0, 0);\n-        } else {\n-            i = b.getInsets();\n-        }\n-\n+        Insets i = b.getInsets();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicButtonUI.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import sun.swing.MenuItemLayoutHelper;\n-import sun.swing.SwingUtilities2;\n@@ -40,1 +38,0 @@\n-import javax.swing.JButton;\n@@ -47,0 +44,3 @@\n+import sun.swing.MenuItemLayoutHelper;\n+import sun.swing.SwingUtilities2;\n+\n@@ -395,13 +395,4 @@\n-        final View v = (View)c.getClientProperty(BasicHTML.propertyKey);\n-\n-        if (c instanceof JButton && v != null) {\n-            paintViewR.x = 0;\n-            paintViewR.y = 0;\n-            paintViewR.width = c.getWidth();\n-            paintViewR.height = c.getHeight();\n-        } else {\n-            paintViewR.x = insets.left;\n-            paintViewR.y = insets.top;\n-            paintViewR.width = c.getWidth() - (insets.left + insets.right);\n-            paintViewR.height = c.getHeight() - (insets.top + insets.bottom);\n-        }\n+        paintViewR.x = insets.left;\n+        paintViewR.y = insets.top;\n+        paintViewR.width = c.getWidth() - (insets.left + insets.right);\n+        paintViewR.height = c.getHeight() - (insets.top + insets.bottom);\n@@ -433,0 +424,1 @@\n+            View v = (View) c.getClientProperty(BasicHTML.propertyKey);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthGraphicsUtils.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1,145 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n-*\/\n-\n-\/*\n- * @test\n- * @bug 8015854\n- * @summary Tests HTML image as JButton text for unwanted padding\n- * @run main HtmlButtonImageTest\n- *\/\n-\n-import java.awt.Color;\n-import java.awt.Dimension;\n-import java.awt.Graphics2D;\n-import java.awt.image.BufferedImage;\n-import java.io.File;\n-import java.io.IOException;\n-import java.nio.file.Path;\n-\n-import javax.imageio.ImageIO;\n-import javax.swing.JButton;\n-import javax.swing.SwingUtilities;\n-import javax.swing.UIManager;\n-import javax.swing.UnsupportedLookAndFeelException;\n-\n-import static java.awt.image.BufferedImage.TYPE_INT_ARGB;\n-\n-public final class HtmlButtonImageTest {\n-    private static JButton button;\n-    private static Path testDir;\n-    private static BufferedImage image;\n-\n-    private static final int BUTTON_HEIGHT = 37;\n-    private static final int BUTTON_WIDTH = 37;\n-    private static final int SQUARE_HEIGHT = 19;\n-    private static final int SQUARE_WIDTH = 19;\n-    private static final int centerX = BUTTON_WIDTH \/ 2;\n-    private static final int centerY = BUTTON_HEIGHT \/ 2;\n-    private static final int minX = centerX - (SQUARE_WIDTH \/ 2);\n-    private static final int minY = centerY - (SQUARE_HEIGHT \/ 2);\n-    private static final int maxX = centerX + (SQUARE_WIDTH \/ 2);\n-    private static final int maxY = centerY + (SQUARE_HEIGHT \/ 2);\n-\n-    private static boolean supportedLaf;\n-    private static int failCount = 0;\n-    private static String currentLaf = new String();\n-    private static StringBuffer failedLafs = new StringBuffer();\n-\n-\n-    public static void main(String[] args) throws Exception {\n-        testDir = Path.of(System.getProperty(\"test.classes\", \".\"));\n-        generateRedSquare();\n-\n-        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n-            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n-            if(supportedLaf) {\n-                currentLaf = laf.getName();\n-                SwingUtilities.invokeAndWait(HtmlButtonImageTest::createButton);\n-                SwingUtilities.invokeAndWait(HtmlButtonImageTest::paintButton);\n-\n-                testImageCentering(image.getRGB(centerX, centerY),\n-                        image.getRGB(minX, minY),\n-                        image.getRGB(minX, maxY),\n-                        image.getRGB(maxX, minY),\n-                        image.getRGB(maxX, maxY));\n-            }\n-        }\n-\n-        if(!failedLafs.isEmpty()) {\n-            if(failCount > 1) {\n-                failedLafs.setLength(failedLafs.length() - 2);\n-            }\n-            throw new RuntimeException(\"HTML image not centered in button \" +\n-                    \"for these L&F's: \" + failedLafs);\n-        }\n-    }\n-\n-    private static void generateRedSquare() throws IOException {\n-        BufferedImage bImg = new BufferedImage(SQUARE_WIDTH, SQUARE_HEIGHT,\n-                TYPE_INT_ARGB);\n-        Graphics2D cg = bImg.createGraphics();\n-        cg.setColor(Color.RED);\n-        cg.fillRect(0, 0, SQUARE_WIDTH, SQUARE_HEIGHT);\n-        ImageIO.write(bImg, \"png\", new File(testDir + \"\/red_square.png\"));\n-    }\n-\n-    private static void createButton() {\n-        button = new JButton();\n-        button.setSize(new Dimension(BUTTON_WIDTH, BUTTON_HEIGHT));\n-        button.setText(\"<html><img src='\"\n-                + testDir.resolve(\"red_square.png\").toUri() + \"'><\/html>\");\n-    }\n-\n-    private static void paintButton() {\n-        image = new BufferedImage(BUTTON_HEIGHT, BUTTON_WIDTH, TYPE_INT_ARGB);\n-        Graphics2D graphics2D = image.createGraphics();\n-        button.paint(graphics2D);\n-        graphics2D.dispose();\n-    }\n-\n-    private static boolean checkRedColor(int rgb) {\n-        return (rgb == Color.RED.getRGB());\n-    }\n-\n-    private static void testImageCentering(int... colors) throws IOException {\n-        for (int c : colors) {\n-            if (!checkRedColor(c)) {\n-                failCount++;\n-                ImageIO.write(image, \"png\", new File(testDir + \"\/fail_image_\" +\n-                        currentLaf.replaceAll(\"[^\\\\w\\\\s]\",\"\") + \".png\"));\n-                failedLafs.append(currentLaf + \", \");\n-                break;\n-            }\n-        }\n-    }\n-\n-    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n-        try {\n-            UIManager.setLookAndFeel(laf.getClassName());\n-            supportedLaf = true;\n-        } catch (UnsupportedLookAndFeelException | ClassNotFoundException |\n-                InstantiationException | IllegalAccessException e) {\n-            supportedLaf = false;\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/HtmlButtonImageTest.java","additions":0,"deletions":145,"binary":false,"changes":145,"status":"deleted"}]}