{"files":[{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/* @test\n+ * @bug 8302173\n+ * @requires (os.family == \"mac\")\n+ * @summary Tests Aqua button icon positioning with HTML text\n+ * @run main HtmlButtonWithTextAndIcon\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javax.imageio.ImageIO;\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+import static java.awt.image.BufferedImage.TYPE_INT_ARGB;\n+\n+public class HtmlButtonWithTextAndIcon {\n+    private static Path testDir;\n+    private static JButton button;\n+    private static BufferedImage image;\n+    private static final int OFFSET = 1;\n+    private static final int BUTTON_WIDTH = 59;\n+    private static final int BUTTON_HEIGHT = 28;\n+    private static final int ICON_WIDTH = 16;\n+    private static final int ICON_HEIGHT = 16;\n+    private static final int centerX = 16;\n+    private static final int centerY = 13;\n+    private static final int minX = centerX - (ICON_WIDTH \/ 2) + OFFSET;\n+    private static final int minY = centerY - (ICON_HEIGHT \/ 2) + OFFSET;\n+    private static final int maxX = centerX + (ICON_WIDTH \/ 2) - OFFSET;\n+    private static final int maxY = centerY + (ICON_HEIGHT \/ 2) - OFFSET;\n+\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n+        testDir = Path.of(System.getProperty(\"test.classes\", \".\"));\n+\n+        SwingUtilities.invokeAndWait(HtmlButtonWithTextAndIcon::createButton);\n+        SwingUtilities.invokeAndWait(HtmlButtonWithTextAndIcon::paintButton);\n+\n+        testIconPosition(image.getRGB(centerX, centerY),\n+                image.getRGB(minX, minY),\n+                image.getRGB(minX, maxY),\n+                image.getRGB(maxX, minY),\n+                image.getRGB(maxX, maxY));\n+\n+        System.out.println(\"PASSED\");\n+    }\n+\n+    private static void createButton() {\n+        button = new JButton(\"<html><nobr><u>Test<\/u>\" +\n+                \"<\/nobr><\/html>\", new TestIcon());\n+        button.setSize(new Dimension(BUTTON_WIDTH, BUTTON_HEIGHT));\n+        button.setHorizontalAlignment(JButton.LEFT);\n+    }\n+\n+    private static void paintButton() {\n+        image = new BufferedImage(BUTTON_WIDTH, BUTTON_HEIGHT, TYPE_INT_ARGB);\n+        Graphics2D graphics2D = image.createGraphics();\n+        button.paint(graphics2D);\n+        graphics2D.dispose();\n+    }\n+\n+    private static void testIconPosition(int... colors) throws IOException {\n+        for (int c : colors) {\n+            if (c != Color.RED.getRGB()) {\n+                ImageIO.write(image, \"png\", new File(testDir + \"\/failImage.png\"));\n+                throw new RuntimeException(\"Icon position incorrect\");\n+            }\n+        }\n+    }\n+\n+    public static class TestIcon implements Icon {\n+\n+        @Override\n+        public void paintIcon(Component c, Graphics g, int x, int y) {\n+            g.setColor(Color.RED);\n+            g.fillRect(x, y, ICON_WIDTH, ICON_HEIGHT);\n+        }\n+\n+        @Override\n+        public int getIconWidth() {\n+            return ICON_WIDTH;\n+        }\n+\n+        @Override\n+        public int getIconHeight() {\n+            return ICON_HEIGHT;\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonWithTextAndIcon.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"}]}