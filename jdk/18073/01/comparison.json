{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -34,0 +35,2 @@\n+import java.nio.file.FileStore;\n+import java.nio.file.Path;\n@@ -35,1 +38,1 @@\n-\n+import jtreg.SkippedException;\n@@ -68,0 +71,2 @@\n+        largeFile.deleteOnExit();\n+\n@@ -78,0 +83,8 @@\n+        } catch (IOException ioe) {\n+            if (\"File too large\".equals(ioe.getMessage())) {\n+                Path p = largeFile.toPath();\n+                FileStore store = p.getFileSystem().provider().getFileStore(p);\n+                if (\"msdos\".equals(store.type()))\n+                    throw new SkippedException(\"file too big for FAT32\");\n+            }\n+            throw ioe;\n@@ -79,1 +92,0 @@\n-        largeFile.deleteOnExit();\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Size.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}