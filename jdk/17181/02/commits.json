[{"commit":{"message":"Update copyright year."},"files":[{"filename":"src\/java.sql\/share\/classes\/java\/sql\/Timestamp.java"},{"filename":"test\/jdk\/java\/sql\/testng\/test\/sql\/TimestampTests.java"}],"sha":"9f3cbf120b66cd87e46fd4b5e4387defc15a1b7f"},{"commit":{"message":"Address review comments about the new test."},"files":[{"filename":"test\/jdk\/java\/sql\/testng\/test\/sql\/TimestampTests.java"}],"sha":"8f2e929c9b1f43e1fa6a5408df75fbd1013b8a4e"},{"commit":{"message":"8068958: Timestamp.from(Instant) should throw when conversion is not possible\n\nMultiplying with `*` never produces `ArithmeticException`, so the catch\nin the existing code is never triggered. `Math.multiplyExact` does\nproduce `ArithmeticException` if the multiplication overflows. So\nwe can use that, and rethrow `IllegalArgumentException` as the\nspecification says.\n\nThere is a small compatibility risk, in that code may have been relying\non the previous silent overflow, and will now get an exception. But an\nexception is surely better than the nonsense results that overflow\nproduces.\n\nThanks to Kurt Kluever for the test cases."},"files":[{"filename":"src\/java.sql\/share\/classes\/java\/sql\/Timestamp.java"},{"filename":"test\/jdk\/java\/sql\/testng\/test\/sql\/TimestampTests.java"}],"sha":"32b3de5351fbd85afcc809519f81cbb8eace6316"}]