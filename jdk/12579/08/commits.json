[{"commit":{"message":"Apply formatting suggestions and update copyright notices"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.meta\/src\/jdk\/vm\/ci\/meta\/MetaUtil.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaContainsOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaEagerInit.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithOldClass.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SignedJar.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/StaticArchiveWithLambda.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/BasicLambdaTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaContainsOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaCustomLoader.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForClassInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForOldInfInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaProxyCallerIsHidden.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaProxyDuringShutdown.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NestHostOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NestTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NoClassToArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ParallelLambdaLoadTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/PredicateTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/RedefineCallerClassTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/StaticInnerTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UsedAllArchivedLambdas.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/AnonVmClassesDuringDump.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/CDSMHTest_generate.sh"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesAsCollectorTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesCastFailureTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesGeneralTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesInvokersTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesPermuteArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesSpreadArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/pkg2\/Child.jcod"},{"filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/ClassHierarchyTest.java"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/ModifyAnonymous.java"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/get_stack_trace.h"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/libgetstacktr03.cpp"},{"filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/HiddenFrames.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/csm\/jdk\/test\/MethodInvokeTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaAsm.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaStackTrace.java"}],"sha":"a4261e3082dbb07473c2daebb4cab21ce07f709f"},{"commit":{"message":"Many tests have patterns for lambda class names; update them"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaContainsOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaEagerInit.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithOldClass.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SignedJar.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/StaticArchiveWithLambda.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/BasicLambdaTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaContainsOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaCustomLoader.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForClassInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForOldInfInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaInBaseArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaProxyCallerIsHidden.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaProxyDuringShutdown.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NestHostOldInf.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NestTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NoClassToArchive.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ParallelLambdaLoadTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/PredicateTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/RedefineCallerClassTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/StaticInnerTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UsedAllArchivedLambdas.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/CDSMHTest_generate.sh"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesAsCollectorTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesCastFailureTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesGeneralTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesInvokersTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesPermuteArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesSpreadArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/AnonVmClassesDuringDump.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/CDSMHTest_generate.sh"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesAsCollectorTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesCastFailureTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesGeneralTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesInvokersTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesPermuteArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesSpreadArgumentsTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/pkg2\/Child.jcod"},{"filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/ClassHierarchyTest.java"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/ModifyAnonymous.java"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/get_stack_trace.h"},{"filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/libgetstacktr03.cpp"},{"filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/HiddenFrames.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/csm\/jdk\/test\/MethodInvokeTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaStackTrace.java"}],"sha":"145d857f50a5551a0f6b66aaf1b4e22fb33ff841"},{"commit":{"message":"Update comments and javadoc showin the old pattern"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.meta\/src\/jdk\/vm\/ci\/meta\/MetaUtil.java"}],"sha":"491d9b54f96173b561a03eafddedf65d5f16ecea"},{"commit":{"message":"Updated to use hidden class suffix for dumps when possible, else use the counter with a `failed` suffix. Also, remove the extra trailing `$` from the lambda class name and update tests accordingly.\n\nThis combines the suggestions made by @mlchung and @ExE-Boss and hopefully will resolve the Windows testing issue."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaAsm.java"}],"sha":"a9d0acc342d6de987a9f09c11bbed9a8ce6da6c7"},{"commit":{"message":"Use a unique index for the dumped lambda class instead of a time stamp"},"files":[{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaAsm.java"}],"sha":"e9d1d7f2c7082ab17f731689244f693390a0383f"},{"commit":{"message":"Use `Instant.now()` for more precise timestamps.\n\nUsing `currentTimeMillis` is imprecise enough that tests may sporadically fail if two lambda classes from the same lambda class are dumped within 1ms of one another. `Instant.now()` is much more precise and also sorts nicely."},"files":[],"sha":"c73442b294e5d3a553bb1a8eb4862090d4b1a888"},{"commit":{"message":"Fix LambdaAsm test"},"files":[{"filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaAsm.java"}],"sha":"d56b77a2224d9e2edb067a9db2a0ec098c4aac30"},{"commit":{"message":"Fix stack walker test"},"files":[{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"}],"sha":"8360deb37e69a2a072ea37145cc6fc4fce7dc429"},{"commit":{"message":"Import"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"85620a445e9960ea16bbbcc9b7c2d66d8ebefc27"},{"commit":{"message":"Beter timestamp placement"},"files":[],"sha":"86e168d3565489a503406c6ce155853014ec22c6"},{"commit":{"message":"8292914: Drop the counter from lambda class names\n\nThe class generated for lambda proxies is now defined as a hidden class. This means that the counter, which was used to ensure a unique class name and avoid clashes, is now redundant. In addition to performing redundant work, this also impacts build reproducibility for native image generators which might already have a strategy to cope with hidden classes but cannot cope with indeterminate definition order for lambda proxy classes.\n\nAdditionally, the lambda proxy class dumper is enhanced to prepend a raw timestamp before the filename."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"0e109beb512b30fb4449ded067f010ea3284dbe9"}]