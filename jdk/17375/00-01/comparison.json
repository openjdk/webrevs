{"files":[{"patch":"@@ -258,1 +258,1 @@\n-int IdealLoopTree::find_invariant(Node* n, PhaseIdealLoop *phase) {\n+int IdealLoopTree::find_invariant(Node* n, PhaseIdealLoop* phase) {\n@@ -276,3 +276,3 @@\n-    BoolNode *boolOut = n->out(i)->isa_Bool();\n-    if (!boolOut || !(boolOut->_test._test == BoolTest::eq ||\n-                      boolOut->_test._test == BoolTest::ne)) {\n+    BoolNode* boolOut = n->out(i)->isa_Bool();\n+    if (boolOut == nullptr || !(boolOut->_test._test == BoolTest::eq ||\n+                                boolOut->_test._test == BoolTest::ne)) {\n@@ -328,1 +328,1 @@\n-\/\/ Apply the same transormations to == and !=\n+\/\/ Apply the same transformations to == and !=\n@@ -340,0 +340,3 @@\n+  \/\/ Follow the comments for the transformations at the top of the function to\n+  \/\/ determine whether x, inv1, or inv2 should be negative. Explicit checks that\n+  \/\/ Sub nodes are not Cmp nodes are required because Cmp nodes are Sub nodes.\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}