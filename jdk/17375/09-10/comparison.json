{"files":[{"patch":"@@ -40,1 +40,1 @@\n-    private static final int size = 500;\n+    private int size;\n@@ -52,9 +52,4 @@\n-    public Object[] setupEq() {\n-        inv1 = RANDOM.nextInt();\n-        inv2 = inv1 + RANDOM.nextInt(size * 2);\n-        return new Object[] { inv1, inv2 };\n-    }\n-\n-    @Setup\n-    public Object[] setupNe() {\n-        inv1 = RANDOM.nextInt();\n+    public Object[] setup(SetupInfo info) {\n+        int count = info.invocationCounter();\n+        size = count + 500;\n+        inv1 = count;\n@@ -62,3 +57,0 @@\n-            if (inv1 == 0) {\n-                inv1 = 1;\n-            }\n@@ -68,1 +60,1 @@\n-            inv2 = inv1 + RANDOM.nextInt(size * 2) + 1;\n+            inv2 = count * 2;\n@@ -70,1 +62,1 @@\n-        return new Object[] { inv1, inv2 };\n+        return new Object[] { inv1, inv2, size };\n@@ -72,0 +64,1 @@\n+\n@@ -79,2 +72,1 @@\n-        if ((invDiff < size && returnValue != invDiff) || (invDiff\n-                    >= size && returnValue != size)) {\n+        if ((invDiff < size && returnValue != invDiff) || (invDiff >= size && returnValue != size)) {\n@@ -87,2 +79,1 @@\n-        if ((invDiff != 0 && returnValue != 0) || (invDiff\n-                    == 0 && returnValue != 1)) {\n+        if ((invDiff != 0 && returnValue != 0) || (invDiff == 0 && returnValue != 1)) {\n@@ -94,1 +85,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -96,1 +87,1 @@\n-    public int equalsAddInt(int inv1, int inv2) {\n+    public int equalsAddInt(int inv1, int inv2, int size) {\n@@ -99,0 +90,1 @@\n+            blackhole();\n@@ -101,1 +93,0 @@\n-                blackhole();\n@@ -114,1 +105,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -116,1 +107,1 @@\n-    public int equalsAddLong(long inv1, long inv2) {\n+    public int equalsAddLong(long inv1, long inv2, int size) {\n@@ -119,0 +110,1 @@\n+            blackhole();\n@@ -121,1 +113,0 @@\n-                blackhole();\n@@ -134,1 +125,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -136,1 +127,1 @@\n-    public int equalsInvariantSubVariantInt(int inv1, int inv2) {\n+    public int equalsInvariantSubVariantInt(int inv1, int inv2, int size) {\n@@ -139,0 +130,1 @@\n+            blackhole();\n@@ -141,1 +133,0 @@\n-                blackhole();\n@@ -154,1 +145,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -156,1 +147,1 @@\n-    public int equalsInvariantSubVariantLong(long inv1, long inv2) {\n+    public int equalsInvariantSubVariantLong(long inv1, long inv2, int size) {\n@@ -159,1 +150,2 @@\n-            \/\/ Reassociate to `inv1 - inv2 == i`\n+            blackhole();\n+            \/\/ Reassociate to `inv2 - inv1 == i`\n@@ -161,1 +153,0 @@\n-                blackhole();\n@@ -174,1 +165,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -176,1 +167,1 @@\n-    public int equalsVariantSubInvariantInt(int inv1, int inv2) {\n+    public int equalsVariantSubInvariantInt(int inv1, int inv2, int size) {\n@@ -179,1 +170,2 @@\n-            \/\/ Reassociate to `inv1 + inv2 == i`\n+            blackhole();\n+            \/\/ Reassociate to `inv2 - inv1 == i`\n@@ -181,1 +173,0 @@\n-                blackhole();\n@@ -194,1 +185,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -196,1 +187,1 @@\n-    public int equalsVariantSubInvariantLong(long inv1, long inv2) {\n+    public int equalsVariantSubInvariantLong(long inv1, long inv2, int size) {\n@@ -199,1 +190,2 @@\n-            \/\/ Reassociate to `inv1 + inv2 == i`\n+            blackhole();\n+            \/\/ Reassociate to `inv2 - inv1 == i`\n@@ -201,1 +193,0 @@\n-                blackhole();\n@@ -215,1 +206,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -217,1 +208,1 @@\n-    public int notEqualsAddInt(int inv1, int inv2) {\n+    public int notEqualsAddInt(int inv1, int inv2, int size) {\n@@ -220,0 +211,1 @@\n+            blackhole();\n@@ -222,1 +214,0 @@\n-                blackhole();\n@@ -235,1 +226,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -237,1 +228,1 @@\n-    public int notEqualsAddLong(long inv1, long inv2) {\n+    public int notEqualsAddLong(long inv1, long inv2, int size) {\n@@ -240,0 +231,1 @@\n+            blackhole();\n@@ -242,1 +234,0 @@\n-                blackhole();\n@@ -255,1 +246,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -257,1 +248,1 @@\n-    public int notEqualsInvariantSubVariantInt(int inv1, int inv2) {\n+    public int notEqualsInvariantSubVariantInt(int inv1, int inv2, int size) {\n@@ -260,1 +251,2 @@\n-            \/\/ Reassociate to `inv2 - inv1 != i`\n+            blackhole();\n+            \/\/ Reassociate to `inv1 - inv2 != i`\n@@ -262,1 +254,0 @@\n-                blackhole();\n@@ -275,1 +266,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -277,1 +268,1 @@\n-    public int notEqualsInvariantSubVariantLong(long inv1, long inv2) {\n+    public int notEqualsInvariantSubVariantLong(long inv1, long inv2, int size) {\n@@ -280,1 +271,2 @@\n-            \/\/ Reassociate to `inv2 - inv1 != i`\n+            blackhole();\n+            \/\/ Reassociate to `inv1 - inv2 != i`\n@@ -282,1 +274,0 @@\n-                blackhole();\n@@ -295,1 +286,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -297,1 +288,1 @@\n-    public int notEqualsVariantSubInvariantInt(int inv1, int inv2) {\n+    public int notEqualsVariantSubInvariantInt(int inv1, int inv2, int size) {\n@@ -300,1 +291,2 @@\n-            \/\/ Reassociate to `inv1 + inv2 != i`\n+            blackhole();\n+            \/\/ Reassociate to `inv2 - inv1 != i`\n@@ -302,1 +294,0 @@\n-                blackhole();\n@@ -315,1 +306,1 @@\n-    @Arguments(setup = \"setupNe\")\n+    @Arguments(setup = \"setup\")\n@@ -317,1 +308,1 @@\n-    public int notEqualsVariantSubInvariantLong(long inv1, long inv2) {\n+    public int notEqualsVariantSubInvariantLong(long inv1, long inv2, int size) {\n@@ -320,1 +311,2 @@\n-            \/\/ Reassociate to `inv1 + inv2 != i`\n+            blackhole();\n+            \/\/ Reassociate to `inv1 - inv1 != i`\n@@ -322,1 +314,0 @@\n-                blackhole();\n@@ -335,1 +326,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -337,1 +328,1 @@\n-    public int ltDontReassociate(int inv1, int inv2) {\n+    public int ltDontReassociate(int inv1, int inv2, int size) {\n@@ -340,0 +331,1 @@\n+            blackhole();\n@@ -341,1 +333,0 @@\n-                blackhole();\n@@ -357,1 +348,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -359,1 +350,1 @@\n-    public int leDontReassociate(int inv1, int inv2) {\n+    public int leDontReassociate(int inv1, int inv2, int size) {\n@@ -362,0 +353,1 @@\n+            blackhole();\n@@ -363,1 +355,0 @@\n-                blackhole();\n@@ -379,1 +370,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -381,1 +372,1 @@\n-    public int gtDontReassociate(int inv1, int inv2) {\n+    public int gtDontReassociate(int inv1, int inv2, int size) {\n@@ -384,0 +375,1 @@\n+            blackhole();\n@@ -385,1 +377,0 @@\n-                blackhole();\n@@ -401,1 +392,1 @@\n-    @Arguments(setup = \"setupEq\")\n+    @Arguments(setup = \"setup\")\n@@ -403,1 +394,1 @@\n-    public int geDontReassociate(int inv1, int inv2) {\n+    public int geDontReassociate(int inv1, int inv2, int size) {\n@@ -406,0 +397,1 @@\n+            blackhole();\n@@ -407,1 +399,0 @@\n-                blackhole();\n@@ -422,1 +413,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/InvariantCodeMotionReassociateCmp.java","additions":65,"deletions":75,"binary":false,"changes":140,"status":"modified"}]}