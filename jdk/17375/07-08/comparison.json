{"files":[{"patch":"@@ -37,0 +37,1 @@\n+    private static final int size = 500;\n@@ -48,2 +49,3 @@\n-    public void equalsAddInt(int inv1, int inv2) {\n-        for (int i = 0; i < 500; ++i) {\n+    public int[] equalsAddInt(int inv1, int inv2) {\n+        int i = 0;\n+        for (; i < size; ++i) {\n@@ -53,0 +55,1 @@\n+                break;\n@@ -55,0 +58,9 @@\n+        return new int[]{i, inv1, inv2};\n+    }\n+\n+    @Check(test = \"equalsAddInt\")\n+    public void checkEqualsAddInt(int[] returnValue) {\n+        if (returnValue[0] != size && returnValue[0] + returnValue[1] != returnValue[2]) {\n+            throw new RuntimeException(\"Illegal reassociation: i=\" + returnValue[0] + \", inv1=\" + returnValue[1]\n+                    + \", inv2=\" + returnValue[2]);\n+        }\n@@ -60,2 +72,3 @@\n-    public void equalsAddLong(long inv1, long inv2) {\n-        for (int i = 0; i < 500; ++i) {\n+    public long[] equalsAddLong(long inv1, long inv2) {\n+        int i = 0;\n+        for (; i < size; ++i) {\n@@ -65,0 +78,1 @@\n+                break;\n@@ -67,0 +81,9 @@\n+        return new long[]{i, inv1, inv2};\n+    }\n+\n+    @Check(test = \"equalsAddLong\")\n+    public void checkEqualsAddLong(long[] returnValue) {\n+        if (returnValue[0] != size && returnValue[0] + returnValue[1] != returnValue[2]) {\n+            throw new RuntimeException(\"Illegal reassociation: i=\" + returnValue[0] + \", inv1=\" + returnValue[1]\n+                    + \", inv2=\" + returnValue[2]);\n+        }\n@@ -74,1 +97,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -96,1 +119,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -117,1 +140,1 @@\n-        for (int i = 0; i < 500; ++i) {\n+        for (int i = 0; i < size; ++i) {\n@@ -129,1 +152,1 @@\n-        for (int i = 0; i < 500; ++i) {\n+        for (int i = 0; i < size; ++i) {\n@@ -153,1 +176,1 @@\n-        for (int i = 0; i < 500; ++i) {\n+        for (int i = 0; i < size; ++i) {\n@@ -166,1 +189,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -188,1 +211,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -221,1 +244,1 @@\n-        for (int i = 0; i < 500; ++i) {\n+        for (int i = 0; i < size; ++i) {\n@@ -234,1 +257,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -255,1 +278,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n@@ -276,1 +299,1 @@\n-        for (; i < 500; ++i) {\n+        for (; i < size; ++i) {\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/InvariantCodeMotionReassociateCmp.java","additions":38,"deletions":15,"binary":false,"changes":53,"status":"modified"}]}