{"files":[{"patch":"@@ -69,0 +69,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -3104,1 +3105,1 @@\n-            if (arg instanceof Formattable) {\n+            if (arg instanceof Formattable fmtArg) {\n@@ -3107,1 +3108,1 @@\n-                ((Formattable)arg).formatTo(fmt, Flags.NONE, -1, -1);\n+                fmtArg.formatTo(fmt, Flags.NONE, -1, -1);\n@@ -3124,1 +3125,1 @@\n-            if (arg instanceof Formattable) {\n+            if (arg instanceof Formattable fmtArg) {\n@@ -3127,1 +3128,1 @@\n-                ((Formattable)arg).formatTo(fmt, ucase ? Flags.UPPERCASE : Flags.NONE, width, -1);\n+                fmtArg.formatTo(fmt, ucase ? Flags.UPPERCASE : Flags.NONE, width, -1);\n@@ -3405,1 +3406,1 @@\n-                    throw new UnknownFormatConversionException(String.valueOf(c));\n+                    throw unknownFormatConversion(c);\n@@ -5260,1 +5261,1 @@\n-        static final FormatString[] specifiers = new FormatString[128];\n+        static final @Stable FormatString[] SPECIFIERS = new FormatString[128];\n@@ -5263,6 +5264,3 @@\n-                    BOOLEAN,\n-                    BOOLEAN_UPPER,\n-                    HASHCODE,\n-                    HASHCODE_UPPER,\n-                    CHARACTER,\n-                    CHARACTER_UPPER,\n+                    BOOLEAN, BOOLEAN_UPPER,\n+                    HASHCODE, HASHCODE_UPPER,\n+                    CHARACTER, CHARACTER_UPPER,\n@@ -5270,2 +5268,1 @@\n-                    SCIENTIFIC,\n-                    SCIENTIFIC_UPPER,\n+                    SCIENTIFIC, SCIENTIFIC_UPPER,\n@@ -5275,2 +5272,1 @@\n-                    HEXADECIMAL_FLOAT,\n-                    HEXADECIMAL_FLOAT_UPPER\n+                    HEXADECIMAL_FLOAT, HEXADECIMAL_FLOAT_UPPER\n@@ -5278,1 +5274,1 @@\n-                specifiers[c] = new FormatSpecifier(c);\n+                SPECIFIERS[c] = new FormatSpecifier(c);\n@@ -5280,7 +5276,7 @@\n-            specifiers[DECIMAL_INTEGER] = new FormatDecimal1();\n-            specifiers[HEXADECIMAL_INTEGER] = new FormatHex1(false);\n-            specifiers[HEXADECIMAL_INTEGER_UPPER] = new FormatHex1(true);\n-            specifiers[LINE_SEPARATOR] = new FormatText1(LINE_SEPARATOR);\n-            specifiers[PERCENT_SIGN] = new FormatText1(PERCENT_SIGN);\n-            specifiers[STRING] = new FormatString1(false);\n-            specifiers[STRING_UPPER] = new FormatString1(true);\n+            SPECIFIERS[DECIMAL_INTEGER          ] = new FormatDecimal1();\n+            SPECIFIERS[HEXADECIMAL_INTEGER      ] = new FormatHex1(false);\n+            SPECIFIERS[HEXADECIMAL_INTEGER_UPPER] = new FormatHex1(true);\n+            SPECIFIERS[LINE_SEPARATOR           ] = new FormatText1(LINE_SEPARATOR);\n+            SPECIFIERS[PERCENT_SIGN             ] = new FormatText1(PERCENT_SIGN);\n+            SPECIFIERS[STRING                   ] = new FormatString1(false);\n+            SPECIFIERS[STRING_UPPER             ] = new FormatString1(true);\n@@ -5290,1 +5286,1 @@\n-            return specifiers[c & 0x7f];\n+            return SPECIFIERS[c & 0x7f];\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"}]}