{"files":[{"patch":"@@ -52,2 +52,2 @@\n-  \/\/ In the case that a new sample is not take, overwrite unaccounted_bytes_allocated with bytes allocated since\n-  \/\/ the previous sample was taken (allocated - __last_sample_value).  Otherwise, overwrite unaccounted_byets_allocated\n+  \/\/ In the case that a new sample is not taken, overwrite unaccounted_bytes_allocated with bytes allocated since\n+  \/\/ the previous sample was taken (allocated - _last_sample_value).  Otherwise, overwrite unaccounted_bytes_allocated\n@@ -73,2 +73,2 @@\n-  \/\/ Return the instantaneous rate calculated from from (allocated - _last_sample_value) \/ (time - _last_sample_time).\n-  \/\/ Return Sentinel vlue 0.0 if (time - _last_sample_time) == 0 or if (allocated <= _last_sample_value).\n+  \/\/ Return the instantaneous rate calculated from (allocated - _last_sample_value) \/ (time - _last_sample_time).\n+  \/\/ Return Sentinel value 0.0 if (time - _last_sample_time) == 0 or if (allocated <= _last_sample_value).\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}