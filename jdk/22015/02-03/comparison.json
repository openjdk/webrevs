{"files":[{"patch":"@@ -84,0 +84,1 @@\n+  assert(_optional_groups.length() == 0, \"Should not have any optional groups yet\");\n@@ -358,2 +359,0 @@\n-    uint num_optional_regions = _optional_groups.num_regions();\n-\n@@ -579,1 +578,1 @@\n-  groups_to_abandon.abandon();\n+  groups_to_abandon.clear(true \/* uninstall_group_cardset *\/);\n@@ -655,1 +654,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,16 @@\n-void G1CSetCandidateGroup::clear() {\n+void G1CSetCandidateGroup::clear(bool uninstall_group_cardset) {\n+  if (uninstall_group_cardset) {\n+    for (G1CollectionSetCandidateInfo ci : _candidates) {\n+      G1HeapRegion* r = ci._r;\n+      r->uninstall_group_cardset();\n+      r->rem_set()->clear(true \/* only_cardset *\/);\n+    }\n+  }\n+#ifdef ASSERT\n+  else {\n+    for (G1CollectionSetCandidateInfo ci : _candidates) {\n+      G1HeapRegion* r = ci._r;\n+      assert(r->rem_set()->card_set() != &_card_set , \"Pre-condition!\");\n+    }\n+  }\n+#endif\n@@ -68,9 +83,0 @@\n-void G1CSetCandidateGroup::abandon() {\n-  for (G1CollectionSetCandidateInfo ci : _candidates) {\n-    G1HeapRegion* r = ci._r;\n-    r->uninstall_group_cardset();\n-    r->rem_set()->clear(true \/* only_cardset *\/);\n-  }\n-  clear();\n-}\n-\n@@ -163,10 +169,1 @@\n-void G1CSetCandidateGroupList::clear() {\n-  for (G1CSetCandidateGroup* gr : _groups) {\n-    gr->clear();\n-    delete gr;\n-  }\n-  _groups.clear();\n-  _num_regions = 0;\n-}\n-\n-void G1CSetCandidateGroupList::abandon() {\n+void G1CSetCandidateGroupList::clear(bool uninstall_group_cardset) {\n@@ -174,1 +171,1 @@\n-    gr->abandon();\n+    gr->clear(uninstall_group_cardset);\n@@ -247,0 +244,1 @@\n+  _retained_groups.clear();\n@@ -262,2 +260,2 @@\n-  _retained_groups.abandon();\n-  _from_marking_groups.abandon();\n+  _retained_groups.clear(true \/* uninstall_group_cardset *\/);\n+  _from_marking_groups.clear(true \/* uninstall_group_cardset *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-  \/\/\n@@ -111,3 +110,1 @@\n-  void clear();\n-\n-  void abandon();\n+  void clear(bool uninstall_group_cardset = false);\n@@ -135,4 +132,5 @@\n-  \/\/ Empty contents of the list.\n-  void clear();\n-\n-  void abandon();\n+  \/\/ Delete all groups from the list. The cardset cleanup for regions within the\n+  \/\/ groups could have been done elsewhere  (e.g. when adding groups to the\n+  \/\/ collection set or to retained regions). The uninstall_group_cardset is set to\n+  \/\/ true if cleanup needs to happen as we clear the groups from the list.\n+  void clear(bool uninstall_group_cardset = false);\n@@ -172,1 +170,1 @@\n-\/\/ Tracks all collection set candidates, i.e. regions that could\/should be evacuated soon.\n+\/\/ Tracks all collection set candidates, i.e. region groups that could\/should be evacuated soon.\n@@ -174,1 +172,1 @@\n-\/\/ These candidate regions are tracked in two list of regions, sorted by decreasing\n+\/\/ These candidate groups are tracked in two list of region groups, sorted by decreasing\n@@ -177,4 +175,4 @@\n-\/\/ * marking_regions: the set of regions selected by concurrent marking to be\n-\/\/                    evacuated to keep overall heap occupancy stable.\n-\/\/                    They are guaranteed to be evacuated and cleared out during\n-\/\/                    the mixed phase.\n+\/\/ * from_marking_groups: the set of region groups selected by concurrent marking to be\n+\/\/                        evacuated to keep overall heap occupancy stable.\n+\/\/                        They are guaranteed to be evacuated and cleared out during\n+\/\/                        the mixed phase.\n@@ -182,3 +180,3 @@\n-\/\/ * retained_regions: set of regions selected for evacuation during evacuation\n-\/\/                     failure.\n-\/\/                     Any young collection will try to evacuate them.\n+\/\/ * retained_groups: set of region groups selected for evacuation during evacuation\n+\/\/                    failure.\n+\/\/                    Any young collection will try to evacuate them.\n@@ -197,1 +195,4 @@\n-  G1CSetCandidateGroupList _retained_groups; \/\/ Set of regions retained due to evacuation failure.\n+  \/\/ Set of regions retained due to evacuation failure. Groups added to this list\n+  \/\/ should contain only one region, making it easier to evacuate retained regions\n+  \/\/ in any young collection.\n+  G1CSetCandidateGroupList _retained_groups;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -280,1 +280,1 @@\n-  product(uint, G1OldCSetGroupSize, 5, EXPERIMENTAL,         \\\n+  product(uint, G1OldCSetGroupSize, 5, EXPERIMENTAL,                        \\\n@@ -282,2 +282,4 @@\n-          \"All regions in a group will be evacuated in the same GC pause. The first group calculated after marking from marking candidates \"  \\\n-          \"may exceed this limit as it is calculated based on G1MixedGCCountTarget.\")       \\\n+          \"All regions in a group will be evacuated in the same GC pause.\"  \\\n+          \"The first group calculated after marking from marking \"          \\\n+          \"candidates may exceed this limit as it is calculated based on \"  \\\n+          \"G1MixedGCCountTarget.\")                                          \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}