{"files":[{"patch":"@@ -269,1 +269,1 @@\n-  for(G1CSetCandidateGroup* gr : _from_marking_groups){\n+  for (G1CSetCandidateGroup* gr : _from_marking_groups) {\n@@ -279,1 +279,1 @@\n-  if(num_infos == 0) {\n+  if (num_infos == 0) {\n@@ -409,1 +409,1 @@\n-            \"must be %u is %u\", hrm_index, (uint)_contains_map[hrm_index]);\n+             \"must be %u is %u\", hrm_index, (uint)_contains_map[hrm_index]);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,0 +157,5 @@\n+  \/\/ Removes any candidate groups stored in this list and also in the other list. The other\n+  \/\/ list may only contain candidate groups in this list, sorted by gc efficiency. It need\n+  \/\/ not be a prefix of this list.\n+  \/\/ E.g. if this list is \"A B G H\", the other list may be \"A G H\", but not \"F\" (not in\n+  \/\/ this list) or \"A H G\" (wrong order).\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}