{"files":[{"patch":"@@ -333,5 +333,5 @@\n-\/\/ The current mechanism for evacuting pinned old regions is a below:\n-\/\/ * pinned regions in marking collection set candidate (available during mixed gc) are evacuated like\n-\/\/   pinned young regions to avoid complexity of dealing with pinned regions that are part of a\n-\/\/   collection group sharing a single cardset. These regions will partially evacuated and added to the\n-\/\/   retained collection set by the handle evacuation failure mechanism.\n+\/\/ The current mechanism for evacuating pinned old regions is as below:\n+\/\/ * pinned regions in the marking collection set candidate list (available during mixed gc) are evacuated like\n+\/\/   pinned young regions to avoid the complexity of dealing with pinned regions that are part of a\n+\/\/   collection group sharing a single cardset. These regions will be partially evacuated and added to the\n+\/\/   retained collection set by the evacuation failure handling mechanism.\n@@ -339,2 +339,2 @@\n-\/\/   with no actual space freed in old gen. Better to concentrate on others. So we skipped over pinned\n-\/\/   regions in retained collection set candidates Retained collection set candidates are aged out, ie.\n+\/\/   with no actual space freed in old gen. Better to concentrate on others. So we skip over pinned\n+\/\/   regions in retained collection set candidates. Retained collection set candidates are aged out, ie.\n@@ -522,1 +522,1 @@\n-    G1CollectionSetCandidateInfo* ci = group->at(0); \/\/ we only have one region in the group\n+    G1CollectionSetCandidateInfo* ci = group->at(0); \/\/ We only have one region in the group.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-\/\/ Regions that are added to groups are either candidates from marking or regions retained during\n-\/\/ evacuation failure.\n+\/\/ Grouping occurs both for candidates from marking or regions retained during evacuation failure, but a group\n+\/\/ can not contain regions from both types of regions.\n@@ -65,1 +65,1 @@\n-\/\/ same group.\n+\/\/ same group saving memory.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -282,2 +282,2 @@\n-          \"These will be evacuated in the same GC pause. The first group \"  \\\n-          \"may exceed this limit depending on G1MixedGCCountTarget.\")       \\\n+          \"All regions in a group will be evacuated in the same GC pause. The first group calculated after marking from marking candidates \"  \\\n+          \"may exceed this limit as it is calculated based on G1MixedGCCountTarget.\")       \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}