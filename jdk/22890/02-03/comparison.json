{"files":[{"patch":"@@ -30,0 +30,1 @@\n+#include <unistd.h> \/\/ clang workaround for _exit - see FORBID macro.\n","filename":"src\/hotspot\/os\/posix\/forbiddenFunctions_posix.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include <stdlib.h> \/\/ clang workaround for exit, _exit - see FORBID macro.\n+#include <stdlib.h> \/\/ clang workaround for exit, _exit, _Exit - see FORBID macro.\n@@ -42,1 +42,4 @@\n-FORBID_IMPORTED_NORETURN_C_FUNCTION(void _exit(int), \"use os::_exit\")\n+FORBID_IMPORTED_NORETURN_C_FUNCTION(void _Exit(int), \"use os::exit\")\n+\n+\/\/ Windows puts _exit in <stdlib.h>, POSIX in <unistd.h>.\n+FORBID_IMPORTED_NORETURN_C_FUNCTION(void _exit(int), \"use os::exit\")\n@@ -53,1 +56,1 @@\n-\/\/ pointers.\n+\/\/ pointers.  We generally want allocation to be done through NMT.\n","filename":"src\/hotspot\/share\/utilities\/forbiddenFunctions.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}