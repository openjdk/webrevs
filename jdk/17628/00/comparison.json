{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -213,5 +213,2 @@\n-    private File findSocketFile(int pid, int ns_pid) {\n-        \/\/ A process may not exist in the same mount namespace as the caller.\n-        \/\/ Instead, attach relative to the target root filesystem as exposed by\n-        \/\/ procfs regardless of namespaces.\n-        String root = \"\/proc\/\" + pid + \"\/root\/\" + tmpdir;\n+    private File findSocketFile(int pid, int ns_pid) throws IOException {\n+        String root = findTargetProcessTmpDirectory(pid, ns_pid);\n@@ -233,9 +230,1 @@\n-            String root;\n-            if (pid != ns_pid) {\n-                \/\/ A process may not exist in the same mount namespace as the caller.\n-                \/\/ Instead, attach relative to the target root filesystem as exposed by\n-                \/\/ procfs regardless of namespaces.\n-                root = \"\/proc\/\" + pid + \"\/root\/\" + tmpdir;\n-            } else {\n-                root = tmpdir;\n-            }\n+            String root = findTargetProcessTmpDirectory(pid, ns_pid);\n@@ -248,0 +237,21 @@\n+    private String findTargetProcessTmpDirectory(int pid, int ns_pid) throws IOException {\n+        String root;\n+        if (pid != ns_pid) {\n+            \/\/ A process may not exist in the same mount namespace as the caller, e.g.\n+            \/\/ if we are trying to attach to a JVM process inside a container.\n+            \/\/ Instead, attach relative to the target root filesystem as exposed by\n+            \/\/ procfs regardless of namespaces.\n+            String procRootDirectory = \"\/proc\/\" + pid + \"\/root\";\n+            if (!Files.isReadable(Path.of(procRootDirectory))) {\n+                throw new IOException(\n+                        String.format(\"Unable to access root directory %s \" +\n+                          \"of target process %d\", procRootDirectory, pid));\n+            }\n+\n+            root = procRootDirectory + \"\/\" + tmpdir;\n+        } else {\n+            root = tmpdir;\n+        }\n+        return root;\n+    }\n+\n","filename":"src\/jdk.attach\/linux\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":25,"deletions":15,"binary":false,"changes":40,"status":"modified"}]}