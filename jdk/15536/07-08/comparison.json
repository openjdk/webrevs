{"files":[{"patch":"@@ -167,1 +167,1 @@\n-      \/\/ this edge case can only happend for Load nodes\n+      \/\/ this edge case can only happen for Load nodes\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8287284\n+ * @summary The phi of cnt is split from the inner to the outer loop,\n+            and then from outer loop to the inner loop again.\n+            This ended in a endless optimization cycle.\n+ *\n+ * @run main\/othervm -Xbatch -XX:-PartialPeelLoop -XX:CompileCommand=compileonly,compiler.c2.loopopts.TestSplitThruPhiInfinitely::run* compiler.c2.loopopts.TestSplitThruPhiInfinitely\n+\n+\n+\n+ *\/\n+package compiler.c2.loopopts;\n+\n+public class TestSplitThruPhiInfinitely {\n+\n+    public static int cnt = 1;\n+\n+    public static void run() {\n+        int j = 0;\n+        do {\n+            j = cnt;\n+            for (int k = 0; k < 20000; k++) {\n+                cnt += 2;\n+            }\n+        } while (++j < 10);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10; i++ ) {\n+            run();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSplitThruPhiInfinitely.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}