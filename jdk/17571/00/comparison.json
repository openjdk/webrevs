{"files":[{"patch":"@@ -726,6 +726,0 @@\n-bool DefNewGeneration::block_is_obj(const HeapWord* addr) const {\n-  return eden()->is_in(addr)\n-      || from()->is_in(addr)\n-      || to()  ->is_in(addr);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -260,4 +260,0 @@\n-  \/\/ Requires \"addr\" to be the start of a block, and returns \"TRUE\" iff\n-  \/\/ the block is an object.\n-  bool block_is_obj(const HeapWord* addr) const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -927,0 +927,1 @@\n+\n@@ -928,1 +929,3 @@\n-    return _young_gen->block_is_obj(addr);\n+    return _young_gen->eden()->is_in(addr)\n+        || _young_gen->from()->is_in(addr)\n+        || _young_gen->to()  ->is_in(addr);\n@@ -931,2 +934,2 @@\n-  assert(_old_gen->is_in_reserved(addr), \"Some generation should contain the address\");\n-  return _old_gen->block_is_obj(addr);\n+  assert(_old_gen->is_in_reserved(addr), \"must be in old-gen\");\n+  return addr < _old_gen->space()->top();\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -132,4 +132,0 @@\n-  \/\/ Requires \"addr\" to be the start of a block, and returns \"TRUE\" iff\n-  \/\/ the block is an object.\n-  inline bool block_is_obj(const HeapWord* addr) const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,4 +64,0 @@\n-bool TenuredGeneration::block_is_obj(const HeapWord* addr) const {\n-  return addr < _the_space->top();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}