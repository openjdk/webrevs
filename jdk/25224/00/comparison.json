{"files":[{"patch":"@@ -122,1 +122,1 @@\n-            throw new IllegalArgumentException(\"@\" + TAG_NAME + \" taglet content must be begin or end\");\n+            throw new IllegalArgumentException(\"@\" + TAG_NAME + \": unexpected content\");\n@@ -124,1 +124,1 @@\n-        reporter.print(Diagnostic.Kind.ERROR, \"@\" + TAG_NAME + \" taglet content must be begin or end\");\n+        reporter.print(Diagnostic.Kind.ERROR, \"@\" + TAG_NAME + \": unexpected content\");\n","filename":"make\/jdk\/src\/classes\/build\/tools\/taglet\/PreviewNote.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,3 +104,5 @@\n-    protected void addExtraSection(Content content) {\n-        addSummaryAPI(builder.getForRemoval(), HtmlIds.FOR_REMOVAL,\n-                TERMINALLY_DEPRECATED_KEY, \"doclet.Element\", content);\n+    protected void addContentsLinks(Content list) {\n+        if (!builder.getForRemoval().isEmpty()) {\n+            addContentsLink(HtmlIds.FOR_REMOVAL, \"doclet.Terminally_Deprecated\", list);\n+        }\n+        super.addContentsLinks(list);\n@@ -110,4 +112,5 @@\n-    protected void addExtraIndexLink(Content target) {\n-        if (!builder.getForRemoval().isEmpty()) {\n-            addIndexLink(HtmlIds.FOR_REMOVAL, \"doclet.Terminally_Deprecated\", target);\n-        }\n+    protected void addSummaries(Content content) {\n+        \/\/ Add terminally deprecated APIs before other deprecated APIs\n+        addSummaryAPI(builder.getForRemoval(), HtmlIds.FOR_REMOVAL,\n+                TERMINALLY_DEPRECATED_KEY, \"doclet.Element\", content);\n+        super.addSummaries(content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,2 @@\n-    protected void addExtraSection(Content content) {\n+    protected void addContentsLinks(Content list) {\n+        super.addContentsLinks(list);\n@@ -104,2 +105,1 @@\n-            addSummaryAPI(notes, HtmlId.of(\"preview-api-notes\"),\n-                    \"doclet.Preview_Notes_Elements\", \"doclet.Element\", content);\n+            addContentsLink(HtmlId.of(\"preview-api-notes\"), \"doclet.Preview_Notes\", list);\n@@ -110,3 +110,7 @@\n-    protected void addExtraIndexLink(Content target) {\n-        if (!builder.getElementNotes().isEmpty()) {\n-            addIndexLink(HtmlId.of(\"preview-api-notes\"), \"doclet.Preview_Notes\", target);\n+    protected void addSummaries(Content content) {\n+        var notes = builder.getElementNotes();\n+        super.addSummaries(content);\n+        \/\/ Add permanent APIs with preview notes below preview API tables\n+        if (!notes.isEmpty()) {\n+            addSummaryAPI(notes, HtmlId.of(\"preview-api-notes\"),\n+                    \"doclet.Preview_Notes\", \"doclet.Element\", content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,8 +149,3 @@\n-            content.add(getContentsList());\n-        }\n-        addExtraSection(content);\n-        for (SummaryElementKind kind : SummaryElementKind.values()) {\n-            if (builder.hasDocumentation(kind)) {\n-                addSummaryAPI(builder.getSet(kind), HtmlIds.forSummaryKind(kind),\n-                            getHeadingKey(kind), getHeaderKey(kind), content);\n-            }\n+            var ul= HtmlTree.UL(HtmlStyles.contentsList);\n+            addContentsLinks(ul);\n+            content.add(ul);\n@@ -158,0 +153,1 @@\n+        addSummaries(content);\n@@ -180,1 +176,14 @@\n-     * Add the index link.\n+     * Add the section links to the table of contents.\n+     *\n+     * @param list the table of contents list\n+     *\/\n+    protected void addContentsLinks(Content list) {\n+        for (SummaryElementKind kind : SummaryElementKind.values()) {\n+            if (builder.hasDocumentation(kind)) {\n+                addContentsLink(HtmlIds.forSummaryKind(kind), getHeadingKey(kind), list);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Add the link for a page section to the table of contents.\n@@ -186,1 +195,1 @@\n-    protected void addIndexLink(HtmlId id, String headingKey, Content content) {\n+    protected void addContentsLink(HtmlId id, String headingKey, Content content) {\n@@ -201,1 +210,1 @@\n-     * Get the contents list.\n+     * Add the API summary tables that represent the main content of the page.\n@@ -203,1 +212,1 @@\n-     * @return the contents list\n+     * @param content the content to add the tables to\n@@ -205,3 +214,1 @@\n-    public Content getContentsList() {\n-        var ul= HtmlTree.UL(HtmlStyles.contentsList);\n-        addExtraIndexLink(ul);\n+    protected void addSummaries(Content content) {\n@@ -210,1 +217,2 @@\n-                addIndexLink(HtmlIds.forSummaryKind(kind), getHeadingKey(kind), ul);\n+                addSummaryAPI(builder.getSet(kind), HtmlIds.forSummaryKind(kind),\n+                        getHeadingKey(kind), getHeaderKey(kind), content);\n@@ -213,1 +221,0 @@\n-        return ul;\n@@ -240,1 +247,1 @@\n-        if (apiList.size() > 0) {\n+        if (!apiList.isEmpty()) {\n@@ -322,8 +329,0 @@\n-    \/**\n-     * Add an extra optional section to the content.\n-     *\n-     * @param target the content to which the section should be added\n-     *\/\n-    protected void addExtraSection(Content target) {\n-    }\n-\n@@ -348,1 +347,1 @@\n-     * This methods does not add any content by returning {@code null}.\n+     * Return {@code null} for no extra content.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":27,"deletions":28,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -139,2 +139,1 @@\n-doclet.Preview_Notes=Preview API Notes\n-doclet.Preview_Notes_Elements=Elements containing Preview Notes\n+doclet.Preview_Notes=Permanent APIs affected by Preview Features\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,2 +242,3 @@\n-     * If set, the JavaDoc inline tag with the given name is considered\n-     * a preview note and added to the preview API page.\n+     * If set, the JavaDoc inline tag with the given name causes the\n+     * tagged element to be included in the preview API page as\n+     * permanent API affected by a preview feature.\n@@ -961,1 +962,1 @@\n-     * Name of inline tag for preview notes.\n+     * Name of inline tag for preview notes on permanent APIs.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,3 +125,2 @@\n-        }\n-        \/\/ If preview tag is defined map elements to preview tags\n-        if (previewNoteTag != null) {\n+        } else if (previewNoteTag != null) {\n+            \/\/ If preview tag is defined map elements to preview tags\n@@ -140,1 +139,1 @@\n-                    \/\/ Don't return true as this is not actual preview API.\n+                    return false; \/\/ Not part of preview API.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/PreviewAPIListBuilder.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -338,2 +338,2 @@\n-                    <li id=\"contents-preview-api-notes\"><a href=\"#preview-api-notes\">Preview API Notes<\/a><\/li>\n-                    <li id=\"contents-interface\"><a href=\"#interface\">Interfaces<\/a><\/li>\"\"\",\n+                    <li id=\"contents-interface\"><a href=\"#interface\">Interfaces<\/a><\/li>\n+                    <li id=\"contents-preview-api-notes\"><a href=\"#preview-api-notes\">Permanent APIs affected by Preview Features<\/a><\/li>\"\"\",\n@@ -341,1 +341,1 @@\n-                    <div class=\"caption\"><span>Elements containing Preview Notes<\/span><\/div>\"\"\",\n+                    <div class=\"caption\"><span>Permanent APIs affected by Preview Features<\/span><\/div>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}