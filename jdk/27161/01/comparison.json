{"files":[{"patch":"@@ -263,1 +263,0 @@\n-java\/awt\/Choice\/ChoiceMouseWheelTest\/ChoiceMouseWheelTest.java 8366852 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,9 +25,8 @@\n-  @test\n-  @key headful\n-  @bug 7050935\n-  @summary closed\/java\/awt\/Choice\/WheelEventsConsumed\/WheelEventsConsumed.html fails on win32\n-  @library ..\/..\/regtesthelpers\n-  @author Oleg Pekhovskiy: area=awt-choice\n-  @build Util\n-  @run main ChoiceMouseWheelTest\n-*\/\n+ * @test\n+ * @key headful\n+ * @bug 7050935\n+ * @summary closed\/java\/awt\/Choice\/WheelEventsConsumed\/WheelEventsConsumed.html fails on win32\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build Util\n+ * @run main ChoiceMouseWheelTest\n+ *\/\n@@ -37,2 +36,14 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Choice;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n@@ -45,0 +56,1 @@\n+    private final Choice choice;\n@@ -46,2 +58,7 @@\n-    public static void main(String[] args) {\n-        new ChoiceMouseWheelTest();\n+    public static void main(String[] args) throws Exception {\n+        ChoiceMouseWheelTest test = Util.invokeOnEDT(ChoiceMouseWheelTest::new);\n+        try {\n+            test.test();\n+        } finally {\n+            EventQueue.invokeAndWait(test::dispose);\n+        }\n@@ -54,2 +71,0 @@\n-        Choice choice = new Choice();\n-\n@@ -59,1 +74,1 @@\n-                System.exit(0);\n+                e.getWindow().dispose();\n@@ -63,2 +78,3 @@\n-        for(Integer i = 0; i < 50; i++) {\n-            choice.add(i.toString());\n+        choice = new Choice();\n+        for(int i = 0; i < 50; i++) {\n+            choice.add(Integer.toString(i));\n@@ -67,10 +83,2 @@\n-        choice.addItemListener(new ItemListener() {\n-            public void itemStateChanged(ItemEvent e) {\n-                itemChanged = true;\n-            }\n-        });\n-        choice.addMouseWheelListener(new MouseWheelListener() {\n-            public void mouseWheelMoved(MouseWheelEvent e) {\n-                wheelMoved = true;\n-            }\n-        });\n+        choice.addItemListener(e -> itemChanged = true);\n+        choice.addMouseWheelListener(e -> wheelMoved = true);\n@@ -87,0 +95,1 @@\n+        setLocationRelativeTo(null);\n@@ -89,0 +98,1 @@\n+    }\n@@ -90,4 +100,5 @@\n-        try {\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(20);\n-            Util.waitForIdle(robot);\n+    private void test() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(20);\n+        robot.waitForIdle();\n+        robot.delay(500);\n@@ -95,0 +106,1 @@\n+        Rectangle choiceBounds = Util.invokeOnEDT(() -> {\n@@ -97,2 +109,5 @@\n-            int x = pt.x + size.width \/ 3;\n-            robot.mouseMove(x, pt.y + size.height \/ 2);\n+            return new Rectangle(pt, size);\n+        });\n+\n+        int x = choiceBounds.x + choiceBounds.width \/ 3;\n+        robot.mouseMove(x, choiceBounds.y + choiceBounds.height \/ 2);\n@@ -100,2 +115,4 @@\n-            \/\/ Test mouse wheel over the choice\n-            String name = Toolkit.getDefaultToolkit().getClass().getName();\n+        \/\/ Test mouse wheel over the choice\n+        String name = Toolkit.getDefaultToolkit().getClass().getName();\n+        boolean isXtoolkit = name.equals(\"sun.awt.X11.XToolkit\");\n+        boolean isLWCToolkit = name.equals(\"sun.lwawt.macosx.LWCToolkit\");\n@@ -103,5 +120,4 @@\n-            \/\/ mouse wheel doesn't work for the choice on X11 and Mac, so skip it\n-            if(!name.equals(\"sun.awt.X11.XToolkit\")\n-               && !name.equals(\"sun.lwawt.macosx.LWCToolkit\")) {\n-                robot.mouseWheel(1);\n-                Util.waitForIdle(robot);\n+        \/\/ mouse wheel doesn't work for the choice on X11 and Mac, so skip it\n+        if (!isXtoolkit && !isLWCToolkit) {\n+            robot.mouseWheel(1);\n+            robot.waitForIdle();\n@@ -109,3 +125,2 @@\n-                if(!wheelMoved || !itemChanged) {\n-                    throw new RuntimeException(\"Mouse Wheel over the choice failed!\");\n-                }\n+            if (!wheelMoved || !itemChanged) {\n+                throw new RuntimeException(\"Mouse Wheel over the choice failed!\");\n@@ -113,0 +128,1 @@\n+        }\n@@ -114,5 +130,5 @@\n-            \/\/ Test mouse wheel over the drop-down list\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            Util.waitForIdle(robot);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            Util.waitForIdle(robot);\n+        \/\/ Test mouse wheel over the drop-down list\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n@@ -120,5 +136,1 @@\n-            int y = getLocationOnScreen().y + getSize().height;\n-            while(!frameExited && y >= 0) { \/\/ move to the bottom of drop-down list\n-                robot.mouseMove(x, --y);\n-                Util.waitForIdle(robot);\n-            }\n+        frameExited = false;\n@@ -126,3 +138,1 @@\n-            if(x < 0) {\n-                throw new RuntimeException(\"Could not enter drop-down list!\");\n-            }\n+        Rectangle frameBounds = Util.invokeOnEDT(this::getBounds);\n@@ -130,3 +140,5 @@\n-            y -= choice.getHeight() \/ 2;\n-            robot.mouseMove(x, y); \/\/ move to the last visible item in the drop-down list\n-            Util.waitForIdle(robot);\n+        int y = frameBounds.y + frameBounds.height;\n+        while (!frameExited && y >= frameBounds.y) { \/\/ move to the bottom of drop-down list\n+            robot.mouseMove(x, --y);\n+            robot.waitForIdle();\n+        }\n@@ -134,2 +146,3 @@\n-            robot.mouseWheel(choice.getItemCount()); \/\/ wheel to the last item\n-            Util.waitForIdle(robot);\n+        if (y < frameBounds.y) {\n+            throw new RuntimeException(\"Could not enter drop-down list!\");\n+        }\n@@ -137,6 +150,3 @@\n-            \/\/ click the last item\n-            itemChanged = false;\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            Util.waitForIdle(robot);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            Util.waitForIdle(robot);\n+        y -= choiceBounds.height \/ 2;\n+        robot.mouseMove(x, y); \/\/ move to the last visible item in the drop-down list\n+        robot.waitForIdle();\n@@ -144,3 +154,4 @@\n-            if(!itemChanged || choice.getSelectedIndex() != choice.getItemCount() - 1) {\n-                throw new RuntimeException(\"Mouse Wheel scroll position error!\");\n-            }\n+        int scrollDirection = isLWCToolkit ? -1 : 1;\n+        \/\/ wheel to the last item\n+        robot.mouseWheel(scrollDirection * choice.getItemCount());\n+        robot.waitForIdle();\n@@ -148,3 +159,9 @@\n-            dispose();\n-        } catch (AWTException e) {\n-            throw new RuntimeException(\"AWTException occurred - problem creating robot!\");\n+        \/\/ click the last item\n+        itemChanged = false;\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+\n+        if (!itemChanged || choice.getSelectedIndex() != choice.getItemCount() - 1) {\n+            throw new RuntimeException(\"Mouse Wheel scroll position error!\");\n@@ -154,1 +171,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceMouseWheelTest\/ChoiceMouseWheelTest.java","additions":92,"deletions":76,"binary":false,"changes":168,"status":"modified"}]}