{"files":[{"patch":"@@ -103,1 +103,1 @@\n-     *         0xFFFF bytes\n+     *         0xFFD1 bytes\n@@ -107,1 +107,1 @@\n-        if (name.length() > 0xFFFF) {\n+        if (name.length() > 0xFFD1) {\n@@ -523,1 +523,1 @@\n-     *         extra field data is greater than 0xFFFF bytes\n+     *         extra field data is greater than 0xFFD1 bytes\n@@ -544,1 +544,1 @@\n-            if (extra.length > 0xFFFF) {\n+            if (extra.length > 0xFFD1) {\n@@ -646,3 +646,3 @@\n-     * <p>ZIP entry comments have maximum length of 0xffff. If the length of the\n-     * specified comment string is greater than 0xFFFF bytes after encoding, only\n-     * the first 0xFFFF bytes are output to the ZIP file entry.\n+     * <p>ZIP entry comments have maximum length of 0xFFD1. If the length of the\n+     * specified comment string is greater than 0xFFD1 bytes after encoding, only\n+     * the first 0xFFD1 bytes are output to the ZIP file entry.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-     *  we simply use 65,535 (0xFFFF) for the purpose of this test.\n+     *  we simply use 65,489 (0xFFD1) for the purpose of this test.\n@@ -66,1 +66,1 @@\n-    static final int MAX_EXTRA_FIELD_SIZE = 65_535;\n+    static final int MAX_EXTRA_FIELD_SIZE = 65_489;\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/CenSizeTooLarge.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}