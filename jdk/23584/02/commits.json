[{"commit":{"message":"* kbarrett review - remove include previously used for debugging"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1SurvRateGroup.cpp"}],"sha":"fc2dde0cfee3592795ece7b84175eb6533501dcc"},{"commit":{"message":"* kbarrett review: do not change the type of loop variable\n* ayang review: use actual last value instead of prediction for newly allocated survivor rate groups"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1SurvRateGroup.cpp"}],"sha":"a09bc25e4a76cf657ee78b39d3ea2a54e198e255"},{"commit":{"message":"* remove whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1SurvRateGroup.cpp"}],"sha":"5c4ded01c1611a0c9f612bc2f9a565c547a6585a"},{"commit":{"message":"8349906\n\nHi all,\n\n  please review this change that tries to improve the survivor rate initial values for newly expanded regions.\n\nCurrently G1 uses `InitialSurvivorRate` as survivor rate for such regions, but it is typically a pretty bad choice because\n\n* it's rather conservative, estimating that 40% of region contents will survive\n* such a conservative value is kind of bad particularly in cases for regions that are expanded late in the mutator phase because they are not frequently updated (and with our running weights changes get propagated over a very long time), i.e. this 40% sticks for a long time\n* it is a random value, i.e. not particularly specific to the application.\n\nThe suggestion is to use the survivor rate for the last region we know the survivor rate already.\n\nTesting: gha, tier1-7 (with other changes)\n\nHth,\n  Thomas"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1SurvRateGroup.cpp"}],"sha":"c73c9202038d88a9c56be39f445d5177709170f9"}]