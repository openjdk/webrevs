{"files":[{"patch":"@@ -105,2 +105,7 @@\n-      request._sample_pc = frame->interpreter_frame_method();\n-      \/\/ Got the Method*.\n+      Method* const method = frame->interpreter_frame_method();\n+      assert(method != nullptr, \"invariant\");\n+      request._sample_pc = method;\n+      \/\/ Got the Method*. Validate bcp.\n+      if (!method->is_native() && !method->contains(static_cast<address>(request._sample_bcp))) {\n+        request._sample_bcp = frame->interpreter_frame_bcp();\n+      }\n@@ -128,3 +133,2 @@\n-  assert(p2i(request._sample_bcp) == 1 ||\n-    static_cast<const Method*>(request._sample_pc)->validate_bci_from_bcp(static_cast<address>(request._sample_bcp)) >= 0, \"invariant\");\n-  assert(p2i(request._sample_bcp) > 1 || static_cast<const Method*>(request._sample_pc)->is_native(), \"invariant\");\n+  assert(static_cast<const Method*>(request._sample_pc)->is_native() ||\n+         static_cast<const Method*>(request._sample_pc)->contains(static_cast<address>(request._sample_bcp)), \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampling.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-  const int bci = method->is_native() ? 0 : method->validate_bci_from_bcp(reinterpret_cast<address>(request._sample_bcp));\n+  const int bci = method->is_native() ? 0 : method->bci_from(reinterpret_cast<address>(request._sample_bcp));\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}