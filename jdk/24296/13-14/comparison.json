{"files":[{"patch":"@@ -210,1 +210,1 @@\n-      <setting name=\"enabled\" control=\"method-sampling-enabled\">false<\/setting>\n+      <setting name=\"enabled\">false<\/setting>\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-      <setting name=\"enabled\" control=\"method-sampling-enabled\">false<\/setting>\n+      <setting name=\"enabled\">false<\/setting>\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            \"UnsignedIntFlag\", \"UnsignedIntFlagChanged\", \"DoubleFlagChanged\", \"SafepointLatency\")\n+            \"UnsignedIntFlag\", \"UnsignedIntFlagChanged\", \"DoubleFlagChanged\")\n","filename":"test\/jdk\/jdk\/jfr\/event\/metadata\/TestLookForUntestedEvents.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.event.profiling;\n+\n+import java.time.Duration;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.Random;\n+\n+import jdk.jfr.consumer.RecordingStream;\n+import jdk.test.lib.jfr.EventNames;\n+\n+\/*\n+ * @test\n+ * @requires vm.flagless\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib\n+ * @modules jdk.jfr\/jdk.jfr.internal\n+ * @run main jdk.jfr.event.profiling.TestSafepointLatency\n+ *\/\n+public class TestSafepointLatency {\n+    \/\/ The SafepointLatency event is parasitic on the ExecutionSample mechanism.\n+    final static String EXECUTION_SAMPLE_EVENT = EventNames.ExecutionSample;\n+    final static String SAFEPOINT_LATENCY_EVENT = EventNames.SafepointLatency;\n+    final static CountDownLatch latch = new CountDownLatch(10);\n+    final static Random random = new Random();\n+    public static int publicizedValue = 4711;\n+\n+    public static void main(String[] args) throws Exception {\n+        try (RecordingStream rs = new RecordingStream()) {\n+            rs.enable(EXECUTION_SAMPLE_EVENT).withPeriod(Duration.ofMillis(1));\n+            rs.enable(SAFEPOINT_LATENCY_EVENT);\n+            rs.onEvent(SAFEPOINT_LATENCY_EVENT, e -> latch.countDown());\n+            rs.startAsync();\n+            Thread t = new Thread(TestSafepointLatency::callMethods);\n+            t.setDaemon(true);\n+            t.start();\n+            latch.await();\n+        }\n+    }\n+\n+    public static void callMethods() {\n+        while (latch.getCount() > 0) {\n+            publicizedValue += bar(publicizedValue);\n+        }\n+    }\n+\n+    private static int bar(int value) {\n+        return baz(value);\n+    }\n+\n+    private static int baz(int value) {\n+        return qux(value);\n+    }\n+\n+    private static int qux(int value) {\n+        return (value << 4) * random.nextInt();\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/event\/profiling\/TestSafepointLatency.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}