{"files":[{"patch":"@@ -28,3 +28,0 @@\n-import org.openjdk.jmh.runner.Runner;\n-import org.openjdk.jmh.runner.options.Options;\n-import org.openjdk.jmh.runner.options.OptionsBuilder;\n@@ -34,1 +31,0 @@\n-import java.lang.reflect.Field;\n@@ -44,1 +40,1 @@\n-@Warmup(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Warmup(iterations = 3, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n@@ -46,1 +42,1 @@\n-@Fork(value = 3, jvmArgs = {\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n+@Fork(value = 1, jvmArgs = {\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n@@ -50,6 +46,7 @@\n-    final static VarHandle INT_L  = MethodHandles.byteArrayViewVarHandle(int[].class , ByteOrder.LITTLE_ENDIAN);\n-    final static VarHandle INT_B  = MethodHandles.byteArrayViewVarHandle(int[].class , ByteOrder.BIG_ENDIAN);\n-    final static VarHandle LONG_L = MethodHandles.byteArrayViewVarHandle(long[].class, ByteOrder.LITTLE_ENDIAN);\n-    final static VarHandle LONG_B = MethodHandles.byteArrayViewVarHandle(long[].class, ByteOrder.BIG_ENDIAN);\n-    final static VarHandle CHAR_L = MethodHandles.byteArrayViewVarHandle(char[].class, ByteOrder.LITTLE_ENDIAN);\n-    final static VarHandle CHAR_B = MethodHandles.byteArrayViewVarHandle(char[].class, ByteOrder.BIG_ENDIAN);\n+    final static VarHandle\n+            INT_L  = MethodHandles.byteArrayViewVarHandle(int[].class , ByteOrder.LITTLE_ENDIAN),\n+            INT_B  = MethodHandles.byteArrayViewVarHandle(int[].class , ByteOrder.BIG_ENDIAN),\n+            LONG_L = MethodHandles.byteArrayViewVarHandle(long[].class, ByteOrder.LITTLE_ENDIAN),\n+            LONG_B = MethodHandles.byteArrayViewVarHandle(long[].class, ByteOrder.BIG_ENDIAN),\n+            CHAR_L = MethodHandles.byteArrayViewVarHandle(char[].class, ByteOrder.LITTLE_ENDIAN),\n+            CHAR_B = MethodHandles.byteArrayViewVarHandle(char[].class, ByteOrder.BIG_ENDIAN);\n@@ -214,5 +211,4 @@\n-        int sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntBU(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntBU(bytes4, off, ints[i]);\n+            off += 4;\n@@ -220,1 +216,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -225,5 +221,4 @@\n-        int sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            INT_B.set(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            INT_B.set(bytes4, off, ints[i]);\n+            off += 4;\n@@ -231,1 +226,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -236,5 +231,4 @@\n-        int sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntL(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntL(bytes4, off, ints[i]);\n+            off += 4;\n@@ -242,1 +236,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -247,5 +241,4 @@\n-        int sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntLU(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntLU(bytes4, off, ints[i]);\n+            off += 4;\n@@ -253,1 +246,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -258,5 +251,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            INT_L.set(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            INT_L.set(bytes4, off, ints[i]);\n+            off += 4;\n@@ -264,1 +256,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -269,5 +261,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntRB(bytes4, i * 4, ints[i]);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntRB(bytes4, off, ints[i]);\n+            off += 4;\n@@ -275,1 +266,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -280,5 +271,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntRBU(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntRBU(bytes4, off, ints[i]);\n+            off += 4;\n@@ -286,1 +276,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -291,5 +281,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntRL(bytes4, i * 4, ints[i]);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntRL(bytes4, off, ints[i]);\n+            off += 4;\n@@ -297,1 +286,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -302,5 +291,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            setIntRLU(bytes4, i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            setIntRLU(bytes4, off, ints[i]);\n+            off += 4;\n@@ -308,1 +296,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -313,6 +301,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            v = Integer.reverseBytes(v);\n-            UNSAFE.putInt(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            UNSAFE.putInt(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, Integer.reverseBytes(ints[i]));\n+            off += 4;\n@@ -320,1 +306,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -325,5 +311,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < ints.length; i++) {\n-            int v = ints[i];\n-            UNSAFE.putInt(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + i * 4, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = ints.length - 1; i >= 0; i--) {\n+            UNSAFE.putInt(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, ints[i]);\n+            off += 4;\n@@ -331,1 +316,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -445,5 +430,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongB(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongB(bytes8, off, longs[i]);\n+            off += 8;\n@@ -451,1 +435,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -456,5 +440,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongBU(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongBU(bytes8, off, longs[i]);\n+            off += 8;\n@@ -462,1 +445,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -467,5 +450,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            LONG_B.set(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            LONG_B.set(bytes8, off, longs[i]);\n+            off += 8;\n@@ -473,1 +455,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -478,5 +460,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongL(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongL(bytes8, off, longs[i]);\n+            off += 8;\n@@ -484,1 +465,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -489,5 +470,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongLU(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongLU(bytes8, off, longs[i]);\n+            off += 8;\n@@ -495,1 +475,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -500,5 +480,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            LONG_L.set(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            LONG_L.set(bytes8, off, longs[i]);\n+            off += 8;\n@@ -506,1 +485,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -511,5 +490,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongRB(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongRB(bytes8, off, longs[i]);\n+            off += 8;\n@@ -517,1 +495,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -522,5 +500,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongRBU(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongRBU(bytes8, off, longs[i]);\n+            off += 8;\n@@ -528,1 +505,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -533,5 +510,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongRL(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongRL(bytes8, off, longs[i]);\n+            off += 8;\n@@ -539,1 +515,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -544,5 +520,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            setLongRLU(bytes8, i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            setLongRLU(bytes8, off, longs[i]);\n+            off += 8;\n@@ -550,1 +525,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -555,6 +530,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            v = Long.reverseBytes(v);\n-            UNSAFE.putLong(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            UNSAFE.putLong(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, Long.reverseBytes(longs[i]));\n+            off += 8;\n@@ -562,1 +535,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -567,5 +540,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            long v = longs[i];\n-            UNSAFE.putLong(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + i * 8, v);\n-            sum += v;\n+        int off = 0;\n+        for (int i = longs.length - 1; i >= 0; i--) {\n+            UNSAFE.putLong(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, longs[i]);\n+            off += 8;\n@@ -573,1 +545,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -648,5 +620,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < chars.length; i++) {\n-            char c = chars[i];\n-            putShortB(bytes4, i * 2, c);\n-            sum += c;\n+        int off = 0;\n+        for (int i = chars.length - 1; i >= 0; i--) {\n+            putShortB(bytes4, off, chars[i]);\n+            off += 2;\n@@ -654,1 +625,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -659,5 +630,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < chars.length; i++) {\n-            char c = chars[i];\n-            CHAR_B.set(bytes4, i * 2, c);\n-            sum += c;\n+        int off = 0;\n+        for (int i = chars.length - 1; i >= 0; i--) {\n+            CHAR_B.set(bytes4, off, chars[i]);\n+            off += 2;\n@@ -665,1 +635,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -670,5 +640,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < chars.length; i++) {\n-            char c = chars[i];\n-            putShortL(bytes4, i * 2, c);\n-            sum += c;\n+        int off = 0;\n+        for (int i = chars.length - 1; i >= 0; i--) {\n+            putShortL(bytes4, off, chars[i]);\n+            off += 2;\n@@ -676,1 +645,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -681,5 +650,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < chars.length; i++) {\n-            char c = chars[i];\n-            CHAR_L.set(bytes4, i * 2, c);\n-            sum += c;\n+        int off = 0;\n+        for (int i = chars.length - 1; i >= 0; i--) {\n+            CHAR_L.set(bytes4, off, chars[i]);\n+            off += 2;\n@@ -687,1 +655,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -692,5 +660,4 @@\n-        long sum = 0;\n-        for (int i = 0; i < chars.length; i++) {\n-            char c = chars[i];\n-            UNSAFE.putChar(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + i * 2, c);\n-            sum += c;\n+        int off = 0;\n+        for (int i = chars.length - 1; i >= 0; i--) {\n+            UNSAFE.putChar(bytes4, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, chars[i]);\n+            off += 2;\n@@ -698,1 +665,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -702,1 +669,1 @@\n-     * putChars4 Test whether four constant chars can be MergeStored\n+     * putChars4 and putBytes4 Test whether four constant chars can be MergeStored\n@@ -705,0 +672,38 @@\n+    @Benchmark\n+    public void putBytes4(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putBytes4(bytes4, off, 'n', 'u', 'l', 'l');\n+        }\n+        BH.consume(off);\n+    }\n+\n+    @Benchmark\n+    public void putBytes4X(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putBytes4X(bytes4, off, 'n', 'u', 'l', 'l');\n+        }\n+        BH.consume(off);\n+    }\n+\n+    @Benchmark\n+    public void putBytes4U(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putBytes4U(bytes4, off, 'n', 'u', 'l', 'l');\n+        }\n+        BH.consume(off);\n+    }\n+\n+    @Benchmark\n+    @SuppressWarnings(\"deprecation\")\n+    public void putBytes4GetBytes(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            \"null\".getBytes(0, 4, bytes4, off);\n+            off += 4;\n+        }\n+        BH.consume(off);\n+    }\n+\n@@ -707,4 +712,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4B(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4B(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -712,1 +716,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -717,4 +721,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4BU(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4BU(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -722,1 +725,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -727,4 +730,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4BV(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4BV(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -732,1 +734,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -737,4 +739,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4L(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4L(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -742,1 +743,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -747,4 +748,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4LU(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4LU(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -752,1 +752,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -757,4 +757,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4LV(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4LV(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -762,1 +761,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -767,4 +766,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4C(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4C(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -772,1 +770,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -777,4 +775,3 @@\n-        long sum = 0;\n-        for (int i = 0; i < longs.length; i++) {\n-            putChars4S(bytes8, i * 4);\n-            sum += longs[i];\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            off = putChars4S(bytes8, off, 'n', 'u', 'l', 'l');\n@@ -782,1 +779,1 @@\n-        BH.consume(sum);\n+        BH.consume(off);\n@@ -1041,2 +1038,26 @@\n-    public void putChars4B(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n+    public int putBytes4(byte[] bytes, int offset, int c0, int c1, int c2, int c3) {\n+        bytes[offset    ] = (byte) c0;\n+        bytes[offset + 1] = (byte) c1;\n+        bytes[offset + 2] = (byte) c2;\n+        bytes[offset + 3] = (byte) c3;\n+        return offset + 4;\n+    }\n+\n+    public int putBytes4X(byte[] bytes, int offset, int c0, int c1, int c2, int c3) {\n+        bytes[offset++] = (byte) c0;\n+        bytes[offset++] = (byte) c1;\n+        bytes[offset++] = (byte) c2;\n+        bytes[offset++] = (byte) c3;\n+        return offset;\n+    }\n+\n+    public int putBytes4U(byte[] bytes, int offset, int c0, int c1, int c2, int c3) {\n+        final long address = Unsafe.ARRAY_BYTE_BASE_OFFSET + offset;\n+        UNSAFE.putByte(bytes, address    , (byte) c0);\n+        UNSAFE.putByte(bytes, address + 1, (byte) c1);\n+        UNSAFE.putByte(bytes, address + 2, (byte) c2);\n+        UNSAFE.putByte(bytes, address + 3, (byte) c3);\n+        return offset + 4;\n+    }\n+\n+    public int putChars4B(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n@@ -1047,0 +1068,1 @@\n+        return offset + 4;\n@@ -1049,2 +1071,1 @@\n-    public void putChars4BU(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n+    public int putChars4BU(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n@@ -1055,0 +1076,1 @@\n+        return offset + 4;\n@@ -1057,4 +1079,2 @@\n-    public void putChars4BV(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n-        offset <<= 1;\n-        CHAR_B.set(bytes, offset    , c0);\n+    public int putChars4BV(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n+        CHAR_B.set(bytes, offset     , c0);\n@@ -1064,0 +1084,1 @@\n+        return offset + 8;\n@@ -1066,2 +1087,1 @@\n-    public void putChars4L(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n+    public int putChars4L(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n@@ -1072,0 +1092,1 @@\n+        return offset + 4;\n@@ -1074,3 +1095,1 @@\n-    public void putChars4LV(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n-        offset <<= 1;\n+    public int putChars4LV(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n@@ -1081,0 +1100,1 @@\n+        return offset + 8;\n@@ -1083,2 +1103,1 @@\n-    public void putChars4LU(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n+    public int putChars4LU(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n@@ -1089,0 +1108,1 @@\n+        return offset + 4;\n@@ -1091,3 +1111,2 @@\n-    public void putChars4C(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n-        final long address = Unsafe.ARRAY_BYTE_BASE_OFFSET + (offset << 1);\n+    public int putChars4C(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n+        final long address = Unsafe.ARRAY_BYTE_BASE_OFFSET + offset;\n@@ -1098,0 +1117,1 @@\n+        return offset + 8;\n@@ -1100,3 +1120,2 @@\n-    public void putChars4S(byte[] bytes, int offset) {\n-        char c0 = 'n', c1 = 'u', c2 = 'l', c3 = 'l';\n-        final long address = Unsafe.ARRAY_BYTE_BASE_OFFSET + (offset << 1);\n+    public int putChars4S(byte[] bytes, int offset, char c0, char c1, char c2, char c3) {\n+        final long address = Unsafe.ARRAY_BYTE_BASE_OFFSET + offset;\n@@ -1107,0 +1126,1 @@\n+        return offset + 8;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStoreBench.java","additions":264,"deletions":244,"binary":false,"changes":508,"status":"modified"}]}