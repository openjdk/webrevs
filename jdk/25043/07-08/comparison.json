{"files":[{"patch":"@@ -53,8 +53,0 @@\n-    \/\/ Do not use a lambda in order to allow early use in the init sequence\n-    private static final Function<BasicKey, MethodHandle> UNDERLYING_MAKE_BASIC_HANDLE = new Function<>() {\n-        @Override\n-        public MethodHandle apply(BasicKey basicKey) {\n-            return makeBasicHandle(basicKey);\n-        }\n-    };\n-\n@@ -66,1 +58,1 @@\n-    private static final Function<BasicKey, MethodHandle> BASIC_HANDLE_CACHE;\n+    private static final Function<SegmentExtractorKey, MethodHandle> SEGMENT_EXTRACTION_HANDLE_CACHE;\n@@ -69,1 +61,1 @@\n-        final Set<BasicKey> inputs = new HashSet<>();\n+        final Set<SegmentExtractorKey> inputs = new HashSet<>();\n@@ -74,1 +66,1 @@\n-                inputs.add(new BasicKey(c, layout.name().orElseThrow()));\n+                inputs.add(new SegmentExtractorKey(c, layout.name().orElseThrow()));\n@@ -77,1 +69,10 @@\n-        BASIC_HANDLE_CACHE = StableValue.function(inputs, UNDERLYING_MAKE_BASIC_HANDLE);\n+\n+        \/\/ Do not use a lambda in order to allow early use in the init sequence\n+        final Function<SegmentExtractorKey, MethodHandle> segmentExtractionHandle = new Function<>() {\n+            @Override\n+            public MethodHandle apply(SegmentExtractorKey basicKey) {\n+                return makeSegmentExtractionHandle(basicKey);\n+            }\n+        };\n+\n+        SEGMENT_EXTRACTION_HANDLE_CACHE = StableValue.function(inputs, segmentExtractionHandle);\n@@ -84,1 +85,1 @@\n-    private record BasicKey(Class<?> returnType, String stateName) {\n+    private record SegmentExtractorKey(Class<?> returnType, String stateName) {\n@@ -86,1 +87,1 @@\n-        BasicKey(MethodHandle target, String stateName) {\n+        SegmentExtractorKey(MethodHandle target, String stateName) {\n@@ -109,11 +110,0 @@\n-        @Override\n-        public int hashCode() {\n-            return returnType.hashCode() ^ stateName.hashCode();\n-        }\n-\n-        @Override\n-        public boolean equals(Object obj) {\n-            return obj instanceof BasicKey(Class<?> oReturnType, String oStateName)\n-                    && returnType.equals(oReturnType)\n-                    && stateName.equals(oStateName);\n-        }\n@@ -196,1 +186,1 @@\n-        final BasicKey basicKey = new BasicKey(target, stateName);\n+        final SegmentExtractorKey key = new SegmentExtractorKey(target, stateName);\n@@ -199,1 +189,1 @@\n-        final MethodHandle basicHandle = BASIC_HANDLE_CACHE.apply(basicKey);\n+        final MethodHandle segmentExtractor = SEGMENT_EXTRACTION_HANDLE_CACHE.apply(key);\n@@ -205,1 +195,1 @@\n-        MethodHandle innerAdapted = MethodHandles.collectArguments(basicHandle, 0, target);\n+        MethodHandle innerAdapted = MethodHandles.collectArguments(segmentExtractor, 0, target);\n@@ -223,1 +213,1 @@\n-        MethodHandle cleanup = MethodHandles.identity(basicKey.returnType());\n+        MethodHandle cleanup = MethodHandles.identity(key.returnType());\n@@ -244,1 +234,1 @@\n-    private static MethodHandle makeBasicHandle(BasicKey basicKey) {\n+    private static MethodHandle makeSegmentExtractionHandle(SegmentExtractorKey segmentExtractorKey) {\n@@ -246,1 +236,1 @@\n-                MemoryLayout.PathElement.groupElement(basicKey.stateName()));\n+                MemoryLayout.PathElement.groupElement(segmentExtractorKey.stateName()));\n@@ -268,1 +258,1 @@\n-        if (basicKey.returnType().equals(int.class)) {\n+        if (segmentExtractorKey.returnType().equals(int.class)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CaptureStateUtil.java","additions":22,"deletions":32,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -15520,1 +15520,1 @@\n-            <uiIconRegion name=\"ErrorIcon\" subregion=\"true\" key=\"errorIcon\" basicKey=\"OptionPane.errorIcon\">\n+            <uiIconRegion name=\"ErrorIcon\" subregion=\"true\" key=\"errorIcon\" segmentExtractorKey=\"OptionPane.errorIcon\">\n@@ -15675,1 +15675,1 @@\n-            <uiIconRegion name=\"InformationIcon\" subregion=\"true\" key=\"informationIcon\" basicKey=\"OptionPane.informationIcon\">\n+            <uiIconRegion name=\"InformationIcon\" subregion=\"true\" key=\"informationIcon\" segmentExtractorKey=\"OptionPane.informationIcon\">\n@@ -15816,1 +15816,1 @@\n-            <uiIconRegion name=\"QuestionIcon\" subregion=\"true\" key=\"questionIcon\" basicKey=\"OptionPane.questionIcon\">\n+            <uiIconRegion name=\"QuestionIcon\" subregion=\"true\" key=\"questionIcon\" segmentExtractorKey=\"OptionPane.questionIcon\">\n@@ -15940,1 +15940,1 @@\n-            <uiIconRegion name=\"WarningIcon\" subregion=\"true\" key=\"warningIcon\" basicKey=\"OptionPane.warningIcon\">\n+            <uiIconRegion name=\"WarningIcon\" subregion=\"true\" key=\"warningIcon\" segmentExtractorKey=\"OptionPane.warningIcon\">\n@@ -23162,1 +23162,1 @@\n-            <uiIconRegion name=\"AscendingSortIcon\" subregion=\"true\" key=\"ascendingSortIcon\" basicKey=\"Table.ascendingSortIcon\">\n+            <uiIconRegion name=\"AscendingSortIcon\" subregion=\"true\" key=\"ascendingSortIcon\" segmentExtractorKey=\"Table.ascendingSortIcon\">\n@@ -23227,1 +23227,1 @@\n-            <uiIconRegion name=\"DescendingSortIcon\" subregion=\"true\" key=\"descendingSortIcon\" basicKey=\"Table.descendingSortIcon\">\n+            <uiIconRegion name=\"DescendingSortIcon\" subregion=\"true\" key=\"descendingSortIcon\" segmentExtractorKey=\"Table.descendingSortIcon\">\n@@ -27662,1 +27662,1 @@\n-            <uiIconRegion name=\"leafIcon\" subregion=\"true\" key=\"leafIcon\" basicKey=\"Tree.leafIcon\">\n+            <uiIconRegion name=\"leafIcon\" subregion=\"true\" key=\"leafIcon\" segmentExtractorKey=\"Tree.leafIcon\">\n@@ -27794,1 +27794,1 @@\n-            <uiIconRegion name=\"closedIcon\" subregion=\"true\" key=\"closedIcon\" basicKey=\"Tree.closedIcon\">\n+            <uiIconRegion name=\"closedIcon\" subregion=\"true\" key=\"closedIcon\" segmentExtractorKey=\"Tree.closedIcon\">\n@@ -28002,1 +28002,1 @@\n-                <uiIconRegion name=\"openIcon\" subregion=\"true\" key=\"openIcon\" basicKey=\"Tree.openIcon\">\n+                <uiIconRegion name=\"openIcon\" subregion=\"true\" key=\"openIcon\" segmentExtractorKey=\"Tree.openIcon\">\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-        assertEquals(\"Input not allowed: BasicKey[returnType=long, stateName=foo]\", wrongCaptureName.getMessage());\n+        assertEquals(\"Input not allowed: SegmentExtractorKey[returnType=long, stateName=foo]\", wrongCaptureName.getMessage());\n","filename":"test\/jdk\/java\/foreign\/TestCaptureStateUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}