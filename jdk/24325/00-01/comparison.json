{"files":[{"patch":"@@ -2533,1 +2533,0 @@\n-        Node* hook = new Node(1);\n@@ -2537,1 +2536,0 @@\n-        hook->add_req(new_base);\n@@ -2551,1 +2549,0 @@\n-                hook->add_req(new_phi);\n@@ -2569,6 +2566,0 @@\n-        \/\/ Already replace this phi node to cut it off from the graph to not interfere in dead loop checks during the\n-        \/\/ transformations of the new phi nodes below. Otherwise, we could wrongly conclude that there is no dead loop\n-        \/\/ because we are finding this phi node again. Also set the type of the new MergeMem node in case we are also\n-        \/\/ visiting it in the transformations below.\n-        igvn->replace_node(this, result);\n-        igvn->set_type(result, result->bottom_type());\n@@ -2580,1 +2571,1 @@\n-        hook->destruct(igvn);\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-  compiler\/itergvn\/ \\\n+  compiler\/igvn\/ \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"","filename":"test\/hotspot\/jtreg\/compiler\/igvn\/TestSplitPhiThroughMergeMem.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/hotspot\/jtreg\/compiler\/itergvn\/TestSplitPhiThroughMergeMem.java","status":"renamed"}]}