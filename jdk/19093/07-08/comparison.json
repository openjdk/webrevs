{"files":[{"patch":"@@ -2288,0 +2288,27 @@\n+\/\/ On Neoverse, MSUB uses the same ALU with other instructions (e.g. SDIV).\n+\/\/ The combination of MUL\/SUB can utilize multiple ALUs,\n+\/\/ and can be somewhat faster than MSUB.\n+void MacroAssembler::msub(Register Rd, Register Rn, Register Rm, Register Ra)\n+{\n+  if (VM_Version::supports_a53mac() && Ra != zr)\n+    nop();\n+  if (VM_Version::is_neoverse()) {\n+    mul(rscratch1, Rn, Rm);\n+    sub(Rd, Ra, rscratch1);\n+  } else {\n+    Assembler::msub(Rd, Rn, Rm, Ra);\n+  }\n+}\n+\n+void MacroAssembler::msubw(Register Rd, Register Rn, Register Rm, Register Ra)\n+{\n+  if (VM_Version::supports_a53mac() && Ra != zr)\n+    nop();\n+  if (VM_Version::is_neoverse()) {\n+    mulw(rscratch1, Rn, Rm);\n+    subw(Rd, Ra, rscratch1);\n+  } else {\n+    Assembler::msubw(Rd, Rn, Rm, Ra);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -445,27 +445,2 @@\n-  inline void msub(Register Rd, Register Rn, Register Rm, Register Ra) {\n-    if (VM_Version::supports_a53mac() && Ra != zr)\n-      nop();\n-    if (VM_Version::is_neoverse_family()) {\n-      \/* On Neoverse, MSUB uses the same ALU with other instructions (e.g. SDIV).\n-       * The combination of MUL\/SUB can utilize multiple ALUs,\n-       * and can be somewhat faster than MSUB. *\/\n-      mul(rscratch1, Rn, Rm);\n-      sub(Rd, Ra, rscratch1);\n-    } else {\n-      Assembler::msub(Rd, Rn, Rm, Ra);\n-    }\n-  }\n-\n-  inline void msubw(Register Rd, Register Rn, Register Rm, Register Ra) {\n-    if (VM_Version::supports_a53mac() && Ra != zr)\n-      nop();\n-    if (VM_Version::is_neoverse_family()) {\n-      \/* On Neoverse, MSUB uses the same ALU with other instructions (e.g. SDIV).\n-       * The combination of MUL\/SUB can utilize multiple ALUs,\n-       * and can be somewhat faster than MSUB. *\/\n-      mulw(rscratch1, Rn, Rm);\n-      subw(Rd, Ra, rscratch1);\n-    } else {\n-      Assembler::msubw(Rd, Rn, Rm, Ra);\n-    }\n-  }\n+  void msub(Register Rd, Register Rn, Register Rm, Register Ra);\n+  void msubw(Register Rd, Register Rn, Register Rm, Register Ra);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":2,"deletions":27,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-  if (is_neoverse_family()) {\n+  if (is_neoverse()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,2 +166,3 @@\n-  static bool is_neoverse_family() {\n-    switch(_cpu) {\n+\n+  static bool is_neoverse() {\n+    switch(_model) {\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}