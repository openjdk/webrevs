{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+  assert(requested_size <= SIZE_MAX - length, \"overflow\");\n@@ -132,0 +133,2 @@\n+  assert(items * x <= (size_t)1 << 31, \"unreasonable arena allocation size\");\n+  assert(items <= SIZE_MAX \/ x, \"overflow\");\n@@ -139,0 +142,8 @@\n+\/\/ Offsets a pointer with saturation to prevent overflow.\n+uintptr_t saturated_pointer_add(uintptr_t ptr, size_t size) {\n+  if (ptr > UINTPTR_MAX - size) {\n+    return UINTPTR_MAX;\n+  }\n+  return ptr + size;\n+}\n+\n@@ -143,3 +154,3 @@\n-  if( new_size <= old_size ) {  \/\/ Shrink in-place\n-    if( c_old+old_size == _hwm) \/\/ Attempt to free the excess bytes\n-      _hwm = c_old+new_size;    \/\/ Adjust hwm\n+  if (new_size <= old_size) {     \/\/ Shrink in-place\n+    if (c_old + old_size == _hwm) \/\/ Attempt to free the excess bytes\n+      _hwm = c_old + new_size;    \/\/ Adjust hwm\n@@ -149,0 +160,1 @@\n+  uintptr_t new_hwm = saturated_pointer_add((uintptr_t)c_old, new_size);\n@@ -150,4 +162,6 @@\n-  if( (c_old+old_size == _hwm) &&       \/\/ Adjusting recent thing\n-      (c_old+new_size <= _max) ) {      \/\/ Still fits where it sits\n-    _hwm = c_old+new_size;      \/\/ Adjust hwm\n-    return c_old;               \/\/ Return old pointer\n+  if ((c_old + old_size == _hwm) && \/\/ Adjusting recent thing\n+      ((char *)new_hwm <= _max) &&  \/\/ Still fits where it sits\n+      (new_hwm != UINTPTR_MAX)) {   \/\/ Did not overflow\n+\n+    _hwm = (char *)new_hwm; \/\/ Adjust hwm\n+    return c_old;           \/\/ Return old pointer\n","filename":"src\/hotspot\/share\/adlc\/adlArena.cpp","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,1 @@\n+  assert(x <= (size_t)1 << 31, \"unreasonable arena allocation size\");\n@@ -108,0 +109,1 @@\n+    assert(x <= SIZE_MAX - (8-1), \"overflow\");\n@@ -110,0 +112,1 @@\n+    assert(x <= SIZE_MAX - (4-1), \"overflow\");\n","filename":"src\/hotspot\/share\/adlc\/adlArena.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -314,1 +314,7 @@\n-\n+\/\/ Offsets a pointer with saturation to prevent overflow.\n+uintptr_t saturated_pointer_add(uintptr_t ptr, size_t size) {\n+  if (ptr > UINTPTR_MAX - size) {\n+    return UINTPTR_MAX;\n+  }\n+  return ptr + size;\n+}\n@@ -328,3 +334,3 @@\n-  if( new_size <= old_size ) {  \/\/ Shrink in-place\n-    if( c_old+old_size == _hwm) \/\/ Attempt to free the excess bytes\n-      _hwm = c_old+new_size;    \/\/ Adjust hwm\n+  if (new_size <= old_size) {     \/\/ Shrink in-place\n+    if (c_old + old_size == _hwm) \/\/ Attempt to free the excess bytes\n+      _hwm = c_old + new_size;    \/\/ Adjust hwm\n@@ -336,1 +342,1 @@\n-\n+  uintptr_t new_hwm = saturated_pointer_add((uintptr_t)c_old, corrected_new_size);\n@@ -338,4 +344,5 @@\n-  if( (c_old+old_size == _hwm) &&       \/\/ Adjusting recent thing\n-      (c_old+corrected_new_size <= _max) ) {      \/\/ Still fits where it sits\n-    _hwm = c_old+corrected_new_size;      \/\/ Adjust hwm\n-    return c_old;               \/\/ Return old pointer\n+  if ((c_old + old_size == _hwm) && \/\/ Adjusting recent thing\n+      ((char *)new_hwm <= _max) &&  \/\/ Still fits where it sits\n+      (new_hwm != UINTPTR_MAX)) {   \/\/ Did not overflow\n+    _hwm = (char *)new_hwm;         \/\/ Adjust hwm\n+    return c_old;                   \/\/ Return old pointer\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+    assert(x <= 2*G, \"unreasonable arena allocation size\");\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}