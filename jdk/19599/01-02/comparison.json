{"files":[{"patch":"@@ -36,0 +36,2 @@\n+import java.util.jar.Attributes;\n+import java.util.jar.Manifest;\n@@ -67,0 +69,16 @@\n+\n+        \/\/ Unfortunately, if there is a non-file entry in manifest, there will be\n+        \/\/ a false alarm. See https:\/\/bugs.openjdk.org\/browse\/JDK-8334261.\n+        var man = new Manifest();\n+        man.getMainAttributes().putValue(\"Manifest-Version\", \"1.0\");\n+        man.getEntries().computeIfAbsent(\"Hello\", _ -> new Attributes())\n+                .putValue(\"Foo\", \"Bar\");\n+        JarUtils.createJarFile(Path.of(\"b.jar\"),\n+                man,\n+                Path.of(\".\"),\n+                Path.of(\"a\"));\n+        SecurityTools.jarsigner(\"-storepass changeit -keystore ks b.jar x\");\n+        SecurityTools.jarsigner(\"-verbose -verify b.jar\")\n+                .shouldContain(\"Warning: nonexistent signed entries: [Hello]\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND);\n+\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/RemovedFiles.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8309841\n+ * @summary Unit Test for a common Test API in jdk.test.lib.util.JarUtils\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Set;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarFile;\n+import java.util.stream.Collectors;\n+\n+public class JarUtilsTest {\n+    public static void main(String[] args) throws Exception {\n+        Files.createDirectory(Path.of(\"bx\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"),\n+                Path.of(\".\"),\n+                Files.writeString(Path.of(\"a\"), \"\"),\n+                Files.writeString(Path.of(\"b1\"), \"\"),\n+                Files.writeString(Path.of(\"b2\"), \"\"),\n+                Files.writeString(Path.of(\"bx\/x\"), \"\"),\n+                Files.writeString(Path.of(\"c\"), \"\"));\n+        Asserts.assertEquals(content(\"a.jar\"), Set.of(\"a\", \"b1\", \"b2\", \"bx\/x\", \"c\"));\n+\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"a\");\n+        Asserts.assertEquals(content(\"a.jar\"), Set.of(\"b1\", \"b2\", \"bx\/x\", \"c\"));\n+\n+        \/\/ Note: b* covers everything starting with b, even bx\/x\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"b*\");\n+        Asserts.assertEquals(content(\"a.jar\"), Set.of(\"c\"));\n+    }\n+\n+    static Set<String> content(String name) throws IOException {\n+        try (var jf = new JarFile(name)) {\n+            return jf.stream().map(JarEntry::getName).collect(Collectors.toSet());\n+        }\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/lib\/util\/JarUtilsTest.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"}]}