{"files":[{"patch":"@@ -419,5 +419,12 @@\n-     * Reads all remaining characters as lines of text. A line is considered to\n-     * be terminated by any one of a line feed ('\\n'), a carriage return ('\\r'),\n-     * a carriage return followed immediately by a line feed, or by reaching the\n-     * end-of-stream. There is no empty line following a line terminator at the\n-     * end of a stream.\n+     * Reads all remaining characters as lines of text.\n+     * <p>\n+     * A <i>line<\/i> is either a sequence of zero or more characters\n+     * followed by a line terminator, or it is a sequence of one or\n+     * more characters followed by the end of the stream.\n+     * A line does not include the line terminator.\n+     * <p>\n+     * A <i>line terminator<\/i> is one of the following:\n+     * a line feed character {@code \"\\n\"} (U+000A),\n+     * a carriage return character {@code \"\\r\"} (U+000D),\n+     * or a carriage return followed immediately by a line feed\n+     * {@code \"\\r\\n\"} (U+000D U+000A).\n@@ -432,1 +439,1 @@\n-     * intended for reading a large number of characters.\n+     * intended for reading a large number of characters, for example, greater than 1G.\n@@ -435,1 +442,1 @@\n-     *             unmodifiable {@code List} in the order that they are read\n+     *             unmodifiable {@code List} of strings in the order they are read\n@@ -438,0 +445,2 @@\n+     * @throws     OutOfMemoryError  If the number of remaining characters exceeds the\n+     *              implementation limit for String.\n@@ -452,3 +461,3 @@\n-     * <p> This method reads all remaining content including the line separators\n-     * in the middle and\/or at the end. The resulting string will contain line\n-     * separators as they appear in the original content.\n+     * <p> This method reads all remaining characters including all line separators\n+     * to the end of the stream. The resulting string will contain line\n+     * separators as they appear in the stream.\n@@ -463,1 +472,1 @@\n-     * intended for reading a large number of characters.\n+     * intended for reading a large number of characters, for example, greater than 1G.\n@@ -468,2 +477,2 @@\n-     * @throws     OutOfMemoryError  If the remaining content is extremely\n-     *                               large, for example larger than {@code 2GB}\n+     * @throws     OutOfMemoryError  If the number of remaining characters exceeds the\n+     *              implementation limit for String.\n","filename":"src\/java.base\/share\/classes\/java\/io\/Reader.java","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"}]}