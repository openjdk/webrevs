{"files":[{"patch":"@@ -225,0 +225,11 @@\n+    public void colorSelectedFigures(Color color) {\n+        for (Figure figure :  model.getSelectedFigures()) {\n+            figure.setColor(color);\n+            FigureWidget figureWidget = getWidget(figure);\n+            if (figureWidget != null) {\n+                figureWidget.refreshColor();\n+            }\n+        }\n+        validateAll();\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,4 +29,1 @@\n-import java.awt.Component;\n-import java.awt.Graphics2D;\n-import java.awt.Point;\n-import java.awt.Rectangle;\n+import java.awt.*;\n@@ -92,0 +89,2 @@\n+\n+    void colorSelectedFigures(Color color);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.awt.event.ActionEvent;\n@@ -170,0 +171,2 @@\n+        toolBar.add(ColorAction.get(ColorAction.class));\n+        toolBar.addSeparator();\n@@ -352,0 +355,4 @@\n+    public void colorSelectedFigures(Color color) {\n+        scene.colorSelectedFigures(color);\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import java.awt.Color;\n+import javax.swing.JColorChooser;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n+\n+\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ColorAction\")\n+@ActionRegistration(displayName = \"#CTL_ColorAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 360),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-C\")\n+})\n+@Messages({\n+        \"CTL_ColorAction=Color action\",\n+        \"HINT_ColorAction=Color current set of selected nodes\"\n+})\n+public final class ColorAction extends ModelAwareAction {\n+\n+    @Override\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/color.gif\"; \/\/ NOI18N\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(ColorAction.class, \"HINT_ColorAction\");\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(ColorAction.class, \"CTL_ColorAction\");\n+    }\n+\n+    @Override\n+    public void performAction(DiagramViewModel model) {\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            Color selectedColor = JColorChooser.showDialog(null, \"Choose a Color\", Color.WHITE);\n+            if (selectedColor != null) {\n+                editor.colorSelectedFigures(selectedColor);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model != null && !model.getSelectedNodes().isEmpty();\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ColorAction.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -187,0 +187,4 @@\n+    public void refreshColor() {\n+        middleWidget.setBackground(figure.getColor());\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/FigureWidget.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/color.gif","binary":true,"status":"added"}]}