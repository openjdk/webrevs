{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.awt.Font;\n@@ -43,1 +44,0 @@\n-\n@@ -89,1 +89,39 @@\n-    ColorAction() {\n+    public ColorAction() {\n+        \/\/ Store the current look and feel\n+        String originalLookAndFeel = UIManager.getLookAndFeel().getClass().getName();\n+\n+        try {\n+            \/\/ Set Look and Feel\n+            \/\/UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+            \/\/UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+            \/\/UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+\n+            \/\/ Set a default font to avoid NullPointerException with certain Look and Feels\n+            Font defaultFont = new Font(\"Dialog\", Font.PLAIN, 12);\n+            UIManager.put(\"Button.font\", defaultFont);\n+            UIManager.put(\"ColorChooser.font\", defaultFont);\n+            UIManager.put(\"TabbedPane.font\", defaultFont); \/\/ if tabbed panes are used\n+\n+            \/\/ Initialize components with the custom Look and Feel\n+            initializeComponents();\n+\n+            \/\/ Update the UI for the button and color chooser to apply the new Look and Feel\n+            SwingUtilities.updateComponentTreeUI(selectedColorButton);\n+            SwingUtilities.updateComponentTreeUI(colorChooser);\n+\n+        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {\n+            e.printStackTrace();\n+        } finally {\n+            try {\n+                \/\/ Restore the original Look and Feel for the rest of the application\n+                UIManager.setLookAndFeel(originalLookAndFeel);\n+\n+                \/\/ Do not update `selectedColorButton` and `colorChooser` back to the original LAF\n+\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        }\n+    }\n+    private void initializeComponents() {\n@@ -93,0 +131,1 @@\n+        selectedColorButton.setContentAreaFilled(true); \/\/ Ensures content is filled without rounded edges\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ColorAction.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}