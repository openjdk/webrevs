{"files":[{"patch":"@@ -29,1 +29,5 @@\n-import javax.swing.JColorChooser;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import javax.swing.*;\n@@ -66,1 +70,41 @@\n-    @Override\n+    private static final ArrayList<Color> colors = new ArrayList<>(Arrays.asList(\n+            Color.RED,\n+            Color.ORANGE,\n+            Color.YELLOW,\n+            Color.GREEN,\n+            Color.CYAN,\n+            Color.BLUE,\n+            Color.MAGENTA,\n+            Color.PINK,\n+            Color.DARK_GRAY,\n+            Color.GRAY,\n+            Color.LIGHT_GRAY,\n+            Color.WHITE\n+    ));\n+\n+    private static final JButton selectedColorButton = new JButton();\n+    private static final JColorChooser colorChooser = new JColorChooser(Color.WHITE);\n+\n+    ColorAction() {\n+        selectedColorButton.setPreferredSize(new Dimension(32, 32));\n+        selectedColorButton.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK));\n+        selectedColorButton.setOpaque(true);\n+        selectedColorButton.setBackground(Color.WHITE);\n+\n+        \/\/ Add a ChangeListener to react to color selection changes\n+        colorChooser.getSelectionModel().addChangeListener(e -> {\n+            Color selectedColor = colorChooser.getColor();\n+            if (selectedColor != null) {\n+                selectedColorButton.setBackground(selectedColor);\n+            }\n+        });\n+\n+        \/\/ Create a panel to display recent colors\n+        JPanel recentColorsPanel = new JPanel();\n+        recentColorsPanel.setLayout(new FlowLayout(FlowLayout.LEFT));\n+        updateColorsPanel(recentColorsPanel);\n+\n+        \/\/ Add recent colors panel below the color chooser\n+        colorChooser.setPreviewPanel(recentColorsPanel);\n+    }\n+\n@@ -70,4 +114,29 @@\n-            Color selectedColor = JColorChooser.showDialog(null, \"Choose a Color\", Color.WHITE);\n-            if (selectedColor != null) {\n-                editor.colorSelectedFigures(selectedColor);\n-            }\n+            \/\/ Create the dialog with an OK button to select the color\n+            JDialog dialog = JColorChooser.createDialog(\n+                    null,\n+                    \"Choose a Color\",\n+                    true,\n+                    colorChooser,\n+                    e -> {\n+                        \/\/ OK button action\n+                        Color selectedColor = selectedColorButton.getBackground();\n+                        if (selectedColor != null) {\n+                            editor.colorSelectedFigures(selectedColor);\n+                        }\n+                    },\n+                    null \/\/ Cancel button action\n+            );\n+            dialog.setVisible(true);\n+        }\n+    }\n+\n+    private void updateColorsPanel(JPanel panel) {\n+        panel.removeAll();\n+        for (Color color : colors) {\n+            JButton colorButton = new JButton();\n+            colorButton.setBackground(color);\n+            colorButton.setOpaque(true);\n+            colorButton.setPreferredSize(new Dimension(16, 16));\n+            colorButton.setBorder(BorderFactory.createLineBorder(Color.BLACK));\n+            colorButton.addActionListener(e -> selectedColorButton.setBackground(color));\n+            panel.add(colorButton);\n@@ -75,0 +144,3 @@\n+        panel.add(selectedColorButton, 0);\n+        panel.revalidate();\n+        panel.repaint();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ColorAction.java","additions":78,"deletions":6,"binary":false,"changes":84,"status":"modified"}]}