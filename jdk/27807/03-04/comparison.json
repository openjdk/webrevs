{"files":[{"patch":"@@ -43,1 +43,1 @@\n-public final class AES_Crypt extends SymmetricCipher {\n+final class AES_Crypt extends SymmetricCipher {\n@@ -49,2 +49,0 @@\n-    private static final int AES_128_NKEYS = 16;\n-\n@@ -52,2 +50,0 @@\n-    private static final int AES_192_NKEYS = 24;\n-\n@@ -55,1 +51,0 @@\n-    private static final int AES_256_NKEYS = 32;\n@@ -871,2 +866,6 @@\n-        return len == AES_128_NKEYS || len == AES_192_NKEYS\n-                || len == AES_256_NKEYS;\n+        for (int kLength : AESConstants.AES_KEYSIZES) {\n+            if (len == kLength) {\n+                return true;\n+            }\n+        }\n+        return false;\n@@ -895,15 +894,12 @@\n-        switch (key.length) {\n-            case AES_128_NKEYS -> {\n-                rounds = AES_128_ROUNDS;\n-                nk = AES_128_NKEYS\/WB;\n-            }\n-            case AES_192_NKEYS -> {\n-                rounds = AES_192_ROUNDS;\n-                nk = AES_192_NKEYS\/WB;\n-            }\n-            case AES_256_NKEYS -> {\n-                rounds = AES_256_ROUNDS;\n-                nk = AES_256_NKEYS\/WB;\n-            }\n-            default -> throw new InvalidKeyException(\n-                    \"Invalid key length (\" + key.length + \").\");\n+        if (key.length == AESConstants.AES_KEYSIZES[0]) {\n+            rounds = AES_128_ROUNDS;\n+            nk = AESConstants.AES_KEYSIZES[0]\/WB;\n+        } else if (key.length == AESConstants.AES_KEYSIZES[1]) {\n+            rounds = AES_192_ROUNDS;\n+            nk = AESConstants.AES_KEYSIZES[1]\/WB;\n+        } else if (key.length == AESConstants.AES_KEYSIZES[2]) {\n+            rounds = AES_256_ROUNDS;\n+            nk = AESConstants.AES_KEYSIZES[2]\/WB;\n+        } else {\n+            throw new InvalidKeyException(\"Invalid key length (\" + key.length\n+                    + \").\");\n@@ -918,0 +914,2 @@\n+            sessionK[0] = genRKeys(key, nk);\n+            sessionK[1] = invGenRKeys();\n@@ -921,2 +919,0 @@\n-            sessionK[0] = genRKeys(key, nk);\n-            sessionK[1] = invGenRKeys();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AES_Crypt.java","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"}]}