{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 SAP SE. All rights reserved.\n@@ -2483,0 +2483,2 @@\n+    Register mdo = klass_RInfo;\n+    metadata2reg(md->constant_encoding(), mdo);\n@@ -2486,2 +2488,0 @@\n-    Register mdo = klass_RInfo;\n-    metadata2reg(md->constant_encoding(), mdo);\n@@ -2493,0 +2493,8 @@\n+\n+    NearLabel update_done;\n+    Register recv = k_RInfo;\n+    __ load_klass(recv, obj);\n+    type_profile_helper(mdo, md, data, recv, Rtmp1, &update_done);\n+    Address counter_addr(mdo, md->byte_offset_of_slot(data, CounterData::count_offset()));\n+    __ add2mem_64(counter_addr, DataLayout::counter_increment, Rtmp1);\n+    __ bind(update_done);\n@@ -2497,3 +2505,2 @@\n-  NearLabel profile_cast_failure, profile_cast_success;\n-  Label *failure_target = op->should_profile() ? &profile_cast_failure : failure;\n-  Label *success_target = op->should_profile() ? &profile_cast_success : success;\n+  Label *failure_target = failure;\n+  Label *success_target = success;\n@@ -2539,1 +2546,0 @@\n-      CHECK_BAILOUT2(profile_cast_failure, profile_cast_success);\n@@ -2545,16 +2551,1 @@\n-  if (op->should_profile()) {\n-    Register mdo = klass_RInfo, recv = k_RInfo;\n-    assert_different_registers(obj, mdo, recv);\n-    __ bind(profile_cast_success);\n-    metadata2reg(md->constant_encoding(), mdo);\n-    __ load_klass(recv, obj);\n-    type_profile_helper(mdo, md, data, recv, Rtmp1, success);\n-    __ branch_optimized(Assembler::bcondAlways, *success);\n-\n-    __ bind(profile_cast_failure);\n-    metadata2reg(md->constant_encoding(), mdo);\n-    __ add2mem_64(Address(mdo, md->byte_offset_of_slot(data, CounterData::count_offset())), -(int)DataLayout::counter_increment, Rtmp1);\n-    __ branch_optimized(Assembler::bcondAlways, *failure);\n-  } else {\n-    __ branch_optimized(Assembler::bcondAlways, *success);\n-  }\n+  __ branch_optimized(Assembler::bcondAlways, *success);\n@@ -2590,3 +2581,3 @@\n-    NearLabel profile_cast_success, profile_cast_failure, done;\n-    Label *success_target = op->should_profile() ? &profile_cast_success : &done;\n-    Label *failure_target = op->should_profile() ? &profile_cast_failure : stub->entry();\n+    NearLabel done;\n+    Label *success_target = &done;\n+    Label *failure_target = stub->entry();\n@@ -2595,0 +2586,2 @@\n+      Register mdo = klass_RInfo;\n+      metadata2reg(md->constant_encoding(), mdo);\n@@ -2598,2 +2591,0 @@\n-      Register mdo = klass_RInfo;\n-      metadata2reg(md->constant_encoding(), mdo);\n@@ -2605,0 +2596,8 @@\n+\n+      NearLabel update_done;\n+      Register recv = k_RInfo;\n+      __ load_klass(recv, value);\n+      type_profile_helper(mdo, md, data, recv, Rtmp1, &update_done);\n+      Address counter_addr(mdo, md->byte_offset_of_slot(data, CounterData::count_offset()));\n+      __ add2mem_64(counter_addr, DataLayout::counter_increment, Rtmp1);\n+      __ bind(update_done);\n@@ -2622,1 +2621,0 @@\n-    CHECK_BAILOUT3(profile_cast_success, profile_cast_failure, done);\n@@ -2626,15 +2624,0 @@\n-    if (op->should_profile()) {\n-      Register mdo = klass_RInfo, recv = k_RInfo;\n-      assert_different_registers(value, mdo, recv);\n-      __ bind(profile_cast_success);\n-      metadata2reg(md->constant_encoding(), mdo);\n-      __ load_klass(recv, value);\n-      type_profile_helper(mdo, md, data, recv, Rtmp1, &done);\n-      __ branch_optimized(Assembler::bcondAlways, done);\n-\n-      __ bind(profile_cast_failure);\n-      metadata2reg(md->constant_encoding(), mdo);\n-      __ add2mem_64(Address(mdo, md->byte_offset_of_slot(data, CounterData::count_offset())), -(int)DataLayout::counter_increment, Rtmp1);\n-      __ branch_optimized(Assembler::bcondAlways, *stub->entry());\n-    }\n-\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":28,"deletions":45,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 SAP SE. All rights reserved.\n@@ -450,3 +450,0 @@\n-\n-  \/\/ Profile the failure of the check.\n-  profile_typecheck_failed(Rtmp1, Rtmp2);\n@@ -1428,1 +1425,1 @@\n-    record_klass_in_profile(receiver, mdp, reg2, true);\n+    record_klass_in_profile(receiver, mdp, reg2);\n@@ -1451,1 +1448,1 @@\n-                                        Label& done, bool is_virtual_call) {\n+                                        Label& done) {\n@@ -1453,3 +1450,1 @@\n-    if (is_virtual_call) {\n-      increment_mdp_data_at(mdp, in_bytes(CounterData::count_offset()));\n-    }\n+    increment_mdp_data_at(mdp, in_bytes(CounterData::count_offset()));\n@@ -1490,10 +1485,6 @@\n-        if (is_virtual_call) {\n-          z_brz(found_null);\n-          \/\/ Receiver did not match any saved receiver and there is no empty row for it.\n-          \/\/ Increment total counter to indicate polymorphic case.\n-          increment_mdp_data_at(mdp, in_bytes(CounterData::count_offset()));\n-          z_bru(done);\n-          bind(found_null);\n-        } else {\n-          z_brnz(done);\n-        }\n+        z_brz(found_null);\n+        \/\/ Receiver did not match any saved receiver and there is no empty row for it.\n+        \/\/ Increment total counter to indicate polymorphic case.\n+        increment_mdp_data_at(mdp, in_bytes(CounterData::count_offset()));\n+        z_bru(done);\n+        bind(found_null);\n@@ -1506,1 +1497,1 @@\n-      record_klass_in_profile_helper(receiver, mdp, reg2, start_row + 1, done, is_virtual_call);\n+      record_klass_in_profile_helper(receiver, mdp, reg2, start_row + 1, done);\n@@ -1553,2 +1544,1 @@\n-                                                        Register mdp, Register reg2,\n-                                                        bool is_virtual_call) {\n+                                                        Register mdp, Register reg2) {\n@@ -1558,1 +1548,1 @@\n-  record_klass_in_profile_helper(receiver, mdp, reg2, 0, done, is_virtual_call);\n+  record_klass_in_profile_helper(receiver, mdp, reg2, 0, done);\n@@ -1618,18 +1608,0 @@\n-void InterpreterMacroAssembler::profile_typecheck_failed(Register mdp, Register tmp) {\n-  if (ProfileInterpreter && TypeProfileCasts) {\n-    Label profile_continue;\n-\n-    \/\/ If no method data exists, go to profile_continue.\n-    test_method_data_pointer(mdp, profile_continue);\n-\n-    int count_offset = in_bytes(CounterData::count_offset());\n-    \/\/ Back up the address, since we have already bumped the mdp.\n-    count_offset -= in_bytes(VirtualCallData::virtual_call_data_size());\n-\n-    \/\/ *Decrement* the counter. We expect to see zero or small negatives.\n-    increment_mdp_data_at(mdp, count_offset, tmp, true);\n-\n-    bind (profile_continue);\n-  }\n-}\n-\n@@ -1649,1 +1621,1 @@\n-      record_klass_in_profile(klass, mdp, reg2, false);\n+      record_klass_in_profile(klass, mdp, reg2);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":15,"deletions":43,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 SAP SE. All rights reserved.\n@@ -284,1 +284,1 @@\n-                               Register reg2, bool is_virtual_call);\n+                               Register reg2);\n@@ -287,1 +287,1 @@\n-                                      Label& done, bool is_virtual_call);\n+                                      Label& done);\n@@ -304,1 +304,0 @@\n-  void profile_typecheck_failed(Register mdp, Register tmp);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 SAP SE. All rights reserved.\n@@ -570,1 +570,0 @@\n-  static bool profile_all_receivers_at_type_check() { return false; }\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}