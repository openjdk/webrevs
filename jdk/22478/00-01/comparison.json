{"files":[{"patch":"@@ -35,1 +35,0 @@\n-import java.nio.file.Paths;\n@@ -67,2 +66,2 @@\n-        try (BufferedReader bufferedReader =\n-                         Files.newBufferedReader(Paths.get(controller.path(), param))) {\n+        Path filePath = Path.of(controller.path(), param);\n+        try (BufferedReader bufferedReader = Files.newBufferedReader(filePath)) {\n@@ -98,1 +97,1 @@\n-            Path filePath = Paths.get(controller.path(), param);\n+            Path filePath = Path.of(controller.path(), param);\n@@ -167,1 +166,1 @@\n-        try (Stream<String> lines = Files.lines(Paths.get(controller.path(), param))) {\n+        try (Stream<String> lines = Files.lines(Path.of(controller.path(), param))) {\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemController.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.security.PrivilegedExceptionAction;\n@@ -117,0 +118,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -119,7 +121,12 @@\n-            Class<?> t = getTrampolineClass();\n-            Class<?>[] types = {\n-                    Method.class, Object.class, Object[].class\n-            };\n-            Method b = t.getDeclaredMethod(\"invoke\", types);\n-            b.setAccessible(true);\n-            return b;\n+            return AccessController.doPrivileged(\n+                new PrivilegedExceptionAction<Method>() {\n+                    public Method run() throws Exception {\n+                        Class<?> t = getTrampolineClass();\n+                        Class<?>[] types = {\n+                            Method.class, Object.class, Object[].class\n+                        };\n+                        Method b = t.getDeclaredMethod(\"invoke\", types);\n+                        b.setAccessible(true);\n+                        return b;\n+                    }\n+                });\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/misc\/MethodUtil.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-        Perf perf =  Perf.getPerf();\n+        Perf perf = Perf.getPerf();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/VMManagementImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}