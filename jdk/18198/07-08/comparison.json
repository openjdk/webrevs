{"files":[{"patch":"@@ -1812,0 +1812,1 @@\n+\n@@ -1813,3 +1814,3 @@\n-\/\/ Simplify a Bool (convert condition codes to boolean (1 or 0)) node,\n-\/\/ based on local information.   If the input is constant, do it.\n-const Type* BoolNode::Value(PhaseGVN* phase) const {\n+\/\/ Change ((x & m) u<= m) or ((m & x) u<= m) to always true\n+\/\/ Same with ((x & m) u< m+1) and ((m & x) u< m+1)\n+const Type* BoolNode::Value_cmpu_and_mask(PhaseValues* phase) const {\n@@ -1817,2 +1818,1 @@\n-  if (cmp != nullptr && cmp->is_Sub()) {\n-    int cop = cmp->Opcode();\n+  if (cmp != nullptr && cmp->Opcode() == Op_CmpU) {\n@@ -1822,3 +1822,1 @@\n-    \/\/ Change ((x & m) u<= m) or ((m & x) u<= m) to always true\n-    \/\/ Same with ((x & m) u< m+1) and ((m & x) u< m+1)\n-    if (cop == Op_CmpU && cmp1->Opcode() == Op_AndI) {\n+    if (cmp1->Opcode() == Op_AndI) {\n@@ -1838,0 +1836,11 @@\n+  return nullptr;\n+}\n+\n+\/\/ Simplify a Bool (convert condition codes to boolean (1 or 0)) node,\n+\/\/ based on local information.   If the input is constant, do it.\n+const Type* BoolNode::Value(PhaseGVN* phase) const {\n+  const Type* t = Value_cmpu_and_mask(phase);\n+  if (t != nullptr) {\n+    return t;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -350,0 +350,1 @@\n+  const Type* Value_cmpu_and_mask(PhaseValues* phase) const;\n","filename":"src\/hotspot\/share\/opto\/subnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}