{"files":[{"patch":"@@ -79,0 +79,1 @@\n+        LOG_NO_MAIN_SCRIPTS,\n@@ -222,0 +223,4 @@\n+                .task(PkgPackageTaskID.LOG_NO_MAIN_SCRIPTS)\n+                        .action(this::logNoMainScripts)\n+                        .addDependent(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n@@ -359,0 +364,6 @@\n+    private void logNoMainScripts() {\n+        MacPkgInstallerScripts.createAppScripts()\n+                .setResourceDir(env)\n+                .logNoMainScripts();\n+    }\n+\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgPackager.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -108,0 +108,7 @@\n+    String getPrintableCategory() {\n+        if (category != null) {\n+            return String.format(\"[%s]\", category);\n+        }\n+        return \"\";\n+    }\n+\n@@ -235,3 +242,0 @@\n-        Log.verbose(I18N.format(\"message.no-default-resource\",\n-                publicName, getPrintableCategory(), publicName));\n-\n@@ -241,7 +245,0 @@\n-    private String getPrintableCategory() {\n-        if (category != null) {\n-            return String.format(\"[%s]\", category);\n-        }\n-        return \"\";\n-    }\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -90,0 +90,16 @@\n+    void logNoMainScripts() {\n+        scripts.values().stream().map(\n+                ShellScriptResource::getResource).forEach(overridableResource -> {\n+            try {\n+                if (overridableResource.saveToStream(null) == null) {\n+                    final var publicName = overridableResource.getPublicName().toString();\n+                    final var printableCategory = overridableResource.getPrintableCategory();\n+                    Log.verbose(I18N.format(\"message.no-default-resource\",\n+                        publicName, printableCategory, publicName));\n+                }\n+            } catch (IOException ex) {\n+                throw new UncheckedIOException(ex);\n+            }\n+        });\n+    }\n+\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/PackageScripts.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}