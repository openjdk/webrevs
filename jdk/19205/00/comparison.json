{"files":[{"patch":"@@ -770,3 +770,0 @@\n-  product(bool, ExpandSubTypeCheckAtParseTime, false, DIAGNOSTIC,           \\\n-          \"Do not use subtype check macro node\")                            \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2714,1 +2714,1 @@\n-    \/\/ parsing (i.e. with ExpandSubTypeCheckAtParseTime) because the\n+    \/\/ parsing because the\n@@ -2723,1 +2723,1 @@\n-    switch (C->static_subtype_check(superk, subk, !ExpandSubTypeCheckAtParseTime)) {\n+    switch (C->static_subtype_check(superk, subk, true)) {\n@@ -2904,2 +2904,1 @@\n-  bool expand_subtype_check = C->post_loop_opts_phase() ||   \/\/ macro node expansion is over\n-                              ExpandSubTypeCheckAtParseTime; \/\/ forced expansion\n+  bool expand_subtype_check = C->post_loop_opts_phase();   \/\/ macro node expansion is over\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- *     -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime\n+ *     -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/types\/TestSubTypeCheckMacroTrichotomy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime\n+ *                   -XX:+UnlockDiagnosticVMOptions\n@@ -58,1 +58,1 @@\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+ExpandSubTypeCheckAtParseTime\n+ *                   -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/types\/TestSubTypeCheckWithBottomArray.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}