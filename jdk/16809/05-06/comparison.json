{"files":[{"patch":"@@ -204,2 +204,1 @@\n-        int size = -1;\n-        switch (a) {\n+        int size = switch (a) {\n@@ -207,10 +206,5 @@\n-                size = valueSize(aa.defaultValue());\n-            case BootstrapMethodsAttribute bma -> {\n-                size = 2;\n-                for (var bm : bma.bootstrapMethods()) {\n-                    size += 4 + 2 * bm.arguments().size();\n-                }\n-            }\n-            case CharacterRangeTableAttribute cra -> {\n-                size = 2 + 14 * cra.characterRangeTable().size();\n-            }\n+                valueSize(aa.defaultValue());\n+            case BootstrapMethodsAttribute bma ->\n+                2 + bma.bootstrapMethods().stream().mapToInt(bm -> 4 + 2 * bm.arguments().size()).sum();\n+            case CharacterRangeTableAttribute cra ->\n+                2 + 14 * cra.characterRangeTable().size();\n@@ -225,4 +219,1 @@\n-                size = 12 + ca.codeLength() + 8 * ca.exceptionHandlers().size();\n-                for (var caa : ca.attributes()) {\n-                    size += 6 + ((BoundAttribute)caa).payloadLen();\n-                }\n+                yield 10 + ca.codeLength() + 8 * ca.exceptionHandlers().size() + attributesSize(ca.attributes());\n@@ -232,1 +223,1 @@\n-                size = 2;\n+                yield 2;\n@@ -247,1 +238,1 @@\n-                size = 2;\n+                yield 2;\n@@ -249,2 +240,2 @@\n-            case DeprecatedAttribute da ->\n-                size = 0;\n+            case DeprecatedAttribute _ ->\n+                0;\n@@ -254,1 +245,1 @@\n-                size = 4;\n+                yield 4;\n@@ -257,1 +248,1 @@\n-                size = 2 + 2 * ea.exceptions().size();\n+                2 + 2 * ea.exceptions().size();\n@@ -264,1 +255,1 @@\n-                size = 2 + 8 * ica.classes().size();\n+                yield 2 + 8 * ica.classes().size();\n@@ -267,1 +258,1 @@\n-                size = 2 + 4 * lta.lineNumbers().size();\n+                2 + 4 * lta.lineNumbers().size();\n@@ -269,1 +260,1 @@\n-                size = 2 + 10 * lvta.localVariables().size();\n+                2 + 10 * lvta.localVariables().size();\n@@ -271,1 +262,1 @@\n-                size = 2 + 10 * lvta.localVariableTypes().size();\n+                2 + 10 * lvta.localVariableTypes().size();\n@@ -273,1 +264,1 @@\n-                size = 1 + 4 * mpa.parameters().size();\n+                1 + 4 * mpa.parameters().size();\n@@ -276,1 +267,1 @@\n-                size = 2;\n+                yield 2;\n@@ -282,1 +273,1 @@\n-                size = 2 + 2 * nma.nestMembers().size();\n+                yield 2 + 2 * nma.nestMembers().size();\n@@ -288,10 +279,1 @@\n-                size = 2 + 2 * psa.permittedSubclasses().size();\n-            }\n-            case RecordAttribute ra -> {\n-                size = 2;\n-                for (var rc : ra.components()) {\n-                    size += 6;\n-                    for (var rca : rc.attributes()) {\n-                        size += 6 + ((BoundAttribute)rca).payloadLen();\n-                    }\n-                }\n+                yield 2 + 2 * psa.permittedSubclasses().size();\n@@ -299,0 +281,2 @@\n+            case RecordAttribute ra ->\n+                componentsSize(ra.components());\n@@ -300,1 +284,1 @@\n-                size = annotationsSize(aa.annotations());\n+                annotationsSize(aa.annotations());\n@@ -302,13 +286,5 @@\n-                size = annotationsSize(aa.annotations());\n-            case RuntimeVisibleParameterAnnotationsAttribute aa -> {\n-                size = 1;\n-                for (var ans : aa.parameterAnnotations()) {\n-                    size += annotationsSize(ans);\n-                }\n-            }\n-            case RuntimeInvisibleParameterAnnotationsAttribute aa -> {\n-                size = 1;\n-                for (var ans : aa.parameterAnnotations()) {\n-                    size += annotationsSize(ans);\n-                }\n-            }\n+                annotationsSize(aa.annotations());\n+            case RuntimeVisibleParameterAnnotationsAttribute aa ->\n+                parameterAnnotationsSize(aa.parameterAnnotations());\n+            case RuntimeInvisibleParameterAnnotationsAttribute aa ->\n+                parameterAnnotationsSize(aa.parameterAnnotations());\n@@ -317,4 +293,1 @@\n-                size = 2;\n-            }\n-            case SourceDebugExtensionAttribute sda -> {\n-                size = sda.contents().length;\n+                yield 2;\n@@ -322,0 +295,2 @@\n+            case SourceDebugExtensionAttribute sda ->\n+                sda.contents().length;\n@@ -324,1 +299,1 @@\n-                size = 2;\n+                yield 2;\n@@ -328,1 +303,1 @@\n-                size = 2;\n+                yield 2;\n@@ -330,4 +305,5 @@\n-            case SyntheticAttribute sa ->\n-                size = 0;\n-            default -> {}\n-        }\n+            case SyntheticAttribute _ ->\n+                0;\n+            default ->\n+                -1;\n+        };\n@@ -339,0 +315,24 @@\n+    private static int componentsSize(List<RecordComponentInfo> comps) {\n+        int l = 2;\n+        for (var rc : comps) {\n+            l += 4 + attributesSize(rc.attributes());\n+        }\n+        return l;\n+    }\n+\n+    private static int attributesSize(List<Attribute<?>> attrs) {\n+        int l = 2;\n+        for (var a : attrs) {\n+            l += 6 + ((BoundAttribute)a).payloadLen();\n+        }\n+        return l;\n+    }\n+\n+    private static int parameterAnnotationsSize(List<List<Annotation>> pans) {\n+        int l = 1;\n+        for (var ans : pans) {\n+            l += annotationsSize(ans);\n+        }\n+        return l;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/ParserVerifier.java","additions":63,"deletions":63,"binary":false,"changes":126,"status":"modified"}]}