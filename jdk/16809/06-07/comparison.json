{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -45,0 +44,1 @@\n+import java.lang.classfile.CustomAttribute;\n@@ -47,0 +47,1 @@\n+import java.lang.classfile.TypeAnnotation;\n@@ -52,0 +53,3 @@\n+import java.util.Collection;\n+import java.util.function.Function;\n+import java.util.function.ToIntFunction;\n@@ -265,0 +269,20 @@\n+            case ModuleAttribute ma ->\n+                16 + subSize(ma.exports(), ModuleExportInfo::exportsTo, 6, 2)\n+                   + subSize(ma.opens(), ModuleOpenInfo::opensTo, 6, 2)\n+                   + subSize(ma.provides(), ModuleProvideInfo::providesWith, 4, 2)\n+                   + 6 * ma.requires().size()\n+                   + 2 * ma.uses().size();\n+            case ModuleHashesAttribute mha ->\n+                2 + moduleHashesSize(mha.hashes());\n+            case ModuleMainClassAttribute mmca -> {\n+                mmca.mainClass();\n+                yield 2;\n+            }\n+            case ModulePackagesAttribute mpa ->\n+                2 + 2 * mpa.packages().size();\n+            case ModuleResolutionAttribute mra ->\n+                2;\n+            case ModuleTargetAttribute mta -> {\n+                mta.targetPlatform();\n+                yield 2;\n+            }\n@@ -287,0 +311,4 @@\n+            case RuntimeVisibleTypeAnnotationsAttribute aa ->\n+                typeAnnotationsSize(aa.annotations());\n+            case RuntimeInvisibleTypeAnnotationsAttribute aa ->\n+                typeAnnotationsSize(aa.annotations());\n@@ -305,0 +333,2 @@\n+            case StackMapTableAttribute smta ->\n+                2 + subSize(smta.entries(), frame -> stackMapFrameSize(frame));\n@@ -307,1 +337,3 @@\n-            default ->\n+            case UnknownAttribute _ ->\n+                -1;\n+            case CustomAttribute<?> _ ->\n@@ -309,0 +341,2 @@\n+            default -> \/\/ should not happen if all known attributes are verified\n+                throw new AssertionError(a);\n@@ -315,0 +349,12 @@\n+    private static <T, S extends Collection<?>> int subSize(Collection<T> entries, Function<T, S> subMH, int entrySize, int subSize) {\n+        return subSize(entries, (ToIntFunction<T>) t -> entrySize + subSize * subMH.apply(t).size());\n+    }\n+\n+    private static <T> int subSize(Collection<T> entries, ToIntFunction<T> subMH) {\n+        int l = 0;\n+        for (T entry : entries) {\n+            l += subMH.applyAsInt(entry);\n+        }\n+        return l;\n+    }\n+\n@@ -347,0 +393,8 @@\n+    private static int typeAnnotationsSize(List<TypeAnnotation> ans) {\n+        int l = 2;\n+        for (var an : ans) {\n+            l += 2 + an.targetInfo().size() + 2 * an.targetPath().size() + annotationSize(an);\n+        }\n+        return l;\n+    }\n+\n@@ -371,0 +425,49 @@\n+    private static int moduleHashesSize(List<ModuleHashInfo> hashes) {\n+        int l = 2;\n+        for (var h : hashes) {\n+            h.moduleName();\n+            l += 4 + h.hash().length;\n+        }\n+        return l;\n+    }\n+\n+    private int stackMapFrameSize(StackMapFrameInfo frame) {\n+        int ft = frame.frameType();\n+        if (ft < 64) return 1;\n+        if (ft < 128) return 1 + verificationTypeSize(frame.stack().getFirst());\n+        if (ft > 246) {\n+            if (ft == 247) return 3 + verificationTypeSize(frame.stack().getFirst());\n+            if (ft < 252) return 3;\n+            if (ft < 255) {\n+                var loc = frame.locals();\n+                int l = 3;\n+                for (int i = loc.size() + 251 - ft; i < loc.size(); i++) {\n+                    l += verificationTypeSize(loc.get(i));\n+                }\n+                return l;\n+            }\n+            if (ft == 255) {\n+                int l = 7;\n+                for (var vt : frame.stack()) {\n+                    l += verificationTypeSize(vt);\n+                }\n+                for (var vt : frame.locals()) {\n+                    l += verificationTypeSize(vt);\n+                }\n+                return l;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid stack map frame type \" + ft);\n+    }\n+\n+    private static int verificationTypeSize(StackMapFrameInfo.VerificationTypeInfo vti) {\n+        return switch (vti) {\n+            case StackMapFrameInfo.SimpleVerificationTypeInfo _ -> 1;\n+            case StackMapFrameInfo.ObjectVerificationTypeInfo ovti -> {\n+                ovti.classSymbol();\n+                yield 3;\n+            }\n+            case StackMapFrameInfo.UninitializedVerificationTypeInfo _ -> 3;\n+        };\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/ParserVerifier.java","additions":105,"deletions":2,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import java.lang.constant.ModuleDesc;\n@@ -123,0 +124,6 @@\n+                ModuleAttribute.of(ModuleDesc.of(\"m\"), mab -> {}),\n+                ModuleHashesAttribute.of(\"alg\", List.of()),\n+                ModuleMainClassAttribute.of(cd_test),\n+                ModulePackagesAttribute.of(),\n+                ModuleResolutionAttribute.of(0),\n+                ModuleTargetAttribute.of(\"t\"),\n@@ -165,1 +172,4 @@\n-                                cob.return_()\n+                                cob.iconst_0()\n+                                   .ifThen(CodeBuilder::nop)\n+                                   .return_()\n+                                   .with(new CloneAttribute(StackMapTableAttribute.of(List.of())))\n@@ -209,0 +219,12 @@\n+                Multiple Module attributes in class ParserVerificationTestClass\n+                Wrong Module attribute length in class ParserVerificationTestClass\n+                Multiple ModuleHashes attributes in class ParserVerificationTestClass\n+                Wrong ModuleHashes attribute length in class ParserVerificationTestClass\n+                Multiple ModuleMainClass attributes in class ParserVerificationTestClass\n+                Wrong ModuleMainClass attribute length in class ParserVerificationTestClass\n+                Multiple ModulePackages attributes in class ParserVerificationTestClass\n+                Wrong ModulePackages attribute length in class ParserVerificationTestClass\n+                Multiple ModuleResolution attributes in class ParserVerificationTestClass\n+                Wrong ModuleResolution attribute length in class ParserVerificationTestClass\n+                Multiple ModuleTarget attributes in class ParserVerificationTestClass\n+                Wrong ModuleTarget attribute length in class ParserVerificationTestClass\n@@ -226,0 +248,1 @@\n+                Wrong RuntimeVisibleTypeAnnotations attribute length in class ParserVerificationTestClass\n@@ -227,0 +250,1 @@\n+                Wrong RuntimeInvisibleTypeAnnotations attribute length in class ParserVerificationTestClass\n@@ -245,0 +269,1 @@\n+                Wrong RuntimeVisibleTypeAnnotations attribute length in field ParserVerificationTestClass.f\n@@ -246,0 +271,1 @@\n+                Wrong RuntimeInvisibleTypeAnnotations attribute length in field ParserVerificationTestClass.f\n@@ -268,0 +294,1 @@\n+                Wrong StackMapTable attribute length in Code attribute for method ParserVerificationTestClass::m()\n@@ -272,0 +299,1 @@\n+                Multiple StackMapTable attributes in Code attribute for method ParserVerificationTestClass::m()\n@@ -279,0 +307,1 @@\n+                Wrong RuntimeVisibleTypeAnnotations attribute length in Record component c of class ParserVerificationTestClass\n@@ -280,0 +309,1 @@\n+                Wrong RuntimeInvisibleTypeAnnotations attribute length in Record component c of class ParserVerificationTestClass\n@@ -287,0 +317,1 @@\n+                Wrong RuntimeVisibleTypeAnnotations attribute length in Record component c of class ParserVerificationTestClass\n@@ -288,0 +319,1 @@\n+                Wrong RuntimeInvisibleTypeAnnotations attribute length in Record component c of class ParserVerificationTestClass\n","filename":"test\/jdk\/jdk\/classfile\/VerifierSelfTest.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}