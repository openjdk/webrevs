{"files":[{"patch":"@@ -204,3 +204,4 @@\n-        int payLoad = ((BoundAttribute)a).payloadLen();\n-        if (payLoad != switch (a) {\n-            case AnnotationDefaultAttribute aa -> valueSize(aa.defaultValue());\n+        int size = -1;\n+        switch (a) {\n+            case AnnotationDefaultAttribute aa ->\n+                size = valueSize(aa.defaultValue());\n@@ -208,1 +209,1 @@\n-                int l = 2;\n+                size = 2;\n@@ -210,1 +211,1 @@\n-                    l += 4 + 2 * bm.arguments().size();\n+                    size += 4 + 2 * bm.arguments().size();\n@@ -212,1 +213,0 @@\n-                yield l;\n@@ -214,1 +214,3 @@\n-            case CharacterRangeTableAttribute cra -> 2 + 14 * cra.characterRangeTable().size();\n+            case CharacterRangeTableAttribute cra -> {\n+                size = 2 + 14 * cra.characterRangeTable().size();\n+            }\n@@ -223,1 +225,1 @@\n-                int l = 12 + ca.codeLength() + 8 * ca.exceptionHandlers().size();\n+                size = 12 + ca.codeLength() + 8 * ca.exceptionHandlers().size();\n@@ -225,1 +227,1 @@\n-                    l += 6 + ((BoundAttribute)caa).payloadLen();\n+                    size += 6 + ((BoundAttribute)caa).payloadLen();\n@@ -227,1 +229,0 @@\n-                yield l;\n@@ -229,1 +230,4 @@\n-            case CompilationIDAttribute cida -> 2;\n+            case CompilationIDAttribute cida -> {\n+                cida.compilationId();\n+                size = 2;\n+            }\n@@ -243,1 +247,8 @@\n-                yield 2;\n+                size = 2;\n+            }\n+            case DeprecatedAttribute da ->\n+                size = 0;\n+            case EnclosingMethodAttribute ema -> {\n+                ema.enclosingClass();\n+                ema.enclosingMethod();\n+                size = 4;\n@@ -245,3 +256,2 @@\n-            case DeprecatedAttribute da -> 0;\n-            case EnclosingMethodAttribute ema -> 4;\n-            case ExceptionsAttribute ea -> 2 + 2 * ea.exceptions().size();\n+            case ExceptionsAttribute ea ->\n+                size = 2 + 2 * ea.exceptions().size();\n@@ -254,1 +264,13 @@\n-                yield 2 + 8 * ica.classes().size();\n+                size = 2 + 8 * ica.classes().size();\n+            }\n+            case LineNumberTableAttribute lta ->\n+                size = 2 + 4 * lta.lineNumbers().size();\n+            case LocalVariableTableAttribute lvta ->\n+                size = 2 + 10 * lvta.localVariables().size();\n+            case LocalVariableTypeTableAttribute lvta ->\n+                size = 2 + 10 * lvta.localVariableTypes().size();\n+            case MethodParametersAttribute mpa ->\n+                size = 1 + 4 * mpa.parameters().size();\n+            case NestHostAttribute nha -> {\n+                nha.nestHost();\n+                size = 2;\n@@ -256,5 +278,0 @@\n-            case LineNumberTableAttribute lta -> 2 + 4 * lta.lineNumbers().size();\n-            case LocalVariableTableAttribute lvta -> 2 + 10 * lvta.localVariables().size();\n-            case LocalVariableTypeTableAttribute lvta -> 2 + 10 * lvta.localVariableTypes().size();\n-            case MethodParametersAttribute mpa -> 1 + 4 * mpa.parameters().size();\n-            case NestHostAttribute nha -> 2;\n@@ -265,1 +282,1 @@\n-                yield 2 + 2 * nma.nestMembers().size();\n+                size = 2 + 2 * nma.nestMembers().size();\n@@ -271,1 +288,1 @@\n-                yield 2 + 2 * psa.permittedSubclasses().size();\n+                size = 2 + 2 * psa.permittedSubclasses().size();\n@@ -274,1 +291,1 @@\n-                int l = 2;\n+                size = 2;\n@@ -276,1 +293,1 @@\n-                    l += 6;\n+                    size += 6;\n@@ -278,1 +295,1 @@\n-                        l += 6 + ((BoundAttribute)rca).payloadLen();\n+                        size += 6 + ((BoundAttribute)rca).payloadLen();\n@@ -281,15 +298,0 @@\n-                yield l;\n-            }\n-            case RuntimeVisibleAnnotationsAttribute aa -> {\n-                int l = 2;\n-                for (var an : aa.annotations()) {\n-                    l += annotationSize(an);\n-                }\n-                yield l;\n-            }\n-            case RuntimeInvisibleAnnotationsAttribute aa -> {\n-                int l = 2;\n-                for (var an : aa.annotations()) {\n-                    l += annotationSize(an);\n-                }\n-                yield l;\n@@ -297,0 +299,4 @@\n+            case RuntimeVisibleAnnotationsAttribute aa ->\n+                size = annotationsSize(aa.annotations());\n+            case RuntimeInvisibleAnnotationsAttribute aa ->\n+                size = annotationsSize(aa.annotations());\n@@ -298,1 +304,1 @@\n-                int l = 1;\n+                size = 1;\n@@ -300,4 +306,1 @@\n-                    l += 2;\n-                    for (var an : ans) {\n-                        l += annotationSize(an);\n-                    }\n+                    size += annotationsSize(ans);\n@@ -305,1 +308,0 @@\n-                yield l;\n@@ -308,1 +310,1 @@\n-                int l = 1;\n+                size = 1;\n@@ -310,4 +312,1 @@\n-                    l += 2;\n-                    for (var an : ans) {\n-                        l += annotationSize(an);\n-                    }\n+                    size += annotationsSize(ans);\n@@ -315,1 +314,0 @@\n-                yield l;\n@@ -317,7 +315,20 @@\n-            case SignatureAttribute sa -> 2;\n-            case SourceDebugExtensionAttribute sda -> sda.contents().length;\n-            case SourceFileAttribute sfa -> 2;\n-            case SourceIDAttribute sida -> 2;\n-            case SyntheticAttribute sa -> 0;\n-            default -> payLoad;\n-        }) {\n+            case SignatureAttribute sa -> {\n+                sa.signature();\n+                size = 2;\n+            }\n+            case SourceDebugExtensionAttribute sda -> {\n+                size = sda.contents().length;\n+            }\n+            case SourceFileAttribute sfa -> {\n+                sfa.sourceFile();\n+                size = 2;\n+            }\n+            case SourceIDAttribute sida -> {\n+                sida.sourceId();\n+                size = 2;\n+            }\n+            case SyntheticAttribute sa ->\n+                size = 0;\n+            default -> {}\n+        }\n+        if (size >= 0 && size != ((BoundAttribute)a).payloadLen()) {\n@@ -326,0 +337,1 @@\n+    }\n@@ -327,0 +339,6 @@\n+    private static int annotationsSize(List<Annotation> ans) {\n+        int l = 2;\n+        for (var an : ans) {\n+            l += annotationSize(an);\n+        }\n+        return l;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/ParserVerifier.java","additions":78,"deletions":60,"binary":false,"changes":138,"status":"modified"}]}