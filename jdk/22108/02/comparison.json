{"files":[{"patch":"@@ -48,0 +48,6 @@\n+    @Override\n+    public void setCutEdges(boolean enable) {\n+        subManager.setCutEdges(enable);\n+        manager.setCutEdges(enable);\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalCFGLayoutManager.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,0 +46,6 @@\n+    @Override\n+    public void setCutEdges(boolean enable) {\n+        subManager.setCutEdges(enable);\n+        manager.setCutEdges(enable);\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalClusterLayoutManager.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -139,2 +139,3 @@\n-    public void setMaxLayerLength(int v) {\n-        maxLayerLength = v;\n+    @Override\n+    public void setCutEdges(boolean enable) {\n+        maxLayerLength = enable ? 10 : -1;\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalLayoutManager.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-    private HashSet<? extends Vertex> currentVertices;\n-    private HashSet<? extends Link> currentLinks;\n+    private Set<? extends Vertex> currentVertices;\n+    private Set<? extends Link> currentLinks;\n@@ -54,2 +54,2 @@\n-    private HashSet<? extends Vertex> oldVertices;\n-    private HashSet<? extends Link> oldLinks;\n+    private Set<? extends Vertex> oldVertices;\n+    private Set<? extends Link> oldLinks;\n@@ -58,0 +58,9 @@\n+    private boolean cutEdges = false;\n+\n+    public void doLayout(LayoutGraph layoutGraph) {\n+        boolean oldShouldRedrawLayout = shouldRedrawLayout;\n+        setShouldRedrawLayout(true);\n+        updateLayout(layoutGraph.getVertices(), layoutGraph.getLinks());\n+        setShouldRedrawLayout(oldShouldRedrawLayout);\n+    }\n+\n@@ -93,0 +102,9 @@\n+    public void setCutEdges(boolean enable) {\n+        cutEdges = enable;\n+        manager.setCutEdges(enable);\n+    }\n+\n+    public boolean getCutEdges() {\n+        return cutEdges;\n+    }\n+\n@@ -399,1 +417,1 @@\n-    public void updateLayout(HashSet<? extends Vertex> vertices, HashSet<? extends Link> links) {\n+    public void updateLayout(Set<? extends Vertex> vertices, Set<? extends Link> links) {\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalStableLayoutManager.java","additions":23,"deletions":5,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -42,0 +42,3 @@\n+    @Override\n+    public void setCutEdges(boolean enable) {}\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/LinearLayoutManager.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+    void setCutEdges(boolean enable);\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/LayoutManager.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -703,1 +703,8 @@\n-        hierarchicalStableLayoutManager.updateLayout(visibleFigures, visibleConnections);\n+        boolean enable = model.getCutEdges();\n+        boolean previous = hierarchicalStableLayoutManager.getCutEdges();\n+        hierarchicalStableLayoutManager.setCutEdges(enable);\n+        if (enable != previous) {\n+            hierarchicalStableLayoutManager.doLayout(new LayoutGraph(visibleConnections, visibleFigures));\n+        } else {\n+            hierarchicalStableLayoutManager.updateLayout(visibleFigures, visibleConnections);\n+        }\n@@ -708,1 +715,1 @@\n-        manager.setMaxLayerLength(10);\n+        manager.setCutEdges(model.getCutEdges());\n@@ -716,1 +723,1 @@\n-        manager.setMaxLayerLength(9);\n+        manager.setCutEdges(model.getCutEdges());\n@@ -727,1 +734,1 @@\n-        manager.setMaxLayerLength(9);\n+        manager.setCutEdges(model.getCutEdges());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import com.sun.hotspot.igv.view.actions.CutEdgesAction;\n@@ -71,1 +72,0 @@\n-    private boolean hideDuplicates;\n@@ -73,0 +73,1 @@\n+    private static boolean cutEdges = false;\n@@ -83,0 +84,12 @@\n+    public boolean getCutEdges() {\n+        return cutEdges;\n+    }\n+\n+    public void setCutEdges(boolean enable, boolean fire) {\n+        boolean prevEnable = cutEdges;\n+        cutEdges = enable;\n+        if (fire && prevEnable != enable) {\n+            diagramChangedEvent.fire();\n+        }\n+    }\n+\n@@ -157,19 +170,0 @@\n-    public void setHideDuplicates(boolean hideDuplicates) {\n-        this.hideDuplicates = hideDuplicates;\n-        InputGraph currentGraph = getFirstGraph();\n-        if (hideDuplicates) {\n-            \/\/ Back up to the unhidden equivalent graph\n-            int index = graphs.indexOf(currentGraph);\n-            while (graphs.get(index).getProperties().get(\"_isDuplicate\") != null) {\n-                index--;\n-            }\n-            currentGraph = graphs.get(index);\n-        }\n-        filterGraphs();\n-        selectGraph(currentGraph);\n-    }\n-\n-    public boolean getHideDuplicates() {\n-        return hideDuplicates;\n-    }\n-\n@@ -194,0 +188,1 @@\n+        cutEdges = false;\n@@ -208,0 +203,1 @@\n+        cutEdges = CutEdgesAction.get(CutEdgesAction.class).isSelected();\n@@ -213,1 +209,0 @@\n-        hideDuplicates = model.getHideDuplicates();\n@@ -231,0 +226,1 @@\n+        cutEdges = CutEdgesAction.get(CutEdgesAction.class).isSelected();\n@@ -237,1 +233,0 @@\n-        hideDuplicates = false;\n@@ -425,5 +420,2 @@\n-            String duplicate = graph.getProperties().get(\"_isDuplicate\");\n-            if (duplicate == null || !hideDuplicates) {\n-                result.add(graph);\n-                positions.add(graph.getName());\n-            }\n+            result.add(graph);\n+            positions.add(graph.getName());\n@@ -463,5 +455,0 @@\n-        if (index == -1 && hideDuplicates) {\n-            \/\/ A graph was selected that's currently hidden, so unhide and select it.\n-            setHideDuplicates(false);\n-            index = graphs.indexOf(graph);\n-        }\n@@ -474,5 +461,0 @@\n-        if (index == -1 && hideDuplicates) {\n-            \/\/ A graph was selected that's currently hidden, so unhide and select it.\n-            setHideDuplicates(false);\n-            index = graphs.indexOf(graph);\n-        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":19,"deletions":37,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -213,1 +213,0 @@\n-        toolBar.add(new JToggleButton(new HideDuplicatesAction(diagramViewModel.getHideDuplicates())));\n@@ -224,0 +223,5 @@\n+\n+        JToggleButton cutEdgesButton = new JToggleButton(CutEdgesAction.get(CutEdgesAction.class));\n+        cutEdgesButton.setHideActionText(true);\n+        toolBar.add(cutEdgesButton);\n+\n@@ -456,0 +460,1 @@\n+        model.setCutEdges(CutEdgesAction.get(CutEdgesAction.class).isSelected(), false);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import javax.swing.SwingUtilities;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.actions.CallableSystemAction;\n+\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.CutEdgesAction\")\n+@ActionRegistration(displayName = \"#CTL_CutEdgesAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/Options\", position = 350),\n+})\n+@NbBundle.Messages({\n+        \"CTL_CutEdgesAction=Cut long edges\",\n+        \"HINT_CutEdgesAction=Cut long edges\"\n+})\n+public final class CutEdgesAction extends CallableSystemAction {\n+\n+    private boolean isSelected;\n+\n+    public CutEdgesAction() {\n+        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+        putValue(SELECTED_KEY, false);\n+        isSelected = false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(CutEdgesAction.class, \"CTL_CutEdgesAction\");\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    public void performAction() {\n+        isSelected = !isSelected;\n+        putValue(SELECTED_KEY, isSelected);\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            SwingUtilities.invokeLater(() -> editor.getModel().setCutEdges(isSelected, true));\n+        }\n+    }\n+\n+    public boolean isSelected() {\n+        return isSelected;\n+    }\n+\n+    private String getDescription() {\n+        return NbBundle.getMessage(CutEdgesAction.class, \"HINT_CutEdgesAction\");\n+    }\n+\n+    @Override\n+    protected boolean asynchronous() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/cut.png\";\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/CutEdgesAction.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.view.actions;\n-\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import java.awt.event.ActionEvent;\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.ImageUtilities;\n-\n-\/**\n- *\n- * @author Tom Rodriguez\n- *\/\n-public class HideDuplicatesAction extends AbstractAction {\n-\n-    public HideDuplicatesAction(boolean selected) {\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(Action.SELECTED_KEY, selected);\n-        putValue(Action.SHORT_DESCRIPTION, \"Hide graphs which are the same as the previous graph\");\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent ev) {\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            boolean selected = (boolean)getValue(SELECTED_KEY);\n-            editor.getModel().setHideDuplicates(selected);\n-        }\n-    }\n-\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/hideDuplicates.png\";\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideDuplicatesAction.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/cut.png","binary":true,"status":"added"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/hideDuplicates.png","binary":true,"status":"deleted"}]}