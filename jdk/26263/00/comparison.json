{"files":[{"patch":"@@ -131,1 +131,1 @@\n-    clean_klass(klass);\n+    Klass::clean_weak_instanceklass_links(klass);\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,4 +69,0 @@\n-  void clean_klass(InstanceKlass* ik) {\n-    ik->clean_weak_instanceklass_links();\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -752,7 +752,1 @@\n-      ik->clean_weak_instanceklass_links();\n-\n-      \/\/ JVMTI RedefineClasses creates previous versions that are not in\n-      \/\/ the class hierarchy, so process them here.\n-      while ((ik = ik->previous_versions()) != nullptr) {\n-        ik->clean_weak_instanceklass_links();\n-      }\n+      clean_weak_instanceklass_links(ik);\n@@ -763,0 +757,9 @@\n+void Klass::clean_weak_instanceklass_links(InstanceKlass* ik) {\n+  ik->clean_weak_instanceklass_links();\n+  \/\/ JVMTI RedefineClasses creates previous versions that are not in\n+  \/\/ the class hierarchy, so process them here.\n+  while ((ik = ik->previous_versions()) != nullptr) {\n+    ik->clean_weak_instanceklass_links();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -737,0 +737,1 @@\n+  \/\/ Clean out unnecessary weak klass links from the whole klass hierarchy.\n@@ -738,0 +739,2 @@\n+  \/\/ Clean out unnecessary weak klass links from the given InstanceKlass.\n+  static void clean_weak_instanceklass_links(InstanceKlass* ik);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}