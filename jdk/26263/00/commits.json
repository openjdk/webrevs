[{"commit":{"message":"* remove patch for JDK-8361952"},"files":[],"sha":"f3dcf761ab6a639e926c8ea9239660a061e7a2fc"},{"commit":{"message":"* working version, do not recursively clean out"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.hpp"},{"filename":"src\/hotspot\/share\/oops\/klass.cpp"},{"filename":"src\/hotspot\/share\/oops\/klass.hpp"}],"sha":"04528e927af568afbef2cb0e6b22896782e3959f"},{"commit":{"message":"* another attempt"},"files":[],"sha":"e8eec33f395b25b48dac3b723e706122f729d4a4"},{"commit":{"message":"8361706\n\nHi all,\n\n  please review this fix to parallel weak klass link cleaning.\n\n`KlassCleaningTask::work()` misses cleaning out previous versions of klasses (created by JVMTI class redefinition) as the regular single-threaded variant would do when calling `Klass::clean_weak_klass_links()` with `clean_live_klasses = true`.\n\nThe fix moves the cleaning of weak klass links for previous versions of the klass into `InstanceKlass::clean_weak_instanceklass_links()`.\n\nTesting: gha, tier1-5\n\nThanks,\n  Thomas"},"files":[{"filename":"src\/hotspot\/share\/oops\/klass.cpp"}],"sha":"2327567bf7a6872a1efa4e9f4be32186e66b434d"}]