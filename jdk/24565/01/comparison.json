{"files":[{"patch":"@@ -56,5 +56,8 @@\n-    \/\/ Match a generic SubNode, because scalar Float16 operations are often\n-    \/\/ performed as float operations.\n-    @IR(counts = { IRNode.SUB, \"2\" }, applyIfPlatform = {\"riscv64\", \"false\"})\n-    @IR(counts = { IRNode.SUB, \"2\" }, applyIfCPUFeature = {\"zfh\", \"false\"})\n-    @IR(counts = { IRNode.SUB_HF, \"2\" }, applyIfCPUFeature = {\"zfh\", \"true\"})\n+    @IR(counts = { IRNode.SUB, \"2\" }, applyIfPlatform = {\"x64\", \"true\"}, applyIfCPUFeature = {\"avx512_fp16\", \"false\"})\n+    @IR(counts = { IRNode.SUB_HF, \"2\" }, applyIfPlatform = {\"x64\", \"true\"}, applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+    \/\/ TODO: uncomment once Float16 support lands in aarch64\n+    \/\/@IR(counts = { IRNode.SUB, \"2\" }, applyIfPlatform = {\"aarch64\", \"true\"}, applyIfCPUFeatureAnd = {\"fphp\", \"false\", \"asimdhp\", \"false\"})\n+    \/\/@IR(counts = { IRNode.SUB_HF, \"2\" }, applyIfPlatform = {\"aarch64\", \"true\"}, applyIfCPUFeatureAnd = {\"fphp\", \"true\", \"asimdhp\", \"true\"})\n+    @IR(counts = { IRNode.SUB, \"2\" }, applyIfPlatform = {\"riscv64\", \"true\"}, applyIfCPUFeature = {\"zfh\", \"false\"})\n+    @IR(counts = { IRNode.SUB_HF, \"2\" }, applyIfPlatform = {\"riscv64\", \"true\"}, applyIfCPUFeature = {\"zfh\", \"true\"})\n+    @IR(counts = { IRNode.SUB, \"2\" }, applyIfPlatformAnd = {\"x64\", \"false\", \"aarch64\", \"false\", \"riscv64\", \"false\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/TestSubNodeFloatDoubleNegation.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}