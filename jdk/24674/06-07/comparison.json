{"files":[{"patch":"@@ -332,0 +332,2 @@\n+  \/\/ Return the negative mask for the given mask, for both signed and unsigned comparison.\n+  static mask negate_mask(mask btm) { return mask(btm^4); }\n","filename":"src\/hotspot\/share\/opto\/subnode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2239,1 +2239,1 @@\n-  BoolTest::mask neg_cond = (BoolTest::mask) (((VectorMaskCmpNode*) in1)->get_negative_predicate());\n+  BoolTest::mask neg_cond = BoolTest::negate_mask(((VectorMaskCmpNode*) in1)->get_predicate());\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1690,3 +1690,0 @@\n-  \/\/ This is the same with BoolTest::negate(), but BoolTest doesn't support\n-  \/\/ unsigned comparison. However _predicate can be unsigned comparison.\n-  BoolTest::mask get_negative_predicate() { return BoolTest::mask(_predicate ^ 4); }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}