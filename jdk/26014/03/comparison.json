{"files":[{"patch":"@@ -1902,1 +1902,1 @@\n-  class GetStackTraceClosure : public HandshakeClosure {\n+  class GetStackTraceHandshakeClosure : public HandshakeClosure {\n@@ -1910,2 +1910,2 @@\n-    GetStackTraceClosure(Handle java_thread) :\n-        HandshakeClosure(\"GetStackTraceClosure\"), _java_thread(java_thread), _depth(0), _retry_handshake(false),\n+    GetStackTraceHandshakeClosure(Handle java_thread) :\n+        HandshakeClosure(\"GetStackTraceHandshakeClosure\"), _java_thread(java_thread), _depth(0), _retry_handshake(false),\n@@ -1914,1 +1914,1 @@\n-    ~GetStackTraceClosure() {\n+    ~GetStackTraceHandshakeClosure() {\n@@ -1980,1 +1980,1 @@\n-  GetStackTraceClosure gstc(Handle(THREAD, java_thread));\n+  GetStackTraceHandshakeClosure gsthc(Handle(THREAD, java_thread));\n@@ -1982,2 +1982,2 @@\n-   Handshake::execute(&gstc, &tlh, thread);\n-  } while (gstc.read_reset_retry());\n+   Handshake::execute(&gsthc, &tlh, thread);\n+  } while (gsthc.read_reset_retry());\n@@ -1986,1 +1986,1 @@\n-  if (gstc._depth == 0) {\n+  if (gsthc._depth == 0) {\n@@ -1996,1 +1996,1 @@\n-  objArrayHandle trace = oopFactory::new_objArray_handle(k, gstc._depth, CHECK_NULL);\n+  objArrayHandle trace = oopFactory::new_objArray_handle(k, gsthc._depth, CHECK_NULL);\n@@ -1998,2 +1998,2 @@\n-  for (int i = 0; i < gstc._depth; i++) {\n-    methodHandle method(THREAD, gstc._methods->at(i));\n+  for (int i = 0; i < gsthc._depth; i++) {\n+    methodHandle method(THREAD, gsthc._methods->at(i));\n@@ -2001,1 +2001,1 @@\n-                                                      gstc._bcis->at(i),\n+                                                      gsthc._bcis->at(i),\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1148,1 +1148,1 @@\n-class ShenandoahUpdateThreadClosure : public HandshakeClosure {\n+class ShenandoahUpdateThreadHandshakeClosure : public HandshakeClosure {\n@@ -1155,1 +1155,1 @@\n-  ShenandoahUpdateThreadClosure();\n+  ShenandoahUpdateThreadHandshakeClosure();\n@@ -1159,1 +1159,1 @@\n-ShenandoahUpdateThreadClosure::ShenandoahUpdateThreadClosure() :\n+ShenandoahUpdateThreadHandshakeClosure::ShenandoahUpdateThreadHandshakeClosure() :\n@@ -1163,1 +1163,1 @@\n-void ShenandoahUpdateThreadClosure::do_thread(Thread* thread) {\n+void ShenandoahUpdateThreadHandshakeClosure::do_thread(Thread* thread) {\n@@ -1172,1 +1172,1 @@\n-  ShenandoahUpdateThreadClosure cl;\n+  ShenandoahUpdateThreadHandshakeClosure cl;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1248,1 +1248,1 @@\n-class ShenandoahGCStatePropagator : public HandshakeClosure {\n+class ShenandoahGCStatePropagatorHandshakeClosure : public HandshakeClosure {\n@@ -1250,1 +1250,1 @@\n-  explicit ShenandoahGCStatePropagator(char gc_state) :\n+  explicit ShenandoahGCStatePropagatorHandshakeClosure(char gc_state) :\n@@ -1261,1 +1261,1 @@\n-class ShenandoahPrepareForUpdateRefs : public HandshakeClosure {\n+class ShenandoahPrepareForUpdateRefsHandshakeClosure : public HandshakeClosure {\n@@ -1263,1 +1263,1 @@\n-  explicit ShenandoahPrepareForUpdateRefs(char gc_state) :\n+  explicit ShenandoahPrepareForUpdateRefsHandshakeClosure(char gc_state) :\n@@ -1275,1 +1275,1 @@\n-  ShenandoahGCStatePropagator _propagator;\n+  ShenandoahGCStatePropagatorHandshakeClosure _propagator;\n@@ -1298,1 +1298,1 @@\n-  ShenandoahPrepareForUpdateRefs prepare_for_update_refs(_gc_state.raw_value());\n+  ShenandoahPrepareForUpdateRefsHandshakeClosure prepare_for_update_refs(_gc_state.raw_value());\n@@ -1330,1 +1330,1 @@\n-  ShenandoahGCStatePropagator propagator(_gc_state.raw_value());\n+  ShenandoahGCStatePropagatorHandshakeClosure propagator(_gc_state.raw_value());\n@@ -2023,1 +2023,1 @@\n-class ShenandoahRendezvousClosure : public HandshakeClosure {\n+class ShenandoahRendezvousHandshakeClosure : public HandshakeClosure {\n@@ -2025,1 +2025,1 @@\n-  inline ShenandoahRendezvousClosure(const char* name) : HandshakeClosure(name) {}\n+  inline ShenandoahRendezvousHandshakeClosure(const char* name) : HandshakeClosure(name) {}\n@@ -2030,1 +2030,1 @@\n-  ShenandoahRendezvousClosure cl(name);\n+  ShenandoahRendezvousHandshakeClosure cl(name);\n@@ -2072,1 +2072,1 @@\n-    ShenandoahGCStatePropagator propagator(_gc_state.raw_value());\n+    ShenandoahGCStatePropagatorHandshakeClosure propagator(_gc_state.raw_value());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-class ZMarkFlushStacksClosure : public HandshakeClosure {\n+class ZMarkFlushStacksHandshakeClosure : public HandshakeClosure {\n@@ -541,1 +541,1 @@\n-  ZMarkFlushStacksClosure(ZMark* mark)\n+  ZMarkFlushStacksHandshakeClosure(ZMark* mark)\n@@ -588,1 +588,1 @@\n-  ZMarkFlushStacksClosure cl(this);\n+  ZMarkFlushStacksHandshakeClosure cl(this);\n@@ -959,1 +959,1 @@\n-  ZMarkFlushStacksClosure cl(this);\n+  ZMarkFlushStacksHandshakeClosure cl(this);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-class ScopedAsyncExceptionHandshake : public AsyncExceptionHandshake {\n+class ScopedAsyncExceptionHandshakeClosure : public AsyncExceptionHandshakeClosure {\n@@ -112,2 +112,2 @@\n-  ScopedAsyncExceptionHandshake(OopHandle& session, OopHandle& error)\n-    : AsyncExceptionHandshake(error),\n+  ScopedAsyncExceptionHandshakeClosure(OopHandle& session, OopHandle& error)\n+    : AsyncExceptionHandshakeClosure(error),\n@@ -116,1 +116,1 @@\n-  ~ScopedAsyncExceptionHandshake() {\n+  ~ScopedAsyncExceptionHandshakeClosure() {\n@@ -125,1 +125,1 @@\n-      AsyncExceptionHandshake::do_thread(thread);\n+      AsyncExceptionHandshakeClosure::do_thread(thread);\n@@ -130,1 +130,1 @@\n-class CloseScopedMemoryClosure : public HandshakeClosure {\n+class CloseScopedMemoryHandshakeClosure : public HandshakeClosure {\n@@ -135,1 +135,1 @@\n-  CloseScopedMemoryClosure(jobject session, jobject error)\n+  CloseScopedMemoryHandshakeClosure(jobject session, jobject error)\n@@ -162,1 +162,1 @@\n-      jt->install_async_exception(new ScopedAsyncExceptionHandshake(session, error));\n+      jt->install_async_exception(new ScopedAsyncExceptionHandshakeClosure(session, error));\n@@ -216,1 +216,1 @@\n-  CloseScopedMemoryClosure cl(session, error);\n+  CloseScopedMemoryHandshakeClosure cl(session, error);\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2249,1 +2249,1 @@\n-  class ReadMonitorsClosure : public HandshakeClosure {\n+  class ReadMonitorsHandshakeClosure : public HandshakeClosure {\n@@ -2284,1 +2284,1 @@\n-    ReadMonitorsClosure() : HandshakeClosure(\"WB_HandshakeReadMonitors\"), _executed(false) {}\n+    ReadMonitorsHandshakeClosure() : HandshakeClosure(\"WB_HandshakeReadMonitors\"), _executed(false) {}\n@@ -2288,1 +2288,1 @@\n-  ReadMonitorsClosure rmc;\n+  ReadMonitorsHandshakeClosure rmhc;\n@@ -2294,1 +2294,1 @@\n-      Handshake::execute(&rmc, &tlh, target);\n+      Handshake::execute(&rmhc, &tlh, target);\n@@ -2297,1 +2297,1 @@\n-  return rmc.executed();\n+  return rmhc.executed();\n@@ -2301,1 +2301,1 @@\n-  class TraceSelfClosure : public HandshakeClosure {\n+  class TraceSelfHandshakeClosure : public HandshakeClosure {\n@@ -2315,1 +2315,1 @@\n-    TraceSelfClosure(Thread* thread) : HandshakeClosure(\"WB_TraceSelf\"), _num_threads_completed(0) {}\n+    TraceSelfHandshakeClosure(Thread* thread) : HandshakeClosure(\"WB_TraceSelf\"), _num_threads_completed(0) {}\n@@ -2319,1 +2319,1 @@\n-  TraceSelfClosure tsc(Thread::current());\n+  TraceSelfHandshakeClosure tshc(Thread::current());\n@@ -2322,1 +2322,1 @@\n-    Handshake::execute(&tsc);\n+    Handshake::execute(&tshc);\n@@ -2328,1 +2328,1 @@\n-      Handshake::execute(&tsc, &tlh, target);\n+      Handshake::execute(&tshc, &tlh, target);\n@@ -2331,1 +2331,1 @@\n-  return tsc.num_threads_completed();\n+  return tshc.num_threads_completed();\n@@ -2335,1 +2335,1 @@\n-  class TraceSelfClosure : public AsyncHandshakeClosure {\n+  class TraceSelfHandshakeClosure : public AsyncHandshakeClosure {\n@@ -2350,1 +2350,1 @@\n-    TraceSelfClosure(JavaThread* self_target) : AsyncHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n+    TraceSelfHandshakeClosure(JavaThread* self_target) : AsyncHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n@@ -2357,2 +2357,2 @@\n-      TraceSelfClosure* tsc = new TraceSelfClosure(target);\n-      Handshake::execute(tsc, target);\n+      TraceSelfHandshakeClosure* tshc = new TraceSelfHandshakeClosure(target);\n+      Handshake::execute(tshc, target);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1052,1 +1052,1 @@\n-class DeoptimizeMarkedClosure : public HandshakeClosure {\n+class DeoptimizeMarkedHandshakeClosure : public HandshakeClosure {\n@@ -1054,1 +1054,1 @@\n-  DeoptimizeMarkedClosure() : HandshakeClosure(\"Deoptimize\") {}\n+  DeoptimizeMarkedHandshakeClosure() : HandshakeClosure(\"Deoptimize\") {}\n@@ -1067,1 +1067,1 @@\n-  DeoptimizeMarkedClosure deopt;\n+  DeoptimizeMarkedHandshakeClosure deopt;\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-class EscapeBarrierSuspendHandshake : public HandshakeClosure {\n+class EscapeBarrierSuspendHandshakeClosure : public HandshakeClosure {\n@@ -170,1 +170,1 @@\n-  EscapeBarrierSuspendHandshake(const char* name) :\n+  EscapeBarrierSuspendHandshakeClosure(const char* name) :\n@@ -199,1 +199,1 @@\n-  EscapeBarrierSuspendHandshake sh(\"EscapeBarrierSuspendOne\");\n+  EscapeBarrierSuspendHandshakeClosure sh(\"EscapeBarrierSuspendOne\");\n@@ -245,1 +245,1 @@\n-  EscapeBarrierSuspendHandshake sh(\"EscapeBarrierSuspendAll\");\n+  EscapeBarrierSuspendHandshakeClosure sh(\"EscapeBarrierSuspendAll\");\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -708,1 +708,1 @@\n-    Handshake::execute(new UnsafeAccessErrorHandshake(), _handshakee);\n+    Handshake::execute(new UnsafeAccessErrorHandshakeClosure(), _handshakee);\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-class UnsafeAccessErrorHandshake;\n+class UnsafeAccessErrorHandshakeClosure;\n@@ -89,1 +89,1 @@\n-  friend UnsafeAccessErrorHandshake;\n+  friend UnsafeAccessErrorHandshakeClosure;\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1127,1 +1127,1 @@\n-void JavaThread::install_async_exception(AsyncExceptionHandshake* aeh) {\n+void JavaThread::install_async_exception(AsyncExceptionHandshakeClosure* aehc) {\n@@ -1131,1 +1131,1 @@\n-    delete aeh;\n+    delete aehc;\n@@ -1135,2 +1135,2 @@\n-  oop exception = aeh->exception();\n-  Handshake::execute(aeh, this);  \/\/ Install asynchronous handshake\n+  oop exception = aehc->exception();\n+  Handshake::execute(aehc, this);  \/\/ Install asynchronous handshake\n@@ -1154,2 +1154,2 @@\n-class InstallAsyncExceptionHandshake : public HandshakeClosure {\n-  AsyncExceptionHandshake* _aeh;\n+class InstallAsyncExceptionHandshakeClosure : public HandshakeClosure {\n+  AsyncExceptionHandshakeClosure* _aehc;\n@@ -1157,5 +1157,5 @@\n-  InstallAsyncExceptionHandshake(AsyncExceptionHandshake* aeh) :\n-    HandshakeClosure(\"InstallAsyncException\"), _aeh(aeh) {}\n-  ~InstallAsyncExceptionHandshake() {\n-    \/\/ If InstallAsyncExceptionHandshake was never executed we need to clean up _aeh.\n-    delete _aeh;\n+  InstallAsyncExceptionHandshakeClosure(AsyncExceptionHandshakeClosure* aehc) :\n+    HandshakeClosure(\"InstallAsyncException\"), _aehc(aehc) {}\n+  ~InstallAsyncExceptionHandshakeClosure() {\n+    \/\/ If InstallAsyncExceptionHandshakeClosure was never executed we need to clean up _aehc.\n+    delete _aehc;\n@@ -1165,2 +1165,2 @@\n-    target->install_async_exception(_aeh);\n-    _aeh = nullptr;\n+    target->install_async_exception(_aehc);\n+    _aehc = nullptr;\n@@ -1172,1 +1172,1 @@\n-  InstallAsyncExceptionHandshake iaeh(new AsyncExceptionHandshake(e));\n+  InstallAsyncExceptionHandshakeClosure iaeh(new AsyncExceptionHandshakeClosure(e));\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-class AsyncExceptionHandshake;\n+class AsyncExceptionHandshakeClosure;\n@@ -236,2 +236,2 @@\n-  friend class InstallAsyncExceptionHandshake;\n-  friend class AsyncExceptionHandshake;\n+  friend class InstallAsyncExceptionHandshakeClosure;\n+  friend class AsyncExceptionHandshakeClosure;\n@@ -242,1 +242,1 @@\n-  void install_async_exception(AsyncExceptionHandshake* aec = nullptr);\n+  void install_async_exception(AsyncExceptionHandshakeClosure* aec = nullptr);\n@@ -1167,1 +1167,1 @@\n-  \/\/ (see EnterInterpOnlyModeClosure).\n+  \/\/ (see EnterInterpOnlyModeHandshakeClosure).\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-class AsyncExceptionHandshake : public AsyncHandshakeClosure {\n+class AsyncExceptionHandshakeClosure : public AsyncHandshakeClosure {\n@@ -79,1 +79,1 @@\n-  AsyncExceptionHandshake(OopHandle& o, const char* name = \"AsyncExceptionHandshake\")\n+  AsyncExceptionHandshakeClosure(OopHandle& o, const char* name = \"AsyncExceptionHandshakeClosure\")\n@@ -82,1 +82,1 @@\n-  ~AsyncExceptionHandshake() {\n+  ~AsyncExceptionHandshakeClosure() {\n@@ -106,1 +106,1 @@\n-class UnsafeAccessErrorHandshake : public AsyncHandshakeClosure {\n+class UnsafeAccessErrorHandshakeClosure : public AsyncHandshakeClosure {\n@@ -108,1 +108,1 @@\n-  UnsafeAccessErrorHandshake() : AsyncHandshakeClosure(\"UnsafeAccessErrorHandshake\") {}\n+  UnsafeAccessErrorHandshakeClosure() : AsyncHandshakeClosure(\"UnsafeAccessErrorHandshakeClosure\") {}\n@@ -120,1 +120,1 @@\n-    Handshake::execute(new UnsafeAccessErrorHandshake(), this);\n+    Handshake::execute(new UnsafeAccessErrorHandshakeClosure(), this);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-class ThreadSelfSuspensionHandshake : public AsyncHandshakeClosure {\n+class ThreadSelfSuspensionHandshakeClosure : public AsyncHandshakeClosure {\n@@ -40,1 +40,1 @@\n-  ThreadSelfSuspensionHandshake() : AsyncHandshakeClosure(\"ThreadSelfSuspensionHandshake\") {}\n+  ThreadSelfSuspensionHandshakeClosure() : AsyncHandshakeClosure(\"ThreadSelfSuspensionHandshakeClosure\") {}\n@@ -55,1 +55,1 @@\n-class SuspendThreadHandshake : public HandshakeClosure {\n+class SuspendThreadHandshakeClosure : public HandshakeClosure {\n@@ -59,1 +59,1 @@\n-  SuspendThreadHandshake(bool register_vthread_SR) : HandshakeClosure(\"SuspendThread\"),\n+  SuspendThreadHandshakeClosure(bool register_vthread_SR) : HandshakeClosure(\"SuspendThread\"),\n@@ -96,1 +96,1 @@\n-    SuspendThreadHandshake st(register_vthread_SR);\n+    SuspendThreadHandshakeClosure st(register_vthread_SR);\n@@ -153,1 +153,1 @@\n-  ThreadSelfSuspensionHandshake* ts = new ThreadSelfSuspensionHandshake();\n+  ThreadSelfSuspensionHandshakeClosure* ts = new ThreadSelfSuspensionHandshakeClosure();\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-class SuspendThreadHandshake;\n-class ThreadSelfSuspensionHandshake;\n+class SuspendThreadHandshakeClosure;\n+class ThreadSelfSuspensionHandshakeClosure;\n@@ -32,2 +32,2 @@\n-  friend SuspendThreadHandshake;\n-  friend ThreadSelfSuspensionHandshake;\n+  friend SuspendThreadHandshakeClosure;\n+  friend ThreadSelfSuspensionHandshakeClosure;\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1667,1 +1667,1 @@\n-class HandshakeForDeflation : public HandshakeClosure {\n+class DeflationHandshakeClosure : public HandshakeClosure {\n@@ -1669,1 +1669,1 @@\n-  HandshakeForDeflation() : HandshakeClosure(\"HandshakeForDeflation\") {}\n+  DeflationHandshakeClosure() : HandshakeClosure(\"DeflationHandshakeClosure\") {}\n@@ -1672,1 +1672,1 @@\n-    log_trace(monitorinflation)(\"HandshakeForDeflation::do_thread: thread=\"\n+    log_trace(monitorinflation)(\"DeflationHandshakeClosure::do_thread: thread=\"\n@@ -1837,2 +1837,2 @@\n-    HandshakeForDeflation hfd_hc;\n-    Handshake::execute(&hfd_hc);\n+    DeflationHandshakeClosure dhc;\n+    Handshake::execute(&dhc);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-class HandshakeALotClosure : public HandshakeClosure {\n+class ALotOfHandshakeClosure : public HandshakeClosure {\n@@ -302,1 +302,1 @@\n-  HandshakeALotClosure() : HandshakeClosure(\"HandshakeALot\") {}\n+  ALotOfHandshakeClosure() : HandshakeClosure(\"ALotOfHandshakeClosure\") {}\n@@ -456,2 +456,2 @@\n-        HandshakeALotClosure hal_cl;\n-        Handshake::execute(&hal_cl);\n+        ALotOfHandshakeClosure aohc;\n+        Handshake::execute(&aohc);\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1127,1 +1127,1 @@\n-class GetThreadSnapshotClosure: public HandshakeClosure {\n+class GetThreadSnapshotHandshakeClosure: public HandshakeClosure {\n@@ -1183,2 +1183,2 @@\n-  GetThreadSnapshotClosure(Handle thread_h, JavaThread* java_thread):\n-    HandshakeClosure(\"GetThreadSnapshotClosure\"),\n+  GetThreadSnapshotHandshakeClosure(Handle thread_h, JavaThread* java_thread):\n+    HandshakeClosure(\"GetThreadSnapshotHandshakeClosure\"),\n@@ -1190,1 +1190,1 @@\n-  virtual ~GetThreadSnapshotClosure() {\n+  virtual ~GetThreadSnapshotHandshakeClosure() {\n@@ -1479,1 +1479,1 @@\n-  GetThreadSnapshotClosure cl(thread_h, java_thread);\n+  GetThreadSnapshotHandshakeClosure cl(thread_h, java_thread);\n@@ -1511,1 +1511,1 @@\n-      GetThreadSnapshotClosure::OwnedLock* lock_info = cl._locks->adr_at(n);\n+      GetThreadSnapshotHandshakeClosure::OwnedLock* lock_info = cl._locks->adr_at(n);\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}