{"files":[{"patch":"@@ -1902,1 +1902,1 @@\n-  class GetStackTraceClosure : public HandshakeClosure {\n+  class GetStackTraceHandshakeClosure : public HandshakeClosure {\n@@ -1910,2 +1910,2 @@\n-    GetStackTraceClosure(Handle java_thread) :\n-        HandshakeClosure(\"GetStackTraceClosure\"), _java_thread(java_thread), _depth(0), _retry_handshake(false),\n+    GetStackTraceHandshakeClosure(Handle java_thread) :\n+        HandshakeClosure(\"GetStackTraceHandshakeClosure\"), _java_thread(java_thread), _depth(0), _retry_handshake(false),\n@@ -1914,1 +1914,1 @@\n-    ~GetStackTraceClosure() {\n+    ~GetStackTraceHandshakeClosure() {\n@@ -1980,1 +1980,1 @@\n-  GetStackTraceClosure gstc(Handle(THREAD, java_thread));\n+  GetStackTraceHandshakeClosure gstc(Handle(THREAD, java_thread));\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1148,1 +1148,1 @@\n-class ShenandoahUpdateThreadClosure : public HandshakeClosure {\n+class ShenandoahUpdateThreadHandshakeClosure : public HandshakeClosure {\n@@ -1155,1 +1155,1 @@\n-  ShenandoahUpdateThreadClosure();\n+  ShenandoahUpdateThreadHandshakeClosure();\n@@ -1159,1 +1159,1 @@\n-ShenandoahUpdateThreadClosure::ShenandoahUpdateThreadClosure() :\n+ShenandoahUpdateThreadHandshakeClosure::ShenandoahUpdateThreadHandshakeClosure() :\n@@ -1163,1 +1163,1 @@\n-void ShenandoahUpdateThreadClosure::do_thread(Thread* thread) {\n+void ShenandoahUpdateThreadHandshakeClosure::do_thread(Thread* thread) {\n@@ -1172,1 +1172,1 @@\n-  ShenandoahUpdateThreadClosure cl;\n+  ShenandoahUpdateThreadHandshakeClosure cl;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1248,1 +1248,1 @@\n-class ShenandoahGCStatePropagator : public HandshakeClosure {\n+class ShenandoahGCStatePropagatorHandshakeClosure : public HandshakeClosure {\n@@ -1250,1 +1250,1 @@\n-  explicit ShenandoahGCStatePropagator(char gc_state) :\n+  explicit ShenandoahGCStatePropagatorHandshakeClosure(char gc_state) :\n@@ -1261,1 +1261,1 @@\n-class ShenandoahPrepareForUpdateRefs : public HandshakeClosure {\n+class ShenandoahPrepareForUpdateRefsHandshakeClosure : public HandshakeClosure {\n@@ -1263,1 +1263,1 @@\n-  explicit ShenandoahPrepareForUpdateRefs(char gc_state) :\n+  explicit ShenandoahPrepareForUpdateRefsHandshakeClosure(char gc_state) :\n@@ -1275,1 +1275,1 @@\n-  ShenandoahGCStatePropagator _propagator;\n+  ShenandoahGCStatePropagatorHandshakeClosure _propagator;\n@@ -1298,1 +1298,1 @@\n-  ShenandoahPrepareForUpdateRefs prepare_for_update_refs(_gc_state.raw_value());\n+  ShenandoahPrepareForUpdateRefsHandshakeClosure prepare_for_update_refs(_gc_state.raw_value());\n@@ -1330,1 +1330,1 @@\n-  ShenandoahGCStatePropagator propagator(_gc_state.raw_value());\n+  ShenandoahGCStatePropagatorHandshakeClosure propagator(_gc_state.raw_value());\n@@ -2023,1 +2023,1 @@\n-class ShenandoahRendezvousClosure : public HandshakeClosure {\n+class ShenandoahRendezvousHandshakeClosure : public HandshakeClosure {\n@@ -2025,1 +2025,1 @@\n-  inline ShenandoahRendezvousClosure(const char* name) : HandshakeClosure(name) {}\n+  inline ShenandoahRendezvousHandshakeClosure(const char* name) : HandshakeClosure(name) {}\n@@ -2030,1 +2030,1 @@\n-  ShenandoahRendezvousClosure cl(name);\n+  ShenandoahRendezvousHandshakeClosure cl(name);\n@@ -2072,1 +2072,1 @@\n-    ShenandoahGCStatePropagator propagator(_gc_state.raw_value());\n+    ShenandoahGCStatePropagatorHandshakeClosure propagator(_gc_state.raw_value());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-class ZMarkFlushStacksClosure : public HandshakeClosure {\n+class ZMarkFlushStacksHandshakeClosure : public HandshakeClosure {\n@@ -541,1 +541,1 @@\n-  ZMarkFlushStacksClosure(ZMark* mark)\n+  ZMarkFlushStacksHandshakeClosure(ZMark* mark)\n@@ -588,1 +588,1 @@\n-  ZMarkFlushStacksClosure cl(this);\n+  ZMarkFlushStacksHandshakeClosure cl(this);\n@@ -959,1 +959,1 @@\n-  ZMarkFlushStacksClosure cl(this);\n+  ZMarkFlushStacksHandshakeClosure cl(this);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1387,1 +1387,1 @@\n-  GetOwnedMonitorInfoClosure op(this, calling_thread, owned_monitors_list);\n+  GetOwnedMonitorInfoHandshakeClosure op(this, calling_thread, owned_monitors_list);\n@@ -1447,1 +1447,1 @@\n-  GetOwnedMonitorInfoClosure op(this, calling_thread, owned_monitors_list);\n+  GetOwnedMonitorInfoHandshakeClosure op(this, calling_thread, owned_monitors_list);\n@@ -1485,1 +1485,1 @@\n-  GetCurrentContendedMonitorClosure op(this, current, monitor_ptr);\n+  GetCurrentContendedMonitorHandshakeClosure op(this, current, monitor_ptr);\n@@ -1664,1 +1664,1 @@\n-  GetStackTraceClosure op(this, start_depth, max_frame_count, frame_buffer, count_ptr);\n+  GetStackTraceHandshakeClosure op(this, start_depth, max_frame_count, frame_buffer, count_ptr);\n@@ -1702,1 +1702,1 @@\n-    GetSingleStackTraceClosure op(this, current_thread, thread, max_frame_count);\n+    GetSingleStackTraceHandshakeClosure op(this, current_thread, thread, max_frame_count);\n@@ -1727,1 +1727,1 @@\n-  GetFrameCountClosure op(this, count_ptr);\n+  GetFrameCountHandshakeClosure op(this, count_ptr);\n@@ -1774,1 +1774,1 @@\n-  UpdateForPopTopFrameClosure op(state);\n+  UpdateForPopTopFrameHandshakeClosure op(state);\n@@ -1786,1 +1786,1 @@\n-  GetFrameLocationClosure op(this, depth, method_ptr, location_ptr);\n+  GetFrameLocationHandshakeClosure op(this, depth, method_ptr, location_ptr);\n@@ -1815,1 +1815,1 @@\n-  SetOrClearFramePopClosure op(this, state, true \/* set *\/, depth);\n+  SetOrClearFramePopHandshakeClosure op(this, state, true \/* set *\/, depth);\n@@ -1843,1 +1843,1 @@\n-  SetOrClearFramePopClosure op(this, state, false \/* clear all frame pops*\/);\n+  SetOrClearFramePopHandshakeClosure op(this, state, false \/* clear all frame pops*\/);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1991,1 +1991,1 @@\n-\/\/ AdapterClosure is to make use of JvmtiUnitedHandshakeClosure objects from\n+\/\/ AdapterHandshakeClosure is to make use of JvmtiUnitedHandshakeClosure objects from\n@@ -1993,1 +1993,1 @@\n-class AdapterClosure : public HandshakeClosure {\n+class AdapterHandshakeClosure : public HandshakeClosure {\n@@ -1998,1 +1998,1 @@\n-  AdapterClosure(JvmtiUnitedHandshakeClosure* hs_cl, Handle target_h)\n+  AdapterHandshakeClosure(JvmtiUnitedHandshakeClosure* hs_cl, Handle target_h)\n@@ -2056,1 +2056,1 @@\n-    AdapterClosure acl(hs_cl, target_h);\n+    AdapterHandshakeClosure acl(hs_cl, target_h);\n@@ -2096,1 +2096,1 @@\n-GetSingleStackTraceClosure::doit() {\n+GetSingleStackTraceHandshakeClosure::doit() {\n@@ -2109,1 +2109,1 @@\n-GetSingleStackTraceClosure::do_thread(Thread *target) {\n+GetSingleStackTraceHandshakeClosure::do_thread(Thread *target) {\n@@ -2115,1 +2115,1 @@\n-GetSingleStackTraceClosure::do_vthread(Handle target_h) {\n+GetSingleStackTraceHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2246,1 +2246,1 @@\n-  SetForceEarlyReturn op(state, value, tos);\n+  SetForceEarlyReturnHandshakeClosure op(state, value, tos);\n@@ -2252,1 +2252,1 @@\n-SetForceEarlyReturn::doit(Thread *target) {\n+SetForceEarlyReturnHandshakeClosure::doit(Thread *target) {\n@@ -2387,1 +2387,1 @@\n-UpdateForPopTopFrameClosure::doit(Thread *target) {\n+UpdateForPopTopFrameHandshakeClosure::doit(Thread *target) {\n@@ -2475,1 +2475,1 @@\n-SetOrClearFramePopClosure::do_thread(Thread *target) {\n+SetOrClearFramePopHandshakeClosure::do_thread(Thread *target) {\n@@ -2507,1 +2507,1 @@\n-SetOrClearFramePopClosure::do_vthread(Handle target_h) {\n+SetOrClearFramePopHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2524,1 +2524,1 @@\n-GetOwnedMonitorInfoClosure::do_thread(Thread *target) {\n+GetOwnedMonitorInfoHandshakeClosure::do_thread(Thread *target) {\n@@ -2534,1 +2534,1 @@\n-GetOwnedMonitorInfoClosure::do_vthread(Handle target_h) {\n+GetOwnedMonitorInfoHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2551,1 +2551,1 @@\n-GetCurrentContendedMonitorClosure::do_thread(Thread *target) {\n+GetCurrentContendedMonitorHandshakeClosure::do_thread(Thread *target) {\n@@ -2562,1 +2562,1 @@\n-GetCurrentContendedMonitorClosure::do_vthread(Handle target_h) {\n+GetCurrentContendedMonitorHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2576,1 +2576,1 @@\n-GetStackTraceClosure::do_thread(Thread *target) {\n+GetStackTraceHandshakeClosure::do_thread(Thread *target) {\n@@ -2589,1 +2589,1 @@\n-GetStackTraceClosure::do_vthread(Handle target_h) {\n+GetStackTraceHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2601,1 +2601,1 @@\n-PrintStackTraceClosure::do_thread_impl(Thread *target) {\n+PrintStackTraceHandshakeClosure::do_thread_impl(Thread *target) {\n@@ -2636,1 +2636,1 @@\n-PrintStackTraceClosure::do_thread(Thread *target) {\n+PrintStackTraceHandshakeClosure::do_thread(Thread *target) {\n@@ -2644,1 +2644,1 @@\n-  PrintStackTraceClosure::do_thread_impl(target);\n+  PrintStackTraceHandshakeClosure::do_thread_impl(target);\n@@ -2649,1 +2649,1 @@\n-GetFrameCountClosure::do_thread(Thread *target) {\n+GetFrameCountHandshakeClosure::do_thread(Thread *target) {\n@@ -2659,1 +2659,1 @@\n-GetFrameCountClosure::do_vthread(Handle target_h) {\n+GetFrameCountHandshakeClosure::do_vthread(Handle target_h) {\n@@ -2664,1 +2664,1 @@\n-GetFrameLocationClosure::do_thread(Thread *target) {\n+GetFrameLocationHandshakeClosure::do_thread(Thread *target) {\n@@ -2675,1 +2675,1 @@\n-GetFrameLocationClosure::do_vthread(Handle target_h) {\n+GetFrameLocationHandshakeClosure::do_vthread(Handle target_h) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -511,1 +511,1 @@\n-class SetForceEarlyReturn : public JvmtiUnitedHandshakeClosure {\n+class SetForceEarlyReturnHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -517,2 +517,2 @@\n-  SetForceEarlyReturn(JvmtiThreadState* state, jvalue value, TosState tos)\n-    : JvmtiUnitedHandshakeClosure(\"SetForceEarlyReturn\"),\n+  SetForceEarlyReturnHandshakeClosure(JvmtiThreadState* state, jvalue value, TosState tos)\n+    : JvmtiUnitedHandshakeClosure(\"SetForceEarlyReturnHandshakeClosure\"),\n@@ -536,1 +536,1 @@\n-class UpdateForPopTopFrameClosure : public JvmtiUnitedHandshakeClosure {\n+class UpdateForPopTopFrameHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -541,1 +541,1 @@\n-  UpdateForPopTopFrameClosure(JvmtiThreadState* state)\n+  UpdateForPopTopFrameHandshakeClosure(JvmtiThreadState* state)\n@@ -558,1 +558,1 @@\n-class SetOrClearFramePopClosure : public JvmtiUnitedHandshakeClosure {\n+class SetOrClearFramePopHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -566,2 +566,2 @@\n-  SetOrClearFramePopClosure(JvmtiEnv *env, JvmtiThreadState* state, bool set, jint depth = 0)\n-    : JvmtiUnitedHandshakeClosure(\"SetOrClearFramePopClosure\"),\n+  SetOrClearFramePopHandshakeClosure(JvmtiEnv *env, JvmtiThreadState* state, bool set, jint depth = 0)\n+    : JvmtiUnitedHandshakeClosure(\"SetOrClearFramePopHandshakeClosure\"),\n@@ -577,1 +577,1 @@\n-class GetOwnedMonitorInfoClosure : public JvmtiUnitedHandshakeClosure {\n+class GetOwnedMonitorInfoHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -584,1 +584,1 @@\n-  GetOwnedMonitorInfoClosure(JvmtiEnv* env,\n+  GetOwnedMonitorInfoHandshakeClosure(JvmtiEnv* env,\n@@ -621,1 +621,1 @@\n-class GetCurrentContendedMonitorClosure : public JvmtiUnitedHandshakeClosure {\n+class GetCurrentContendedMonitorHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -628,1 +628,1 @@\n-  GetCurrentContendedMonitorClosure(JvmtiEnv *env,\n+  GetCurrentContendedMonitorHandshakeClosure(JvmtiEnv *env,\n@@ -640,1 +640,1 @@\n-class GetStackTraceClosure : public JvmtiUnitedHandshakeClosure {\n+class GetStackTraceHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -649,1 +649,1 @@\n-  GetStackTraceClosure(JvmtiEnv *env, jint start_depth, jint max_count,\n+  GetStackTraceHandshakeClosure(JvmtiEnv *env, jint start_depth, jint max_count,\n@@ -663,1 +663,1 @@\n-class PrintStackTraceClosure : public HandshakeClosure {\n+class PrintStackTraceHandshakeClosure : public HandshakeClosure {\n@@ -667,2 +667,2 @@\n-  PrintStackTraceClosure()\n-      : HandshakeClosure(\"PrintStackTraceClosure\") {}\n+  PrintStackTraceHandshakeClosure()\n+      : HandshakeClosure(\"PrintStackTraceHandshakeClosure\") {}\n@@ -752,1 +752,1 @@\n-class GetSingleStackTraceClosure : public JvmtiUnitedHandshakeClosure {\n+class GetSingleStackTraceHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -759,1 +759,1 @@\n-  GetSingleStackTraceClosure(JvmtiEnv *env, JavaThread *calling_thread,\n+  GetSingleStackTraceHandshakeClosure(JvmtiEnv *env, JavaThread *calling_thread,\n@@ -774,1 +774,1 @@\n-class GetFrameCountClosure : public JvmtiUnitedHandshakeClosure {\n+class GetFrameCountHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -780,1 +780,1 @@\n-  GetFrameCountClosure(JvmtiEnv *env, jint *count_ptr)\n+  GetFrameCountHandshakeClosure(JvmtiEnv *env, jint *count_ptr)\n@@ -789,1 +789,1 @@\n-class GetFrameLocationClosure : public JvmtiUnitedHandshakeClosure {\n+class GetFrameLocationHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -797,1 +797,1 @@\n-  GetFrameLocationClosure(JvmtiEnv *env, jint depth,\n+  GetFrameLocationHandshakeClosure(JvmtiEnv *env, jint depth,\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-class GetCurrentLocationClosure : public JvmtiUnitedHandshakeClosure {\n+class GetCurrentLocationHandshakeClosure : public JvmtiUnitedHandshakeClosure {\n@@ -269,1 +269,1 @@\n-  GetCurrentLocationClosure()\n+  GetCurrentLocationHandshakeClosure()\n@@ -357,1 +357,1 @@\n-      GetCurrentLocationClosure op;\n+      GetCurrentLocationHandshakeClosure op;\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-\/\/ EnterInterpOnlyModeClosure\n+\/\/ EnterInterpOnlyModeHandshakeClosure\n@@ -204,1 +204,1 @@\n-class EnterInterpOnlyModeClosure : public HandshakeClosure {\n+class EnterInterpOnlyModeHandshakeClosure : public HandshakeClosure {\n@@ -210,1 +210,1 @@\n-  EnterInterpOnlyModeClosure(JvmtiThreadState* state)\n+  EnterInterpOnlyModeHandshakeClosure(JvmtiThreadState* state)\n@@ -371,1 +371,1 @@\n-    return;  \/\/ An EnterInterpOnlyModeClosure handshake is already pending for execution.\n+    return;  \/\/ An EnterInterpOnlyModeHandshakeClosure handshake is already pending for execution.\n@@ -373,1 +373,1 @@\n-  \/\/ This flag will be cleared in EnterInterpOnlyModeClosure handshake.\n+  \/\/ This flag will be cleared in EnterInterpOnlyModeHandshakeClosure handshake.\n@@ -376,1 +376,1 @@\n-    return;  \/\/ EnterInterpOnlyModeClosure will be executed right after mount.\n+    return;  \/\/ EnterInterpOnlyModeHandshakeClosure will be executed right after mount.\n@@ -378,1 +378,1 @@\n-  EnterInterpOnlyModeClosure hs(state);\n+  EnterInterpOnlyModeHandshakeClosure hs(state);\n@@ -1121,1 +1121,1 @@\n-  EnterInterpOnlyModeClosure hs(state);\n+  EnterInterpOnlyModeHandshakeClosure hs(state);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-    PrintStackTraceClosure pstc;\n+    PrintStackTraceHandshakeClosure pstc;\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-  \/\/ It is cleared by EnterInterpOnlyModeClosure handshake.\n+  \/\/ It is cleared by EnterInterpOnlyModeHandshakeClosure handshake.\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-class ScopedAsyncExceptionHandshake : public AsyncExceptionHandshake {\n+class ScopedAsyncExceptionHandshakeClosure : public AsyncExceptionHandshakeClosure {\n@@ -112,2 +112,2 @@\n-  ScopedAsyncExceptionHandshake(OopHandle& session, OopHandle& error)\n-    : AsyncExceptionHandshake(error),\n+  ScopedAsyncExceptionHandshakeClosure(OopHandle& session, OopHandle& error)\n+    : AsyncExceptionHandshakeClosure(error),\n@@ -116,1 +116,1 @@\n-  ~ScopedAsyncExceptionHandshake() {\n+  ~ScopedAsyncExceptionHandshakeClosure() {\n@@ -125,1 +125,1 @@\n-      AsyncExceptionHandshake::do_thread(thread);\n+      AsyncExceptionHandshakeClosure::do_thread(thread);\n@@ -130,1 +130,1 @@\n-class CloseScopedMemoryClosure : public HandshakeClosure {\n+class CloseScopedMemoryHandshakeClosure : public HandshakeClosure {\n@@ -135,1 +135,1 @@\n-  CloseScopedMemoryClosure(jobject session, jobject error)\n+  CloseScopedMemoryHandshakeClosure(jobject session, jobject error)\n@@ -162,1 +162,1 @@\n-      jt->install_async_exception(new ScopedAsyncExceptionHandshake(session, error));\n+      jt->install_async_exception(new ScopedAsyncExceptionHandshakeClosure(session, error));\n@@ -216,1 +216,1 @@\n-  CloseScopedMemoryClosure cl(session, error);\n+  CloseScopedMemoryHandshakeClosure cl(session, error);\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2249,1 +2249,1 @@\n-  class ReadMonitorsClosure : public HandshakeClosure {\n+  class ReadMonitorsHandshakeClosure : public HandshakeClosure {\n@@ -2284,1 +2284,1 @@\n-    ReadMonitorsClosure() : HandshakeClosure(\"WB_HandshakeReadMonitors\"), _executed(false) {}\n+    ReadMonitorsHandshakeClosure() : HandshakeClosure(\"WB_HandshakeReadMonitors\"), _executed(false) {}\n@@ -2288,1 +2288,1 @@\n-  ReadMonitorsClosure rmc;\n+  ReadMonitorsHandshakeClosure rmc;\n@@ -2301,1 +2301,1 @@\n-  class TraceSelfClosure : public HandshakeClosure {\n+  class TraceSelfHandshakeClosure : public HandshakeClosure {\n@@ -2315,1 +2315,1 @@\n-    TraceSelfClosure(Thread* thread) : HandshakeClosure(\"WB_TraceSelf\"), _num_threads_completed(0) {}\n+    TraceSelfHandshakeClosure(Thread* thread) : HandshakeClosure(\"WB_TraceSelf\"), _num_threads_completed(0) {}\n@@ -2319,1 +2319,1 @@\n-  TraceSelfClosure tsc(Thread::current());\n+  TraceSelfHandshakeClosure tsc(Thread::current());\n@@ -2335,1 +2335,1 @@\n-  class TraceSelfClosure : public AsyncHandshakeClosure {\n+  class TraceSelfHandshakeClosure : public AsyncHandshakeClosure {\n@@ -2350,1 +2350,1 @@\n-    TraceSelfClosure(JavaThread* self_target) : AsyncHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n+    TraceSelfHandshakeClosure(JavaThread* self_target) : AsyncHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n@@ -2357,1 +2357,1 @@\n-      TraceSelfClosure* tsc = new TraceSelfClosure(target);\n+      TraceSelfHandshakeClosure* tsc = new TraceSelfHandshakeClosure(target);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1052,1 +1052,1 @@\n-class DeoptimizeMarkedClosure : public HandshakeClosure {\n+class DeoptimizeMarkedHandshakeClosure : public HandshakeClosure {\n@@ -1054,1 +1054,1 @@\n-  DeoptimizeMarkedClosure() : HandshakeClosure(\"Deoptimize\") {}\n+  DeoptimizeMarkedHandshakeClosure() : HandshakeClosure(\"Deoptimize\") {}\n@@ -1067,1 +1067,1 @@\n-  DeoptimizeMarkedClosure deopt;\n+  DeoptimizeMarkedHandshakeClosure deopt;\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-class EscapeBarrierSuspendHandshake : public HandshakeClosure {\n+class EscapeBarrierSuspendHandshakeClosure : public HandshakeClosure {\n@@ -170,1 +170,1 @@\n-  EscapeBarrierSuspendHandshake(const char* name) :\n+  EscapeBarrierSuspendHandshakeClosure(const char* name) :\n@@ -199,1 +199,1 @@\n-  EscapeBarrierSuspendHandshake sh(\"EscapeBarrierSuspendOne\");\n+  EscapeBarrierSuspendHandshakeClosure sh(\"EscapeBarrierSuspendOne\");\n@@ -245,1 +245,1 @@\n-  EscapeBarrierSuspendHandshake sh(\"EscapeBarrierSuspendAll\");\n+  EscapeBarrierSuspendHandshakeClosure sh(\"EscapeBarrierSuspendAll\");\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -708,1 +708,1 @@\n-    Handshake::execute(new UnsafeAccessErrorHandshake(), _handshakee);\n+    Handshake::execute(new UnsafeAccessErrorHandshakeClosure(), _handshakee);\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-class UnsafeAccessErrorHandshake;\n+class UnsafeAccessErrorHandshakeClosure;\n@@ -89,1 +89,1 @@\n-  friend UnsafeAccessErrorHandshake;\n+  friend UnsafeAccessErrorHandshakeClosure;\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1127,1 +1127,1 @@\n-void JavaThread::install_async_exception(AsyncExceptionHandshake* aeh) {\n+void JavaThread::install_async_exception(AsyncExceptionHandshakeClosure* aeh) {\n@@ -1154,2 +1154,2 @@\n-class InstallAsyncExceptionHandshake : public HandshakeClosure {\n-  AsyncExceptionHandshake* _aeh;\n+class InstallAsyncExceptionHandshakeClosure : public HandshakeClosure {\n+  AsyncExceptionHandshakeClosure* _aeh;\n@@ -1157,1 +1157,1 @@\n-  InstallAsyncExceptionHandshake(AsyncExceptionHandshake* aeh) :\n+  InstallAsyncExceptionHandshakeClosure(AsyncExceptionHandshakeClosure* aeh) :\n@@ -1159,2 +1159,2 @@\n-  ~InstallAsyncExceptionHandshake() {\n-    \/\/ If InstallAsyncExceptionHandshake was never executed we need to clean up _aeh.\n+  ~InstallAsyncExceptionHandshakeClosure() {\n+    \/\/ If InstallAsyncExceptionHandshakeClosure was never executed we need to clean up _aeh.\n@@ -1172,1 +1172,1 @@\n-  InstallAsyncExceptionHandshake iaeh(new AsyncExceptionHandshake(e));\n+  InstallAsyncExceptionHandshakeClosure iaeh(new AsyncExceptionHandshakeClosure(e));\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-class AsyncExceptionHandshake;\n+class AsyncExceptionHandshakeClosure;\n@@ -236,2 +236,2 @@\n-  friend class InstallAsyncExceptionHandshake;\n-  friend class AsyncExceptionHandshake;\n+  friend class InstallAsyncExceptionHandshakeClosure;\n+  friend class AsyncExceptionHandshakeClosure;\n@@ -242,1 +242,1 @@\n-  void install_async_exception(AsyncExceptionHandshake* aec = nullptr);\n+  void install_async_exception(AsyncExceptionHandshakeClosure* aec = nullptr);\n@@ -1167,1 +1167,1 @@\n-  \/\/ (see EnterInterpOnlyModeClosure).\n+  \/\/ (see EnterInterpOnlyModeHandshakeClosure).\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-class AsyncExceptionHandshake : public AsyncHandshakeClosure {\n+class AsyncExceptionHandshakeClosure : public AsyncHandshakeClosure {\n@@ -79,1 +79,1 @@\n-  AsyncExceptionHandshake(OopHandle& o, const char* name = \"AsyncExceptionHandshake\")\n+  AsyncExceptionHandshakeClosure(OopHandle& o, const char* name = \"AsyncExceptionHandshakeClosure\")\n@@ -82,1 +82,1 @@\n-  ~AsyncExceptionHandshake() {\n+  ~AsyncExceptionHandshakeClosure() {\n@@ -106,1 +106,1 @@\n-class UnsafeAccessErrorHandshake : public AsyncHandshakeClosure {\n+class UnsafeAccessErrorHandshakeClosure : public AsyncHandshakeClosure {\n@@ -108,1 +108,1 @@\n-  UnsafeAccessErrorHandshake() : AsyncHandshakeClosure(\"UnsafeAccessErrorHandshake\") {}\n+  UnsafeAccessErrorHandshakeClosure() : AsyncHandshakeClosure(\"UnsafeAccessErrorHandshakeClosure\") {}\n@@ -120,1 +120,1 @@\n-    Handshake::execute(new UnsafeAccessErrorHandshake(), this);\n+    Handshake::execute(new UnsafeAccessErrorHandshakeClosure(), this);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-class ThreadSelfSuspensionHandshake : public AsyncHandshakeClosure {\n+class ThreadSelfSuspensionHandshakeClosure : public AsyncHandshakeClosure {\n@@ -40,1 +40,1 @@\n-  ThreadSelfSuspensionHandshake() : AsyncHandshakeClosure(\"ThreadSelfSuspensionHandshake\") {}\n+  ThreadSelfSuspensionHandshakeClosure() : AsyncHandshakeClosure(\"ThreadSelfSuspensionHandshakeClosure\") {}\n@@ -55,1 +55,1 @@\n-class SuspendThreadHandshake : public HandshakeClosure {\n+class SuspendThreadHandshakeClosure : public HandshakeClosure {\n@@ -59,1 +59,1 @@\n-  SuspendThreadHandshake(bool register_vthread_SR) : HandshakeClosure(\"SuspendThread\"),\n+  SuspendThreadHandshakeClosure(bool register_vthread_SR) : HandshakeClosure(\"SuspendThread\"),\n@@ -96,1 +96,1 @@\n-    SuspendThreadHandshake st(register_vthread_SR);\n+    SuspendThreadHandshakeClosure st(register_vthread_SR);\n@@ -153,1 +153,1 @@\n-  ThreadSelfSuspensionHandshake* ts = new ThreadSelfSuspensionHandshake();\n+  ThreadSelfSuspensionHandshakeClosure* ts = new ThreadSelfSuspensionHandshakeClosure();\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-class SuspendThreadHandshake;\n-class ThreadSelfSuspensionHandshake;\n+class SuspendThreadHandshakeClosure;\n+class ThreadSelfSuspensionHandshakeClosure;\n@@ -32,2 +32,2 @@\n-  friend SuspendThreadHandshake;\n-  friend ThreadSelfSuspensionHandshake;\n+  friend SuspendThreadHandshakeClosure;\n+  friend ThreadSelfSuspensionHandshakeClosure;\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1667,1 +1667,1 @@\n-class HandshakeForDeflation : public HandshakeClosure {\n+class DeflationHandshakeClosure : public HandshakeClosure {\n@@ -1669,1 +1669,1 @@\n-  HandshakeForDeflation() : HandshakeClosure(\"HandshakeForDeflation\") {}\n+  DeflationHandshakeClosure() : HandshakeClosure(\"DeflationHandshakeClosure\") {}\n@@ -1672,1 +1672,1 @@\n-    log_trace(monitorinflation)(\"HandshakeForDeflation::do_thread: thread=\"\n+    log_trace(monitorinflation)(\"DeflationHandshakeClosure::do_thread: thread=\"\n@@ -1837,1 +1837,1 @@\n-    HandshakeForDeflation hfd_hc;\n+    DeflationHandshakeClosure hfd_hc;\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-class HandshakeALotClosure : public HandshakeClosure {\n+class ALotOfHandshakeClosure : public HandshakeClosure {\n@@ -302,1 +302,1 @@\n-  HandshakeALotClosure() : HandshakeClosure(\"HandshakeALot\") {}\n+  ALotOfHandshakeClosure() : HandshakeClosure(\"ALotOfHandshakeClosure\") {}\n@@ -456,1 +456,1 @@\n-        HandshakeALotClosure hal_cl;\n+        ALotOfHandshakeClosure hal_cl;\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1127,1 +1127,1 @@\n-class GetThreadSnapshotClosure: public HandshakeClosure {\n+class GetThreadSnapshotHandshakeClosure: public HandshakeClosure {\n@@ -1183,2 +1183,2 @@\n-  GetThreadSnapshotClosure(Handle thread_h, JavaThread* java_thread):\n-    HandshakeClosure(\"GetThreadSnapshotClosure\"),\n+  GetThreadSnapshotHandshakeClosure(Handle thread_h, JavaThread* java_thread):\n+    HandshakeClosure(\"GetThreadSnapshotHandshakeClosure\"),\n@@ -1190,1 +1190,1 @@\n-  virtual ~GetThreadSnapshotClosure() {\n+  virtual ~GetThreadSnapshotHandshakeClosure() {\n@@ -1479,1 +1479,1 @@\n-  GetThreadSnapshotClosure cl(thread_h, java_thread);\n+  GetThreadSnapshotHandshakeClosure cl(thread_h, java_thread);\n@@ -1511,1 +1511,1 @@\n-      GetThreadSnapshotClosure::OwnedLock* lock_info = cl._locks->adr_at(n);\n+      GetThreadSnapshotHandshakeClosure::OwnedLock* lock_info = cl._locks->adr_at(n);\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}