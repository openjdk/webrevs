{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.util.concurrent.Callable;\n@@ -126,0 +127,16 @@\n+\n+    private <T> T callOnEventThread(Callable<T> callable) {\n+        FutureTask<T> f = new FutureTask<>(callable);\n+\n+        Invoker.getInvoker().invokeOnEventThread(f);\n+        T result = null;\n+        try {\n+            result = f.get();\n+        } catch (ExecutionException ex) {\n+            log.severe(\"InputMethodClientImpl \" + ex);\n+        } catch (InterruptedException ex) {\n+            log.severe(\"InputMethodClientImpl InterruptedException\" + ex);\n+        }\n+        return result;\n+    }\n+\n@@ -128,1 +145,1 @@\n-        FutureTask<Point2D> f = new FutureTask<>(() -> {\n+        Point2D result = callOnEventThread((Callable<Point2D>) () -> {\n@@ -136,9 +153,0 @@\n-        Invoker.getInvoker().invokeOnEventThread(f);\n-        Point2D result = null;\n-        try {\n-            result = f.get();\n-        } catch (ExecutionException ex) {\n-            log.severe(\"InputMethodClientImpl.getTextLocation \" + ex);\n-        } catch (InterruptedException ex) {\n-            log.severe(\"InputMethodClientImpl.getTextLocation InterruptedException\" + ex);\n-        }\n@@ -150,1 +158,1 @@\n-        FutureTask<Integer> f = new FutureTask<>(() -> {\n+        Integer result = callOnEventThread((Callable<Integer>) () -> {\n@@ -155,10 +163,1 @@\n-        Invoker.getInvoker().invokeOnEventThread(f);\n-        int location = 0;\n-        try {\n-            location = f.get();\n-        } catch (ExecutionException ex) {\n-            log.severe(\"InputMethodClientImpl.getLocationOffset \" + ex);\n-        } catch (InterruptedException ex) {\n-            log.severe(\"InputMethodClientImpl.getTextLocation InterruptedException\" + ex);\n-        }\n-        return location;\n+        return result != null ? result : 0;\n@@ -174,1 +173,5 @@\n-        return webPage.getClientSelectedText();\n+        String result = callOnEventThread((Callable<String>) () -> {\n+            return webPage.getClientSelectedText();\n+        });\n+\n+        return result != null ? result : \"\";\n@@ -179,1 +182,5 @@\n-        return webPage.getClientInsertPositionOffset();\n+        Integer result = callOnEventThread((Callable<Integer>) () -> {\n+            return webPage.getClientInsertPositionOffset();\n+        });\n+\n+        return result != null ? result : 0;\n@@ -184,5 +191,9 @@\n-        try {\n-            return webPage.getClientCommittedText().substring(begin, end);\n-        } catch (StringIndexOutOfBoundsException e) {\n-            throw new IllegalArgumentException(e);\n-        }\n+        String result = callOnEventThread((Callable<String>) () -> {\n+            try {\n+                return webPage.getClientCommittedText().substring(begin, end);\n+            } catch (StringIndexOutOfBoundsException e) {\n+                throw new IllegalArgumentException(e);\n+            }\n+        });\n+\n+        return result != null ? result : \"\";\n@@ -193,1 +204,5 @@\n-        return webPage.getClientCommittedTextLength();\n+        Integer result = callOnEventThread((Callable<Integer>) () -> {\n+            return webPage.getClientCommittedTextLength();\n+        });\n+\n+        return result != null ? result : 0;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/InputMethodClientImpl.java","additions":44,"deletions":29,"binary":false,"changes":73,"status":"modified"}]}