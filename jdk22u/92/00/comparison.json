{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -519,0 +519,5 @@\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n@@ -520,1 +525,1 @@\n-    AIX_ONLY(SIZE_256M)  \/\/ Known shm boundary alignment.\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n@@ -522,0 +527,1 @@\n+\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1889,1 +1889,10 @@\n-  const size_t alignment_adjusted = MAX2(alignment, os::vm_allocation_granularity());\n+  \/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+  \/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+  \/\/ of possible start points of the memory region (256M) differ.\n+  \/\/ This is not reflected by os_allocation_granularity().\n+  \/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+  const size_t system_allocation_granularity =\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+\n+  const size_t alignment_adjusted = MAX2(alignment, system_allocation_granularity);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,4 +38,0 @@\n-\/\/ On AIX, these tests make no sense as long as JDK-8315321 remains unfixed since the attach\n-\/\/ addresses are not predictable.\n-#ifndef AIX\n-\n@@ -58,0 +54,11 @@\n+\/\/ AIX is the only platform that uses System V shm for reserving virtual memory.\n+\/\/ In this case, the required alignment of the allocated size (64K) and the alignment\n+\/\/ of possible start points of the memory region (256M) differ.\n+\/\/ This is not reflected by os_allocation_granularity().\n+\/\/ The logic here is dual to the one in pd_reserve_memory in os_aix.cpp\n+static size_t allocation_granularity() {\n+  return\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    NOT_AIX(os::vm_allocation_granularity());\n+}\n+\n@@ -65,1 +72,1 @@\n-    EXPECT_TRUE(is_aligned(addr, os::vm_allocation_granularity())) << ERRINFO;\n+    EXPECT_TRUE(is_aligned(addr, allocation_granularity())) << ERRINFO;\n@@ -181,1 +188,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = allocation_granularity();\n@@ -260,1 +267,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = allocation_granularity();\n@@ -278,1 +285,1 @@\n-  for (size_t range_size = os::vm_allocation_granularity(); range_size <= large_end; range_size *= 2) {\n+  for (size_t range_size = allocation_granularity(); range_size <= large_end; range_size *= 2) {\n@@ -283,1 +290,1 @@\n-        for (size_t alignment = os::vm_allocation_granularity(); alignment < large_end; alignment *= 2) {\n+        for (size_t alignment = allocation_granularity(); alignment < large_end; alignment *= 2) {\n@@ -294,1 +301,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = allocation_granularity();\n@@ -334,1 +341,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = allocation_granularity();\n@@ -345,2 +352,0 @@\n-\n-#endif \/\/ AIX\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_reserve_between.cpp","additions":19,"deletions":14,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -110,1 +110,0 @@\n-runtime\/CompressedOops\/CompressedClassPointers.java 8322943 aix-ppc64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}