{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import java.lang.reflect.Constructor;\n@@ -66,0 +67,1 @@\n+import javax.swing.tree.TreePath;\n@@ -760,0 +762,15 @@\n+    private static Accessible createAccessibleTreeNode(JTree t, TreePath p) {\n+        Accessible a = null;\n+\n+        try {\n+            Class<?> accessibleJTreeNodeClass = Class.forName(\"javax.swing.JTree$AccessibleJTree$AccessibleJTreeNode\");\n+            Constructor<?> constructor = accessibleJTreeNodeClass.getConstructor(t.getAccessibleContext().getClass(), JTree.class, TreePath.class, Accessible.class);\n+            constructor.setAccessible(true);\n+            a = ((Accessible) constructor.newInstance(t.getAccessibleContext(), t, p, null));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+        return a;\n+    }\n+\n@@ -766,1 +783,0 @@\n-                ArrayList<Object> currentLevelChildren = new ArrayList<Object>();\n@@ -768,0 +784,47 @@\n+\n+                Accessible at = null;\n+                if (a instanceof CAccessible) {\n+                    at = CAccessible.getSwingAccessible(a);\n+                } else {\n+                    at = a;\n+                }\n+\n+                if (at instanceof JTree) {\n+                    JTree tree = ((JTree) at);\n+\n+                    if (whichChildren == JAVA_AX_ALL_CHILDREN) {\n+                        int count = tree.getRowCount();\n+                        for (int i = 0; i < count; i++) {\n+                            TreePath path = tree.getPathForRow(i);\n+                            Accessible an = createAccessibleTreeNode(tree, path);\n+                            if (an != null) {\n+                                AccessibleContext ac = an.getAccessibleContext();\n+                                if (ac != null) {\n+                                    allChildren.add(an);\n+                                    allChildren.add(ac.getAccessibleRole());;\n+                                    allChildren.add(String.valueOf((tree.isRootVisible() ? path.getPathCount() : path.getPathCount() - 1)));\n+                                }\n+                            }\n+                        }\n+                    }\n+\n+                    if (whichChildren == JAVA_AX_SELECTED_CHILDREN) {\n+                        int count = tree.getSelectionCount();\n+                        for (int i = 0; i < count; i++) {\n+                            TreePath path = tree.getSelectionPaths()[i];\n+                            Accessible an = createAccessibleTreeNode(tree, path);\n+                            if (an != null) {\n+                                AccessibleContext ac = an.getAccessibleContext();\n+                                if (ac != null) {\n+                                    allChildren.add(an);\n+                                    allChildren.add(ac.getAccessibleRole());\n+                                    allChildren.add(String.valueOf((tree.isRootVisible() ? path.getPathCount() : path.getPathCount() - 1)));\n+                                }\n+                            }\n+                        }\n+                    }\n+\n+                    return allChildren.toArray();\n+                }\n+\n+                ArrayList<Object> currentLevelChildren = new ArrayList<Object>();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":64,"deletions":1,"binary":false,"changes":65,"status":"modified"}]}