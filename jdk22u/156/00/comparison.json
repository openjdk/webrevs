{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,0 +204,18 @@\n+        libProvidersLookup.setPackageLookup(file -> {\n+            Path realPath = file.toRealPath();\n+\n+            try {\n+                \/\/ Try the real path first as it works better on newer Ubuntu versions\n+                return findProvidingPackages(realPath);\n+            } catch (IOException ex) {\n+                \/\/ Try the default path if differ\n+                if (!realPath.toString().equals(file.toString())) {\n+                    return findProvidingPackages(file);\n+                } else {\n+                    throw ex;\n+                }\n+            }\n+        });\n+    }\n+\n+    private static Stream<String> findProvidingPackages(Path file) throws IOException {\n@@ -246,18 +264,16 @@\n-        libProvidersLookup.setPackageLookup(file -> {\n-            Set<String> archPackages = new HashSet<>();\n-            Set<String> otherPackages = new HashSet<>();\n-\n-            Executor.of(TOOL_DPKG, \"-S\", file.toString())\n-                    .saveOutput(true).executeExpectSuccess()\n-                    .getOutput().forEach(line -> {\n-                        Matcher matcher = PACKAGE_NAME_REGEX.matcher(line);\n-                        if (matcher.find()) {\n-                            String name = matcher.group(1);\n-                            if (name.endsWith(\":\" + DEB_ARCH)) {\n-                                \/\/ Strip arch suffix\n-                                name = name.substring(0,\n-                                        name.length() - (DEB_ARCH.length() + 1));\n-                                archPackages.add(name);\n-                            } else {\n-                                otherPackages.add(name);\n-                            }\n+        Set<String> archPackages = new HashSet<>();\n+        Set<String> otherPackages = new HashSet<>();\n+\n+        Executor.of(TOOL_DPKG, \"-S\", file.toString())\n+                .saveOutput(true).executeExpectSuccess()\n+                .getOutput().forEach(line -> {\n+                    Matcher matcher = PACKAGE_NAME_REGEX.matcher(line);\n+                    if (matcher.find()) {\n+                        String name = matcher.group(1);\n+                        if (name.endsWith(\":\" + DEB_ARCH)) {\n+                            \/\/ Strip arch suffix\n+                            name = name.substring(0,\n+                                    name.length() - (DEB_ARCH.length() + 1));\n+                            archPackages.add(name);\n+                        } else {\n+                            otherPackages.add(name);\n@@ -265,1 +281,2 @@\n-                    });\n+                    }\n+                });\n@@ -267,5 +284,4 @@\n-            if (!archPackages.isEmpty()) {\n-                return archPackages.stream();\n-            }\n-            return otherPackages.stream();\n-        });\n+        if (!archPackages.isEmpty()) {\n+            return archPackages.stream();\n+        }\n+        return otherPackages.stream();\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebBundler.java","additions":41,"deletions":25,"binary":false,"changes":66,"status":"modified"}]}