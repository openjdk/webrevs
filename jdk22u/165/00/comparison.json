{"files":[{"patch":"@@ -124,1 +124,0 @@\n-  _failure_reason = nullptr;\n@@ -253,1 +252,0 @@\n-  _failure_reason = nullptr;\n@@ -1236,1 +1234,1 @@\n-  if (_failure_reason == nullptr) {\n+  if (_failure_reason.get() == nullptr) {\n@@ -1238,1 +1236,1 @@\n-    _failure_reason = reason;\n+    _failure_reason.set(reason);\n@@ -1268,1 +1266,1 @@\n-    _failure_reason = nullptr;\n+    _failure_reason.clear();\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -60,1 +61,1 @@\n-  const char*      _failure_reason;\n+  CHeapStringHolder _failure_reason;\n@@ -322,1 +323,1 @@\n-  bool failing() const { return _failure_reason != nullptr; }\n+  bool failing() const { return _failure_reason.get() != nullptr; }\n@@ -325,1 +326,1 @@\n-  const char* failure_reason() const { return _failure_reason; }\n+  const char* failure_reason() const { return _failure_reason.get(); }\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2331,1 +2331,3 @@\n-      failure_reason = ci_env.failure_reason();\n+      \/\/ Duplicate the failure reason string, so that it outlives ciEnv\n+      failure_reason = os::strdup(ci_env.failure_reason(), mtCompiler);\n+      failure_reason_on_C_heap = true;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -639,1 +639,0 @@\n-                  _failure_reason(nullptr),\n@@ -928,1 +927,0 @@\n-    _failure_reason(nullptr),\n@@ -4348,1 +4346,1 @@\n-  if (_failure_reason == nullptr) {\n+  if (_failure_reason.get() == nullptr) {\n@@ -4350,1 +4348,1 @@\n-    _failure_reason = reason;\n+    _failure_reason.set(reason);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"compiler\/cHeapStringHolder.hpp\"\n@@ -364,1 +365,1 @@\n-  const char*           _failure_reason;        \/\/ for record_failure\/failing pattern\n+  CHeapStringHolder     _failure_reason;        \/\/ for record_failure\/failing pattern\n@@ -808,2 +809,10 @@\n-  bool        failing() const        { return _env->failing() || _failure_reason != nullptr; }\n-  const char* failure_reason() const { return (_env->failing()) ? _env->failure_reason() : _failure_reason; }\n+\n+  bool        failing() const        {\n+    return _env->failing() ||\n+           _failure_reason.get() != nullptr;\n+  }\n+\n+  const char* failure_reason() const {\n+    return _env->failing() ? _env->failure_reason()\n+                           : _failure_reason.get();\n+  }\n@@ -812,1 +821,4 @@\n-    return (r == _failure_reason) || (r != nullptr && _failure_reason != nullptr && strcmp(r, _failure_reason) == 0);\n+    return (r == _failure_reason.get()) ||\n+           (r != nullptr &&\n+            _failure_reason.get() != nullptr &&\n+            strcmp(r, _failure_reason.get()) == 0);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -729,1 +729,0 @@\n-  nonstatic_field(ciEnv,                       _failure_reason,                               const char*)                           \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}