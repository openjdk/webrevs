{"files":[{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"compiler\/cHeapStringHolder.hpp\"\n+\n+void CHeapStringHolder::set(const char* string) {\n+  clear();\n+  if (string != nullptr) {\n+    size_t len = strlen(string);\n+    _string = NEW_C_HEAP_ARRAY(char, len + 1, mtCompiler);\n+    ::memcpy(_string, string, len);\n+    _string[len] = 0; \/\/ terminating null\n+  }\n+}\n+\n+void CHeapStringHolder::clear() {\n+  if (_string != nullptr) {\n+    FREE_C_HEAP_ARRAY(char, _string);\n+    _string = nullptr;\n+  }\n+}\n","filename":"src\/hotspot\/share\/compiler\/cHeapStringHolder.cpp","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n+#define SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+\n+\/\/ Holder for a C-Heap allocated String\n+\/\/ The user must ensure that the destructor is called, or at least clear.\n+class CHeapStringHolder : public StackObj {\n+private:\n+  char* _string;\n+\n+public:\n+  CHeapStringHolder() : _string(nullptr) {}\n+  ~CHeapStringHolder() { clear(); };\n+  NONCOPYABLE(CHeapStringHolder);\n+\n+  \/\/ Allocate memory to hold a copy of string\n+  void set(const char* string);\n+\n+  \/\/ Release allocated memory\n+  void clear();\n+\n+  const char* get() const { return _string; };\n+};\n+\n+#endif \/\/ SHARE_COMPILER_CHEAPSTRINGHOLDER_HPP\n","filename":"src\/hotspot\/share\/compiler\/cHeapStringHolder.hpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}