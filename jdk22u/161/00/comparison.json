{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+  #include <sys\/times.h>\n@@ -50,1 +51,1 @@\n-  uint64_t _total_cpu_nanos;\n+  uint64_t _jvm_real;\n@@ -52,2 +53,2 @@\n-  uint64_t _jvm_user_nanos;\n-  uint64_t _jvm_system_nanos;\n+  uint64_t _jvm_user;\n+  uint64_t _jvm_system;\n@@ -89,1 +90,1 @@\n-  _total_cpu_nanos= 0;\n+  _jvm_real = 0;\n@@ -92,2 +93,2 @@\n-  _jvm_user_nanos = 0;\n-  _jvm_system_nanos = 0;\n+  _jvm_user = 0;\n+  _jvm_system = 0;\n@@ -155,5 +156,3 @@\n-  mach_port_t task = mach_task_self();\n-  mach_msg_type_number_t task_info_count = TASK_INFO_MAX;\n-  task_info_data_t task_info_data;\n-  kern_return_t kr = task_info(task, TASK_ABSOLUTETIME_INFO, (task_info_t)task_info_data, &task_info_count);\n-  if (kr != KERN_SUCCESS) {\n+  struct tms buf;\n+  clock_t jvm_real = times(&buf);\n+  if (jvm_real == (clock_t) (-1)) {\n@@ -162,1 +161,0 @@\n-  task_absolutetime_info_t absolutetime_info = (task_absolutetime_info_t)task_info_data;\n@@ -165,7 +163,2 @@\n-  uint64_t jvm_user_nanos = absolutetime_info->total_user;\n-  uint64_t jvm_system_nanos = absolutetime_info->total_system;\n-\n-  uint64_t total_cpu_nanos;\n-  if(!now_in_nanos(&total_cpu_nanos)) {\n-    return OS_ERR;\n-  }\n+  uint64_t jvm_user = buf.tms_utime;\n+  uint64_t jvm_system = buf.tms_stime;\n@@ -173,2 +166,2 @@\n-  if (_total_cpu_nanos == 0 || active_processor_count != _active_processor_count) {\n-    \/\/ First call or change in active processor count\n+  if (active_processor_count != _active_processor_count) {\n+    \/\/ Change in active processor count\n@@ -177,2 +170,2 @@\n-    uint64_t delta_nanos = active_processor_count * (total_cpu_nanos - _total_cpu_nanos);\n-    if (delta_nanos == 0) {\n+    uint64_t delta = active_processor_count * (jvm_real - _jvm_real);\n+    if (delta == 0) {\n@@ -183,2 +176,2 @@\n-    *pjvmUserLoad = normalize((double)(jvm_user_nanos - _jvm_user_nanos)\/delta_nanos);\n-    *pjvmKernelLoad = normalize((double)(jvm_system_nanos - _jvm_system_nanos)\/delta_nanos);\n+    *pjvmUserLoad = normalize((double)(jvm_user - _jvm_user) \/ delta);\n+    *pjvmKernelLoad = normalize((double)(jvm_system - _jvm_system) \/ delta);\n@@ -188,3 +181,3 @@\n-  _total_cpu_nanos = total_cpu_nanos;\n-  _jvm_user_nanos = jvm_user_nanos;\n-  _jvm_system_nanos = jvm_system_nanos;\n+  _jvm_real = jvm_real;\n+  _jvm_user = jvm_user;\n+  _jvm_system = jvm_system;\n","filename":"src\/hotspot\/os\/bsd\/os_perf_bsd.cpp","additions":22,"deletions":29,"binary":false,"changes":51,"status":"modified"}]}