{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -844,1 +844,1 @@\n-            int coder = StringUTF16.coderFromArrayLen(val, len);\n+            byte coder = StringUTF16.coderFromArrayLen(val, caLen);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import static java.nio.charset.StandardCharsets.UTF_16;\n@@ -34,0 +33,6 @@\n+import static java.nio.charset.StandardCharsets.UTF_16;\n+import static java.nio.charset.StandardCharsets.UTF_16BE;\n+import static java.nio.charset.StandardCharsets.UTF_16LE;\n+import static java.nio.charset.StandardCharsets.UTF_32;\n+import static java.nio.charset.StandardCharsets.UTF_32BE;\n+import static java.nio.charset.StandardCharsets.UTF_32LE;\n@@ -43,0 +48,1 @@\n+import static org.testng.Assert.assertEquals;\n@@ -45,1 +51,0 @@\n-import org.testng.annotations.AfterClass;\n@@ -51,1 +56,1 @@\n- * @bug 8201276 8205058 8209576 8287541 8288589\n+ * @bug 8201276 8205058 8209576 8287541 8288589 8325590\n@@ -64,0 +69,1 @@\n+    final static String TEXT_PERSON_CART_WHEELING = \"\\ud83e\\udd38\";\n@@ -157,1 +163,10 @@\n-            {testFiles[1], TEXT_UNICODE, UTF_8, UTF_8}\n+            {testFiles[1], TEXT_UNICODE, UTF_8, UTF_8},\n+            {testFiles[1], TEXT_ASCII, US_ASCII, ISO_8859_1},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_16, UTF_16},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_16BE, UTF_16BE},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_16LE, UTF_16LE},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_32, UTF_32},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_32BE, UTF_32BE},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, UTF_32LE, UTF_32LE},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, WINDOWS_1252, WINDOWS_1252},\n+            {testFiles[1], TEXT_PERSON_CART_WHEELING, WINDOWS_31J, WINDOWS_31J}\n@@ -307,0 +322,15 @@\n+    \/\/ Verify File.readString with UTF16 to confirm proper string length and contents.\n+    \/\/ A regression test for 8325590\n+    @Test\n+    public void testSingleUTF16() throws IOException {\n+        String original = \"ðŸ¤¸\";    \/\/ \"\\ud83e\\udd38\";\n+        Files.writeString(testFiles[0], original, UTF_16);\n+        String actual = Files.readString(testFiles[0], UTF_16);\n+        if (!actual.equals(original)) {\n+            System.out.printf(\"expected (%s), was (%s)\\n\", original, actual);\n+            System.out.printf(\"expected UTF_16 bytes: %s\\n\", Arrays.toString(original.getBytes(UTF_16)));\n+            System.out.printf(\"actual UTF_16 bytes: %s\\n\", Arrays.toString(actual.getBytes(UTF_16)));\n+        }\n+        assertEquals(actual, original, \"Round trip string mismatch with multi-byte encoding\");\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/ReadWriteString.java","additions":35,"deletions":5,"binary":false,"changes":40,"status":"modified"}]}