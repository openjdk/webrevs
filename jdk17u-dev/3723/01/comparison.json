{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 5047639\n+ * @bug 5047639 8132785\n@@ -29,0 +29,2 @@\n+ * @comment Must run in othervm mode to avoid interference from other tests.\n+ * @run main\/othervm ThreadLists\n@@ -53,0 +55,13 @@\n+        \/\/ Now enumerate to see if we find any extras yet.\n+        \/\/ Ensure the array is big enough for a few extras.\n+        Thread[] threads = new Thread[activeCount * 2];\n+        int newCount = top.enumerate(threads);\n+        if (newCount != activeCount) {\n+            System.out.println(\"Found different threads after enumeration:\");\n+        } else {\n+            System.out.println(\"Initial set of enumerated threads:\");\n+        }\n+        for (int i = 0; i < newCount; i++) {\n+            System.out.println(\" - Thread: \" + threads[i].getName());\n+        }\n+\n@@ -71,0 +86,5 @@\n+            System.out.println(\"Set of stack-traced threads:\");\n+            for (Thread t : stackTraces.keySet()) {\n+                System.out.println(\" - Thread: \" +\n+                                   (t != null ? t.getName() : \"null!\"));\n+            }\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/ThreadLists.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"}]}