{"files":[{"patch":"@@ -37,0 +37,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodSpecTrapLimit=5000 -XX:PerMethodTrapLimit=100\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyNoInitDeopt.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,0 +52,2 @@\n+            \"-XX:+IgnoreUnrecognizedVMOptions\",\n+            \"-XX:StressLongCountedLoop=0\", \/\/ make sure int loops do not get converted to long\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr7200264\/TestDriver.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n- * @run driver compiler.c2.cr7200264.TestSSE2IntVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:StressLongCountedLoop=0\n+ *                   compiler.c2.cr7200264.TestSSE2IntVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr7200264\/TestSSE2IntVect.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n- * @run driver compiler.c2.cr7200264.TestSSE4IntVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:StressLongCountedLoop=0\n+ *                   compiler.c2.cr7200264.TestSSE4IntVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr7200264\/TestSSE4IntVect.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+            \"-XX:+UseTLAB\",\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/blackhole\/BlackholeStoreStoreEATest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+ *                   -XX:-StressMethodHandleLinkerInlining\n@@ -49,0 +50,1 @@\n+ *                   -XX:-StressMethodHandleLinkerInlining\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/AbstractRootMethod.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+ *                   -XX:-StressMethodHandleLinkerInlining\n@@ -49,0 +50,1 @@\n+ *                   -XX:-StressMethodHandleLinkerInlining\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/DefaultRootMethod.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodTrapLimit=100 -XX:-StressReflectiveCode\n+ *                   -XX:+UncommonNullCast -XX:-StressMethodHandleLinkerInlining -XX:TypeProfileLevel=0\n@@ -359,1 +361,1 @@\n-            throw new AssertionError(\"compilation must \" + (mustExist ? \"\" : \" not \") + \" got deoptimized\");\n+            throw new AssertionError(\"compilation must \" + (mustExist ? \"\" : \" not \") + \" get deoptimized\");\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/klass\/CastNullCheckDroppingsTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ *     -XX:CompileCommand=dontinline,compiler.jvmci.common.testcases.SimpleClass::testMethod\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/IsMatureVsReprofileTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ *                   -XX:TypeProfileLevel=0\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/ReprofileTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+  *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodSpecTrapLimit=5000 -XX:PerMethodTrapLimit=100\n@@ -47,0 +48,1 @@\n+  *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodSpecTrapLimit=5000 -XX:PerMethodTrapLimit=100\n","filename":"test\/hotspot\/jtreg\/compiler\/profiling\/TestTypeProfiling.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodSpecTrapLimit=5000 -XX:PerMethodTrapLimit=100\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestExplicitRangeChecks.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @requires vm.flavor == \"server\" & (vm.opt.TieredStopAtLevel == null | vm.opt.TieredStopAtLevel == 4)\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestRangeCheckSmearing.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodTrapLimit=100\n@@ -43,0 +44,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodTrapLimit=100\n@@ -48,0 +50,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodTrapLimit=100\n@@ -53,0 +56,1 @@\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:PerMethodTrapLimit=100\n","filename":"test\/hotspot\/jtreg\/compiler\/uncommontrap\/TestUnstableIfTrap.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}