{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2100,1 +2100,1 @@\n-  product(uint, TrimNativeHeapInterval, 0, EXPERIMENTAL,                    \\\n+  product(uint, TrimNativeHeapInterval, 0,                                  \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1543,0 +1543,11 @@\n+.B \\f[CB]-XX:TrimNativeHeapInterval=\\f[R]\\f[I]millis\\f[R]\n+Interval, in ms, at which the JVM will trim the native heap.\n+Lower values will reclaim memory more eagerly at the cost of higher\n+overhead.\n+A value of 0 (default) disables native heap trimming.\n+Native heap trimming is performed in a dedicated thread.\n+.RS\n+.PP\n+This option is only supported on Linux with GNU C Library (glibc).\n+.RE\n+.TP\n","filename":"src\/java.base\/share\/man\/java.1","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:+UnlockExperimentalVMOptions -XX:TrimNativeHeapInterval=100\n+ * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:TrimNativeHeapInterval=100\n","filename":"test\/hotspot\/jtreg\/gtest\/NativeHeapTrimmerGtest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,1 +273,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n@@ -288,1 +288,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n@@ -300,1 +300,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -311,1 +311,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -322,1 +322,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=0\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=0\" },\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}