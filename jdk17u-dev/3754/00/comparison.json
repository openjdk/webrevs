{"files":[{"patch":"@@ -317,2 +317,2 @@\n-                throw new IllegalArgumentException(\"The input currency code must \" +\n-                        \"have a length of 3 characters\");\n+                throw new IllegalArgumentException(\n+                        \"The input currency code: \\\"%s\\\" must have a length of 3 characters\".formatted(currencyCode));\n@@ -341,2 +341,2 @@\n-                    throw new IllegalArgumentException(\"The input currency code\" +\n-                            \" is not a valid ISO 4217 code\");\n+                    throw new IllegalArgumentException(\n+                            \"The input currency code: \\\"%s\\\" is not a valid ISO 4217 code\".formatted(currencyCode));\n@@ -397,2 +397,2 @@\n-            throw new IllegalArgumentException(\"The country of the input locale\" +\n-                    \" is not a valid ISO 3166 country code\");\n+            throw new IllegalArgumentException(\n+                    \"The country of the input locale: \\\"%s\\\" is not a valid ISO 3166 country code\".formatted(locale));\n@@ -415,2 +415,2 @@\n-                throw new IllegalArgumentException(\"The country of the input locale\" +\n-                        \" is not a valid ISO 3166 country code\");\n+                throw new IllegalArgumentException(\n+                        \"The country of the input locale: \\\"%s\\\" is not a valid ISO 3166 country code\".formatted(locale));\n@@ -681,2 +681,2 @@\n-            throw new IllegalArgumentException(\"The country code is not a \" +\n-                    \"valid ISO 3166 code\");\n+            throw new IllegalArgumentException(\n+                    \"The country code: \\\"%c%c\\\" is not a valid ISO 3166 code\".formatted(char1, char2));\n@@ -693,2 +693,2 @@\n-            throw new IllegalArgumentException(\"The country code is not a \" +\n-                    \"valid ISO 3166 code\");\n+            throw new IllegalArgumentException(\n+                    \"The country code: \\\"%c%c\\\" is not a valid ISO 3166 code\".formatted(char1, char2));\n","filename":"src\/java.base\/share\/classes\/java\/util\/Currency.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- *      8264792 8334653\n+ *      8264792 8334653 8353713\n@@ -87,2 +87,2 @@\n-            assertEquals(\"The input currency code is not a\" +\n-                    \" valid ISO 4217 code\", ex.getMessage());\n+            assertEquals(\"The input currency code: \\\"%s\\\" is not a valid ISO 4217 code\"\n+                    .formatted(currencyCode), ex.getMessage());\n@@ -95,0 +95,10 @@\n+        \/\/ Provide 3 length code, but first 2 chars should not be able to index\n+        \/\/ the main table, thus resulting as incorrect country code\n+        @Test\n+        void invalidCountryInCodeTest() {\n+            IllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () ->\n+                    Currency.getInstance(\"..A\"), \"getInstance() did not throw IAE\");\n+            assertEquals(\"The country code: \\\"%s\\\" is not a valid ISO 3166 code\"\n+                    .formatted(\"..\"), ex.getMessage());\n+        }\n+\n@@ -102,2 +112,2 @@\n-            assertEquals(\"The input currency code must have a length of 3\" +\n-                    \" characters\", ex.getMessage());\n+            assertEquals(\"The input currency code: \\\"%s\\\" must have a length of 3 characters\"\n+                    .formatted(currencyCode), ex.getMessage());\n@@ -166,2 +176,2 @@\n-                    assertEquals(\"The country of the input locale is not a\" +\n-                            \" valid ISO 3166 country code\", ex.getMessage());\n+                    assertEquals(\"The country of the input locale: \\\"%s\\\" is not a valid ISO 3166 country code\"\n+                            .formatted(locale), ex.getMessage());\n@@ -183,1 +193,1 @@\n-        \/\/ Check an invalid country code\n+        \/\/ Check an invalid country code supplied via the region override\n@@ -185,1 +195,3 @@\n-        public void invalidCountryTest() {\n+        public void invalidCountryRegionOverrideTest() {\n+            \/\/ Override US with nonsensical country\n+            var loc = Locale.forLanguageTag(\"en-US-u-rg-XXzzzz\");\n@@ -188,3 +200,3 @@\n-                    ()-> Currency.getInstance(l), \"Did not throw IAE\");\n-            assertEquals(\"The country of the input locale is not a valid\" +\n-                    \" ISO 3166 country code\", ex.getMessage());\n+                    ()-> Currency.getInstance(loc), \"Did not throw IAE\");\n+            assertEquals(\"The country of the input locale: \\\"%s\\\" is not a valid ISO 3166 country code\"\n+                    .formatted(loc), ex.getMessage());\n","filename":"test\/jdk\/java\/util\/Currency\/CurrencyTest.java","additions":25,"deletions":13,"binary":false,"changes":38,"status":"modified"}]}