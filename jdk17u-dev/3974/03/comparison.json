{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,4 @@\n-                AudioDeviceID devices[count];\n+                AudioDeviceID *devices = (AudioDeviceID *) malloc(size);\n+                if (!devices) {\n+                    break;\n+                }\n@@ -129,1 +132,1 @@\n-                    kAudioHardwarePropertyDevices, count*sizeof(AudioDeviceID), devices, 1);\n+                    kAudioHardwarePropertyDevices, size, devices, 1);\n@@ -142,0 +145,1 @@\n+                free(devices);\n@@ -151,1 +155,4 @@\n-                AudioObjectID controlIDs[count];\n+                AudioObjectID *controlIDs = (AudioObjectID *) malloc(size);\n+                if (!controlIDs) {\n+                    break;\n+                }\n@@ -153,1 +160,1 @@\n-                    kAudioObjectPropertyOwnedObjects, count * sizeof(AudioObjectID), &controlIDs, 1);\n+                    kAudioObjectPropertyOwnedObjects, size, controlIDs, 1);\n@@ -171,0 +178,1 @@\n+                free(controlIDs);\n@@ -232,0 +240,3 @@\n+    if (!mixer) {\n+        return nullptr;\n+    }\n@@ -483,1 +494,4 @@\n-            AudioObjectID controlIDs[mixer->deviceControlCount];\n+            AudioObjectID *controlIDs = (AudioObjectID *) malloc(size);\n+            if (!controlIDs) {\n+                return;\n+            }\n@@ -486,1 +500,1 @@\n-                kAudioObjectPropertyOwnedObjects, sizeof(controlIDs), controlIDs, 1);\n+                kAudioObjectPropertyOwnedObjects, size, controlIDs, 1);\n@@ -493,0 +507,1 @@\n+                    free(controlIDs);\n@@ -516,0 +531,1 @@\n+            free(controlIDs);\n@@ -527,4 +543,8 @@\n-    AudioControl* volumeControls[totalChannels+1];  \/\/ 0 - for master channel\n-    memset(&volumeControls, 0, sizeof(AudioControl *) * (totalChannels+1));\n-    AudioControl* muteControls[totalChannels+1];  \/\/ 0 - for master channel\n-    memset(&muteControls, 0, sizeof(AudioControl *) * (totalChannels+1));\n+    size_t totalAndMaster = totalChannels + 1; \/\/ 0 - for master channel\n+    AudioControl **volumeControls = (AudioControl **) calloc(totalAndMaster, sizeof(AudioControl *));\n+    AudioControl **muteControls = (AudioControl **) calloc(totalAndMaster, sizeof(AudioControl *));\n+    if (!volumeControls || !muteControls) {\n+        free(muteControls);\n+        free(volumeControls);\n+        return;\n+    }\n@@ -629,0 +649,2 @@\n+                        free(muteControls);\n+                        free(volumeControls);\n@@ -636,0 +658,2 @@\n+                        free(muteControls);\n+                        free(volumeControls);\n@@ -660,1 +684,2 @@\n-\n+    free(muteControls);\n+    free(volumeControls);\n@@ -775,1 +800,4 @@\n-    Float32 subVolumes[control->controlCount];\n+    Float32 *subVolumes = (Float32 *) malloc(control->controlCount * sizeof(Float32));\n+    if (!subVolumes) {\n+        return DEFAULT_VOLUME_VALUE;\n+    }\n@@ -781,1 +809,2 @@\n-            return DEFAULT_VOLUME_VALUE;\n+            result = DEFAULT_VOLUME_VALUE;\n+            break;\n@@ -785,1 +814,2 @@\n-            return DEFAULT_VOLUME_VALUE;\n+            result = DEFAULT_VOLUME_VALUE;\n+            break;\n@@ -791,1 +821,2 @@\n-            return DEFAULT_BALANCE_VALUE;\n+            result = DEFAULT_BALANCE_VALUE;\n+            break;\n@@ -796,1 +827,2 @@\n-            return DEFAULT_VOLUME_VALUE;\n+            result = DEFAULT_VOLUME_VALUE;\n+            break;\n@@ -809,1 +841,2 @@\n-        return 0;\n+        result = 0;\n+        break;\n@@ -811,1 +844,1 @@\n-\n+    free(subVolumes);\n@@ -824,1 +857,4 @@\n-    Float32 subVolumes[control->controlCount];\n+    Float32 *subVolumes = (Float32 *) malloc(sizeof(Float32) * control->controlCount);\n+    if (!subVolumes) {\n+        return;\n+    }\n@@ -830,1 +866,1 @@\n-            return;\n+            break;\n@@ -848,1 +884,1 @@\n-            return;\n+            break;\n@@ -864,1 +900,1 @@\n-        return;\n+        break;\n@@ -866,0 +902,1 @@\n+    free(subVolumes);\n","filename":"src\/java.desktop\/macosx\/native\/libjsound\/PLATFORM_API_MacOSX_Ports.cpp","additions":60,"deletions":23,"binary":false,"changes":83,"status":"modified"}]}