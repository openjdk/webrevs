{"files":[{"patch":"@@ -41,6 +41,0 @@\n-        \/*\n-        Stream.of(\"jdk.httpserver\", \"jdk.jfr\").forEach(mn ->\n-                ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass()\n-                            .orElseThrow(() -> new RuntimeException(mn + \" no main class\"))\n-        );\n-        *\/\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/com.foo\/com\/foo\/Main.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-    requires jdk.httpserver;\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/com.foo\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-    requires jdk.jfr;\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/net.foo\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,6 +41,0 @@\n-        \/*\n-        Stream.of(\"jdk.httpserver\", \"jdk.jfr\").forEach(mn ->\n-                ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass()\n-                        .orElseThrow(() -> new RuntimeException(mn + \" no main class\"))\n-        );\n-        *\/\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/net.foo\/net\/foo\/Main.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}