{"files":[{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FileDialog;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.Label;\n+import java.awt.TextField;\n+import java.awt.Toolkit;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import jtreg.SkippedException;\n+\n+\/*\n+ * @test\n+ * @bug 6260676\n+ * @summary FileDialog.setDirectory() does not work properly, XToolkit\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @library \/test\/lib\n+ * @build PassFailJFrame\n+ * @build jtreg.SkippedException\n+ * @run main\/manual FileDialogReturnTest\n+ *\/\n+\n+public class FileDialogReturnTest {\n+\n+    private static JFrame initialize() {\n+        JFrame frame = new JFrame(\"File Dialog Return Test Frame\");\n+        GridBagConstraints gbc = new GridBagConstraints();\n+        GridBagLayout grid = new GridBagLayout();\n+        frame.setLayout(grid);\n+        JTextArea textOutput = new JTextArea(8, 30);\n+        textOutput.setLineWrap(true);\n+        JScrollPane textScrollPane = new JScrollPane(textOutput);\n+        gbc.insets = new Insets(5, 5, 5, 5);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 0;\n+        gbc.gridwidth = 1;\n+        gbc.fill = GridBagConstraints.WEST;\n+        frame.add(new Label(\"File:\"), gbc);\n+\n+        TextField fileField = new TextField(\"\", 20);\n+        gbc.gridx = 1;\n+        gbc.gridy = 0;\n+        gbc.fill = GridBagConstraints.HORIZONTAL;\n+        frame.add(fileField, gbc);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 1;\n+        gbc.fill = GridBagConstraints.WEST;\n+        frame.add(new Label(\"Dir:\"), gbc);\n+\n+        TextField dirField = new TextField(\"\", 20);\n+        gbc.gridx = 1;\n+        gbc.gridy = 1;\n+        gbc.fill = GridBagConstraints.HORIZONTAL;\n+        frame.add(dirField, gbc);\n+\n+        Button button = new Button(\"Show\");\n+        gbc.gridx = 0;\n+        gbc.gridy = 2;\n+        gbc.gridwidth = 2;\n+        gbc.fill = GridBagConstraints.CENTER;\n+        frame.add(button, gbc);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 3;\n+        gbc.gridwidth = 2;\n+        frame.add(textScrollPane, gbc);\n+\n+        button.addActionListener(e -> {\n+            FileDialog fd = new FileDialog(frame);\n+            fd.setFile(fileField.getText());\n+            fd.setDirectory(dirField.getText());\n+            fd.setVisible(true);\n+\n+            textOutput.append(\"[file=\" + fd.getFile()+\"]\\n\");\n+            textOutput.append(\"[dir=\" + fd.getDirectory()+\"]\\n\");\n+            textOutput.setCaretPosition(textOutput.getText().length());\n+\n+        });\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        String instructions = \"\"\"\n+                1) The test shows the 'File Dialog Return Test Frame' frame\n+                   that contains two text fields, one button and an output area.\n+                2) Input something into the 'File:' text field or just keep the field empty.\n+                3) Input something into the 'Dir:' text field or just keep the field empty.\n+                4) Press the 'Show' button and a file dialog will appear.\n+                5-1) Cancel the file dialog, e.g. by selecting the 'close' menu item.\n+                     If the output window shows that 'file'\/'dir' values are null\n+                     then the test passes, otherwise the test fails.\n+                5-2) Select any file by double clicking on it.\n+                     If the output window shows that 'file'\/'dir' values are not-null\n+                     then the test passes, otherwise the test fails.\n+                \"\"\";\n+\n+        String toolkit = Toolkit.getDefaultToolkit().getClass().getName();\n+        if (!toolkit.equals(\"sun.awt.X11.XToolkit\")) {\n+            throw new SkippedException(\"Test is not designed for toolkit \" + toolkit);\n+        }\n+\n+        PassFailJFrame.builder()\n+                .title(\"File Dialog Return Test Instructions\")\n+                .instructions(instructions)\n+                .rows((int) instructions.lines().count() + 1)\n+                .columns(50)\n+                .testUI(FileDialogReturnTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogReturnTest.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 6260676\n-  @summary FileDialog.setDirectory() does not work properly, XToolkit\n-  @author Dmitry.Cherepanov area=awt.filedialog\n-  @run applet\/manual=yesno FileDialogReturnTest.html\n-  -->\n-<head>\n-<title> FileDialogReturnTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>FileDialogReturnTest<br>Bug ID: <\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"FileDialogReturnTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogReturnTest\/FileDialogReturnTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,246 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  test\n-  @bug 6260676\n-  @summary FileDialog.setDirectory() does not work properly, XToolkit\n-  @author Dmitry.Cherepanov area=awt.filedialog\n-  @run applet\/manual=yesno FileDialogReturnTest.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-\/*\n- * Current implementation of the FileDialog class doesn't provide\n- * any explicit method to get the return value after the user closes\n- * the dialog. The only way to detect whether the user cancels the\n- * dialog or the user selects any file is to use the getFile() method.\n- * The getFile() method should return null value if the user cancels\n- * the dialog or non-null value if the user selects any file.\n- *\/\n-public class FileDialogReturnTest extends Applet\n-{\n-\n-    public static void main(String[] args) {\n-        Applet a = new FileDialogReturnTest();\n-        a.init();\n-        a.start();\n-    }\n-\n-    public void init()\n-    {\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \" 1. The test shows the 'FileDialogReturnTest' applet which contains two text fields and one button, \",\n-            \" 2. Input something into the 'File:' text field or just keep the field empty, \",\n-            \" 3. Input something into the 'Dir:' text field or just keep the field empty, \",\n-            \" 4. Press the 'Show' button and a file dialog will appear, \",\n-            \" 5-1. Cancel the file dialog, e.g. by selecting the 'close' menu item, \",\n-            \"      If the output window shows that 'file'\/'dir' values is null then the test passes, otherwise the test fails, \",\n-            \" 5-2. Select any file, e.g. by pressing the 'OK' button, \",\n-            \"      If the output window shows that 'file'\/'dir' values is not-null then the test passes, otherwise the test fails. \"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    final TextField fileField = new TextField(\"\", 20);\n-    final TextField dirField = new TextField(\"\", 20);\n-    final Button button = new Button(\"Show\");\n-\n-    public void start ()\n-    {\n-        setLayout(new FlowLayout());\n-\n-        add(new Label(\"File:\"));\n-        add(fileField);\n-        add(new Label(\"Dir:\"));\n-        add(dirField);\n-        add(button);\n-\n-        button.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                showDialog();\n-            }\n-        });\n-\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-    }\n-\n-    void showDialog()\n-    {\n-        FileDialog fd = new FileDialog(new Frame());\n-        fd.setFile(fileField.getText());\n-        fd.setDirectory(dirField.getText());\n-        fd.setVisible(true);\n-\n-        Sysout.println(\"[file=\" + fd.getFile()+\"]\");\n-        Sysout.println(\"[dir=\" + fd.getDirectory()+\"]\");\n-    }\n-\n-}\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 100;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/FileDialog\/FileDialogReturnTest\/FileDialogReturnTest.java","additions":0,"deletions":246,"binary":false,"changes":246,"status":"deleted"}]}