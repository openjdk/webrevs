{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,2 @@\n+import static sun.java2d.pipe.Region.clipRound;\n+\n@@ -164,1 +166,1 @@\n-            int offs = this.thickness * (int) scaleFactor;\n+            int offs = clipRound(this.thickness * scaleFactor);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/LineBorder.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +46,2 @@\n+import static sun.java2d.pipe.Region.clipRound;\n+\n@@ -47,1 +50,1 @@\n- * @bug 8282958\n+ * @bug 8282958 8349188\n@@ -50,0 +53,1 @@\n+ * @modules java.desktop\/sun.java2d.pipe\n@@ -53,1 +57,1 @@\n-    private static final Dimension SIZE = new Dimension(120, 25);\n+    private static final Dimension SIZE = new Dimension(250, 50);\n@@ -62,0 +66,7 @@\n+    private static final int[] thickness = {1, 4, 10, 15};\n+\n+    private record TestImage(BufferedImage image,\n+                             List<Point> panelLocations,\n+                             double scale,\n+                             int thickness) {\n+    }\n@@ -63,2 +74,4 @@\n-    private static final List<BufferedImage> images =\n-            new ArrayList<>(scales.length);\n+    private record TestUI(JComponent content,\n+                          List<Point> panelLocations,\n+                          int thickness) {\n+    }\n@@ -66,2 +79,0 @@\n-    private static final List<Point> panelLocations =\n-            new ArrayList<>(4);\n@@ -77,3 +88,14 @@\n-        JComponent content = createUI();\n-        if (showFrame) {\n-            showFrame(content);\n+        for (int thickness : thickness) {\n+            TestUI testUI = createUI(thickness);\n+            if (showFrame) {\n+                showFrame(testUI.content);\n+            }\n+\n+            List<TestImage> images = paintToImages(testUI, saveImages);\n+            verifyBorderRendering(images, saveImages);\n+        }\n+\n+        if (errorCount > 0) {\n+            throw new Error(\"Test failed: \"\n+                    + errorCount + \" error(s) detected - \"\n+                    + errorMessage);\n@@ -82,2 +104,0 @@\n-        paintToImages(content, saveImages);\n-        verifyBorderRendering(saveImages);\n@@ -86,8 +106,2 @@\n-    private static void verifyBorderRendering(final boolean saveImages) {\n-        String errorMessage = null;\n-        int errorCount = 0;\n-        for (int i = 0; i < images.size(); i++) {\n-            BufferedImage img = images.get(i);\n-            double scaling = scales[i];\n-            try {\n-                int thickness = (int) Math.floor(scaling);\n+    private static String errorMessage = null;\n+    private static int errorCount = 0;\n@@ -95,1 +109,7 @@\n-                checkVerticalBorders(SIZE.width \/ 2, thickness, img);\n+    private static void verifyBorderRendering(final List<TestImage> images,\n+                                              final boolean saveImages) {\n+        for (TestImage test : images) {\n+            final BufferedImage img = test.image;\n+            final int effectiveThickness = clipRound(test.thickness * test.scale);\n+            try {\n+                checkVerticalBorders((int) (SIZE.width * test.scale \/ 2), effectiveThickness, img);\n@@ -97,3 +117,3 @@\n-                for (Point p : panelLocations) {\n-                    int y = (int) (p.y * scaling) + SIZE.height \/ 2;\n-                    checkHorizontalBorder(y, thickness, img);\n+                for (Point p : test.panelLocations) {\n+                    int y = (int) ((p.y + (SIZE.height \/ 2)) * test.scale);\n+                    checkHorizontalBorder(y, effectiveThickness, img);\n@@ -107,1 +127,2 @@\n-                System.err.printf(\"Scaling: %.2f\\n\", scaling);\n+                System.err.printf(\"Scale: %.2f; thickness: %d, effective: %d\\n\",\n+                        test.scale, test.thickness, effectiveThickness);\n@@ -110,4 +131,1 @@\n-                \/\/ Save the image if it wasn't already saved\n-                if (!saveImages) {\n-                    saveImage(img, getImageFileName(scaling));\n-                }\n+                saveImage(img, getImageFileName(test.scale, test.thickness));\n@@ -116,6 +134,0 @@\n-\n-        if (errorCount > 0) {\n-            throw new Error(\"Test failed: \"\n-                    + errorCount + \" error(s) detected - \"\n-                    + errorMessage);\n-        }\n@@ -223,1 +235,1 @@\n-    private static JComponent createUI() {\n+    private static TestUI createUI(int thickness) {\n@@ -227,0 +239,2 @@\n+        List<Point> panelLocations = new ArrayList<>(4);\n+\n@@ -233,1 +247,1 @@\n-            filler.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));\n+            filler.setBorder(BorderFactory.createLineBorder(BORDER_COLOR, thickness));\n@@ -251,1 +265,1 @@\n-        return contentPanel;\n+        return new TestUI(contentPanel, panelLocations, thickness);\n@@ -263,3 +277,5 @@\n-    private static void paintToImages(final JComponent content,\n-                                      final boolean saveImages) {\n-        for (double scaling : scales) {\n+    private static List<TestImage> paintToImages(final TestUI testUI,\n+                                                 final boolean saveImages) {\n+        final List<TestImage> images = new ArrayList<>(scales.length);\n+        final JComponent content = testUI.content;\n+        for (double scale : scales) {\n@@ -267,2 +283,2 @@\n-                    new BufferedImage((int) Math.ceil(content.getWidth() * scaling),\n-                            (int) Math.ceil(content.getHeight() * scaling),\n+                    new BufferedImage((int) Math.ceil(content.getWidth() * scale),\n+                            (int) Math.ceil(content.getHeight() * scale),\n@@ -272,1 +288,1 @@\n-            g2d.scale(scaling, scaling);\n+            g2d.scale(scale, scale);\n@@ -277,1 +293,1 @@\n-                saveImage(image, getImageFileName(scaling));\n+                saveImage(image, getImageFileName(scale, testUI.thickness));\n@@ -279,1 +295,2 @@\n-            images.add(image);\n+            images.add(new TestImage(image, testUI.panelLocations,\n+                    scale, testUI.thickness));\n@@ -281,0 +298,1 @@\n+        return images;\n@@ -283,2 +301,3 @@\n-    private static String getImageFileName(final double scaling) {\n-        return String.format(\"test%.2f.png\", scaling);\n+    private static String getImageFileName(final double scaling,\n+                                           final int thickness) {\n+        return String.format(\"test%02d@%.2f.png\", thickness, scaling);\n","filename":"test\/jdk\/javax\/swing\/border\/LineBorder\/ScaledLineBorderTest.java","additions":67,"deletions":48,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+import static sun.java2d.pipe.Region.clipRound;\n+\n@@ -49,1 +51,1 @@\n- * @bug 8282958\n+ * @bug 8282958 8349188\n@@ -53,0 +55,1 @@\n+ * @modules java.desktop\/sun.java2d.pipe\n@@ -95,1 +98,1 @@\n-                int thickness = (int) Math.floor(scaling);\n+                int thickness = clipRound(scaling);\n","filename":"test\/jdk\/javax\/swing\/border\/LineBorder\/ScaledTextFieldBorderTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}