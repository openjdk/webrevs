{"files":[{"patch":"@@ -988,3 +988,7 @@\n-  out->print   (\" - klasses             {\");\n-  PrintKlassClosure closure(out);\n-  ((ClassLoaderData*)this)->classes_do(&closure);\n+  out->print   (\" - klasses             { \");\n+  if (Verbose) {\n+    PrintKlassClosure closure(out);\n+    ((ClassLoaderData*)this)->classes_do(&closure);\n+  } else {\n+     out->print(\"...\");\n+  }\n@@ -995,1 +999,6 @@\n-  out->print_cr(\" - dictionary          \" INTPTR_FORMAT, p2i(_dictionary));\n+  if (_dictionary != nullptr) {\n+    out->print   (\" - dictionary          \" INTPTR_FORMAT \" \", p2i(_dictionary));\n+    _dictionary->print_size(out);\n+  } else {\n+    out->print_cr(\" - dictionary          \" INTPTR_FORMAT, p2i(_dictionary));\n+  }\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -589,0 +589,5 @@\n+void Dictionary::print_size(outputStream* st) const {\n+  st->print_cr(\"Java dictionary (table_size=%d, classes=%d, resizable=%s)\",\n+               table_size(), number_of_entries(), BOOL_TO_STR(_resizable));\n+}\n+\n@@ -594,2 +599,1 @@\n-  st->print_cr(\"Java dictionary (table_size=%d, classes=%d, resizable=%s)\",\n-               table_size(), number_of_entries(), BOOL_TO_STR(_resizable));\n+  print_size(st);\n","filename":"src\/hotspot\/share\/classfile\/dictionary.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+  void print_size(outputStream* st) const;\n","filename":"src\/hotspot\/share\/classfile\/dictionary.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+  static int CLASSES_TO_LOAD = 30000;\n@@ -76,0 +77,1 @@\n+    boolean checked_load_factor = false;\n@@ -85,8 +87,11 @@\n-      } else if (resized && line.startsWith(\"Java dictionary (\")) {\n-        \/\/ ex. Java dictionary (table_size=10103, classes=5002)\n-        Scanner scanner = new Scanner(line);\n-        scanner.next(); \/\/ skip \"Java\"\n-        scanner.next(); \/\/ skip \"dictionary\"\n-        int table_size = getInt(scanner.next()); \/\/ process \"(table_size=40423\"\n-        int classes = getInt(scanner.next()); \/\/ process \", classes=50002\"\n-        scanner.close();\n+      } else if (resized) {\n+        int index = -1;\n+        if ((index = line.indexOf(\"Java dictionary (\")) != -1) {\n+          \/\/ ex. Java dictionary (table_size=10103, classes=5002)\n+          String dict = line.substring(index);\n+          Scanner scanner = new Scanner(dict);\n+          scanner.next(); \/\/ skip \"Java\"\n+          scanner.next(); \/\/ skip \"dictionary\"\n+          int table_size = getInt(scanner.next()); \/\/ process \"(table_size=40423\"\n+          int classes = getInt(scanner.next()); \/\/ process \", classes=50002\"\n+          scanner.close();\n@@ -94,2 +99,1 @@\n-        double loadFactor = (double)classes \/ (double)table_size;\n-        if (loadFactor > MAX_LOAD_FACTOR) {\n+          checked_load_factor = classes >= CLASSES_TO_LOAD;\n@@ -97,2 +101,2 @@\n-          \/\/ We've hit an error, so print all of the output.\n-          System.out.println(output);\n+          double loadFactor = (double)classes \/ (double)table_size;\n+          if (loadFactor > MAX_LOAD_FACTOR) {\n@@ -100,6 +104,11 @@\n-          throw new RuntimeException(\"Load factor too high, expected MAX \" + MAX_LOAD_FACTOR +\n-            \", got \" + loadFactor + \" [table size \" + table_size + \", number of clases \" + classes + \"]\");\n-        } else {\n-          System.out.println(\"PASS table_size: \" + table_size + \", classes: \" + classes +\n-          \", load factor: \" + loadFactor + \" <= \" + MAX_LOAD_FACTOR);\n-          \/\/ There are more than one system dictionary to check, so keep looking...\n+            \/\/ We've hit an error, so print all of the output.\n+            System.out.println(output);\n+\n+            throw new RuntimeException(\"Load factor too high, expected MAX \" + MAX_LOAD_FACTOR +\n+                  \", got \" + loadFactor + \" [table size \" + table_size + \", number of clases \" + classes + \"]\");\n+          } else {\n+            checked_load_factor = true;\n+            System.out.println(\"PASS table_size: \" + table_size + \", classes: \" + classes +\n+                \", load factor: \" + loadFactor + \" <= \" + MAX_LOAD_FACTOR);\n+                \/\/ There are more than one system dictionary to check, so keep looking...\n+          }\n@@ -112,0 +121,5 @@\n+    } else {\n+      \/\/ Make sure the load factor was checked\n+      if (!checked_load_factor) {\n+        throw new RuntimeException(\"Test didn't check load factor\");\n+      }\n@@ -116,1 +130,1 @@\n-    \/\/ -XX:+PrintSystemDictionaryAtExit will print the details of system dictionary,\n+    \/\/ -XX:+PrintClassLoaderDataGraphAtExit will print the summary of the dictionaries,\n@@ -120,1 +134,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintSystemDictionaryAtExit\",\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintClassLoaderDataGraphAtExit\",\n@@ -123,1 +137,1 @@\n-                                                                         \"50000\");\n+                                                                         String.valueOf(CLASSES_TO_LOAD));\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestResize.java","additions":35,"deletions":21,"binary":false,"changes":56,"status":"modified"}]}