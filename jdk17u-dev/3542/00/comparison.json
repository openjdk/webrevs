{"files":[{"patch":"@@ -218,0 +218,7 @@\n+  void skip_filtered_fields() {\n+    if (has_filtered_field()) {\n+      while (_index >= 0 && FilteredFieldsMap::is_filtered_field((Klass*)_klass, offset())) {\n+        _index -= 1;\n+      }\n+    }\n+  }\n@@ -223,0 +230,3 @@\n+    \/\/ skip filtered fields at the end\n+    skip_filtered_fields();\n+\n@@ -227,5 +237,1 @@\n-    if (has_filtered_field()) {\n-      while (_index >=0 && FilteredFieldsMap::is_filtered_field((Klass*)_klass, offset())) {\n-        _index -= 1;\n-      }\n-    }\n+    skip_filtered_fields();\n","filename":"src\/hotspot\/share\/runtime\/reflectionUtils.hpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8318626\n+ * @summary Verifies JVMTI GetClassFields function filters out fields\n+ *          the same way Class.getDeclaredFields() does.\n+ *\n+ * @run main\/othervm\/native -agentlib:FilteredFieldsTest FilteredFieldsTest\n+ *\/\n+\n+import java.lang.reflect.Field;\n+\n+public class FilteredFieldsTest {\n+\n+    static {\n+        System.loadLibrary(\"FilteredFieldsTest\");\n+    }\n+\n+    private native static int getJVMTIFieldCount(Class cls);\n+\n+    private static int getDeclaredFieldsCount(Class cls) {\n+        Field[] declaredFields = cls.getDeclaredFields();\n+        System.out.println(\"Class.getDeclaredFields reported \" + declaredFields.length + \" fields:\");\n+        for (int i = 0; i < declaredFields.length; i++) {\n+            System.out.println(\"  [\" + i + \"] : \" + declaredFields[i]);\n+        }\n+        return declaredFields.length;\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        Class cls = Class.forName(\"jdk.internal.reflect.ConstantPool\");\n+        int declaredCount = getDeclaredFieldsCount(cls);\n+        int jvmtiCount = getJVMTIFieldCount(cls);\n+        if (declaredCount != jvmtiCount) {\n+            throw new Exception(\"declaredCount != jvmtiCount: \" + declaredCount + \" != \" + jvmtiCount);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetClassFields\/FilteredFields\/FilteredFieldsTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <stdio.h>\n+#include <string.h>\n+#include \"jvmti.h\"\n+#include \"jvmti_common.h\"\n+\n+extern \"C\" {\n+\n+static jvmtiEnv *jvmti = NULL;\n+\n+\n+jint Agent_Initialize(JavaVM *jvm, char *options, void *reserved) {\n+    jint res = jvm->GetEnv((void **)&jvmti, JVMTI_VERSION_1_1);\n+    if (res != JNI_OK || jvmti == NULL) {\n+        printf(\"Wrong result of a valid call to GetEnv!\\n\");\n+        fflush(0);\n+        return JNI_ERR;\n+    }\n+    return JNI_OK;\n+}\n+\n+JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *jvm, char *options, void *reserved) {\n+    return Agent_Initialize(jvm, options, reserved);\n+}\n+JNIEXPORT jint JNICALL Agent_OnAttach(JavaVM *jvm, char *options, void *reserved) {\n+    return Agent_Initialize(jvm, options, reserved);\n+}\n+\n+\n+JNIEXPORT jint JNICALL\n+Java_FilteredFieldsTest_getJVMTIFieldCount(JNIEnv *env, jclass cls, jclass clazz) {\n+    if (jvmti == NULL) {\n+        env->FatalError(\"JVMTI agent was not properly loaded\");\n+    }\n+\n+    jint fcount = 0;\n+    jfieldID *fields = nullptr;\n+\n+    check_jvmti_status(env, jvmti->GetClassFields(clazz, &fcount, &fields), \"GetClassFields failed\");\n+\n+    printf(\"GetClassFields returned %d fields:\\n\", (int)fcount);\n+    for (int i = 0; i < fcount; i++) {\n+        char *name;\n+        jvmtiError err = jvmti->GetFieldName(clazz, fields[i], &name, nullptr, nullptr);\n+        if (err != JVMTI_ERROR_NONE) {\n+            printf(\"GetFieldName(%d) returned error: %s (%d)\\n\",\n+                   i, TranslateError(err), err);\n+            continue;\n+        }\n+        printf(\"  [%d]: %s\\n\", i, name);\n+        jvmti->Deallocate((unsigned char *)name);\n+    }\n+    fflush(0);\n+    return fcount;\n+}\n+\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetClassFields\/FilteredFields\/libFilteredFieldsTest.cpp","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}