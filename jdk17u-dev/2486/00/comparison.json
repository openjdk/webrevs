{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -731,2 +731,9 @@\n-  \/\/ Allocate array holding parameter types (java.lang.Class instances)\n-  objArrayOop m = oopFactory::new_objArray(vmClasses::Class_klass(), parameter_count, CHECK_(objArrayHandle()));\n+  objArrayOop m;\n+  if (parameter_count == 0) {\n+    \/\/ Avoid allocating an array for the empty case\n+    \/\/ Still need to parse the signature for the return type below\n+    m = Universe::the_empty_class_array();\n+  } else {\n+    \/\/ Allocate array holding parameter types (java.lang.Class instances)\n+    m = oopFactory::new_objArray(vmClasses::Class_klass(), parameter_count, CHECK_(objArrayHandle()));\n+  }\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import sun.reflect.generics.repository.GenericDeclRepository;\n@@ -244,1 +245,1 @@\n-          return (TypeVariable<Constructor<T>>[])new TypeVariable[0];\n+          return (TypeVariable<Constructor<T>>[])GenericDeclRepository.EMPTY_TYPE_VARS;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import sun.reflect.generics.repository.GenericDeclRepository;\n@@ -256,1 +257,1 @@\n-            return (TypeVariable<Method>[])new TypeVariable[0];\n+            return (TypeVariable<Method>[])GenericDeclRepository.EMPTY_TYPE_VARS;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+    public static final TypeVariable<?>[] EMPTY_TYPE_VARS = new TypeVariable<?>[0];\n+\n@@ -80,0 +82,3 @@\n+        if (length == 0) {\n+            return EMPTY_TYPE_VARS;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/GenericDeclRepository.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}