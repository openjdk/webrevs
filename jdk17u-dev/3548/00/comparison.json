{"files":[{"patch":"@@ -46,97 +46,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/Basic-X.java.template","additions":0,"deletions":97,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -24,0 +24,4 @@\n+import java.io.*;\n+import java.util.Formatter;\n+import java.util.Locale;\n+\n@@ -27,0 +31,1 @@\n+\n@@ -31,1 +36,97 @@\n-    static void pass() {\n+    protected static void test(String fs, String exp, Object ... args) {\n+        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n+        f.format(fs, args);\n+        ck(fs, exp, f.toString());\n+\n+        f = new Formatter(new StringBuilder(), Locale.US);\n+        f.format(\"foo \" + fs + \" bar\", args);\n+        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n+    }\n+\n+    protected static void test(Locale l, String fs, String exp, Object ... args)\n+    {\n+        Formatter f = new Formatter(new StringBuilder(), l);\n+        f.format(fs, args);\n+        ck(fs, exp, f.toString());\n+\n+        f = new Formatter(new StringBuilder(), l);\n+        f.format(\"foo \" + fs + \" bar\", args);\n+        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n+    }\n+\n+    protected static void test(String fs, Object ... args) {\n+        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n+        f.format(fs, args);\n+        ck(fs, \"fail\", f.toString());\n+    }\n+\n+    protected static void test(String fs) {\n+        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n+        f.format(fs, \"fail\");\n+        ck(fs, \"fail\", f.toString());\n+    }\n+\n+    protected static void testSysOut(String fs, String exp, Object ... args) {\n+        FileOutputStream fos = null;\n+        FileInputStream fis = null;\n+        try {\n+            PrintStream saveOut = System.out;\n+            fos = new FileOutputStream(\"testSysOut\");\n+            System.setOut(new PrintStream(fos));\n+            System.out.format(Locale.US, fs, args);\n+            fos.close();\n+\n+            fis = new FileInputStream(\"testSysOut\");\n+            byte [] ba = new byte[exp.length()];\n+            int len = fis.read(ba);\n+            String got = new String(ba);\n+            if (len != ba.length)\n+                fail(fs, exp, got);\n+            ck(fs, exp, got);\n+\n+            System.setOut(saveOut);\n+        } catch (FileNotFoundException ex) {\n+            fail(fs, ex.getClass());\n+        } catch (IOException ex) {\n+            fail(fs, ex.getClass());\n+        } finally {\n+            try {\n+                if (fos != null)\n+                    fos.close();\n+                if (fis != null)\n+                    fis.close();\n+            } catch (IOException ex) {\n+                fail(fs, ex.getClass());\n+            }\n+        }\n+    }\n+\n+    protected static void tryCatch(String fs, Class<?> ex) {\n+        boolean caught = false;\n+        try {\n+            test(fs);\n+        } catch (Throwable x) {\n+            if (ex.isAssignableFrom(x.getClass()))\n+                caught = true;\n+        }\n+        if (!caught)\n+            fail(fs, ex);\n+        else\n+            pass();\n+    }\n+\n+    protected static void tryCatch(String fs, Class<?> ex, Object ... args) {\n+        boolean caught = false;\n+        try {\n+            test(fs, args);\n+        } catch (Throwable x) {\n+            if (ex.isAssignableFrom(x.getClass()))\n+                caught = true;\n+        }\n+        if (!caught)\n+            fail(fs, ex);\n+        else\n+            pass();\n+    }\n+\n+    private static void pass() {\n@@ -35,1 +136,1 @@\n-    static void fail(String fs, Class ex) {\n+    private static void fail(String fs, Class ex) {\n@@ -44,1 +145,1 @@\n-    static void fail(String fs, String exp, String got) {\n+    private static void fail(String fs, String exp, String got) {\n@@ -61,1 +162,1 @@\n-    static void ck(String fs, String exp, String got) {\n+    private static void ck(String fs, String exp, String got) {\n","filename":"test\/jdk\/java\/util\/Formatter\/Basic.java","additions":105,"deletions":4,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,204 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -268,70 +60,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -525,0 +247,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %s - BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        BigDecimal one = BigDecimal.ONE;\n+        BigDecimal ten = BigDecimal.TEN;\n+        BigDecimal pi  = new BigDecimal(Math.PI);\n+        BigDecimal piToThe300 = pi.pow(300);\n@@ -526,0 +255,1 @@\n+        test(\"%s\", \"3.141592653589793115997963468544185161590576171875\", pi);\n@@ -527,0 +257,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ flag\/conversion errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n+        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n@@ -528,0 +263,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%e\", \"null\", (Object)null);\n@@ -529,0 +271,18 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - float and double\n+        \/\/---------------------------------------------------------------------\n+        \/\/ double PI = 3.141 592 653 589 793 238 46;\n+        test(\"%e\", \"3.141593e+00\", pi);\n+        test(\"%.0e\", \"1e+01\", ten);\n+        test(\"%#.0e\", \"1.e+01\", ten);\n+        test(\"%E\", \"3.141593E+00\", pi);\n+        test(\"%10.3e\", \" 3.142e+00\", pi);\n+        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%010.3e\", \"03.142e+00\", pi);\n+        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%-12.3e\", \"3.142e+00   \", pi);\n+        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n+        test(\"%.3e\", \"3.142e+00\", pi);\n+        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n+        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n@@ -530,0 +290,1 @@\n+        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n@@ -531,0 +292,9 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%.3e\", \"1.396e+149\", piToThe300);\n+        test(\"%.3e\", \"-1.396e+149\", piToThe300.negate());\n+        test(\"%.3e\", \"1.000e-100\", recip(ten.pow(100)));\n+        test(\"%.3e\", \"-1.000e-100\", negate(recip(ten.pow(100))));\n@@ -532,0 +302,20 @@\n+        test(\"%3.0e\", \"1e-06\", new BigDecimal(\"0.000001\"));\n+        test(\"%3.0e\", \"1e-05\", new BigDecimal(\"0.00001\"));\n+        test(\"%3.0e\", \"1e-04\", new BigDecimal(\"0.0001\"));\n+        test(\"%3.0e\", \"1e-03\", new BigDecimal(\"0.001\"));\n+        test(\"%3.0e\", \"1e-02\", new BigDecimal(\"0.01\"));\n+        test(\"%3.0e\", \"1e-01\", new BigDecimal(\"0.1\"));\n+        test(\"%3.0e\", \"9e-01\", new BigDecimal(\"0.9\"));\n+        test(\"%3.1e\", \"9.0e-01\", new BigDecimal(\"0.9\"));\n+        test(\"%3.0e\", \"1e+00\", new BigDecimal(\"1.00\"));\n+        test(\"%3.0e\", \"1e+01\", new BigDecimal(\"10.00\"));\n+        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"99.19\"));\n+        test(\"%3.1e\", \"9.9e+01\", new BigDecimal(\"99.19\"));\n+        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"99.99\"));\n+        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"100.00\"));\n+        test(\"%#3.0e\", \"1.e+03\",    new BigDecimal(\"1000.00\"));\n+        test(\"%3.0e\", \"1e+04\",     new BigDecimal(\"10000.00\"));\n+        test(\"%3.0e\", \"1e+05\",    new BigDecimal(\"100000.00\"));\n+        test(\"%3.0e\", \"1e+06\",   new BigDecimal(\"1000000.00\"));\n+        test(\"%3.0e\", \"1e+07\",  new BigDecimal(\"10000000.00\"));\n+        test(\"%3.0e\", \"1e+08\", new BigDecimal(\"100000000.00\"));\n@@ -533,0 +323,9 @@\n+        test(\"%10.3e\", \" 1.000e+00\", one);\n+        test(\"%+.3e\", \"+3.142e+00\", pi);\n+        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"% .3e\", \" 3.142e+00\", pi);\n+        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%#.0e\", \"3.e+00\", create(3.0));\n+        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n+        test(\"%.0e\", \"3e+00\", create(3.0));\n+        test(\"%.0e\", \"-3e+00\", create(-3.0));\n@@ -534,0 +333,2 @@\n+        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n+        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n@@ -535,0 +336,23 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - boundary problems\n+        \/\/---------------------------------------------------------------------\n+        test(\"%3.0e\", \"1e-06\", 0.000001);\n+        test(\"%3.0e\", \"1e-05\", 0.00001);\n+        test(\"%3.0e\", \"1e-04\", 0.0001);\n+        test(\"%3.0e\", \"1e-03\", 0.001);\n+        test(\"%3.0e\", \"1e-02\", 0.01);\n+        test(\"%3.0e\", \"1e-01\", 0.1);\n+        test(\"%3.0e\", \"9e-01\", 0.9);\n+        test(\"%3.1e\", \"9.0e-01\", 0.9);\n+        test(\"%3.0e\", \"1e+00\", 1.00);\n+        test(\"%3.0e\", \"1e+01\", 10.00);\n+        test(\"%3.0e\", \"1e+02\", 99.19);\n+        test(\"%3.1e\", \"9.9e+01\", 99.19);\n+        test(\"%3.0e\", \"1e+02\", 99.99);\n+        test(\"%3.0e\", \"1e+02\", 100.00);\n+        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n+        test(\"%3.0e\", \"1e+04\",     10000.00);\n+        test(\"%3.0e\", \"1e+05\",    100000.00);\n+        test(\"%3.0e\", \"1e+06\",   1000000.00);\n+        test(\"%3.0e\", \"1e+07\",  10000000.00);\n+        test(\"%3.0e\", \"1e+08\", 100000000.00);\n@@ -536,0 +360,28 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%f\", \"null\", (Object)null);\n+        test(\"%f\", \"3.141593\", pi);\n+        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n+        test(\"%10.3f\", \"     3.142\", pi);\n+        test(\"%10.3f\", \"    -3.142\", negate(pi));\n+        test(\"%010.3f\", \"000003.142\", pi);\n+        test(\"%010.3f\", \"-00003.142\", negate(pi));\n+        test(\"%-10.3f\", \"3.142     \", pi);\n+        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n+        test(\"%.3f\", \"3.142\", pi);\n+        test(\"%.3f\", \"-3.142\", negate(pi));\n+        test(\"%+.3f\", \"+3.142\", pi);\n+        test(\"%+.3f\", \"-3.142\", negate(pi));\n+        test(\"% .3f\", \" 3.142\", pi);\n+        test(\"% .3f\", \"-3.142\", negate(pi));\n+        test(\"%#.0f\", \"3.\", create(3.0));\n+        test(\"%#.0f\", \"-3.\", create(-3.0));\n+        test(\"%.0f\", \"3\", create(3.0));\n+        test(\"%.0f\", \"-3\", create(-3.0));\n+        test(\"%.3f\", \"10.000\", ten);\n+        test(\"%.3f\", \"1.000\", one);\n+        test(\"%10.3f\", \"     1.000\", one);\n@@ -537,0 +389,36 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - boundary problems\n+        \/\/---------------------------------------------------------------------\n+        test(\"%3.0f\", \"  0\", 0.000001);\n+        test(\"%3.0f\", \"  0\", 0.00001);\n+        test(\"%3.0f\", \"  0\", 0.0001);\n+        test(\"%3.0f\", \"  0\", 0.001);\n+        test(\"%3.0f\", \"  0\", 0.01);\n+        test(\"%3.0f\", \"  0\", 0.1);\n+        test(\"%3.0f\", \"  1\", 0.9);\n+        test(\"%3.1f\", \"0.9\", 0.9);\n+        test(\"%3.0f\", \"  1\", 1.00);\n+        test(\"%3.0f\", \" 10\", 10.00);\n+        test(\"%3.0f\", \" 99\", 99.19);\n+        test(\"%3.1f\", \"99.2\", 99.19);\n+        test(\"%3.0f\", \"100\", 99.99);\n+        test(\"%3.0f\", \"100\", 100.00);\n+        test(\"%#3.0f\", \"1000.\",     1000.00);\n+        test(\"%3.0f\", \"10000\",     10000.00);\n+        test(\"%3.0f\", \"100000\",    100000.00);\n+        test(\"%3.0f\", \"1000000\",   1000000.00);\n+        test(\"%3.0f\", \"10000000\",  10000000.00);\n+        test(\"%3.0f\", \"100000000\", 100000000.00);\n+        test(\"%10.0f\", \"   1000000\",   1000000.00);\n+        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n+        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n+        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%4.0f\", \"  99\", new BigDecimal(\"99.19\"));\n+        test(\"%4.1f\", \"99.2\", new BigDecimal(\"99.19\"));\n@@ -538,0 +426,6 @@\n+        BigDecimal val = new BigDecimal(\"99.95\");\n+        test(\"%4.0f\", \" 100\", val);\n+        test(\"%#4.0f\", \"100.\", val);\n+        test(\"%4.1f\", \"100.0\", val);\n+        test(\"%4.2f\", \"99.95\", val);\n+        test(\"%4.3f\", \"99.950\", val);\n@@ -539,0 +433,4 @@\n+        val = new BigDecimal(\".99\");\n+        test(\"%4.1f\", \" 1.0\", val);\n+        test(\"%4.2f\", \"0.99\", val);\n+        test(\"%4.3f\", \"0.990\", val);\n@@ -540,0 +438,8 @@\n+        \/\/ #6476425\n+        val = new BigDecimal(\"0.00001\");\n+        test(\"%.0f\", \"0\", val);\n+        test(\"%.1f\", \"0.0\", val);\n+        test(\"%.2f\", \"0.00\", val);\n+        test(\"%.3f\", \"0.000\", val);\n+        test(\"%.4f\", \"0.0000\", val);\n+        test(\"%.5f\", \"0.00001\", val);\n@@ -541,0 +447,7 @@\n+        val = new BigDecimal(\"1.00001\");\n+        test(\"%.0f\", \"1\", val);\n+        test(\"%.1f\", \"1.0\", val);\n+        test(\"%.2f\", \"1.00\", val);\n+        test(\"%.3f\", \"1.000\", val);\n+        test(\"%.4f\", \"1.0000\", val);\n+        test(\"%.5f\", \"1.00001\", val);\n@@ -542,0 +455,8 @@\n+        val = new BigDecimal(\"1.23456\");\n+        test(\"%.0f\", \"1\", val);\n+        test(\"%.1f\", \"1.2\", val);\n+        test(\"%.2f\", \"1.23\", val);\n+        test(\"%.3f\", \"1.235\", val);\n+        test(\"%.4f\", \"1.2346\", val);\n+        test(\"%.5f\", \"1.23456\", val);\n+        test(\"%.6f\", \"1.234560\", val);\n@@ -543,0 +464,8 @@\n+        val = new BigDecimal(\"9.99999\");\n+        test(\"%.0f\", \"10\", val);\n+        test(\"%.1f\", \"10.0\", val);\n+        test(\"%.2f\", \"10.00\", val);\n+        test(\"%.3f\", \"10.000\", val);\n+        test(\"%.4f\", \"10.0000\", val);\n+        test(\"%.5f\", \"9.99999\", val);\n+        test(\"%.6f\", \"9.999990\", val);\n@@ -545,0 +474,8 @@\n+        val = new BigDecimal(\"1.99999\");\n+        test(\"%.0f\", \"2\", val);\n+        test(\"%.1f\", \"2.0\", val);\n+        test(\"%.2f\", \"2.00\", val);\n+        test(\"%.3f\", \"2.000\", val);\n+        test(\"%.4f\", \"2.0000\", val);\n+        test(\"%.5f\", \"1.99999\", val);\n+        test(\"%.6f\", \"1.999990\", val);\n@@ -546,0 +483,8 @@\n+        val = new BigDecimal(0.9996);\n+        test(\"%.0f\", \"1\", val);\n+        test(\"%.1f\", \"1.0\", val);\n+        test(\"%.2f\", \"1.00\", val);\n+        test(\"%.3f\", \"1.000\", val);\n+        test(\"%.4f\", \"0.9996\", val);\n+        test(\"%.5f\", \"0.99960\", val);\n+        test(\"%.6f\", \"0.999600\", val);\n@@ -547,0 +492,4 @@\n+        val = new BigDecimal(BigInteger.ZERO, 6);\n+        test(\"%.4f\", \"0.0000\", val);\n+        val = new BigDecimal(BigInteger.ZERO, -6);\n+        test(\"%.4f\", \"0.0000\", val);\n@@ -548,0 +497,12 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - float, double, Double, BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n+        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n+        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n+        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n+        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n+        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n+        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -550,0 +511,21 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %g\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%g\", \"null\", (Object)null);\n+        test(\"%g\", \"3.14159\", pi);\n+        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n+        test(\"%.0g\", \"1e+01\", ten);\n+        test(\"%G\", \"3.14159\", pi);\n+        test(\"%10.3g\", \"      3.14\", pi);\n+        test(\"%10.3g\", \"     -3.14\", negate(pi));\n+        test(\"%010.3g\", \"0000003.14\", pi);\n+        test(\"%010.3g\", \"-000003.14\", negate(pi));\n+        test(\"%-12.3g\", \"3.14        \", pi);\n+        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n+        test(\"%.3g\", \"3.14\", pi);\n+        test(\"%.3g\", \"-3.14\", negate(pi));\n+        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n+        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n@@ -551,0 +533,6 @@\n+        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n+        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"1e+05\", create(100000.0));\n+        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n+        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n@@ -552,0 +540,6 @@\n+        test(\"%.1g\", \"-0\", -0.0);\n+        test(\"%3.0g\", \" -0\", -0.0);\n+        test(\"%.1g\", \"0\", 0.0);\n+        test(\"%3.0g\", \"  0\", 0.0);\n+        test(\"%.1g\", \"0\", +0.0);\n+        test(\"%3.0g\", \"  0\", +0.0);\n@@ -553,0 +547,44 @@\n+        test(\"%3.0g\", \"1e-06\", 0.000001);\n+        test(\"%3.0g\", \"1e-05\", 0.00001);\n+        test(\"%3.0g\", \"1e-05\", 0.0000099);\n+        test(\"%3.1g\", \"1e-05\", 0.0000099);\n+        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n+        test(\"%3.0g\", \"0.0001\", 0.0001);\n+        test(\"%3.0g\", \"9e-05\",  0.00009);\n+        test(\"%3.0g\", \"0.0001\", 0.000099);\n+        test(\"%3.1g\", \"0.0001\", 0.000099);\n+        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n+        test(\"%3.0g\", \"0.001\", 0.001);\n+        test(\"%3.0g\", \"0.001\", 0.00099);\n+        test(\"%3.1g\", \"0.001\", 0.00099);\n+        test(\"%3.2g\", \"0.00099\", 0.00099);\n+        test(\"%3.3g\", \"0.00100\", 0.001);\n+        test(\"%3.4g\", \"0.001000\", 0.001);\n+        test(\"%3.0g\", \"0.01\", 0.01);\n+        test(\"%3.0g\", \"0.1\", 0.1);\n+        test(\"%3.0g\", \"0.9\", 0.9);\n+        test(\"%3.1g\", \"0.9\", 0.9);\n+        test(\"%3.0g\", \"  1\", 1.00);\n+        test(\"%3.2g\", \" 10\", 10.00);\n+        test(\"%3.0g\", \"1e+01\", 10.00);\n+        test(\"%3.0g\", \"1e+02\", 99.19);\n+        test(\"%3.1g\", \"1e+02\", 99.19);\n+        test(\"%3.2g\", \" 99\", 99.19);\n+        test(\"%3.0g\", \"1e+02\", 99.9);\n+        test(\"%3.1g\", \"1e+02\", 99.9);\n+        test(\"%3.2g\", \"1.0e+02\", 99.9);\n+        test(\"%3.0g\", \"1e+02\", 99.99);\n+        test(\"%3.0g\", \"1e+02\", 100.00);\n+        test(\"%3.0g\", \"1e+03\", 999.9);\n+        test(\"%3.1g\", \"1e+03\", 999.9);\n+        test(\"%3.2g\", \"1.0e+03\", 999.9);\n+        test(\"%3.3g\", \"1.00e+03\", 999.9);\n+        test(\"%3.4g\", \"999.9\", 999.9);\n+        test(\"%3.4g\", \"1000\", 999.99);\n+        test(\"%3.0g\", \"1e+03\", 1000.00);\n+        test(\"%3.0g\", \"1e+04\",     10000.00);\n+        test(\"%3.0g\", \"1e+05\",    100000.00);\n+        test(\"%3.0g\", \"1e+06\",   1000000.00);\n+        test(\"%3.0g\", \"1e+07\",  10000000.00);\n+        test(\"%3.9g\", \"100000000\",  100000000.00);\n+        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n@@ -554,0 +592,1 @@\n+        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n@@ -555,0 +594,10 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %g - BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%.3g\", \"1.40e+149\", piToThe300);\n+        test(\"%.3g\", \"-1.40e+149\", piToThe300.negate());\n+        test(Locale.FRANCE, \"%.3g\", \"-1,40e+149\", piToThe300.negate());\n+        test(\"%.3g\", \"1.00e-100\", recip(ten.pow(100)));\n+        test(\"%.3g\", \"-1.00e-100\", negate(recip(ten.pow(100))));\n@@ -556,0 +605,25 @@\n+        test(\"%3.0g\", \"1e-06\", new BigDecimal(\"0.000001\"));\n+        test(\"%3.0g\", \"1e-05\", new BigDecimal(\"0.00001\"));\n+        test(\"%3.0g\", \"0.0001\", new BigDecimal(\"0.0001\"));\n+        test(\"%3.0g\", \"0.001\", new BigDecimal(\"0.001\"));\n+        test(\"%3.3g\", \"0.00100\", new BigDecimal(\"0.001\"));\n+        test(\"%3.4g\", \"0.001000\", new BigDecimal(\"0.001\"));\n+        test(\"%3.0g\", \"0.01\", new BigDecimal(\"0.01\"));\n+        test(\"%3.0g\", \"0.1\", new BigDecimal(\"0.1\"));\n+        test(\"%3.0g\", \"0.9\", new BigDecimal(\"0.9\"));\n+        test(\"%3.1g\", \"0.9\", new BigDecimal(\"0.9\"));\n+        test(\"%3.0g\", \"  1\", new BigDecimal(\"1.00\"));\n+        test(\"%3.2g\", \" 10\", new BigDecimal(\"10.00\"));\n+        test(\"%3.0g\", \"1e+01\", new BigDecimal(\"10.00\"));\n+        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"99.19\"));\n+        test(\"%3.1g\", \"1e+02\", new BigDecimal(\"99.19\"));\n+        test(\"%3.2g\", \" 99\", new BigDecimal(\"99.19\"));\n+        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"99.99\"));\n+        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"100.00\"));\n+        test(\"%3.0g\", \"1e+03\", new BigDecimal(\"1000.00\"));\n+        test(\"%3.0g\", \"1e+04\",      new BigDecimal(\"10000.00\"));\n+        test(\"%3.0g\", \"1e+05\",      new BigDecimal(\"100000.00\"));\n+        test(\"%3.0g\", \"1e+06\",      new BigDecimal(\"1000000.00\"));\n+        test(\"%3.0g\", \"1e+07\",      new BigDecimal(\"10000000.00\"));\n+        test(\"%3.9g\", \"100000000\",  new BigDecimal(\"100000000.00\"));\n+        test(\"%3.10g\", \"100000000.0\", new BigDecimal(\"100000000.00\"));\n@@ -557,0 +631,9 @@\n+        test(\"%.3g\", \"10.0\", ten);\n+        test(\"%.3g\", \"1.00\", one);\n+        test(\"%10.3g\", \"      1.00\", one);\n+        test(\"%+10.3g\", \"     +3.14\", pi);\n+        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n+        test(\"% .3g\", \" 3.14\", pi);\n+        test(\"% .3g\", \"-3.14\", negate(pi));\n+        test(\"%.0g\", \"3\", create(3.0));\n+        test(\"%.0g\", \"-3\", create(-3.0));\n@@ -558,0 +641,2 @@\n+        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n+        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n@@ -559,0 +644,2 @@\n+        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -561,1110 +648,3 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %s - BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        BigDecimal one = BigDecimal.ONE;\n-        BigDecimal ten = BigDecimal.TEN;\n-        BigDecimal pi  = new BigDecimal(Math.PI);\n-        BigDecimal piToThe300 = pi.pow(300);\n-\n-        test(\"%s\", \"3.141592653589793115997963468544185161590576171875\", pi);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ flag\/conversion errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n-        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%e\", \"null\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - float and double\n-        \/\/---------------------------------------------------------------------\n-        \/\/ double PI = 3.141 592 653 589 793 238 46;\n-        test(\"%e\", \"3.141593e+00\", pi);\n-        test(\"%.0e\", \"1e+01\", ten);\n-        test(\"%#.0e\", \"1.e+01\", ten);\n-        test(\"%E\", \"3.141593E+00\", pi);\n-        test(\"%10.3e\", \" 3.142e+00\", pi);\n-        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%010.3e\", \"03.142e+00\", pi);\n-        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%-12.3e\", \"3.142e+00   \", pi);\n-        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n-        test(\"%.3e\", \"3.142e+00\", pi);\n-        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n-        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n-\n-        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        test(\"%.3e\", \"1.396e+149\", piToThe300);\n-        test(\"%.3e\", \"-1.396e+149\", piToThe300.negate());\n-        test(\"%.3e\", \"1.000e-100\", recip(ten.pow(100)));\n-        test(\"%.3e\", \"-1.000e-100\", negate(recip(ten.pow(100))));\n-\n-        test(\"%3.0e\", \"1e-06\", new BigDecimal(\"0.000001\"));\n-        test(\"%3.0e\", \"1e-05\", new BigDecimal(\"0.00001\"));\n-        test(\"%3.0e\", \"1e-04\", new BigDecimal(\"0.0001\"));\n-        test(\"%3.0e\", \"1e-03\", new BigDecimal(\"0.001\"));\n-        test(\"%3.0e\", \"1e-02\", new BigDecimal(\"0.01\"));\n-        test(\"%3.0e\", \"1e-01\", new BigDecimal(\"0.1\"));\n-        test(\"%3.0e\", \"9e-01\", new BigDecimal(\"0.9\"));\n-        test(\"%3.1e\", \"9.0e-01\", new BigDecimal(\"0.9\"));\n-        test(\"%3.0e\", \"1e+00\", new BigDecimal(\"1.00\"));\n-        test(\"%3.0e\", \"1e+01\", new BigDecimal(\"10.00\"));\n-        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"99.19\"));\n-        test(\"%3.1e\", \"9.9e+01\", new BigDecimal(\"99.19\"));\n-        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"99.99\"));\n-        test(\"%3.0e\", \"1e+02\", new BigDecimal(\"100.00\"));\n-        test(\"%#3.0e\", \"1.e+03\",    new BigDecimal(\"1000.00\"));\n-        test(\"%3.0e\", \"1e+04\",     new BigDecimal(\"10000.00\"));\n-        test(\"%3.0e\", \"1e+05\",    new BigDecimal(\"100000.00\"));\n-        test(\"%3.0e\", \"1e+06\",   new BigDecimal(\"1000000.00\"));\n-        test(\"%3.0e\", \"1e+07\",  new BigDecimal(\"10000000.00\"));\n-        test(\"%3.0e\", \"1e+08\", new BigDecimal(\"100000000.00\"));\n-\n-\n-        test(\"%10.3e\", \" 1.000e+00\", one);\n-        test(\"%+.3e\", \"+3.142e+00\", pi);\n-        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"% .3e\", \" 3.142e+00\", pi);\n-        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%#.0e\", \"3.e+00\", create(3.0));\n-        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n-        test(\"%.0e\", \"3e+00\", create(3.0));\n-        test(\"%.0e\", \"-3e+00\", create(-3.0));\n-\n-        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n-        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0e\", \"1e-06\", 0.000001);\n-        test(\"%3.0e\", \"1e-05\", 0.00001);\n-        test(\"%3.0e\", \"1e-04\", 0.0001);\n-        test(\"%3.0e\", \"1e-03\", 0.001);\n-        test(\"%3.0e\", \"1e-02\", 0.01);\n-        test(\"%3.0e\", \"1e-01\", 0.1);\n-        test(\"%3.0e\", \"9e-01\", 0.9);\n-        test(\"%3.1e\", \"9.0e-01\", 0.9);\n-        test(\"%3.0e\", \"1e+00\", 1.00);\n-        test(\"%3.0e\", \"1e+01\", 10.00);\n-        test(\"%3.0e\", \"1e+02\", 99.19);\n-        test(\"%3.1e\", \"9.9e+01\", 99.19);\n-        test(\"%3.0e\", \"1e+02\", 99.99);\n-        test(\"%3.0e\", \"1e+02\", 100.00);\n-        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n-        test(\"%3.0e\", \"1e+04\",     10000.00);\n-        test(\"%3.0e\", \"1e+05\",    100000.00);\n-        test(\"%3.0e\", \"1e+06\",   1000000.00);\n-        test(\"%3.0e\", \"1e+07\",  10000000.00);\n-        test(\"%3.0e\", \"1e+08\", 100000000.00);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%f\", \"null\", (Object)null);\n-        test(\"%f\", \"3.141593\", pi);\n-        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n-        test(\"%10.3f\", \"     3.142\", pi);\n-        test(\"%10.3f\", \"    -3.142\", negate(pi));\n-        test(\"%010.3f\", \"000003.142\", pi);\n-        test(\"%010.3f\", \"-00003.142\", negate(pi));\n-        test(\"%-10.3f\", \"3.142     \", pi);\n-        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n-        test(\"%.3f\", \"3.142\", pi);\n-        test(\"%.3f\", \"-3.142\", negate(pi));\n-        test(\"%+.3f\", \"+3.142\", pi);\n-        test(\"%+.3f\", \"-3.142\", negate(pi));\n-        test(\"% .3f\", \" 3.142\", pi);\n-        test(\"% .3f\", \"-3.142\", negate(pi));\n-        test(\"%#.0f\", \"3.\", create(3.0));\n-        test(\"%#.0f\", \"-3.\", create(-3.0));\n-        test(\"%.0f\", \"3\", create(3.0));\n-        test(\"%.0f\", \"-3\", create(-3.0));\n-        test(\"%.3f\", \"10.000\", ten);\n-        test(\"%.3f\", \"1.000\", one);\n-        test(\"%10.3f\", \"     1.000\", one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0f\", \"  0\", 0.000001);\n-        test(\"%3.0f\", \"  0\", 0.00001);\n-        test(\"%3.0f\", \"  0\", 0.0001);\n-        test(\"%3.0f\", \"  0\", 0.001);\n-        test(\"%3.0f\", \"  0\", 0.01);\n-        test(\"%3.0f\", \"  0\", 0.1);\n-        test(\"%3.0f\", \"  1\", 0.9);\n-        test(\"%3.1f\", \"0.9\", 0.9);\n-        test(\"%3.0f\", \"  1\", 1.00);\n-        test(\"%3.0f\", \" 10\", 10.00);\n-        test(\"%3.0f\", \" 99\", 99.19);\n-        test(\"%3.1f\", \"99.2\", 99.19);\n-        test(\"%3.0f\", \"100\", 99.99);\n-        test(\"%3.0f\", \"100\", 100.00);\n-        test(\"%#3.0f\", \"1000.\",     1000.00);\n-        test(\"%3.0f\", \"10000\",     10000.00);\n-        test(\"%3.0f\", \"100000\",    100000.00);\n-        test(\"%3.0f\", \"1000000\",   1000000.00);\n-        test(\"%3.0f\", \"10000000\",  10000000.00);\n-        test(\"%3.0f\", \"100000000\", 100000000.00);\n-        test(\"%10.0f\", \"   1000000\",   1000000.00);\n-        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n-        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n-        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        test(\"%4.0f\", \"  99\", new BigDecimal(\"99.19\"));\n-        test(\"%4.1f\", \"99.2\", new BigDecimal(\"99.19\"));\n-\n-        BigDecimal val = new BigDecimal(\"99.95\");\n-        test(\"%4.0f\", \" 100\", val);\n-        test(\"%#4.0f\", \"100.\", val);\n-        test(\"%4.1f\", \"100.0\", val);\n-        test(\"%4.2f\", \"99.95\", val);\n-        test(\"%4.3f\", \"99.950\", val);\n-\n-        val = new BigDecimal(\".99\");\n-        test(\"%4.1f\", \" 1.0\", val);\n-        test(\"%4.2f\", \"0.99\", val);\n-        test(\"%4.3f\", \"0.990\", val);\n-\n-        \/\/ #6476425\n-        val = new BigDecimal(\"0.00001\");\n-        test(\"%.0f\", \"0\", val);\n-        test(\"%.1f\", \"0.0\", val);\n-        test(\"%.2f\", \"0.00\", val);\n-        test(\"%.3f\", \"0.000\", val);\n-        test(\"%.4f\", \"0.0000\", val);\n-        test(\"%.5f\", \"0.00001\", val);\n-\n-        val = new BigDecimal(\"1.00001\");\n-        test(\"%.0f\", \"1\", val);\n-        test(\"%.1f\", \"1.0\", val);\n-        test(\"%.2f\", \"1.00\", val);\n-        test(\"%.3f\", \"1.000\", val);\n-        test(\"%.4f\", \"1.0000\", val);\n-        test(\"%.5f\", \"1.00001\", val);\n-\n-        val = new BigDecimal(\"1.23456\");\n-        test(\"%.0f\", \"1\", val);\n-        test(\"%.1f\", \"1.2\", val);\n-        test(\"%.2f\", \"1.23\", val);\n-        test(\"%.3f\", \"1.235\", val);\n-        test(\"%.4f\", \"1.2346\", val);\n-        test(\"%.5f\", \"1.23456\", val);\n-        test(\"%.6f\", \"1.234560\", val);\n-\n-        val = new BigDecimal(\"9.99999\");\n-        test(\"%.0f\", \"10\", val);\n-        test(\"%.1f\", \"10.0\", val);\n-        test(\"%.2f\", \"10.00\", val);\n-        test(\"%.3f\", \"10.000\", val);\n-        test(\"%.4f\", \"10.0000\", val);\n-        test(\"%.5f\", \"9.99999\", val);\n-        test(\"%.6f\", \"9.999990\", val);\n-\n-\n-        val = new BigDecimal(\"1.99999\");\n-        test(\"%.0f\", \"2\", val);\n-        test(\"%.1f\", \"2.0\", val);\n-        test(\"%.2f\", \"2.00\", val);\n-        test(\"%.3f\", \"2.000\", val);\n-        test(\"%.4f\", \"2.0000\", val);\n-        test(\"%.5f\", \"1.99999\", val);\n-        test(\"%.6f\", \"1.999990\", val);\n-\n-        val = new BigDecimal(0.9996);\n-        test(\"%.0f\", \"1\", val);\n-        test(\"%.1f\", \"1.0\", val);\n-        test(\"%.2f\", \"1.00\", val);\n-        test(\"%.3f\", \"1.000\", val);\n-        test(\"%.4f\", \"0.9996\", val);\n-        test(\"%.5f\", \"0.99960\", val);\n-        test(\"%.6f\", \"0.999600\", val);\n-\n-        val = new BigDecimal(BigInteger.ZERO, 6);\n-        test(\"%.4f\", \"0.0000\", val);\n-        val = new BigDecimal(BigInteger.ZERO, -6);\n-        test(\"%.4f\", \"0.0000\", val);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - float, double, Double, BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n-        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n-        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n-        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n-        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n-        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n-        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %g\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%g\", \"null\", (Object)null);\n-        test(\"%g\", \"3.14159\", pi);\n-        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n-        test(\"%.0g\", \"1e+01\", ten);\n-        test(\"%G\", \"3.14159\", pi);\n-        test(\"%10.3g\", \"      3.14\", pi);\n-        test(\"%10.3g\", \"     -3.14\", negate(pi));\n-        test(\"%010.3g\", \"0000003.14\", pi);\n-        test(\"%010.3g\", \"-000003.14\", negate(pi));\n-        test(\"%-12.3g\", \"3.14        \", pi);\n-        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n-        test(\"%.3g\", \"3.14\", pi);\n-        test(\"%.3g\", \"-3.14\", negate(pi));\n-        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n-        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n-\n-        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n-        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"1e+05\", create(100000.0));\n-        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n-        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n-\n-        test(\"%.1g\", \"-0\", -0.0);\n-        test(\"%3.0g\", \" -0\", -0.0);\n-        test(\"%.1g\", \"0\", 0.0);\n-        test(\"%3.0g\", \"  0\", 0.0);\n-        test(\"%.1g\", \"0\", +0.0);\n-        test(\"%3.0g\", \"  0\", +0.0);\n-\n-        test(\"%3.0g\", \"1e-06\", 0.000001);\n-        test(\"%3.0g\", \"1e-05\", 0.00001);\n-        test(\"%3.0g\", \"1e-05\", 0.0000099);\n-        test(\"%3.1g\", \"1e-05\", 0.0000099);\n-        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n-        test(\"%3.0g\", \"0.0001\", 0.0001);\n-        test(\"%3.0g\", \"9e-05\",  0.00009);\n-        test(\"%3.0g\", \"0.0001\", 0.000099);\n-        test(\"%3.1g\", \"0.0001\", 0.000099);\n-        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n-        test(\"%3.0g\", \"0.001\", 0.001);\n-        test(\"%3.0g\", \"0.001\", 0.00099);\n-        test(\"%3.1g\", \"0.001\", 0.00099);\n-        test(\"%3.2g\", \"0.00099\", 0.00099);\n-        test(\"%3.3g\", \"0.00100\", 0.001);\n-        test(\"%3.4g\", \"0.001000\", 0.001);\n-        test(\"%3.0g\", \"0.01\", 0.01);\n-        test(\"%3.0g\", \"0.1\", 0.1);\n-        test(\"%3.0g\", \"0.9\", 0.9);\n-        test(\"%3.1g\", \"0.9\", 0.9);\n-        test(\"%3.0g\", \"  1\", 1.00);\n-        test(\"%3.2g\", \" 10\", 10.00);\n-        test(\"%3.0g\", \"1e+01\", 10.00);\n-        test(\"%3.0g\", \"1e+02\", 99.19);\n-        test(\"%3.1g\", \"1e+02\", 99.19);\n-        test(\"%3.2g\", \" 99\", 99.19);\n-        test(\"%3.0g\", \"1e+02\", 99.9);\n-        test(\"%3.1g\", \"1e+02\", 99.9);\n-        test(\"%3.2g\", \"1.0e+02\", 99.9);\n-        test(\"%3.0g\", \"1e+02\", 99.99);\n-        test(\"%3.0g\", \"1e+02\", 100.00);\n-        test(\"%3.0g\", \"1e+03\", 999.9);\n-        test(\"%3.1g\", \"1e+03\", 999.9);\n-        test(\"%3.2g\", \"1.0e+03\", 999.9);\n-        test(\"%3.3g\", \"1.00e+03\", 999.9);\n-        test(\"%3.4g\", \"999.9\", 999.9);\n-        test(\"%3.4g\", \"1000\", 999.99);\n-        test(\"%3.0g\", \"1e+03\", 1000.00);\n-        test(\"%3.0g\", \"1e+04\",     10000.00);\n-        test(\"%3.0g\", \"1e+05\",    100000.00);\n-        test(\"%3.0g\", \"1e+06\",   1000000.00);\n-        test(\"%3.0g\", \"1e+07\",  10000000.00);\n-        test(\"%3.9g\", \"100000000\",  100000000.00);\n-        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n-\n-        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %g - BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        test(\"%.3g\", \"1.40e+149\", piToThe300);\n-        test(\"%.3g\", \"-1.40e+149\", piToThe300.negate());\n-        test(Locale.FRANCE, \"%.3g\", \"-1,40e+149\", piToThe300.negate());\n-        test(\"%.3g\", \"1.00e-100\", recip(ten.pow(100)));\n-        test(\"%.3g\", \"-1.00e-100\", negate(recip(ten.pow(100))));\n-\n-        test(\"%3.0g\", \"1e-06\", new BigDecimal(\"0.000001\"));\n-        test(\"%3.0g\", \"1e-05\", new BigDecimal(\"0.00001\"));\n-        test(\"%3.0g\", \"0.0001\", new BigDecimal(\"0.0001\"));\n-        test(\"%3.0g\", \"0.001\", new BigDecimal(\"0.001\"));\n-        test(\"%3.3g\", \"0.00100\", new BigDecimal(\"0.001\"));\n-        test(\"%3.4g\", \"0.001000\", new BigDecimal(\"0.001\"));\n-        test(\"%3.0g\", \"0.01\", new BigDecimal(\"0.01\"));\n-        test(\"%3.0g\", \"0.1\", new BigDecimal(\"0.1\"));\n-        test(\"%3.0g\", \"0.9\", new BigDecimal(\"0.9\"));\n-        test(\"%3.1g\", \"0.9\", new BigDecimal(\"0.9\"));\n-        test(\"%3.0g\", \"  1\", new BigDecimal(\"1.00\"));\n-        test(\"%3.2g\", \" 10\", new BigDecimal(\"10.00\"));\n-        test(\"%3.0g\", \"1e+01\", new BigDecimal(\"10.00\"));\n-        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"99.19\"));\n-        test(\"%3.1g\", \"1e+02\", new BigDecimal(\"99.19\"));\n-        test(\"%3.2g\", \" 99\", new BigDecimal(\"99.19\"));\n-        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"99.99\"));\n-        test(\"%3.0g\", \"1e+02\", new BigDecimal(\"100.00\"));\n-        test(\"%3.0g\", \"1e+03\", new BigDecimal(\"1000.00\"));\n-        test(\"%3.0g\", \"1e+04\",      new BigDecimal(\"10000.00\"));\n-        test(\"%3.0g\", \"1e+05\",      new BigDecimal(\"100000.00\"));\n-        test(\"%3.0g\", \"1e+06\",      new BigDecimal(\"1000000.00\"));\n-        test(\"%3.0g\", \"1e+07\",      new BigDecimal(\"10000000.00\"));\n-        test(\"%3.9g\", \"100000000\",  new BigDecimal(\"100000000.00\"));\n-        test(\"%3.10g\", \"100000000.0\", new BigDecimal(\"100000000.00\"));\n-\n-\n-        test(\"%.3g\", \"10.0\", ten);\n-        test(\"%.3g\", \"1.00\", one);\n-        test(\"%10.3g\", \"      1.00\", one);\n-        test(\"%+10.3g\", \"     +3.14\", pi);\n-        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n-        test(\"% .3g\", \" 3.14\", pi);\n-        test(\"% .3g\", \"-3.14\", negate(pi));\n-        test(\"%.0g\", \"3\", create(3.0));\n-        test(\"%.0g\", \"-3\", create(-3.0));\n-\n-        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n-        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f, %e, %g, %a - Boundaries\n-        \/\/---------------------------------------------------------------------\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/---------------------------------------------------------------------\n@@ -1694,93 +674,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBigDecimal.java","additions":368,"deletions":1481,"binary":false,"changes":1849,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,289 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -524,0 +231,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ BigInteger - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%f\", IllegalFormatConversionException.class,\n+                 new BigInteger(\"1\"));\n@@ -525,0 +237,29 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - BigInteger\n+        \/\/---------------------------------------------------------------------\n+        test(\"%d\", \"null\", (Object)null);\n+        test(\"%d\", \"1234567\", new BigInteger(\"1234567\", 10));\n+        test(\"%,d\", \"1,234,567\", new BigInteger(\"1234567\", 10));\n+        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", new BigInteger(\"1234567\", 10));\n+        test(\"%,d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%(d\", \"1234567\", new BigInteger(\"1234567\", 10));\n+        test(\"%(d\", \"(1234567)\", new BigInteger(\"-1234567\", 10));\n+        test(\"% d\", \" 1234567\", new BigInteger(\"1234567\", 10));\n+        test(\"% d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%+d\", \"+1234567\", new BigInteger(\"1234567\", 10));\n+        test(\"%+d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%010d\", \"0001234567\", new BigInteger(\"1234567\", 10));\n+        test(\"%010d\", \"-001234567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%(10d\", \" (1234567)\", new BigInteger(\"-1234567\", 10));\n+        test(\"%+d\", \"+1234567\", new BigInteger(\"1234567\", 10));\n+        test(\"%+d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%-10d\", \"1234567   \", new BigInteger(\"1234567\", 10));\n+        test(\"%-10d\", \"-1234567  \", new BigInteger(\"-1234567\", 10));\n+        \/\/ , variations:\n+        test(\"%0,10d\", \"01,234,567\", new BigInteger(\"1234567\", 10));\n+        test(\"%0,10d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%(,10d\", \"(1,234,567)\", new BigInteger(\"-1234567\", 10));\n+        test(\"%+,d\", \"+1,234,567\", new BigInteger(\"1234567\", 10));\n+        test(\"%+,d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n+        test(\"%-,10d\", \"1,234,567 \", new BigInteger(\"1234567\", 10));\n+        test(\"%-,10d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n@@ -526,0 +267,20 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - BigInteger\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n+        test(\"%o\", \"1234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%(o\", \"1234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%(o\", \"(1234567)\", new BigInteger(\"-1234567\", 8));\n+        test(\"% o\", \" 1234567\", new BigInteger(\"1234567\", 8));\n+        test(\"% o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n+        test(\"%+o\", \"+1234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%+o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n+        test(\"%010o\", \"0001234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%010o\", \"-001234567\", new BigInteger(\"-1234567\", 8));\n+        test(\"%(10o\", \" (1234567)\", new BigInteger(\"-1234567\", 8));\n+        test(\"%+o\", \"+1234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%+o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n+        test(\"%-10o\", \"1234567   \", new BigInteger(\"1234567\", 8));\n+        test(\"%-10o\", \"-1234567  \", new BigInteger(\"-1234567\", 8));\n+        test(\"%#10o\", \"  01234567\", new BigInteger(\"1234567\", 8));\n+        test(\"%#10o\", \" -01234567\", new BigInteger(\"-1234567\", 8));\n@@ -527,1145 +288,24 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ BigInteger - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%f\", IllegalFormatConversionException.class,\n-                 new BigInteger(\"1\"));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - BigInteger\n-        \/\/---------------------------------------------------------------------\n-        test(\"%d\", \"null\", (Object)null);\n-        test(\"%d\", \"1234567\", new BigInteger(\"1234567\", 10));\n-        test(\"%,d\", \"1,234,567\", new BigInteger(\"1234567\", 10));\n-        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", new BigInteger(\"1234567\", 10));\n-        test(\"%,d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%(d\", \"1234567\", new BigInteger(\"1234567\", 10));\n-        test(\"%(d\", \"(1234567)\", new BigInteger(\"-1234567\", 10));\n-        test(\"% d\", \" 1234567\", new BigInteger(\"1234567\", 10));\n-        test(\"% d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%+d\", \"+1234567\", new BigInteger(\"1234567\", 10));\n-        test(\"%+d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%010d\", \"0001234567\", new BigInteger(\"1234567\", 10));\n-        test(\"%010d\", \"-001234567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%(10d\", \" (1234567)\", new BigInteger(\"-1234567\", 10));\n-        test(\"%+d\", \"+1234567\", new BigInteger(\"1234567\", 10));\n-        test(\"%+d\", \"-1234567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%-10d\", \"1234567   \", new BigInteger(\"1234567\", 10));\n-        test(\"%-10d\", \"-1234567  \", new BigInteger(\"-1234567\", 10));\n-        \/\/ , variations:\n-        test(\"%0,10d\", \"01,234,567\", new BigInteger(\"1234567\", 10));\n-        test(\"%0,10d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%(,10d\", \"(1,234,567)\", new BigInteger(\"-1234567\", 10));\n-        test(\"%+,d\", \"+1,234,567\", new BigInteger(\"1234567\", 10));\n-        test(\"%+,d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n-        test(\"%-,10d\", \"1,234,567 \", new BigInteger(\"1234567\", 10));\n-        test(\"%-,10d\", \"-1,234,567\", new BigInteger(\"-1234567\", 10));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - BigInteger\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-        test(\"%o\", \"1234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%(o\", \"1234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%(o\", \"(1234567)\", new BigInteger(\"-1234567\", 8));\n-        test(\"% o\", \" 1234567\", new BigInteger(\"1234567\", 8));\n-        test(\"% o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n-        test(\"%+o\", \"+1234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%+o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n-        test(\"%010o\", \"0001234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%010o\", \"-001234567\", new BigInteger(\"-1234567\", 8));\n-        test(\"%(10o\", \" (1234567)\", new BigInteger(\"-1234567\", 8));\n-        test(\"%+o\", \"+1234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%+o\", \"-1234567\", new BigInteger(\"-1234567\", 8));\n-        test(\"%-10o\", \"1234567   \", new BigInteger(\"1234567\", 8));\n-        test(\"%-10o\", \"-1234567  \", new BigInteger(\"-1234567\", 8));\n-        test(\"%#10o\", \"  01234567\", new BigInteger(\"1234567\", 8));\n-        test(\"%#10o\", \" -01234567\", new BigInteger(\"-1234567\", 8));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x - BigInteger\n-        \/\/---------------------------------------------------------------------\n-        test(\"%x\", \"null\", (Object)null);\n-        test(\"%x\", \"1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%(x\", \"1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%(x\", \"(1234567)\", new BigInteger(\"-1234567\", 16));\n-        test(\"% x\", \" 1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"% x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%+x\", \"+1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%+x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%010x\", \"0001234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%010x\", \"-001234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%(10x\", \" (1234567)\", new BigInteger(\"-1234567\", 16));\n-        test(\"%+x\", \"+1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%+x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%-10x\", \"1234567   \", new BigInteger(\"1234567\", 16));\n-        test(\"%-10x\", \"-1234567  \", new BigInteger(\"-1234567\", 16));\n-        test(\"%#10x\", \" 0x1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%#10x\", \"-0x1234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%#10X\", \" 0X1234567\", new BigInteger(\"1234567\", 16));\n-        test(\"%#10X\", \"-0X1234567\", new BigInteger(\"-1234567\", 16));\n-        test(\"%X\", \"1234567A\", new BigInteger(\"1234567a\", 16));\n-        test(\"%X\", \"-1234567A\", new BigInteger(\"-1234567a\", 16));\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x - BigInteger\n+        \/\/---------------------------------------------------------------------\n+        test(\"%x\", \"null\", (Object)null);\n+        test(\"%x\", \"1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%(x\", \"1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%(x\", \"(1234567)\", new BigInteger(\"-1234567\", 16));\n+        test(\"% x\", \" 1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"% x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%+x\", \"+1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%+x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%010x\", \"0001234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%010x\", \"-001234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%(10x\", \" (1234567)\", new BigInteger(\"-1234567\", 16));\n+        test(\"%+x\", \"+1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%+x\", \"-1234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%-10x\", \"1234567   \", new BigInteger(\"1234567\", 16));\n+        test(\"%-10x\", \"-1234567  \", new BigInteger(\"-1234567\", 16));\n+        test(\"%#10x\", \" 0x1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%#10x\", \"-0x1234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%#10X\", \" 0X1234567\", new BigInteger(\"1234567\", 16));\n+        test(\"%#10X\", \"-0X1234567\", new BigInteger(\"-1234567\", 16));\n+        test(\"%X\", \"1234567A\", new BigInteger(\"1234567a\", 16));\n+        test(\"%X\", \"-1234567A\", new BigInteger(\"-1234567a\", 16));\n@@ -1694,93 +334,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBigInteger.java","additions":78,"deletions":1531,"binary":false,"changes":1609,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,289 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -526,1155 +233,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +253,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBoolean.java","additions":7,"deletions":1541,"binary":false,"changes":1548,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,289 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -526,1155 +233,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +253,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBooleanObject.java","additions":7,"deletions":1541,"binary":false,"changes":1548,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,178 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -230,108 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,2 +233,0 @@\n-\n-\n@@ -527,14 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,2 +243,0 @@\n-\n-\n@@ -569,0 +261,8 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%D\", UnknownFormatConversionException.class);\n+        tryCatch(\"%0d\", MissingFormatWidthException.class);\n+        tryCatch(\"%-d\", MissingFormatWidthException.class);\n+        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n@@ -570,0 +270,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n@@ -571,124 +278,6 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%D\", UnknownFormatConversionException.class);\n-        tryCatch(\"%0d\", MissingFormatWidthException.class);\n-        tryCatch(\"%-d\", MissingFormatWidthException.class);\n-        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - byte\n-        \/\/---------------------------------------------------------------------\n-        test(\"%010o\", \"0000000200\", minByte);\n-        test(\"%-10o\", \"200       \", minByte);\n-        test(\"%#10o\", \"      0200\", minByte);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - byte\n+        \/\/---------------------------------------------------------------------\n+        test(\"%010o\", \"0000000200\", minByte);\n+        test(\"%-10o\", \"200       \", minByte);\n+        test(\"%#10o\", \"      0200\", minByte);\n@@ -718,1 +307,0 @@\n-\n@@ -728,52 +316,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -790,891 +326,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +346,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicByte.java","additions":28,"deletions":1469,"binary":false,"changes":1497,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,184 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -236,102 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,8 +233,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -533,8 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,0 +243,8 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%D\", UnknownFormatConversionException.class);\n+        tryCatch(\"%0d\", MissingFormatWidthException.class);\n+        tryCatch(\"%-d\", MissingFormatWidthException.class);\n+        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n@@ -550,0 +252,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n@@ -552,0 +261,13 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%0o\", MissingFormatWidthException.class);\n+        tryCatch(\"%-o\", MissingFormatWidthException.class);\n+        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%O\", UnknownFormatConversionException.class);\n@@ -553,0 +275,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%x\", \"null\", (Object)null);\n@@ -554,1116 +283,6 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%D\", UnknownFormatConversionException.class);\n-        tryCatch(\"%0d\", MissingFormatWidthException.class);\n-        tryCatch(\"%-d\", MissingFormatWidthException.class);\n-        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%0o\", MissingFormatWidthException.class);\n-        tryCatch(\"%-o\", MissingFormatWidthException.class);\n-        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%O\", UnknownFormatConversionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%x\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%0x\", MissingFormatWidthException.class);\n-        tryCatch(\"%-x\", MissingFormatWidthException.class);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%0x\", MissingFormatWidthException.class);\n+        tryCatch(\"%-x\", MissingFormatWidthException.class);\n@@ -1694,93 +313,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicByteObject.java","additions":41,"deletions":1515,"binary":false,"changes":1556,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,289 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -526,1155 +233,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +253,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicChar.java","additions":7,"deletions":1541,"binary":false,"changes":1548,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,289 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -526,1155 +233,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +253,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicCharObject.java","additions":7,"deletions":1541,"binary":false,"changes":1548,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-\n@@ -44,1 +43,0 @@\n-\n@@ -46,98 +44,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n@@ -224,114 +124,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -526,0 +312,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -527,0 +320,10 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%t\", UnknownFormatConversionException.class);\n+        tryCatch(\"%T\", UnknownFormatConversionException.class);\n+        tryCatch(\"%tP\", UnknownFormatConversionException.class);\n+        tryCatch(\"%TP\", UnknownFormatConversionException.class);\n+        tryCatch(\"%.5tB\", IllegalFormatPrecisionException.class);\n+        tryCatch(\"%#tB\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%-tB\", MissingFormatWidthException.class);\n@@ -528,0 +331,3 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - create test Calendar\n+        \/\/---------------------------------------------------------------------\n@@ -529,0 +335,10 @@\n+        \/\/ Get the supported ids for GMT-08:00 (Pacific Standard Time)\n+        String[] ids = TimeZone.getAvailableIDs(-8 * 60 * 60 * 1000);\n+        \/\/ Create a Pacific Standard Time time zone\n+        SimpleTimeZone tz = new SimpleTimeZone(-8 * 60 * 60 * 1000, ids[0]);\n+        \/\/ public GregorianCalendar(TimeZone zone, Locale aLocale);\n+        Calendar c0 = new GregorianCalendar(tz, Locale.US);\n+        \/\/ public final void set(int year, int month, int date,\n+        \/\/     int hourOfDay, int minute, int second);\n+        c0.set(1995, MAY, 23, 19, 48, 34);\n+        c0.set(Calendar.MILLISECOND, 584);\n@@ -530,0 +346,12 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - Minutes, {nano,milli}*seconds\n+        \/\/\n+        \/\/ testDateTime() verifies the expected output for all applicable types\n+        \/\/ (Calendar, Date, and long).  It also verifies output for \"%t\" and\n+        \/\/ \"%T\". Thus it is sufficient to invoke that method once per\n+        \/\/ conversion\/expected output.\n+        \/\/---------------------------------------------------------------------\n+        testDateTime(\"%tM\", \"48\", c0);\n+        testDateTime(\"%tN\", \"584000000\", c0);\n+        testDateTime(\"%tL\", \"584\", c0);\n+\/\/      testDateTime(\"%tQ\", \"801283714584\", c0);\n@@ -531,0 +359,3 @@\n+        testDateTime(\"%ts\", String.valueOf(c0.getTimeInMillis() \/ 1000), c0);\n+        testDateTime(\"%tS\", \"34\", c0);\n+        testDateTime(\"%tT\", \"19:48:34\", c0);\n@@ -532,0 +363,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - Hours, morning\/afternoon markers\n+        \/\/\n+        \/\/ testHours() iterates through all twenty-four hours to verify\n+        \/\/ numeric return value and morning\/afternoon markers.\n+        \/\/---------------------------------------------------------------------\n+        testHours();\n@@ -533,0 +371,15 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - Portions of date [ day, month, dates, weeks ]\n+        \/\/---------------------------------------------------------------------\n+        testDateTime(\"%ta\", \"Tue\", c0);\n+        testDateTime(\"%tA\", \"Tuesday\", c0);\n+        testDateTime(\"%tb\", \"May\", c0);\n+        testDateTime(\"%tB\", \"May\", c0);\n+        testDateTime(\"%tC\", \"19\", c0);\n+        testDateTime(\"%td\", \"23\", c0);\n+        testDateTime(\"%te\", \"23\", c0);\n+        testDateTime(\"%th\", \"May\", c0);\n+        testDateTime(\"%tj\", \"143\", c0);\n+        testDateTime(\"%tm\", \"05\", c0);\n+        testDateTime(\"%ty\", \"95\", c0);\n+        testDateTime(\"%tY\", \"1995\", c0);\n@@ -534,0 +387,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t - TimeZone\n+        \/\/---------------------------------------------------------------------\n+        testDateTime(\"%tz\", \"-0800\", c0);\n+        testDateTime(\"%tZ\", \"PST\", c0);\n@@ -535,0 +393,4 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %tz should always adjust for DST\n+        \/\/---------------------------------------------------------------------\n+        TimeZone dtz = TimeZone.getDefault();\n@@ -536,0 +398,8 @@\n+        \/\/ Artificial TimeZone based on PST with 3:15 DST always in effect\n+        TimeZone atz = new SimpleTimeZone(-8 * 60 * 60 * 1000, \"AlwaysDST\",\n+            JANUARY, 1, 0, 0, STANDARD_TIME,\n+            \/\/ 24hrs - 1m = 60 * 60 * 1000 * 24 - 1\n+            DECEMBER, 31, 0, 60 * 60 * 1000 * 24 - 1, STANDARD_TIME,\n+            (int)(60 * 60 * 1000 * 3.25));\n+        TimeZone.setDefault(atz);\n+        testDateTime(\"%tz\", \"-0445\", Calendar.getInstance(atz));\n@@ -537,1247 +407,4 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%t\", UnknownFormatConversionException.class);\n-        tryCatch(\"%T\", UnknownFormatConversionException.class);\n-        tryCatch(\"%tP\", UnknownFormatConversionException.class);\n-        tryCatch(\"%TP\", UnknownFormatConversionException.class);\n-        tryCatch(\"%.5tB\", IllegalFormatPrecisionException.class);\n-        tryCatch(\"%#tB\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%-tB\", MissingFormatWidthException.class);\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - create test Calendar\n-        \/\/---------------------------------------------------------------------\n-\n-        \/\/ Get the supported ids for GMT-08:00 (Pacific Standard Time)\n-        String[] ids = TimeZone.getAvailableIDs(-8 * 60 * 60 * 1000);\n-        \/\/ With tzdata2020b, the test fails for the mentioned zones expecting\n-        \/\/ \"PST\" but JDK has Zone name \"MST\" for JRE locale provider.\n-        \/\/ Therefore excluding them as the test is only looking for a GMT-08:00\n-        \/\/ time zone ID. See JDK-8254865.\n-        final List<String> list =  new ArrayList<String>();\n-        Collections.addAll(list, ids);\n-        list.remove(\"America\/Dawson\");\n-        list.remove(\"America\/WhiteHorse\");\n-        list.remove(\"Canada\/Yukon\");\n-        ids = list.toArray(new String[list.size()]);\n-        \/\/ Create a Pacific Standard Time time zone\n-        SimpleTimeZone tz = new SimpleTimeZone(-8 * 60 * 60 * 1000, ids[0]);\n-        \/\/ public GregorianCalendar(TimeZone zone, Locale aLocale);\n-        Calendar c0 = new GregorianCalendar(tz, Locale.US);\n-        \/\/ public final void set(int year, int month, int date,\n-        \/\/     int hourOfDay, int minute, int second);\n-        c0.set(1995, MAY, 23, 19, 48, 34);\n-        c0.set(Calendar.MILLISECOND, 584);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - Minutes, {nano,milli}*seconds\n-        \/\/\n-        \/\/ testDateTime() verifies the expected output for all applicable types\n-        \/\/ (Calendar, Date, and long).  It also verifies output for \"%t\" and\n-        \/\/ \"%T\". Thus it is sufficient to invoke that method once per\n-        \/\/ conversion\/expected output.\n-        \/\/---------------------------------------------------------------------\n-        testDateTime(\"%tM\", \"48\", c0);\n-        testDateTime(\"%tN\", \"584000000\", c0);\n-        testDateTime(\"%tL\", \"584\", c0);\n-\/\/      testDateTime(\"%tQ\", \"801283714584\", c0);\n-\n-        testDateTime(\"%ts\", String.valueOf(c0.getTimeInMillis() \/ 1000), c0);\n-        testDateTime(\"%tS\", \"34\", c0);\n-        testDateTime(\"%tT\", \"19:48:34\", c0);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - Hours, morning\/afternoon markers\n-        \/\/\n-        \/\/ testHours() iterates through all twenty-four hours to verify\n-        \/\/ numeric return value and morning\/afternoon markers.\n-        \/\/---------------------------------------------------------------------\n-        testHours();\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - Portions of date [ day, month, dates, weeks ]\n-        \/\/---------------------------------------------------------------------\n-        testDateTime(\"%ta\", \"Tue\", c0);\n-        testDateTime(\"%tA\", \"Tuesday\", c0);\n-        testDateTime(\"%tb\", \"May\", c0);\n-        testDateTime(\"%tB\", \"May\", c0);\n-        testDateTime(\"%tC\", \"19\", c0);\n-        testDateTime(\"%td\", \"23\", c0);\n-        testDateTime(\"%te\", \"23\", c0);\n-        testDateTime(\"%th\", \"May\", c0);\n-        testDateTime(\"%tj\", \"143\", c0);\n-        testDateTime(\"%tm\", \"05\", c0);\n-        testDateTime(\"%ty\", \"95\", c0);\n-        testDateTime(\"%tY\", \"1995\", c0);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t - TimeZone\n-        \/\/---------------------------------------------------------------------\n-        testDateTime(\"%tz\", \"-0800\", c0);\n-        testDateTime(\"%tZ\", \"PST\", c0);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %tz should always adjust for DST\n-        \/\/---------------------------------------------------------------------\n-        TimeZone dtz = TimeZone.getDefault();\n-\n-        \/\/ Artificial TimeZone based on PST with 3:15 DST always in effect\n-        TimeZone atz = new SimpleTimeZone(-8 * 60 * 60 * 1000, \"AlwaysDST\",\n-            JANUARY, 1, 0, 0, STANDARD_TIME,\n-            \/\/ 24hrs - 1m = 60 * 60 * 1000 * 24 - 1\n-            DECEMBER, 31, 0, 60 * 60 * 1000 * 24 - 1, STANDARD_TIME,\n-            (int)(60 * 60 * 1000 * 3.25));\n-        TimeZone.setDefault(atz);\n-        testDateTime(\"%tz\", \"-0445\", Calendar.getInstance(atz));\n-\n-        \/\/ Restore the TimeZone and verify\n-        TimeZone.setDefault(dtz);\n-        if (atz.hasSameRules(TimeZone.getDefault()))\n-            throw new RuntimeException(\"Default TimeZone not restored\");\n+        \/\/ Restore the TimeZone and verify\n+        TimeZone.setDefault(dtz);\n+        if (atz.hasSameRules(TimeZone.getDefault()))\n+            throw new RuntimeException(\"Default TimeZone not restored\");\n@@ -1796,1 +423,0 @@\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDateTime.java","additions":88,"deletions":1462,"binary":false,"changes":1550,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,255 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -320,18 +61,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -525,0 +248,6 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %s - double\n+        \/\/---------------------------------------------------------------------\n+        double one = 1.0;\n+        double ten = 10.0;\n+        double pi  = Math.PI;\n@@ -526,0 +255,1 @@\n+        test(\"%s\", \"3.141592653589793\", pi);\n@@ -527,0 +257,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ flag\/conversion errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n+        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n@@ -528,0 +263,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%e\", \"null\", (Object)null);\n@@ -529,0 +271,18 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - float and double\n+        \/\/---------------------------------------------------------------------\n+        \/\/ double PI = 3.141 592 653 589 793 238 46;\n+        test(\"%e\", \"3.141593e+00\", pi);\n+        test(\"%.0e\", \"1e+01\", ten);\n+        test(\"%#.0e\", \"1.e+01\", ten);\n+        test(\"%E\", \"3.141593E+00\", pi);\n+        test(\"%10.3e\", \" 3.142e+00\", pi);\n+        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%010.3e\", \"03.142e+00\", pi);\n+        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%-12.3e\", \"3.142e+00   \", pi);\n+        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n+        test(\"%.3e\", \"3.142e+00\", pi);\n+        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n+        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n@@ -530,0 +290,1 @@\n+        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n@@ -531,0 +292,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -532,0 +295,9 @@\n+        test(\"%10.3e\", \" 1.000e+00\", one);\n+        test(\"%+.3e\", \"+3.142e+00\", pi);\n+        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"% .3e\", \" 3.142e+00\", pi);\n+        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%#.0e\", \"3.e+00\", create(3.0));\n+        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n+        test(\"%.0e\", \"3e+00\", create(3.0));\n+        test(\"%.0e\", \"-3e+00\", create(-3.0));\n@@ -533,654 +305,2 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %s - double\n-        \/\/---------------------------------------------------------------------\n-        double one = 1.0;\n-        double ten = 10.0;\n-        double pi  = Math.PI;\n-\n-        test(\"%s\", \"3.141592653589793\", pi);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ flag\/conversion errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n-        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%e\", \"null\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - float and double\n-        \/\/---------------------------------------------------------------------\n-        \/\/ double PI = 3.141 592 653 589 793 238 46;\n-        test(\"%e\", \"3.141593e+00\", pi);\n-        test(\"%.0e\", \"1e+01\", ten);\n-        test(\"%#.0e\", \"1.e+01\", ten);\n-        test(\"%E\", \"3.141593E+00\", pi);\n-        test(\"%10.3e\", \" 3.142e+00\", pi);\n-        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%010.3e\", \"03.142e+00\", pi);\n-        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%-12.3e\", \"3.142e+00   \", pi);\n-        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n-        test(\"%.3e\", \"3.142e+00\", pi);\n-        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n-        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n-\n-        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%10.3e\", \" 1.000e+00\", one);\n-        test(\"%+.3e\", \"+3.142e+00\", pi);\n-        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"% .3e\", \" 3.142e+00\", pi);\n-        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%#.0e\", \"3.e+00\", create(3.0));\n-        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n-        test(\"%.0e\", \"3e+00\", create(3.0));\n-        test(\"%.0e\", \"-3e+00\", create(-3.0));\n-\n-        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n-        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0e\", \"1e-06\", 0.000001);\n-        test(\"%3.0e\", \"1e-05\", 0.00001);\n-        test(\"%3.0e\", \"1e-04\", 0.0001);\n-        test(\"%3.0e\", \"1e-03\", 0.001);\n-        test(\"%3.0e\", \"1e-02\", 0.01);\n-        test(\"%3.0e\", \"1e-01\", 0.1);\n-        test(\"%3.0e\", \"9e-01\", 0.9);\n-        test(\"%3.1e\", \"9.0e-01\", 0.9);\n-        test(\"%3.0e\", \"1e+00\", 1.00);\n-        test(\"%3.0e\", \"1e+01\", 10.00);\n-        test(\"%3.0e\", \"1e+02\", 99.19);\n-        test(\"%3.1e\", \"9.9e+01\", 99.19);\n-        test(\"%3.0e\", \"1e+02\", 99.99);\n-        test(\"%3.0e\", \"1e+02\", 100.00);\n-        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n-        test(\"%3.0e\", \"1e+04\",     10000.00);\n-        test(\"%3.0e\", \"1e+05\",    100000.00);\n-        test(\"%3.0e\", \"1e+06\",   1000000.00);\n-        test(\"%3.0e\", \"1e+07\",  10000000.00);\n-        test(\"%3.0e\", \"1e+08\", 100000000.00);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%f\", \"null\", (Object)null);\n-        test(\"%f\", \"3.141593\", pi);\n-        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n-        test(\"%10.3f\", \"     3.142\", pi);\n-        test(\"%10.3f\", \"    -3.142\", negate(pi));\n-        test(\"%010.3f\", \"000003.142\", pi);\n-        test(\"%010.3f\", \"-00003.142\", negate(pi));\n-        test(\"%-10.3f\", \"3.142     \", pi);\n-        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n-        test(\"%.3f\", \"3.142\", pi);\n-        test(\"%.3f\", \"-3.142\", negate(pi));\n-        test(\"%+.3f\", \"+3.142\", pi);\n-        test(\"%+.3f\", \"-3.142\", negate(pi));\n-        test(\"% .3f\", \" 3.142\", pi);\n-        test(\"% .3f\", \"-3.142\", negate(pi));\n-        test(\"%#.0f\", \"3.\", create(3.0));\n-        test(\"%#.0f\", \"-3.\", create(-3.0));\n-        test(\"%.0f\", \"3\", create(3.0));\n-        test(\"%.0f\", \"-3\", create(-3.0));\n-        test(\"%.3f\", \"10.000\", ten);\n-        test(\"%.3f\", \"1.000\", one);\n-        test(\"%10.3f\", \"     1.000\", one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0f\", \"  0\", 0.000001);\n-        test(\"%3.0f\", \"  0\", 0.00001);\n-        test(\"%3.0f\", \"  0\", 0.0001);\n-        test(\"%3.0f\", \"  0\", 0.001);\n-        test(\"%3.0f\", \"  0\", 0.01);\n-        test(\"%3.0f\", \"  0\", 0.1);\n-        test(\"%3.0f\", \"  1\", 0.9);\n-        test(\"%3.1f\", \"0.9\", 0.9);\n-        test(\"%3.0f\", \"  1\", 1.00);\n-        test(\"%3.0f\", \" 10\", 10.00);\n-        test(\"%3.0f\", \" 99\", 99.19);\n-        test(\"%3.1f\", \"99.2\", 99.19);\n-        test(\"%3.0f\", \"100\", 99.99);\n-        test(\"%3.0f\", \"100\", 100.00);\n-        test(\"%#3.0f\", \"1000.\",     1000.00);\n-        test(\"%3.0f\", \"10000\",     10000.00);\n-        test(\"%3.0f\", \"100000\",    100000.00);\n-        test(\"%3.0f\", \"1000000\",   1000000.00);\n-        test(\"%3.0f\", \"10000000\",  10000000.00);\n-        test(\"%3.0f\", \"100000000\", 100000000.00);\n-        test(\"%10.0f\", \"   1000000\",   1000000.00);\n-        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n-        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n-        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n+        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n@@ -1189,1 +309,1 @@\n-        \/\/ %f - float, double, Double, BigDecimal\n+        \/\/ %e - boundary problems\n@@ -1191,12 +311,20 @@\n-        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n-        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n-        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n-        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n-        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n-        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n-        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n-\n-\n-\n+        test(\"%3.0e\", \"1e-06\", 0.000001);\n+        test(\"%3.0e\", \"1e-05\", 0.00001);\n+        test(\"%3.0e\", \"1e-04\", 0.0001);\n+        test(\"%3.0e\", \"1e-03\", 0.001);\n+        test(\"%3.0e\", \"1e-02\", 0.01);\n+        test(\"%3.0e\", \"1e-01\", 0.1);\n+        test(\"%3.0e\", \"9e-01\", 0.9);\n+        test(\"%3.1e\", \"9.0e-01\", 0.9);\n+        test(\"%3.0e\", \"1e+00\", 1.00);\n+        test(\"%3.0e\", \"1e+01\", 10.00);\n+        test(\"%3.0e\", \"1e+02\", 99.19);\n+        test(\"%3.1e\", \"9.9e+01\", 99.19);\n+        test(\"%3.0e\", \"1e+02\", 99.99);\n+        test(\"%3.0e\", \"1e+02\", 100.00);\n+        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n+        test(\"%3.0e\", \"1e+04\",     10000.00);\n+        test(\"%3.0e\", \"1e+05\",    100000.00);\n+        test(\"%3.0e\", \"1e+06\",   1000000.00);\n+        test(\"%3.0e\", \"1e+07\",  10000000.00);\n+        test(\"%3.0e\", \"1e+08\", 100000000.00);\n@@ -1205,1 +333,1 @@\n-        \/\/ %g\n+        \/\/ %f\n@@ -1210,137 +338,22 @@\n-        test(\"%g\", \"null\", (Object)null);\n-        test(\"%g\", \"3.14159\", pi);\n-        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n-        test(\"%.0g\", \"1e+01\", ten);\n-        test(\"%G\", \"3.14159\", pi);\n-        test(\"%10.3g\", \"      3.14\", pi);\n-        test(\"%10.3g\", \"     -3.14\", negate(pi));\n-        test(\"%010.3g\", \"0000003.14\", pi);\n-        test(\"%010.3g\", \"-000003.14\", negate(pi));\n-        test(\"%-12.3g\", \"3.14        \", pi);\n-        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n-        test(\"%.3g\", \"3.14\", pi);\n-        test(\"%.3g\", \"-3.14\", negate(pi));\n-        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n-        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n-\n-        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n-        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"1e+05\", create(100000.0));\n-        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n-        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n-\n-        test(\"%.1g\", \"-0\", -0.0);\n-        test(\"%3.0g\", \" -0\", -0.0);\n-        test(\"%.1g\", \"0\", 0.0);\n-        test(\"%3.0g\", \"  0\", 0.0);\n-        test(\"%.1g\", \"0\", +0.0);\n-        test(\"%3.0g\", \"  0\", +0.0);\n-\n-        test(\"%3.0g\", \"1e-06\", 0.000001);\n-        test(\"%3.0g\", \"1e-05\", 0.00001);\n-        test(\"%3.0g\", \"1e-05\", 0.0000099);\n-        test(\"%3.1g\", \"1e-05\", 0.0000099);\n-        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n-        test(\"%3.0g\", \"0.0001\", 0.0001);\n-        test(\"%3.0g\", \"9e-05\",  0.00009);\n-        test(\"%3.0g\", \"0.0001\", 0.000099);\n-        test(\"%3.1g\", \"0.0001\", 0.000099);\n-        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n-        test(\"%3.0g\", \"0.001\", 0.001);\n-        test(\"%3.0g\", \"0.001\", 0.00099);\n-        test(\"%3.1g\", \"0.001\", 0.00099);\n-        test(\"%3.2g\", \"0.00099\", 0.00099);\n-        test(\"%3.3g\", \"0.00100\", 0.001);\n-        test(\"%3.4g\", \"0.001000\", 0.001);\n-        test(\"%3.0g\", \"0.01\", 0.01);\n-        test(\"%3.0g\", \"0.1\", 0.1);\n-        test(\"%3.0g\", \"0.9\", 0.9);\n-        test(\"%3.1g\", \"0.9\", 0.9);\n-        test(\"%3.0g\", \"  1\", 1.00);\n-        test(\"%3.2g\", \" 10\", 10.00);\n-        test(\"%3.0g\", \"1e+01\", 10.00);\n-        test(\"%3.0g\", \"1e+02\", 99.19);\n-        test(\"%3.1g\", \"1e+02\", 99.19);\n-        test(\"%3.2g\", \" 99\", 99.19);\n-        test(\"%3.0g\", \"1e+02\", 99.9);\n-        test(\"%3.1g\", \"1e+02\", 99.9);\n-        test(\"%3.2g\", \"1.0e+02\", 99.9);\n-        test(\"%3.0g\", \"1e+02\", 99.99);\n-        test(\"%3.0g\", \"1e+02\", 100.00);\n-        test(\"%3.0g\", \"1e+03\", 999.9);\n-        test(\"%3.1g\", \"1e+03\", 999.9);\n-        test(\"%3.2g\", \"1.0e+03\", 999.9);\n-        test(\"%3.3g\", \"1.00e+03\", 999.9);\n-        test(\"%3.4g\", \"999.9\", 999.9);\n-        test(\"%3.4g\", \"1000\", 999.99);\n-        test(\"%3.0g\", \"1e+03\", 1000.00);\n-        test(\"%3.0g\", \"1e+04\",     10000.00);\n-        test(\"%3.0g\", \"1e+05\",    100000.00);\n-        test(\"%3.0g\", \"1e+06\",   1000000.00);\n-        test(\"%3.0g\", \"1e+07\",  10000000.00);\n-        test(\"%3.9g\", \"100000000\",  100000000.00);\n-        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n-\n-        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%.3g\", \"10.0\", ten);\n-        test(\"%.3g\", \"1.00\", one);\n-        test(\"%10.3g\", \"      1.00\", one);\n-        test(\"%+10.3g\", \"     +3.14\", pi);\n-        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n-        test(\"% .3g\", \" 3.14\", pi);\n-        test(\"% .3g\", \"-3.14\", negate(pi));\n-        test(\"%.0g\", \"3\", create(3.0));\n-        test(\"%.0g\", \"-3\", create(-3.0));\n-\n-        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n-        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n+        test(\"%f\", \"null\", (Object)null);\n+        test(\"%f\", \"3.141593\", pi);\n+        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n+        test(\"%10.3f\", \"     3.142\", pi);\n+        test(\"%10.3f\", \"    -3.142\", negate(pi));\n+        test(\"%010.3f\", \"000003.142\", pi);\n+        test(\"%010.3f\", \"-00003.142\", negate(pi));\n+        test(\"%-10.3f\", \"3.142     \", pi);\n+        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n+        test(\"%.3f\", \"3.142\", pi);\n+        test(\"%.3f\", \"-3.142\", negate(pi));\n+        test(\"%+.3f\", \"+3.142\", pi);\n+        test(\"%+.3f\", \"-3.142\", negate(pi));\n+        test(\"% .3f\", \" 3.142\", pi);\n+        test(\"% .3f\", \"-3.142\", negate(pi));\n+        test(\"%#.0f\", \"3.\", create(3.0));\n+        test(\"%#.0f\", \"-3.\", create(-3.0));\n+        test(\"%.0f\", \"3\", create(3.0));\n+        test(\"%.0f\", \"-3\", create(-3.0));\n+        test(\"%.3f\", \"10.000\", ten);\n+        test(\"%.3f\", \"1.000\", one);\n+        test(\"%10.3f\", \"     1.000\", one);\n@@ -1348,0 +361,31 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - boundary problems\n+        \/\/---------------------------------------------------------------------\n+        test(\"%3.0f\", \"  0\", 0.000001);\n+        test(\"%3.0f\", \"  0\", 0.00001);\n+        test(\"%3.0f\", \"  0\", 0.0001);\n+        test(\"%3.0f\", \"  0\", 0.001);\n+        test(\"%3.0f\", \"  0\", 0.01);\n+        test(\"%3.0f\", \"  0\", 0.1);\n+        test(\"%3.0f\", \"  1\", 0.9);\n+        test(\"%3.1f\", \"0.9\", 0.9);\n+        test(\"%3.0f\", \"  1\", 1.00);\n+        test(\"%3.0f\", \" 10\", 10.00);\n+        test(\"%3.0f\", \" 99\", 99.19);\n+        test(\"%3.1f\", \"99.2\", 99.19);\n+        test(\"%3.0f\", \"100\", 99.99);\n+        test(\"%3.0f\", \"100\", 100.00);\n+        test(\"%#3.0f\", \"1000.\",     1000.00);\n+        test(\"%3.0f\", \"10000\",     10000.00);\n+        test(\"%3.0f\", \"100000\",    100000.00);\n+        test(\"%3.0f\", \"1000000\",   1000000.00);\n+        test(\"%3.0f\", \"10000000\",  10000000.00);\n+        test(\"%3.0f\", \"100000000\", 100000000.00);\n+        test(\"%10.0f\", \"   1000000\",   1000000.00);\n+        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n+        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n+        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n@@ -1349,0 +393,12 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - float, double, Double, BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n+        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n+        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n+        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n+        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n+        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n+        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -1352,1 +408,1 @@\n-        \/\/ %a\n+        \/\/ %g\n@@ -1357,230 +413,15 @@\n-        test(\"%a\", \"null\", (Object)null);\n-        test(\"%.11a\", \"0x0.00000000000p0\", 0.0);\n-        test(Locale.FRANCE, \"%.11a\", \"0x0.00000000000p0\", 0.0); \/\/ no localization\n-        test(\"%.1a\", \"0x0.0p0\", 0.0);\n-        test(\"%.11a\", \"-0x0.00000000000p0\", -0.0);\n-        test(\"%.1a\", \"-0x0.0p0\", -0.0);\n-        test(\"%.11a\", \"0x1.00000000000p0\", 1.0);\n-        test(\"%.1a\", \"0x1.0p0\", 1.0);\n-        test(\"%.11a\", \"-0x1.00000000000p0\", -1.0);\n-        test(\"%.1a\", \"-0x1.0p0\", -1.0);\n-        test(\"%.11a\", \"0x1.80000000000p1\", 3.0);\n-        test(\"%.1a\", \"0x1.8p1\", 3.0);\n-        test(\"%.11a\", \"0x1.00000000000p-1022\", Double.MIN_NORMAL);\n-        test(\"%.1a\", \"0x1.0p-1022\", Double.MIN_NORMAL);\n-        test(\"%.11a\", \"0x1.00000000000p-1022\",\n-             Math.nextDown(Double.MIN_NORMAL));\n-        test(\"%.1a\", \"0x1.0p-1022\",\n-             Math.nextDown(Double.MIN_NORMAL));\n-        test(\"%.11a\", \"0x1.ffffffffffep-1023\", 0x0.fffffffffffp-1022);\n-        test(\"%.1a\", \"0x1.0p-1022\", 0x0.fffffffffffp-1022);\n-        test(\"%.30a\", \"0x0.000000000000100000000000000000p-1022\", Double.MIN_VALUE);\n-        test(\"%.13a\", \"0x0.0000000000001p-1022\", Double.MIN_VALUE);\n-        test(\"%.11a\", \"0x1.00000000000p-1074\", Double.MIN_VALUE);\n-        test(\"%.1a\", \"0x1.0p-1074\", Double.MIN_VALUE);\n-\n-        test(\"%.11a\", \"0x1.08000000000p-1069\",\n-             Double.MIN_VALUE + Double.MIN_VALUE*32);\n-        test(\"%.1a\", \"0x1.0p-1069\",\n-             Double.MIN_VALUE + Double.MIN_VALUE*32);\n-        test(\"%.30a\", \"0x1.fffffffffffff00000000000000000p1023\", Double.MAX_VALUE);\n-        test(\"%.13a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n-        test(\"%.11a\", \"0x1.00000000000p1024\", Double.MAX_VALUE);\n-        test(\"%.1a\", \"0x1.0p1024\", Double.MAX_VALUE);\n-        test(\"%.11a\", \"0x1.18000000000p0\", 0x1.18p0);\n-        test(\"%.1a\", \"0x1.2p0\", 0x1.18p0);\n-\n-        test(\"%.11a\", \"0x1.18000000000p0\", 0x1.180000000001p0);\n-        test(\"%.1a\", \"0x1.2p0\", 0x1.180000000001p0);\n-        test(\"%.11a\", \"0x1.28000000000p0\", 0x1.28p0);\n-        test(\"%.1a\", \"0x1.2p0\", 0x1.28p0);\n-\n-        test(\"%.11a\", \"0x1.28000000000p0\", 0x1.280000000001p0);\n-        test(\"%.1a\", \"0x1.3p0\", 0x1.280000000001p0);\n-\n-        test(\"%a\", \"0x0.123p-1022\", 0x0.123p-1022);\n-        test(\"%1.3a\", \"0x1.230p-1026\", 0x0.123p-1022);\n-        test(\"%1.12a\", \"0x1.230000000000p-1026\", 0x0.123p-1022);\n-        test(\"%1.15a\", \"0x0.123000000000000p-1022\", 0x0.123p-1022);\n-        test(\"%1.5a\", \"0x1.00000p-1074\", 0x0.0000000000001p-1022);\n-        test(\"%1.7a\", \"0x1.0000000p-1022\", 0x0.fffffffffffffp-1022);\n-\n-        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000057p-1022);\n-        test(\"%1.7a\", \"0x1.2300005p-1026\", 0x0.123000057p-1022);\n-        test(\"%1.8a\", \"0x1.23000057p-1026\", 0x0.123000057p-1022);\n-        test(\"%1.9a\", \"0x1.230000570p-1026\", 0x0.123000057p-1022);\n-\n-        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000058p-1022);\n-        test(\"%1.7a\", \"0x1.2300006p-1026\", 0x0.123000058p-1022);\n-        test(\"%1.8a\", \"0x1.23000058p-1026\", 0x0.123000058p-1022);\n-        test(\"%1.9a\", \"0x1.230000580p-1026\", 0x0.123000058p-1022);\n-\n-        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000059p-1022);\n-        test(\"%1.7a\", \"0x1.2300006p-1026\", 0x0.123000059p-1022);\n-        test(\"%1.8a\", \"0x1.23000059p-1026\", 0x0.123000059p-1022);\n-        test(\"%1.9a\", \"0x1.230000590p-1026\", 0x0.123000059p-1022);\n-\n-        test(\"%1.4a\", \"0x1.0000p-1022\", Math.nextDown(Double.MIN_NORMAL));\n-\n-        test(\"%a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n-        test(\"%1.1a\", \"0x1.0p1024\", Double.MAX_VALUE);\n-        test(\"%1.2a\", \"0x1.00p1024\", Double.MAX_VALUE);\n-        test(\"%1.6a\", \"0x1.000000p1024\", Double.MAX_VALUE);\n-        test(\"%1.9a\", \"0x1.000000000p1024\", Double.MAX_VALUE);\n-        test(\"%1.11a\", \"0x1.00000000000p1024\", Double.MAX_VALUE);\n-        test(\"%1.12a\", \"0x1.000000000000p1024\", Double.MAX_VALUE);\n-        test(\"%1.13a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f, %e, %g, %a - Boundaries\n-        \/\/---------------------------------------------------------------------\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        test(\"%g\", \"null\", (Object)null);\n+        test(\"%g\", \"3.14159\", pi);\n+        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n+        test(\"%.0g\", \"1e+01\", ten);\n+        test(\"%G\", \"3.14159\", pi);\n+        test(\"%10.3g\", \"      3.14\", pi);\n+        test(\"%10.3g\", \"     -3.14\", negate(pi));\n+        test(\"%010.3g\", \"0000003.14\", pi);\n+        test(\"%010.3g\", \"-000003.14\", negate(pi));\n+        test(\"%-12.3g\", \"3.14        \", pi);\n+        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n+        test(\"%.3g\", \"3.14\", pi);\n+        test(\"%.3g\", \"-3.14\", negate(pi));\n+        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n+        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n@@ -1588,0 +429,6 @@\n+        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n+        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"1e+05\", create(100000.0));\n+        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n+        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n@@ -1589,0 +436,6 @@\n+        test(\"%.1g\", \"-0\", -0.0);\n+        test(\"%3.0g\", \" -0\", -0.0);\n+        test(\"%.1g\", \"0\", 0.0);\n+        test(\"%3.0g\", \"  0\", 0.0);\n+        test(\"%.1g\", \"0\", +0.0);\n+        test(\"%3.0g\", \"  0\", +0.0);\n@@ -1590,0 +443,44 @@\n+        test(\"%3.0g\", \"1e-06\", 0.000001);\n+        test(\"%3.0g\", \"1e-05\", 0.00001);\n+        test(\"%3.0g\", \"1e-05\", 0.0000099);\n+        test(\"%3.1g\", \"1e-05\", 0.0000099);\n+        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n+        test(\"%3.0g\", \"0.0001\", 0.0001);\n+        test(\"%3.0g\", \"9e-05\",  0.00009);\n+        test(\"%3.0g\", \"0.0001\", 0.000099);\n+        test(\"%3.1g\", \"0.0001\", 0.000099);\n+        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n+        test(\"%3.0g\", \"0.001\", 0.001);\n+        test(\"%3.0g\", \"0.001\", 0.00099);\n+        test(\"%3.1g\", \"0.001\", 0.00099);\n+        test(\"%3.2g\", \"0.00099\", 0.00099);\n+        test(\"%3.3g\", \"0.00100\", 0.001);\n+        test(\"%3.4g\", \"0.001000\", 0.001);\n+        test(\"%3.0g\", \"0.01\", 0.01);\n+        test(\"%3.0g\", \"0.1\", 0.1);\n+        test(\"%3.0g\", \"0.9\", 0.9);\n+        test(\"%3.1g\", \"0.9\", 0.9);\n+        test(\"%3.0g\", \"  1\", 1.00);\n+        test(\"%3.2g\", \" 10\", 10.00);\n+        test(\"%3.0g\", \"1e+01\", 10.00);\n+        test(\"%3.0g\", \"1e+02\", 99.19);\n+        test(\"%3.1g\", \"1e+02\", 99.19);\n+        test(\"%3.2g\", \" 99\", 99.19);\n+        test(\"%3.0g\", \"1e+02\", 99.9);\n+        test(\"%3.1g\", \"1e+02\", 99.9);\n+        test(\"%3.2g\", \"1.0e+02\", 99.9);\n+        test(\"%3.0g\", \"1e+02\", 99.99);\n+        test(\"%3.0g\", \"1e+02\", 100.00);\n+        test(\"%3.0g\", \"1e+03\", 999.9);\n+        test(\"%3.1g\", \"1e+03\", 999.9);\n+        test(\"%3.2g\", \"1.0e+03\", 999.9);\n+        test(\"%3.3g\", \"1.00e+03\", 999.9);\n+        test(\"%3.4g\", \"999.9\", 999.9);\n+        test(\"%3.4g\", \"1000\", 999.99);\n+        test(\"%3.0g\", \"1e+03\", 1000.00);\n+        test(\"%3.0g\", \"1e+04\",     10000.00);\n+        test(\"%3.0g\", \"1e+05\",    100000.00);\n+        test(\"%3.0g\", \"1e+06\",   1000000.00);\n+        test(\"%3.0g\", \"1e+07\",  10000000.00);\n+        test(\"%3.9g\", \"100000000\",  100000000.00);\n+        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n@@ -1591,0 +488,1 @@\n+        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n@@ -1592,0 +490,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -1593,0 +493,9 @@\n+        test(\"%.3g\", \"10.0\", ten);\n+        test(\"%.3g\", \"1.00\", one);\n+        test(\"%10.3g\", \"      1.00\", one);\n+        test(\"%+10.3g\", \"     +3.14\", pi);\n+        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n+        test(\"% .3g\", \" 3.14\", pi);\n+        test(\"% .3g\", \"-3.14\", negate(pi));\n+        test(\"%.0g\", \"3\", create(3.0));\n+        test(\"%.0g\", \"-3\", create(-3.0));\n@@ -1594,0 +503,2 @@\n+        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n+        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n@@ -1595,0 +506,2 @@\n+        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -1596,0 +509,30 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %a\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%a\", \"null\", (Object)null);\n+        test(\"%.11a\", \"0x0.00000000000p0\", 0.0);\n+        test(Locale.FRANCE, \"%.11a\", \"0x0.00000000000p0\", 0.0); \/\/ no localization\n+        test(\"%.1a\", \"0x0.0p0\", 0.0);\n+        test(\"%.11a\", \"-0x0.00000000000p0\", -0.0);\n+        test(\"%.1a\", \"-0x0.0p0\", -0.0);\n+        test(\"%.11a\", \"0x1.00000000000p0\", 1.0);\n+        test(\"%.1a\", \"0x1.0p0\", 1.0);\n+        test(\"%.11a\", \"-0x1.00000000000p0\", -1.0);\n+        test(\"%.1a\", \"-0x1.0p0\", -1.0);\n+        test(\"%.11a\", \"0x1.80000000000p1\", 3.0);\n+        test(\"%.1a\", \"0x1.8p1\", 3.0);\n+        test(\"%.11a\", \"0x1.00000000000p-1022\", Double.MIN_NORMAL);\n+        test(\"%.1a\", \"0x1.0p-1022\", Double.MIN_NORMAL);\n+        test(\"%.11a\", \"0x1.00000000000p-1022\",\n+             Math.nextDown(Double.MIN_NORMAL));\n+        test(\"%.1a\", \"0x1.0p-1022\",\n+             Math.nextDown(Double.MIN_NORMAL));\n+        test(\"%.11a\", \"0x1.ffffffffffep-1023\", 0x0.fffffffffffp-1022);\n+        test(\"%.1a\", \"0x1.0p-1022\", 0x0.fffffffffffp-1022);\n+        test(\"%.30a\", \"0x0.000000000000100000000000000000p-1022\", Double.MIN_VALUE);\n+        test(\"%.13a\", \"0x0.0000000000001p-1022\", Double.MIN_VALUE);\n+        test(\"%.11a\", \"0x1.00000000000p-1074\", Double.MIN_VALUE);\n+        test(\"%.1a\", \"0x1.0p-1074\", Double.MIN_VALUE);\n@@ -1597,0 +540,10 @@\n+        test(\"%.11a\", \"0x1.08000000000p-1069\",\n+             Double.MIN_VALUE + Double.MIN_VALUE*32);\n+        test(\"%.1a\", \"0x1.0p-1069\",\n+             Double.MIN_VALUE + Double.MIN_VALUE*32);\n+        test(\"%.30a\", \"0x1.fffffffffffff00000000000000000p1023\", Double.MAX_VALUE);\n+        test(\"%.13a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n+        test(\"%.11a\", \"0x1.00000000000p1024\", Double.MAX_VALUE);\n+        test(\"%.1a\", \"0x1.0p1024\", Double.MAX_VALUE);\n+        test(\"%.11a\", \"0x1.18000000000p0\", 0x1.18p0);\n+        test(\"%.1a\", \"0x1.2p0\", 0x1.18p0);\n@@ -1598,0 +551,4 @@\n+        test(\"%.11a\", \"0x1.18000000000p0\", 0x1.180000000001p0);\n+        test(\"%.1a\", \"0x1.2p0\", 0x1.180000000001p0);\n+        test(\"%.11a\", \"0x1.28000000000p0\", 0x1.28p0);\n+        test(\"%.1a\", \"0x1.2p0\", 0x1.28p0);\n@@ -1599,0 +556,2 @@\n+        test(\"%.11a\", \"0x1.28000000000p0\", 0x1.280000000001p0);\n+        test(\"%.1a\", \"0x1.3p0\", 0x1.280000000001p0);\n@@ -1600,0 +559,6 @@\n+        test(\"%a\", \"0x0.123p-1022\", 0x0.123p-1022);\n+        test(\"%1.3a\", \"0x1.230p-1026\", 0x0.123p-1022);\n+        test(\"%1.12a\", \"0x1.230000000000p-1026\", 0x0.123p-1022);\n+        test(\"%1.15a\", \"0x0.123000000000000p-1022\", 0x0.123p-1022);\n+        test(\"%1.5a\", \"0x1.00000p-1074\", 0x0.0000000000001p-1022);\n+        test(\"%1.7a\", \"0x1.0000000p-1022\", 0x0.fffffffffffffp-1022);\n@@ -1601,0 +566,4 @@\n+        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000057p-1022);\n+        test(\"%1.7a\", \"0x1.2300005p-1026\", 0x0.123000057p-1022);\n+        test(\"%1.8a\", \"0x1.23000057p-1026\", 0x0.123000057p-1022);\n+        test(\"%1.9a\", \"0x1.230000570p-1026\", 0x0.123000057p-1022);\n@@ -1602,0 +571,4 @@\n+        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000058p-1022);\n+        test(\"%1.7a\", \"0x1.2300006p-1026\", 0x0.123000058p-1022);\n+        test(\"%1.8a\", \"0x1.23000058p-1026\", 0x0.123000058p-1022);\n+        test(\"%1.9a\", \"0x1.230000580p-1026\", 0x0.123000058p-1022);\n@@ -1603,0 +576,4 @@\n+        test(\"%1.6a\", \"0x1.230000p-1026\", 0x0.123000059p-1022);\n+        test(\"%1.7a\", \"0x1.2300006p-1026\", 0x0.123000059p-1022);\n+        test(\"%1.8a\", \"0x1.23000059p-1026\", 0x0.123000059p-1022);\n+        test(\"%1.9a\", \"0x1.230000590p-1026\", 0x0.123000059p-1022);\n@@ -1604,0 +581,1 @@\n+        test(\"%1.4a\", \"0x1.0000p-1022\", Math.nextDown(Double.MIN_NORMAL));\n@@ -1605,0 +583,8 @@\n+        test(\"%a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n+        test(\"%1.1a\", \"0x1.0p1024\", Double.MAX_VALUE);\n+        test(\"%1.2a\", \"0x1.00p1024\", Double.MAX_VALUE);\n+        test(\"%1.6a\", \"0x1.000000p1024\", Double.MAX_VALUE);\n+        test(\"%1.9a\", \"0x1.000000000p1024\", Double.MAX_VALUE);\n+        test(\"%1.11a\", \"0x1.00000000000p1024\", Double.MAX_VALUE);\n+        test(\"%1.12a\", \"0x1.000000000000p1024\", Double.MAX_VALUE);\n+        test(\"%1.13a\", \"0x1.fffffffffffffp1023\", Double.MAX_VALUE);\n@@ -1607,0 +593,3 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/---------------------------------------------------------------------\n@@ -1672,2 +661,0 @@\n-\n-\n@@ -1694,93 +681,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDouble.java","additions":302,"deletions":1408,"binary":false,"changes":1710,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,273 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -337,1 +60,0 @@\n-\n@@ -525,0 +247,6 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %s - Double\n+        \/\/---------------------------------------------------------------------\n+        Double one = 1.0d;\n+        Double ten = 10.0d;\n+        Double pi  = (double) Math.PI;\n@@ -526,0 +254,1 @@\n+        test(\"%s\", \"3.141592653589793\", pi);\n@@ -527,0 +256,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ flag\/conversion errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n+        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n@@ -528,0 +262,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%e\", \"null\", (Object)null);\n@@ -529,0 +270,18 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - float and double\n+        \/\/---------------------------------------------------------------------\n+        \/\/ double PI = 3.141 592 653 589 793 238 46;\n+        test(\"%e\", \"3.141593e+00\", pi);\n+        test(\"%.0e\", \"1e+01\", ten);\n+        test(\"%#.0e\", \"1.e+01\", ten);\n+        test(\"%E\", \"3.141593E+00\", pi);\n+        test(\"%10.3e\", \" 3.142e+00\", pi);\n+        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%010.3e\", \"03.142e+00\", pi);\n+        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%-12.3e\", \"3.142e+00   \", pi);\n+        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n+        test(\"%.3e\", \"3.142e+00\", pi);\n+        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n+        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n@@ -530,0 +289,1 @@\n+        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n@@ -531,0 +291,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -532,0 +294,9 @@\n+        test(\"%10.3e\", \" 1.000e+00\", one);\n+        test(\"%+.3e\", \"+3.142e+00\", pi);\n+        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"% .3e\", \" 3.142e+00\", pi);\n+        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%#.0e\", \"3.e+00\", create(3.0));\n+        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n+        test(\"%.0e\", \"3e+00\", create(3.0));\n+        test(\"%.0e\", \"-3e+00\", create(-3.0));\n@@ -533,902 +304,2 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %s - Double\n-        \/\/---------------------------------------------------------------------\n-        Double one = 1.0d;\n-        Double ten = 10.0d;\n-        Double pi  = (double) Math.PI;\n-\n-        test(\"%s\", \"3.141592653589793\", pi);\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ flag\/conversion errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n-        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%e\", \"null\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - float and double\n-        \/\/---------------------------------------------------------------------\n-        \/\/ double PI = 3.141 592 653 589 793 238 46;\n-        test(\"%e\", \"3.141593e+00\", pi);\n-        test(\"%.0e\", \"1e+01\", ten);\n-        test(\"%#.0e\", \"1.e+01\", ten);\n-        test(\"%E\", \"3.141593E+00\", pi);\n-        test(\"%10.3e\", \" 3.142e+00\", pi);\n-        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%010.3e\", \"03.142e+00\", pi);\n-        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%-12.3e\", \"3.142e+00   \", pi);\n-        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n-        test(\"%.3e\", \"3.142e+00\", pi);\n-        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n-        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n-\n-        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%10.3e\", \" 1.000e+00\", one);\n-        test(\"%+.3e\", \"+3.142e+00\", pi);\n-        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"% .3e\", \" 3.142e+00\", pi);\n-        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%#.0e\", \"3.e+00\", create(3.0));\n-        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n-        test(\"%.0e\", \"3e+00\", create(3.0));\n-        test(\"%.0e\", \"-3e+00\", create(-3.0));\n-\n-        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n-        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0e\", \"1e-06\", 0.000001);\n-        test(\"%3.0e\", \"1e-05\", 0.00001);\n-        test(\"%3.0e\", \"1e-04\", 0.0001);\n-        test(\"%3.0e\", \"1e-03\", 0.001);\n-        test(\"%3.0e\", \"1e-02\", 0.01);\n-        test(\"%3.0e\", \"1e-01\", 0.1);\n-        test(\"%3.0e\", \"9e-01\", 0.9);\n-        test(\"%3.1e\", \"9.0e-01\", 0.9);\n-        test(\"%3.0e\", \"1e+00\", 1.00);\n-        test(\"%3.0e\", \"1e+01\", 10.00);\n-        test(\"%3.0e\", \"1e+02\", 99.19);\n-        test(\"%3.1e\", \"9.9e+01\", 99.19);\n-        test(\"%3.0e\", \"1e+02\", 99.99);\n-        test(\"%3.0e\", \"1e+02\", 100.00);\n-        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n-        test(\"%3.0e\", \"1e+04\",     10000.00);\n-        test(\"%3.0e\", \"1e+05\",    100000.00);\n-        test(\"%3.0e\", \"1e+06\",   1000000.00);\n-        test(\"%3.0e\", \"1e+07\",  10000000.00);\n-        test(\"%3.0e\", \"1e+08\", 100000000.00);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%f\", \"null\", (Object)null);\n-        test(\"%f\", \"3.141593\", pi);\n-        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n-        test(\"%10.3f\", \"     3.142\", pi);\n-        test(\"%10.3f\", \"    -3.142\", negate(pi));\n-        test(\"%010.3f\", \"000003.142\", pi);\n-        test(\"%010.3f\", \"-00003.142\", negate(pi));\n-        test(\"%-10.3f\", \"3.142     \", pi);\n-        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n-        test(\"%.3f\", \"3.142\", pi);\n-        test(\"%.3f\", \"-3.142\", negate(pi));\n-        test(\"%+.3f\", \"+3.142\", pi);\n-        test(\"%+.3f\", \"-3.142\", negate(pi));\n-        test(\"% .3f\", \" 3.142\", pi);\n-        test(\"% .3f\", \"-3.142\", negate(pi));\n-        test(\"%#.0f\", \"3.\", create(3.0));\n-        test(\"%#.0f\", \"-3.\", create(-3.0));\n-        test(\"%.0f\", \"3\", create(3.0));\n-        test(\"%.0f\", \"-3\", create(-3.0));\n-        test(\"%.3f\", \"10.000\", ten);\n-        test(\"%.3f\", \"1.000\", one);\n-        test(\"%10.3f\", \"     1.000\", one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0f\", \"  0\", 0.000001);\n-        test(\"%3.0f\", \"  0\", 0.00001);\n-        test(\"%3.0f\", \"  0\", 0.0001);\n-        test(\"%3.0f\", \"  0\", 0.001);\n-        test(\"%3.0f\", \"  0\", 0.01);\n-        test(\"%3.0f\", \"  0\", 0.1);\n-        test(\"%3.0f\", \"  1\", 0.9);\n-        test(\"%3.1f\", \"0.9\", 0.9);\n-        test(\"%3.0f\", \"  1\", 1.00);\n-        test(\"%3.0f\", \" 10\", 10.00);\n-        test(\"%3.0f\", \" 99\", 99.19);\n-        test(\"%3.1f\", \"99.2\", 99.19);\n-        test(\"%3.0f\", \"100\", 99.99);\n-        test(\"%3.0f\", \"100\", 100.00);\n-        test(\"%#3.0f\", \"1000.\",     1000.00);\n-        test(\"%3.0f\", \"10000\",     10000.00);\n-        test(\"%3.0f\", \"100000\",    100000.00);\n-        test(\"%3.0f\", \"1000000\",   1000000.00);\n-        test(\"%3.0f\", \"10000000\",  10000000.00);\n-        test(\"%3.0f\", \"100000000\", 100000000.00);\n-        test(\"%10.0f\", \"   1000000\",   1000000.00);\n-        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n-        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n-        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - float, double, Double, BigDecimal\n-        \/\/---------------------------------------------------------------------\n-        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n-        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n-        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n-        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n-        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n-        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n-        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %g\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%g\", \"null\", (Object)null);\n-        test(\"%g\", \"3.14159\", pi);\n-        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n-        test(\"%.0g\", \"1e+01\", ten);\n-        test(\"%G\", \"3.14159\", pi);\n-        test(\"%10.3g\", \"      3.14\", pi);\n-        test(\"%10.3g\", \"     -3.14\", negate(pi));\n-        test(\"%010.3g\", \"0000003.14\", pi);\n-        test(\"%010.3g\", \"-000003.14\", negate(pi));\n-        test(\"%-12.3g\", \"3.14        \", pi);\n-        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n-        test(\"%.3g\", \"3.14\", pi);\n-        test(\"%.3g\", \"-3.14\", negate(pi));\n-        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n-        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n-\n-        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n-        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"1e+05\", create(100000.0));\n-        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n-        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n-\n-        test(\"%.1g\", \"-0\", -0.0);\n-        test(\"%3.0g\", \" -0\", -0.0);\n-        test(\"%.1g\", \"0\", 0.0);\n-        test(\"%3.0g\", \"  0\", 0.0);\n-        test(\"%.1g\", \"0\", +0.0);\n-        test(\"%3.0g\", \"  0\", +0.0);\n-\n-        test(\"%3.0g\", \"1e-06\", 0.000001);\n-        test(\"%3.0g\", \"1e-05\", 0.00001);\n-        test(\"%3.0g\", \"1e-05\", 0.0000099);\n-        test(\"%3.1g\", \"1e-05\", 0.0000099);\n-        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n-        test(\"%3.0g\", \"0.0001\", 0.0001);\n-        test(\"%3.0g\", \"9e-05\",  0.00009);\n-        test(\"%3.0g\", \"0.0001\", 0.000099);\n-        test(\"%3.1g\", \"0.0001\", 0.000099);\n-        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n-        test(\"%3.0g\", \"0.001\", 0.001);\n-        test(\"%3.0g\", \"0.001\", 0.00099);\n-        test(\"%3.1g\", \"0.001\", 0.00099);\n-        test(\"%3.2g\", \"0.00099\", 0.00099);\n-        test(\"%3.3g\", \"0.00100\", 0.001);\n-        test(\"%3.4g\", \"0.001000\", 0.001);\n-        test(\"%3.0g\", \"0.01\", 0.01);\n-        test(\"%3.0g\", \"0.1\", 0.1);\n-        test(\"%3.0g\", \"0.9\", 0.9);\n-        test(\"%3.1g\", \"0.9\", 0.9);\n-        test(\"%3.0g\", \"  1\", 1.00);\n-        test(\"%3.2g\", \" 10\", 10.00);\n-        test(\"%3.0g\", \"1e+01\", 10.00);\n-        test(\"%3.0g\", \"1e+02\", 99.19);\n-        test(\"%3.1g\", \"1e+02\", 99.19);\n-        test(\"%3.2g\", \" 99\", 99.19);\n-        test(\"%3.0g\", \"1e+02\", 99.9);\n-        test(\"%3.1g\", \"1e+02\", 99.9);\n-        test(\"%3.2g\", \"1.0e+02\", 99.9);\n-        test(\"%3.0g\", \"1e+02\", 99.99);\n-        test(\"%3.0g\", \"1e+02\", 100.00);\n-        test(\"%3.0g\", \"1e+03\", 999.9);\n-        test(\"%3.1g\", \"1e+03\", 999.9);\n-        test(\"%3.2g\", \"1.0e+03\", 999.9);\n-        test(\"%3.3g\", \"1.00e+03\", 999.9);\n-        test(\"%3.4g\", \"999.9\", 999.9);\n-        test(\"%3.4g\", \"1000\", 999.99);\n-        test(\"%3.0g\", \"1e+03\", 1000.00);\n-        test(\"%3.0g\", \"1e+04\",     10000.00);\n-        test(\"%3.0g\", \"1e+05\",    100000.00);\n-        test(\"%3.0g\", \"1e+06\",   1000000.00);\n-        test(\"%3.0g\", \"1e+07\",  10000000.00);\n-        test(\"%3.9g\", \"100000000\",  100000000.00);\n-        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n-\n-        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%.3g\", \"10.0\", ten);\n-        test(\"%.3g\", \"1.00\", one);\n-        test(\"%10.3g\", \"      1.00\", one);\n-        test(\"%+10.3g\", \"     +3.14\", pi);\n-        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n-        test(\"% .3g\", \" 3.14\", pi);\n-        test(\"% .3g\", \"-3.14\", negate(pi));\n-        test(\"%.0g\", \"3\", create(3.0));\n-        test(\"%.0g\", \"-3\", create(-3.0));\n-\n-        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n-        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n-        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n+        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n@@ -1437,1 +308,1 @@\n-        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/ %e - boundary problems\n@@ -1439,0 +310,20 @@\n+        test(\"%3.0e\", \"1e-06\", 0.000001);\n+        test(\"%3.0e\", \"1e-05\", 0.00001);\n+        test(\"%3.0e\", \"1e-04\", 0.0001);\n+        test(\"%3.0e\", \"1e-03\", 0.001);\n+        test(\"%3.0e\", \"1e-02\", 0.01);\n+        test(\"%3.0e\", \"1e-01\", 0.1);\n+        test(\"%3.0e\", \"9e-01\", 0.9);\n+        test(\"%3.1e\", \"9.0e-01\", 0.9);\n+        test(\"%3.0e\", \"1e+00\", 1.00);\n+        test(\"%3.0e\", \"1e+01\", 10.00);\n+        test(\"%3.0e\", \"1e+02\", 99.19);\n+        test(\"%3.1e\", \"9.9e+01\", 99.19);\n+        test(\"%3.0e\", \"1e+02\", 99.99);\n+        test(\"%3.0e\", \"1e+02\", 100.00);\n+        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n+        test(\"%3.0e\", \"1e+04\",     10000.00);\n+        test(\"%3.0e\", \"1e+05\",    100000.00);\n+        test(\"%3.0e\", \"1e+06\",   1000000.00);\n+        test(\"%3.0e\", \"1e+07\",  10000000.00);\n+        test(\"%3.0e\", \"1e+08\", 100000000.00);\n@@ -1440,0 +331,28 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%f\", \"null\", (Object)null);\n+        test(\"%f\", \"3.141593\", pi);\n+        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n+        test(\"%10.3f\", \"     3.142\", pi);\n+        test(\"%10.3f\", \"    -3.142\", negate(pi));\n+        test(\"%010.3f\", \"000003.142\", pi);\n+        test(\"%010.3f\", \"-00003.142\", negate(pi));\n+        test(\"%-10.3f\", \"3.142     \", pi);\n+        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n+        test(\"%.3f\", \"3.142\", pi);\n+        test(\"%.3f\", \"-3.142\", negate(pi));\n+        test(\"%+.3f\", \"+3.142\", pi);\n+        test(\"%+.3f\", \"-3.142\", negate(pi));\n+        test(\"% .3f\", \" 3.142\", pi);\n+        test(\"% .3f\", \"-3.142\", negate(pi));\n+        test(\"%#.0f\", \"3.\", create(3.0));\n+        test(\"%#.0f\", \"-3.\", create(-3.0));\n+        test(\"%.0f\", \"3\", create(3.0));\n+        test(\"%.0f\", \"-3\", create(-3.0));\n+        test(\"%.3f\", \"10.000\", ten);\n+        test(\"%.3f\", \"1.000\", one);\n+        test(\"%10.3f\", \"     1.000\", one);\n@@ -1441,0 +360,31 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - boundary problems\n+        \/\/---------------------------------------------------------------------\n+        test(\"%3.0f\", \"  0\", 0.000001);\n+        test(\"%3.0f\", \"  0\", 0.00001);\n+        test(\"%3.0f\", \"  0\", 0.0001);\n+        test(\"%3.0f\", \"  0\", 0.001);\n+        test(\"%3.0f\", \"  0\", 0.01);\n+        test(\"%3.0f\", \"  0\", 0.1);\n+        test(\"%3.0f\", \"  1\", 0.9);\n+        test(\"%3.1f\", \"0.9\", 0.9);\n+        test(\"%3.0f\", \"  1\", 1.00);\n+        test(\"%3.0f\", \" 10\", 10.00);\n+        test(\"%3.0f\", \" 99\", 99.19);\n+        test(\"%3.1f\", \"99.2\", 99.19);\n+        test(\"%3.0f\", \"100\", 99.99);\n+        test(\"%3.0f\", \"100\", 100.00);\n+        test(\"%#3.0f\", \"1000.\",     1000.00);\n+        test(\"%3.0f\", \"10000\",     10000.00);\n+        test(\"%3.0f\", \"100000\",    100000.00);\n+        test(\"%3.0f\", \"1000000\",   1000000.00);\n+        test(\"%3.0f\", \"10000000\",  10000000.00);\n+        test(\"%3.0f\", \"100000000\", 100000000.00);\n+        test(\"%10.0f\", \"   1000000\",   1000000.00);\n+        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n+        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n+        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n@@ -1442,0 +392,12 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - float, double, Double, BigDecimal\n+        \/\/---------------------------------------------------------------------\n+        test(\"%.3f\", \"3141592.654\", mult(pi, 1000000.0));\n+        test(\"%.3f\", \"-3141592.654\", mult(pi, -1000000.0));\n+        test(\"%,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(Locale.FRANCE, \"%,.4f\", \"3\\u202f141\\u202f592,6536\", mult(pi, 1000000.0));\n+        test(\"%,.4f\", \"-3,141,592.6536\", mult(pi, -1000000.0));\n+        test(\"%(.4f\", \"3141592.6536\", mult(pi, 1000000.0));\n+        test(\"%(.4f\", \"(3141592.6536)\", mult(pi, -1000000.0));\n+        test(\"%(,.4f\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.4f\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -1444,0 +406,21 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %g\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%g\", \"null\", (Object)null);\n+        test(\"%g\", \"3.14159\", pi);\n+        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n+        test(\"%.0g\", \"1e+01\", ten);\n+        test(\"%G\", \"3.14159\", pi);\n+        test(\"%10.3g\", \"      3.14\", pi);\n+        test(\"%10.3g\", \"     -3.14\", negate(pi));\n+        test(\"%010.3g\", \"0000003.14\", pi);\n+        test(\"%010.3g\", \"-000003.14\", negate(pi));\n+        test(\"%-12.3g\", \"3.14        \", pi);\n+        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n+        test(\"%.3g\", \"3.14\", pi);\n+        test(\"%.3g\", \"-3.14\", negate(pi));\n+        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n+        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n@@ -1445,0 +428,6 @@\n+        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n+        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"1e+05\", create(100000.0));\n+        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n+        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n@@ -1446,0 +435,6 @@\n+        test(\"%.1g\", \"-0\", -0.0);\n+        test(\"%3.0g\", \" -0\", -0.0);\n+        test(\"%.1g\", \"0\", 0.0);\n+        test(\"%3.0g\", \"  0\", 0.0);\n+        test(\"%.1g\", \"0\", +0.0);\n+        test(\"%3.0g\", \"  0\", +0.0);\n@@ -1447,0 +442,44 @@\n+        test(\"%3.0g\", \"1e-06\", 0.000001);\n+        test(\"%3.0g\", \"1e-05\", 0.00001);\n+        test(\"%3.0g\", \"1e-05\", 0.0000099);\n+        test(\"%3.1g\", \"1e-05\", 0.0000099);\n+        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n+        test(\"%3.0g\", \"0.0001\", 0.0001);\n+        test(\"%3.0g\", \"9e-05\",  0.00009);\n+        test(\"%3.0g\", \"0.0001\", 0.000099);\n+        test(\"%3.1g\", \"0.0001\", 0.000099);\n+        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n+        test(\"%3.0g\", \"0.001\", 0.001);\n+        test(\"%3.0g\", \"0.001\", 0.00099);\n+        test(\"%3.1g\", \"0.001\", 0.00099);\n+        test(\"%3.2g\", \"0.00099\", 0.00099);\n+        test(\"%3.3g\", \"0.00100\", 0.001);\n+        test(\"%3.4g\", \"0.001000\", 0.001);\n+        test(\"%3.0g\", \"0.01\", 0.01);\n+        test(\"%3.0g\", \"0.1\", 0.1);\n+        test(\"%3.0g\", \"0.9\", 0.9);\n+        test(\"%3.1g\", \"0.9\", 0.9);\n+        test(\"%3.0g\", \"  1\", 1.00);\n+        test(\"%3.2g\", \" 10\", 10.00);\n+        test(\"%3.0g\", \"1e+01\", 10.00);\n+        test(\"%3.0g\", \"1e+02\", 99.19);\n+        test(\"%3.1g\", \"1e+02\", 99.19);\n+        test(\"%3.2g\", \" 99\", 99.19);\n+        test(\"%3.0g\", \"1e+02\", 99.9);\n+        test(\"%3.1g\", \"1e+02\", 99.9);\n+        test(\"%3.2g\", \"1.0e+02\", 99.9);\n+        test(\"%3.0g\", \"1e+02\", 99.99);\n+        test(\"%3.0g\", \"1e+02\", 100.00);\n+        test(\"%3.0g\", \"1e+03\", 999.9);\n+        test(\"%3.1g\", \"1e+03\", 999.9);\n+        test(\"%3.2g\", \"1.0e+03\", 999.9);\n+        test(\"%3.3g\", \"1.00e+03\", 999.9);\n+        test(\"%3.4g\", \"999.9\", 999.9);\n+        test(\"%3.4g\", \"1000\", 999.99);\n+        test(\"%3.0g\", \"1e+03\", 1000.00);\n+        test(\"%3.0g\", \"1e+04\",     10000.00);\n+        test(\"%3.0g\", \"1e+05\",    100000.00);\n+        test(\"%3.0g\", \"1e+06\",   1000000.00);\n+        test(\"%3.0g\", \"1e+07\",  10000000.00);\n+        test(\"%3.9g\", \"100000000\",  100000000.00);\n+        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n@@ -1448,0 +487,1 @@\n+        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n@@ -1449,0 +489,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -1450,0 +492,9 @@\n+        test(\"%.3g\", \"10.0\", ten);\n+        test(\"%.3g\", \"1.00\", one);\n+        test(\"%10.3g\", \"      1.00\", one);\n+        test(\"%+10.3g\", \"     +3.14\", pi);\n+        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n+        test(\"% .3g\", \" 3.14\", pi);\n+        test(\"% .3g\", \"-3.14\", negate(pi));\n+        test(\"%.0g\", \"3\", create(3.0));\n+        test(\"%.0g\", \"-3\", create(-3.0));\n@@ -1451,0 +502,2 @@\n+        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n+        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n@@ -1452,0 +505,2 @@\n+        test(\"%,.11g\", \"3,141,592.6536\", mult(pi, 1000000.0));\n+        test(\"%(,.11g\", \"(3,141,592.6536)\", mult(pi, -1000000.0));\n@@ -1454,217 +509,3 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/---------------------------------------------------------------------\n@@ -1694,93 +535,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDoubleObject.java","additions":239,"deletions":1491,"binary":false,"changes":1730,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,221 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -285,53 +60,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -525,0 +247,6 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %s - float\n+        \/\/---------------------------------------------------------------------\n+        float one = 1.0f;\n+        float ten = 10.0f;\n+        float pi  = (float) Math.PI;\n@@ -526,0 +254,1 @@\n+        test(\"%s\", \"3.1415927\", pi);\n@@ -527,0 +256,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ flag\/conversion errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n+        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n@@ -528,0 +262,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%e\", \"null\", (Object)null);\n@@ -529,0 +270,18 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - float and double\n+        \/\/---------------------------------------------------------------------\n+        \/\/ double PI = 3.141 592 653 589 793 238 46;\n+        test(\"%e\", \"3.141593e+00\", pi);\n+        test(\"%.0e\", \"1e+01\", ten);\n+        test(\"%#.0e\", \"1.e+01\", ten);\n+        test(\"%E\", \"3.141593E+00\", pi);\n+        test(\"%10.3e\", \" 3.142e+00\", pi);\n+        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%010.3e\", \"03.142e+00\", pi);\n+        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%-12.3e\", \"3.142e+00   \", pi);\n+        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n+        test(\"%.3e\", \"3.142e+00\", pi);\n+        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n+        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n@@ -530,0 +289,1 @@\n+        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n@@ -531,0 +291,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -532,0 +294,9 @@\n+        test(\"%10.3e\", \" 1.000e+00\", one);\n+        test(\"%+.3e\", \"+3.142e+00\", pi);\n+        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"% .3e\", \" 3.142e+00\", pi);\n+        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%#.0e\", \"3.e+00\", create(3.0));\n+        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n+        test(\"%.0e\", \"3e+00\", create(3.0));\n+        test(\"%.0e\", \"-3e+00\", create(-3.0));\n@@ -533,473 +304,2 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %s - float\n-        \/\/---------------------------------------------------------------------\n-        float one = 1.0f;\n-        float ten = 10.0f;\n-        float pi  = (float) Math.PI;\n-\n-        test(\"%s\", \"3.1415927\", pi);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ flag\/conversion errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n-        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%e\", \"null\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - float and double\n-        \/\/---------------------------------------------------------------------\n-        \/\/ double PI = 3.141 592 653 589 793 238 46;\n-        test(\"%e\", \"3.141593e+00\", pi);\n-        test(\"%.0e\", \"1e+01\", ten);\n-        test(\"%#.0e\", \"1.e+01\", ten);\n-        test(\"%E\", \"3.141593E+00\", pi);\n-        test(\"%10.3e\", \" 3.142e+00\", pi);\n-        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%010.3e\", \"03.142e+00\", pi);\n-        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%-12.3e\", \"3.142e+00   \", pi);\n-        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n-        test(\"%.3e\", \"3.142e+00\", pi);\n-        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n-        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n-\n-        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%10.3e\", \" 1.000e+00\", one);\n-        test(\"%+.3e\", \"+3.142e+00\", pi);\n-        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"% .3e\", \" 3.142e+00\", pi);\n-        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%#.0e\", \"3.e+00\", create(3.0));\n-        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n-        test(\"%.0e\", \"3e+00\", create(3.0));\n-        test(\"%.0e\", \"-3e+00\", create(-3.0));\n-\n-        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n-        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n+        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n+        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n@@ -1092,79 +392,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -1188,16 +409,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -1283,40 +488,1 @@\n-        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n-\n-        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n@@ -1324,0 +490,1 @@\n+        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n@@ -1325,0 +492,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -1339,1 +508,0 @@\n-\n@@ -1345,91 +513,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -1439,1 +516,0 @@\n-\n@@ -1608,66 +684,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -1694,93 +704,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicFloat.java","additions":55,"deletions":1138,"binary":false,"changes":1193,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,238 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -302,36 +60,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -525,0 +247,6 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %s - Float\n+        \/\/---------------------------------------------------------------------\n+        Float one = 1.0f;\n+        Float ten = 10.0f;\n+        Float pi  = (float) Math.PI;\n@@ -526,0 +254,1 @@\n+        test(\"%s\", \"3.1415927\", pi);\n@@ -527,0 +256,5 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ flag\/conversion errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n+        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n@@ -528,0 +262,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%e\", \"null\", (Object)null);\n@@ -529,0 +270,18 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %e - float and double\n+        \/\/---------------------------------------------------------------------\n+        \/\/ double PI = 3.141 592 653 589 793 238 46;\n+        test(\"%e\", \"3.141593e+00\", pi);\n+        test(\"%.0e\", \"1e+01\", ten);\n+        test(\"%#.0e\", \"1.e+01\", ten);\n+        test(\"%E\", \"3.141593E+00\", pi);\n+        test(\"%10.3e\", \" 3.142e+00\", pi);\n+        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%010.3e\", \"03.142e+00\", pi);\n+        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%-12.3e\", \"3.142e+00   \", pi);\n+        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n+        test(\"%.3e\", \"3.142e+00\", pi);\n+        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n+        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n@@ -530,0 +289,1 @@\n+        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n@@ -531,0 +291,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -532,0 +294,9 @@\n+        test(\"%10.3e\", \" 1.000e+00\", one);\n+        test(\"%+.3e\", \"+3.142e+00\", pi);\n+        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n+        test(\"% .3e\", \" 3.142e+00\", pi);\n+        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n+        test(\"%#.0e\", \"3.e+00\", create(3.0));\n+        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n+        test(\"%.0e\", \"3e+00\", create(3.0));\n+        test(\"%.0e\", \"-3e+00\", create(-3.0));\n@@ -533,902 +304,2 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %s - Float\n-        \/\/---------------------------------------------------------------------\n-        Float one = 1.0f;\n-        Float ten = 10.0f;\n-        Float pi  = (float) Math.PI;\n-\n-        test(\"%s\", \"3.1415927\", pi);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ flag\/conversion errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%d\", IllegalFormatConversionException.class, one);\n-        tryCatch(\"%,.4e\", FormatFlagsConversionMismatchException.class, one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%e\", \"null\", (Object)null);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - float and double\n-        \/\/---------------------------------------------------------------------\n-        \/\/ double PI = 3.141 592 653 589 793 238 46;\n-        test(\"%e\", \"3.141593e+00\", pi);\n-        test(\"%.0e\", \"1e+01\", ten);\n-        test(\"%#.0e\", \"1.e+01\", ten);\n-        test(\"%E\", \"3.141593E+00\", pi);\n-        test(\"%10.3e\", \" 3.142e+00\", pi);\n-        test(\"%10.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%010.3e\", \"03.142e+00\", pi);\n-        test(\"%010.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%-12.3e\", \"3.142e+00   \", pi);\n-        test(\"%-12.3e\", \"-3.142e+00  \", negate(pi));\n-        test(\"%.3e\", \"3.142e+00\", pi);\n-        test(\"%.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%.3e\", \"3.142e+06\", mult(pi, 1000000.0));\n-        test(\"%.3e\", \"-3.142e+06\", mult(pi, -1000000.0));\n-\n-        test(Locale.FRANCE, \"%e\", \"3,141593e+00\", pi);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%10.3e\", \" 1.000e+00\", one);\n-        test(\"%+.3e\", \"+3.142e+00\", pi);\n-        test(\"%+.3e\", \"-3.142e+00\", negate(pi));\n-        test(\"% .3e\", \" 3.142e+00\", pi);\n-        test(\"% .3e\", \"-3.142e+00\", negate(pi));\n-        test(\"%#.0e\", \"3.e+00\", create(3.0));\n-        test(\"%#.0e\", \"-3.e+00\", create(-3.0));\n-        test(\"%.0e\", \"3e+00\", create(3.0));\n-        test(\"%.0e\", \"-3e+00\", create(-3.0));\n-\n-        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n-        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %e - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0e\", \"1e-06\", 0.000001);\n-        test(\"%3.0e\", \"1e-05\", 0.00001);\n-        test(\"%3.0e\", \"1e-04\", 0.0001);\n-        test(\"%3.0e\", \"1e-03\", 0.001);\n-        test(\"%3.0e\", \"1e-02\", 0.01);\n-        test(\"%3.0e\", \"1e-01\", 0.1);\n-        test(\"%3.0e\", \"9e-01\", 0.9);\n-        test(\"%3.1e\", \"9.0e-01\", 0.9);\n-        test(\"%3.0e\", \"1e+00\", 1.00);\n-        test(\"%3.0e\", \"1e+01\", 10.00);\n-        test(\"%3.0e\", \"1e+02\", 99.19);\n-        test(\"%3.1e\", \"9.9e+01\", 99.19);\n-        test(\"%3.0e\", \"1e+02\", 99.99);\n-        test(\"%3.0e\", \"1e+02\", 100.00);\n-        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n-        test(\"%3.0e\", \"1e+04\",     10000.00);\n-        test(\"%3.0e\", \"1e+05\",    100000.00);\n-        test(\"%3.0e\", \"1e+06\",   1000000.00);\n-        test(\"%3.0e\", \"1e+07\",  10000000.00);\n-        test(\"%3.0e\", \"1e+08\", 100000000.00);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%f\", \"null\", (Object)null);\n-        test(\"%f\", \"3.141593\", pi);\n-        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n-        test(\"%10.3f\", \"     3.142\", pi);\n-        test(\"%10.3f\", \"    -3.142\", negate(pi));\n-        test(\"%010.3f\", \"000003.142\", pi);\n-        test(\"%010.3f\", \"-00003.142\", negate(pi));\n-        test(\"%-10.3f\", \"3.142     \", pi);\n-        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n-        test(\"%.3f\", \"3.142\", pi);\n-        test(\"%.3f\", \"-3.142\", negate(pi));\n-        test(\"%+.3f\", \"+3.142\", pi);\n-        test(\"%+.3f\", \"-3.142\", negate(pi));\n-        test(\"% .3f\", \" 3.142\", pi);\n-        test(\"% .3f\", \"-3.142\", negate(pi));\n-        test(\"%#.0f\", \"3.\", create(3.0));\n-        test(\"%#.0f\", \"-3.\", create(-3.0));\n-        test(\"%.0f\", \"3\", create(3.0));\n-        test(\"%.0f\", \"-3\", create(-3.0));\n-        test(\"%.3f\", \"10.000\", ten);\n-        test(\"%.3f\", \"1.000\", one);\n-        test(\"%10.3f\", \"     1.000\", one);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %f - boundary problems\n-        \/\/---------------------------------------------------------------------\n-        test(\"%3.0f\", \"  0\", 0.000001);\n-        test(\"%3.0f\", \"  0\", 0.00001);\n-        test(\"%3.0f\", \"  0\", 0.0001);\n-        test(\"%3.0f\", \"  0\", 0.001);\n-        test(\"%3.0f\", \"  0\", 0.01);\n-        test(\"%3.0f\", \"  0\", 0.1);\n-        test(\"%3.0f\", \"  1\", 0.9);\n-        test(\"%3.1f\", \"0.9\", 0.9);\n-        test(\"%3.0f\", \"  1\", 1.00);\n-        test(\"%3.0f\", \" 10\", 10.00);\n-        test(\"%3.0f\", \" 99\", 99.19);\n-        test(\"%3.1f\", \"99.2\", 99.19);\n-        test(\"%3.0f\", \"100\", 99.99);\n-        test(\"%3.0f\", \"100\", 100.00);\n-        test(\"%#3.0f\", \"1000.\",     1000.00);\n-        test(\"%3.0f\", \"10000\",     10000.00);\n-        test(\"%3.0f\", \"100000\",    100000.00);\n-        test(\"%3.0f\", \"1000000\",   1000000.00);\n-        test(\"%3.0f\", \"10000000\",  10000000.00);\n-        test(\"%3.0f\", \"100000000\", 100000000.00);\n-        test(\"%10.0f\", \"   1000000\",   1000000.00);\n-        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n-        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n-        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n-        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %g\n-        \/\/\n-        \/\/ Floating-point conversions applicable to float, double, and\n-        \/\/ BigDecimal.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%g\", \"null\", (Object)null);\n-        test(\"%g\", \"3.14159\", pi);\n-        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n-        test(\"%.0g\", \"1e+01\", ten);\n-        test(\"%G\", \"3.14159\", pi);\n-        test(\"%10.3g\", \"      3.14\", pi);\n-        test(\"%10.3g\", \"     -3.14\", negate(pi));\n-        test(\"%010.3g\", \"0000003.14\", pi);\n-        test(\"%010.3g\", \"-000003.14\", negate(pi));\n-        test(\"%-12.3g\", \"3.14        \", pi);\n-        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n-        test(\"%.3g\", \"3.14\", pi);\n-        test(\"%.3g\", \"-3.14\", negate(pi));\n-        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n-        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n-\n-        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n-        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n-        test(\"%.0g\", \"1e+05\", create(100000.0));\n-        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n-        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n-\n-        test(\"%.1g\", \"-0\", -0.0);\n-        test(\"%3.0g\", \" -0\", -0.0);\n-        test(\"%.1g\", \"0\", 0.0);\n-        test(\"%3.0g\", \"  0\", 0.0);\n-        test(\"%.1g\", \"0\", +0.0);\n-        test(\"%3.0g\", \"  0\", +0.0);\n-\n-        test(\"%3.0g\", \"1e-06\", 0.000001);\n-        test(\"%3.0g\", \"1e-05\", 0.00001);\n-        test(\"%3.0g\", \"1e-05\", 0.0000099);\n-        test(\"%3.1g\", \"1e-05\", 0.0000099);\n-        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n-        test(\"%3.0g\", \"0.0001\", 0.0001);\n-        test(\"%3.0g\", \"9e-05\",  0.00009);\n-        test(\"%3.0g\", \"0.0001\", 0.000099);\n-        test(\"%3.1g\", \"0.0001\", 0.000099);\n-        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n-        test(\"%3.0g\", \"0.001\", 0.001);\n-        test(\"%3.0g\", \"0.001\", 0.00099);\n-        test(\"%3.1g\", \"0.001\", 0.00099);\n-        test(\"%3.2g\", \"0.00099\", 0.00099);\n-        test(\"%3.3g\", \"0.00100\", 0.001);\n-        test(\"%3.4g\", \"0.001000\", 0.001);\n-        test(\"%3.0g\", \"0.01\", 0.01);\n-        test(\"%3.0g\", \"0.1\", 0.1);\n-        test(\"%3.0g\", \"0.9\", 0.9);\n-        test(\"%3.1g\", \"0.9\", 0.9);\n-        test(\"%3.0g\", \"  1\", 1.00);\n-        test(\"%3.2g\", \" 10\", 10.00);\n-        test(\"%3.0g\", \"1e+01\", 10.00);\n-        test(\"%3.0g\", \"1e+02\", 99.19);\n-        test(\"%3.1g\", \"1e+02\", 99.19);\n-        test(\"%3.2g\", \" 99\", 99.19);\n-        test(\"%3.0g\", \"1e+02\", 99.9);\n-        test(\"%3.1g\", \"1e+02\", 99.9);\n-        test(\"%3.2g\", \"1.0e+02\", 99.9);\n-        test(\"%3.0g\", \"1e+02\", 99.99);\n-        test(\"%3.0g\", \"1e+02\", 100.00);\n-        test(\"%3.0g\", \"1e+03\", 999.9);\n-        test(\"%3.1g\", \"1e+03\", 999.9);\n-        test(\"%3.2g\", \"1.0e+03\", 999.9);\n-        test(\"%3.3g\", \"1.00e+03\", 999.9);\n-        test(\"%3.4g\", \"999.9\", 999.9);\n-        test(\"%3.4g\", \"1000\", 999.99);\n-        test(\"%3.0g\", \"1e+03\", 1000.00);\n-        test(\"%3.0g\", \"1e+04\",     10000.00);\n-        test(\"%3.0g\", \"1e+05\",    100000.00);\n-        test(\"%3.0g\", \"1e+06\",   1000000.00);\n-        test(\"%3.0g\", \"1e+07\",  10000000.00);\n-        test(\"%3.9g\", \"100000000\",  100000000.00);\n-        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n-\n-        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n-\n-        \/\/ double PI^300\n-        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        test(\"%.3g\", \"10.0\", ten);\n-        test(\"%.3g\", \"1.00\", one);\n-        test(\"%10.3g\", \"      1.00\", one);\n-        test(\"%+10.3g\", \"     +3.14\", pi);\n-        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n-        test(\"% .3g\", \" 3.14\", pi);\n-        test(\"% .3g\", \"-3.14\", negate(pi));\n-        test(\"%.0g\", \"3\", create(3.0));\n-        test(\"%.0g\", \"-3\", create(-3.0));\n-\n-        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n-        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        test(\"%(.4e\", \"3.1416e+06\", mult(pi, 1000000.0));\n+        test(\"%(.4e\", \"(3.1416e+06)\", mult(pi, -1000000.0));\n@@ -1437,1 +308,1 @@\n-        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/ %e - boundary problems\n@@ -1439,0 +310,20 @@\n+        test(\"%3.0e\", \"1e-06\", 0.000001);\n+        test(\"%3.0e\", \"1e-05\", 0.00001);\n+        test(\"%3.0e\", \"1e-04\", 0.0001);\n+        test(\"%3.0e\", \"1e-03\", 0.001);\n+        test(\"%3.0e\", \"1e-02\", 0.01);\n+        test(\"%3.0e\", \"1e-01\", 0.1);\n+        test(\"%3.0e\", \"9e-01\", 0.9);\n+        test(\"%3.1e\", \"9.0e-01\", 0.9);\n+        test(\"%3.0e\", \"1e+00\", 1.00);\n+        test(\"%3.0e\", \"1e+01\", 10.00);\n+        test(\"%3.0e\", \"1e+02\", 99.19);\n+        test(\"%3.1e\", \"9.9e+01\", 99.19);\n+        test(\"%3.0e\", \"1e+02\", 99.99);\n+        test(\"%3.0e\", \"1e+02\", 100.00);\n+        test(\"%#3.0e\", \"1.e+03\",     1000.00);\n+        test(\"%3.0e\", \"1e+04\",     10000.00);\n+        test(\"%3.0e\", \"1e+05\",    100000.00);\n+        test(\"%3.0e\", \"1e+06\",   1000000.00);\n+        test(\"%3.0e\", \"1e+07\",  10000000.00);\n+        test(\"%3.0e\", \"1e+08\", 100000000.00);\n@@ -1440,0 +331,28 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%f\", \"null\", (Object)null);\n+        test(\"%f\", \"3.141593\", pi);\n+        test(Locale.FRANCE, \"%f\", \"3,141593\", pi);\n+        test(\"%10.3f\", \"     3.142\", pi);\n+        test(\"%10.3f\", \"    -3.142\", negate(pi));\n+        test(\"%010.3f\", \"000003.142\", pi);\n+        test(\"%010.3f\", \"-00003.142\", negate(pi));\n+        test(\"%-10.3f\", \"3.142     \", pi);\n+        test(\"%-10.3f\", \"-3.142    \", negate(pi));\n+        test(\"%.3f\", \"3.142\", pi);\n+        test(\"%.3f\", \"-3.142\", negate(pi));\n+        test(\"%+.3f\", \"+3.142\", pi);\n+        test(\"%+.3f\", \"-3.142\", negate(pi));\n+        test(\"% .3f\", \" 3.142\", pi);\n+        test(\"% .3f\", \"-3.142\", negate(pi));\n+        test(\"%#.0f\", \"3.\", create(3.0));\n+        test(\"%#.0f\", \"-3.\", create(-3.0));\n+        test(\"%.0f\", \"3\", create(3.0));\n+        test(\"%.0f\", \"-3\", create(-3.0));\n+        test(\"%.3f\", \"10.000\", ten);\n+        test(\"%.3f\", \"1.000\", one);\n+        test(\"%10.3f\", \"     1.000\", one);\n@@ -1441,0 +360,31 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f - boundary problems\n+        \/\/---------------------------------------------------------------------\n+        test(\"%3.0f\", \"  0\", 0.000001);\n+        test(\"%3.0f\", \"  0\", 0.00001);\n+        test(\"%3.0f\", \"  0\", 0.0001);\n+        test(\"%3.0f\", \"  0\", 0.001);\n+        test(\"%3.0f\", \"  0\", 0.01);\n+        test(\"%3.0f\", \"  0\", 0.1);\n+        test(\"%3.0f\", \"  1\", 0.9);\n+        test(\"%3.1f\", \"0.9\", 0.9);\n+        test(\"%3.0f\", \"  1\", 1.00);\n+        test(\"%3.0f\", \" 10\", 10.00);\n+        test(\"%3.0f\", \" 99\", 99.19);\n+        test(\"%3.1f\", \"99.2\", 99.19);\n+        test(\"%3.0f\", \"100\", 99.99);\n+        test(\"%3.0f\", \"100\", 100.00);\n+        test(\"%#3.0f\", \"1000.\",     1000.00);\n+        test(\"%3.0f\", \"10000\",     10000.00);\n+        test(\"%3.0f\", \"100000\",    100000.00);\n+        test(\"%3.0f\", \"1000000\",   1000000.00);\n+        test(\"%3.0f\", \"10000000\",  10000000.00);\n+        test(\"%3.0f\", \"100000000\", 100000000.00);\n+        test(\"%10.0f\", \"   1000000\",   1000000.00);\n+        test(\"%,10.0f\", \" 1,000,000\",   1000000.00);\n+        test(\"%,10.1f\", \"1,000,000.0\",   1000000.00);\n+        test(\"%,3.0f\", \"1,000,000\",   1000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n+        test(\"%,3.0f\", \"10,000,000\",  10000000.00);\n+        test(\"%,3.0f\", \"100,000,000\", 100000000.00);\n@@ -1444,0 +394,21 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %g\n+        \/\/\n+        \/\/ Floating-point conversions applicable to float, double, and\n+        \/\/ BigDecimal.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%g\", \"null\", (Object)null);\n+        test(\"%g\", \"3.14159\", pi);\n+        test(Locale.FRANCE, \"%g\", \"3,14159\", pi);\n+        test(\"%.0g\", \"1e+01\", ten);\n+        test(\"%G\", \"3.14159\", pi);\n+        test(\"%10.3g\", \"      3.14\", pi);\n+        test(\"%10.3g\", \"     -3.14\", negate(pi));\n+        test(\"%010.3g\", \"0000003.14\", pi);\n+        test(\"%010.3g\", \"-000003.14\", negate(pi));\n+        test(\"%-12.3g\", \"3.14        \", pi);\n+        test(\"%-12.3g\", \"-3.14       \", negate(pi));\n+        test(\"%.3g\", \"3.14\", pi);\n+        test(\"%.3g\", \"-3.14\", negate(pi));\n+        test(\"%.3g\", \"3.14e+08\", mult(pi, 100000000.0));\n+        test(\"%.3g\", \"-3.14e+08\", mult(pi, -100000000.0));\n@@ -1445,0 +416,6 @@\n+        test(\"%.3g\", \"1.00e-05\", recip(create(100000.0)));\n+        test(\"%.3g\", \"-1.00e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"-1e-05\", recip(create(-100000.0)));\n+        test(\"%.0g\", \"1e+05\", create(100000.0));\n+        test(\"%.3G\", \"1.00E-05\", recip(create(100000.0)));\n+        test(\"%.3G\", \"-1.00E-05\", recip(create(-100000.0)));\n@@ -1446,0 +423,6 @@\n+        test(\"%.1g\", \"-0\", -0.0);\n+        test(\"%3.0g\", \" -0\", -0.0);\n+        test(\"%.1g\", \"0\", 0.0);\n+        test(\"%3.0g\", \"  0\", 0.0);\n+        test(\"%.1g\", \"0\", +0.0);\n+        test(\"%3.0g\", \"  0\", +0.0);\n@@ -1447,0 +430,44 @@\n+        test(\"%3.0g\", \"1e-06\", 0.000001);\n+        test(\"%3.0g\", \"1e-05\", 0.00001);\n+        test(\"%3.0g\", \"1e-05\", 0.0000099);\n+        test(\"%3.1g\", \"1e-05\", 0.0000099);\n+        test(\"%3.2g\", \"9.9e-06\", 0.0000099);\n+        test(\"%3.0g\", \"0.0001\", 0.0001);\n+        test(\"%3.0g\", \"9e-05\",  0.00009);\n+        test(\"%3.0g\", \"0.0001\", 0.000099);\n+        test(\"%3.1g\", \"0.0001\", 0.000099);\n+        test(\"%3.2g\", \"9.9e-05\", 0.000099);\n+        test(\"%3.0g\", \"0.001\", 0.001);\n+        test(\"%3.0g\", \"0.001\", 0.00099);\n+        test(\"%3.1g\", \"0.001\", 0.00099);\n+        test(\"%3.2g\", \"0.00099\", 0.00099);\n+        test(\"%3.3g\", \"0.00100\", 0.001);\n+        test(\"%3.4g\", \"0.001000\", 0.001);\n+        test(\"%3.0g\", \"0.01\", 0.01);\n+        test(\"%3.0g\", \"0.1\", 0.1);\n+        test(\"%3.0g\", \"0.9\", 0.9);\n+        test(\"%3.1g\", \"0.9\", 0.9);\n+        test(\"%3.0g\", \"  1\", 1.00);\n+        test(\"%3.2g\", \" 10\", 10.00);\n+        test(\"%3.0g\", \"1e+01\", 10.00);\n+        test(\"%3.0g\", \"1e+02\", 99.19);\n+        test(\"%3.1g\", \"1e+02\", 99.19);\n+        test(\"%3.2g\", \" 99\", 99.19);\n+        test(\"%3.0g\", \"1e+02\", 99.9);\n+        test(\"%3.1g\", \"1e+02\", 99.9);\n+        test(\"%3.2g\", \"1.0e+02\", 99.9);\n+        test(\"%3.0g\", \"1e+02\", 99.99);\n+        test(\"%3.0g\", \"1e+02\", 100.00);\n+        test(\"%3.0g\", \"1e+03\", 999.9);\n+        test(\"%3.1g\", \"1e+03\", 999.9);\n+        test(\"%3.2g\", \"1.0e+03\", 999.9);\n+        test(\"%3.3g\", \"1.00e+03\", 999.9);\n+        test(\"%3.4g\", \"999.9\", 999.9);\n+        test(\"%3.4g\", \"1000\", 999.99);\n+        test(\"%3.0g\", \"1e+03\", 1000.00);\n+        test(\"%3.0g\", \"1e+04\",     10000.00);\n+        test(\"%3.0g\", \"1e+05\",    100000.00);\n+        test(\"%3.0g\", \"1e+06\",   1000000.00);\n+        test(\"%3.0g\", \"1e+07\",  10000000.00);\n+        test(\"%3.9g\", \"100000000\",  100000000.00);\n+        test(\"%3.10g\", \"100000000.0\", 100000000.00);\n@@ -1448,0 +475,1 @@\n+        tryCatch(\"%#3.0g\", FormatFlagsConversionMismatchException.class, 1000.00);\n@@ -1449,0 +477,2 @@\n+        \/\/ double PI^300\n+        \/\/    = 13962455701329742638131355433930076081862072808 ... e+149\n@@ -1450,0 +480,9 @@\n+        test(\"%.3g\", \"10.0\", ten);\n+        test(\"%.3g\", \"1.00\", one);\n+        test(\"%10.3g\", \"      1.00\", one);\n+        test(\"%+10.3g\", \"     +3.14\", pi);\n+        test(\"%+10.3g\", \"     -3.14\", negate(pi));\n+        test(\"% .3g\", \" 3.14\", pi);\n+        test(\"% .3g\", \"-3.14\", negate(pi));\n+        test(\"%.0g\", \"3\", create(3.0));\n+        test(\"%.0g\", \"-3\", create(-3.0));\n@@ -1451,0 +490,2 @@\n+        test(\"%(.4g\", \"3.142e+08\", mult(pi, 100000000.0));\n+        test(\"%(.4g\", \"(3.142e+08)\", mult(pi, -100000000.0));\n@@ -1454,217 +495,3 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %f, %e, %g, %a - Boundaries\n+        \/\/---------------------------------------------------------------------\n@@ -1694,93 +521,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicFloatObject.java","additions":225,"deletions":1491,"binary":false,"changes":1716,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,178 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -230,108 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,2 +233,0 @@\n-\n-\n@@ -527,14 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,83 +243,28 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - int and long\n-        \/\/---------------------------------------------------------------------\n-        int oneToSeven = (int) 1234567;\n-        test(\"%d\", \"1234567\", oneToSeven);\n-        test(\"%,d\", \"1,234,567\", oneToSeven);\n-        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", oneToSeven);\n-        test(\"%,d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%(d\", \"1234567\", oneToSeven);\n-        test(\"%(d\", \"(1234567)\", negate(oneToSeven));\n-        test(\"% d\", \" 1234567\", oneToSeven);\n-        test(\"% d\", \"-1234567\", negate(oneToSeven));\n-        test(\"%+d\", \"+1234567\", oneToSeven);\n-        test(\"%+d\", \"-1234567\", negate(oneToSeven));\n-        test(\"%010d\", \"0001234567\", oneToSeven);\n-        test(\"%010d\", \"-001234567\", negate(oneToSeven));\n-        test(\"%(10d\", \" (1234567)\", negate(oneToSeven));\n-        test(\"%-10d\", \"1234567   \", oneToSeven);\n-        test(\"%-10d\", \"-1234567  \", negate(oneToSeven));\n-        \/\/ , variations:\n-        test(\"% ,d\", \" 1,234,567\", oneToSeven);\n-        test(\"% ,d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%+,10d\", \"+1,234,567\", oneToSeven);\n-        test(\"%0,10d\", \"01,234,567\", oneToSeven);\n-        test(\"%0,10d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%(,10d\", \"(1,234,567)\", negate(oneToSeven));\n-        test(\"%-,10d\", \"1,234,567 \", oneToSeven);\n-        test(\"%-,10d\", \"-1,234,567\", negate(oneToSeven));\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - int and long\n+        \/\/---------------------------------------------------------------------\n+        int oneToSeven = (int) 1234567;\n+        test(\"%d\", \"1234567\", oneToSeven);\n+        test(\"%,d\", \"1,234,567\", oneToSeven);\n+        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", oneToSeven);\n+        test(\"%,d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%(d\", \"1234567\", oneToSeven);\n+        test(\"%(d\", \"(1234567)\", negate(oneToSeven));\n+        test(\"% d\", \" 1234567\", oneToSeven);\n+        test(\"% d\", \"-1234567\", negate(oneToSeven));\n+        test(\"%+d\", \"+1234567\", oneToSeven);\n+        test(\"%+d\", \"-1234567\", negate(oneToSeven));\n+        test(\"%010d\", \"0001234567\", oneToSeven);\n+        test(\"%010d\", \"-001234567\", negate(oneToSeven));\n+        test(\"%(10d\", \" (1234567)\", negate(oneToSeven));\n+        test(\"%-10d\", \"1234567   \", oneToSeven);\n+        test(\"%-10d\", \"-1234567  \", negate(oneToSeven));\n+        \/\/ , variations:\n+        test(\"% ,d\", \" 1,234,567\", oneToSeven);\n+        test(\"% ,d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%+,10d\", \"+1,234,567\", oneToSeven);\n+        test(\"%0,10d\", \"01,234,567\", oneToSeven);\n+        test(\"%0,10d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%(,10d\", \"(1,234,567)\", negate(oneToSeven));\n+        test(\"%-,10d\", \"1,234,567 \", oneToSeven);\n+        test(\"%-,10d\", \"-1,234,567\", negate(oneToSeven));\n@@ -650,18 +289,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -681,15 +302,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -718,23 +324,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -759,21 +342,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -790,891 +352,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +372,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicInt.java","additions":35,"deletions":1450,"binary":false,"changes":1485,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,194 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -246,92 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,11 +233,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -536,5 +235,0 @@\n-\n-\n-\n-\n-\n@@ -549,0 +243,8 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%D\", UnknownFormatConversionException.class);\n+        tryCatch(\"%0d\", MissingFormatWidthException.class);\n+        tryCatch(\"%-d\", MissingFormatWidthException.class);\n+        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n@@ -550,0 +252,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n@@ -552,0 +261,13 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%0o\", MissingFormatWidthException.class);\n+        tryCatch(\"%-o\", MissingFormatWidthException.class);\n+        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%O\", UnknownFormatConversionException.class);\n@@ -553,0 +275,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%x\", \"null\", (Object)null);\n@@ -554,1116 +283,6 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%D\", UnknownFormatConversionException.class);\n-        tryCatch(\"%0d\", MissingFormatWidthException.class);\n-        tryCatch(\"%-d\", MissingFormatWidthException.class);\n-        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%0o\", MissingFormatWidthException.class);\n-        tryCatch(\"%-o\", MissingFormatWidthException.class);\n-        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%O\", UnknownFormatConversionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%x\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%0x\", MissingFormatWidthException.class);\n-        tryCatch(\"%-x\", MissingFormatWidthException.class);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%0x\", MissingFormatWidthException.class);\n+        tryCatch(\"%-x\", MissingFormatWidthException.class);\n@@ -1694,93 +313,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicIntObject.java","additions":41,"deletions":1515,"binary":false,"changes":1556,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,178 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -230,108 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,2 +233,0 @@\n-\n-\n@@ -527,14 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,83 +243,28 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - int and long\n-        \/\/---------------------------------------------------------------------\n-        long oneToSeven = (long) 1234567;\n-        test(\"%d\", \"1234567\", oneToSeven);\n-        test(\"%,d\", \"1,234,567\", oneToSeven);\n-        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", oneToSeven);\n-        test(\"%,d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%(d\", \"1234567\", oneToSeven);\n-        test(\"%(d\", \"(1234567)\", negate(oneToSeven));\n-        test(\"% d\", \" 1234567\", oneToSeven);\n-        test(\"% d\", \"-1234567\", negate(oneToSeven));\n-        test(\"%+d\", \"+1234567\", oneToSeven);\n-        test(\"%+d\", \"-1234567\", negate(oneToSeven));\n-        test(\"%010d\", \"0001234567\", oneToSeven);\n-        test(\"%010d\", \"-001234567\", negate(oneToSeven));\n-        test(\"%(10d\", \" (1234567)\", negate(oneToSeven));\n-        test(\"%-10d\", \"1234567   \", oneToSeven);\n-        test(\"%-10d\", \"-1234567  \", negate(oneToSeven));\n-        \/\/ , variations:\n-        test(\"% ,d\", \" 1,234,567\", oneToSeven);\n-        test(\"% ,d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%+,10d\", \"+1,234,567\", oneToSeven);\n-        test(\"%0,10d\", \"01,234,567\", oneToSeven);\n-        test(\"%0,10d\", \"-1,234,567\", negate(oneToSeven));\n-        test(\"%(,10d\", \"(1,234,567)\", negate(oneToSeven));\n-        test(\"%-,10d\", \"1,234,567 \", oneToSeven);\n-        test(\"%-,10d\", \"-1,234,567\", negate(oneToSeven));\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - int and long\n+        \/\/---------------------------------------------------------------------\n+        long oneToSeven = (long) 1234567;\n+        test(\"%d\", \"1234567\", oneToSeven);\n+        test(\"%,d\", \"1,234,567\", oneToSeven);\n+        test(Locale.FRANCE, \"%,d\", \"1\\u202f234\\u202f567\", oneToSeven);\n+        test(\"%,d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%(d\", \"1234567\", oneToSeven);\n+        test(\"%(d\", \"(1234567)\", negate(oneToSeven));\n+        test(\"% d\", \" 1234567\", oneToSeven);\n+        test(\"% d\", \"-1234567\", negate(oneToSeven));\n+        test(\"%+d\", \"+1234567\", oneToSeven);\n+        test(\"%+d\", \"-1234567\", negate(oneToSeven));\n+        test(\"%010d\", \"0001234567\", oneToSeven);\n+        test(\"%010d\", \"-001234567\", negate(oneToSeven));\n+        test(\"%(10d\", \" (1234567)\", negate(oneToSeven));\n+        test(\"%-10d\", \"1234567   \", oneToSeven);\n+        test(\"%-10d\", \"-1234567  \", negate(oneToSeven));\n+        \/\/ , variations:\n+        test(\"% ,d\", \" 1,234,567\", oneToSeven);\n+        test(\"% ,d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%+,10d\", \"+1,234,567\", oneToSeven);\n+        test(\"%0,10d\", \"01,234,567\", oneToSeven);\n+        test(\"%0,10d\", \"-1,234,567\", negate(oneToSeven));\n+        test(\"%(,10d\", \"(1,234,567)\", negate(oneToSeven));\n+        test(\"%-,10d\", \"1,234,567 \", oneToSeven);\n+        test(\"%-,10d\", \"-1,234,567\", negate(oneToSeven));\n@@ -650,32 +289,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -695,1 +302,0 @@\n-\n@@ -718,43 +324,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -779,1 +342,0 @@\n-\n@@ -790,891 +352,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +372,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicLong.java","additions":35,"deletions":1450,"binary":false,"changes":1485,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,199 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -251,87 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,14 +233,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -539,2 +235,0 @@\n-\n-\n@@ -549,0 +243,8 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%D\", UnknownFormatConversionException.class);\n+        tryCatch(\"%0d\", MissingFormatWidthException.class);\n+        tryCatch(\"%-d\", MissingFormatWidthException.class);\n+        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n@@ -550,0 +252,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n@@ -552,0 +261,13 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%0o\", MissingFormatWidthException.class);\n+        tryCatch(\"%-o\", MissingFormatWidthException.class);\n+        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%O\", UnknownFormatConversionException.class);\n@@ -553,0 +275,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%x\", \"null\", (Object)null);\n@@ -554,1116 +283,6 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%D\", UnknownFormatConversionException.class);\n-        tryCatch(\"%0d\", MissingFormatWidthException.class);\n-        tryCatch(\"%-d\", MissingFormatWidthException.class);\n-        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%0o\", MissingFormatWidthException.class);\n-        tryCatch(\"%-o\", MissingFormatWidthException.class);\n-        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%O\", UnknownFormatConversionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%x\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%0x\", MissingFormatWidthException.class);\n-        tryCatch(\"%-x\", MissingFormatWidthException.class);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%0x\", MissingFormatWidthException.class);\n+        tryCatch(\"%-x\", MissingFormatWidthException.class);\n@@ -1694,93 +313,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicLongObject.java","additions":41,"deletions":1515,"binary":false,"changes":1556,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,178 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -230,108 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,2 +233,0 @@\n-\n-\n@@ -527,14 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,23 +243,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -599,34 +270,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -650,9 +287,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -667,29 +295,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -718,12 +317,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -739,41 +326,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -790,891 +336,7 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %t\n-        \/\/\n-        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%tA\", \"null\", (Object)null);\n-        test(\"%TA\", \"NULL\", (Object)null);\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %t\n+        \/\/\n+        \/\/ Date\/Time conversions applicable to Calendar, Date, and long.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%tA\", \"null\", (Object)null);\n+        test(\"%TA\", \"NULL\", (Object)null);\n@@ -1694,93 +356,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicShort.java","additions":7,"deletions":1438,"binary":false,"changes":1445,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-\n-\n-\n-\n@@ -46,189 +42,0 @@\n-\n-    private static void test(String fs, String exp, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(Locale l, String fs, String exp, Object ... args)\n-    {\n-        Formatter f = new Formatter(new StringBuilder(), l);\n-        f.format(fs, args);\n-        ck(fs, exp, f.toString());\n-\n-        f = new Formatter(new StringBuilder(), l);\n-        f.format(\"foo \" + fs + \" bar\", args);\n-        ck(fs, \"foo \" + exp + \" bar\", f.toString());\n-    }\n-\n-    private static void test(String fs, Object ... args) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, args);\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void test(String fs) {\n-        Formatter f = new Formatter(new StringBuilder(), Locale.US);\n-        f.format(fs, \"fail\");\n-        ck(fs, \"fail\", f.toString());\n-    }\n-\n-    private static void testSysOut(String fs, String exp, Object ... args) {\n-        FileOutputStream fos = null;\n-        FileInputStream fis = null;\n-        try {\n-            PrintStream saveOut = System.out;\n-            fos = new FileOutputStream(\"testSysOut\");\n-            System.setOut(new PrintStream(fos));\n-            System.out.format(Locale.US, fs, args);\n-            fos.close();\n-\n-            fis = new FileInputStream(\"testSysOut\");\n-            byte [] ba = new byte[exp.length()];\n-            int len = fis.read(ba);\n-            String got = new String(ba);\n-            if (len != ba.length)\n-                fail(fs, exp, got);\n-            ck(fs, exp, got);\n-\n-            System.setOut(saveOut);\n-        } catch (FileNotFoundException ex) {\n-            fail(fs, ex.getClass());\n-        } catch (IOException ex) {\n-            fail(fs, ex.getClass());\n-        } finally {\n-            try {\n-                if (fos != null)\n-                    fos.close();\n-                if (fis != null)\n-                    fis.close();\n-            } catch (IOException ex) {\n-                fail(fs, ex.getClass());\n-            }\n-        }\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex) {\n-        boolean caught = false;\n-        try {\n-            test(fs);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-    private static void tryCatch(String fs, Class<?> ex, Object ... args) {\n-        boolean caught = false;\n-        try {\n-            test(fs, args);\n-        } catch (Throwable x) {\n-            if (ex.isAssignableFrom(x.getClass()))\n-                caught = true;\n-        }\n-        if (!caught)\n-            fail(fs, ex);\n-        else\n-            pass();\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -241,97 +48,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -523,5 +233,0 @@\n-\n-\n-\n-\n-\n@@ -530,11 +235,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n@@ -549,0 +243,8 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %d - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%D\", UnknownFormatConversionException.class);\n+        tryCatch(\"%0d\", MissingFormatWidthException.class);\n+        tryCatch(\"%-d\", MissingFormatWidthException.class);\n+        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n@@ -550,0 +252,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%o\", \"null\", (Object)null);\n@@ -552,0 +261,13 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %o - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n+                 minByte);\n+        tryCatch(\"%0o\", MissingFormatWidthException.class);\n+        tryCatch(\"%-o\", MissingFormatWidthException.class);\n+        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%O\", UnknownFormatConversionException.class);\n@@ -553,0 +275,7 @@\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x\n+        \/\/\n+        \/\/ Numeric conversion applicable to byte, short, int, long, and\n+        \/\/ BigInteger.\n+        \/\/---------------------------------------------------------------------\n+        test(\"%x\", \"null\", (Object)null);\n@@ -554,1116 +283,6 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %d - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%#d\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%D\", UnknownFormatConversionException.class);\n-        tryCatch(\"%0d\", MissingFormatWidthException.class);\n-        tryCatch(\"%-d\", MissingFormatWidthException.class);\n-        tryCatch(\"%7.3d\", IllegalFormatPrecisionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%o\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %o - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%(o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%+o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"% o\", FormatFlagsConversionMismatchException.class,\n-                 minByte);\n-        tryCatch(\"%0o\", MissingFormatWidthException.class);\n-        tryCatch(\"%-o\", MissingFormatWidthException.class);\n-        tryCatch(\"%,o\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%O\", UnknownFormatConversionException.class);\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x\n-        \/\/\n-        \/\/ Numeric conversion applicable to byte, short, int, long, and\n-        \/\/ BigInteger.\n-        \/\/---------------------------------------------------------------------\n-        test(\"%x\", \"null\", (Object)null);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-        \/\/---------------------------------------------------------------------\n-        \/\/ %x - errors\n-        \/\/---------------------------------------------------------------------\n-        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n-        tryCatch(\"%0x\", MissingFormatWidthException.class);\n-        tryCatch(\"%-x\", MissingFormatWidthException.class);\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+        \/\/---------------------------------------------------------------------\n+        \/\/ %x - errors\n+        \/\/---------------------------------------------------------------------\n+        tryCatch(\"%,x\", FormatFlagsConversionMismatchException.class);\n+        tryCatch(\"%0x\", MissingFormatWidthException.class);\n+        tryCatch(\"%-x\", MissingFormatWidthException.class);\n@@ -1694,93 +313,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicShortObject.java","additions":41,"deletions":1515,"binary":false,"changes":1556,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    java build.tools.spp.Spp -K$1 -Dtype=$1 -DType=$2 -K$3 -K$4 -K$5 -K$6 -iBasic-X.java.template -o$out\n+    java build.tools.spp.Spp -K$1 -Dtype=$1 -DType=$2 -K$3 -K$4 -K$5 -K$6 -iBasic-X.java.template -nel -o$out\n","filename":"test\/jdk\/java\/util\/Formatter\/genBasic.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}