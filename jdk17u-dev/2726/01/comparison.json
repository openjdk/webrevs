{"files":[{"patch":"@@ -189,1 +189,7 @@\n-            return n + implRead(cbuf, off, off + len);\n+            \/\/ Read remaining characters\n+            int nr = implRead(cbuf, off, off + len);\n+\n+            \/\/ At this point, n is either 1 if a leftover character was read,\n+            \/\/ or 0 if no leftover character was read. If n is 1 and nr is -1,\n+            \/\/ indicating EOF, then we don't return their sum as this loses data.\n+            return (nr < 0) ? (n == 1 ? 1 : nr) : (n + nr);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StreamDecoder.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4926314\n+ * @bug 4926314 8287003\n@@ -41,0 +41,1 @@\n+import java.nio.charset.CodingErrorAction;\n@@ -44,0 +45,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -59,0 +61,7 @@\n+    private void fillBuffer(CharBuffer buffer) {\n+        char[] filler = new char[BUFFER_SIZE];\n+        Arrays.fill(filler, 'x');\n+        buffer.put(filler);\n+        buffer.clear();\n+    }\n+\n@@ -81,5 +90,14 @@\n-    private void fillBuffer(CharBuffer buffer) {\n-        char[] filler = new char[BUFFER_SIZE];\n-        Arrays.fill(filler, 'x');\n-        buffer.put(filler);\n-        buffer.clear();\n+    @Test\n+    public void readLeftover() throws IOException {\n+        byte[] b = new byte[] {'a', 'b', (byte) 0xC2};\n+        ByteArrayInputStream bais = new ByteArrayInputStream(b);\n+        InputStreamReader r = new InputStreamReader(bais,\n+            UTF_8.newDecoder().onMalformedInput(CodingErrorAction.IGNORE));\n+        int n = r.read();\n+        assertEquals((char)n, 'a');\n+        char[] c = new char[3];\n+        n = r.read(c, 0, 3);\n+        assertEquals(n, 1);\n+        assertEquals((char)c[0], 'b');\n+        n = r.read();\n+        assertEquals(n, -1);\n@@ -87,1 +105,0 @@\n-\n","filename":"test\/jdk\/java\/io\/InputStreamReader\/ReadCharBuffer.java","additions":25,"deletions":8,"binary":false,"changes":33,"status":"modified"}]}