{"files":[{"patch":"@@ -312,1 +312,1 @@\n-void TemplateTable::ldc(bool wide)\n+void TemplateTable::ldc(LdcType type)\n@@ -317,1 +317,1 @@\n-  if (wide) {\n+  if (is_ldc_wide(type)) {\n@@ -346,1 +346,1 @@\n-  __ mov(c_rarg1, wide);\n+  __ mov(c_rarg1, is_ldc_wide(type) ? 1 : 0);\n@@ -379,1 +379,1 @@\n-void TemplateTable::fast_aldc(bool wide)\n+void TemplateTable::fast_aldc(LdcType type)\n@@ -387,1 +387,1 @@\n-  int index_size = wide ? sizeof(u2) : sizeof(u1);\n+  int index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -367,1 +367,1 @@\n-void TemplateTable::ldc(bool wide) {\n+void TemplateTable::ldc(LdcType type) {\n@@ -376,1 +376,1 @@\n-  if (wide) {\n+  if (is_ldc_wide(type)) {\n@@ -404,1 +404,1 @@\n-  __ mov(R1, wide);\n+  __ mov(R1, is_ldc_wide(type) ? 1 : 0);\n@@ -432,1 +432,1 @@\n-void TemplateTable::fast_aldc(bool wide) {\n+void TemplateTable::fast_aldc(LdcType type) {\n@@ -434,1 +434,1 @@\n-  int index_size = wide ? sizeof(u2) : sizeof(u1);\n+  int index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-void TemplateTable::ldc(bool wide) {\n+void TemplateTable::ldc(LdcType type) {\n@@ -249,1 +249,1 @@\n-  if (wide) { \/\/ Read index.\n+  if (is_ldc_wide(type)) { \/\/ Read index.\n@@ -271,1 +271,1 @@\n-  __ li(R4, wide ? 1 : 0);\n+  __ li(R4, is_ldc_wide(type) ? 1 : 0);\n@@ -304,1 +304,1 @@\n-void TemplateTable::fast_aldc(bool wide) {\n+void TemplateTable::fast_aldc(LdcType type) {\n@@ -307,1 +307,1 @@\n-  int index_size = wide ? sizeof(u2) : sizeof(u1);\n+  int index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -303,1 +303,1 @@\n-void TemplateTable::ldc(bool wide)\n+void TemplateTable::ldc(LdcType type)\n@@ -308,1 +308,1 @@\n-  if (wide) {\n+  if (is_ldc_wide(type)) {\n@@ -338,1 +338,1 @@\n-  __ mv(c_rarg1, wide);\n+  __ mv(c_rarg1, is_ldc_wide(type) ? 1 : 0);\n@@ -372,1 +372,1 @@\n-void TemplateTable::fast_aldc(bool wide)\n+void TemplateTable::fast_aldc(LdcType type)\n@@ -380,1 +380,1 @@\n-  const int index_size = wide ? sizeof(u2) : sizeof(u1);\n+  const int index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-void TemplateTable::ldc(bool wide) {\n+void TemplateTable::ldc(LdcType type) {\n@@ -386,1 +386,1 @@\n-  if (wide) {\n+  if (is_ldc_wide(type)) {\n@@ -414,1 +414,1 @@\n-  __ load_const_optimized(Z_ARG2, wide);\n+  __ load_const_optimized(Z_ARG2, is_ldc_wide(type) ? 1 : 0);\n@@ -450,1 +450,1 @@\n-void TemplateTable::fast_aldc(bool wide) {\n+void TemplateTable::fast_aldc(LdcType type) {\n@@ -454,1 +454,1 @@\n-  int            index_size = wide ? sizeof(u2) : sizeof(u1);\n+  int            index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-void TemplateTable::ldc(bool wide) {\n+void TemplateTable::ldc(LdcType type) {\n@@ -358,1 +358,1 @@\n-  if (wide) {\n+  if (is_ldc_wide(type)) {\n@@ -386,1 +386,1 @@\n-  __ movl(rarg, wide);\n+  __ movl(rarg, is_ldc_wide(type) ? 1 : 0);\n@@ -418,1 +418,1 @@\n-void TemplateTable::fast_aldc(bool wide) {\n+void TemplateTable::fast_aldc(LdcType type) {\n@@ -424,1 +424,1 @@\n-  int index_size = wide ? sizeof(u2) : sizeof(u1);\n+  int index_size = is_ldc_wide(type) ? sizeof(u2) : sizeof(u1);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -205,2 +205,2 @@\n-void TemplateTable::def(Bytecodes::Code code, int flags, TosState in, TosState out, void (*gen)(bool arg    ), bool arg) {\n-  def(code, flags, in, out, (Template::generator)gen, (int)arg);\n+void TemplateTable::def(Bytecodes::Code code, int flags, TosState in, TosState out, void (*gen)(LdcType ldct), LdcType ldct) {\n+  def(code, flags, in, out, (Template::generator)gen, (int)ldct);\n@@ -253,2 +253,2 @@\n-  def(Bytecodes::_ldc                 , ubcp|____|clvm|____, vtos, vtos, ldc                 ,  false       );\n-  def(Bytecodes::_ldc_w               , ubcp|____|clvm|____, vtos, vtos, ldc                 ,  true        );\n+  def(Bytecodes::_ldc                 , ubcp|____|clvm|____, vtos, vtos, ldc                 ,  ldc_normal  );\n+  def(Bytecodes::_ldc_w               , ubcp|____|clvm|____, vtos, vtos, ldc                 ,  ldc_wide    );\n@@ -487,2 +487,2 @@\n-  def(Bytecodes::_fast_aldc           , ubcp|____|clvm|____, vtos, atos, fast_aldc           ,  false       );\n-  def(Bytecodes::_fast_aldc_w         , ubcp|____|clvm|____, vtos, atos, fast_aldc           ,  true        );\n+  def(Bytecodes::_fast_aldc           , ubcp|____|clvm|____, vtos, atos, fast_aldc           ,  ldc_normal  );\n+  def(Bytecodes::_fast_aldc_w         , ubcp|____|clvm|____, vtos, atos, fast_aldc           ,  ldc_wide    );\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -86,0 +86,1 @@\n+  enum LdcType   { ldc_normal = 0, ldc_wide = 1 }; \/\/ LDC type\n@@ -108,0 +109,5 @@\n+  static bool is_ldc_wide(LdcType type) {\n+    assert(type == ldc_wide || type == ldc_normal, \"sanity\");\n+    return (type == ldc_wide);\n+  }\n+\n@@ -131,1 +137,1 @@\n-  static void ldc(bool wide);\n+  static void ldc(LdcType type);\n@@ -133,1 +139,1 @@\n-  static void fast_aldc(bool wide);\n+  static void fast_aldc(LdcType type);\n@@ -330,1 +336,1 @@\n-  static void def(Bytecodes::Code code, int flags, TosState in, TosState out, void (*gen)(bool arg    ), bool arg    );\n+  static void def(Bytecodes::Code code, int flags, TosState in, TosState out, void (*gen)(LdcType ldct), LdcType ldct);\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}