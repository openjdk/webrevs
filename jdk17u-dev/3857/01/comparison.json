{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,7 @@\n-        return !checkWindowSizeExceeded(unprocessed.addAndGet(len));\n+        long buffered, processed;\n+        \/\/ get received before unprocessed in order to avoid counting\n+        \/\/ unprocessed bytes that might get unbuffered asynchronously\n+        \/\/ twice.\n+        processed = received.get();\n+        buffered = unprocessed.addAndGet(len);\n+        return !checkWindowSizeExceeded(processed, buffered);\n@@ -122,1 +128,1 @@\n-    \/\/ received and processed bytes and checks whether the\n+    \/\/ processed and processed bytes and checks whether the\n@@ -125,1 +131,1 @@\n-    private boolean checkWindowSizeExceeded(long len) {\n+    private boolean checkWindowSizeExceeded(long processed, long len) {\n@@ -129,1 +135,1 @@\n-        long rcv = received.get() + len;\n+        long rcv = processed + len;\n@@ -144,0 +150,1 @@\n+        assert delta >= 0 : delta;\n@@ -167,0 +174,1 @@\n+        assert delta >= 0 : delta;\n@@ -195,1 +203,1 @@\n-                    received.getAndAdd(-tosend);\n+                    received.addAndGet(-tosend);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/WindowUpdateSender.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.io.InterruptedIOException;\n@@ -360,1 +361,3 @@\n-                            \/\/ ignore and continue...\n+                            var ioe = new InterruptedIOException(ie.toString());\n+                            ioe.initCause(ie);\n+                            throw ioe;\n@@ -369,0 +372,1 @@\n+                        throw x;\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/StreamFlowControlTest.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,1 +242,1 @@\n-        public abstract void sendResponseHeaders(int code, int contentLength) throws IOException;\n+        public abstract void sendResponseHeaders(int code, long contentLength) throws IOException;\n@@ -295,1 +295,1 @@\n-            public void sendResponseHeaders(int code, int contentLength) throws IOException {\n+            public void sendResponseHeaders(int code, long contentLength) throws IOException {\n@@ -358,1 +358,1 @@\n-            public void sendResponseHeaders(int code, int contentLength) throws IOException {\n+            public void sendResponseHeaders(int code, long contentLength) throws IOException {\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/common\/HttpServerAdapters.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,3 +66,1 @@\n-        \/\/ first wait for the connection window\n-        conn.obtainConnectionWindow(demand);\n-        \/\/ now wait for the stream window\n+        \/\/  first wait for the stream window\n@@ -70,0 +68,2 @@\n+        \/\/ now wait for the connection window\n+        conn.obtainConnectionWindow(demand);\n@@ -72,8 +72,11 @@\n-    public void waitForStreamWindow(int demand) throws InterruptedException {\n-        synchronized (this) {\n-            while (demand > 0) {\n-                int n = Math.min(demand, window);\n-                demand -= n;\n-                window -= n;\n-                if (demand > 0) {\n-                    wait();\n+    public void waitForStreamWindow(int amount) throws InterruptedException {\n+        int demand = amount;\n+        try {\n+            synchronized (this) {\n+                while (amount > 0) {\n+                    int n = Math.min(amount, window);\n+                    amount -= n;\n+                    window -= n;\n+                    if (amount > 0) {\n+                        wait();\n+                    }\n@@ -82,0 +85,3 @@\n+        } catch (Throwable t) {\n+            window += (demand - amount);\n+            throw t;\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/BodyOutputStream.java","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,1 +174,1 @@\n-        System.err.println(\"TestServer: New connection from \" + socket);\n+        System.err.println(server.name + \": New connection from \" + socket);\n@@ -221,1 +221,1 @@\n-                    System.err.println(\"TestServer: setting \" + key + \" property to: \" +\n+                    System.err.println(server.name + \": setting \" + key + \" property to: \" +\n@@ -224,1 +224,1 @@\n-                    System.err.println(\"TestServer: num = \" + num);\n+                    System.err.println(server.name + \": num = \" + num);\n@@ -272,1 +272,1 @@\n-        System.err.println(\"Sending GOAWAY frame \" + frame + \" from server connection \" + this);\n+        System.err.println(server.name + \": Sending GOAWAY frame \" + frame + \" from server connection \" + this);\n@@ -288,1 +288,1 @@\n-            System.err.println(\"Invalid ping received\");\n+            System.err.println(server.name + \": Invalid ping received\");\n@@ -296,1 +296,1 @@\n-                System.err.println(\"Invalid ping ACK received\");\n+                System.err.println(server.name + \": Invalid ping ACK received\");\n@@ -359,1 +359,1 @@\n-        System.err.printf(\"Server connection to %s stopping. %d streams\\n\",\n+        System.err.printf(server.name + \": Server connection to %s stopping. %d streams\\n\",\n@@ -379,3 +379,7 @@\n-            System.err.printf(\"Invalid preface: read %d\/%d bytes%n\", n, len);\n-            throw new IOException(\"Invalid preface: \" +\n-                    new String(bytes, 0, len, ISO_8859_1));\n+            String msg = String.format(\"Invalid preface: read %s\/%s bytes\", n, len);\n+            System.err.println(server.name + \": \" + msg);\n+            throw new IOException(msg +\": \\\"\" +\n+                    new String(bytes, 0, n, ISO_8859_1)\n+                            .replace(\"\\r\", \"\\\\r\")\n+                            .replace(\"\\n\", \"\\\\n\")\n+                    + \"\\\"\");\n@@ -388,1 +392,1 @@\n-            System.err.println(\"Server:HEADERS: \" + upgrade);\n+            System.err.println(server.name + \":HEADERS: \" + upgrade);\n@@ -460,1 +464,1 @@\n-                    System.err.println(\"Server:HEADERS: \" + upgrade);\n+                    System.err.println(server.name + \":HEADERS: \" + upgrade);\n@@ -559,1 +563,1 @@\n-            System.err.println(\"Closing: \"+ f.toString());\n+            System.err.println(server.name + \": Closing connection: \"+ f.toString());\n@@ -652,1 +656,1 @@\n-            System.err.println(\"Rejecting primordial stream 1 and sending GOAWAY\" +\n+            System.err.println(server.name + \": Rejecting primordial stream 1 and sending GOAWAY\" +\n@@ -729,1 +733,1 @@\n-            System.err.println(\"Rejecting stream \" + streamid\n+            System.err.println(server.name + \": Rejecting stream \" + streamid\n@@ -767,1 +771,1 @@\n-        System.err.printf(\"TestServer: %s %s\\n\", method, path);\n+        System.err.printf(server.name + \": %s %s\\n\", method, path);\n@@ -774,1 +778,1 @@\n-            System.err.println(\"Server: got END_STREAM for stream \" + streamid);\n+            System.err.println(server.name + \": got END_STREAM for stream \" + streamid);\n@@ -777,1 +781,1 @@\n-            System.err.println(\"Server: creating input stream for stream \" + streamid);\n+            System.err.println(server.name + \": creating input stream for stream \" + streamid);\n@@ -805,1 +809,1 @@\n-                        System.err.println(\"TestServer: Stream \" + streamid + \" closed: \" + closed);\n+                        System.err.println(server.name + \": Stream \" + streamid + \" closed: \" + closed);\n@@ -815,1 +819,1 @@\n-            System.err.println(\"TestServer: handleRequest exception: \" + e);\n+            System.err.println(server.name + \": handleRequest exception: \" + e);\n@@ -847,1 +851,1 @@\n-                    System.err.println(\"EOF reached on connection \" + connectionKey()\n+                    System.err.println(server.name + \": EOF reached on connection \" + connectionKey()\n@@ -868,1 +872,1 @@\n-                            System.err.println(\"HEADERS frame for existing stream! Error.\");\n+                            System.err.println(server.name + \": HEADERS frame for existing stream! Error.\");\n@@ -877,1 +881,2 @@\n-                                System.err.println(connectionKey() + \" resetting stream \" + streamId\n+                                System.err.println(server.name + \": \" + connectionKey()\n+                                        + \" resetting stream \" + streamId\n@@ -887,1 +892,1 @@\n-                            System.err.printf(\"Non Headers frame received with\"+\n+                            System.err.printf(server.name + \": Non Headers frame received with\"+\n@@ -917,1 +922,1 @@\n-                                System.err.println(\"TestServer: received ResetFrame on closed stream: \" + stream);\n+                                System.err.println(server.name + \": received ResetFrame on closed stream: \" + stream);\n@@ -922,1 +927,1 @@\n-                                System.err.println(\"TestServer: received ResetFrame on closed push stream: \" + stream);\n+                                System.err.println(server.name + \": received ResetFrame on closed push stream: \" + stream);\n@@ -925,1 +930,1 @@\n-                                System.err.println(\"TestServer: Unexpected frame on: \" + stream);\n+                                System.err.println(server.name + \": Unexpected frame on: \" + stream);\n@@ -937,1 +942,1 @@\n-                System.err.println(\"Http server reader thread shutdown\");\n+                System.err.println(server.name + \": Http server reader thread shutdown\");\n@@ -1078,1 +1083,1 @@\n-                            System.err.println(\"TestServer writing \" + hf);\n+                            System.err.println(server.name + \": writing \" + hf);\n@@ -1088,1 +1093,1 @@\n-            System.err.println(\"TestServer: Connection writer stopping\");\n+            System.err.println(server.name + \": Connection writer stopping \" + connectionKey());\n@@ -1140,1 +1145,1 @@\n-                System.err.printf(\"TestServer: pushing response error: %s\\n\",\n+                System.err.printf(server.name + \": pushing response error: %s\\n\",\n@@ -1303,1 +1308,1 @@\n-            System.err.println(\"TestServer: headers read: [ \" + headers + \" ]\");\n+            System.err.println(server.name + \": headers read: [ \" + headers + \" ]\");\n@@ -1335,1 +1340,1 @@\n-        System.err.println(\"OOPS. Unexpected\");\n+        System.err.println(server.name + \": OOPS. Unexpected\");\n@@ -1375,6 +1380,26 @@\n-        while (amount > 0) {\n-            int n = Math.min(amount, sendWindow);\n-            amount -= n;\n-            sendWindow -= n;\n-            if (amount > 0)\n-                wait();\n+        int demand = amount;\n+        try {\n+            int waited = 0;\n+            while (amount > 0) {\n+                int n = Math.min(amount, sendWindow);\n+                amount -= n;\n+                sendWindow -= n;\n+                if (amount > 0) {\n+                    \/\/ Do not include this print line on a version that does not have\n+                    \/\/ JDK-8337395\n+                    System.err.printf(\"%s: blocked waiting for %s connection window, obtained %s%n\",\n+                            server.name, amount, demand - amount);\n+                    waited++;\n+                    wait();\n+                }\n+            }\n+            if (waited > 0) {\n+                \/\/ Do not backport this print line on a version that does not have\n+                \/\/ JDK-8337395\n+                System.err.printf(\"%s: obtained %s connection window, remaining %s%n\",\n+                        server.name, demand, sendWindow);\n+            }\n+            assert amount == 0;\n+        } catch (Throwable t) {\n+            sendWindow += (demand - amount);\n+            throw t;\n@@ -1385,2 +1410,0 @@\n-        System.out.printf(\"sendWindow (window=%s, amount=%s) is now: %s%n\",\n-                sendWindow, amount, sendWindow + amount);\n@@ -1388,0 +1411,4 @@\n+            \/\/ Do not backport this print line on a version that does not have\n+            \/\/ JDK-8337395\n+            System.err.printf(server.name + \": update sendWindow (window=%s, amount=%s) is now: %s%n\",\n+                    sendWindow, amount, sendWindow + amount);\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServerConnection.java","additions":69,"deletions":42,"binary":false,"changes":111,"status":"modified"}]}