{"files":[{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4250178\n+ * @summary Tooltip in incorrect location on ToolBar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4250178\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.ToolTipManager;\n+\n+public class bug4250178 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Click somewhere in the test UI frame to make it focused.\n+        Move mouse to the bottom right corner of the button in this frame\n+        and wait until tooltip appears.\n+\n+        If the tooltip fits into the frame OR partially covered by the mouse\n+        cursor then test fails. Otherwise test passes.\n+        \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4250178::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame fr = new JFrame(\"bug4250178\");\n+        JButton button = new JButton(\"Button\");\n+        button.setToolTipText(\"ToolTip\");\n+        ToolTipManager.sharedInstance().setLightWeightPopupEnabled(true);\n+        fr.add(button);\n+        fr.setSize(250, 100);\n+        return fr;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/bug4250178.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4294808\n+ * @summary Tooltip blinking.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4294808\n+ *\/\n+\n+import java.awt.Dimension;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+\n+public class bug4294808 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Move mouse cursor to the button named \"Tooltip Button\"\n+        at the bottom of the instruction window and wait until\n+        tooltip has appeared.\n+\n+        If tooltip appears and eventually disappears without\n+        rapid blinking then press PASS else FAIL.\n+        \"\"\";\n+\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4294808 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .splitUIBottom(bug4294808::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JComponent createAndShowUI() {\n+        JButton bt = new JButton(\"Tooltip Button\");\n+        bt.setToolTipText(\"Long tooltip text here\");\n+        bt.setPreferredSize(new Dimension(200, 60));\n+        return bt;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/bug4294808.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,152 @@\n+\/*\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4148057 6178004\n+ * @summary REGRESSION: setToolTipText does not work if the\n+ *          component is not focused\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug6178004\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Window;\n+import java.awt.event.MouseEvent;\n+import java.util.List;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBoxMenuItem;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.ToolTipManager;\n+import javax.swing.UIManager;\n+\n+public class bug6178004 {\n+    private static JFrame frame1;\n+    private static JFrame frame2;\n+    private static final int SIZE = 300;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            You can change Look And Feel using the menu \"Change LaF\".\n+\n+            Make sure that Frame2 or instruction window is active.\n+            Move mouse over the button inside \"Frame 1\".\n+            If tooltip is NOT shown or Frame 1 jumped on top of\n+            the Frame2, press FAIL.\n+\n+            For Metal\/Windows LaF:\n+            Tooltips are shown only if one of the frames (or the instruction\n+            window) is active. To test it click on any other application to\n+            make frames and instruction window inactive and then verify that\n+            tooltips are not shown any more.\n+\n+            For Motif\/GTK\/Nimbus\/Aqua LaF:\n+            Tooltips should be shown for all frames irrespective of whether\n+            the application is active or inactive.\n+\n+            Note: Tooltip for Frame1 is always shown at the top-left corner.\n+            Tooltips could be shown partly covered by another frame.\n+\n+            If above is true press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug6178004 Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .testTimeOut(10)\n+                .columns(40)\n+                .testUI(createAndShowUI())\n+                .positionTestUI(bug6178004::positionTestWindows)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static List<Window> createAndShowUI() {\n+        ToolTipManager.sharedInstance().setInitialDelay(0);\n+\n+        frame1 = new JFrame(\"bug6178004 Frame1\");\n+        frame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        JButton button = new JButton(\"Test\") {\n+            public Point getToolTipLocation(MouseEvent event) {\n+                return new Point(10, 10);\n+            }\n+        };\n+        button.setToolTipText(\"Tooltip-1\");\n+        frame1.add(button);\n+        frame1.setSize(SIZE, SIZE);\n+\n+        frame2 = new JFrame(\"bug6178004 Frame2\");\n+        frame2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        JButton button2 = new JButton(\"Click me\") ;\n+        button2.setToolTipText(\"Tooltip-2\");\n+        frame2.add(button2);\n+        frame2.setSize(SIZE, SIZE);\n+\n+        JMenuBar bar = new JMenuBar();\n+        JMenu lafMenu = new JMenu(\"Change LaF\");\n+        ButtonGroup lafGroup = new ButtonGroup();\n+\n+        LookAndFeel currentLaf = UIManager.getLookAndFeel();\n+        UIManager.LookAndFeelInfo[] lafs = UIManager.getInstalledLookAndFeels();\n+        for (final UIManager.LookAndFeelInfo lafInfo : lafs) {\n+            JCheckBoxMenuItem lafItem = new JCheckBoxMenuItem(lafInfo.getName());\n+            lafItem.addActionListener(e -> setLaF(lafInfo.getClassName()));\n+            if (lafInfo.getClassName().equals(currentLaf.getClass().getName())) {\n+                lafItem.setSelected(true);\n+            }\n+\n+            lafGroup.add(lafItem);\n+            lafMenu.add(lafItem);\n+        }\n+\n+        bar.add(lafMenu);\n+        frame2.setJMenuBar(bar);\n+        return List.of(frame1, frame2);\n+    }\n+\n+    private static void setLaF(String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            SwingUtilities.updateComponentTreeUI(frame1);\n+            SwingUtilities.updateComponentTreeUI(frame2);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    \/\/ custom window layout required for this test\n+    private static void positionTestWindows(List<? extends Window> testWindows,\n+                                            PassFailJFrame.InstructionUI instructionUI) {\n+        int gap = 5;\n+        int x = instructionUI.getLocation().x + instructionUI.getSize().width + gap;\n+        \/\/ the two test frames need to overlap for this test\n+        testWindows.get(0).setLocation(x, instructionUI.getLocation().y);\n+        testWindows.get(1).setLocation((x + SIZE \/ 2), instructionUI.getLocation().y);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/bug6178004.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"}]}