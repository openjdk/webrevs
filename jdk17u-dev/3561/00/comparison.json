{"files":[{"patch":"@@ -2076,0 +2076,4 @@\n+        if (mnemonic >= 'a' && mnemonic <= 'z') {\n+            return -1;\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingUtilities.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @key headful\n+ * @bug 4850101\n+ * @summary Verifies if Setting mnemonic to VK_F4 underlines the letter S.\n+ * @run main TestMnemonicAction\n+ *\/\n+\n+import java.io.File;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class TestMnemonicAction {\n+    private static JFrame f;\n+    private static JButton b;\n+\n+    public static boolean compareBufferedImages(BufferedImage bufferedImage0,\n+                                                BufferedImage bufferedImage1) {\n+        int width = bufferedImage0.getWidth();\n+        int height = bufferedImage0.getHeight();\n+\n+        if (width != bufferedImage1.getWidth() || height != bufferedImage1.getHeight()) {\n+            return false;\n+        }\n+\n+        for (int y = 0; y < height; y++) {\n+            for (int x = 0; x < width; x++) {\n+                if (bufferedImage0.getRGB(x, y) != bufferedImage1.getRGB(x, y)) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            f = new JFrame();\n+            b = new JButton(\"Shutdown\");\n+            b.setMnemonic(KeyEvent.VK_F4);\n+            b.setPreferredSize(new Dimension(100, 25));\n+            b.setToolTipText(\"Shutdown\");\n+            f.getContentPane().add(b);\n+            f.setDefaultCloseOperation(f.EXIT_ON_CLOSE);\n+            f.setUndecorated(true);\n+            f.setLocationRelativeTo(null);\n+            f.pack();\n+            f.setVisible(true);\n+        });\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+        Point p = b.getLocationOnScreen();\n+        BufferedImage imgmnemonic = robot.createScreenCapture(\n+                        new Rectangle(p.x, p.y, b.getWidth(), b.getHeight()));\n+        robot.delay(1000);\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (f != null) {\n+                f.dispose();\n+            }\n+        });\n+        SwingUtilities.invokeAndWait(() -> {\n+            f = new JFrame();\n+            b = new JButton(\"Shutdown\");\n+            b.setPreferredSize(new Dimension(100, 25));\n+            f.getContentPane().add(b);\n+            f.setDefaultCloseOperation(f.EXIT_ON_CLOSE);\n+            f.setUndecorated(true);\n+            f.setLocationRelativeTo(null);\n+            f.pack();\n+            f.setVisible(true);\n+        });\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+        p = b.getLocationOnScreen();\n+        BufferedImage buttonimage = robot.createScreenCapture(\n+                        new Rectangle(p.x, p.y, b.getWidth(), b.getHeight()));\n+        robot.delay(1000);\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (f != null) {\n+                f.dispose();\n+            }\n+        });\n+        if (!compareBufferedImages(imgmnemonic, buttonimage)) {\n+            ImageIO.write(imgmnemonic, \"png\", new File(\"imgmnemonic.png\"));\n+            ImageIO.write(buttonimage, \"png\", new File(\"buttonimage.png\"));\n+            throw new RuntimeException(\"F4 mnemonic underlines S\");\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JButton\/TestMnemonicAction.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"}]}