{"files":[{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4495822\n+ * @summary AdjustmentEvent.getValueIsAdjusting() always returns false\n+ * @run main bug4495822\n+ *\/\n+\n+public class bug4495822 {\n+    public static volatile boolean isAdjusted = false;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollBar scrollBar = new JScrollBar(JScrollBar.HORIZONTAL);\n+            scrollBar.addAdjustmentListener(new AdjustmentListener() {\n+                public void adjustmentValueChanged(AdjustmentEvent e) {\n+                    if (e.getValueIsAdjusting() != scrollBar.getValueIsAdjusting()) {\n+                        throw new RuntimeException(\"The AdjustmentEvent has incorrect \\\"valueIsAdjusting\\\" value\");\n+                    }\n+\n+                    isAdjusted = true;\n+                }\n+            });\n+\n+            scrollBar.setValueIsAdjusting(true);\n+        });\n+        Thread.sleep(1000);\n+        if (!isAdjusted) {\n+            throw new RuntimeException(\"adjustmentValueChanged() not invoked!\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4495822.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.basic.BasicScrollBarUI;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+import java.awt.image.BufferedImage;\n+\n+\/*\n+ * @test\n+ * @bug 4696826\n+ * @summary BasicScrollBarUI should check if it needs to paint the thumb\n+ * @run main bug4696826\n+ *\/\n+\n+public class bug4696826 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollBar sb = new JScrollBar();\n+            sb.setBounds(new Rectangle(0, 0, 20, 20));\n+\n+            TestScrollBarUI ui = new TestScrollBarUI();\n+            sb.setUI(ui);\n+            ui.setThumbBounds(0, 0, 20, 20);\n+\n+            BufferedImage image = new BufferedImage(100, 100,\n+                    BufferedImage.TYPE_3BYTE_BGR);\n+            Graphics g = image.getGraphics();\n+            g.setClip(200, 200, 100, 100);\n+            sb.paint(g);\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+\n+    static class TestScrollBarUI extends BasicScrollBarUI {\n+        protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {\n+            throw new RuntimeException(\"Thumb shouldn't be painted\");\n+        }\n+        public void setThumbBounds(int x, int y, int width, int height) {\n+            super.setThumbBounds(x, y, width, height);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4696826.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+import java.awt.Dimension;\n+import java.awt.event.MouseEvent;\n+import java.util.Date;\n+\n+\/*\n+ * @test\n+ * @bug 4842792\n+ * @summary JScrollBar behaves incorrectly if \"Block increment\" value is big enough\n+ * @run main bug4842792\n+ *\/\n+\n+public class bug4842792 {\n+    public static TestScrollBar scrollBar;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            scrollBar = new TestScrollBar(JScrollBar.HORIZONTAL, 10, 10, 0, 100);\n+            scrollBar.setPreferredSize(new Dimension(200, 20));\n+            scrollBar.setBlockIncrement(Integer.MAX_VALUE);\n+\n+            if (scrollBar.doTest() == 0) {\n+                throw new RuntimeException(\"The scrollbar new value should not be 0\");\n+            }\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+\n+    static class TestScrollBar extends JScrollBar {\n+        public TestScrollBar(int orientation, int value, int extent,\n+                             int min, int max) {\n+            super(orientation, value, extent, min, max);\n+        }\n+\n+        public int doTest() {\n+            MouseEvent mouseEvent = new MouseEvent(scrollBar,\n+                                           MouseEvent.MOUSE_PRESSED,\n+                                           (new Date()).getTime(),\n+                                           MouseEvent.BUTTON1_DOWN_MASK,\n+                                           150, 10, 1, true);\n+            processMouseEvent(mouseEvent);\n+            return scrollBar.getValue();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4842792.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JScrollPane;\n+\n+\/*\n+ * @test\n+ * @bug 4247092\n+ * @summary JScrollPane.setCorner(corner,null) causes NPE, but defolt getCorner() rtns null\n+ * @run main bug4247092\n+ *\/\n+\n+public class bug4247092 {\n+    public static void main(String[] args) {\n+        JScrollPane sp = new JScrollPane();\n+        sp.setCorner(JScrollPane.LOWER_RIGHT_CORNER, null);\n+        if (sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER) != null) {\n+            throw new RuntimeException(\"The corner component should be null\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4247092.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import java.awt.BorderLayout;\n+import java.awt.Container;\n+import java.awt.Robot;\n+\n+\/*\n+ * @test\n+ * @bug 4264640\n+ * @summary Tests that JScrollPane sets correct position of its column header view\n+ * @key headful\n+ * @run main bug4264640\n+ *\/\n+\n+public class bug4264640 {\n+    public static JFrame frame;\n+    public static JButton b;\n+    public static Robot robot;\n+    public static volatile int yPos;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Scroll Pane test\");\n+                JScrollPane scroller = new JScrollPane();\n+                b = new JButton(\"This is BUG !\");\n+                b.setBounds(12, 12, 169, 133);\n+                scroller.setColumnHeaderView(b);\n+\n+                Container pane = frame.getContentPane();\n+                pane.setLayout(new BorderLayout());\n+                pane.add(scroller);\n+                frame.setSize(200,200);\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+               yPos = b.getY();\n+            });\n+            if (yPos != 0) {\n+                throw new RuntimeException(\"Failed: Y = \" + yPos + \" (should be 0)\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4264640.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import java.awt.ComponentOrientation;\n+\n+\/*\n+ * @test\n+ * @bug 4467063\n+ * @summary JScrollPane.setCorner() causes IllegalArgumentException. (invalid corner key)\n+ * @run main bug4467063\n+ *\/\n+\n+public class bug4467063 {\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollPane sp = new JScrollPane();\n+\n+            \/\/Test corners for left-to-right orientation\n+            sp.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+            sp.setCorner(JScrollPane.LOWER_LEADING_CORNER, new JButton(\"0\"));\n+            sp.setCorner(JScrollPane.LOWER_TRAILING_CORNER, new JButton(\"1\"));\n+            sp.setCorner(JScrollPane.UPPER_LEADING_CORNER, new JButton(\"2\"));\n+            sp.setCorner(JScrollPane.UPPER_TRAILING_CORNER, new JButton(\"3\"));\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_TRAILING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_TRAILING_CORNER value\");\n+            }\n+\n+            \/\/Test corners for right-to-left orientation\n+            sp.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+            sp.setCorner(JScrollPane.LOWER_LEADING_CORNER, new JButton(\"0\"));\n+            sp.setCorner(JScrollPane.LOWER_TRAILING_CORNER, new JButton(\"1\"));\n+            sp.setCorner(JScrollPane.UPPER_LEADING_CORNER, new JButton(\"2\"));\n+            sp.setCorner(JScrollPane.UPPER_TRAILING_CORNER, new JButton(\"3\"));\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_TRAILING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_TRAILING_CORNER value\");\n+            }\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4467063.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"}]}