{"files":[{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6318630\n+ * @summary Test that location by platform works\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestLocationByPlatform\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+\n+public class TestLocationByPlatform {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            You should see two frames. One has locationByPlatform set, it\n+            should be displayed somewhere on the screen most probably without\n+            intersecting other Frames or stacked over normal frame with some\n+            offset. Another has its location explicitly set to (0, 450).\n+            Please verify that the frames are located correctly on the screen.\n+\n+            Also verify that the picture inside of frames looks the same\n+            and consists of red descending triangle occupying exactly the bottom\n+            half of the frame. Make sure that there is a blue rectangle exactly\n+            surrounding the client area of frame with no pixels between it and\n+            the frame's decorations. Press Pass if this all is true,\n+            otherwise press Fail.\n+            \"\"\";\n+\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .rows(13)\n+            .columns(40)\n+            .build();\n+        EventQueue.invokeAndWait(TestLocationByPlatform::createUI);\n+        passFailJFrame.awaitAndCheck();\n+    }\n+    private static void createUI() {\n+        Frame frame = new Frame(\"Normal\");\n+        frame.setLocation(0, 450);\n+        Canvas c = new MyCanvas();\n+        frame.add(c, BorderLayout.CENTER);\n+        frame.pack();\n+        PassFailJFrame.addTestWindow(frame);\n+        frame.setVisible(true);\n+\n+        frame = new Frame(\"Location by platform\");\n+        frame.setLocationByPlatform(true);\n+        c = new MyCanvas();\n+        frame.add(c, BorderLayout.CENTER);\n+        frame.pack();\n+        PassFailJFrame.addTestWindow(frame);\n+        frame.setVisible(true);\n+    }\n+\n+    static class MyCanvas extends Canvas {\n+        @Override\n+        public Dimension getPreferredSize() {\n+            return new Dimension(400, 400);\n+        }\n+\n+        @Override\n+        public void paint(Graphics g) {\n+            g.setColor(Color.red);\n+            for (int i = 399; i >= 0; i--) {\n+                g.drawLine(400 - i - 1, 400 - i - 1,\n+                    400 - i - 1, 399);\n+            }\n+            g.setColor(Color.blue);\n+            g.drawLine(0, 0, 399, 0);\n+            g.drawLine(0, 0, 0, 399);\n+            g.drawLine(0, 399, 399, 399);\n+            g.drawLine(399, 0, 399, 399);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/LocationByPlatform\/TestLocationByPlatform.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4177156\n+ * @key headful\n+ * @summary Tests that multiple level of window ownership doesn't cause\n+ * NullPointerException when showing a Window\n+ * @run main OwnedWindowShowTest\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Window;\n+\n+public class OwnedWindowShowTest {\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(OwnedWindowShowTest::runTest);\n+    }\n+\n+    static void runTest() {\n+        Frame parent = new Frame(\"OwnedWindowShowTest\");\n+        try {\n+            Window owner = new Window(parent);\n+            Window window = new Window(owner);\n+            \/\/ Showing a window with multiple levels of ownership\n+            \/\/ should not throw NullPointerException\n+            window.setVisible(true);\n+        } finally {\n+            parent.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/OwnedWindowShowTest\/OwnedWindowShowTest.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4225955\n+ * @summary Tests that focus lost is delivered to a lightweight component\n+ * in a disposed window\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ResizeTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+\n+public class ResizeTest\n+{\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            1) Push button A to create modal dialog 2.\n+            2) Resize dialog 2, then click button B to hide it.\n+            3) Push button A again. Dialog B should be packed to its original\n+            size.\n+            4) Push button B again to hide, and A to reshow.\n+            Dialog B should still be the same size, then test is passed,\n+            otherwise failed.\n+            5) Push button B to hide the modal dialog and then select pass\/fail.\n+            \"\"\";\n+\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(ResizeTest::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"1\");\n+        Dialog d = new Dialog(f, \"2\", true);\n+        d.setLocationRelativeTo(null);\n+        Button b2 = new Button(\"B\");\n+        b2.addActionListener(e -> d.setVisible(false));\n+        d.setLayout(new BorderLayout());\n+        d.add(b2, BorderLayout.CENTER);\n+\n+        Button b = new Button(\"A\");\n+        f.add(b, BorderLayout.CENTER);\n+        b.addActionListener(e -> {\n+            d.pack();\n+            d.setVisible(true);\n+        });\n+        f.pack();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/ResizeTest\/ResizeTest.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4084997\n+ * @summary See if Window can be created without its size explicitly set\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ShowWindowTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class ShowWindowTest implements ActionListener\n+{\n+    private static Window window;\n+    private static Button showButton;\n+    private static Button hideButton;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            1. You should see a Frame with a \"Show\" and a \"Hide\" button in it.\n+            2. Click on the \"Show\" button. A window with a \"Hello World\" Label\n+            should appear\n+            3. If the window does not appear, the test failed, otherwise passed.\n+            \"\"\";\n+\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(ShowWindowTest::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame frame = new Frame(\"ShowWindowTest\");\n+        frame.setLayout(new FlowLayout());\n+        frame.setSize(100,100);\n+        frame.add(showButton = new Button(\"Show\"));\n+        frame.add(hideButton = new Button(\"Hide\"));\n+\n+        ActionListener handler = new ShowWindowTest();\n+        showButton.addActionListener(handler);\n+        hideButton.addActionListener(handler);\n+\n+        window = new Window(frame);\n+        window.add(\"Center\", new Label(\"Hello World\"));\n+        window.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        if (e.getSource() == showButton) {\n+            window.pack();\n+            window.setVisible(true);\n+        } else if (e.getSource() == hideButton)\n+            window.setVisible(false);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/ShowWindowTest\/ShowWindowTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}