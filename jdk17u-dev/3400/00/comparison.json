{"files":[{"patch":"@@ -656,5 +656,0 @@\n-static bool is_in_asgct() {\n-  Thread* current_thread = Thread::current_or_null_safe();\n-  return current_thread != NULL && current_thread->is_Java_thread() && current_thread->as_Java_thread()->in_asgct();\n-}\n-\n@@ -669,1 +664,1 @@\n-  guarantee(is_result_safe || is_in_asgct(), \"unsafe access to zombie method\");\n+  guarantee(is_result_safe || Thread::current_in_asgct(), \"unsafe access to zombie method\");\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1011,1 +1011,0 @@\n-  _in_asgct(false),\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -718,1 +718,0 @@\n-  bool           _in_asgct;                      \/\/ Is set when this JavaThread is handling ASGCT call\n@@ -1643,4 +1642,0 @@\n-\n-  \/\/ AsyncGetCallTrace support\n-  inline bool in_asgct(void) {return _in_asgct;}\n-  inline void set_in_asgct(bool value) {_in_asgct = value;}\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}