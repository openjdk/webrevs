{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -42,1 +44,1 @@\n-    static final Random RAND = new Random(Integer.getInteger(\"jdk.incubator.vector.test.random-seed\", 1337));\n+    static final Random RAND = Utils.getRandomInstance();\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4256,1 +4259,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4284,1 +4287,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4317,1 +4320,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4345,1 +4348,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4382,2 +4385,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4438,2 +4441,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4256,1 +4259,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4284,1 +4287,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4317,1 +4320,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4345,1 +4348,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4382,2 +4385,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4438,2 +4441,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4256,1 +4259,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4284,1 +4287,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4317,1 +4320,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4345,1 +4348,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4382,2 +4385,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4438,2 +4441,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4256,1 +4259,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4284,1 +4287,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4317,1 +4320,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4345,1 +4348,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4382,2 +4385,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4438,2 +4441,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4261,1 +4264,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4289,1 +4292,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4322,1 +4325,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4350,1 +4353,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4387,2 +4390,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4443,2 +4446,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3401,1 +3404,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3429,1 +3432,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3462,1 +3465,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3490,1 +3493,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3527,2 +3530,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3583,2 +3586,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3401,1 +3404,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3429,1 +3432,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3462,1 +3465,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3490,1 +3493,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3527,2 +3530,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3583,2 +3586,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3401,1 +3404,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3429,1 +3432,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3462,1 +3465,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3490,1 +3493,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3527,2 +3530,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3583,2 +3586,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3401,1 +3404,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3429,1 +3432,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3462,1 +3465,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3490,1 +3493,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3527,2 +3530,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3583,2 +3586,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3407,1 +3410,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3435,1 +3438,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3468,1 +3471,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3496,1 +3499,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3533,2 +3536,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3589,2 +3592,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3411,1 +3414,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3439,1 +3442,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3472,1 +3475,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3500,1 +3503,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3537,2 +3540,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3593,2 +3596,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3411,1 +3414,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3439,1 +3442,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3472,1 +3475,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3500,1 +3503,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3537,2 +3540,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3593,2 +3596,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3411,1 +3414,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3439,1 +3442,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3472,1 +3475,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3500,1 +3503,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3537,2 +3540,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3593,2 +3596,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3411,1 +3414,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3439,1 +3442,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3472,1 +3475,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3500,1 +3503,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3537,2 +3540,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3593,2 +3596,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -3417,1 +3420,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3445,1 +3448,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3478,1 +3481,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3506,1 +3509,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -3543,2 +3546,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -3599,2 +3602,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4221,1 +4224,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4249,1 +4252,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4282,1 +4285,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4310,1 +4313,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4347,2 +4350,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4403,2 +4406,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4221,1 +4224,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4249,1 +4252,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4282,1 +4285,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4310,1 +4313,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4347,2 +4350,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4403,2 +4406,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4221,1 +4224,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4249,1 +4252,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4282,1 +4285,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4310,1 +4313,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4347,2 +4350,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4403,2 +4406,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4221,1 +4224,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4249,1 +4252,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4282,1 +4285,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4310,1 +4313,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4347,2 +4350,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4403,2 +4406,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4226,1 +4229,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4254,1 +4257,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4287,1 +4290,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4315,1 +4318,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4352,2 +4355,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4408,2 +4411,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4171,1 +4174,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4199,1 +4202,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4232,1 +4235,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4260,1 +4263,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4297,2 +4300,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4353,2 +4356,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4171,1 +4174,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4199,1 +4202,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4232,1 +4235,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4260,1 +4263,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4297,2 +4300,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4353,2 +4356,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4171,1 +4174,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4199,1 +4202,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4232,1 +4235,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4260,1 +4263,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4297,2 +4300,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4353,2 +4356,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4171,1 +4174,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4199,1 +4202,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4232,1 +4235,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4260,1 +4263,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4297,2 +4300,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4353,2 +4356,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4176,1 +4179,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4204,1 +4207,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4237,1 +4240,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4265,1 +4268,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4302,2 +4305,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4358,2 +4361,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4246,1 +4249,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4274,1 +4277,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4307,1 +4310,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4335,1 +4338,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4372,2 +4375,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4428,2 +4431,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4246,1 +4249,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4274,1 +4277,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4307,1 +4310,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4335,1 +4338,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4372,2 +4375,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4428,2 +4431,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4246,1 +4249,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4274,1 +4277,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4307,1 +4310,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4335,1 +4338,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4372,2 +4375,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4428,2 +4431,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4246,1 +4249,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4274,1 +4277,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4307,1 +4310,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4335,1 +4338,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4372,2 +4375,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4428,2 +4431,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n@@ -4251,1 +4254,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4279,1 +4282,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4312,1 +4315,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4340,1 +4343,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n@@ -4377,2 +4380,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n@@ -4433,2 +4436,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-Masked-bop.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-bop.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Slice-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,2 +6,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-Masked-bop.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,2 +4,2 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n-        int part = (new java.util.Random()).nextInt(2);\n+        int origin = RAND.nextInt(SPECIES.length());\n+        int part = RAND.nextInt(2);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-bop.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-        int origin = (new java.util.Random()).nextInt(SPECIES.length());\n+        int origin = RAND.nextInt(SPECIES.length());\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Unslice-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+ * @key randomness\n+ *\n+ * @library \/test\/lib\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}