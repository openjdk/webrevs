{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"make\/conf\/version-numbers.conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -366,0 +366,15 @@\n+\/\/ Symbols should represent entities from the constant pool that are\n+\/\/ limited to <64K in length, but usage errors creep in allowing Symbols\n+\/\/ to be used for arbitrary strings. For debug builds we will assert if\n+\/\/ a string is too long, whereas product builds will truncate it.\n+static int check_length(const char* name, int len) {\n+  assert(len <= Symbol::max_length(),\n+         \"String length %d exceeds the maximum Symbol length of %d\", len, Symbol::max_length());\n+  if (len > Symbol::max_length()) {\n+    warning(\"A string \\\"%.80s ... %.80s\\\" exceeds the maximum Symbol \"\n+            \"length of %d and has been truncated\", name, (name + len - 80), Symbol::max_length());\n+    len = Symbol::max_length();\n+  }\n+  return len;\n+}\n+\n@@ -367,0 +382,1 @@\n+  len = check_length(name, len);\n@@ -500,0 +516,1 @@\n+    assert(len <= Symbol::max_length(), \"must be - these come from the constant pool\");\n@@ -509,0 +526,1 @@\n+  assert(len <= Symbol::max_length(), \"caller should have ensured this\");\n@@ -543,1 +561,1 @@\n-  int len = (int)strlen(name);\n+  int len = check_length(name, (int)strlen(name));\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -431,1 +431,1 @@\n-  int result = 0;\n+  size_t result = 0;\n@@ -434,1 +434,5 @@\n-    result += utf8_size(c);\n+    int sz = utf8_size(c);\n+    if (result + sz > INT_MAX-1) {\n+      break;\n+    }\n+    result += sz;\n@@ -436,1 +440,1 @@\n-  return result;\n+  return checked_cast<int>(result);\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}