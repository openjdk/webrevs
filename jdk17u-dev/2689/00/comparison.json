{"files":[{"patch":"@@ -70,0 +70,2 @@\n+  # release builds disable uses of assert macro from <assert.h>.\n+  JVM_CFLAGS_DEBUGLEVEL := -DNDEBUG\n@@ -73,1 +75,1 @@\n-    JVM_CFLAGS_DEBUGLEVEL := -DPRODUCT\n+    JVM_CFLAGS_DEBUGLEVEL += -DPRODUCT\n","filename":"make\/hotspot\/lib\/JvmFlags.gmk","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/\/ Intentionally no #include guard.  May be included multiple times for effect.\n+\n+\/\/ See vmassert_uninstall.hpp for usage.\n+\n+\/\/ Remove possible stdlib assert macro (or any others, for that matter).\n+#undef assert\n+\n+\/\/ Reinstall HotSpot's assert macro, if previously defined.\n+#ifdef vmassert\n+#define assert(p, ...) vmassert(p, __VA_ARGS__)\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/vmassert_reinstall.hpp","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/\/ Intentionally no #include guard.  May be included multiple times for effect.\n+\n+\/\/ The files vmassert_uninstall.hpp and vmassert_reinstall.hpp provide a\n+\/\/ workaround for the name collision between HotSpot's assert macro and the\n+\/\/ Standard Library's assert macro.  When including a 3rd-party header that\n+\/\/ uses (and so includes) the standard assert macro, wrap that inclusion with\n+\/\/ includes of these two files, e.g.\n+\/\/\n+\/\/ #include \"utilities\/vmassert_uninstall.hpp\"\n+\/\/ #include <header including standard assert macro>\n+\/\/ #include \"utilities\/vmassert_reinstall.hpp\"\n+\/\/\n+\/\/ This removes the HotSpot macro definition while pre-processing the\n+\/\/ 3rd-party header, then reinstates the HotSpot macro (if previously defined)\n+\/\/ for following code.\n+\n+\/\/ Remove HotSpot's assert macro, if present.\n+#ifdef vmassert\n+#undef assert\n+#endif \/\/ vmassert\n+\n","filename":"src\/hotspot\/share\/utilities\/vmassert_uninstall.hpp","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-#include \"unittest.hpp\"\n@@ -29,0 +28,1 @@\n+#include \"utilities\/vmassert_uninstall.hpp\"\n@@ -31,0 +31,3 @@\n+#include \"utilities\/vmassert_reinstall.hpp\"\n+\n+#include \"unittest.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_memset_with_concurrent_readers.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+#include \"utilities\/ostream.hpp\"\n+\n+#include \"utilities\/vmassert_uninstall.hpp\"\n@@ -28,0 +31,2 @@\n+#include \"utilities\/vmassert_reinstall.hpp\"\n+\n@@ -29,1 +34,0 @@\n-#include \"utilities\/ostream.hpp\"\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahNumberSeq.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,1 @@\n-#include \"unittest.hpp\"\n-\n+#include \"utilities\/vmassert_uninstall.hpp\"\n@@ -50,0 +49,3 @@\n+#include \"utilities\/vmassert_reinstall.hpp\"\n+\n+#include \"unittest.hpp\"\n","filename":"test\/hotspot\/gtest\/jfr\/test_networkUtilization.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,4 +51,1 @@\n-\/\/ A work around for GCC math header bug leaving isfinite() undefined,\n-\/\/ see: https:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=14608\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n+#include \"utilities\/vmassert_uninstall.hpp\"\n@@ -57,0 +54,1 @@\n+#include \"utilities\/vmassert_reinstall.hpp\"\n@@ -63,11 +61,2 @@\n-\/\/ gtest\/gtest.h includes assert.h which will define the assert macro, but hotspot has its\n-\/\/ own standards incompatible assert macro that takes two parameters.\n-\/\/ The workaround is to undef assert and then re-define it. The re-definition\n-\/\/ must unfortunately be copied since debug.hpp might already have been\n-\/\/ included and a second include wouldn't work due to the header guards in debug.hpp.\n-#ifdef assert\n-  #undef assert\n-  #ifdef vmassert\n-    #define assert(p, ...) vmassert(p, __VA_ARGS__)\n-  #endif\n-#endif\n+\/\/ Wrapper around os::exit so we don't need to include os.hpp here.\n+extern void gtest_exit_from_child_vm(int num);\n","filename":"test\/hotspot\/gtest\/unittest.hpp","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"}]}