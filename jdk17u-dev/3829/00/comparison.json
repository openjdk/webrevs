{"files":[{"patch":"@@ -478,1 +478,1 @@\n-                handleResponse();\n+                handleResponse(hf);\n@@ -526,1 +526,1 @@\n-    protected void handleResponse() throws IOException {\n+    protected void handleResponse(HeaderFrame hf) throws IOException {\n@@ -546,0 +546,8 @@\n+            } else if (hf.getFlag(HeaderFrame.END_STREAM)) {\n+                \/\/ see RFC 9113 section 8.1:\n+                \/\/ A HEADERS frame with the END_STREAM flag set that carries an\n+                \/\/ informational status code is malformed\n+                protocolErrorMsg = String.format(\n+                        \"Stream %s PROTOCOL_ERROR: \" +\n+                        \"HEADERS frame with status %s has END_STREAM flag set\",\n+                        streamid, responseCode);\n@@ -613,0 +621,4 @@\n+                    if (debug.on()) {\n+                        debug.log(\"completing requestBodyCF exceptionally due to received\" +\n+                                \" RESET(%s) (stream=%s)\", frame.getErrorCode(), streamid);\n+                    }\n@@ -615,0 +627,4 @@\n+                    if (debug.on()) {\n+                        debug.log(\"completing requestBodyCF normally due to received\" +\n+                                \" RESET(NO_ERROR) (stream=%s)\", streamid);\n+                    }\n@@ -618,1 +634,1 @@\n-            if (response == null && subscriber == null) {\n+            if ((response == null || !finalResponseCodeReceived) && subscriber == null) {\n@@ -1012,0 +1028,4 @@\n+                if (debug.on()) {\n+                    debug.log(\"RequestSubscriber: requestBodyCf is done: \" +\n+                            \"cancelling subscription\");\n+                }\n@@ -1571,1 +1591,1 @@\n-        protected void handleResponse() {\n+        protected void handleResponse(HeaderFrame hf) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @bug 8286171\n+ * @bug 8286171 8307648\n@@ -61,0 +61,1 @@\n+import java.net.http.HttpClient.Builder;\n@@ -112,0 +113,4 @@\n+        System.out.println(\"HTTP\/1.1 server listening at: \" + http1TestServer.serverAuthority());\n+        System.out.println(\"HTTP\/1.1 hang server listening at: \" + hangUri.getRawAuthority());\n+        System.out.println(\"HTTP\/2 clear server listening at: \" + http2TestServer.serverAuthority());\n+\n@@ -130,0 +135,1 @@\n+                System.err.println(\"Server reading body\");\n@@ -132,0 +138,1 @@\n+                System.err.println(\"Server sending 200  (length=\"+bytes.length+\")\");\n@@ -145,0 +152,1 @@\n+                System.err.println(\"Server sending 100 (length = 0)\");\n@@ -151,0 +159,1 @@\n+                System.err.println(\"Server reading body\");\n@@ -152,0 +161,1 @@\n+                System.err.println(\"Server send 200 (length=0)\");\n@@ -165,0 +175,1 @@\n+                System.err.println(\"Server send 417 (length=\"+bytes.length+\")\");\n@@ -190,0 +201,1 @@\n+            boolean closed = this.closed;\n@@ -194,1 +206,3 @@\n-                    client = ss.accept();\n+                    System.err.println(\"Http1HangServer accepting connections\");\n+                    var client = this.client = ss.accept();\n+                    System.err.println(\"Http1HangServer accepted connection: \" + client);\n@@ -219,1 +233,2 @@\n-                        closed = true;\n+                        System.err.println(\"Http1HangServer sending 417\");\n+                        closed = this.closed = true;\n@@ -230,0 +245,1 @@\n+                        System.err.println(\"Http1HangServer received invalid request: closing\");\n@@ -233,1 +249,1 @@\n-                    closed = true;\n+                    closed = this.closed = true;\n@@ -235,0 +251,6 @@\n+                } finally {\n+                    if (closed = this.closed) {\n+                        System.err.println(\"Http1HangServer: finished\");\n+                    } else {\n+                        System.err.println(\"Http1HangServer: looping for accepting next connection\");\n+                    }\n@@ -241,0 +263,1 @@\n+            var client = this.client;\n@@ -250,1 +273,1 @@\n-                { h2getUri,  h2postUri, h2hangUri, HttpClient.Version.HTTP_2 }\n+                { h2getUri,  h2postUri, h2hangUri, HTTP_2 }\n@@ -256,0 +279,1 @@\n+        System.out.println(\"Testing with version: \" + version);\n@@ -257,0 +281,1 @@\n+                .proxy(Builder.NO_PROXY)\n@@ -274,0 +299,2 @@\n+        System.out.printf(\"Sending request (%s): %s%n\", version, getRequest);\n+        System.err.println(\"Sending request: \" + getRequest);\n@@ -280,0 +307,2 @@\n+        System.out.printf(\"Sending request (%s): %s%n\", version, postRequest);\n+        System.err.println(\"Sending request: \" + postRequest);\n@@ -286,0 +315,2 @@\n+        System.out.printf(\"Sending request (%s): %s%n\", version, hangRequest);\n+        System.err.println(\"Sending request: \" + hangRequest);\n","filename":"test\/jdk\/java\/net\/httpclient\/ExpectContinueTest.java","additions":36,"deletions":5,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -143,0 +143,3 @@\n+        \/\/ Do not set Content-Length for 100, and do not set END_STREAM\n+        if (rCode == 100) responseLength = 0;\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestExchangeImpl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}