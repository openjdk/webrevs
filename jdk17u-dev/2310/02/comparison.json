{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import javax.security.auth.login.Configuration;\n@@ -31,0 +32,1 @@\n+import java.security.cert.CertStoreParameters;\n@@ -1526,2 +1528,1 @@\n-        final String constructorParameterClassName;\n-        private volatile Class<?> constructorParameterClass;\n+        final Class<?> constructorParameterClass;\n@@ -1529,1 +1530,1 @@\n-        EngineDescription(String name, boolean sp, String paramName) {\n+        EngineDescription(String name, boolean sp, Class<?> constructorParameterClass) {\n@@ -1532,9 +1533,1 @@\n-            this.constructorParameterClassName = paramName;\n-        }\n-        Class<?> getConstructorParameterClass() throws ClassNotFoundException {\n-            Class<?> clazz = constructorParameterClass;\n-            if (clazz == null) {\n-                clazz = Class.forName(constructorParameterClassName);\n-                constructorParameterClass = clazz;\n-            }\n-            return clazz;\n+            this.constructorParameterClass = constructorParameterClass;\n@@ -1547,2 +1540,2 @@\n-    private static void addEngine(String name, boolean sp, String paramName) {\n-        EngineDescription ed = new EngineDescription(name, sp, paramName);\n+    private static void addEngine(String name, boolean sp, Class<?> constructorParameterClass) {\n+        EngineDescription ed = new EngineDescription(name, sp, constructorParameterClass);\n@@ -1564,1 +1557,1 @@\n-                \"java.security.SecureRandomParameters\");\n+                SecureRandomParameters.class);\n@@ -1570,1 +1563,1 @@\n-                            \"java.security.cert.CertStoreParameters\");\n+                CertStoreParameters.class);\n@@ -1588,0 +1581,2 @@\n+        @SuppressWarnings(\"removal\")\n+        Class<Policy.Parameters> policyParams = Policy.Parameters.class;\n@@ -1589,1 +1584,1 @@\n-                            \"java.security.Policy$Parameters\");\n+                policyParams);\n@@ -1592,1 +1587,1 @@\n-                            \"javax.security.auth.login.Configuration$Parameters\");\n+                Configuration.Parameters.class);\n@@ -1599,1 +1594,1 @@\n-                            \"java.lang.Object\");\n+                            Object.class);\n@@ -1853,2 +1848,1 @@\n-                    ctrParamClz = cap.constructorParameterClassName == null?\n-                        null : Class.forName(cap.constructorParameterClassName);\n+                    ctrParamClz = cap.constructorParameterClass;\n@@ -1865,1 +1859,1 @@\n-                                    + cap.constructorParameterClassName.replace('$', '.')\n+                                    + cap.constructorParameterClass.getName().replace('$', '.')\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package org.openjdk.bench.java.security;\n+\n+import org.openjdk.jmh.annotations.*;\n+\n+import java.security.SecureRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Warmup(iterations = 5, time = 1)\n+@Measurement(iterations = 5, time = 1)\n+@Fork(value = 3)\n+public class SecureRandomBench {\n+\n+    @Benchmark\n+    public SecureRandom create() throws Exception {\n+        return new SecureRandom();\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/SecureRandomBench.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}