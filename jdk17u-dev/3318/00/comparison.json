{"files":[{"patch":"@@ -459,29 +459,13 @@\n-            if (nl >= 0) {\n-                \/\/ break up newlines\n-                if (nl == 0) {\n-                    @SuppressWarnings(\"serial\") \/\/ anonymous class\n-                    JPanel breakPanel = new JPanel() {\n-                        public Dimension getPreferredSize() {\n-                            Font f = getFont();\n-\n-                            if (f != null) {\n-                                return new Dimension(1, f.getSize() + 2);\n-                            }\n-                            return new Dimension(0, 0);\n-                        }\n-                    };\n-                    breakPanel.setName(\"OptionPane.break\");\n-                    addMessageComponents(container, cons, breakPanel, maxll,\n-                                         true);\n-                } else {\n-                    addMessageComponents(container, cons, s.substring(0, nl),\n-                                      maxll, false);\n-                }\n-                \/\/ Prevent recursion of more than\n-                \/\/ 200 successive newlines in a message\n-                \/\/ and indicate message is truncated via ellipsis\n-                if (recursionCount++ > 200) {\n-                    recursionCount = 0;\n-                    addMessageComponents(container, cons, new String(\"...\"),\n-                                         maxll,false);\n-                    return;\n+            if (s.contains(\"<html>\")) {\n+                \/* line break in html text is done by <br> tag\n+                 * and not by \/n so it's incorrect to address newline\n+                 * same as non-html text.\n+                 * Text between <html> <\/html> tags are extracted\n+                 * and rendered as JLabel text\n+                 *\/\n+                int index1 = s.indexOf(\"<html>\");\n+                int index2 = s.indexOf(\"<\/html>\");\n+                String str = \"\";\n+                if (index2 >= 0) {\n+                    str = s.substring(index2 + \"<\/html>\".length());\n+                    s = s.substring(index1, index2 + + \"<\/html>\".length());\n@@ -489,10 +473,0 @@\n-                addMessageComponents(container, cons, s.substring(nl + nll), maxll,\n-                                     false);\n-\n-            } else if (len > maxll) {\n-                Container c = Box.createVerticalBox();\n-                c.setName(\"OptionPane.verticalBox\");\n-                burstStringInto(c, s, maxll);\n-                addMessageComponents(container, cons, c, maxll, true );\n-\n-            } else {\n@@ -500,1 +474,1 @@\n-                label = new JLabel( s, JLabel.LEADING );\n+                label = new JLabel(s, JLabel.LEADING);\n@@ -504,0 +478,50 @@\n+                if (!str.isEmpty()) {\n+                    addMessageComponents(container, cons, str, maxll, false);\n+                }\n+            } else {\n+                if (nl >= 0) {\n+                    \/\/ break up newlines\n+                    if (nl == 0) {\n+                        @SuppressWarnings(\"serial\") \/\/ anonymous class\n+                                JPanel breakPanel = new JPanel() {\n+                            public Dimension getPreferredSize() {\n+                                Font f = getFont();\n+\n+                                if (f != null) {\n+                                    return new Dimension(1, f.getSize() + 2);\n+                                }\n+                                return new Dimension(0, 0);\n+                            }\n+                        };\n+                        breakPanel.setName(\"OptionPane.break\");\n+                        addMessageComponents(container, cons, breakPanel, maxll,\n+                                true);\n+                    } else {\n+                        addMessageComponents(container, cons, s.substring(0, nl),\n+                                maxll, false);\n+                    }\n+                    \/\/ Prevent recursion of more than\n+                    \/\/ 200 successive newlines in a message\n+                    \/\/ and indicate message is truncated via ellipsis\n+                    if (recursionCount++ > 200) {\n+                        recursionCount = 0;\n+                        addMessageComponents(container, cons, new String(\"...\"),\n+                                maxll, false);\n+                        return;\n+                    }\n+                    addMessageComponents(container, cons, s.substring(nl + nll), maxll,\n+                            false);\n+\n+                } else if (len > maxll) {\n+                    Container c = Box.createVerticalBox();\n+                    c.setName(\"OptionPane.verticalBox\");\n+                    burstStringInto(c, s, maxll);\n+                    addMessageComponents(container, cons, c, maxll, true);\n+\n+                } else {\n+                    JLabel label;\n+                    label = new JLabel(s, JLabel.LEADING);\n+                    label.setName(\"OptionPane.label\");\n+                    configureMessageLabel(label);\n+                    addMessageComponents(container, cons, label, maxll, true);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicOptionPaneUI.java","additions":64,"deletions":40,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+ * @bug 5074006\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Swing JOptionPane shows <html> tag as a string after newline\n+ * @run main\/manual TestJOptionHTMLTag\n+*\/\n+\n+import javax.swing.JDialog;\n+import javax.swing.JOptionPane;\n+import javax.swing.SwingUtilities;\n+\n+public class TestJOptionHTMLTag {\n+    static String instructions\n+            = \"\"\"\n+            INSTRUCTIONS:\n+                A dialog will be shown.\n+                If it does not contain <\/html> string, press Pass else press Fail.\n+            \"\"\";\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                String message = \"<html>\" + \"This is a test\\n\" + \"<\/html>\";\n+                JOptionPane optionPane = new JOptionPane();\n+                optionPane.setMessage(message);\n+                optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);\n+                JDialog dialog = new JDialog();\n+                dialog.setContentPane(optionPane);\n+                dialog.pack();\n+                dialog.setVisible(true);\n+\n+                passFailJFrame = new PassFailJFrame(instructions);\n+                PassFailJFrame.addTestWindow(dialog);\n+                PassFailJFrame.positionTestWindow(dialog, PassFailJFrame.Position.HORIZONTAL);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        });\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/TestJOptionHTMLTag.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"}]}