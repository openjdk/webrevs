{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-  element->str[allocs] = env->GetStringUTFChars(jstr, 0); CE\n+  element->str[allocs] = env->GetStringUTFChars(jstr, nullptr); CE\n@@ -180,1 +180,1 @@\n-  javachars->str[index] = env->GetStringChars(jstr, 0); CE\n+  javachars->str[index] = env->GetStringChars(jstr, nullptr); CE\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,8 +174,8 @@\n-  boolOrig = env->GetBooleanArrayElements((jbooleanArray) arrayOrig[BOOL], 0); CE\n-  byteOrig = env->GetByteArrayElements((jbyteArray) arrayOrig[BYTE], 0); CE\n-  charOrig = env->GetCharArrayElements((jcharArray) arrayOrig[CHAR], 0); CE\n-  shortOrig = env->GetShortArrayElements((jshortArray) arrayOrig[SHORT], 0); CE\n-  intOrig = env->GetIntArrayElements((jintArray) arrayOrig[INT], 0); CE\n-  longOrig = env->GetLongArrayElements((jlongArray) arrayOrig[LONG], 0); CE\n-  floatOrig = env->GetFloatArrayElements((jfloatArray) arrayOrig[FLOAT], 0); CE\n-  doubleOrig = env->GetDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE], 0); CE\n+  boolOrig = env->GetBooleanArrayElements((jbooleanArray) arrayOrig[BOOL], nullptr); CE\n+  byteOrig = env->GetByteArrayElements((jbyteArray) arrayOrig[BYTE], nullptr); CE\n+  charOrig = env->GetCharArrayElements((jcharArray) arrayOrig[CHAR], nullptr); CE\n+  shortOrig = env->GetShortArrayElements((jshortArray) arrayOrig[SHORT], nullptr); CE\n+  intOrig = env->GetIntArrayElements((jintArray) arrayOrig[INT], nullptr); CE\n+  longOrig = env->GetLongArrayElements((jlongArray) arrayOrig[LONG], nullptr); CE\n+  floatOrig = env->GetFloatArrayElements((jfloatArray) arrayOrig[FLOAT], nullptr); CE\n+  doubleOrig = env->GetDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE], nullptr); CE\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress003.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  \/*     const char *threadName = env->GetStringUTFChars(jstr, 0); *\/\n+  \/*     const char *threadName = env->GetStringUTFChars(jstr, nullptr); *\/\n@@ -56,1 +56,1 @@\n-  critstr = env->GetStringCritical(jstr, 0); CE\n+  critstr = env->GetStringCritical(jstr, nullptr); CE\n@@ -104,1 +104,1 @@\n-  critstr = env->GetStringCritical(jstr, 0); CE\n+  critstr = env->GetStringCritical(jstr, nullptr); CE\n@@ -124,1 +124,1 @@\n-  ch = (jchar *)env->GetPrimitiveArrayCritical(cArr, 0); CE\n+  ch = (jchar *)env->GetPrimitiveArrayCritical(cArr, nullptr); CE\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress004.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-  static jobject *globRefsArray = 0;\n+  static jobject *globRefsArray = nullptr;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  const char *str = env->GetStringUTFChars(name, 0); CE\n+  const char *str = env->GetStringUTFChars(name, nullptr); CE\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress007.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}