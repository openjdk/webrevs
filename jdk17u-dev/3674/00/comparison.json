{"files":[{"patch":"@@ -1127,0 +1127,1 @@\n+        if (debug.on()) debug.log(\"Close all streams\");\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -286,0 +286,1 @@\n+        assert pendingResponseSubscriber == null;\n@@ -478,2 +479,8 @@\n-            if (cancelled) connection.dropDataFrame((DataFrame) frame);\n-            else receiveDataFrame((DataFrame) frame);\n+            if (cancelled) {\n+                if (debug.on()) {\n+                    debug.log(\"request cancelled or stream closed: dropping data frame\");\n+                }\n+                connection.dropDataFrame((DataFrame) frame);\n+            } else {\n+                receiveDataFrame((DataFrame) frame);\n+            }\n@@ -1341,0 +1348,1 @@\n+\n@@ -1342,1 +1350,3 @@\n-            if (responseSubscriber != null || pendingResponseSubscriber != null)\n+            if (responseSubscriber != null || pendingResponseSubscriber != null) {\n+                if (debug.on())\n+                    debug.log(\"stream %s closing due to %s\", streamid, (Object)errorRef.get());\n@@ -1344,0 +1354,10 @@\n+            } else {\n+                if (debug.on())\n+                    debug.log(\"stream %s closing due to %s before subscriber registered\",\n+                        streamid, (Object)errorRef.get());\n+            }\n+        } else {\n+            if (debug.on()) {\n+                debug.log(\"stream %s already closed due to %s\",\n+                        streamid, (Object)errorRef.get());\n+            }\n@@ -1345,0 +1365,1 @@\n+\n@@ -1388,0 +1409,14 @@\n+        var s = responseSubscriber == null\n+                ? pendingResponseSubscriber\n+                : responseSubscriber;\n+        if (debug.on()) debug.log(\"subscriber is %s\", s);\n+        if (s instanceof Http2StreamResponseSubscriber<?> sw) {\n+            if (debug.on()) debug.log(\"closing response subscriber stream %s\", streamid);\n+            \/\/ if the subscriber has already completed,\n+            \/\/ there is nothing to do...\n+            if (!sw.completed()) {\n+                \/\/ otherwise make sure it will be completed\n+                var cause = errorRef.get();\n+                sw.complete(cause == null ? new IOException(\"stream closed\") : cause);\n+            }\n+        }\n@@ -1673,0 +1708,1 @@\n+\n@@ -1677,0 +1713,1 @@\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":40,"deletions":3,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.concurrent.CompletableFuture;\n@@ -179,0 +178,8 @@\n+    \/**\n+     * {@return true if this subscriber has already completed, either normally\n+     * or abnormally}\n+     *\/\n+    public boolean completed() {\n+        return completed.get();\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/HttpBodySubscriberWrapper.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8245462 8229822 8254786 8297075 8297149\n+ * @bug 8245462 8229822 8254786 8297075 8297149 8298340\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}