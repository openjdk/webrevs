{"files":[{"patch":"@@ -733,1 +733,1 @@\n-     * The structure is is printed in plain text to the main output stream.\n+     * The structure is printed in plain text to the main output stream.\n","filename":"test\/langtools\/jdk\/javadoc\/lib\/javadoc\/tester\/JavadocTester.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        \/\/ automatically if is is a development version.\n+        \/\/ automatically if it is a development version.\n","filename":"test\/langtools\/tools\/javac\/VersionOpt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        src1(\"(repeating) type annotations on on field in method body\",true),\n+        src1(\"(repeating) type annotations on field in method body\",true),\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/CombinationsTargetTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * when when localizing diagnostics.\n+ * when localizing diagnostics.\n","filename":"test\/langtools\/tools\/javac\/diags\/ArgTypeCompilerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- *  check that that void compatibility affects overloading as expected\n+ *  check that void compatibility affects overloading as expected\n","filename":"test\/langtools\/tools\/javac\/lambda\/VoidCompatibility.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-     * Test that the single expected expected type, name, is the root\n+     * Test that the single expected type, name, is the root\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestFilerConstraints.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-     * This tests tests the following situation.\n+     * This tests the following situation.\n","filename":"test\/langtools\/tools\/javac\/scope\/DupUnsharedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    \/\/ The true-part of of a conditional expression is surrounded by ? and :\n+    \/\/ The true-part of a conditional expression is surrounded by ? and :\n","filename":"test\/langtools\/tools\/javac\/tree\/T8024415.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * @summary \\\\@SuppressWarnings(\"deprecation\") does not not work for the type of a variable\n+ * @summary \\\\@SuppressWarnings(\"deprecation\") does not work for the type of a variable\n","filename":"test\/langtools\/tools\/javac\/warnings\/6594914\/T6594914a.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -553,1 +553,1 @@\n-         * Adds a parameter(s) to the method method builder.\n+         * Adds a parameter(s) to the method builder.\n@@ -563,1 +563,1 @@\n-         * Adds a parameter to the method method builder.\n+         * Adds a parameter to the method builder.\n","filename":"test\/langtools\/tools\/lib\/builder\/ClassBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}