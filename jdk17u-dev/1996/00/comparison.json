{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n- * @LastModified: May 2021\n+ * @LastModified: Apr 2023\n@@ -3220,4 +3220,0 @@\n-                if (!isSpecified)\n-                    reportSchemaError(\n-                        \"cvc-complex-type.4\",\n-                        new Object[] { element.rawname, currDecl.fName });\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/xs\/XMLSchemaValidator.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package validation;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import static java.util.Collections.unmodifiableList;\n+import java.util.List;\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.stream.StreamSource;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+import org.xml.sax.ErrorHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+\n+\/*\n+ * @test\n+ * @bug 8298087\n+ * @library \/javax\/xml\/jaxp\/libs \/javax\/xml\/jaxp\/unittest\n+ * @run testng validation.ErrorHandlingTest\n+ * @summary Verifies error handling.\n+ *\/\n+public class ErrorHandlingTest {\n+    private final static String xsd = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\"\n+            +\"<schema xmlns=\\\"http:\/\/www.w3.org\/2001\/XMLSchema\\\"\"\n+            +\"       targetNamespace=\\\"https:\/\/errorhandlingtest\/schema\/Example\\\"\"\n+            +\"        elementFormDefault=\\\"qualified\\\">\"\n+            +\"\\n\"\n+            +\"    <element name=\\\"root\\\">\"\n+            +\"        <complexType>\"\n+            +\"            <sequence>\"\n+            +\"                <element name=\\\"a\\\">\"\n+            +\"                    <complexType>\"\n+            +\"                        <simpleContent>\"\n+            +\"                            <extension base=\\\"string\\\">\"\n+            +\"                                <attribute name=\\\"enabled\\\" type=\\\"boolean\\\" use=\\\"required\\\"\/>\"\n+            +\"                            <\/extension>\"\n+            +\"                        <\/simpleContent>\"\n+            +\"                    <\/complexType>\"\n+            +\"                <\/element>\"\n+            +\"            <\/sequence>\"\n+            +\"        <\/complexType>\"\n+            +\"    <\/element>\"\n+            +\"\\n\"\n+            +\"<\/schema>\";\n+\n+    private final static String xml = \"<e:root xmlns:e=\\\"https:\/\/errorhandlingtest\/schema\/Example\\\">\\n\"\n+            +\"    <e:a>string<\/e:a>\\n\"\n+            +\"<\/e:root>\";\n+\n+    \/**\n+     * Verifies that validation error is reported properly (once rather than twice).\n+     *\n+     * @throws Exception if the test fails\n+     *\/\n+    @Test\n+    public void test() throws Exception {\n+        List<SAXParseException> ex = validateXMLWithSchema(new StreamSource(new StringReader(xsd)),\n+                new StreamSource(new StringReader(xml)));\n+        Assert.assertEquals(ex.size(), 1);\n+    }\n+\n+    public static List<SAXParseException> validateXMLWithSchema(final Source xsd, final Source xml) {\n+        final List<SAXParseException> exceptions = new ArrayList<>();\n+        try {\n+            final SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n+            final Schema schema = factory.newSchema(xsd);\n+            final Validator validator = schema.newValidator();\n+            validator.setErrorHandler(new ErrorHandler() {\n+                @Override\n+                public void warning(final SAXParseException exception) {\n+                    System.err.printf(\"Warning: %s%n\", exception);\n+                    exceptions.add(exception);\n+                }\n+\n+                @Override\n+                public void error(final SAXParseException exception) {\n+                    System.err.printf(\"Error: %s%n\", exception);\n+                    exceptions.add(exception);\n+                }\n+\n+                @Override\n+                public void fatalError(final SAXParseException exception) {\n+                    System.err.printf(\"Fatal: %s%n\", exception);\n+                    exceptions.add(exception);\n+                }\n+            });\n+\n+            validator.validate(xml);\n+\n+        } catch (final SAXException | IOException e) {\n+            System.err.printf(\"Exception: %s%n\", e.getMessage());\n+        }\n+        return unmodifiableList(exceptions);\n+    }\n+\n+}\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/validation\/ErrorHandlingTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"}]}