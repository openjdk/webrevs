{"files":[{"patch":"@@ -69,1 +69,1 @@\n-      uses: actions\/upload-artifact@v3\n+      uses: actions\/upload-artifact@v4\n@@ -77,1 +77,1 @@\n-      uses: actions\/github-script@v6\n+      uses: actions\/github-script@v7\n","filename":".github\/actions\/do-build\/action.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-      uses: actions\/cache@v3\n+      uses: actions\/cache@v4\n","filename":".github\/actions\/get-bootjdk\/action.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-      uses: actions\/download-artifact@v3\n+      uses: actions\/download-artifact@v4\n@@ -58,1 +58,1 @@\n-      uses: actions\/download-artifact@v3\n+      uses: actions\/download-artifact@v4\n","filename":".github\/actions\/get-bundles\/action.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-      uses: actions\/cache@v3\n+      uses: actions\/cache@v4\n","filename":".github\/actions\/get-jtreg\/action.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,2 +33,1 @@\n-      # use a specific release of msys2\/setup-msys2 to prevent jtreg build failures on newer release\n-      uses: msys2\/setup-msys2@7efe20baefed56359985e327d329042cde2434ff\n+      uses: msys2\/setup-msys2@v2.22.0\n","filename":".github\/actions\/get-msys2\/action.yml","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-      uses: actions\/upload-artifact@v3\n+      uses: actions\/upload-artifact@v4\n","filename":".github\/actions\/upload-bundles\/action.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        uses: actions\/cache@v3\n+        uses: actions\/cache@v4\n","filename":".github\/workflows\/build-cross-compile.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-        uses: actions\/github-script@v6\n+        uses: actions\/github-script@v7\n","filename":".github\/workflows\/main.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-        uses: actions\/upload-artifact@v3\n+        uses: actions\/upload-artifact@v4\n@@ -222,1 +222,1 @@\n-        uses: actions\/github-script@v6\n+        uses: actions\/github-script@v7\n","filename":".github\/workflows\/test.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-version=17.0.11\n+version=17.0.12\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,2 +177,2 @@\n-<th style=\"text-align: left;\">Operating system<\/th>\n-<th style=\"text-align: left;\">Vendor\/version used<\/th>\n+<th>Operating system<\/th>\n+<th>Vendor\/version used<\/th>\n@@ -183,2 +183,2 @@\n-<td style=\"text-align: left;\">Linux<\/td>\n-<td style=\"text-align: left;\">Oracle Enterprise Linux 6.4 \/ 7.6<\/td>\n+<td>Linux<\/td>\n+<td>Oracle Enterprise Linux 6.4 \/ 7.6<\/td>\n@@ -187,2 +187,2 @@\n-<td style=\"text-align: left;\">macOS<\/td>\n-<td style=\"text-align: left;\">Mac OS X 10.13 (High Sierra)<\/td>\n+<td>macOS<\/td>\n+<td>Mac OS X 10.13 (High Sierra)<\/td>\n@@ -191,2 +191,2 @@\n-<td style=\"text-align: left;\">Windows<\/td>\n-<td style=\"text-align: left;\">Windows Server 2012 R2<\/td>\n+<td>Windows<\/td>\n+<td>Windows Server 2012 R2<\/td>\n@@ -547,1 +547,1 @@\n-<th style=\"text-align: left;\">Supported devkit targets<\/th>\n+<th>Supported devkit targets<\/th>\n@@ -552,1 +552,1 @@\n-<td style=\"text-align: left;\">x86_64-linux-gnu<\/td>\n+<td>x86_64-linux-gnu<\/td>\n@@ -555,1 +555,1 @@\n-<td style=\"text-align: left;\">aarch64-linux-gnu<\/td>\n+<td>aarch64-linux-gnu<\/td>\n@@ -558,1 +558,1 @@\n-<td style=\"text-align: left;\">arm-linux-gnueabihf<\/td>\n+<td>arm-linux-gnueabihf<\/td>\n@@ -561,1 +561,1 @@\n-<td style=\"text-align: left;\">ppc64-linux-gnu<\/td>\n+<td>ppc64-linux-gnu<\/td>\n@@ -564,1 +564,1 @@\n-<td style=\"text-align: left;\">ppc64le-linux-gnu<\/td>\n+<td>ppc64le-linux-gnu<\/td>\n@@ -567,1 +567,1 @@\n-<td style=\"text-align: left;\">s390x-linux-gnu<\/td>\n+<td>s390x-linux-gnu<\/td>\n@@ -681,4 +681,4 @@\n-<th style=\"text-align: left;\">Target<\/th>\n-<th style=\"text-align: left;\">Debian tree<\/th>\n-<th style=\"text-align: left;\">Debian arch<\/th>\n-<th style=\"text-align: left;\"><code>--openjdk-target=...<\/code><\/th>\n+<th>Target<\/th>\n+<th>Debian tree<\/th>\n+<th>Debian arch<\/th>\n+<th><code>--openjdk-target=...<\/code><\/th>\n@@ -690,4 +690,4 @@\n-<td style=\"text-align: left;\">x86<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">i386<\/td>\n-<td style=\"text-align: left;\">i386-linux-gnu<\/td>\n+<td>x86<\/td>\n+<td>buster<\/td>\n+<td>i386<\/td>\n+<td>i386-linux-gnu<\/td>\n@@ -697,4 +697,4 @@\n-<td style=\"text-align: left;\">arm<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">armhf<\/td>\n-<td style=\"text-align: left;\">arm-linux-gnueabihf<\/td>\n+<td>arm<\/td>\n+<td>buster<\/td>\n+<td>armhf<\/td>\n+<td>arm-linux-gnueabihf<\/td>\n@@ -704,4 +704,4 @@\n-<td style=\"text-align: left;\">aarch64<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">arm64<\/td>\n-<td style=\"text-align: left;\">aarch64-linux-gnu<\/td>\n+<td>aarch64<\/td>\n+<td>buster<\/td>\n+<td>arm64<\/td>\n+<td>aarch64-linux-gnu<\/td>\n@@ -711,4 +711,4 @@\n-<td style=\"text-align: left;\">ppc64le<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">ppc64el<\/td>\n-<td style=\"text-align: left;\">powerpc64le-linux-gnu<\/td>\n+<td>ppc64le<\/td>\n+<td>buster<\/td>\n+<td>ppc64el<\/td>\n+<td>powerpc64le-linux-gnu<\/td>\n@@ -718,4 +718,4 @@\n-<td style=\"text-align: left;\">s390x<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">s390x<\/td>\n-<td style=\"text-align: left;\">s390x-linux-gnu<\/td>\n+<td>s390x<\/td>\n+<td>buster<\/td>\n+<td>s390x<\/td>\n+<td>s390x-linux-gnu<\/td>\n@@ -725,4 +725,4 @@\n-<td style=\"text-align: left;\">mipsle<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">mipsel<\/td>\n-<td style=\"text-align: left;\">mipsel-linux-gnu<\/td>\n+<td>mipsle<\/td>\n+<td>buster<\/td>\n+<td>mipsel<\/td>\n+<td>mipsel-linux-gnu<\/td>\n@@ -732,4 +732,4 @@\n-<td style=\"text-align: left;\">mips64le<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">mips64el<\/td>\n-<td style=\"text-align: left;\">mips64el-linux-gnueabi64<\/td>\n+<td>mips64le<\/td>\n+<td>buster<\/td>\n+<td>mips64el<\/td>\n+<td>mips64el-linux-gnueabi64<\/td>\n@@ -739,4 +739,4 @@\n-<td style=\"text-align: left;\">armel<\/td>\n-<td style=\"text-align: left;\">buster<\/td>\n-<td style=\"text-align: left;\">arm<\/td>\n-<td style=\"text-align: left;\">arm-linux-gnueabi<\/td>\n+<td>armel<\/td>\n+<td>buster<\/td>\n+<td>arm<\/td>\n+<td>arm-linux-gnueabi<\/td>\n@@ -746,4 +746,4 @@\n-<td style=\"text-align: left;\">ppc<\/td>\n-<td style=\"text-align: left;\">sid<\/td>\n-<td style=\"text-align: left;\">powerpc<\/td>\n-<td style=\"text-align: left;\">powerpc-linux-gnu<\/td>\n+<td>ppc<\/td>\n+<td>sid<\/td>\n+<td>powerpc<\/td>\n+<td>powerpc-linux-gnu<\/td>\n@@ -753,4 +753,4 @@\n-<td style=\"text-align: left;\">ppc64be<\/td>\n-<td style=\"text-align: left;\">sid<\/td>\n-<td style=\"text-align: left;\">ppc64<\/td>\n-<td style=\"text-align: left;\">powerpc64-linux-gnu<\/td>\n+<td>ppc64be<\/td>\n+<td>sid<\/td>\n+<td>ppc64<\/td>\n+<td>powerpc64-linux-gnu<\/td>\n@@ -760,4 +760,4 @@\n-<td style=\"text-align: left;\">m68k<\/td>\n-<td style=\"text-align: left;\">sid<\/td>\n-<td style=\"text-align: left;\">m68k<\/td>\n-<td style=\"text-align: left;\">m68k-linux-gnu<\/td>\n+<td>m68k<\/td>\n+<td>sid<\/td>\n+<td>m68k<\/td>\n+<td>m68k-linux-gnu<\/td>\n@@ -767,4 +767,4 @@\n-<td style=\"text-align: left;\">alpha<\/td>\n-<td style=\"text-align: left;\">sid<\/td>\n-<td style=\"text-align: left;\">alpha<\/td>\n-<td style=\"text-align: left;\">alpha-linux-gnu<\/td>\n+<td>alpha<\/td>\n+<td>sid<\/td>\n+<td>alpha<\/td>\n+<td>alpha-linux-gnu<\/td>\n@@ -774,4 +774,4 @@\n-<td style=\"text-align: left;\">sh4<\/td>\n-<td style=\"text-align: left;\">sid<\/td>\n-<td style=\"text-align: left;\">sh4<\/td>\n-<td style=\"text-align: left;\">sh4-linux-gnu<\/td>\n+<td>sh4<\/td>\n+<td>sid<\/td>\n+<td>sh4<\/td>\n+<td>sh4-linux-gnu<\/td>\n","filename":"doc\/building.html","additions":71,"deletions":71,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -157,5 +157,5 @@\n- Operating system   Vendor\/version used\n- -----------------  -------------------------------------------------------\n- Linux              Oracle Enterprise Linux 6.4 \/ 7.6\n- macOS              Mac OS X 10.13 (High Sierra)\n- Windows            Windows Server 2012 R2\n+| Operating system  | Vendor\/version used                |\n+| ----------------- | ---------------------------------- |\n+| Linux             | Oracle Enterprise Linux 6.4 \/ 7.6  |\n+| macOS             | Mac OS X 10.13 (High Sierra)       |\n+| Windows           | Windows Server 2012 R2             |\n@@ -960,8 +960,8 @@\n- Supported devkit targets\n- -------------------------\n- x86_64-linux-gnu\n- aarch64-linux-gnu\n- arm-linux-gnueabihf\n- ppc64-linux-gnu\n- ppc64le-linux-gnu\n- s390x-linux-gnu\n+| Supported devkit targets |\n+| ------------------------ |\n+| x86_64-linux-gnu         |\n+| aarch64-linux-gnu        |\n+| arm-linux-gnueabihf      |\n+| ppc64-linux-gnu          |\n+| ppc64le-linux-gnu        |\n+| s390x-linux-gnu          |\n@@ -1187,15 +1187,15 @@\n-  Target        Debian tree  Debian arch   `--openjdk-target=...`   `--with-jvm-variants=...`\n-  ------------  ------------ ------------- ------------------------ --------------\n-  x86           buster       i386          i386-linux-gnu           (all)\n-  arm           buster       armhf         arm-linux-gnueabihf      (all)\n-  aarch64       buster       arm64         aarch64-linux-gnu        (all)\n-  ppc64le       buster       ppc64el       powerpc64le-linux-gnu    (all)\n-  s390x         buster       s390x         s390x-linux-gnu          (all)\n-  mipsle        buster       mipsel        mipsel-linux-gnu         zero\n-  mips64le      buster       mips64el      mips64el-linux-gnueabi64 zero\n-  armel         buster       arm           arm-linux-gnueabi        zero\n-  ppc           sid          powerpc       powerpc-linux-gnu        zero\n-  ppc64be       sid          ppc64         powerpc64-linux-gnu      (all)\n-  m68k          sid          m68k          m68k-linux-gnu           zero\n-  alpha         sid          alpha         alpha-linux-gnu          zero\n-  sh4           sid          sh4           sh4-linux-gnu            zero\n+| Target       | Debian tree  | Debian arch   | `--openjdk-target=...`   | `--with-jvm-variants=...` |\n+| ------------ | ------------ | ------------- | ------------------------ | ------------------------- |\n+| x86          | buster       | i386          | i386-linux-gnu           | (all)                     |\n+| arm          | buster       | armhf         | arm-linux-gnueabihf      | (all)                     |\n+| aarch64      | buster       | arm64         | aarch64-linux-gnu        | (all)                     |\n+| ppc64le      | buster       | ppc64el       | powerpc64le-linux-gnu    | (all)                     |\n+| s390x        | buster       | s390x         | s390x-linux-gnu          | (all)                     |\n+| mipsle       | buster       | mipsel        | mipsel-linux-gnu         | zero                      |\n+| mips64le     | buster       | mips64el      | mips64el-linux-gnueabi64 | zero                      |\n+| armel        | buster       | arm           | arm-linux-gnueabi        | zero                      |\n+| ppc          | sid          | powerpc       | powerpc-linux-gnu        | zero                      |\n+| ppc64be      | sid          | ppc64         | powerpc64-linux-gnu      | (all)                     |\n+| m68k         | sid          | m68k          | m68k-linux-gnu           | zero                      |\n+| alpha        | sid          | alpha         | alpha-linux-gnu          | zero                      |\n+| sh4          | sid          | sh4           | sh4-linux-gnu            | zero                      |\n","filename":"doc\/building.md","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,4 @@\n+  ifneq ($$(findstring $$(LOG_LEVEL), debug trace),)\n+    SHELL := $$(SHELL) -x\n+  endif\n+\n","filename":"make\/common\/MakeBase.gmk","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-DEFAULT_VERSION_UPDATE=11\n+DEFAULT_VERSION_UPDATE=12\n@@ -36,1 +36,1 @@\n-DEFAULT_VERSION_DATE=2024-04-16\n+DEFAULT_VERSION_DATE=2024-07-16\n","filename":"make\/conf\/version-numbers.conf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,20 @@\n+Owner: CN=Certainly Root E1, O=Certainly, C=US\n+Issuer: CN=Certainly Root E1, O=Certainly, C=US\n+Serial number: 62533b1470333275cf98d9ab9bfccf8\n+Valid from: Thu Apr 01 00:00:00 GMT 2021 until: Sun Apr 01 00:00:00 GMT 2046\n+Signature algorithm name: SHA384withECDSA\n+Subject Public Key Algorithm: 384-bit EC (secp384r1) key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIIB9zCCAX2gAwIBAgIQBiUzsUcDMydc+Y2aub\/M+DAKBggqhkjOPQQDAzA9MQsw\n+CQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0YWlu\n+bHkgUm9vdCBFMTAeFw0yMTA0MDEwMDAwMDBaFw00NjA0MDEwMDAwMDBaMD0xCzAJ\n+BgNVBAYTAlVTMRIwEAYDVQQKEwlDZXJ0YWlubHkxGjAYBgNVBAMTEUNlcnRhaW5s\n+eSBSb290IEUxMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE3m\/4fxzf7flHh4axpMCK\n++IKXgOqPyEpeKn2IaKcBYhSRJHpcnqMXfYqGITQYUBsQ3tA3SybHGWCA6TS9YBk2\n+QNYphwk8kXr2vBMj3VlOBF7PyAIcGFPBMdjaIOlEjeR2o0IwQDAOBgNVHQ8BAf8E\n+BAMCAQYwDwYDVR0TAQH\/BAUwAwEB\/zAdBgNVHQ4EFgQU8ygYy2R17ikq6+2uI1g4\n+hevIIgcwCgYIKoZIzj0EAwMDaAAwZQIxALGOWiDDshliTd6wT99u0nCK8Z9+aozm\n+ut6Dacpps6kFtZaSF4fC0urQe87YQVt8rgIwRt7qy12a7DLCZRawTDBcMPPaTnOG\n+BtjOiQRINzf43TNRnXCve1XYAS59BWQOhriR\n+-----END CERTIFICATE-----\n","filename":"make\/data\/cacerts\/certainlyroote1","additions":20,"deletions":0,"binary":false,"changes":20,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+Owner: CN=Certainly Root R1, O=Certainly, C=US\n+Issuer: CN=Certainly Root R1, O=Certainly, C=US\n+Serial number: 8e0ff94b907168653354f4d44439b7e0\n+Valid from: Thu Apr 01 00:00:00 GMT 2021 until: Sun Apr 01 00:00:00 GMT 2046\n+Signature algorithm name: SHA256withRSA\n+Subject Public Key Algorithm: 4096-bit RSA key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIIFRzCCAy+gAwIBAgIRAI4P+UuQcWhlM1T01EQ5t+AwDQYJKoZIhvcNAQELBQAw\n+PTELMAkGA1UEBhMCVVMxEjAQBgNVBAoTCUNlcnRhaW5seTEaMBgGA1UEAxMRQ2Vy\n+dGFpbmx5IFJvb3QgUjEwHhcNMjEwNDAxMDAwMDAwWhcNNDYwNDAxMDAwMDAwWjA9\n+MQswCQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0\n+YWlubHkgUm9vdCBSMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANA2\n+1B\/q3avk0bbm+yLA3RMNansiExyXPGhjZjKcA7WNpIGD2ngwEc\/csiu+kr+O5MQT\n+vqRoTNoCaBZ0vrLdBORrKt03H2As2\/X3oXyVtwxwhi7xOu9S98zTm\/mLvg7fMbed\n+aFySpvXl8wo0tf97ouSHocavFwDvA5HtqRxOcT3Si2yJ9HiG5mpJoM610rCrm\/b0\n+1C7jcvk2xusVtyWMOvwlDbMicyF0yEqWYZL1LwsYpfSt4u5BvQF5+paMjRcCMLT5\n+r3gajLQ2EBAHBXDQ9DGQilHFhiZ5shGIXsXwClTNSaa\/ApzSRKft43jvRl5tcdF5\n+cBxGX1HpyTfcX35pe0HfNEXgO4T0oYoKNp43zGJS4YkNKPl6I7ENPT2a\/Z2B7yyQ\n+wHtETrtJ4A5KVpK8y7XdeReJkd5hiXSSqOMyhb5OhaRLWcsrxXiOcVTQAjeZjOVJ\n+6uBUcqQRBi8LjMFbvrWhsFNunLhgkR9Za\/kt9JQKl7XsxXYDVBtlUrpMklZRNaBA\n+2CnbrlJ2Oy0wQJuK0EJWtLeIAaSHO1OWzaMWj\/Nmqhexx2DgwUMFDO6bW2BvBlyH\n+Wyf5QBGenDPBt+U1VwV\/J84XIIwc\/PH72jEpSe31C4SnT8H2TsIonPru4K8H+zMR\n+eiFPCyEQtkA6qyI6BJyLm4SGcprSp6XEtHWRqSsjAgMBAAGjQjBAMA4GA1UdDwEB\n+\/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH\/MB0GA1UdDgQWBBTgqj8ljZ9EXME66C6u\n+d0yEPmcM9DANBgkqhkiG9w0BAQsFAAOCAgEAuVevuBLaV4OPaAszHQNTVfSVcOQr\n+PbA56\/qJYv331hgELyE03fFo8NWWWt7CgKPBjcZq91l3rhVkz1t5BXdm6ozTaw3d\n+8VkswTOlMIAVRQdFGjEitpIAq5lNOo93r6kiyi9jyhXWx8bwPWz8HA2YEGGeEaIi\n+1wrykXprOQ4vMMM2SZ\/g6Q8CRFA3lFV96p\/2O7qUpUzpvD5RtOjKkjZUbVwlKNrd\n+rRT90+7iIgXr0PK3aBLXWopBGsaSpVo7Y0VPv+E6dyIvXL9G+VoDhRNCX8reU9di\n+taY1BMJH\/5n9hN9czulegChB8n3nHpDYT3Y+gjwN\/KUD+nsa2UUeYNrEjvn8K8l7\n+lcUq\/6qJ34IxD3L\/DCfXCh5WAFAeDJDBlrXYFIW7pw0WwfgHJBu6haEaBQmAupVj\n+yTrsJZ9\/nbqkRxWbRHDxakvWOF5D8xh+UG7pWijmZeZ3Gzr9Hb4DJqPb1OG7fpYn\n+Kx3upPvaJVQTA945xsMfTZDsjxtK0hzthZU4UHlG1sGQUDGpXJpuHfUzVounmdLy\n+yCwzk5Iwx06MZTMQZBf9JBeW0Y3COmor6xOLRPIh80oat3df1+2IpHLlOR+Vnb5n\n+wXARPbv0+Em34yaXOp\/SX3z7wJl8OSngex2\/DaeP0ik0biQVy96QXr8axGbqwua6\n+OV+KmalBWQewLK8=\n+-----END CERTIFICATE-----\n","filename":"make\/data\/cacerts\/certainlyrootr1","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -51,1 +51,1 @@\n-  ADLC_CFLAGS += $(ADLC_LANGSTD_CXXFLAG)\n+  ADLC_CFLAGS += $(ADLC_LANGSTD_CXXFLAGS)\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,2 +146,4 @@\n-  \/\/ Ampere CPUs: Ampere-1 and Ampere-1A\n-  if (_cpu == CPU_AMPERE && ((_model == CPU_MODEL_AMPERE_1) || (_model == CPU_MODEL_AMPERE_1A))) {\n+  \/\/ Ampere CPUs\n+  if (_cpu == CPU_AMPERE && ((_model == CPU_MODEL_AMPERE_1)  ||\n+                             (_model == CPU_MODEL_AMPERE_1A) ||\n+                             (_model == CPU_MODEL_AMPERE_1B))) {\n@@ -151,0 +153,6 @@\n+    if (FLAG_IS_DEFAULT(OnSpinWaitInst)) {\n+      FLAG_SET_DEFAULT(OnSpinWaitInst, \"isb\");\n+    }\n+    if (FLAG_IS_DEFAULT(OnSpinWaitInstCount)) {\n+      FLAG_SET_DEFAULT(OnSpinWaitInstCount, 2);\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -110,2 +110,3 @@\n-    CPU_MODEL_AMPERE_1A = 0xac4  \/* CPU implementer is CPU_AMPERE *\/\n-  };\n+    CPU_MODEL_AMPERE_1A = 0xac4, \/* CPU implementer is CPU_AMPERE *\/\n+    CPU_MODEL_AMPERE_1B = 0xac5  \/* AMPERE_1B core Implements ARMv8.7 with CSSC, MTE, SM3\/SM4 extensions *\/\n+};\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-void G1Allocator::reuse_retained_old_region(G1EvacuationInfo& evacuation_info,\n+void G1Allocator::reuse_retained_old_region(G1EvacuationInfo* evacuation_info,\n@@ -123,1 +123,1 @@\n-    evacuation_info.set_alloc_regions_used_before(retained_region->used());\n+    evacuation_info->set_alloc_regions_used_before(retained_region->used());\n@@ -127,1 +127,1 @@\n-void G1Allocator::init_gc_alloc_regions(G1EvacuationInfo& evacuation_info) {\n+void G1Allocator::init_gc_alloc_regions(G1EvacuationInfo* evacuation_info) {\n@@ -143,1 +143,1 @@\n-void G1Allocator::release_gc_alloc_regions(G1EvacuationInfo& evacuation_info) {\n+void G1Allocator::release_gc_alloc_regions(G1EvacuationInfo* evacuation_info) {\n@@ -149,2 +149,2 @@\n-  evacuation_info.set_allocation_regions(survivor_region_count +\n-                                         old_gc_alloc_region()->count());\n+  evacuation_info->set_allocation_regions(survivor_region_count +\n+                                          old_gc_alloc_region()->count());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-  void reuse_retained_old_region(G1EvacuationInfo& evacuation_info,\n+  void reuse_retained_old_region(G1EvacuationInfo* evacuation_info,\n@@ -108,2 +108,2 @@\n-  void init_gc_alloc_regions(G1EvacuationInfo& evacuation_info);\n-  void release_gc_alloc_regions(G1EvacuationInfo& evacuation_info);\n+  void init_gc_alloc_regions(G1EvacuationInfo* evacuation_info);\n+  void release_gc_alloc_regions(G1EvacuationInfo* evacuation_info);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -982,1 +982,5 @@\n-void G1CollectedHeap::print_hrm_post_compaction() {\n+void G1CollectedHeap::print_heap_after_full_collection() {\n+  \/\/ Post collection region logging.\n+  \/\/ We should do this after we potentially resize the heap so\n+  \/\/ that all the COMMIT \/ UNCOMMIT events are generated before\n+  \/\/ the compaction events.\n@@ -1094,11 +1098,0 @@\n-void G1CollectedHeap::print_heap_after_full_collection(G1HeapTransition* heap_transition) {\n-  \/\/ Post collection logging.\n-  \/\/ We should do this after we potentially resize the heap so\n-  \/\/ that all the COMMIT \/ UNCOMMIT events are generated before\n-  \/\/ the compaction events.\n-  print_hrm_post_compaction();\n-  heap_transition->print();\n-  print_heap_after_gc();\n-  print_heap_regions();\n-}\n-\n@@ -1118,1 +1111,1 @@\n-  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximum_compaction);\n+  G1FullGCMark gc_mark;\n@@ -1120,0 +1113,1 @@\n+  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximum_compaction);\n@@ -2569,3 +2563,0 @@\n-  \/\/ This summary needs to be printed before incrementing total collections.\n-  rem_set()->print_periodic_summary_info(\"Before GC RS summary\", total_collections());\n-\n@@ -2604,3 +2595,0 @@\n-  \/\/ We are at the end of the GC. Total collections has already been increased.\n-  rem_set()->print_periodic_summary_info(\"After GC RS summary\", total_collections() - 1);\n-\n@@ -2620,3 +2608,0 @@\n-  \/\/ Print NUMA statistics.\n-  _numa->print_statistics();\n-\n@@ -2808,1 +2793,1 @@\n-void G1CollectedHeap::calculate_collection_set(G1EvacuationInfo& evacuation_info, double target_pause_time_ms) {\n+void G1CollectedHeap::calculate_collection_set(G1EvacuationInfo* evacuation_info, double target_pause_time_ms) {\n@@ -2811,1 +2796,1 @@\n-  evacuation_info.set_collectionset_regions(collection_set()->region_length() +\n+  evacuation_info->set_collectionset_regions(collection_set()->region_length() +\n@@ -2906,0 +2891,58 @@\n+G1HeapPrinterMark::G1HeapPrinterMark(G1CollectedHeap* g1h) : _g1h(g1h), _heap_transition(g1h) {\n+  \/\/ This summary needs to be printed before incrementing total collections.\n+  _g1h->rem_set()->print_periodic_summary_info(\"Before GC RS summary\", _g1h->total_collections());\n+  _g1h->print_heap_before_gc();\n+  _g1h->print_heap_regions();\n+}\n+\n+G1HeapPrinterMark::~G1HeapPrinterMark() {\n+  _g1h->policy()->print_age_table();\n+  \/\/ not (yet) in 17u: _g1h->rem_set()->print_coarsen_stats();\n+  \/\/ We are at the end of the GC. Total collections has already been increased.\n+  _g1h->rem_set()->print_periodic_summary_info(\"After GC RS summary\", _g1h->total_collections() - 1);\n+\n+  _heap_transition.print();\n+  _g1h->print_heap_regions();\n+  _g1h->print_heap_after_gc();\n+  \/\/ Print NUMA statistics.\n+  _g1h->numa()->print_statistics();\n+}\n+\n+G1JFRTracerMark::G1JFRTracerMark(STWGCTimer* timer, GCTracer* tracer) :\n+  _timer(timer), _tracer(tracer) {\n+\n+  _timer->register_gc_start();\n+  _tracer->report_gc_start(G1CollectedHeap::heap()->gc_cause(), _timer->gc_start());\n+  G1CollectedHeap::heap()->trace_heap_before_gc(_tracer);\n+}\n+\n+G1JFRTracerMark::~G1JFRTracerMark() {\n+  G1CollectedHeap::heap()->trace_heap_after_gc(_tracer);\n+  _timer->register_gc_end();\n+  _tracer->report_gc_end(_timer->gc_end(), _timer->time_partitions());\n+}\n+\n+class G1YoungGCJFRTracerMark : public G1JFRTracerMark {\n+  G1EvacuationInfo _evacuation_info;\n+\n+  G1NewTracer* tracer() const { return (G1NewTracer*)_tracer; }\n+\n+public:\n+\n+  G1EvacuationInfo* evacuation_info() { return &_evacuation_info; }\n+\n+  G1YoungGCJFRTracerMark(STWGCTimer* gc_timer_stw, G1NewTracer* gc_tracer_stw, GCCause::Cause cause) :\n+    G1JFRTracerMark(gc_timer_stw, gc_tracer_stw), _evacuation_info() { }\n+\n+  void report_pause_type(G1GCPauseType type) {\n+    tracer()->report_young_gc_pause(type);\n+  }\n+\n+  ~G1YoungGCJFRTracerMark() {\n+    G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+\n+    tracer()->report_evacuation_info(&_evacuation_info);\n+    tracer()->report_tenuring_threshold(g1h->policy()->tenuring_threshold());\n+  }\n+};\n+\n@@ -2914,2 +2957,0 @@\n-  gc_tracer_report_gc_start();\n-\n@@ -2918,4 +2959,0 @@\n-  print_heap_before_gc();\n-  print_heap_regions();\n-  trace_heap_before_gc(_gc_tracer_stw);\n-\n@@ -2947,2 +2984,0 @@\n-    G1EvacuationInfo evacuation_info;\n-\n@@ -2962,0 +2997,2 @@\n+    \/\/ JFR\n+    G1YoungGCJFRTracerMark jtm(_gc_timer_stw, _gc_tracer_stw, gc_cause());\n@@ -2965,0 +3002,5 @@\n+    \/\/ Create the heap printer before internal pause timing to have\n+    \/\/ heap information printed as last part of detailed GC log.\n+    G1HeapPrinterMark hpm(this);\n+    \/\/ Young GC internal pause timing\n+    \/\/ Not (yet) in 17: G1YoungGCNotifyPauseMark npm;\n@@ -2966,1 +3008,3 @@\n-    G1HeapTransition heap_transition(this);\n+    \/\/ Verification may use the gang workers, so they must be set up before.\n+    \/\/ Individual parallel phases may override this.\n+    \/\/ Not (yet) in 17: set_young_collection_default_active_worker_threads();\n@@ -2998,1 +3042,1 @@\n-        calculate_collection_set(evacuation_info, target_pause_time_ms);\n+        calculate_collection_set(jtm.evacuation_info(), target_pause_time_ms);\n@@ -3006,1 +3050,1 @@\n-        pre_evacuate_collection_set(evacuation_info, &per_thread_states);\n+        pre_evacuate_collection_set(jtm.evacuation_info(), &per_thread_states);\n@@ -3015,1 +3059,1 @@\n-        post_evacuate_collection_set(evacuation_info, &rdcqs, &per_thread_states);\n+        post_evacuate_collection_set(jtm.evacuation_info(), &rdcqs, &per_thread_states);\n@@ -3034,1 +3078,1 @@\n-        _gc_tracer_stw->report_young_gc_pause(collector_state()->young_gc_pause_type(concurrent_operation_is_full_mark));\n+        jtm.report_pause_type(collector_state()->young_gc_pause_type(concurrent_operation_is_full_mark));\n@@ -3052,1 +3096,0 @@\n-    heap_transition.print();\n@@ -3060,4 +3103,0 @@\n-    print_heap_after_gc();\n-    print_heap_regions();\n-    trace_heap_after_gc(_gc_tracer_stw);\n-\n@@ -3069,2 +3108,0 @@\n-\n-    gc_tracer_report_gc_end(concurrent_operation_is_full_mark, evacuation_info);\n@@ -3493,1 +3530,1 @@\n-void G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo& evacuation_info, G1ParScanThreadStateSet* per_thread_states) {\n+void G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo* evacuation_info, G1ParScanThreadStateSet* per_thread_states) {\n@@ -3759,1 +3796,1 @@\n-void G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo& evacuation_info,\n+void G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo* evacuation_info,\n@@ -3780,1 +3817,1 @@\n-  post_evacuate_cleanup_2(&_preserved_marks_set, rdcqs, &evacuation_info, per_thread_states->surviving_young_words());\n+  post_evacuate_cleanup_2(&_preserved_marks_set, rdcqs, evacuation_info, per_thread_states->surviving_young_words());\n@@ -3788,4 +3825,2 @@\n-  evacuation_info.set_collectionset_used_before(collection_set()->bytes_used_before());\n-  evacuation_info.set_bytes_used(_bytes_used_during_gc);\n-\n-  policy()->print_age_table();\n+  evacuation_info->set_collectionset_used_before(collection_set()->bytes_used_before());\n+  evacuation_info->set_bytes_used(_bytes_used_during_gc);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":86,"deletions":51,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -152,0 +152,1 @@\n+  friend class G1HeapPrinterMark;\n@@ -307,4 +308,0 @@\n-  \/\/ If the HR printer is active, dump the state of the regions in the\n-  \/\/ heap after a compaction.\n-  void print_hrm_post_compaction();\n-\n@@ -532,1 +529,1 @@\n-  void print_heap_after_full_collection(G1HeapTransition* heap_transition);\n+  void print_heap_after_full_collection();\n@@ -802,1 +799,1 @@\n-  void calculate_collection_set(G1EvacuationInfo& evacuation_info, double target_pause_time_ms);\n+  void calculate_collection_set(G1EvacuationInfo* evacuation_info, double target_pause_time_ms);\n@@ -828,2 +825,2 @@\n-  void pre_evacuate_collection_set(G1EvacuationInfo& evacuation_info, G1ParScanThreadStateSet* pss);\n-  void post_evacuate_collection_set(G1EvacuationInfo& evacuation_info,\n+  void pre_evacuate_collection_set(G1EvacuationInfo* evacuation_info, G1ParScanThreadStateSet* pss);\n+  void post_evacuate_collection_set(G1EvacuationInfo* evacuation_info,\n@@ -1469,0 +1466,1 @@\n+\n@@ -1486,0 +1484,22 @@\n+\/\/ Scoped object that performs common pre- and post-gc heap printing operations.\n+class G1HeapPrinterMark : public StackObj {\n+  G1CollectedHeap* _g1h;\n+  G1HeapTransition _heap_transition;\n+\n+public:\n+  G1HeapPrinterMark(G1CollectedHeap* g1h);\n+  ~G1HeapPrinterMark();\n+};\n+\n+\/\/ Scoped object that performs common pre- and post-gc operations related to\n+\/\/ JFR events.\n+class G1JFRTracerMark : public StackObj {\n+protected:\n+  STWGCTimer* _timer;\n+  GCTracer* _tracer;\n+\n+public:\n+  G1JFRTracerMark(STWGCTimer* timer, GCTracer* tracer);\n+  ~G1JFRTracerMark();\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -174,3 +174,0 @@\n-  _heap->print_heap_before_gc();\n-  _heap->print_heap_regions();\n-\n@@ -232,1 +229,1 @@\n-  _heap->print_heap_after_full_collection(scope()->heap_transition());\n+  _heap->print_heap_after_full_collection();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#include \"gc\/shared\/gcId.hpp\"\n+#include \"gc\/shared\/gcTraceTime.hpp\"\n@@ -58,0 +60,10 @@\n+\/\/ Full GC Mark that holds GC id and CPU time trace. Needs to be separate\n+\/\/ from the G1FullCollector and G1FullGCScope to allow the Full GC logging\n+\/\/ to have the same structure as the Young GC logging.\n+class G1FullGCMark : StackObj {\n+  GCIdMark       _gc_id;\n+  GCTraceCPUTime _cpu_time;\n+public:\n+  G1FullGCMark() : _gc_id(), _cpu_time() { }\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,10 @@\n+G1FullGCJFRTracerMark::G1FullGCJFRTracerMark(STWGCTimer* timer, GCTracer* tracer)\n+  : G1JFRTracerMark(timer, tracer) {\n+\n+  G1CollectedHeap::heap()->pre_full_gc_dump(_timer);\n+}\n+\n+G1FullGCJFRTracerMark::~G1FullGCJFRTracerMark() {\n+  G1CollectedHeap::heap()->post_full_gc_dump(_timer);\n+}\n+\n@@ -35,1 +45,0 @@\n-    _gc_id(),\n@@ -40,1 +49,1 @@\n-    _cpu_time(),\n+    _tracer_mark(&_timer, &_tracer),\n@@ -43,1 +52,1 @@\n-    _heap_transition(_g1h),\n+    _heap_printer(_g1h),\n@@ -46,6 +55,1 @@\n-                                 (1 - MarkSweepDeadRatio \/ 100.0) * HeapRegion::GrainWords) {\n-  _timer.register_gc_start();\n-  _tracer.report_gc_start(_g1h->gc_cause(), _timer.gc_start());\n-  _g1h->pre_full_gc_dump(&_timer);\n-  _g1h->trace_heap_before_gc(&_tracer);\n-}\n+                                 (1 - MarkSweepDeadRatio \/ 100.0) * HeapRegion::GrainWords) { }\n@@ -59,4 +63,0 @@\n-  _g1h->trace_heap_after_gc(&_tracer);\n-  _g1h->post_full_gc_dump(&_timer);\n-  _timer.register_gc_end();\n-  _tracer.report_gc_end(_timer.gc_end(), _timer.time_partitions());\n@@ -81,4 +81,0 @@\n-G1HeapTransition* G1FullGCScope::heap_transition() {\n-  return &_heap_transition;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.cpp","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-#include \"gc\/shared\/gcId.hpp\"\n-#include \"gc\/shared\/gcTraceTime.hpp\"\n@@ -42,0 +40,7 @@\n+class G1FullGCJFRTracerMark : public G1JFRTracerMark {\n+public:\n+\n+  G1FullGCJFRTracerMark(STWGCTimer* timer, GCTracer* tracer);\n+  ~G1FullGCJFRTracerMark();\n+};\n+\n@@ -47,1 +52,0 @@\n-  GCIdMark                _gc_id;\n@@ -52,1 +56,1 @@\n-  GCTraceCPUTime          _cpu_time;\n+  G1FullGCJFRTracerMark   _tracer_mark;\n@@ -55,1 +59,1 @@\n-  G1HeapTransition        _heap_transition;\n+  G1HeapPrinterMark       _heap_printer;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"runtime\/atomic.hpp\"\n@@ -353,2 +354,2 @@\n-  int64_t get_java_period() const { return _java_period_millis; };\n-  int64_t get_native_period() const { return _native_period_millis; };\n+  int64_t get_java_period() const { return Atomic::load(&_java_period_millis); };\n+  int64_t get_native_period() const { return Atomic::load(&_native_period_millis); };\n@@ -415,1 +416,1 @@\n-  _java_period_millis = period_millis;\n+  Atomic::store(&_java_period_millis, period_millis);\n@@ -420,1 +421,1 @@\n-  _native_period_millis = period_millis;\n+  Atomic::store(&_native_period_millis, period_millis);\n@@ -499,2 +500,11 @@\n-    const int64_t java_period_millis = _java_period_millis == 0 ? max_jlong : MAX2<int64_t>(_java_period_millis, 1);\n-    const int64_t native_period_millis = _native_period_millis == 0 ? max_jlong : MAX2<int64_t>(_native_period_millis, 1);\n+\n+    int64_t java_period_millis = get_java_period();\n+    java_period_millis = java_period_millis == 0 ? max_jlong : MAX2<int64_t>(java_period_millis, 1);\n+    int64_t native_period_millis = get_native_period();\n+    native_period_millis = native_period_millis == 0 ? max_jlong : MAX2<int64_t>(native_period_millis, 1);\n+\n+    \/\/ If both periods are max_jlong, it implies the sampler is in the process of\n+    \/\/ disenrolling. Loop back for graceful disenroll by means of the semaphore.\n+    if (java_period_millis == max_jlong && native_period_millis == max_jlong) {\n+      continue;\n+    }\n@@ -519,1 +529,1 @@\n-      os::naked_short_sleep(sleep_to_next);\n+      os::naked_sleep(sleep_to_next);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -500,2 +500,2 @@\n-  \/\/ but not if I2 is a constant.\n-  if( n_op == Op_AddP ) {\n+  \/\/ but not if I2 is a constant. Skip for irreducible loops.\n+  if (n_op == Op_AddP && n_loop->_head->is_Loop()) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -598,3 +598,0 @@\n-  \/\/ !important! make sure all to call thread->set_in_asgct(false) before every return\n-  thread->set_in_asgct(true);\n-\n@@ -661,1 +658,0 @@\n-  thread->set_in_asgct(false);\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1479,0 +1479,4 @@\n+  \/\/ These objects may escape when we return to Interpreter after deoptimization.\n+  \/\/ We need barrier so that stores that initialize these objects can't be reordered\n+  \/\/ with subsequent stores that make these objects accessible by other threads.\n+  OrderAccess::storestore();\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2100,1 +2100,1 @@\n-  product(uint, TrimNativeHeapInterval, 0, EXPERIMENTAL,                    \\\n+  product(uint, TrimNativeHeapInterval, 0,                                  \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2556,1 +2556,1 @@\n-            h = h * 43 + Objects.hashCode(e.name());\n+            h += e.name().hashCode();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,19 +34,0 @@\n- *\n- * SunJSSE now supports an experimental FIPS compliant mode when used with an\n- * appropriate FIPS certified crypto provider. In FIPS mode, we:\n- *  . allow only TLS 1.0 or later\n- *  . allow only FIPS approved ciphersuites\n- *  . perform all crypto in the FIPS crypto provider\n- *\n- * It is currently not possible to use both FIPS compliant SunJSSE and\n- * standard JSSE at the same time because of the various static data structures\n- * we use.\n- *\n- * However, we do want to allow FIPS mode to be enabled at runtime and without\n- * editing the java.security file. That means we need to allow\n- * Security.removeProvider(\"SunJSSE\") to work, which creates an instance of\n- * this class in non-FIPS mode. That is why we delay the selection of the mode\n- * as long as possible. This is until we open an SSL\/TLS connection and the\n- * data structures need to be initialized or until SunJSSE is initialized in\n- * FIPS mode.\n- *\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SunJSSE.java","additions":1,"deletions":20,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1543,0 +1543,11 @@\n+.B \\f[CB]-XX:TrimNativeHeapInterval=\\f[R]\\f[I]millis\\f[R]\n+Interval, in ms, at which the JVM will trim the native heap.\n+Lower values will reclaim memory more eagerly at the cost of higher\n+overhead.\n+A value of 0 (default) disables native heap trimming.\n+Native heap trimming is performed in a dedicated thread.\n+.RS\n+.PP\n+This option is only supported on Linux with GNU C Library (glibc).\n+.RE\n+.TP\n","filename":"src\/java.base\/share\/man\/java.1","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,0 +191,5 @@\n+    cmsUInt32Number dwFlags = 0;\n+    if (T_EXTRA(inFormatter) > 0 && T_EXTRA(outFormatter) > 0) {\n+        dwFlags |= cmsFLAGS_COPY_ALPHA;\n+    }\n+\n@@ -192,1 +197,1 @@\n-        inFormatter, outFormatter, renderType, cmsFLAGS_COPY_ALPHA);\n+        inFormatter, outFormatter, renderType, dwFlags);\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import static java.util.concurrent.TimeUnit.SECONDS;\n@@ -31,0 +32,3 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n@@ -217,0 +221,66 @@\n+    private static volatile Boolean shouldDisableSystemTray = null;\n+\n+    \/**\n+     * There is an issue displaying the xembed icons in appIndicators\n+     * area with certain Gnome Shell versions.\n+     * To avoid any loss of quality of service, we are disabling\n+     * SystemTray support in such cases.\n+     *\n+     * @return true if system tray should be disabled\n+     *\/\n+    public boolean shouldDisableSystemTray() {\n+        Boolean result = shouldDisableSystemTray;\n+        if (result == null) {\n+            synchronized (GTK_LOCK) {\n+                result = shouldDisableSystemTray;\n+                if (result == null) {\n+                    if (\"gnome\".equals(getDesktop())) {\n+                        @SuppressWarnings(\"removal\")\n+                        Integer gnomeShellMajorVersion =\n+                                AccessController\n+                                        .doPrivileged((PrivilegedAction<Integer>)\n+                                                this::getGnomeShellMajorVersion);\n+\n+                        if (gnomeShellMajorVersion == null\n+                                || gnomeShellMajorVersion < 45) {\n+\n+                            return shouldDisableSystemTray = true;\n+                        }\n+                    }\n+                    shouldDisableSystemTray = result = false;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Integer getGnomeShellMajorVersion() {\n+        try {\n+            Process process =\n+                new ProcessBuilder(\"\/usr\/bin\/gnome-shell\", \"--version\")\n+                        .start();\n+            try (InputStreamReader isr = new InputStreamReader(process.getInputStream());\n+                 BufferedReader reader = new BufferedReader(isr)) {\n+\n+                if (process.waitFor(2, SECONDS) &&  process.exitValue() == 0) {\n+                    String line = reader.readLine();\n+                    if (line != null) {\n+                        String[] versionComponents = line\n+                                .replaceAll(\"[^\\\\d.]\", \"\")\n+                                .split(\"\\\\.\");\n+\n+                        if (versionComponents.length >= 1) {\n+                            return Integer.parseInt(versionComponents[0]);\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (IOException\n+                 | InterruptedException\n+                 | IllegalThreadStateException\n+                 | NumberFormatException ignored) {\n+        }\n+\n+        return null;\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":71,"deletions":1,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import sun.awt.UNIXToolkit;\n@@ -51,0 +52,1 @@\n+    private final boolean shouldDisableSystemTray;\n@@ -56,1 +58,2 @@\n-        selection.addSelectionListener(this);\n+        UNIXToolkit tk = (UNIXToolkit)Toolkit.getDefaultToolkit();\n+        shouldDisableSystemTray = tk.shouldDisableSystemTray();\n@@ -58,2 +61,2 @@\n-        long selection_owner = selection.getOwner(SCREEN);\n-        available = (selection_owner != XConstants.None);\n+        if (!shouldDisableSystemTray) {\n+            selection.addSelectionListener(this);\n@@ -61,2 +64,6 @@\n-        if (log.isLoggable(PlatformLogger.Level.FINE)) {\n-            log.fine(\" check if system tray is available. selection owner: \" + selection_owner);\n+            long selection_owner = selection.getOwner(SCREEN);\n+            available = (selection_owner != XConstants.None);\n+\n+            if (log.isLoggable(PlatformLogger.Level.FINE)) {\n+                log.fine(\" check if system tray is available. selection owner: \" + selection_owner);\n+            }\n@@ -67,0 +74,4 @@\n+        if (shouldDisableSystemTray) {\n+            return;\n+        }\n+\n@@ -80,0 +91,4 @@\n+        if (shouldDisableSystemTray) {\n+            return;\n+        }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XSystemTrayPeer.java","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+typedef HTHEME(__stdcall *PFNOPENTHEMEDATA)(HWND hwnd, LPCWSTR pszClassList);\n@@ -99,0 +100,1 @@\n+static PFNOPENTHEMEDATA OpenThemeDataFunc = NULL;\n@@ -118,0 +120,1 @@\n+constexpr unsigned int defaultDPI = 96;\n@@ -119,1 +122,2 @@\n-BOOL InitThemes() {\n+\n+static BOOL InitThemes() {\n@@ -125,0 +129,2 @@\n+        OpenThemeDataFunc = (PFNOPENTHEMEDATA)GetProcAddress(hModThemes,\n+                                                         \"OpenThemeData\");\n@@ -161,1 +167,1 @@\n-        if(OpenThemeDataForDpiFunc\n+        if((OpenThemeDataForDpiFunc || OpenThemeDataFunc)\n@@ -182,4 +188,6 @@\n-              constexpr unsigned int defaultDPI = 96;\n-              HTHEME hTheme = OpenThemeDataForDpiFunc (\n-                              AwtToolkit::GetInstance().GetHWnd(),\n-                              L\"Button\", defaultDPI);\n+              HTHEME hTheme = OpenThemeDataForDpiFunc\n+                              ? OpenThemeDataForDpiFunc(AwtToolkit::GetInstance().GetHWnd(),\n+                                                        L\"Button\", defaultDPI)\n+                              : OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(),\n+                                                  L\"Button\");\n+\n@@ -255,0 +263,1 @@\n+\n@@ -257,3 +266,4 @@\n-    HTHEME htheme = OpenThemeDataForDpiFunc(\n-                    AwtToolkit::GetInstance().GetHWnd(),\n-                    str, dpi);\n+    HTHEME htheme = OpenThemeDataForDpiFunc\n+                    ? OpenThemeDataForDpiFunc(AwtToolkit::GetInstance().GetHWnd(), str, dpi)\n+                    : OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(), str);\n+\n@@ -439,2 +449,0 @@\n-    rect.bottom = rectBottom;\n-    rect.right = rectRight;\n@@ -442,0 +450,7 @@\n+    if (OpenThemeDataForDpiFunc) {\n+        rect.bottom = rectBottom;\n+        rect.right = rectRight;\n+    } else {\n+        rect.bottom = h;\n+        rect.right = w;\n+    }\n@@ -464,0 +479,22 @@\n+static void rescale(SIZE *size) {\n+    static int dpiX = -1;\n+    static int dpiY = -1;\n+\n+    if (dpiX == -1 || dpiY == -1) {\n+        HWND hWnd = ::GetDesktopWindow();\n+        HDC hDC = ::GetDC(hWnd);\n+        dpiX = ::GetDeviceCaps(hDC, LOGPIXELSX);\n+        dpiY = ::GetDeviceCaps(hDC, LOGPIXELSY);\n+        ::ReleaseDC(hWnd, hDC);\n+    }\n+\n+    if (dpiX !=0 && dpiX != defaultDPI) {\n+        float invScaleX = (float) defaultDPI \/ dpiX;\n+        size->cx = (int) round(size->cx * invScaleX);\n+    }\n+    if (dpiY != 0 && dpiY != defaultDPI) {\n+        float invScaleY = (float) defaultDPI \/ dpiY;\n+        size->cy = (int) round(size->cy * invScaleY);\n+    }\n+}\n+\n@@ -755,0 +792,4 @@\n+            if (!OpenThemeDataForDpiFunc) {\n+                rescale(&size);\n+            }\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":52,"deletions":11,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -405,1 +405,0 @@\n-            table.put(HtmlAttr.ARIA_LABELLEDBY, HtmlIds.forTab(id, tabIndex).name());\n@@ -418,1 +417,2 @@\n-                    .put(HtmlAttr.ROLE, \"tabpanel\");\n+                    .put(HtmlAttr.ROLE, \"tabpanel\")\n+                    .put(HtmlAttr.ARIA_LABELLEDBY, HtmlIds.forTab(id, 0).name());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    document.querySelector('div#' + tableId +' .summary-table')\n+    document.getElementById(tableId + '.tabpanel')\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/script.js","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,2 @@\n-keys=stress headful intermittent randomness cgroups\n+# external-dep:         test requires external dependencies to work\n+keys=stress headful intermittent randomness cgroups external-dep\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,0 +24,5 @@\n+# All tests\n+\n+all = \\\n+  :hotspot_all\n+\n@@ -31,0 +36,2 @@\n+# Component test groups\n+\n@@ -219,0 +226,1 @@\n+  applications\/ctw\/modules \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        revision = \"0.5\", extension = \"jar\", unpack = false)\n+        revision = \"0.16\", extension = \"jar\", unpack = false)\n@@ -50,0 +50,4 @@\n+    \/\/ Allow to configure jcstress mode parameter.\n+    \/\/ Test mode preset: sanity, quick, default, tough, stress.\n+    public static final String MODE_PROPERTY = \"jcstress.mode\";\n+\n@@ -58,1 +62,1 @@\n-        return artifacts.get(\"org.openjdk.jcstress.jcstress-tests-all-0.5\")\n+        return artifacts.get(\"org.openjdk.jcstress.jcstress-tests-all-0.16\")\n@@ -107,0 +111,4 @@\n+\n+        \/\/ The \"default\" preset might take days for some tests\n+        \/\/ so use quick testing by default.\n+        String mode = \"quick\";\n@@ -108,0 +116,5 @@\n+            if(jvmArg.startsWith(\"-D\" + MODE_PROPERTY)) {\n+                String[] pair = jvmArg.split(\"=\", 2);\n+                mode = pair[1];\n+                continue;\n+            }\n@@ -112,0 +125,9 @@\n+        extraFlags.add(\"-m\");\n+        extraFlags.add(mode);\n+\n+        extraFlags.add(\"-sc\");\n+        extraFlags.add(\"false\");\n+\n+        extraFlags.add(\"-af\");\n+        extraFlags.add(\"GLOBAL\");\n+\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/JcstressRunner.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,0 +99,1 @@\n+            + \" * @key external-dep\\n\"\n@@ -125,1 +126,1 @@\n-                .skip(4) \/\/ skip first 4 lines: name, -{80}, revision and empty line\n+                .filter(s -> s.startsWith(\"org.openjdk.jcstress.tests\"))\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/TestGenerator.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/accessAtomic.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/acqrel.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/atomicity.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/atomics.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/causality.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/coherence.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* DO NOT MODIFY THIS FILE. GENERATED BY applications.jcstress.TestGenerator *\/\n+\n+\/**\n+ * @test collections\n+ * @key external-dep\n+ * @library \/test\/lib \/\n+ * @run driver\/timeout=21600 applications.jcstress.JcstressRunner -v -t org.openjdk.jcstress.tests.collections\\.\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/collections.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/copy.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/countdownlatch.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/defaultValues.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/executors.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/fences.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/future.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/init.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/initClass.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/initLen.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/interrupt.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/locks.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/memeffects.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* DO NOT MODIFY THIS FILE. GENERATED BY applications.jcstress.TestGenerator *\/\n+\n+\/**\n+ * @test mxbeans\n+ * @key external-dep\n+ * @library \/test\/lib \/\n+ * @run driver\/timeout=21600 applications.jcstress.JcstressRunner -v -t org.openjdk.jcstress.tests.mxbeans\\.\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/mxbeans.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* DO NOT MODIFY THIS FILE. GENERATED BY applications.jcstress.TestGenerator *\/\n+\n+\/**\n+ * @test oota\n+ * @key external-dep\n+ * @library \/test\/lib \/\n+ * @run driver\/timeout=21600 applications.jcstress.JcstressRunner -v -t org.openjdk.jcstress.tests.oota\\.\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/oota.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/seqcst.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/singletons.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/strings.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/tearing.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/threadlocal.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/unsafe.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/varhandles.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/volatiles.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @key external-dep\n","filename":"test\/hotspot\/jtreg\/applications\/scimark\/Scimark.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8326638\n+ * @summary Test handling of irreducible loops in PhaseIdealLoop::remix_address_expressions.\n+ * @run main\/othervm -XX:-TieredCompilation -Xbatch\n+ *                   -XX:CompileCommand=compileonly,TestRemixAddressExpressionsWithIrreducibleLoop::test\n+ *                   TestRemixAddressExpressionsWithIrreducibleLoop\n+ *\/\n+\n+public class TestRemixAddressExpressionsWithIrreducibleLoop {\n+\n+    public static void main(String[] args) {\n+        test(\"4\");\n+    }\n+\n+    public static void test(String arg) {\n+        for (int i = 0; i < 100_000; ++i) {\n+            int j = 0;\n+            while (true) {\n+                boolean tmp = \"1\\ufff0\".startsWith(arg, 2 - arg.length());\n+                if (j++ > 100)\n+                    break;\n+            }\n+        loop:\n+            while (i >= 100) {\n+                for (int i2 = 0; i2 < 1; i2 = 1)\n+                    if (j > 300)\n+                        break loop;\n+                j++;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemixAddressExpressionsWithIrreducibleLoop.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:+UnlockExperimentalVMOptions -XX:TrimNativeHeapInterval=100\n+ * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:TrimNativeHeapInterval=100\n","filename":"test\/hotspot\/jtreg\/gtest\/NativeHeapTrimmerGtest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/BadNativeStackInErrorHandlingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileOverwriteTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileRedirectTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/MachCodeFramesInErrorFile.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/NestedThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ProblematicFrameTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SafeFetchInErrorHandlingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SecondaryErrorTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ShowRegistersOnAssertTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestCrashOnOutOfMemoryError.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestExitOnOutOfMemoryError.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +36,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestGZippedHeapDumpOnOutOfMemoryError.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n@@ -35,0 +36,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpOnOutOfMemoryError.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpPath.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnError.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnOutOfMemoryError.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+ * @requires vm.flagless\n@@ -55,0 +56,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TimeoutInErrorHandlingTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @requires vm.flagless\n@@ -52,2 +53,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-            \"-version\");\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/VeryEarlyAssertTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,1 +273,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n@@ -288,1 +288,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n@@ -300,1 +300,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -311,1 +311,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -322,1 +322,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=0\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=0\" },\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @summary Test verifies that jhsdb jmap could generate heap dump from core when metspace is full\n+ * @summary Test verifies that jhsdb jmap could generate heap dump from core when metaspace is full\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJmapCoreMetaspace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,0 +23,8 @@\n+# All tests\n+\n+all = \\\n+    :jaxp_all\n+\n+jaxp_all = \\\n+    \/\n+\n@@ -37,3 +45,0 @@\n-\n-jaxp_all = \\\n-    javax\/xml\/jaxp\n","filename":"test\/jaxp\/TEST.groups","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -23,0 +23,11 @@\n+###############################################################################\n+#\n+# All tests\n+#\n+\n+all = \\\n+    :jdk_all\n+\n+jdk_all = \\\n+    \/\n+\n","filename":"test\/jdk\/TEST.groups","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,202 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8278312\n+ * @library \/test\/lib \/test\/jdk\/java\/net\/httpclient \/test\/jdk\/java\/net\/httpclient\/http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters Http2Handler\n+ *          jdk.test.lib.net.IPSupport\n+ *          Http2TestExchange\n+ *\n+ * @modules java.net.http\/jdk.internal.net.http.common\n+ *          java.net.http\/jdk.internal.net.http.frame\n+ *          java.net.http\/jdk.internal.net.http.hpack\n+ *          java.logging\n+ *          java.base\/sun.net.www.http\n+ *          java.base\/sun.net.www\n+ *          java.base\/sun.net\n+ *\n+ * @run main\/othervm SANTest\n+ * @summary Update SimpleSSLContext keystore to use SANs for localhost IP addresses\n+ *\/\n+\n+import com.sun.net.httpserver.*;\n+\n+import java.util.concurrent.*;\n+import java.io.*;\n+import java.net.*;\n+import java.net.http.*;\n+import java.nio.charset.StandardCharsets;\n+import javax.net.ssl.*;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import jdk.test.lib.net.URIBuilder;\n+import jdk.test.lib.net.IPSupport;\n+\n+\/*\n+ * Will fail if the testkeys file belonging to SimpleSSLContext\n+ * does not have SAN entries for 127.0.0.1 or ::1\n+ *\/\n+public class SANTest implements HttpServerAdapters {\n+\n+    static SSLContext ctx;\n+\n+    static HttpServer getHttpsServer(InetSocketAddress addr, Executor exec, SSLContext ctx) throws Exception {\n+        HttpsServer server = HttpsServer.create(addr, 0);\n+        server.setExecutor(exec);\n+        server.setHttpsConfigurator(new HttpsConfigurator (ctx));\n+        return server;\n+    }\n+\n+    static final boolean hasIPv4 = IPSupport.hasIPv4();\n+    static final boolean hasIPv6 = IPSupport.hasIPv6();\n+\n+    static HttpTestServer initServer(boolean h2, InetAddress addr, SSLContext ctx,\n+                String sni, ExecutorService e) throws Exception {\n+        HttpTestServer s = null;\n+        InetSocketAddress ia = new InetSocketAddress (addr, 0);\n+        if ((addr instanceof Inet4Address) && !hasIPv4)\n+                return null;\n+        if ((addr instanceof Inet6Address) && !hasIPv6)\n+                return null;\n+\n+        if (!h2) {\n+            s = HttpTestServer.of(getHttpsServer(ia, e, ctx));\n+            HttpTestHandler h = new HttpTestEchoHandler();\n+            s.addHandler(h, \"\/test1\");\n+            s.start();\n+            return s;\n+        } else {\n+            s = HttpTestServer.of(new Http2TestServer(addr, sni, true, 0, e,\n+                        10, null, ctx, false));\n+            HttpTestHandler h = new HttpTestEchoHandler();\n+            s.addHandler(h, \"\/test1\");\n+            s.start();\n+            return s;\n+        }\n+    }\n+\n+    public static void main (String[] args) throws Exception {\n+        \/\/ Http\/1.1 servers\n+        HttpTestServer h1s1 = null;\n+        HttpTestServer h1s2 = null;\n+\n+        \/\/ Http\/2 servers\n+        HttpTestServer h2s1 = null;\n+        HttpTestServer h2s2 = null;\n+\n+        ExecutorService executor=null;\n+        try {\n+            System.out.print (\"SANTest: \");\n+            ctx = new SimpleSSLContext().get();\n+            executor = Executors.newCachedThreadPool();\n+\n+            InetAddress l1 = InetAddress.getByName(\"::1\");\n+            InetAddress l2 = InetAddress.getByName(\"127.0.0.1\");\n+\n+            h1s1 = initServer(false, l1, ctx, \"::1\", executor);\n+            h1s2 = initServer(false, l2, ctx, \"127.0.0.1\", executor);\n+\n+            h2s1 = initServer(true, l1, ctx, \"::1\", executor);\n+            h2s2 = initServer(true, l2, ctx, \"127.0.0.1\", executor);\n+\n+            test(\"127.0.0.1\", h1s2);\n+            test(\"::1\", h1s1);\n+            testNew(\"127.0.0.1\", h2s2, executor);\n+            testNew(\"::1\", h2s1, executor);\n+            System.out.println (\"OK\");\n+        } finally {\n+            if (h1s1 != null)\n+                h1s1.stop();\n+            if (h1s2 != null)\n+                h1s2.stop();\n+            if (h2s1 != null)\n+                h2s1.stop();\n+            if (h2s2 != null)\n+                h2s2.stop();\n+            if (executor != null)\n+                executor.shutdown ();\n+        }\n+    }\n+\n+    static void test (String host, HttpTestServer server) throws Exception {\n+        if (server == null)\n+            return;\n+        int port = server.getAddress().getPort();\n+        String body = \"Yellow world\";\n+        URL url = URIBuilder.newBuilder()\n+                 .scheme(\"https\")\n+                 .host(host)\n+                 .port(port)\n+                 .path(\"\/test1\/foo.txt\")\n+                 .toURL();\n+        System.out.println(\"URL = \" + url);\n+        HttpURLConnection urlc = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY);\n+        System.out.println(\"urlc = \" + urlc);\n+        if (urlc instanceof HttpsURLConnection) {\n+            HttpsURLConnection urlcs = (HttpsURLConnection) urlc;\n+            urlcs.setSSLSocketFactory (ctx.getSocketFactory());\n+        }\n+\n+        urlc.setRequestMethod(\"POST\");\n+        urlc.setDoOutput(true);\n+\n+        OutputStream os = urlc.getOutputStream();\n+        os.write(body.getBytes(StandardCharsets.ISO_8859_1));\n+        os.close();\n+        InputStream is = urlc.getInputStream();\n+        byte[] vv = is.readAllBytes();\n+        String ff = new String(vv, StandardCharsets.ISO_8859_1);\n+        System.out.println(\"resp = \" + ff);\n+        if (!ff.equals(body))\n+            throw new RuntimeException();\n+        is.close();\n+    }\n+\n+    static void testNew (String host, HttpTestServer server, Executor exec) throws Exception {\n+        if (server == null)\n+            return;\n+        int port = server.getAddress().getPort();\n+        String body = \"Red and Yellow world\";\n+        URI uri = URIBuilder.newBuilder()\n+                 .scheme(\"https\")\n+                 .host(host)\n+                 .port(port)\n+                 .path(\"\/test1\/foo.txt\")\n+                 .build();\n+\n+        HttpClient client = HttpClient.newBuilder()\n+                .sslContext(ctx)\n+                .executor(exec)\n+                .build();\n+        HttpRequest req = HttpRequest.newBuilder(uri)\n+                .version(HttpClient.Version.HTTP_2)\n+                .POST(HttpRequest.BodyPublishers.ofString(body))\n+                .build();\n+\n+        HttpResponse<String> resp = client.send(req, HttpResponse.BodyHandlers.ofString());\n+        System.out.println(\"resp = \" + resp.body());\n+        if (!resp.body().equals(body))\n+            throw new RuntimeException();\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/SANTest.java","additions":202,"deletions":0,"binary":false,"changes":202,"status":"added"},{"patch":"@@ -0,0 +1,174 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Panel;\n+\n+\/*\n+ *  @test\n+ *  @bug 4115139 4128213\n+ *  @summary Tests that the (rather bizarre) rules for handling selection\n+ *  in Choice components are implemented as documented in\n+ *  \"The Java Class Libraries 2nd Edition\"\n+ *  @key headful\n+ *\/\n+\n+public class ChoiceSelectTest extends Panel {\n+    final Choice c;\n+\n+    public ChoiceSelectTest() {\n+        setLayout(new FlowLayout());\n+        c = new Choice();\n+        add(c);\n+    }\n+\n+    private void test() {\n+        testAddition();\n+        testInsertion();\n+        testRemoval();\n+        testIndices();\n+    }\n+\n+    public void testAddition() {\n+        c.removeAll();\n+\n+        \/\/ check that after first item added selection is zero\n+        c.addItem(\"zero\");\n+        if (c.getSelectedIndex() != 0) {\n+            throw new SelectionException(\"selection wrong after first add\");\n+        }\n+\n+        \/\/ check that selection doesn't change for subsequent adds\n+        c.addItem(\"one\");\n+        c.select(1);\n+        c.addItem(\"two\");\n+        if (c.getSelectedIndex() != 1) {\n+            throw new SelectionException(\"selection wrong after subsequent add\");\n+        }\n+    }\n+\n+    public void testInsertion() {\n+        c.removeAll();\n+\n+        \/\/ check that after first item inserted selection is zero\n+        c.insert(\"zero\", 0);\n+        if (c.getSelectedIndex() != 0) {\n+            throw new SelectionException(\"selection wrong after first insert\");\n+        }\n+\n+        \/\/ check that if selected item shifted, selection goes to zero\n+        c.insert(\"three\", 1);\n+        c.select(1);\n+        c.insert(\"one\", 1);\n+        if (c.getSelectedIndex() != 0) {\n+            throw new SelectionException(\"selection wrong after selected item shifted\");\n+        }\n+\n+        \/\/ check that if selected item not shifted, selection stays the same\n+        c.select(1);\n+        c.insert(\"two\", 2);\n+        if (c.getSelectedIndex() != 1) {\n+            throw new SelectionException(\"selection wrong after item inserted after selection\");\n+        }\n+    }\n+\n+    public void testRemoval() {\n+        c.removeAll();\n+\n+        \/\/ check that if removing selected item, selection goes to 0\n+        c.add(\"zero\");\n+        c.add(\"one\");\n+        c.add(\"two\");\n+        c.select(2);\n+        c.remove(2);\n+        if (c.getSelectedIndex() != 0) {\n+            throw new SelectionException(\"selection wrong after removing selected item\");\n+        }\n+\n+        \/\/ check that if removing item before the selection\n+        \/\/ the selected index is updated\n+        c.add(\"two\");\n+        c.add(\"three\");\n+        c.select(3);\n+        c.remove(1);\n+        if (c.getSelectedIndex() != 2) {\n+            throw new SelectionException(\"selection wrong after removing item before it\");\n+        }\n+    }\n+\n+    public void testIndices() {\n+        c.removeAll();\n+\n+        c.addItem(\"zero\");\n+        c.addItem(\"one\");\n+        c.addItem(\"two\");\n+        c.addItem(\"three\");\n+        c.addItem(\"four\");\n+        c.addItem(\"five\");\n+\n+        \/\/ Test selection of negative index\n+        try {\n+            c.select(-1);\n+            throw new SelectionException(\"Negative Index Test FAILED\");\n+        } catch (IllegalArgumentException expected) {}\n+\n+        \/\/ Test selection of zero index\n+        try {\n+            c.select(0);\n+        } catch (IllegalArgumentException iae) {\n+            throw new SelectionException(\"Zero Index Test FAILED\", iae);\n+        }\n+\n+        \/\/ Test selection of maximum index\n+        try {\n+            c.select(5);\n+        } catch (IllegalArgumentException iae) {\n+            throw new SelectionException(\"Maximum Index Test FAILED\", iae);\n+        }\n+\n+        \/\/ Test selection of index that is too large\n+        try {\n+            c.select(6);\n+            throw new SelectionException(\"Greater than Maximum Index Test FAILED\");\n+        } catch (IllegalArgumentException expected) {}\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> new ChoiceSelectTest().test());\n+    }\n+\n+    class SelectionException extends RuntimeException {\n+        SelectionException(String msg, Throwable cause) {\n+            super(msg, cause);\n+            System.out.println(\n+                    \"Selection item is '\" + c.getSelectedItem() +\n+                            \"' at index \" + c.getSelectedIndex());\n+        }\n+\n+        SelectionException(String msg) {\n+            this(msg, null);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceSelectTest.java","additions":174,"deletions":0,"binary":false,"changes":174,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Label;\n+import java.awt.Panel;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @summary automated test for \"displayable\" property on Component\n+ *\/\n+\n+public class Displayable extends Panel {\n+    Label status = new Label(\"Displayable Test started...\");\n+\n+    public void init() {\n+        setLayout(new BorderLayout());\n+        add(\"South\", status);\n+\n+        LightDisplayable light = new LightDisplayable();\n+        shouldNotBeDisplayable(light, \"before added to container \");\n+\n+        HeavyDisplayable heavy = new HeavyDisplayable();\n+        shouldNotBeDisplayable(heavy, \"before added to container \");\n+\n+        add(\"West\", light);\n+        add(\"East\", heavy);\n+\n+        statusMessage(\"Displayable test completed successfully.\");\n+    }\n+\n+    protected void addImpl(Component child, Object constraints, int index) {\n+        super.addImpl(child, constraints, index);\n+        if (isDisplayable()) {\n+            shouldBeDisplayable(child, \"after added to displayable container \");\n+        } else {\n+            shouldNotBeDisplayable(child, \"after added to undisplayable container \");\n+        }\n+    }\n+\n+    public void remove(Component child) {\n+        super.remove(child);\n+        shouldNotBeDisplayable(child, \"after removed from displayable container \");\n+    }\n+\n+    public void statusMessage(String msg) {\n+        status.setText(msg);\n+        status.invalidate();\n+        validate();\n+    }\n+\n+    public static void shouldNotBeDisplayable(Component c, String why) {\n+        if (c.isDisplayable()) {\n+            throw new RuntimeException(\"Component is displayable \"+why+c.getName());\n+        }\n+    }\n+\n+    public static void shouldBeDisplayable(Component c, String why) {\n+        if (!c.isDisplayable()) {\n+            throw new RuntimeException(\"Component is NOT displayable \"+why+c.getName());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            Frame f = new Frame();\n+            try {\n+                Displayable test = new Displayable();\n+                test.init();\n+                f.add(\"North\", test);\n+                f.pack();\n+            } finally {\n+                f.dispose();\n+            }\n+        });\n+    }\n+}\n+\n+class LightDisplayable extends Component {\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(50,50);\n+    }\n+\n+    public void paint(Graphics g) {\n+        Dimension size = getSize();\n+        g.setColor(Color.blue);\n+        g.fillRect(0, 0, size.width, size.height);\n+        super.paint(g);\n+    }\n+\n+    public void addNotify() {\n+        Displayable.shouldNotBeDisplayable(this, \"before addNotify \");\n+        super.addNotify();\n+        Displayable.shouldBeDisplayable(this, \"after addNotify \");\n+    }\n+\n+    public void removeNotify() {\n+        Displayable.shouldBeDisplayable(this, \"before removeNotify \");\n+        super.removeNotify();\n+        Displayable.shouldNotBeDisplayable(this, \"after removeNotify \");\n+    }\n+}\n+\n+class HeavyDisplayable extends Panel {\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(50, 50);\n+    }\n+\n+    public void paint(Graphics g) {\n+        Dimension size = getSize();\n+        g.setColor(Color.black);\n+        g.fillRect(0, 0, size.width, size.height);\n+        super.paint(g);\n+    }\n+\n+    public void addNotify() {\n+        Displayable.shouldNotBeDisplayable(this, \"before addNotify \");\n+        super.addNotify();\n+        Displayable.shouldBeDisplayable(this, \"after addNotify \");\n+    }\n+\n+    public void removeNotify() {\n+        Displayable.shouldBeDisplayable(this, \"before removeNotify \");\n+        super.removeNotify();\n+        Displayable.shouldNotBeDisplayable(this, \"after removeNotify \");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Component\/Displayable.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.WindowConstants;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4749659\n+ * @summary Tests that popup menu doesn't steal focus from top-level\n+ * @key headful\n+ *\/\n+\n+public class TestWindowsLFFocus {\n+    static volatile boolean actionFired;\n+\n+    static JFrame frame;\n+    static JMenuBar bar;\n+    static JMenuItem item;\n+    static volatile Point frameLoc;\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo lookAndFeel : UIManager.getInstalledLookAndFeels()) {\n+            UIManager.setLookAndFeel(lookAndFeel.getClassName());\n+            test();\n+        }\n+\n+        System.err.println(\"PASSED\");\n+    }\n+\n+    private static void test() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                actionFired = false;\n+                frame = new JFrame();\n+                bar = new JMenuBar();\n+                frame.setJMenuBar(bar);\n+                JMenu menu = new JMenu(\"menu\");\n+                bar.add(menu);\n+                item = new JMenuItem(\"item\");\n+                menu.add(item);\n+                item.addActionListener(e -> actionFired = true);\n+\n+                frame.getContentPane().add(new JButton(\"none\"));\n+                frame.setBounds(100, 100, 100, 100);\n+                frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+                frame.setVisible(true);\n+            });\n+\n+            Robot robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+            robot.setAutoDelay(50);\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                Point location = frame.getLocationOnScreen();\n+                Insets insets = frame.getInsets();\n+\n+                location.translate(insets.left + 15, insets.top + bar.getHeight() \/ 2);\n+\n+                frameLoc = location;\n+            });\n+\n+            robot.mouseMove(frameLoc.x, frameLoc.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                Point location = new Point(frameLoc);\n+                location.y += bar.getHeight() \/ 2 + item.getHeight() \/ 2;\n+\n+                frameLoc = location;\n+            });\n+\n+            robot.mouseMove(frameLoc.x, frameLoc.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            if (!actionFired) {\n+                throw new RuntimeException(\"Menu closed without action\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Focus\/TestWindowsLFFocus.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -0,0 +1,392 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Panel;\n+import java.awt.Polygon;\n+import java.awt.Shape;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Area;\n+import java.awt.geom.Ellipse2D;\n+import java.awt.geom.GeneralPath;\n+import java.awt.geom.Point2D;\n+\n+\/*\n+ * @test\n+ * @bug 4210936 4214524\n+ * @summary Tests the results of the hit test methods on 3 different\n+ *          Shape objects - Polygon, Area, and GeneralPath.  Both an\n+ *          automatic test for constraint compliance and a manual\n+ *          test for correctness are included in this one class.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main PathHitTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4210936 4214524\n+ * @summary Tests the results of the hit test methods on 3 different\n+ *          Shape objects - Polygon, Area, and GeneralPath.  Both an\n+ *          automatic test for constraint compliance and a manual\n+ *          test for correctness are included in this one class.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PathHitTest manual\n+ *\/\n+\n+public class PathHitTest {\n+\n+    public static final int BOXSIZE = 5;\n+    public static final int BOXCENTER = 2;\n+    public static final int TESTSIZE = 400;\n+    public static final int NUMTESTS = (TESTSIZE + BOXSIZE - 1) \/ BOXSIZE;\n+\n+    public static Shape[] testShapes = new Shape[5];\n+    public static String[] testNames = {\n+            \"Polygon\",\n+            \"EvenOdd GeneralPath\",\n+            \"NonZero GeneralPath\",\n+            \"Area from EO GeneralPath\",\n+            \"Area from NZ GeneralPath\",\n+    };\n+\n+    static {\n+        GeneralPath gpeo = new GeneralPath(GeneralPath.WIND_EVEN_ODD);\n+        Ellipse2D ell = new Ellipse2D.Float();\n+        Point2D center = new Point2D.Float();\n+        AffineTransform at = new AffineTransform();\n+        for (int i = 0; i < 360; i += 30) {\n+            center.setLocation(100, 0);\n+            at.setToTranslation(200, 200);\n+            at.rotate(i * Math.PI \/ 180);\n+            at.transform(center, center);\n+            ell.setFrame(center.getX() - 50, center.getY() - 50, 100, 100);\n+            gpeo.append(ell, false);\n+        }\n+        GeneralPath side = new GeneralPath();\n+        side.moveTo(0, 0);\n+        side.lineTo(15, 10);\n+        side.lineTo(30, 0);\n+        side.lineTo(45, -10);\n+        side.lineTo(60, 0);\n+        append4sides(gpeo, side, 20, 20);\n+        side.reset();\n+        side.moveTo(0, 0);\n+        side.quadTo(15, 10, 30, 0);\n+        side.quadTo(45, -10, 60, 0);\n+        append4sides(gpeo, side, 320, 20);\n+        side.reset();\n+        side.moveTo(0, 0);\n+        side.curveTo(15, 10, 45, -10, 60, 0);\n+        append4sides(gpeo, side, 20, 320);\n+\n+        GeneralPath gpnz = new GeneralPath(GeneralPath.WIND_NON_ZERO);\n+        gpnz.append(gpeo, false);\n+        Polygon p = new Polygon();\n+        p.addPoint( 50,  50);\n+        p.addPoint( 60, 350);\n+        p.addPoint(250, 340);\n+        p.addPoint(260, 150);\n+        p.addPoint(140, 140);\n+        p.addPoint(150, 260);\n+        p.addPoint(340, 250);\n+        p.addPoint(350,  60);\n+        testShapes[0] = p;\n+        testShapes[1] = gpeo;\n+        testShapes[2] = gpnz;\n+        testShapes[3] = new Area(gpeo);\n+        testShapes[3].getPathIterator(null);\n+        testShapes[4] = new Area(gpnz);\n+        testShapes[4].getPathIterator(null);\n+    }\n+\n+    private static void append4sides(GeneralPath path, GeneralPath side,\n+                                     double xoff, double yoff) {\n+        AffineTransform at = new AffineTransform();\n+        at.setToTranslation(xoff, yoff);\n+        for (int i = 0; i < 4; i++) {\n+            path.append(side.getPathIterator(at), i != 0);\n+            at.rotate(Math.toRadians(90), 30, 30);\n+        }\n+    }\n+\n+    public static void main(String[] argv) throws Exception {\n+        if (argv.length > 0 && argv[0].equals(\"manual\")) {\n+            PathHitTestManual.doManual();\n+        } else {\n+            int totalerrs = 0;\n+            for (int i = 0; i < testShapes.length; i++) {\n+                totalerrs += testshape(testShapes[i], testNames[i]);\n+            }\n+            if (totalerrs != 0) {\n+                throw new RuntimeException(totalerrs +\n+                        \" constraint conditions violated!\");\n+            }\n+        }\n+    }\n+\n+    public static int testshape(Shape s, String name) {\n+        int numerrs = 0;\n+        long start = System.currentTimeMillis();\n+        for (int y = 0; y < TESTSIZE; y += BOXSIZE) {\n+            for (int x = 0; x < TESTSIZE; x += BOXSIZE) {\n+                boolean rectintersects = s.intersects(x, y, BOXSIZE, BOXSIZE);\n+                boolean rectcontains = s.contains(x, y, BOXSIZE, BOXSIZE);\n+                boolean pointcontains = s.contains(x + BOXCENTER, y + BOXCENTER);\n+                if (rectcontains && !rectintersects) {\n+                    System.err.println(\"rect is contained \" +\n+                            \"but does not intersect!\");\n+                    numerrs++;\n+                }\n+                if (rectcontains && !pointcontains) {\n+                    System.err.println(\"rect is contained \" +\n+                            \"but center is not contained!\");\n+                    numerrs++;\n+                }\n+                if (pointcontains && !rectintersects) {\n+                    System.err.println(\"center is contained \" +\n+                            \"but rect does not intersect!\");\n+                    numerrs++;\n+                }\n+            }\n+        }\n+        long end = System.currentTimeMillis();\n+        System.out.println(name + \" completed in \" +\n+                (end - start) + \"ms with \" +\n+                numerrs + \" errors\");\n+        return numerrs;\n+    }\n+\n+    static class PathHitTestManual extends Panel {\n+        private static final String INSTRUCTIONS = \"\"\"\n+            This test displays the results of hit testing 5 different Shape\n+            objects one at a time.\n+\n+            You can switch between shapes using the Choice component located\n+            at the bottom of the window.\n+\n+            Each square in the test represents the\n+            return values of the hit testing operators for that square region:\n+\n+                yellow - not yet tested\n+                translucent blue overlay - the shape being tested\n+\n+                black - all outside\n+                dark gray - rectangle intersects shape\n+                light gray - rectangle intersects and center point is inside shape\n+                white - rectangle is entirely contained in shape\n+                red - some constraint was violated, including:\n+                    rectangle is contained, but center point is not\n+                    rectangle is contained, but rectangle.intersects is false\n+                    centerpoint is contained, but rectangle.intersects is false\n+\n+            Visually inspect the results to see if they match the above table.\n+            Note that it is not a violation for rectangles that are entirely\n+            inside the path to be light gray instead of white since sometimes\n+            the path is complex enough to make an exact determination expensive.\n+            You might see this on the GeneralPath NonZero example where the\n+            circles that make up the path cross over the interior of the shape\n+            and cause the hit testing methods to guess that the rectangle is\n+            not guaranteed to be contained within the shape.\n+            \"\"\";\n+\n+        PathHitTestCanvas phtc;\n+\n+        public void init() {\n+            setLayout(new BorderLayout());\n+            phtc = new PathHitTestCanvas();\n+            add(\"Center\", phtc);\n+            final Choice ch = new Choice();\n+            for (int i = 0; i < PathHitTest.testNames.length; i++) {\n+                ch.add(PathHitTest.testNames[i]);\n+            }\n+            ch.addItemListener(e -> phtc.setShape(ch.getSelectedIndex()));\n+            ch.select(0);\n+            phtc.setShape(0);\n+            add(\"South\", ch);\n+        }\n+\n+        public void start() {\n+            phtc.start();\n+        }\n+\n+        public void stop() {\n+            phtc.stop();\n+        }\n+\n+        public static class PathHitTestCanvas extends Canvas implements Runnable {\n+            public static final Color[] colors = {\n+                                        \/* contains?  point in?  intersects? *\/\n+                    Color.black,        \/*    NO         NO          NO      *\/\n+                    Color.darkGray,     \/*    NO         NO          YES     *\/\n+                    Color.red,          \/*    NO         YES         NO      *\/\n+                    Color.lightGray,    \/*    NO         YES         YES     *\/\n+                    Color.red,          \/*    YES        NO          NO      *\/\n+                    Color.red,          \/*    YES        NO          YES     *\/\n+                    Color.red,          \/*    YES        YES         NO      *\/\n+                    Color.white,        \/*    YES        YES         YES     *\/\n+                    Color.yellow,       \/*     used for untested points      *\/\n+            };\n+\n+            public Dimension getPreferredSize() {\n+                return new Dimension(TESTSIZE, TESTSIZE);\n+            }\n+\n+            public synchronized void start() {\n+                if (!testdone) {\n+                    renderer = new Thread(this);\n+                    renderer.setPriority(Thread.MIN_PRIORITY);\n+                    renderer.start();\n+                }\n+            }\n+\n+            public synchronized void stop() {\n+                renderer = null;\n+            }\n+\n+            private Thread renderer;\n+            private int shapeIndex = 0;\n+            private byte[] indices = new byte[NUMTESTS * NUMTESTS];\n+            boolean testdone = false;\n+\n+            private synchronized void setShape(int index) {\n+                shapeIndex = index;\n+                testdone = false;\n+                start();\n+            }\n+\n+            public void run() {\n+                Thread me = Thread.currentThread();\n+                Graphics2D g2d = (Graphics2D) getGraphics();\n+                byte[] indices;\n+                Shape s = testShapes[shapeIndex];\n+                synchronized (this) {\n+                    if (renderer != me) {\n+                        return;\n+                    }\n+                    this.indices = new byte[NUMTESTS * NUMTESTS];\n+                    java.util.Arrays.fill(this.indices, (byte) 8);\n+                    indices = this.indices;\n+                }\n+\n+                System.err.printf(\"%s %s\\n\", g2d, Color.yellow);\n+                g2d.setColor(Color.yellow);\n+                g2d.fillRect(0, 0, TESTSIZE, TESTSIZE);\n+                int numtests = 0;\n+                long start = System.currentTimeMillis();\n+                for (int y = 0; renderer == me && y < TESTSIZE; y += BOXSIZE) {\n+                    for (int x = 0; renderer == me && x < TESTSIZE; x += BOXSIZE) {\n+                        byte index = 0;\n+                        if (s.intersects(x, y, BOXSIZE, BOXSIZE)) {\n+                            index += 1;\n+                        }\n+                        if (s.contains(x + BOXCENTER, y + BOXCENTER)) {\n+                            index += 2;\n+                        }\n+                        if (s.contains(x, y, BOXSIZE, BOXSIZE)) {\n+                            index += 4;\n+                        }\n+                        numtests++;\n+                        int i = (y \/ BOXSIZE) * NUMTESTS + (x \/ BOXSIZE);\n+                        indices[i] = index;\n+                        g2d.setColor(colors[index]);\n+                        g2d.fillRect(x, y, BOXSIZE, BOXSIZE);\n+                    }\n+                }\n+                synchronized (this) {\n+                    if (renderer != me) {\n+                        return;\n+                    }\n+                    g2d.setColor(new Color(0, 0, 1, .2f));\n+                    g2d.fill(s);\n+                    testdone = true;\n+                    long end = System.currentTimeMillis();\n+                    System.out.println(numtests + \" tests took \" + (end - start) + \"ms\");\n+                }\n+            }\n+\n+            public void paint(Graphics g) {\n+                g.setColor(Color.yellow);\n+                g.fillRect(0, 0, TESTSIZE, TESTSIZE);\n+                byte[] indices = this.indices;\n+                if (indices != null) {\n+                    for (int y = 0; y < TESTSIZE; y += BOXSIZE) {\n+                        for (int x = 0; x < TESTSIZE; x += BOXSIZE) {\n+                            int i = (y \/ BOXSIZE) * NUMTESTS + (x \/ BOXSIZE);\n+                            g.setColor(colors[indices[i]]);\n+                            g.fillRect(x, y, BOXSIZE, BOXSIZE);\n+                        }\n+                    }\n+                }\n+                Graphics2D g2d = (Graphics2D) g;\n+                g2d.setColor(new Color(0, 0, 1, .2f));\n+                g2d.fill(testShapes[shapeIndex]);\n+            }\n+        }\n+\n+        static volatile PathHitTestManual pathHitTestManual;\n+\n+        private static void createAndShowGUI() {\n+            pathHitTestManual = new PathHitTestManual();\n+            Frame frame = new Frame(\"PathHitTestManual test window\");\n+\n+            frame.add(pathHitTestManual);\n+            frame.setSize(400, 450);\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+\n+            pathHitTestManual.init();\n+            pathHitTestManual.start();\n+        }\n+\n+        public static void doManual() throws Exception {\n+            PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                    .title(\"PathHitTestManual Instructions\")\n+                    .instructions(INSTRUCTIONS)\n+                    .testTimeOut(5)\n+                    .rows(30)\n+                    .columns(70)\n+                    .screenCapture()\n+                    .build();\n+\n+            EventQueue.invokeAndWait(PathHitTestManual::createAndShowGUI);\n+            try {\n+                passFailJFrame.awaitAndCheck();\n+            } finally {\n+                pathHitTestManual.stop();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/geom\/HitTest\/PathHitTest.java","additions":392,"deletions":0,"binary":false,"changes":392,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.awt.AWTException;\n@@ -27,0 +28,1 @@\n+import java.awt.GraphicsDevice;\n@@ -28,0 +30,1 @@\n+import java.awt.Image;\n@@ -29,0 +32,1 @@\n+import java.awt.Point;\n@@ -30,0 +34,1 @@\n+import java.awt.Robot;\n@@ -34,0 +39,4 @@\n+import java.awt.event.WindowListener;\n+import java.awt.image.RenderedImage;\n+import java.io.File;\n+import java.io.IOException;\n@@ -36,0 +45,2 @@\n+import java.util.Arrays;\n+import java.util.Collection;\n@@ -37,0 +48,1 @@\n+import java.util.Objects;\n@@ -39,0 +51,3 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.imageio.ImageIO;\n@@ -40,0 +55,2 @@\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n@@ -41,0 +58,1 @@\n+import javax.swing.JEditorPane;\n@@ -43,0 +61,1 @@\n+import javax.swing.JOptionPane;\n@@ -47,0 +66,3 @@\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.StyleSheet;\n@@ -48,1 +70,1 @@\n-\n+import static java.util.Collections.unmodifiableList;\n@@ -52,1 +74,78 @@\n-public class PassFailJFrame {\n+\/**\n+ * Provides a framework for manual tests to display test instructions and\n+ * Pass\/Fail buttons.\n+ * <p>\n+ * Instructions for the user can be either plain text or HTML as supported\n+ * by Swing. If the instructions start with {@code <html>}, the\n+ * instructions are displayed as HTML.\n+ * <p>\n+ * A simple test would look like this:\n+ * <pre>{@code\n+ * public class SampleManualTest {\n+ *     private static final String INSTRUCTIONS =\n+ *             \"Click Pass, or click Fail if the test failed.\";\n+ *\n+ *     public static void main(String[] args) throws Exception {\n+ *         PassFailJFrame.builder()\n+ *                       .instructions(INSTRUCTIONS)\n+ *                       .testUI(() -> createTestUI())\n+ *                       .build()\n+ *                       .awaitAndCheck();\n+ *     }\n+ *\n+ *     private static Window createTestUI() {\n+ *         JFrame testUI = new JFrame(\"Test UI\");\n+ *         testUI.setSize(250, 150);\n+ *         return testUI;\n+ *     }\n+ * }\n+ * }<\/pre>\n+ * <p>\n+ * The above example uses the {@link Builder Builder} to set the parameters of\n+ * the instruction frame. It is the recommended way.\n+ * <p>\n+ * The framework will create instruction UI, it will call\n+ * the provided {@code createTestUI} on the Event Dispatch Thread (EDT),\n+ * and it will automatically position the test UI and make it visible.\n+ * <p>\n+ * The {@code Builder.testUI} methods accept interfaces which create one window\n+ * or a list of windows if the test needs multiple windows,\n+ * or directly a single window, an array of windows or a list of windows.\n+ * <p>\n+ * Alternatively, use one of the {@code PassFailJFrame} constructors to\n+ * create an object, then create secondary test UI, register it\n+ * with {@code PassFailJFrame}, position it and make it visible.\n+ * The following sample demonstrates it:\n+ * <pre>{@code\n+ * public class SampleOldManualTest {\n+ *     private static final String INSTRUCTIONS =\n+ *             \"Click Pass, or click Fail if the test failed.\";\n+ *\n+ *     public static void main(String[] args) throws Exception {\n+ *         PassFailJFrame passFail = new PassFailJFrame(INSTRUCTIONS);\n+ *\n+ *         SwingUtilities.invokeAndWait(() -> createTestUI());\n+ *\n+ *         passFail.awaitAndCheck();\n+ *     }\n+ *\n+ *     private static void createTestUI() {\n+ *         JFrame testUI = new JFrame(\"Test UI\");\n+ *         testUI.setSize(250, 150);\n+ *         PassFailJFrame.addTestWindow(testUI);\n+ *         PassFailJFrame.positionTestWindow(testUI, PassFailJFrame.Position.HORIZONTAL);\n+ *         testUI.setVisible(true);\n+ *     }\n+ * }\n+ * }<\/pre>\n+ * <p>\n+ * Use methods of the {@code Builder} class or constructors of the\n+ * {@code PassFailJFrame} class to control other parameters:\n+ * <ul>\n+ *     <li>the title of the instruction UI,<\/li>\n+ *     <li>the timeout of the test,<\/li>\n+ *     <li>the size of the instruction UI via rows and columns, and<\/li>\n+ *     <li>to enable screenshots.<\/li>\n+ * <\/ul>\n+ *\/\n+public final class PassFailJFrame {\n@@ -71,0 +170,3 @@\n+\n+    private static final AtomicInteger imgCounter = new AtomicInteger(0);\n+\n@@ -73,0 +175,2 @@\n+    private static Robot robot;\n+\n@@ -117,0 +221,96 @@\n+        this(title, instructions, testTimeOut, rows, columns, false);\n+    }\n+\n+    \/**\n+     * Constructs a JFrame with a given title & serves as test instructional\n+     * frame where the user follows the specified test instruction in order\n+     * to test the test case & mark the test pass or fail. If the expected\n+     * result is seen then the user click on the 'Pass' button else click\n+     * on the 'Fail' button and the reason for the failure should be\n+     * specified in the JDialog JTextArea.\n+     * <p>\n+     * The test instruction frame also provides a way for the tester to take\n+     * a screenshot (full screen or individual frame) if this feature\n+     * is enabled by passing {@code true} as {@code  enableScreenCapture}\n+     * parameter.\n+     *\n+     * @param title        title of the Frame.\n+     * @param instructions the instruction for the tester on how to test\n+     *                     and what is expected (pass) and what is not\n+     *                     expected (fail).\n+     * @param testTimeOut  test timeout where time is specified in minutes.\n+     * @param rows         number of visible rows of the JTextArea where the\n+     *                     instruction is show.\n+     * @param columns      Number of columns of the instructional\n+     *                     JTextArea\n+     * @param enableScreenCapture if set to true, 'Capture Screen' button & its\n+     *                            associated UIs are added to test instruction\n+     *                            frame\n+     * @throws InterruptedException      exception thrown when thread is\n+     *                                   interrupted\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *                                   creating the test instruction frame on\n+     *                                   EDT\n+     *\/\n+    public PassFailJFrame(String title, String instructions, long testTimeOut,\n+                          int rows, int columns,\n+                          boolean enableScreenCapture)\n+            throws InterruptedException, InvocationTargetException {\n+        invokeOnEDT(() -> createUI(title, instructions,\n+                                   testTimeOut,\n+                                   rows, columns,\n+                                   enableScreenCapture));\n+    }\n+\n+    private PassFailJFrame(Builder builder) throws InterruptedException,\n+            InvocationTargetException {\n+        this(builder.title, builder.instructions, builder.testTimeOut,\n+             builder.rows, builder.columns, builder.screenCapture);\n+\n+        if (builder.windowListCreator != null) {\n+            invokeOnEDT(() ->\n+                    builder.testWindows = builder.windowListCreator.createTestUI());\n+            if (builder.testWindows == null) {\n+                throw new IllegalStateException(\"Window list creator returned null list\");\n+            }\n+        }\n+\n+        if (builder.testWindows != null) {\n+            if (builder.testWindows.isEmpty()) {\n+                throw new IllegalStateException(\"Window list is empty\");\n+            }\n+            addTestWindow(builder.testWindows);\n+            builder.testWindows\n+                   .forEach(w -> w.addWindowListener(windowClosingHandler));\n+\n+            if (builder.positionWindows != null) {\n+                positionInstructionFrame(builder.position);\n+                invokeOnEDT(() -> {\n+                    builder.positionWindows\n+                           .positionTestWindows(unmodifiableList(builder.testWindows),\n+                                                builder.instructionUIHandler);\n+                });\n+            } else if (builder.testWindows.size() == 1) {\n+                Window window = builder.testWindows.get(0);\n+                positionTestWindow(window, builder.position);\n+            } else {\n+                positionTestWindow(null, builder.position);\n+            }\n+        }\n+        showAllWindows();\n+    }\n+\n+    \/**\n+     * Performs an operation on EDT. If called on EDT, invokes {@code run}\n+     * directly, otherwise wraps into {@code invokeAndWait}.\n+     *\n+     * @param doRun an operation to run on EDT\n+     * @throws InterruptedException if we're interrupted while waiting for\n+     *              the event dispatching thread to finish executing\n+     *              {@code doRun.run()}\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              running {@code doRun}\n+     * @see javax.swing.SwingUtilities#invokeAndWait(Runnable)\n+     *\/\n+    private static void invokeOnEDT(Runnable doRun)\n+            throws InterruptedException, InvocationTargetException {\n@@ -118,1 +318,1 @@\n-            createUI(title, instructions, testTimeOut, rows, columns);\n+            doRun.run();\n@@ -120,2 +320,1 @@\n-            invokeAndWait(() -> createUI(title, instructions, testTimeOut,\n-                    rows, columns));\n+            invokeAndWait(doRun);\n@@ -126,1 +325,2 @@\n-                                 long testTimeOut, int rows, int columns) {\n+                                 long testTimeOut, int rows, int columns,\n+                                 boolean enableScreenCapture) {\n@@ -129,3 +329,5 @@\n-        JTextArea instructionsText = new JTextArea(instructions, rows, columns);\n-        instructionsText.setEditable(false);\n-        instructionsText.setLineWrap(true);\n+\n+        JTextComponent text = instructions.startsWith(\"<html>\")\n+                              ? configureHTML(instructions, rows, columns)\n+                              : configurePlainText(instructions, rows, columns);\n+        text.setEditable(false);\n@@ -152,1 +354,1 @@\n-        frame.add(new JScrollPane(instructionsText), BorderLayout.CENTER);\n+        frame.add(new JScrollPane(text), BorderLayout.CENTER);\n@@ -170,10 +372,5 @@\n-        frame.addWindowListener(new WindowAdapter() {\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                super.windowClosing(e);\n-                testFailedReason = FAILURE_REASON\n-                                   + \"User closed the instruction Frame\";\n-                failed = true;\n-                latch.countDown();\n-            }\n-        });\n+        if (enableScreenCapture) {\n+            buttonsPanel.add(createCapturePanel());\n+        }\n+\n+        frame.addWindowListener(windowClosingHandler);\n@@ -184,1 +381,225 @@\n-        windowList.add(frame);\n+        addTestWindow(frame);\n+    }\n+\n+    private static JTextComponent configurePlainText(String instructions,\n+                                                     int rows, int columns) {\n+        JTextArea text = new JTextArea(instructions, rows, columns);\n+        text.setLineWrap(true);\n+        text.setWrapStyleWord(true);\n+        return text;\n+    }\n+\n+    private static JTextComponent configureHTML(String instructions,\n+                                                int rows, int columns) {\n+        JEditorPane text = new JEditorPane(\"text\/html\", instructions);\n+        text.putClientProperty(JEditorPane.HONOR_DISPLAY_PROPERTIES,\n+                               Boolean.TRUE);\n+        \/\/ Set preferred size as if it were JTextArea\n+        text.setPreferredSize(new JTextArea(rows, columns).getPreferredSize());\n+\n+        HTMLEditorKit kit = (HTMLEditorKit) text.getEditorKit();\n+        StyleSheet styles = kit.getStyleSheet();\n+        \/\/ Reduce the default margins\n+        styles.addRule(\"ol, ul { margin-left-ltr: 20; margin-left-rtl: 20 }\");\n+        \/\/ Make the size of code blocks the same as other text\n+        styles.addRule(\"code { font-size: inherit }\");\n+\n+        return text;\n+    }\n+\n+\n+    \/**\n+     * Creates a test UI window.\n+     *\/\n+    @FunctionalInterface\n+    public interface WindowCreator {\n+        \/**\n+         * Creates a window for test UI.\n+         * This method is called by the framework on the EDT.\n+         * @return a test UI window\n+         *\/\n+        Window createTestUI();\n+    }\n+\n+    \/**\n+     * Creates a list of test UI windows.\n+     *\/\n+    @FunctionalInterface\n+    public interface WindowListCreator {\n+        \/**\n+         * Creates one or more windows for test UI.\n+         * This method is called by the framework on the EDT.\n+         * @return a list of test UI windows\n+         *\/\n+        List<? extends Window> createTestUI();\n+    }\n+\n+    \/**\n+     * Positions test UI windows.\n+     *\/\n+    @FunctionalInterface\n+    public interface PositionWindows {\n+        \/**\n+         * Positions test UI windows.\n+         * This method is called by the framework on the EDT after\n+         * the instruction UI frame was positioned on the screen.\n+         * <p>\n+         * The list of the test windows contains the windows\n+         * that were passed to the framework via the\n+         * {@link Builder#testUI(Window...) testUI(Window...)} method or\n+         * that were created with {@code WindowCreator}\n+         * or {@code WindowListCreator} which were passed via\n+         * {@link Builder#testUI(WindowCreator) testUI(WindowCreator)} or\n+         * {@link Builder#testUI(WindowListCreator) testUI(WindowListCreator)}\n+         * correspondingly.\n+         *\n+         * @param testWindows the list of test windows\n+         * @param instructionUI information about the instruction frame\n+         *\/\n+        void positionTestWindows(List<? extends Window> testWindows,\n+                                 InstructionUI instructionUI);\n+    }\n+\n+    \/**\n+     * Provides information about the instruction frame.\n+     *\/\n+    public interface InstructionUI {\n+        \/**\n+         * {@return the location of the instruction frame}\n+         *\/\n+        Point getLocation();\n+\n+        \/**\n+         * {@return the size of the instruction frame}\n+         *\/\n+        Dimension getSize();\n+\n+        \/**\n+         * {@return the bounds of the instruction frame}\n+         *\/\n+        Rectangle getBounds();\n+\n+        \/**\n+         * Allows to change the location of the instruction frame.\n+         *\n+         * @param location the new location of the instruction frame\n+         *\/\n+        void setLocation(Point location);\n+\n+        \/**\n+         * Allows to change the location of the instruction frame.\n+         *\n+         * @param x the <i>x<\/i> coordinate of the new location\n+         * @param y the <i>y<\/i> coordinate of the new location\n+         *\/\n+        void setLocation(int x, int y);\n+\n+        \/**\n+         * Returns the specified position that was used to set\n+         * the initial location of the instruction frame.\n+         *\n+         * @return the specified position\n+         *\n+         * @see Position\n+         *\/\n+        Position getPosition();\n+    }\n+\n+\n+    private static final class WindowClosingHandler extends WindowAdapter {\n+        @Override\n+        public void windowClosing(WindowEvent e) {\n+            testFailedReason = FAILURE_REASON\n+                               + \"User closed a window\";\n+            failed = true;\n+            latch.countDown();\n+        }\n+    }\n+\n+    private static final WindowListener windowClosingHandler =\n+            new WindowClosingHandler();\n+\n+\n+    private static JComponent createCapturePanel() {\n+        JComboBox<CaptureType> screenShortType = new JComboBox<>(CaptureType.values());\n+\n+        JButton capture = new JButton(\"ScreenShot\");\n+        capture.addActionListener((e) ->\n+                captureScreen((CaptureType) screenShortType.getSelectedItem()));\n+\n+        JPanel panel = new JPanel();\n+        panel.add(screenShortType);\n+        panel.add(capture);\n+        return panel;\n+    }\n+\n+    private enum CaptureType {\n+        FULL_SCREEN(\"Capture Full Screen\"),\n+        WINDOWS(\"Capture Individual Frame\");\n+\n+        private final String type;\n+        CaptureType(String type) {\n+            this.type = type;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return type;\n+        }\n+    }\n+\n+    private static Robot createRobot() {\n+        if (robot == null) {\n+            try {\n+                robot = new Robot();\n+            } catch (AWTException e) {\n+                String errorMsg = \"Failed to create an instance of Robot.\";\n+                JOptionPane.showMessageDialog(frame, errorMsg, \"Failed\",\n+                                              JOptionPane.ERROR_MESSAGE);\n+                forceFail(errorMsg + e.getMessage());\n+            }\n+        }\n+        return robot;\n+    }\n+\n+    private static void captureScreen(Rectangle bounds) {\n+        Robot robot = createRobot();\n+\n+        List<Image> imageList = robot.createMultiResolutionScreenCapture(bounds)\n+                                     .getResolutionVariants();\n+        Image image = imageList.get(imageList.size() - 1);\n+\n+        File file = new File(\"CaptureScreen_\"\n+                             + imgCounter.incrementAndGet() + \".png\");\n+        try {\n+            ImageIO.write((RenderedImage) image, \"png\", file);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void captureScreen(CaptureType type) {\n+        switch (type) {\n+            case FULL_SCREEN:\n+                Arrays.stream(GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                                 .getScreenDevices())\n+                      .map(GraphicsDevice::getDefaultConfiguration)\n+                      .map(GraphicsConfiguration::getBounds)\n+                      .forEach(PassFailJFrame::captureScreen);\n+                break;\n+\n+            case WINDOWS:\n+                windowList.stream()\n+                          .filter(Window::isShowing)\n+                          .map(Window::getBounds)\n+                          .forEach(PassFailJFrame::captureScreen);\n+                break;\n+\n+            default:\n+                throw new IllegalStateException(\"Unexpected value of capture type\");\n+        }\n+\n+        JOptionPane.showMessageDialog(frame,\n+                                      \"Screen Captured Successfully\",\n+                                      \"Screen Capture\",\n+                                      JOptionPane.INFORMATION_MESSAGE);\n@@ -227,2 +648,2 @@\n-     * Dispose all the window(s) i,e both the test instruction frame and\n-     * the window(s) that is added via addTestWindow(Window testWindow)\n+     * Disposes of all the windows. It disposes of the test instruction frame\n+     * and all other windows added via {@link #addTestWindow(Window)}.\n@@ -231,3 +652,1 @@\n-        for (Window win : windowList) {\n-            win.dispose();\n-        }\n+        windowList.forEach(Window::dispose);\n@@ -268,0 +687,30 @@\n+    private static void positionInstructionFrame(final Position position) {\n+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+\n+        \/\/ Get the screen insets to position the frame by taking into\n+        \/\/ account the location of taskbar or menu bar on screen.\n+        GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                                      .getDefaultScreenDevice()\n+                                                      .getDefaultConfiguration();\n+        Insets screenInsets = Toolkit.getDefaultToolkit().getScreenInsets(gc);\n+\n+        switch (position) {\n+            case HORIZONTAL:\n+                int newX = ((screenSize.width \/ 2) - frame.getWidth());\n+                frame.setLocation((newX + screenInsets.left),\n+                                  (frame.getY() + screenInsets.top));\n+                break;\n+\n+            case VERTICAL:\n+                int newY = ((screenSize.height \/ 2) - frame.getHeight());\n+                frame.setLocation((frame.getX() + screenInsets.left),\n+                                  (newY + screenInsets.top));\n+                break;\n+\n+            case TOP_LEFT_CORNER:\n+                frame.setLocation(screenInsets.left, screenInsets.top);\n+                break;\n+        }\n+        syncLocationToWindowManager();\n+    }\n+\n@@ -298,1 +747,1 @@\n-        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+        positionInstructionFrame(position);\n@@ -300,5 +749,7 @@\n-        \/\/ Get the screen insets to position the frame by taking into\n-        \/\/ account the location of taskbar\/menubars on screen.\n-        GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment()\n-                .getDefaultScreenDevice().getDefaultConfiguration();\n-        Insets screenInsets = Toolkit.getDefaultToolkit().getScreenInsets(gc);\n+        if (testWindow != null) {\n+            switch (position) {\n+                case HORIZONTAL:\n+                case TOP_LEFT_CORNER:\n+                    testWindow.setLocation((frame.getX() + frame.getWidth() + 5),\n+                                           frame.getY());\n+                    break;\n@@ -306,24 +757,4 @@\n-        if (position.equals(Position.HORIZONTAL)) {\n-            int newX = ((screenSize.width \/ 2) - frame.getWidth());\n-            frame.setLocation((newX + screenInsets.left),\n-                    (frame.getY() + screenInsets.top));\n-            syncLocationToWindowManager();\n-            if (testWindow != null) {\n-                testWindow.setLocation((frame.getX() + frame.getWidth() + 5),\n-                        frame.getY());\n-            }\n-        } else if (position.equals(Position.VERTICAL)) {\n-            int newY = ((screenSize.height \/ 2) - frame.getHeight());\n-            frame.setLocation((frame.getX() + screenInsets.left),\n-                    (newY + screenInsets.top));\n-            syncLocationToWindowManager();\n-            if (testWindow != null) {\n-                testWindow.setLocation(frame.getX(),\n-                        (frame.getY() + frame.getHeight() + 5));\n-            }\n-        } else if (position.equals(Position.TOP_LEFT_CORNER)) {\n-            frame.setLocation(screenInsets.left, screenInsets.top);\n-            syncLocationToWindowManager();\n-            if (testWindow != null) {\n-                testWindow.setLocation((frame.getX() + frame.getWidth() + 5),\n-                        frame.getY());\n+                case VERTICAL:\n+                    testWindow.setLocation(frame.getX(),\n+                                           (frame.getY() + frame.getHeight() + 5));\n+                    break;\n@@ -332,0 +763,1 @@\n+\n@@ -371,7 +803,1 @@\n-        if (isEventDispatchThread()) {\n-            bounds[0] = frame != null ? frame.getBounds() : null;\n-        } else {\n-            invokeAndWait(() -> {\n-                bounds[0] = frame != null ? frame.getBounds() : null;\n-            });\n-        }\n+        invokeOnEDT(() -> bounds[0] = frame != null ? frame.getBounds() : null);\n@@ -392,0 +818,33 @@\n+    \/**\n+     * Adds a collection of test windows to the windowList to be disposed of\n+     * when the test completes.\n+     *\n+     * @param testWindows the collection of test windows to be disposed of\n+     *\/\n+    public static synchronized void addTestWindow(Collection<? extends Window> testWindows) {\n+        windowList.addAll(testWindows);\n+    }\n+\n+    \/**\n+     * Displays all the windows in {@code windowList}.\n+     *\n+     * @throws InterruptedException if the thread is interrupted while\n+     *              waiting for the event dispatch thread to finish running\n+     *              the {@link #showUI() showUI}\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              the event dispatch thread executes {@code showUI}\n+     *\/\n+    private static void showAllWindows()\n+            throws InterruptedException, InvocationTargetException {\n+        invokeOnEDT(PassFailJFrame::showUI);\n+    }\n+\n+    \/**\n+     * Displays all the windows in {@code windowList}; it has to be called on\n+     * the EDT &mdash; use {@link #showAllWindows() showAllWindows} to ensure it.\n+     *\/\n+    private static synchronized void showUI() {\n+        windowList.forEach(w -> w.setVisible(true));\n+    }\n+\n+\n@@ -424,0 +883,240 @@\n+\n+    public static final class Builder {\n+        private String title;\n+        private String instructions;\n+        private long testTimeOut;\n+        private int rows;\n+        private int columns;\n+        private boolean screenCapture;\n+\n+        private List<? extends Window> testWindows;\n+        private WindowListCreator windowListCreator;\n+        private PositionWindows positionWindows;\n+        private InstructionUI instructionUIHandler;\n+\n+        private Position position;\n+\n+        public Builder title(String title) {\n+            this.title = title;\n+            return this;\n+        }\n+\n+        public Builder instructions(String instructions) {\n+            this.instructions = instructions;\n+            return this;\n+        }\n+\n+        public Builder testTimeOut(long testTimeOut) {\n+            this.testTimeOut = testTimeOut;\n+            return this;\n+        }\n+\n+        public Builder rows(int rows) {\n+            this.rows = rows;\n+            return this;\n+        }\n+\n+        public Builder columns(int columns) {\n+            this.columns = columns;\n+            return this;\n+        }\n+\n+        public Builder screenCapture() {\n+            this.screenCapture = true;\n+            return this;\n+        }\n+\n+        \/**\n+         * Adds a {@code WindowCreator} which the framework will use\n+         * to create the test UI window.\n+         *\n+         * @param windowCreator a {@code WindowCreator}\n+         *              to create the test UI window\n+         * @return this builder\n+         * @throws IllegalArgumentException if {@code windowCreator} is {@code null}\n+         * @throws IllegalStateException if a window creator\n+         *              or a list of test windows is already set\n+         *\/\n+        public Builder testUI(WindowCreator windowCreator) {\n+            if (windowCreator == null) {\n+                throw new IllegalArgumentException(\"The window creator can't be null\");\n+            }\n+\n+            checkWindowsLists();\n+\n+            this.windowListCreator = () -> List.of(windowCreator.createTestUI());\n+            return this;\n+        }\n+\n+        \/**\n+         * Adds a {@code WindowListCreator} which the framework will use\n+         * to create a list of test UI windows.\n+         *\n+         * @param windowListCreator a {@code WindowListCreator}\n+         *              to create test UI windows\n+         * @return this builder\n+         * @throws IllegalArgumentException if {@code windowListCreator} is {@code null}\n+         * @throws IllegalStateException if a window creator\n+         *              or a list of test windows is already set\n+         *\/\n+        public Builder testUI(WindowListCreator windowListCreator) {\n+            if (windowListCreator == null) {\n+                throw new IllegalArgumentException(\"The window list creator can't be null\");\n+            }\n+\n+            checkWindowsLists();\n+\n+            this.windowListCreator = windowListCreator;\n+            return this;\n+        }\n+\n+        \/**\n+         * Adds an already created test UI window.\n+         * The window is positioned and shown automatically.\n+         *\n+         * @param window a test UI window\n+         * @return this builder\n+         *\/\n+        public Builder testUI(Window window) {\n+            return testUI(List.of(window));\n+        }\n+\n+        \/**\n+         * Adds an array of already created test UI windows.\n+         *\n+         * @param windows an array of test UI windows\n+         * @return this builder\n+         *\/\n+        public Builder testUI(Window... windows) {\n+            return testUI(List.of(windows));\n+        }\n+\n+        \/**\n+         * Adds a list of already created test UI windows.\n+         *\n+         * @param windows a list of test UI windows\n+         * @return this builder\n+         * @throws IllegalArgumentException if {@code windows} is {@code null}\n+         *              or the list contains {@code null}\n+         * @throws IllegalStateException if a window creator\n+         *              or a list of test windows is already set\n+         *\/\n+        public Builder testUI(List<? extends Window> windows) {\n+            if (windows == null) {\n+                throw new IllegalArgumentException(\"The list of windows can't be null\");\n+            }\n+            if (windows.stream()\n+                       .anyMatch(Objects::isNull)) {\n+                throw new IllegalArgumentException(\"The list of windows can't contain null\");\n+            }\n+\n+            checkWindowsLists();\n+\n+            this.testWindows = windows;\n+            return this;\n+        }\n+\n+        \/**\n+         * Verifies the state of window list and window creator.\n+         *\n+         * @throws IllegalStateException if a windows list creator\n+         *              or a list of test windows is already set\n+         *\/\n+        private void checkWindowsLists() {\n+            if (windowListCreator != null) {\n+                throw new IllegalStateException(\"Window list creator is already set\");\n+            }\n+            if (testWindows != null) {\n+                throw new IllegalStateException(\"The list of test windows is already set\");\n+            }\n+        }\n+\n+        public Builder positionTestUI(PositionWindows positionWindows) {\n+            this.positionWindows = positionWindows;\n+            return this;\n+        }\n+\n+        public Builder position(Position position) {\n+            this.position = position;\n+            return this;\n+        }\n+\n+        public PassFailJFrame build() throws InterruptedException,\n+                InvocationTargetException {\n+            validate();\n+            return new PassFailJFrame(this);\n+        }\n+\n+        private void validate() {\n+            if (title == null) {\n+                title = TITLE;\n+            }\n+\n+            if (instructions == null || instructions.isEmpty()) {\n+                throw new IllegalStateException(\"Please provide the test \" +\n+                        \"instructions for this manual test\");\n+            }\n+\n+            if (testTimeOut == 0L) {\n+                testTimeOut = TEST_TIMEOUT;\n+            }\n+\n+            if (rows == 0) {\n+                rows = ROWS;\n+            }\n+\n+            if (columns == 0) {\n+                columns = COLUMNS;\n+            }\n+\n+            if (position == null\n+                && (testWindows != null || windowListCreator != null)) {\n+\n+                position = Position.HORIZONTAL;\n+            }\n+\n+            if (positionWindows != null) {\n+                if (testWindows == null && windowListCreator == null) {\n+                    throw new IllegalStateException(\"To position windows, \"\n+                            + \"provide an a list of windows to the builder\");\n+                }\n+                instructionUIHandler = new InstructionUIHandler();\n+            }\n+        }\n+\n+        private final class InstructionUIHandler implements InstructionUI {\n+            @Override\n+            public Point getLocation() {\n+                return frame.getLocation();\n+            }\n+\n+            @Override\n+            public Dimension getSize() {\n+                return frame.getSize();\n+            }\n+\n+            @Override\n+            public Rectangle getBounds() {\n+                return frame.getBounds();\n+            }\n+\n+            @Override\n+            public void setLocation(Point location) {\n+                setLocation(location.x, location.y);\n+            }\n+\n+            @Override\n+            public void setLocation(int x, int y) {\n+                frame.setLocation(x, y);\n+            }\n+\n+            @Override\n+            public Position getPosition() {\n+                return position;\n+            }\n+        }\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":763,"deletions":64,"binary":false,"changes":827,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,0 @@\n-import org.testng.annotations.Test;\n-\n@@ -29,0 +27,3 @@\n+import java.lang.module.ModuleDescriptor.Exports;\n+import java.lang.module.ModuleDescriptor.Opens;\n+import java.lang.module.ModuleDescriptor.Requires;\n@@ -31,0 +32,1 @@\n+import org.testng.annotations.Test;\n@@ -36,1 +38,2 @@\n- * @bug 8275509\n+ * @bug 8275509 8290041\n+ * @summary Tests the ModuleDescriptor.hashCode()\n@@ -39,1 +42,0 @@\n- * @summary Tests the ModuleDescriptor.hashCode() for boot layer modules\n@@ -66,0 +68,93 @@\n+    \/**\n+     * Verifies that two \"equal\" module descriptors which only differ in the order of\n+     * {@link ModuleDescriptor.Opens.Modifier opens modifiers}, that were used to construct the\n+     * descriptors, have the same hashcode.\n+     *\/\n+    @Test\n+    public void testOpensModifiersOrdering() throws Exception {\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Opens.Modifier> mods1 = Set.of(Opens.Modifier.SYNTHETIC, Opens.Modifier.MANDATED);\n+        final ModuleDescriptor desc1 = createModuleDescriptor(mods1, null, null);\n+\n+        \/\/ create the same module descriptor again and this time just change the order of the\n+        \/\/ \"opens\" modifiers' Set.\n+\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Opens.Modifier> mods2 = Set.of(Opens.Modifier.MANDATED, Opens.Modifier.SYNTHETIC);\n+        final ModuleDescriptor desc2 = createModuleDescriptor(mods2, null, null);\n+\n+        \/\/ basic verification of the modifiers themselves before we check the module descriptors\n+        assertEquals(mods1, mods2, \"Modifiers were expected to be equal\");\n+\n+        \/\/ now verify the module descriptors\n+        assertEquals(desc1, desc2, \"Module descriptors were expected to be equal\");\n+        assertEquals(desc1.compareTo(desc2), 0, \"compareTo was expected to return\" +\n+                \" 0 for module descriptors that are equal\");\n+        System.out.println(desc1 + \" hashcode = \" + desc1.hashCode());\n+        System.out.println(desc2 + \" hashcode = \" + desc2.hashCode());\n+        assertEquals(desc1.hashCode(), desc2.hashCode(), \"Module descriptor hashcodes\" +\n+                \" were expected to be equal\");\n+    }\n+\n+    \/**\n+     * Verifies that two \"equal\" module descriptors which only differ in the order of\n+     * {@link ModuleDescriptor.Exports.Modifier exports modifiers}, that were used to construct the\n+     * descriptors, have the same hashcode.\n+     *\/\n+    @Test\n+    public void testExportsModifiersOrdering() throws Exception {\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Exports.Modifier> mods1 = Set.of(Exports.Modifier.SYNTHETIC, Exports.Modifier.MANDATED);\n+        final ModuleDescriptor desc1 = createModuleDescriptor(null, null, mods1);\n+\n+        \/\/ create the same module descriptor again and this time just change the order of the\n+        \/\/ \"exports\" modifiers' Set.\n+\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Exports.Modifier> mods2 = Set.of(Exports.Modifier.MANDATED, Exports.Modifier.SYNTHETIC);\n+        final ModuleDescriptor desc2 = createModuleDescriptor(null, null, mods2);\n+\n+        \/\/ basic verification of the modifiers themselves before we check the module descriptors\n+        assertEquals(mods1, mods2, \"Modifiers were expected to be equal\");\n+\n+        \/\/ now verify the module descriptors\n+        assertEquals(desc1, desc2, \"Module descriptors were expected to be equal\");\n+        assertEquals(desc1.compareTo(desc2), 0, \"compareTo was expected to return\" +\n+                \" 0 for module descriptors that are equal\");\n+        System.out.println(desc1 + \" hashcode = \" + desc1.hashCode());\n+        System.out.println(desc2 + \" hashcode = \" + desc2.hashCode());\n+        assertEquals(desc1.hashCode(), desc2.hashCode(), \"Module descriptor hashcodes\" +\n+                \" were expected to be equal\");\n+    }\n+\n+    \/**\n+     * Verifies that two \"equal\" module descriptors which only differ in the order of\n+     * {@link ModuleDescriptor.Requires.Modifier requires modifiers}, that were used to construct the\n+     * descriptors, have the same hashcode.\n+     *\/\n+    @Test\n+    public void testRequiresModifiersOrdering() throws Exception {\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Requires.Modifier> mods1 = Set.of(Requires.Modifier.SYNTHETIC, Requires.Modifier.MANDATED);\n+        final ModuleDescriptor desc1 = createModuleDescriptor(null, mods1, null);\n+\n+        \/\/ create the same module descriptor again and this time just change the order of the\n+        \/\/ \"exports\" modifiers' Set.\n+\n+        \/\/ important to use Set.of() (i.e. backed by immutable set) to reproduce the issue\n+        final Set<Requires.Modifier> mods2 = Set.of(Requires.Modifier.MANDATED, Requires.Modifier.SYNTHETIC);\n+        final ModuleDescriptor desc2 = createModuleDescriptor(null, mods2, null);\n+\n+        \/\/ basic verification of the modifiers themselves before we check the module descriptors\n+        assertEquals(mods1, mods2, \"Modifiers were expected to be equal\");\n+\n+        \/\/ now verify the module descriptors\n+        assertEquals(desc1, desc2, \"Module descriptors were expected to be equal\");\n+        assertEquals(desc1.compareTo(desc2), 0, \"compareTo was expected to return\" +\n+                \" 0 for module descriptors that are equal\");\n+        System.out.println(desc1 + \" hashcode = \" + desc1.hashCode());\n+        System.out.println(desc2 + \" hashcode = \" + desc2.hashCode());\n+        assertEquals(desc1.hashCode(), desc2.hashCode(), \"Module descriptor hashcodes\" +\n+                \" were expected to be equal\");\n+    }\n+\n@@ -76,0 +171,19 @@\n+\n+    \/\/ creates a module descriptor with passed (optional) opens\/exports\/requires modifiers\n+    private static ModuleDescriptor createModuleDescriptor(\n+            Set<Opens.Modifier> opensModifiers,\n+            Set<Requires.Modifier> reqsModifiers,\n+            Set<Exports.Modifier> expsModifiers) {\n+\n+        final ModuleDescriptor.Builder builder = ModuleDescriptor.newModule(\"foobar\");\n+        if (opensModifiers != null) {\n+            builder.opens(opensModifiers, \"a.p1\", Set.of(\"a.m1\"));\n+        }\n+        if (reqsModifiers != null) {\n+            builder.requires(reqsModifiers, \"a.m2\");\n+        }\n+        if (expsModifiers != null) {\n+            builder.exports(expsModifiers, \"a.b.c\", Set.of(\"a.m3\"));\n+        }\n+        return builder.build();\n+    }\n","filename":"test\/jdk\/java\/lang\/module\/ModuleDescriptorHashCodeTest.java","additions":119,"deletions":5,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -434,1 +434,0 @@\n-        connection.setConnectTimeout(1000);\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/HttpURLConnectionExpectContinueTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,19 +24,0 @@\n-\/*\n- * @test\n- * @summary Basic test for ofFileDownload\n- * @bug 8196965 8302475\n- * @modules java.base\/sun.net.www.http\n- *          java.net.http\/jdk.internal.net.http.common\n- *          java.net.http\/jdk.internal.net.http.frame\n- *          java.net.http\/jdk.internal.net.http.hpack\n- *          java.logging\n- *          jdk.httpserver\n- * @library \/test\/lib http2\/server\n- * @build Http2TestServer\n- * @build jdk.test.lib.net.SimpleSSLContext\n- * @build jdk.test.lib.Platform\n- * @build jdk.test.lib.util.FileUtils\n- * @run testng\/othervm AsFileDownloadTest\n- * @run testng\/othervm\/java.security.policy=AsFileDownloadTest.policy AsFileDownloadTest\n- *\/\n-\n@@ -84,0 +65,19 @@\n+\/*\n+ * @test\n+ * @summary Basic test for ofFileDownload\n+ * @bug 8196965 8302475\n+ * @modules java.base\/sun.net.www.http\n+ *          java.net.http\/jdk.internal.net.http.common\n+ *          java.net.http\/jdk.internal.net.http.frame\n+ *          java.net.http\/jdk.internal.net.http.hpack\n+ *          java.logging\n+ *          jdk.httpserver\n+ * @library \/test\/lib http2\/server\n+ * @build Http2TestServer\n+ * @build jdk.test.lib.net.SimpleSSLContext\n+ * @build jdk.test.lib.Platform\n+ * @build jdk.test.lib.util.FileUtils\n+ * @run testng\/othervm AsFileDownloadTest\n+ * @run testng\/othervm\/java.security.policy=AsFileDownloadTest.policy AsFileDownloadTest\n+ *\/\n+\n@@ -270,2 +270,4 @@\n-        return InetAddress.getLoopbackAddress().getHostName() + \":\"\n-                + server.getAddress().getPort();\n+        final String hostIP = InetAddress.getLoopbackAddress().getHostAddress();\n+        \/\/ escape for ipv6\n+        final String h = hostIP.contains(\":\") ? \"[\" + hostIP + \"]\" : hostIP;\n+        return h + \":\" + server.getAddress().getPort();\n","filename":"test\/jdk\/java\/net\/httpclient\/AsFileDownloadTest.java","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -45,4 +46,9 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/afdt\",   \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/afdt\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/afdt\",   \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/afdt\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/afdt\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/afdt\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/afdt\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/afdt\", \"POST\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/afdt\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/afdt\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/afdt\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/afdt\", \"POST\";\n@@ -61,1 +67,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/AsFileDownloadTest.policy","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -42,8 +43,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -72,1 +82,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherPermsTest1.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -39,1 +39,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -44,8 +45,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -77,1 +87,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherPermsTest2.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -44,1 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -49,8 +50,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -80,1 +90,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherPermsTest3.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -42,8 +43,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -65,1 +75,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherTest.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -533,2 +533,9 @@\n-            return InetAddress.getLoopbackAddress().getHostName() + \":\"\n-                    + getAddress().getPort();\n+            InetSocketAddress address = getAddress();\n+            String hostString = address.getHostString();\n+            hostString = address.getAddress().isLoopbackAddress() || hostString.equals(\"localhost\")\n+                    ? address.getAddress().getHostAddress() \/\/ use the raw IP address, if loopback\n+                    : hostString; \/\/ use whatever host string was used to construct the address\n+            hostString = hostString.contains(\":\")\n+                    ? \"[\" + hostString + \"]\"\n+                    : hostString;\n+            return hostString + \":\" + address.getPort();\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpServerAdapters.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,2 +122,2 @@\n-        httproot = \"http:\/\/localhost:\" + port + \"\/\";\n-        httpsroot = \"https:\/\/localhost:\" + httpsport + \"\/\";\n+        httproot = \"http:\/\/\" + makeServerAuthority(httpServer.getAddress()) + \"\/\";\n+        httpsroot = \"https:\/\/\" + makeServerAuthority(httpsServer.getAddress()) + \"\/\";\n@@ -130,0 +130,7 @@\n+    private static String makeServerAuthority(final InetSocketAddress addr) {\n+        final String hostIP = addr.getAddress().getHostAddress();\n+        \/\/ escape for ipv6\n+        final String h = hostIP.contains(\":\") ? \"[\" + hostIP + \"]\" : hostIP;\n+        return h + \":\" + addr.getPort();\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/LightWeightHttpServer.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -48,1 +48,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -53,8 +54,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -80,1 +90,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/PathSubscriber\/ofFile.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,1 +48,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n@@ -53,8 +54,17 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/http1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/echo\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/echo\", \"GET\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/echo\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/http1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/echo\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/echo\", \"GET\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/echo\", \"GET\";\n@@ -77,1 +87,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/PathSubscriber\/ofFileDownload.policy","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -24,18 +24,0 @@\n-\/*\n- * @test\n- * @bug 8087112\n- * @modules java.net.http\n- *          java.logging\n- *          jdk.httpserver\n- * @library \/test\/lib\n- * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/LogFilter.java\n- * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/EchoHandler.java\n- * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/FileServerHandler.java\n- * @build jdk.test.lib.net.SimpleSSLContext\n- * @build LightWeightHttpServer\n- * @build jdk.test.lib.Platform\n- * @build jdk.test.lib.util.FileUtils\n- * @run testng\/othervm RequestBodyTest\n- * @run testng\/othervm\/java.security.policy=RequestBodyTest.policy RequestBodyTest\n- *\/\n-\n@@ -77,0 +59,17 @@\n+\/*\n+ * @test\n+ * @bug 8087112\n+ * @modules java.net.http\n+ *          java.logging\n+ *          jdk.httpserver\n+ * @library \/test\/lib\n+ * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/LogFilter.java\n+ * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/EchoHandler.java\n+ * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/FileServerHandler.java\n+ * @build jdk.test.lib.net.SimpleSSLContext\n+ * @build LightWeightHttpServer\n+ * @build jdk.test.lib.Platform\n+ * @build jdk.test.lib.util.FileUtils\n+ * @run testng\/othervm RequestBodyTest\n+ * @run testng\/othervm\/java.security.policy=RequestBodyTest.policy RequestBodyTest\n+ *\/\n","filename":"test\/jdk\/java\/net\/httpclient\/RequestBodyTest.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,4 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/echo\/foo\",   \"POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/echo\/foo\",  \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/echo\/foo\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/echo\/foo\",  \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/echo\/foo\",   \"POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/echo\/foo\",  \"POST\";\n@@ -48,1 +50,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/RequestBodyTest.policy","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"listen,accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"listen,accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"listen,accept,resolve\";\n@@ -45,5 +46,9 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http1\/-\",   \"GET,POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https1\/-\", \"GET,POST\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/http2\/-\",   \"GET,POST\";\n-    permission java.net.URLPermission \"https:\/\/localhost:*\/https2\/-\", \"GET,POST\";\n-\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http1\/-\",   \"GET,POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https1\/-\", \"GET,POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/http2\/-\",   \"GET,POST\";\n+    permission java.net.URLPermission \"https:\/\/127.0.0.1:*\/https2\/-\", \"GET,POST\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http1\/-\",   \"GET,POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https1\/-\", \"GET,POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/http2\/-\",   \"GET,POST\";\n+    permission java.net.URLPermission \"https:\/\/[::1]:*\/https2\/-\", \"GET,POST\";\n@@ -61,1 +66,2 @@\n-    permission java.net.SocketPermission \"localhost:*\", \"listen,accept,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:*\", \"listen,accept,resolve\";\n+    permission java.net.SocketPermission \"[::1]:*\", \"listen,accept,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/dependent.policy","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -84,2 +84,5 @@\n-        return InetAddress.getLoopbackAddress().getHostName() + \":\"\n-                + getAddress().getPort();\n+        final InetSocketAddress inetSockAddr = getAddress();\n+        final String hostIP = inetSockAddr.getAddress().getHostAddress();\n+        \/\/ escape for ipv6\n+        final String h = hostIP.contains(\":\") ? \"[\" + hostIP + \"]\" : hostIP;\n+        return h + \":\" + inetSockAddr.getPort();\n@@ -127,0 +130,14 @@\n+    public Http2TestServer(String serverName,\n+                           boolean secure,\n+                           int port,\n+                           ExecutorService exec,\n+                           int backlog,\n+                           Properties properties,\n+                           SSLContext context,\n+                           boolean supportsHTTP11)\n+        throws Exception\n+    {\n+        this(InetAddress.getLoopbackAddress(), serverName, secure, port, exec,\n+                backlog, properties, context, supportsHTTP11);\n+    }\n+\n@@ -137,0 +154,1 @@\n+     * @param localAddr local address to bind to\n@@ -149,1 +167,2 @@\n-    public Http2TestServer(String serverName,\n+    public Http2TestServer(InetAddress localAddr,\n+                           String serverName,\n@@ -166,1 +185,1 @@\n-            server = initSecure(port, backlog);\n+            server = initSecure(localAddr, port, backlog);\n@@ -239,1 +258,1 @@\n-    final ServerSocket initSecure(int port, int backlog) throws Exception {\n+    final ServerSocket initSecure(InetAddress localAddr, int port, int backlog) throws Exception {\n@@ -246,1 +265,1 @@\n-        se.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), backlog);\n+        se.bind(new InetSocketAddress(localAddr, 0), backlog);\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServer.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -42,2 +43,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/0.policy","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/1.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -36,1 +37,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET:*\";\n@@ -41,2 +43,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/10.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -36,1 +37,8 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"socket:\/\/127.0.0.1:${port.number1}\", \"CONNECT\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"socket:\/\/[::1]:${port.number1}\", \"CONNECT\";\n+    \/\/ this specific test uses a proxy configured to loopback address. the httpclient implementation\n+    \/\/ during permissions check uses the InetAddress.hostString() API which can return resolved\n+    \/\/ hostname, so we use include a permission for \"localhost\" to cover that case too\n@@ -43,2 +51,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/11.policy","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -36,1 +37,8 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"socket:\/\/127.0.0.1:${port.number1}\", \"CONNECT\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"socket:\/\/[::1]:${port.number1}\", \"CONNECT\";\n+    \/\/ this specific test uses a proxy configured to loopback address. the httpclient implementation\n+    \/\/ during permissions check uses the InetAddress.hostString() API which can return resolved\n+    \/\/ hostname, so we use include a permission for \"localhost\" to cover that case too\n@@ -43,2 +51,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/12.policy","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"GET\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/14.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -36,1 +37,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"GET:*\";\n@@ -45,2 +47,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/15.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -38,1 +39,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET:Host\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET:Host\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET:Host\";\n@@ -43,2 +45,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/16.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:${port.number}\/files\/foo.txt\", \"GET:Host\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:${port.number}\/files\/foo.txt\", \"GET:Host\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:${port.number}\/files\/foo.txt\", \"GET:Host\";\n@@ -43,2 +45,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/17.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/*\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/*\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/*\", \"GET\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/2.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/redirect\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/redirect\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/redirect\/foo.txt\", \"GET\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/3.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,2 +38,5 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/redirect\/foo.txt\", \"GET\";\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/redirect\/bar.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/redirect\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/redirect\/bar.txt\", \"GET\";\n+    \/\/ ipv6\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/redirect\/foo.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/redirect\/bar.txt\", \"GET\";\n@@ -43,2 +47,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/4.policy","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/redirect\/bar.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/redirect\/bar.txt\", \"GET\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/redirect\/bar.txt\", \"GET\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/5.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"POST\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"POST\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/6.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,3 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"GET:X-Bar\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"GET:X-Bar\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"GET:X-Bar\";\n+\n@@ -42,2 +45,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/7.policy","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"GET:X-Foo1,X-Foo,X-Bar\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"GET:X-Foo1,X-Foo,X-Bar\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"GET:X-Foo1,X-Foo,X-Bar\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/8.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen\";\n@@ -37,1 +38,2 @@\n-    permission java.net.URLPermission \"http:\/\/localhost:*\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/127.0.0.1:*\/files\/foo.txt\", \"GET:*\";\n+    permission java.net.URLPermission \"http:\/\/[::1]:*\/files\/foo.txt\", \"GET:*\";\n@@ -42,2 +44,2 @@\n-    permission java.net.SocketPermission \"localhost:1024-\", \"accept,listen,connect\";\n-    permission java.net.SocketPermission \"localhost:1024-\", \"connect,resolve\";\n+    permission java.net.SocketPermission \"127.0.0.1:1024-\", \"accept,listen,connect,resolve\";\n+    permission java.net.SocketPermission \"[::1]:1024-\", \"accept,listen,connect,resolve\";\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/9.policy","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,0 +106,1 @@\n+    static String serverAuthority;\n@@ -204,1 +205,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -211,1 +212,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -218,1 +219,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -225,1 +226,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/redirect\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/redirect\/foo.txt\");\n@@ -232,1 +233,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/redirect\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/redirect\/foo.txt\");\n@@ -239,1 +240,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/redirect\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/redirect\/foo.txt\");\n@@ -246,1 +247,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -253,1 +254,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -263,1 +264,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -273,1 +274,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -295,1 +296,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -310,1 +311,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -316,2 +317,2 @@\n-                    if (e.getCause() instanceof SecurityException) {\n-                        throw (SecurityException)e.getCause();\n+                    if (e.getCause() instanceof SecurityException se) {\n+                        throw se;\n@@ -326,1 +327,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -372,2 +373,2 @@\n-                    if (t instanceof SecurityException)\n-                        throw (SecurityException)t;\n+                    if (t instanceof SecurityException se)\n+                        throw se;\n@@ -375,2 +376,2 @@\n-                              && (t.getCause() instanceof SecurityException))\n-                        throw ((SecurityException)t.getCause());\n+                              && (t.getCause() instanceof SecurityException se))\n+                        throw se;\n@@ -383,1 +384,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -392,1 +393,1 @@\n-                URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+                URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -429,2 +430,1 @@\n-        InetSocketAddress addr = new InetSocketAddress(InetAddress.getLoopbackAddress(),\n-                                                       p);\n+        InetSocketAddress addr = new InetSocketAddress(InetAddress.getLoopbackAddress(), p);\n@@ -436,1 +436,1 @@\n-        URI u = URI.create(\"http:\/\/localhost:\" + port + \"\/files\/foo.txt\");\n+        URI u = URI.create(\"http:\/\/\" + serverAuthority + \"\/files\/foo.txt\");\n@@ -501,3 +501,4 @@\n-        System.out.println(\"HTTP server port = \" + port);\n-        httproot = \"http:\/\/localhost:\" + port + \"\/files\/\";\n-        redirectroot = \"http:\/\/localhost:\" + port + \"\/redirect\/\";\n+        serverAuthority = makeServerAuthority(addr.getAddress().getHostAddress(), port);\n+        System.out.println(\"HTTP server started at \" + serverAuthority);\n+        httproot = \"http:\/\/\" + serverAuthority + \"\/files\/\";\n+        redirectroot = \"http:\/\/\" + serverAuthority + \"\/redirect\/\";\n@@ -508,0 +509,6 @@\n+    private static String makeServerAuthority(final String host, final int port) {\n+        \/\/ escape for ipv6\n+        final String h = host.contains(\":\") ? \"[\" + host + \"]\" : host;\n+        return h + \":\" + port;\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Security.java","additions":35,"deletions":28,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4859570\n+ * @summary SwingUtilities.sharedOwnerFrame is never disposed\n+ * @key headful\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.Window;\n+import javax.swing.JDialog;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4859570 {\n+    static Window owner;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JDialog dialog = new JDialog();\n+            dialog.setTitle(\"bug4859570\");\n+            dialog.setBounds(100, 100, 100, 100);\n+            dialog.setVisible(true);\n+\n+            owner = dialog.getOwner();\n+            dialog.dispose();\n+        });\n+\n+        Robot r = new Robot();\n+        r.waitForIdle();\n+        r.delay(1000);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (owner.isDisplayable()) {\n+                throw new RuntimeException(\"The shared owner frame should be disposed.\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JDialog\/bug4859570.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4936652\n+ * @key headful\n+ * @summary JDialog.setVisible, JDialog.dispose works incorrectly\n+ *\/\n+\n+import javax.swing.JDialog;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4936652 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            for (int i = 0 ; i < 100; i++) {\n+                System.out.println(\"i: \" + i);\n+                JDialog o = new JDialog();\n+                o.setTitle(\"bug4936652\");\n+                o.setVisible(true);\n+                o.setVisible(false);\n+                o.dispose();\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JDialog\/bug4936652.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4768127\n+ * @summary ToolTipManager not removed from components\n+ * @key headful\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseMotionListener;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLabel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.ToolTipManager;\n+\n+public class bug4768127 {\n+    static JFrame fr;\n+    static volatile Point p;\n+    static volatile JLabel[] label = new JLabel[2];\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4768127\");\n+\n+                JDesktopPane jdp = new JDesktopPane();\n+                JInternalFrame jif1 = new JInternalFrame(\"jif 1\");\n+                JInternalFrame jif2 = new JInternalFrame(\"jif 2\");\n+                label[0] = new JLabel(\"Label 1\");\n+                label[1] = new JLabel(\"Label 2\");\n+\n+                label[0].setToolTipText(\"tooltip 1\");\n+                jif1.getContentPane().add(label[0]);\n+                jif1.setBounds(0, 0, 130, 160);\n+                jif1.setVisible(true);\n+                jdp.add(jif1);\n+\n+                label[1].setToolTipText(\"tooltip 2\");\n+                jif2.getContentPane().add(label[1]);\n+                jif2.setBounds(210, 0, 130, 220);\n+                jif2.setVisible(true);\n+                jdp.add(jif2);\n+\n+                fr.getContentPane().add(jdp);\n+                fr.setLocationRelativeTo(null);\n+\n+                fr.setSize(400, 300);\n+                fr.setVisible(true);\n+            });\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(10);\n+            robot.waitForIdle();\n+            robot.delay(3000);\n+\n+            clickLabel(0, robot);\n+            robot.waitForIdle();\n+            robot.delay(3000);\n+\n+            clickLabel(1, robot);\n+            robot.waitForIdle();\n+            robot.delay(3000);\n+\n+            clickLabel(0, robot);\n+            robot.waitForIdle();\n+            robot.delay(3000);\n+\n+            clickLabel(1, robot);\n+            robot.waitForIdle();\n+            robot.delay(3000);\n+\n+            MouseMotionListener[] mml = label[0].getMouseMotionListeners();\n+            if (mml.length > 0 && mml[0] instanceof ToolTipManager) {\n+                throw new RuntimeException(\"Extra MouseMotionListeners were added to the label \\\"Label 1\\\" by ToolTipManager\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static void clickLabel(int i, Robot robot) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = label[i].getLocationOnScreen();\n+        });\n+        final Rectangle rect = label[i].getBounds();\n+        robot.mouseMove(p.x + rect.width \/ 2, p.y + rect.height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        \/\/Generate mouseMotionEvent\n+        robot.mouseMove(p.x + rect.width \/ 2 + 3, p.y + rect.height \/ 2 + 3);\n+        robot.mouseMove(p.x + rect.width \/ 2, p.y + rect.height \/ 2);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JLabel\/bug4768127.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -0,0 +1,185 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4371134\n+ * @key headful\n+ * @summary displays an animating fps (frames per second)\n+ *  counter.  When the window is dragged from monitor to monitor,\n+ *  the speed of the animation should not change too greatly.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MultimonVImage\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import javax.swing.JViewport;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class MultimonVImage {\n+    private static final String instructionsText =\n+            \"This test should be run on any Windows platform that\\n\" +\n+            \"supports multiple monitors.\\n\" +\n+            \"You will see an animating fps (frames per second) counter at\\n\" +\n+            \"the bottom of the window.  Drag the window into the other monitor\\n\" +\n+            \"and that counter should not change drastically.  If the counter\\n\" +\n+            \"is much lower on one monitor than the other (barring situations\\n\" +\n+            \"described below) then the back buffer may not be accelerated\\n\" +\n+            \"on the second monitor and the test fails.\\n\" +\n+            \"Situations in which performance will differ even though there\\n\" +\n+            \"is acceleration on both monitors include:\\n\" +\n+            \"  - different bit depths on each monitor.  The higher the bits\\n\" +\n+            \"    per pixel, the more data to push and the lower the fps number.\\n\" +\n+            \"    Set the bit depths to be the same on both monitors to work\\n\" +\n+            \"    around this issue.\\n\" +\n+            \"  - the amount of acceleration available on each video card differs,\\n\" +\n+            \"    so if your system uses different video cards then you should\\n\" +\n+            \"    expect some difference between the cards.  To work around this\\n\" +\n+            \"    issue, try to use the same or similar video cards for each monitor.\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+                .title(\"MultimonVImage Instructions\")\n+                .instructions(instructionsText)\n+                .testTimeOut(5)\n+                .rows(25)\n+                .columns(50)\n+                .build();\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            AnimatingFrame af = new AnimatingFrame();\n+            af.test();\n+            af.run();\n+\n+            PassFailJFrame.addTestWindow(af);\n+            PassFailJFrame.positionTestWindow(af,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class FrameCounter {\n+\n+    String fpsString = \"Calculating...\";\n+    long startTime, endTime;\n+    int numFrames;\n+\n+    public FrameCounter() {\n+        startTime = System.currentTimeMillis();\n+    }\n+\n+    public String addFrame() {\n+        ++numFrames;\n+        return calculateFPS();\n+    }\n+\n+    String calculateFPS() {\n+        endTime = System.currentTimeMillis();\n+        double seconds = ((double) endTime - (double) startTime) \/ 1000;\n+        if (seconds > 1) {\n+            int fps = (int) (numFrames \/ seconds);\n+            fpsString = fps + \" fps\";\n+            startTime = endTime;\n+            numFrames = 0;\n+        }\n+        return fpsString;\n+    }\n+}\n+\n+class AnimatingComponent extends JViewport {\n+\n+    FrameCounter frameCounter;\n+    int boxX, boxY;\n+    int boxW, boxH;\n+    int xStep = 1;\n+\n+    public AnimatingComponent() {\n+        frameCounter = new FrameCounter();\n+        boxX = 0;\n+        boxY = 0;\n+        boxW = 100;\n+        boxH = 100;\n+    }\n+\n+    public void paintComponent(Graphics g) {\n+        boxX += xStep;\n+        if (boxX <= 0 || (boxX + boxW) > getWidth()) {\n+            xStep = -xStep;\n+            boxX += (2 * xStep);\n+        }\n+        g.setColor(Color.white);\n+        g.fillRect(0, 0, getWidth(), getHeight());\n+        g.setColor(Color.green);\n+        for (int i = 0; i < 100; ++i) {\n+            g.fillRect(boxX, boxY, 100, 100);\n+        }\n+        g.setColor(Color.black);\n+        g.drawString(frameCounter.addFrame(), 200, getHeight() - 30);\n+    }\n+}\n+\n+class AnimatingFrame extends JFrame implements Runnable {\n+    JViewport component;\n+    Thread thread;\n+\n+    public AnimatingFrame() {\n+        setSize(500, 500);\n+        setTitle(\"MultimonVImage Demo\");\n+        addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                System.exit(0);\n+            }\n+        });\n+\n+        component = new AnimatingComponent();\n+        component.setPreferredSize(new Dimension(500, 500));\n+        setContentPane(component);\n+        component.setVisible(true);\n+\n+        setLocationRelativeTo(null);\n+        pack();\n+        setVisible(true);\n+    }\n+\n+    public void test() {\n+        thread = new Thread(this);\n+        thread.setPriority(Thread.MIN_PRIORITY);\n+        thread.start();\n+    }\n+\n+    public void run() {\n+        Thread me = Thread.currentThread();\n+        while (thread == me) {\n+            component.repaint();\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/MultiMonitor\/MultimonVImage.java","additions":185,"deletions":0,"binary":false,"changes":185,"status":"added"},{"patch":"@@ -75,2 +75,2 @@\n-            \/\/ Allocate 512M of data\n-            byte[][] bytes = new byte[64][];\n+            \/\/ Allocate 512M of data in 1M chunks per iteration\n+            byte[][] bytes = new byte[64 * 8][];\n@@ -78,1 +78,1 @@\n-            for (int i = 0; i < 64; i++) {\n+            for (int i = 0; i < 64 * 8; i++) {\n@@ -80,1 +80,1 @@\n-                    bytes[i] = new byte[8 * 1024 * 1024];\n+                    bytes[i] = new byte[1024 * 1024];\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,3 @@\n+    \/\/ Please resist the temptation to speed up the test by decreasing\n+    \/\/ the period. It is explicity set to 1100 ms to provoke the 1000 ms\n+    \/\/ threshold in the JVM for os::naked_short_sleep().\n@@ -53,1 +56,1 @@\n-            rs.enable(NATIVE_EVENT).withPeriod(Duration.ofMillis(1));\n+            rs.enable(NATIVE_EVENT).withPeriod(Duration.ofMillis(1100));\n","filename":"test\/jdk\/jdk\/jfr\/event\/sampling\/TestNative.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -454,0 +454,18 @@\n+\/*\n+ * @test id=certainlyrootr1\n+ * @bug 8321408\n+ * @summary Interoperability tests with Certainly Root R1\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm -Djava.security.debug=certpath,ocsp CAInterop certainlyrootr1 DEFAULT\n+ *\/\n+\n+\/*\n+ * @test id=certainlyroote1\n+ * @bug 8321408\n+ * @summary Interoperability tests with Certainly Root E1\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm -Djava.security.debug=certpath,ocsp CAInterop certainlyroote1 DEFAULT\n+ *\/\n+\n@@ -616,0 +634,7 @@\n+            case \"certainlyrootr1\" ->\n+                    new CATestURLs(\"https:\/\/valid.root-r1.certainly.com\",\n+                            \"https:\/\/revoked.root-r1.certainly.com\");\n+            case \"certainlyroote1\" ->\n+                    new CATestURLs(\"https:\/\/valid.root-e1.certainly.com\",\n+                            \"https:\/\/revoked.root-e1.certainly.com\");\n+\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @bug 8012229\n+ * @bug 8012229 8323210\n","filename":"test\/jdk\/sun\/java2d\/cmm\/ColorConvertOp\/ColCvtAlphaDifferentSrcDst.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ *      8321408\n@@ -50,1 +51,1 @@\n-    private static final int COUNT = 106;\n+    private static final int COUNT = 108;\n@@ -55,1 +56,1 @@\n-            = \"61:5F:6D:C5:9C:A3:8A:65:3F:CB:F9:F5:26:04:23:F4:53:A6:8C:B3:8B:2B:0A:F0:66:7D:9E:67:B9:4D:AC:B7\";\n+            = \"81:D4:84:F6:92:78:A4:82:25:06:DC:42:25:C9:5D:6C:63:E4:99:CE:BC:ED:66:B3:8C:BA:E6:BA:6B:34:0F:01\";\n@@ -276,0 +277,4 @@\n+            put(\"certainlyrootr1 [jdk]\",\n+                    \"77:B8:2C:D8:64:4C:43:05:F7:AC:C5:CB:15:6B:45:67:50:04:03:3D:51:C6:0C:62:02:A8:E0:C3:34:67:D3:A0\");\n+            put(\"certainlyroote1 [jdk]\",\n+                    \"B4:58:5F:22:E4:AC:75:6A:4E:86:12:A1:36:1C:5D:9D:03:1A:93:FD:84:FE:BB:77:8F:A3:06:8B:0F:C4:2D:C2\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -70,0 +70,5 @@\n+# All tests\n+\n+all = \\\n+    :langtools_all\n+\n@@ -71,3 +76,1 @@\n-    jdk \\\n-    lib \\\n-    tools\n+    \/\n","filename":"test\/langtools\/TEST.groups","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\"\"\");\n+                    <div class=\"summary-table three-column-summary\">\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlTableStyles\/TestHtmlTableStyles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"class-summary-tab0\">\"\"\");\n+                    <div class=\"summary-table two-column-summary\">\"\"\");\n@@ -91,1 +91,1 @@\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"class-summary-tab0\">\"\"\");\n+                    <div class=\"summary-table two-column-summary\">\"\"\");\n@@ -98,1 +98,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\"\"\");\n+                    <div class=\"summary-table three-column-summary\">\"\"\");\n@@ -104,1 +104,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\"\"\");\n+                    <div class=\"summary-table three-column-summary\">\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlTableTags\/TestHtmlTableTags.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"class-summary-tab0\">\"\"\",\n+                    <div class=\"summary-table two-column-summary\">\"\"\",\n@@ -416,1 +416,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+                    <div class=\"summary-table three-column-summary\">\n@@ -457,1 +457,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+                    <div class=\"summary-table three-column-summary\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlVersion\/TestHtmlVersion.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1186,2 +1186,2 @@\n-                    <div id=\"all-modules-table.tabpanel\" role=\"tabpanel\">\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"all-modules-table-tab0\">\"\"\",\n+                    <div id=\"all-modules-table.tabpanel\" role=\"tabpanel\" aria-labelledby=\"all-modules-table-tab0\">\n+                    <div class=\"summary-table two-column-summary\">\"\"\",\n@@ -1272,2 +1272,2 @@\n-                    <div id=\"all-packages-table.tabpanel\" role=\"tabpanel\">\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"all-packages-table-tab0\">\"\"\",\n+                    <div id=\"all-packages-table.tabpanel\" role=\"tabpanel\" aria-labelledby=\"all-packages-table-tab0\">\n+                    <div class=\"summary-table two-column-summary\">\"\"\",\n@@ -1426,1 +1426,1 @@\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"all-classes-table-tab0\">\n+                    <div class=\"summary-table two-column-summary\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -139,2 +139,2 @@\n-                <div id=\"module.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"module-tab0\">\n+                <div id=\"module.tabpanel\" role=\"tabpanel\" aria-labelledby=\"module-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -156,2 +156,2 @@\n-                <div id=\"package.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"package-tab0\">\n+                <div id=\"package.tabpanel\" role=\"tabpanel\" aria-labelledby=\"package-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -173,2 +173,2 @@\n-                <div id=\"interface.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"interface-tab0\">\n+                <div id=\"interface.tabpanel\" role=\"tabpanel\" aria-labelledby=\"interface-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -190,2 +190,2 @@\n-                <div id=\"class.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"class-tab0\">\n+                <div id=\"class.tabpanel\" role=\"tabpanel\" aria-labelledby=\"class-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -208,2 +208,2 @@\n-                <div id=\"enum-class.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"enum-class-tab0\">\n+                <div id=\"enum-class.tabpanel\" role=\"tabpanel\" aria-labelledby=\"enum-class-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -226,2 +226,2 @@\n-                <div id=\"exception.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"exception-tab0\">\n+                <div id=\"exception.tabpanel\" role=\"tabpanel\" aria-labelledby=\"exception-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -243,2 +243,2 @@\n-                <div id=\"error.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"error-tab0\">\n+                <div id=\"error.tabpanel\" role=\"tabpanel\" aria-labelledby=\"error-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -261,2 +261,2 @@\n-                <div id=\"record-class.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"record-class-tab0\">\n+                <div id=\"record-class.tabpanel\" role=\"tabpanel\" aria-labelledby=\"record-class-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -280,2 +280,2 @@\n-                <div id=\"annotation-interface.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"annotation-interface-tab0\">\n+                <div id=\"annotation-interface.tabpanel\" role=\"tabpanel\" aria-labelledby=\"annotation-interface-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -306,2 +306,2 @@\n-                <div id=\"field.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"field-tab0\">\n+                <div id=\"field.tabpanel\" role=\"tabpanel\" aria-labelledby=\"field-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -349,2 +349,2 @@\n-                <div id=\"method.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"method-tab0\">\n+                <div id=\"method.tabpanel\" role=\"tabpanel\" aria-labelledby=\"method-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -415,2 +415,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -458,2 +458,2 @@\n-                <div id=\"enum-constant.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"enum-constant-tab0\">\n+                <div id=\"enum-constant.tabpanel\" role=\"tabpanel\" aria-labelledby=\"enum-constant-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -496,2 +496,2 @@\n-                <div id=\"annotation-interface-member.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"annotation-interface-member-tab0\">\n+                <div id=\"annotation-interface-member.tabpanel\" role=\"tabpanel\" aria-labelledby=\"annotation-interface-member-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -525,2 +525,2 @@\n-                <div id=\"for-removal.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"for-removal-tab0\">\n+                <div id=\"for-removal.tabpanel\" role=\"tabpanel\" aria-labelledby=\"for-removal-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -542,2 +542,2 @@\n-                <div id=\"method.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"method-tab0\">\n+                <div id=\"method.tabpanel\" role=\"tabpanel\" aria-labelledby=\"method-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -559,2 +559,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -576,2 +576,2 @@\n-                <div id=\"enum-constant.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"enum-constant-tab0\">\n+                <div id=\"enum-constant.tabpanel\" role=\"tabpanel\" aria-labelledby=\"enum-constant-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -595,2 +595,2 @@\n-                <div id=\"annotation-interface-member.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"annotation-interface-member-tab0\">\n+                <div id=\"annotation-interface-member.tabpanel\" role=\"tabpanel\" aria-labelledby=\"annotation-interface-member-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -629,2 +629,2 @@\n-                <div id=\"method.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"method-tab0\">\n+                <div id=\"method.tabpanel\" role=\"tabpanel\" aria-labelledby=\"method-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -653,2 +653,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -692,2 +692,2 @@\n-                <div id=\"for-removal.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"for-removal-tab0\">\n+                <div id=\"for-removal.tabpanel\" role=\"tabpanel\" aria-labelledby=\"for-removal-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -709,2 +709,2 @@\n-                <div id=\"method.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"method-tab0\">\n+                <div id=\"method.tabpanel\" role=\"tabpanel\" aria-labelledby=\"method-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -726,2 +726,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -764,2 +764,2 @@\n-                <div id=\"class.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"class-tab0\">\n+                <div id=\"class.tabpanel\" role=\"tabpanel\" aria-labelledby=\"class-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -781,2 +781,2 @@\n-                <div id=\"field.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"field-tab0\">\n+                <div id=\"field.tabpanel\" role=\"tabpanel\" aria-labelledby=\"field-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -804,2 +804,2 @@\n-                <div id=\"method.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"method-tab0\">\n+                <div id=\"method.tabpanel\" role=\"tabpanel\" aria-labelledby=\"method-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -836,2 +836,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n@@ -875,2 +875,2 @@\n-                <div id=\"constructor.tabpanel\" role=\"tabpanel\">\n-                <div class=\"summary-table two-column-summary\" aria-labelledby=\"constructor-tab0\">\n+                <div id=\"constructor.tabpanel\" role=\"tabpanel\" aria-labelledby=\"constructor-tab0\">\n+                <div class=\"summary-table two-column-summary\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewApiList\/TestNewApiList.java","additions":58,"deletions":58,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+                    <div class=\"summary-table three-column-summary\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/TestOverrideMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -825,2 +825,2 @@\n-                    <div id=\"all-classes-table.tabpanel\" role=\"tabpanel\">\n-                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"all-classes-table-tab0\">\n+                    <div id=\"all-classes-table.tabpanel\" role=\"tabpanel\" aria-labelledby=\"all-classes-table-tab0\">\n+                    <div class=\"summary-table two-column-summary\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,12 @@\n-tier1 = .\n+# All tests\n+\n+all = \\\n+    :libtest_all\n+\n+libtest_all = \\\n+    \/\n+\n+# Tiered testing definitions\n+\n+tier1 = \\\n+    :all\n","filename":"test\/lib-test\/TEST.groups","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                \"isHardenedOSX\");\n+                \"isHardenedOSX\", \"hasOSXPlistEntries\");\n","filename":"test\/lib-test\/jdk\/test\/lib\/TestMutuallyExclusivePlatformPredicates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,11 +263,1 @@\n-    \/**\n-     * Return true if the test JDK is hardened, otherwise false. Only valid on OSX.\n-     *\/\n-    public static boolean isHardenedOSX() throws IOException {\n-        \/\/ We only care about hardened binaries for 10.14 and later (actually 10.14.5, but\n-        \/\/ for simplicity we'll also include earlier 10.14 versions).\n-        if (getOsVersionMajor() == 10 && getOsVersionMinor() < 14) {\n-            return false; \/\/ assume not hardened\n-        }\n-\n-        \/\/ Find the path to the java binary.\n+    private static Process launchCodesignOnJavaBinary() throws IOException {\n@@ -280,2 +270,0 @@\n-\n-        \/\/ Run codesign on the java binary.\n@@ -285,0 +273,30 @@\n+        return codesignProcess;\n+    }\n+\n+    public static boolean hasOSXPlistEntries() throws IOException {\n+        Process codesignProcess = launchCodesignOnJavaBinary();\n+        BufferedReader is = new BufferedReader(new InputStreamReader(codesignProcess.getInputStream()));\n+        String line;\n+        while ((line = is.readLine()) != null) {\n+            System.out.println(\"STDOUT: \" + line);\n+            if (line.indexOf(\"Info.plist=not bound\") != -1) {\n+                return false;\n+            }\n+            if (line.indexOf(\"Info.plist entries=\") != -1) {\n+                return true;\n+            }\n+        }\n+        System.out.println(\"No matching Info.plist entry was found\");\n+        return false;\n+    }\n+\n+    \/**\n+     * Return true if the test JDK is hardened, otherwise false. Only valid on OSX.\n+     *\/\n+    public static boolean isHardenedOSX() throws IOException {\n+        \/\/ We only care about hardened binaries for 10.14 and later (actually 10.14.5, but\n+        \/\/ for simplicity we'll also include earlier 10.14 versions).\n+        if (getOsVersionMajor() == 10 && getOsVersionMinor() < 14) {\n+            return false; \/\/ assume not hardened\n+        }\n+        Process codesignProcess = launchCodesignOnJavaBinary();\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":32,"deletions":14,"binary":false,"changes":46,"status":"modified"},{"filename":"test\/lib\/jdk\/test\/lib\/net\/testkeys","binary":true,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,0 +125,2 @@\n+        } else {\n+            System.out.println(\"Core file not found. Trying to find a reason why...\");\n@@ -146,0 +148,5 @@\n+            } else {\n+                \/\/ codesign has to add entitlements using the plist. If this is not present we might not generate a core file.\n+                if (!Platform.hasOSXPlistEntries()) {\n+                    throw new SkippedException(\"Cannot produce core file with binary having no plist entitlement entries\");\n+                }\n","filename":"test\/lib\/jdk\/test\/lib\/util\/CoreUtils.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}