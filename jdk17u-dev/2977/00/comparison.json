{"files":[{"patch":"@@ -58,8 +58,9 @@\n-        buffer.bufPtr += ID_SIZE; \/\/ Skip the id\n-        version = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;\n-        version |= buffer.buf[buffer.bufPtr++] & 0xff;\n-        flags0 = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;\n-        flags0 |= buffer.buf[buffer.bufPtr++] & 0xff;\n-        flags1 = (buffer.buf[buffer.bufPtr++] & 0xff) << 8;\n-        flags1 |= buffer.buf[buffer.bufPtr++] & 0xff;\n-        transform = buffer.buf[buffer.bufPtr++] & 0xff;\n+        int markPtr = buffer.bufPtr;\n+        markPtr += ID_SIZE; \/\/ Skip the id\n+        version = (buffer.buf[markPtr++] & 0xff) << 8;\n+        version |= buffer.buf[markPtr++] & 0xff;\n+        flags0 = (buffer.buf[markPtr++] & 0xff) << 8;\n+        flags0 |= buffer.buf[markPtr++] & 0xff;\n+        flags1 = (buffer.buf[markPtr++] & 0xff) << 8;\n+        flags1 |= buffer.buf[markPtr++] & 0xff;\n+        transform = buffer.buf[markPtr++] & 0xff;\n@@ -67,0 +68,1 @@\n+        buffer.bufPtr += length;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/AdobeMarkerSegment.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright 2023 Alphabet LLC.  All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     6355567\n+ * @summary Verifies that AdobeMarkerSegment() keeps the available bytes\n+ *          and buffer pointer in sync, when a non-standard length Adobe\n+ *          marker is encountered.\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageReader;\n+import javax.imageio.stream.ImageInputStream;\n+\n+public class LargeAdobeMarkerSegmentTest {\n+\n+    private static String fileName = \"jdk_6355567.jpg\";\n+\n+    public static void main(String[] args) throws IOException {\n+      \/*\n+       * Open a JPEG image, and get the metadata. Without the fix for\n+       * 6355567, a NegativeArraySizeException is thrown while reading\n+       * the metadata from the JPEG below.\n+       *\/\n+      String sep = System.getProperty(\"file.separator\");\n+      String dir = System.getProperty(\"test.src\", \".\");\n+      String filePath = dir+sep+fileName;\n+      System.out.println(\"Test file: \" + filePath);\n+      File f = new File(filePath);\n+      ImageInputStream iis = ImageIO.createImageInputStream(f);\n+      ImageReader r = ImageIO.getImageReaders(iis).next();\n+      r.setInput(iis);\n+      r.getImageMetadata(0);\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/LargeAdobeMarkerSegmentTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/jdk_6355567.jpg","binary":true,"status":"added"}]}