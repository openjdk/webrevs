{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.concurrent.atomic.AtomicInteger;\n@@ -52,2 +51,0 @@\n-    private static volatile String tempDir;\n-    private static final AtomicInteger count = new AtomicInteger(0);\n@@ -56,9 +53,0 @@\n-    static {\n-        try {\n-            Path p = Files.createTempDirectory(\"readWriteTest\");\n-            tempDir = p.toString();\n-        } catch (IOException e) {\n-            tempDir = null;\n-        }\n-    }\n-\n@@ -66,2 +54,1 @@\n-        int next = count.incrementAndGet();\n-        socket = Paths.get(tempDir, Integer.toString(next));\n+        socket = Files.createTempDirectory(UnixSocketChannelReadWrite.class.getSimpleName()).resolve(\"sock\");\n@@ -93,1 +80,1 @@\n-        Files.delete(Path.of(tempDir));\n+        Files.delete(socket.getParent());\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/net\/UnixSocketChannelReadWrite.java","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"}]}