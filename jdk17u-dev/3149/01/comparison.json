{"files":[{"patch":"@@ -205,1 +205,1 @@\n-     * RFC5280: DNS name restrictions are expressed as host.example.com.\n+     * RFC5280: For DNS names, restrictions MUST use the DNSName syntax in Section 4.2.1.6.\n@@ -211,6 +211,0 @@\n-     * RFC 5280:  DNSName restrictions are expressed as foo.bar.com.\n-     * Any DNSName that\n-     * can be constructed by simply adding to the left hand side of the name\n-     * satisfies the name constraint. For example, www.foo.bar.com would\n-     * satisfy the constraint but foo1.bar.com would not.\n-     * <p>\n@@ -241,1 +235,1 @@\n-                if (thisName.charAt(inNdx-1) == '.' )\n+                if (thisName.charAt(inNdx-1) == '.' ^ inName.charAt(0) == '.')\n@@ -247,1 +241,1 @@\n-                if (inName.charAt(ndx-1) == '.' )\n+                if (inName.charAt(ndx-1) == '.' ^ thisName.charAt(0) == '.')\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DNSName.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8311546\n+ * @summary Adopt de-facto standards on x509 Name Constraints with leading dot. Certs\n+ * can be generated by running generate-certs.sh\n+ * @run main LeadingPeriod\n+ *\/\n+\n+import java.io.*;\n+import java.nio.file.*;\n+import java.util.*;\n+import java.security.Security;\n+import java.security.cert.*;\n+\n+public class LeadingPeriod {\n+\n+    public static void main(String[] args) throws Exception {\n+        String certs = System.getProperty(\"test.src\", \".\/\") + \"\/certs\/\";\n+        validate(certs + \"withoutLeadingPeriod\");\n+        validate(certs + \"withLeadingPeriod\");\n+    }\n+\n+    public static void validate(String certPath) throws Exception {\n+        byte[] targetCertBytes = Files.readAllBytes(Paths.get(certPath + \"\/leaf.pem\"));\n+        byte[] caCertBytes = Files.readAllBytes(Paths.get(certPath + \"\/ca.pem\"));\n+\n+        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+        Certificate caCert = cf.generateCertificate(new ByteArrayInputStream(caCertBytes));\n+        Certificate targetCert = cf.generateCertificate(new ByteArrayInputStream(targetCertBytes));\n+\n+        TrustAnchor anchor = new TrustAnchor((X509Certificate) caCert, null);\n+\n+        PKIXParameters params = new PKIXParameters(Collections.singleton(anchor));\n+\n+        \/\/ Disable certificate revocation checking\n+        params.setRevocationEnabled(false);\n+\n+        \/\/ Set validity date, so that validation won't fail when cert expires\n+        params.setDate(((X509Certificate)targetCert).getNotBefore());\n+\n+        CertPath path = cf.generateCertPath(List.of(targetCert, caCert));\n+\n+        CertPathValidator validator = CertPathValidator.getInstance(\"PKIX\");\n+        validator.validate(path, params);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/LeadingPeriod.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+#!\/usr\/bin\/env bash\n+\n+set -e\n+\n+###############################################################\n+# CA with a leading period in the name constraint #\n+###############################################################\n+mkdir -p withLeadingPeriod\n+\n+openssl req \\\n+  -newkey rsa:1024 \\\n+  -keyout withLeadingPeriod\/ca.key \\\n+  -out withLeadingPeriod\/ca.csr \\\n+  -subj \"\/C=US\/O=Example\/CN=Example CA with period\" \\\n+  -nodes\n+\n+openssl x509 \\\n+  -req \\\n+  -in withLeadingPeriod\/ca.csr \\\n+  -extfile openssl.cnf \\\n+  -extensions withLeadingPeriod \\\n+  -signkey withLeadingPeriod\/ca.key \\\n+  -out withLeadingPeriod\/ca.pem\n+\n+# leaf certificate\n+openssl req \\\n+  -newkey rsa:1024 \\\n+  -keyout withLeadingPeriod\/leaf.key \\\n+  -out withLeadingPeriod\/leaf.csr \\\n+  -subj '\/CN=demo.example.com' \\\n+  -addext 'subjectAltName = DNS:demo.example.com' \\\n+  -nodes\n+\n+openssl x509 \\\n+  -req \\\n+  -in withLeadingPeriod\/leaf.csr \\\n+  -CAcreateserial \\\n+  -CA withLeadingPeriod\/ca.pem \\\n+  -CAkey withLeadingPeriod\/ca.key \\\n+  -out withLeadingPeriod\/leaf.pem\n+\n+\n+# ##################################################################\n+# # CA without a leading period in the name contraint #\n+# ##################################################################\n+mkdir -p withoutLeadingPeriod\n+\n+openssl req \\\n+  -newkey rsa:1024 \\\n+  -keyout withoutLeadingPeriod\/ca.key \\\n+  -out withoutLeadingPeriod\/ca.csr \\\n+  -subj \"\/C=US\/O=Example\/CN=Example CA without period\" \\\n+  -nodes\n+\n+openssl x509 \\\n+  -req \\\n+  -in withoutLeadingPeriod\/ca.csr \\\n+  -extfile openssl.cnf \\\n+  -extensions withoutLeadingPeriod \\\n+  -signkey withoutLeadingPeriod\/ca.key \\\n+  -out withoutLeadingPeriod\/ca.pem\n+\n+# leaf certificate\n+openssl req \\\n+  -newkey rsa:1024 \\\n+  -keyout withoutLeadingPeriod\/leaf.key \\\n+  -out withoutLeadingPeriod\/leaf.csr \\\n+  -subj '\/CN=demo.example.com' \\\n+  -addext 'subjectAltName = DNS:demo.example.com' \\\n+  -nodes\n+\n+openssl x509 \\\n+  -req \\\n+  -in withoutLeadingPeriod\/leaf.csr \\\n+  -CAcreateserial \\\n+  -CA withoutLeadingPeriod\/ca.pem \\\n+  -CAkey withoutLeadingPeriod\/ca.key \\\n+  -out withoutLeadingPeriod\/leaf.pem\n+\n+\n+# # Verify both leaf certificates\n+\n+set +e\n+openssl verify \\\n+  -CAfile withLeadingPeriod\/ca.pem \\\n+  withLeadingPeriod\/leaf.pem\n+\n+openssl verify \\\n+  -CAfile withoutLeadingPeriod\/ca.pem \\\n+  withoutLeadingPeriod\/leaf.pem\n+  \n\\ No newline at end of file\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/generate-certs.sh","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+#\n+# OpenSSL configuration file.\n+#\n+\n+[ withLeadingPeriod ]\n+subjectKeyIdentifier    = hash\n+authorityKeyIdentifier  = keyid:always,issuer\n+basicConstraints        = critical,CA:true\n+keyUsage                = critical,keyCertSign\n+nameConstraints         = critical,permitted;DNS:.example.com\n+\n+[ withoutLeadingPeriod ]\n+subjectKeyIdentifier    = hash\n+authorityKeyIdentifier  = keyid:always,issuer\n+basicConstraints        = critical,CA:true\n+keyUsage                = critical,keyCertSign\n+nameConstraints         = critical,permitted;DNS:example.com\n+\n+[ v3_ca ]\n+subjectKeyIdentifier    = hash\n+authorityKeyIdentifier  = keyid:always,issuer\n+basicConstraints        = critical,CA:true\n+keyUsage                = critical,keyCertSign\n+\n+\n+[req]\n+distinguished_name = req_distinguished_name\n+x509_extensions\t\t = v3_ca  # The extentions to add to self signed certs\n+req_extensions\t\t = v3_req # The extensions to add to req's\n+\n+prompt = no\n+\n+[req_distinguished_name]\n+C = US\n+O = Example\n+CN = example.com\n+\n+[v3_req]\n+keyUsage = keyEncipherment, dataEncipherment\n+extendedKeyUsage = serverAuth\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/openssl.cnf","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,16 @@\n+-----BEGIN CERTIFICATE-----\n+MIICgzCCAeygAwIBAgIJANBGv+BGZZHtMA0GCSqGSIb3DQEBCwUAMEAxCzAJBgNV\n+BAYTAlVTMRAwDgYDVQQKDAdFeGFtcGxlMR8wHQYDVQQDDBZFeGFtcGxlIENBIHdp\n+dGggcGVyaW9kMB4XDTIzMTAxOTIwNTE0NVoXDTIzMTExODIwNTE0NVowQDELMAkG\n+A1UEBhMCVVMxEDAOBgNVBAoMB0V4YW1wbGUxHzAdBgNVBAMMFkV4YW1wbGUgQ0Eg\n+d2l0aCBwZXJpb2QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAPfaISk+Dvzk\n+m3AY7IDZYrGWpwxHciacalrsrOFl3mj3FQ\/kVhofDri3mE7bxNKWyHNcbt+Cteck\n+TsGKBH85QsIifju7hqlrR+UbYtQF9\/REkxX72gzim4xGk9KmKkuGpT5aZgvTE5eg\n+ZumJ9XxCjGn5nbsdJoqAE\/9B96GqXJvlAgMBAAGjgYQwgYEwHQYDVR0OBBYEFG8h\n+vtka47iFUsc+3wmQ3LQRXUv3MB8GA1UdIwQYMBaAFG8hvtka47iFUsc+3wmQ3LQR\n+XUv3MA8GA1UdEwEB\/wQFMAMBAf8wDgYDVR0PAQH\/BAQDAgIEMB4GA1UdHgEB\/wQU\n+MBKgEDAOggwuZXhhbXBsZS5jb20wDQYJKoZIhvcNAQELBQADgYEAkPeCbKokI067\n+Dt2bommouO7LhTXivjMsByfZs8i9LZUVJz5Is+mDC36nLy4U3+QhofRLlEkWyOlE\n+033xBtm4YPsazpur79PJtvZemV0KwwMtKCoJYNlcy2llmdKjUwe4PsPnJPqH2KL5\n+Cxios1gil8XL5OCmEUSCT9uBblh+9gk=\n+-----END CERTIFICATE-----\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/withLeadingPeriod\/ca.pem","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,12 @@\n+-----BEGIN CERTIFICATE-----\n+MIIB0jCCATsCCQCgOCS7vOUOXTANBgkqhkiG9w0BAQsFADBAMQswCQYDVQQGEwJV\n+UzEQMA4GA1UECgwHRXhhbXBsZTEfMB0GA1UEAwwWRXhhbXBsZSBDQSB3aXRoIHBl\n+cmlvZDAeFw0yMzEwMTkyMDUxNDVaFw0yMzExMTgyMDUxNDVaMBsxGTAXBgNVBAMM\n+EGRlbW8uZXhhbXBsZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALxi\n+O4r50rNBbHu\/blOSRfo9Vqei+QFS7fPwme68FOcvG+uYXf7zluO59V+8O4RPO+ZJ\n+W6meZvtpOCWFvlSMhBLTRz350LuSPWF+\/tnbiyEv487Vi6Tp7kxJytIcMtH\/sWkw\n+hF0Og8YYt3Xm2aLYPxZHGkvOccjau5X1xG1YiULzAgMBAAEwDQYJKoZIhvcNAQEL\n+BQADgYEA8OXnFO3yZSVmQfYvC2o9amYa7tNUPHgvEjp7xDlPkvL5zF+n8k0hT0kt\n+pv4BXzRqVIWsZcNi3H1wk6LMeUXi8EWCOR6gclWI0wZkWBhtoh8SCd2VJRmcv+zG\n+EnInCapszNKN05KEzaFOQv0QayILBUGgHTTXOgbEmryLHXg6zik=\n+-----END CERTIFICATE-----\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/withLeadingPeriod\/leaf.pem","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -0,0 +1,16 @@\n+-----BEGIN CERTIFICATE-----\n+MIICiDCCAfGgAwIBAgIJALUX88nU2b75MA0GCSqGSIb3DQEBCwUAMEMxCzAJBgNV\n+BAYTAlVTMRAwDgYDVQQKDAdFeGFtcGxlMSIwIAYDVQQDDBlFeGFtcGxlIENBIHdp\n+dGhvdXQgcGVyaW9kMB4XDTIzMTAxOTIwNTE0NVoXDTIzMTExODIwNTE0NVowQzEL\n+MAkGA1UEBhMCVVMxEDAOBgNVBAoMB0V4YW1wbGUxIjAgBgNVBAMMGUV4YW1wbGUg\n+Q0Egd2l0aG91dCBwZXJpb2QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANmH\n+HqVoDjgoS60aPhQisqEL3as81tPXxXgnp5M0TE+Lb0z\/kXS2mkqYYhzcZneBhVyI\n+oGTnSnTSh6S1r\/gE80x+hH4ZrLZR7jJMRDA9Q7RTOZBNgozS4XnE3AV\/EjrIzHJ1\n+IEt1ezoj2QNdVOv7UHprHGoARl9tdxre4MVUv4S3AgMBAAGjgYMwgYAwHQYDVR0O\n+BBYEFFG0Mvse4c5C01o8kvKiM4MKMJTCMB8GA1UdIwQYMBaAFFG0Mvse4c5C01o8\n+kvKiM4MKMJTCMA8GA1UdEwEB\/wQFMAMBAf8wDgYDVR0PAQH\/BAQDAgIEMB0GA1Ud\n+HgEB\/wQTMBGgDzANggtleGFtcGxlLmNvbTANBgkqhkiG9w0BAQsFAAOBgQC0CKS0\n+JOR8hfUkZHBo52PrF3IKs33wczH5mfV+HLTdSeKtBD0Vj\/7DoT0Yx2k5n6vpwA\/x\n+LTSMC4wUo4hb5164ks45iloU0FrA+n9fWbeqwhQb+DW5MSOgoVLkW+rcdKbDatTO\n+ENcKZsqiG3aKM7pS7mQa+kUUpXWBUgVnhcsYtQ==\n+-----END CERTIFICATE-----\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/withoutLeadingPeriod\/ca.pem","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,12 @@\n+-----BEGIN CERTIFICATE-----\n+MIIB1TCCAT4CCQDLscehyPPGXjANBgkqhkiG9w0BAQsFADBDMQswCQYDVQQGEwJV\n+UzEQMA4GA1UECgwHRXhhbXBsZTEiMCAGA1UEAwwZRXhhbXBsZSBDQSB3aXRob3V0\n+IHBlcmlvZDAeFw0yMzEwMTkyMDUxNDVaFw0yMzExMTgyMDUxNDVaMBsxGTAXBgNV\n+BAMMEGRlbW8uZXhhbXBsZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB\n+AMZM9Prp5DkAe4pkLqn4v8DFamMtWVqPlYacJacGzBkuzBn8VNQQw4qnf6wiVHBj\n+uXLHrUCbldtKFK4XdVukmVyYSLR5BBPxA20fjZcsrBZW7u\/14qWmIZW7G0xphezg\n+6g33qNPq9CPqVHR+IrfEmjWnLjc2KrZ3OQElpJOGp48hAgMBAAEwDQYJKoZIhvcN\n+AQELBQADgYEAYbIuAQKTXsgaBP3pyMqxPHvklDI7wJjEapbKDsOXYmKMb33pmFSD\n+ntQFZuOKYNV2rAqQaV\/3kiWKyR4vO\/gsCfuFeW8kxkhZEXX9CNU0Z6mKcvy274A4\n+K0gqYGki8hyCc5IMWTUAX2TLdq8W1hwfbjeiNqTY21e+6lIa3kcuLC0=\n+-----END CERTIFICATE-----\n","filename":"test\/jdk\/sun\/security\/x509\/DNSName\/certs\/withoutLeadingPeriod\/leaf.pem","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"}]}