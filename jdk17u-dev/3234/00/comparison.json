{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -158,0 +158,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace007.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,0 +162,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace008.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,0 +162,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace009.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace010.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,0 +181,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace011.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,0 +185,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace012.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace013.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -176,0 +176,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace014.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,0 +177,5 @@\n+            if (all == null) {\n+                complain(\"No stacktrace for thread \" + threads[i].getName() +\n+                         \" was found in the set of all traces\");\n+                return false;\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace015.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}