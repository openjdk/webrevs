{"files":[{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4139900\n+ * @summary height of combobox may differ\n+ * @key headful\n+ * @run main bug4139900\n+*\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import java.awt.event.ActionListener;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4139900 {\n+    static JButton button;\n+    static JFrame frame;\n+    static JComboBox<String> comboBox;\n+    static int initialHeight;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(bug4139900::init);\n+            test();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void test() throws Exception {\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        robot.delay(500);\n+\n+        SwingUtilities.invokeAndWait(() -> initialHeight = comboBox.getHeight());\n+\n+        for (int i = 0; i < 10; i++) {\n+            SwingUtilities.invokeAndWait(() -> button.doClick());\n+            robot.waitForIdle();\n+            robot.delay(200);\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (comboBox.getHeight() != initialHeight) {\n+                    throw new RuntimeException(\n+                            \"Test failed: height differs from initial %d != %d\"\n+                                    .formatted(comboBox.getHeight(), initialHeight)\n+                    );\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void init() {\n+        frame = new JFrame(\"bug4139900\");\n+\n+        DefaultComboBoxModel<String> model =\n+                new DefaultComboBoxModel<>(new String[]{\n+                        \"Coma Berenices\",\n+                        \"Triangulum\",\n+                        \"Camelopardis\",\n+                        \"Cassiopea\"\n+                });\n+\n+        comboBox = new JComboBox<>();\n+        comboBox.setEditable(true);\n+\n+        button = new JButton(\"Add\/Remove Items\");\n+\n+        ActionListener actionListener = e -> {\n+            if (comboBox.getModel() == model) {\n+                comboBox.setModel(new DefaultComboBoxModel<>());\n+            } else {\n+                comboBox.setModel(model);\n+            }\n+        };\n+\n+        button.addActionListener(actionListener);\n+\n+        JPanel panel = new JPanel();\n+        panel.setPreferredSize(new Dimension(300, 100));\n+        panel.add(comboBox);\n+        panel.add(button);\n+\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4139900.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4174876\n+ * @summary JComboBox tooltips do not work properly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4174876\n+ *\/\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+\n+public class bug4174876 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Hold the mouse over both combo boxes.\n+            A tool tip should appear over every area of both of them.\n+            Notably, if you hold the mouse over the button on the right one,\n+            a tool tip should appear.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TransparentTitleTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .splitUIBottom(bug4174876::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JComponent createTestUI() {\n+        JComboBox<String> comboBox1 = new JComboBox<>(new String[]{\n+                \"Coma Berenices\",\n+                \"Triangulum\",\n+                \"Camelopardis\",\n+                \"Cassiopea\"\n+        });\n+        JComboBox<String> comboBox2 = new JComboBox<>(new String[]{\n+                \"Coma Berenices\",\n+                \"Triangulum\",\n+                \"Camelopardis\",\n+                \"Cassiopea\"\n+        });\n+\n+        comboBox1.setToolTipText(\"Combo Box #1\");\n+        comboBox2.setToolTipText(\"Combo Box #2\");\n+        comboBox2.setEditable(true);\n+\n+        JPanel panel = new JPanel();\n+        panel.add(comboBox1);\n+        panel.add(comboBox2);\n+        return panel;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4174876.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4474400\n+ * @summary Tests JTextArea wrapping with font change\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4474400\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+\n+public class bug4474400 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press the \"Change Font\" button. The two lines of text should be\n+            properly drawn using the larger font, there should be empty line\n+            between them. If display is garbled, test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4474400 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .splitUIRight(bug4474400::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JComponent createTestUI() {\n+        Font smallFont = new Font(\"SansSerif\", Font.PLAIN, 12);\n+        Font largeFont = new Font(\"SansSerif\", Font.PLAIN, 36);\n+\n+        JTextArea textArea = new JTextArea(\"This is the first line\\n\\nThis is the third line\");\n+        textArea.setFont(smallFont);\n+        textArea.setEditable(false);\n+        textArea.setLineWrap(true);\n+        textArea.setWrapStyleWord(true);\n+\n+        JButton b = new JButton(\"Change Font\");\n+        b.addActionListener((e) -> textArea.setFont(largeFont));\n+\n+        JPanel panel = new JPanel(new BorderLayout());\n+        panel.setPreferredSize(new Dimension(200, 300));\n+        panel.add(textArea, BorderLayout.CENTER);\n+        panel.add(b, BorderLayout.SOUTH);\n+\n+        return panel;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4474400.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4154572\n+ * @summary Tests that the area behind a TitledBorder's title string is transparent,\n+ * allowing the component's background to show through\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TransparentTitleTest\n+ *\/\n+\n+import java.awt.GridLayout;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Color;\n+import java.awt.image.BufferedImage;\n+import javax.swing.ImageIcon;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.border.TitledBorder;\n+import javax.swing.border.LineBorder;\n+\n+public class TransparentTitleTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            If all panels are correctly painted such that the title of the\n+            border allows the underlying panel image (green rectangle)\n+            to show through the background of the text,\n+            then this test passes; else it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TransparentTitleTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TransparentTitleTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"TransparentTitleTest\");\n+\n+        frame.setLayout(new GridLayout(3, 6, 5, 5));\n+\n+        frame.add(new ImagePanel(TitledBorder.TOP, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.TOP, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.TOP, TitledBorder.RIGHT));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_TOP, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_TOP, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_TOP, TitledBorder.RIGHT));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_TOP, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_TOP, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_TOP, TitledBorder.RIGHT));\n+        frame.add(new ImagePanel(TitledBorder.BOTTOM, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.BOTTOM, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.BOTTOM, TitledBorder.RIGHT));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_BOTTOM, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_BOTTOM, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.ABOVE_BOTTOM, TitledBorder.RIGHT));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_BOTTOM, TitledBorder.LEFT));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_BOTTOM, TitledBorder.CENTER));\n+        frame.add(new ImagePanel(TitledBorder.BELOW_BOTTOM, TitledBorder.RIGHT));\n+\n+        frame.pack();\n+        return frame;\n+    }\n+}\n+\n+class ImagePanel extends JPanel {\n+\n+    private final ImageIcon imageIcon;\n+\n+    private static final BufferedImage bufferedImage =\n+            new BufferedImage(128, 128, BufferedImage.TYPE_INT_ARGB);\n+\n+    static {\n+        Graphics g = bufferedImage.getGraphics();\n+        g.setColor(Color.GREEN);\n+        g.fillRect(0, 0, 128, 128);\n+    }\n+\n+    public ImagePanel(int titlePos, int titleJust) {\n+        imageIcon = new ImageIcon(bufferedImage);\n+\n+        TitledBorder b = new TitledBorder(new LineBorder(Color.black,3), \"title text\");\n+        b.setTitlePosition(titlePos);\n+        b.setTitleJustification(titleJust);\n+        b.setTitleColor(Color.black);\n+        setBorder(b);\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(imageIcon.getIconWidth(), imageIcon.getIconHeight());\n+    }\n+\n+    public void paintComponent(Graphics g) {\n+        imageIcon.paintIcon(this, g, 0, 0);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/border\/TransparentTitleTest.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"}]}