{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.awt.IllegalComponentStateException;\n@@ -2297,1 +2298,6 @@\n-             Point parentLocation = parent.getLocationOnScreen();\n+             Point parentLocation;\n+             try {\n+                 parentLocation = parent.getLocationOnScreen();\n+             } catch (IllegalComponentStateException icse) {\n+                 return null;\n+             }\n@@ -2299,0 +2305,3 @@\n+             if (parentLocation == null || componentLocation == null) {\n+                 return null;\n+             }\n@@ -2305,1 +2314,1 @@\n-             return new Point(r.x, r.y);\n+             return r == null ? null : new Point(r.x, r.y);\n@@ -2322,1 +2331,1 @@\n-            return new Dimension(r.width, r.height);\n+            return r == null ? null : new Dimension(r.width, r.height);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTabbedPane.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8322239\n+ * @summary [macos] a11y : java.lang.NullPointerException is thrown when\n+ *          focus is moved on the JTabbedPane\n+ * @key headful\n+ * @run main TabbedPaneNPECheck\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleComponent;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+\n+public class TabbedPaneNPECheck {\n+    JTabbedPane pane;\n+    JFrame mainFrame;\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        TabbedPaneNPECheck me = new TabbedPaneNPECheck();\n+        SwingUtilities.invokeAndWait(me::setupGUI);\n+        try {\n+            SwingUtilities.invokeAndWait(me::test);\n+        } finally {\n+            SwingUtilities.invokeAndWait(me::shutdownGUI);\n+        }\n+    }\n+\n+    public void setupGUI() {\n+        mainFrame = new JFrame(\"TabbedPaneNPECheck\");\n+        pane = new JTabbedPane();\n+        Dimension panelSize = new Dimension(200, 200);\n+        for (int i = 0; i < 25; i++) {\n+            JPanel p = new JPanel();\n+            p.setMinimumSize(panelSize);\n+            p.setMaximumSize(panelSize);\n+            p.setSize(panelSize);\n+            pane.addTab(\"Tab no.\" + i, p);\n+        }\n+        mainFrame.setLayout(new BorderLayout());\n+        mainFrame.add(pane, BorderLayout.CENTER);\n+        mainFrame.setLocationRelativeTo(null);\n+        mainFrame.setSize(250, 250);\n+        mainFrame.setVisible(true);\n+    }\n+\n+    public void test() {\n+        AccessibleContext context = pane.getAccessibleContext();\n+        int nChild = context.getAccessibleChildrenCount();\n+        for (int i = 0; i < nChild; i++) {\n+            Accessible accessible = context.getAccessibleChild(i);\n+            if (accessible instanceof AccessibleComponent) {\n+                try {\n+                    AccessibleComponent component = (AccessibleComponent) accessible;\n+                    Point p = component.getLocationOnScreen();\n+                    Rectangle r = component.getBounds();\n+                } catch (NullPointerException npe) {\n+                    throw new RuntimeException(\"Unexpected NullPointerException \" +\n+                            \"while getting accessible component bounds: \", npe);\n+                }\n+            }\n+        }\n+    }\n+\n+    public void shutdownGUI() {\n+        if (mainFrame != null) {\n+            mainFrame.setVisible(false);\n+            mainFrame.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TabbedPaneNPECheck.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"}]}