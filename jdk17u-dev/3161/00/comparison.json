{"files":[{"patch":"@@ -1,147 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-import java.awt.AWTException;\n-import java.awt.BorderLayout;\n-import java.awt.EventQueue;\n-import java.awt.Point;\n-import java.awt.Robot;\n-import java.awt.event.InputEvent;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-import javax.swing.JButton;\n-import javax.swing.JFrame;\n-import javax.swing.SwingUtilities;\n-\n-\/*\n- * @test\n- * @key headful\n- * @bug  8049069\n- * @summary Tests whether right mouse click releases a pressed JButton\n- *\/\n-\n-public class PressedButtonRightClickTest {\n-\n-    private static Robot testRobot;\n-    private static JFrame myFrame;\n-    private static JButton myButton;\n-\n-    public static void main(String[] args) throws Throwable {\n-\n-        SwingUtilities.invokeAndWait(PressedButtonRightClickTest::constructTestUI);\n-\n-        try {\n-            testRobot = new Robot();\n-        } catch (AWTException ex) {\n-            throw new RuntimeException(\"Exception in Robot creation\");\n-        }\n-\n-        testRobot.waitForIdle();\n-        testRobot.delay(500);\n-\n-        \/\/ Method performing auto test operation\n-        try {\n-            test();\n-        } finally {\n-            EventQueue.invokeAndWait(PressedButtonRightClickTest::disposeTestUI);\n-        }\n-    }\n-\n-    private static void test() {\n-        Point loc = myFrame.getLocationOnScreen();\n-\n-        testRobot.mouseMove((loc.x + 100), (loc.y + 100));\n-\n-        \/\/ Press the left mouse button\n-        System.out.println(\"press BUTTON1_DOWN_MASK\");\n-        testRobot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        myButton.setText(\"Left button pressed\");\n-        testRobot.delay(500);\n-\n-        \/\/ Press the right mouse button\n-        System.out.println(\"press BUTTON3_DOWN_MASK\");\n-        testRobot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-        myButton.setText(\"Left button pressed + Right button pressed\");\n-        testRobot.delay(500);\n-\n-        \/\/ Release the right mouse button\n-        System.out.println(\"release BUTTON3_DOWN_MASK\");\n-        testRobot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n-        myButton.setText(\"Right button released\");\n-        testRobot.waitForIdle();\n-        testRobot.delay(500);\n-\n-        \/\/ Test whether the button is still pressed\n-        boolean pressed = myButton.getModel().isPressed();\n-        System.out.println(\"release BUTTON1_DOWN_MASK\");\n-        testRobot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        if (!pressed) {\n-            disposeTestUI();\n-            throw new RuntimeException(\"Test Failed!\");\n-        }\n-    }\n-\n-    private static void disposeTestUI() {\n-        myFrame.setVisible(false);\n-        myFrame.dispose();\n-    }\n-\n-    public static void constructTestUI() {\n-        myFrame = new JFrame();\n-        myFrame.setLayout(new BorderLayout());\n-        myButton = new JButton(\"Whatever\");\n-        myButton.addMouseListener(new MouseAdapter() {\n-            @Override\n-            public void mouseClicked(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mousePressed(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseReleased(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseEntered(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-\n-            @Override\n-            public void mouseExited(MouseEvent e) {\n-                System.out.println(e);\n-            }\n-        });\n-        myFrame.add(myButton, BorderLayout.CENTER);\n-        myFrame.setSize(400, 300);\n-        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        myFrame.setLocationRelativeTo(null);\n-        myFrame.setVisible(true);\n-    }\n-}\n-\n","filename":"test\/jdk\/javax\/swing\/JButton\/PressedButtonRightClickTest.java","additions":0,"deletions":147,"binary":false,"changes":147,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 4490179\n+ * @bug 4490179 8049069\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4490179.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}