{"files":[{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6461933 7194219\n+ * @summary adjust system boot time in nowMillisUTC() frequently\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual UpdatingBootTime\n+ *\/\n+\n+\/*\n+ * Test verifies that time updated by the system is correctly\n+ * picked up by the Java application.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Date;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+\n+public class UpdatingBootTime {\n+    private static JFrame initialize () {\n+        JFrame frame = new JFrame(\"Updating Boot Time Test Frame\");\n+        frame.setLayout(new BorderLayout());\n+        JTextArea textOutput = new JTextArea(\"Events on the button:\", 14, 40);\n+        textOutput.setLineWrap(true);\n+        JScrollPane textScrollPane = new JScrollPane(textOutput);\n+        frame.add(textScrollPane, BorderLayout.CENTER);\n+        Button b = new Button(\"Press me\");\n+        frame.add(b, BorderLayout.NORTH);\n+        b.addMouseListener(new MouseAdapter() {\n+                public void mousePressed(MouseEvent e) {\n+                    textOutput.append(\"\\nEvent occurred : \" + e);\n+                    textOutput.append(\"\\nThe event time is : \" + (new Date(e.getWhen())));\n+                    textOutput.append(\"\\nThe system time is : \" + (new Date()));\n+                    textOutput.append(\"\\n------------------------------------\");\n+                    textOutput.setCaretPosition(textOutput.getText().length());\n+                }\n+            });\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        String instructions =\n+                \"\"\"\n+            1) In the test window press \"Press me\" button.\n+            2) Two timestamps should be printed.\n+            3) Verify that they are not differ a lot:\n+               it is okay to observe a 1 or 2 seconds difference.\n+            4) Change the system time significantly (by a month or a year)\n+               by using the OS abilities.\n+            5) Click on the button once again.\n+            6) Printed times should still be the same.\n+               Pay attention to the Month\/Year if they were changed.\n+            7) It is okay to observe a 1 or 2 seconds difference and this is not a fail.\n+            8) If the difference is more then 1-2 seconds noticed press fail,\n+               otherwise press pass.\n+            \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Updating Boot Time Test Instructions\")\n+                .instructions(instructions)\n+                .rows((int) instructions.lines().count() + 1)\n+                .columns(40)\n+                .testUI(UpdatingBootTime::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Component\/UpdatingBootTime.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 6461933 7194219\n-  @summary adjust system boot time in nowMillisUTC() frequently\n-  @author Andrei Dmitriev : area=awt.component\n-  @run applet\/manual=yesno UpdatingBootTime.html\n-  -->\n-<head>\n-<title> UpdatingBootTime <\/title>\n-<\/head>\n-<body>\n-\n-<h1>UpdatingBootTime<br>Bug ID: <\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"UpdatingBootTime.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,222 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  test\n-  @bug 6461933 7194219\n-  @summary adjust system boot time in nowMillisUTC() frequently\n-  @author Andrei Dmitriev : area=awt.component\n-  @run applet\/manual=yesno UpdatingBootTime.html\n- *\/\n-\n-\/*\n- * verifies that time updated by the system is picked up by the Java App.\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.util.Date;\n-\n-public class UpdatingBootTime extends Applet\n-{\n-    \/\/Declare things used in the test, like buttons and labels here\n-\n-    public void init()\n-    {\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \"1) Press the mouse over the button.\",\n-            \"2) A two timestamps would be printed.\",\n-            \"3) Verify that they are not differ a lot: it is okay to observe a 1 or 2 seconds difference.\",\n-            \"4) Change the system time significantly(by a month or a year) by using the OS abilities.\",\n-            \"5) Click on the button once again.\",\n-            \"6) Printed times should still be the same. Pay attention to the Month\/Year if they were changed.\",\n-            \"7) It is okay to observe a 1 or 2 seconds difference and this is not a fail.\",\n-            \"8) If the difference is more then 1-2 seconds noticed then the test fail; otherwise pass.\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        Button b = new Button(\"Press me\");\n-        b.addMouseListener(new MouseAdapter(){\n-                public void mousePressed(MouseEvent e){\n-                    Sysout.println(\"Event occured : \"+e);\n-                    Sysout.println(\"The event time is : \"+ (new Date(e.getWhen())));\n-                    Sysout.println(\"The system time is : \"+ (new Date()));\n-                }\n-            });\n-        add(b);\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-    }\/\/ start()\n-}\/\/ class UpdatingBootTime\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.java","additions":0,"deletions":222,"binary":false,"changes":222,"status":"deleted"}]}