{"files":[{"patch":"@@ -0,0 +1,182 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4519537 4522866\n+ * @summary Tests that text and components in paragraph views line up at their baselines.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual BaselineTest\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextPane;\n+\n+import javax.swing.text.ComponentView;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.Element;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledEditorKit;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n+\n+public class BaselineTest {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        Test that components displayed in a JTextPane properly respect their vertical alignment.\n+        There are two text panes, stacked vertically with similar content except the bottom components are taller.\n+        The content consists of a leading and trailing text string, with pink coloured components between.\n+        The text string content means the strings 'Default Size Text' and 'Large Size Text'.\n+        Text content baseline is at the bottom of CAPITAL letters in the text.\n+        Each pink component has a string displaying its alignment setting in the range 0.0 to 1.0\n+        NB: The position of the strings \"align = 0.0\" etc is not important, it is the component position that matters.\n+        0.0 means it should be aligned with its top at the text content baseline,\n+        1.0 means it should be aligned with its bottom at the text content baseline.\n+        A value in between will be a proportional alignment, eg 0.5 is centered on the text content baseline\n+        If the content displays as described, the test PASSES.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+       PassFailJFrame.builder()\n+            .title(\"BaselineTest Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(60)\n+            .rows(12)\n+            .testUI(BaselineTest::createUI)\n+            .positionTestUIBottomRowCentered()\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    public static JFrame createUI() {\n+        JFrame frame = new JFrame(\"BaselineTest\");\n+        frame.setLayout(new GridLayout(2, 1));\n+\n+        JTextPane prefPane = new JTextPane();\n+        initJTextPane(prefPane);\n+        frame.add(new JScrollPane(prefPane));\n+\n+        JTextPane variablePane = new JTextPane();\n+        variablePane.setEditorKit(new CustomEditorKit());\n+        initJTextPane(variablePane);\n+        frame.add(new JScrollPane(variablePane));\n+        frame.setSize(800, 400);\n+        return frame;\n+    }\n+\n+    static void initJTextPane(JTextPane tp) {\n+\n+        try {\n+            Document doc = tp.getDocument();\n+\n+            doc.insertString(0, \" Default Size Text \", null);\n+            tp.setCaretPosition(doc.getLength());\n+            tp.insertComponent(new PaintLabel(0.0f));\n+            tp.insertComponent(new PaintLabel(0.2f));\n+            tp.insertComponent(new PaintLabel(0.5f));\n+            tp.insertComponent(new PaintLabel(0.7f));\n+            tp.insertComponent(new PaintLabel(1.0f));\n+            SimpleAttributeSet set = new SimpleAttributeSet();\n+            StyleConstants.setFontSize(set, 20);\n+            tp.setCaretPosition(doc.getLength());\n+            doc.insertString(doc.getLength(), \" Large Size Text \", set);\n+        } catch (BadLocationException ble) {\n+            throw new RuntimeException(ble);\n+        }\n+    }\n+\n+    static class PaintLabel extends JLabel {\n+\n+        private int pref = 40;\n+        private int min = pref - 30;\n+        private int max = pref + 30;\n+\n+        public PaintLabel(float align) {\n+\n+            setAlignmentY(align);\n+            String alignStr = String.valueOf(align);\n+\n+            setText(\"align = \" + alignStr);\n+            setOpaque(true);\n+            setBackground(Color.PINK);\n+        }\n+\n+        public Dimension getMinimumSize() {\n+            return new Dimension(super.getMinimumSize().width, min);\n+        }\n+\n+        public Dimension getPreferredSize() {\n+            return new Dimension(super.getPreferredSize().width, pref);\n+        }\n+\n+        public Dimension getMaximumSize() {\n+            return new Dimension(super.getMaximumSize().width, max);\n+        }\n+\n+        public void paintComponent(Graphics g) {\n+            g.setColor(Color.PINK);\n+            g.fillRect(0, 0, getWidth(), getHeight());\n+            int y = (int)(getAlignmentY() * getHeight());\n+            g.setColor(Color.BLACK);\n+            g.drawLine(0, y, getWidth(), y);\n+            g.drawString(getText(), 0, 10);\n+        }\n+    }\n+\n+    static class CustomComponentView extends ComponentView {\n+\n+        public CustomComponentView(Element elem) {\n+            super(elem);\n+        }\n+\n+        public int getResizeWeight(int axis) {\n+            return 1;\n+        }\n+}\n+\n+    static class CustomEditorKit extends StyledEditorKit implements ViewFactory {\n+\n+        public View create(Element elem) {\n+            if (StyleConstants.ComponentElementName.equals(elem.getName())) {\n+                return new CustomComponentView(elem);\n+            } else {\n+                return super.getViewFactory().create(elem);\n+            }\n+        }\n+\n+        public ViewFactory getViewFactory() {\n+            return this;\n+        }\n+}\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/BoxView\/BaselineTest.java","additions":182,"deletions":0,"binary":false,"changes":182,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4188841\n+ * @summary Tests a JTextPane wrapping issue\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4188841\n+*\/\n+\n+import java.awt.Dimension;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextPane;\n+\n+public class bug4188841 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The text pane contains the phrase \"the quick brown fox jumps over the lazy dog\",\n+        all the words are separated by tabs. When the test starts, the whole phrase should\n+        appear on one line. If it is wrapped along two or more lines, the test FAILS.\n+\n+        Otherwise, place the text caret in the very end of the line (e.g. by clicking\n+        in the line and hitting End). Press Enter twice. The text should appear as one\n+        line at all times. If the text wraps when you press Enter, the test FAILS.\n+    \"\"\";\n+\n+    static class NoWrapTextPane extends JTextPane {\n+\n+        public boolean getScrollableTracksViewportWidth() {\n+           \/\/should not allow text to be wrapped\n+           return false;\n+        }\n+\n+        public void setSize(Dimension d) {\n+           \/\/ don't let the Textpane get sized smaller than its parent\n+           if (d.width < getParent().getSize().width) {\n+              super.setSize(getParent().getSize());\n+           }\n+           else {\n+              super.setSize(d);\n+           }\n+        }\n+    }\n+\n+    static JFrame createUI() {\n+\n+        JFrame frame = new JFrame(\"bug4188841\");\n+\n+        NoWrapTextPane nwp = new NoWrapTextPane();\n+        nwp.setText(\"the\\tquick\\tbrown\\tfox\\tjumps\\tover\\tthe\\tlazy\\tdog!\");\n+        nwp.setCaretPosition(nwp.getText().length());\n+\n+        JScrollPane scrollPane = new JScrollPane(nwp,\n+            JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,\n+            JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\n+\n+        frame.add(scrollPane);\n+        frame.setSize(400, 300);\n+        return frame;\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(60)\n+            .testUI(bug4188841::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/GlyphView\/bug4188841.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4473401\n+ * @summary Tests if FormSubmitEvent is submitted correctly.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4473401\n+*\/\n+\n+import java.io.File;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.event.HyperlinkEvent;\n+import javax.swing.event.HyperlinkListener;\n+import javax.swing.text.html.FormSubmitEvent;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class bug4473401 implements HyperlinkListener {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The test window displays an HTML frameset with a frame\n+        on the left and another to the right.\n+        Push the 'Submit Query' button in the left frame to perform testing.\n+        The window should be updated to have only one frame with the\n+        message 'If you see this page the test PASSED'.\n+        If it appears, PASS the test, otherwise FAIL the test.\n+    \"\"\";\n+\n+    static JEditorPane jep;\n+    static JFrame createUI() {\n+\n+        JFrame frame = new JFrame(\"bug4473401\");\n+        jep = new JEditorPane();\n+        jep.addHyperlinkListener(new bug4473401());\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        kit.setAutoFormSubmission(false);\n+        jep.setEditorKit(kit);\n+        jep.setEditable(false);\n+\n+        try {\n+            File file = new File(System.getProperty(\"test.src\", \".\"), \"frameset.html\");\n+            System.out.println(file.toURI().toURL());\n+            jep.setPage(file.toURL());\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        frame.add(jep);\n+        frame.setSize(500, 500);\n+        return frame;\n+    }\n+\n+    public void hyperlinkUpdate(HyperlinkEvent e) {\n+        if (e instanceof FormSubmitEvent) {\n+            jep.setText(\"If you see this page the test<font color=green> PASSED<\/font><\/CENTER>\");\n+        }\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug4473401::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/bug4473401.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/frame1.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frame1.html","status":"copied"},{"patch":"","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/frame2.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frame2.html","status":"copied"},{"patch":"@@ -0,0 +1,5 @@\n+<html>\n+<body>\n+If you see this page the test <font color=red>FAILED<\/font>.\n+<\/body>\n+<\/html>\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/frameresult.html","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/frameset.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frameset.html","status":"copied"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4529702\n+ * @summary Test that radio buttons with different names should be selectable at the same time\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4529702\n+*\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+\n+public class bug4529702 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        There are two rows of radio buttons, each row having two buttons.\n+        If you can select radio buttons from the first and the second rows\n+        at the same time the test PASSES otherwise the test FAILS.\n+    \"\"\";\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4529702\");\n+        JTextPane jtp = new JTextPane();\n+        jtp.setContentType(\"text\/html\");\n+        jtp.setText(\"<html><body><form><input type=radio name=a><input type=radio name=a><br>\" +\n+                    \"<input type=radio name=b><input type=radio name=b><\/form><\/body><\/html>\");\n+        frame.add(jtp);\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug4529702::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/bug4529702.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4890934\n+ * @summary Tests if JEditor Pane updates the correct frame when using <BASE target=\"xxxx\">\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4890934\n+*\/\n+\n+import java.io.File;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.event.HyperlinkEvent;\n+import javax.swing.event.HyperlinkListener;\n+import javax.swing.text.html.HTMLDocument;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.HTMLFrameHyperlinkEvent;\n+\n+public class bug4890934 implements HyperlinkListener {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The test window displays an HTML frameset with a frame\n+        on the left and another to the right.\n+        Click the link in the left frame which should change the view.\n+        The resulting page will tell you if the test PASSED or FAILED.\n+    \"\"\";\n+\n+    static JFrame createUI() {\n+\n+        JFrame frame = new JFrame(\"bug4890934\");\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setEditable(false);\n+        jep.addHyperlinkListener(new bug4890934());\n+\n+        try {\n+            File file = new File(System.getProperty(\"test.src\", \".\"), \"frameset.html\");\n+            System.out.println(file.toURI().toURL());\n+            jep.setPage(file.toURL());\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        frame.add(jep);\n+        frame.setSize(600, 300);\n+        return frame;\n+    }\n+\n+    public void hyperlinkUpdate(HyperlinkEvent e) {\n+        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {\n+            JEditorPane pane = (JEditorPane) e.getSource();\n+            if (e instanceof HTMLFrameHyperlinkEvent) {\n+                HTMLFrameHyperlinkEvent  evt = (HTMLFrameHyperlinkEvent)e;\n+                HTMLDocument doc = (HTMLDocument)pane.getDocument();\n+                doc.processHTMLFrameHyperlinkEvent(evt);\n+            }\n+        }\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug4890934::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/bug4890934.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,8 @@\n+<html>\n+<head>\n+<base TARGET=\"main\">\n+<\/head>\n+<body>\n+<a href=\".\/frameresult.html\"> a link <\/a>\n+<\/body>\n+<\/html>\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/frame1.html","additions":8,"deletions":0,"binary":false,"changes":8,"status":"added"},{"patch":"","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/frame2.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frame2.html","status":"copied"},{"patch":"","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/frameresult.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frameresult.html","status":"copied"},{"patch":"@@ -11,1 +11,1 @@\n-<\/HTML>\n\\ No newline at end of file\n+<\/HTML>\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/frameset.html","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/javax\/swing\/text\/html\/FrameView\/4463014\/frameset.html","status":"copied"}]}