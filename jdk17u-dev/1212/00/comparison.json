{"files":[{"patch":"@@ -2350,0 +2350,5 @@\n+  if (i == 0) {\n+    \/\/ index 0 corresponds to the ClassPathImageEntry which is a globally shared object\n+    \/\/ and should never be deleted.\n+    return ClassLoader::get_jrt_entry();\n+  }\n@@ -2352,6 +2357,2 @@\n-    if (i == 0) {\n-      ent = ClassLoader::get_jrt_entry();\n-      assert(ent != NULL, \"must be\");\n-    } else {\n-      SharedClassPathEntry* scpe = shared_path(i);\n-      assert(scpe->is_jar(), \"must be\"); \/\/ other types of scpe will not produce archived classes\n+    SharedClassPathEntry* scpe = shared_path(i);\n+    assert(scpe->is_jar(), \"must be\"); \/\/ other types of scpe will not produce archived classes\n@@ -2359,3 +2360,9 @@\n-      const char* path = scpe->name();\n-      struct stat st;\n-      if (os::stat(path, &st) != 0) {\n+    const char* path = scpe->name();\n+    struct stat st;\n+    if (os::stat(path, &st) != 0) {\n+      char *msg = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, strlen(path) + 128);\n+      jio_snprintf(msg, strlen(path) + 127, \"error in finding JAR file %s\", path);\n+      THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n+    } else {\n+      ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false);\n+      if (ent == NULL) {\n@@ -2363,1 +2370,1 @@\n-        jio_snprintf(msg, strlen(path) + 127, \"error in finding JAR file %s\", path);\n+        jio_snprintf(msg, strlen(path) + 127, \"error in opening JAR file %s\", path);\n@@ -2365,7 +2372,0 @@\n-      } else {\n-        ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false);\n-        if (ent == NULL) {\n-          char *msg = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, strlen(path) + 128);\n-          jio_snprintf(msg, strlen(path) + 127, \"error in opening JAR file %s\", path);\n-          THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n-        }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}