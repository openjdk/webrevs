{"files":[{"patch":"@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(getCmd(args))\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(getCmd(args))\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/JcstressRunner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/TestGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        OutputAnalyzer output = new OutputAnalyzer(ProcessTools.createTestJvm(\n+        OutputAnalyzer output = new OutputAnalyzer(ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/applications\/scimark\/Scimark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,1 +193,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/CheckCICompilerCount.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -341,1 +341,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/CheckCompileThresholdScaling.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestPrintOptoAssemblyLineNumbers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-                    ProcessBuilder pb = ProcessTools.createTestJvm(mix(c, \"-Xmx256m\", className));\n+                    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(mix(c, \"-Xmx256m\", className));\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/stress\/TestStressArrayCopy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeExistingIntrinsicWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeExperimentalUnlockTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline);\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeIntrinsicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonEmptyWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonStaticWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonVoidWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n@@ -77,1 +77,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n@@ -97,1 +97,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestRangeCheckEliminated.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestBit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFarJump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,23 +2,23 @@\n-* Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n-* Copyright (c) 2020, Arm Limited. All rights reserved.\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n@@ -82,1 +82,1 @@\n-        return ProcessTools.createJavaProcessBuilder(vmopts.toArray(new String[vmopts.size()]));\n+        return ProcessTools.createLimitedTestJavaProcessBuilder(vmopts.toArray(new String[vmopts.size()]));\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestSVEWithJNI.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestVolatiles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-            CLIENT_VM_AVAILABLE = ProcessTools.executeTestJvm(CLIENT_VM_OPTION, VERSION_OPTION)\n+            CLIENT_VM_AVAILABLE = ProcessTools.executeTestJava(CLIENT_VM_OPTION, VERSION_OPTION)\n@@ -97,1 +97,1 @@\n-            SERVER_VM_AVAILABLE = ProcessTools.executeTestJvm(SERVER_VM_OPTION, VERSION_OPTION)\n+            SERVER_VM_AVAILABLE = ProcessTools.executeTestJava(SERVER_VM_OPTION, VERSION_OPTION)\n@@ -167,1 +167,1 @@\n-                                ProcessTools.createTestJvm(options.toArray(new String[0]))));\n+                                ProcessTools.createTestJavaProcessBuilder(options.toArray(new String[0]))));\n@@ -171,1 +171,1 @@\n-                crashOut = ProcessTools.executeProcess(ProcessTools.createTestJvm(options));\n+                crashOut = ProcessTools.executeProcess(ProcessTools.createTestJavaProcessBuilder(options));\n@@ -274,1 +274,1 @@\n-            String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJvm(args));\n+            String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJavaProcessBuilder(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/CiReplayBase.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-            oa = ProcessTools.executeProcess(ProcessTools.createTestJvm(options));\n+            oa = ProcessTools.executeProcess(ProcessTools.createTestJavaProcessBuilder(options));\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/DumpReplayBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-            pb = ProcessTools.createTestJvm(\"--add-modules\", \"jdk.hotspot.agent\",\n+            pb = ProcessTools.createTestJavaProcessBuilder(\"--add-modules\", \"jdk.hotspot.agent\",\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/SABase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,3 +70,3 @@\n-        pb = ProcessTools.createTestJvm(\"-XX:+PrintCodeCache\",\n-                                        \"-XX:+Verbose\",\n-                                        \"-version\");\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"-XX:+PrintCodeCache\",\n+                                                       \"-XX:+Verbose\",\n+                                                       \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckCodeCacheInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckLargePages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-        pb1 = ProcessTools.createJavaProcessBuilder(\"-XX:InitialCodeCacheSize=4m\", \"-XX:ReservedCodeCacheSize=8m\", \"-version\");\n-        pb2 = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=8m\", \"-XX:InitialCodeCacheSize=4m\", \"-version\");\n+        pb1 = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:InitialCodeCacheSize=4m\", \"-XX:ReservedCodeCacheSize=8m\", \"-version\");\n+        pb2 = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=8m\", \"-XX:InitialCodeCacheSize=4m\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckReservedInitialCodeCacheSizeArgOrder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,3 +92,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=239m\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=239m\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -98,3 +98,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:-TieredCompilation\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:-TieredCompilation\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -104,4 +104,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+TieredCompilation\",\n-                                                   \"-XX:ReservedCodeCacheSize=240m\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+TieredCompilation\",\n+                                                              \"-XX:ReservedCodeCacheSize=240m\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -109,4 +109,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+TieredCompilation\",\n-                                                   \"-XX:ReservedCodeCacheSize=400m\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+TieredCompilation\",\n+                                                              \"-XX:ReservedCodeCacheSize=400m\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -116,5 +116,5 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-XX:-TieredCompilation\",\n-                                                   \"-XX:ReservedCodeCacheSize=239m\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-XX:-TieredCompilation\",\n+                                                              \"-XX:ReservedCodeCacheSize=239m\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -125,4 +125,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-Xint\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-Xint\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -133,4 +133,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-XX:TieredStopAtLevel=0\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-XX:TieredStopAtLevel=0\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -138,4 +138,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-XX:TieredStopAtLevel=1\",\n-                                                   \"-XX:+PrintCodeCache\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-XX:TieredStopAtLevel=1\",\n+                                                              \"-XX:+PrintCodeCache\",\n+                                                              \"-version\");\n@@ -145,2 +145,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:NonNMethodCodeHeapSize=100K\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:NonNMethodCodeHeapSize=100K\",\n+                                                              \"-version\");\n@@ -150,6 +150,6 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-XX:ReservedCodeCacheSize=10M\",\n-                                                   \"-XX:NonNMethodCodeHeapSize=5M\",\n-                                                   \"-XX:ProfiledCodeHeapSize=5M\",\n-                                                   \"-XX:NonProfiledCodeHeapSize=5M\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-XX:ReservedCodeCacheSize=10M\",\n+                                                              \"-XX:NonNMethodCodeHeapSize=5M\",\n+                                                              \"-XX:ProfiledCodeHeapSize=5M\",\n+                                                              \"-XX:NonProfiledCodeHeapSize=5M\",\n+                                                              \"-version\");\n@@ -162,4 +162,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n-                                                   \"-XX:ReservedCodeCacheSize=\" + minSize,\n-                                                   \"-XX:InitialCodeCacheSize=100K\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+                                                              \"-XX:ReservedCodeCacheSize=\" + minSize,\n+                                                              \"-XX:InitialCodeCacheSize=100K\",\n+                                                              \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckSegmentedCodeCache.java","additions":44,"deletions":44,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=2049m\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=2049m\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckUpperLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CodeCacheFullCountTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+RestoreMXCSROnJNICalls\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+RestoreMXCSROnJNICalls\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/cpuflags\/RestoreMXCSR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(procArgs).start())\n+            new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(procArgs).start())\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestGenerateStressSeed.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb  = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressCM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb  = ProcessTools.createLimitedTestJavaProcessBuilder(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressIGVNAndCCP.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\", \"-XX:+IgnoreUnrecognizedVMOptions\",\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcomp\", \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/VerifyAdapterSharing.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2021, 2024, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/eliminateAutobox\/TestEliminateBoxInDebugInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/InlineAccessors.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/PrintInlining.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -81,1 +81,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -118,1 +118,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/ResolvedClassTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(argsList);\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/ContinuousCallSiteTargetChange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/MHInlineTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/PollutedTrapCounts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestEnableJVMCIProduct.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestInvalidJVMCIOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestJVMCIPrintProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/GetFlagValueTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder process = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/TestVMProcess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/linkage\/TestLinkageErrorInGenerateOopMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\", \"-XX:+PrintFlagsFinal\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\", \"-XX:+PrintFlagsFinal\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/CheckLoopStripMiningIterShortLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestNoWarningLoopStripMiningIterSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWait.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n+            checkFinalFlagsEqualTo(ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n@@ -92,1 +92,1 @@\n-            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:OnSpinWaitInstCount=2\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n+            checkFinalFlagsEqualTo(ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:OnSpinWaitInstCount=2\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64DefaultFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitC1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitNoneAArch64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n@@ -269,1 +269,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n@@ -280,1 +280,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/CheckCompileCommandOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/TestCompileCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/TestInvalidCompileCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-            oa = ProcessTools.executeProcess(ProcessTools.createTestJvm(\n+            oa = ProcessTools.executeProcess(ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/cr8015436\/Driver8015436.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:CICompilerCount=-1\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:CICompilerCount=-1\");\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/NumCompilerThreadsCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,4 +47,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=3m\",\n-                                                                  \"-XX:CICompilerCount=64\",\n-                                                                  \"-Xcomp\",\n-                                                                  \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=3m\",\n+                                                                             \"-XX:CICompilerCount=64\",\n+                                                                             \"-Xcomp\",\n+                                                                             \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/SmallCodeCacheStartup.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xint\", \"-XX:+DisplayVMOutputToStdout\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xint\", \"-XX:+DisplayVMOutputToStdout\", \"-version\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xint\", \"-XX:ReservedCodeCacheSize=1770K\", \"-XX:InitialCodeCacheSize=4K\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xint\", \"-XX:ReservedCodeCacheSize=1770K\", \"-XX:InitialCodeCacheSize=4K\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/StartupOutput.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-                = ProcessTools.createJavaProcessBuilder(\n+                = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -86,1 +86,1 @@\n-                = ProcessTools.createJavaProcessBuilder(\n+                = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/compiler\/testlibrary\/rtm\/RTMTestBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createTestJvm(OPTIONS);\n+        ProcessBuilder processBuilder = ProcessTools.createTestJavaProcessBuilder(OPTIONS);\n","filename":"test\/hotspot\/jtreg\/compiler\/types\/correctness\/OffTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -227,5 +227,5 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-XX:-BackgroundCompilation\",\n-                                                       \"-XX:+TraceNewVectors\",\n-                                                       \"compiler.vectorization.TestBufferVectorization\",\n-                                                       testName,\n-                                                       \"run\");\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:-BackgroundCompilation\",\n+                                                                  \"-XX:+TraceNewVectors\",\n+                                                                  \"compiler.vectorization.TestBufferVectorization\",\n+                                                                  testName,\n+                                                                  \"run\");\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestBufferVectorization.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+container=trace\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+container=trace\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/PlainRead.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestAgeOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAtError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-      ProcessBuilder pb = ProcessTools.createTestJvm(flags);\n+      ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAtMultiple.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestCardTablePageCommits.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestNumWorkerOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifyDuringStartup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySilently.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmOpts);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySubSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,2 +69,2 @@\n-    static public ProcessBuilder createJavaProcessBuilder(List<String> arguments) {\n-        return createJavaProcessBuilder(arguments.toArray(String[]::new));\n+    static public ProcessBuilder createLimitedTestJavaProcessBuilder(List<String> arguments) {\n+        return createLimitedTestJavaProcessBuilder(arguments.toArray(String[]::new));\n@@ -73,2 +73,2 @@\n-    static public ProcessBuilder createJavaProcessBuilder(String... arguments) {\n-        return ProcessTools.createJavaProcessBuilder(withDefaults(arguments));\n+    static public ProcessBuilder createLimitedTestJavaProcessBuilder(String... arguments) {\n+        return ProcessTools.createLimitedTestJavaProcessBuilder(withDefaults(arguments));\n@@ -77,2 +77,2 @@\n-    static public ProcessBuilder createTestJvm(List<String> arguments) {\n-        return createTestJvm(arguments.toArray(String[]::new));\n+    static public ProcessBuilder createTestJavaProcessBuilder(List<String> arguments) {\n+        return createTestJavaProcessBuilder(arguments.toArray(String[]::new));\n@@ -81,2 +81,2 @@\n-    static public ProcessBuilder createTestJvm(String... arguments) {\n-        return ProcessTools.createTestJvm(withDefaults(arguments));\n+    static public ProcessBuilder createTestJavaProcessBuilder(String... arguments) {\n+        return ProcessTools.createTestJavaProcessBuilder(withDefaults(arguments));\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/GCArguments.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJvm(\n+        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestAggressiveHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n@@ -80,1 +80,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestArrayAllocatorMallocLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJvm(args);\n+        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestCompressedClassFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,7 +43,7 @@\n-        ProcessBuilder pb = GCArguments.createTestJvm(\"-XX:-UseSerialGC\",\n-                                                      \"-XX:-UseParallelGC\",\n-                                                      \"-XX:-UseG1GC\",\n-                                                      \"-XX:-UseZGC\",\n-                                                      \"-XX:+UnlockExperimentalVMOptions\",\n-                                                      \"-XX:-UseShenandoahGC\",\n-                                                      \"-version\");\n+        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\"-XX:-UseSerialGC\",\n+                                                                     \"-XX:-UseParallelGC\",\n+                                                                     \"-XX:-UseG1GC\",\n+                                                                     \"-XX:-UseZGC\",\n+                                                                     \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                     \"-XX:-UseShenandoahGC\",\n+                                                                     \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestDisableDefaultGC.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(vmOpts);\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcMarkStepDurationMillis.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(vmOpts);\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcRefinementThreads.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(flagList);\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(flagList);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1HeapRegionSize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJvm(\"-XX:+UseG1GC\", flag, \"-version\");\n+        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\"-XX:+UseG1GC\", flag, \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1PercentageOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestHeapFreeRatio.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n@@ -61,1 +61,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestInitialTenuringThreshold.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(gcflag,\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(gcflag,\n@@ -211,1 +211,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(finalargs.toArray(String[]::new));\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(finalargs.toArray(String[]::new));\n@@ -311,1 +311,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(flags);\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxHeapSizeTools.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n@@ -126,1 +126,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxMinHeapFreeRatioFlags.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJvm(finalargs);\n+    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(args);\n@@ -87,1 +87,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxRAMFlags.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMinAndInitialSurvivorRatioFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewRatioFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,7 +68,7 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\"-XX:+UseSerialGC\",\n-                                                             \"-Xms96M\",\n-                                                             \"-Xmx128M\",\n-                                                             \"-XX:NewRatio=2\",\n-                                                             \"-Xlog:gc+heap+ergo=debug\",\n-                                                             \"-XX:NewSizeThreadIncrease=\"+expectedValue,\n-                                                             GCTest.class.getName());\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\"-XX:+UseSerialGC\",\n+                                                                        \"-Xms96M\",\n+                                                                        \"-Xmx128M\",\n+                                                                        \"-XX:NewRatio=2\",\n+                                                                        \"-Xlog:gc+heap+ergo=debug\",\n+                                                                        \"-XX:NewSizeThreadIncrease=\"+expectedValue,\n+                                                                        GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeThreadIncrease.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestObjectTenuringFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n@@ -97,1 +97,1 @@\n-      ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+      ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n@@ -130,1 +130,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flags);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(result);\n+        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(result);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelRefProc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSelectDefaultGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    ProcessBuilder pb_enabled = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb_enabled = GCArguments.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSmallInitialHeapWithLargePageAndNUMA.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSurvivorRatioFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,1 +119,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n@@ -154,1 +154,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestTargetSurvivorRatioFlag.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n@@ -53,1 +53,1 @@\n-    pb = GCArguments.createJavaProcessBuilder(\n+    pb = GCArguments.createLimitedTestJavaProcessBuilder(\n@@ -64,1 +64,1 @@\n-    pb = GCArguments.createJavaProcessBuilder(\n+    pb = GCArguments.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUnrecognizedVMOptionsHandling.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(finalargs);\n@@ -160,1 +160,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flags);\n+    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsErgoTools.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJvm(\n+        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseNUMAInterleaving.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestVerifyBeforeAndAfterGCFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/class_unloading\/TestG1ClassUnloadingHWM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieDefault.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithHeapDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n@@ -50,1 +50,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithOnError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(baseArgs);\n+    ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(baseArgs);\n@@ -84,1 +84,1 @@\n-    pb_enabled = ProcessTools.createJavaProcessBuilder(parRefArgs);\n+    pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(parRefArgs);\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestDynamicNumberOfGCThreads.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestInitialGCThreadLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/Test2GbHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsClearMarkBits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsWithRefs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1SkipCompaction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,8 +44,8 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                               \"-Xms128M\",\n-                                               \"-Xmx128M\",\n-                                               \"-Xmn16M\",\n-                                               \"-XX:G1HeapRegionSize=1M\",\n-                                               \"-Xlog:gc+phases=trace,gc+humongous=trace\",\n-                                               \"-XX:+UnlockExperimentalVMOptions\",\n-                                               GCWithHumongousObjectTest.class.getName());\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                         \"-Xms128M\",\n+                                                                         \"-Xmx128M\",\n+                                                                         \"-Xmn16M\",\n+                                                                         \"-XX:G1HeapRegionSize=1M\",\n+                                                                         \"-Xlog:gc+phases=trace,gc+humongous=trace\",\n+                                                                         \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                         GCWithHumongousObjectTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1TraceEagerReclaimHumongousObjects.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,3 +188,3 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-Xmx10M\",\n-                                                                  GCTest.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-Xmx10M\",\n+                                                                             GCTest.class.getName());\n@@ -196,4 +196,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-Xmx10M\",\n-                                                   \"-Xlog:gc+phases=debug\",\n-                                                   GCTest.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-Xmx10M\",\n+                                                              \"-Xlog:gc+phases=debug\",\n+                                                              GCTest.class.getName());\n@@ -204,4 +204,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-Xmx10M\",\n-                                                   \"-Xlog:gc+phases=trace\",\n-                                                   GCTest.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-Xmx10M\",\n+                                                              \"-Xlog:gc+phases=trace\",\n+                                                              GCTest.class.getName());\n@@ -223,4 +223,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-Xmx10M\",\n-                                                                  \"-Xlog:gc+refine+stats=debug\",\n-                                                                  GCTest.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-Xmx10M\",\n+                                                                             \"-Xlog:gc+refine+stats=debug\",\n+                                                                             GCTest.class.getName());\n@@ -238,10 +238,10 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-Xmx32M\",\n-                                                                  \"-Xmn16M\",\n-                                                                  \"-XX:+G1EvacuationFailureALot\",\n-                                                                  \"-XX:G1EvacuationFailureALotCount=100\",\n-                                                                  \"-XX:G1EvacuationFailureALotInterval=1\",\n-                                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                  \"-XX:-G1UsePreventiveGC\",\n-                                                                  \"-Xlog:gc+phases=debug\",\n-                                                                  GCTestWithEvacuationFailure.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-Xmx32M\",\n+                                                                             \"-Xmn16M\",\n+                                                                             \"-XX:+G1EvacuationFailureALot\",\n+                                                                             \"-XX:G1EvacuationFailureALotCount=100\",\n+                                                                             \"-XX:G1EvacuationFailureALotInterval=1\",\n+                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                             \"-XX:-G1UsePreventiveGC\",\n+                                                                             \"-Xlog:gc+phases=debug\",\n+                                                                             GCTestWithEvacuationFailure.class.getName());\n@@ -253,8 +253,8 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-Xmx32M\",\n-                                                   \"-Xmn16M\",\n-                                                   \"-Xms32M\",\n-                                                   \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                   \"-XX:-G1UsePreventiveGC\",\n-                                                   \"-Xlog:gc+phases=trace\",\n-                                                   GCTestWithEvacuationFailure.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-Xmx32M\",\n+                                                              \"-Xmn16M\",\n+                                                              \"-Xms32M\",\n+                                                              \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                              \"-XX:-G1UsePreventiveGC\",\n+                                                              \"-Xlog:gc+phases=trace\",\n+                                                              GCTestWithEvacuationFailure.class.getName());\n@@ -268,7 +268,7 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-Xmx10M\",\n-                                                                  \"-Xbootclasspath\/a:.\",\n-                                                                  \"-Xlog:gc*=debug\",\n-                                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                  \"-XX:+WhiteBoxAPI\",\n-                                                                  GCTestWithConcurrentStart.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-Xmx10M\",\n+                                                                             \"-Xbootclasspath\/a:.\",\n+                                                                             \"-Xlog:gc*=debug\",\n+                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                             \"-XX:+WhiteBoxAPI\",\n+                                                                             GCTestWithConcurrentStart.class.getName());\n@@ -282,7 +282,7 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-Xmx10M\",\n-                                                                  \"-Xbootclasspath\/a:.\",\n-                                                                  \"-Xlog:gc+ergo+heap=debug\",\n-                                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                  \"-XX:+WhiteBoxAPI\",\n-                                                                  GCTest.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-Xmx10M\",\n+                                                                             \"-Xbootclasspath\/a:.\",\n+                                                                             \"-Xlog:gc+ergo+heap=debug\",\n+                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                             \"-XX:+WhiteBoxAPI\",\n+                                                                             GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocConcurrentStart.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocNearlyFullRegion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousCodeCacheRoots.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousConcurrentStartUndo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(getOpts(heapsize, true));\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(getOpts(heapsize, true));\n@@ -142,1 +142,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(getOpts(heapsize, false));\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(getOpts(heapsize, false));\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForAuxMemory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,6 +90,6 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-XX:G1HeapRegionSize=\" + regionSize,\n-                                                   \"-Xmx128m\",\n-                                                   \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n-                                                   \"-XX:+UseLargePages\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-XX:G1HeapRegionSize=\" + regionSize,\n+                                                              \"-Xmx128m\",\n+                                                              \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n+                                                              \"-XX:+UseLargePages\",\n+                                                              \"-version\");\n@@ -103,6 +103,6 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-XX:G1HeapRegionSize=\" + regionSize,\n-                                                   \"-Xmx128m\",\n-                                                   \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n-                                                   \"-XX:-UseLargePages\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-XX:G1HeapRegionSize=\" + regionSize,\n+                                                              \"-Xmx128m\",\n+                                                              \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n+                                                              \"-XX:-UseLargePages\",\n+                                                              \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForHeap.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMarkStackSizes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilder(basicOpts);\n+        ProcessBuilder procBuilder =  ProcessTools.createLimitedTestJavaProcessBuilder(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMixedGCLiveThreshold.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABSizeBounds.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,5 +43,5 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                  \"-XX:G1PeriodicGCInterval=0\",\n-                                                                  \"-Xlog:gc+init,gc+periodic=debug\",\n-                                                                  \"-Xmx10M\",\n-                                                                  GCTest.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                             \"-XX:G1PeriodicGCInterval=0\",\n+                                                                             \"-Xlog:gc+init,gc+periodic=debug\",\n+                                                                             \"-Xmx10M\",\n+                                                                             GCTest.class.getName());\n@@ -54,5 +54,5 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                   \"-XX:G1PeriodicGCInterval=100\",\n-                                                   \"-Xlog:gc+init,gc+periodic=debug\",\n-                                                   \"-Xmx10M\",\n-                                                   GCTest.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                              \"-XX:G1PeriodicGCInterval=100\",\n+                                                              \"-Xlog:gc+init,gc+periodic=debug\",\n+                                                              \"-Xmx10M\",\n+                                                              GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPeriodicLogMessages.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPrintRegionRememberedSetInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,6 +47,6 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                              \"-Xlog:gc+remset+exit=trace\",\n-                                                              \"-XX:G1ConcRefinementThreads=\" + refinementThreads,\n-                                                              \"-XX:ParallelGCThreads=\" + workerThreads,\n-                                                              \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n+                                                                         \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                         \"-Xlog:gc+remset+exit=trace\",\n+                                                                         \"-XX:G1ConcRefinementThreads=\" + refinementThreads,\n+                                                                         \"-XX:ParallelGCThreads=\" + workerThreads,\n+                                                                         \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingThreads.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingTools.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(dump_args);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(dump_args);\n@@ -75,1 +75,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(load_args.toArray(new String[0]));\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(load_args.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSharedArchiveWithPreTouch.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(opts);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(opts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkAuxiliaryData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkDefragmentedHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,10 +43,10 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:.\",\n-                                                                  \"-XX:+UseG1GC\",\n-                                                                  \"-XX:+UnlockExperimentalVMOptions\",\n-                                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                  \"-XX:+WhiteBoxAPI\",\n-                                                                  \"-XX:G1MixedGCLiveThresholdPercent=20\",\n-                                                                  \"-Xlog:gc+marking=debug,gc+phases=debug,gc+remset+tracking=trace\",\n-                                                                  \"-Xms10M\",\n-                                                                  \"-Xmx10M\",\n-                                                                  GCTest.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xbootclasspath\/a:.\",\n+                                                                             \"-XX:+UseG1GC\",\n+                                                                             \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                             \"-XX:+WhiteBoxAPI\",\n+                                                                             \"-XX:G1MixedGCLiveThresholdPercent=20\",\n+                                                                             \"-Xlog:gc+marking=debug,gc+phases=debug,gc+remset+tracking=trace\",\n+                                                                             \"-Xms10M\",\n+                                                                             \"-Xmx10M\",\n+                                                                             GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSkipRebuildRemsetPhase.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilder(basicOpts);\n+        ProcessBuilder procBuilder =  ProcessTools.createLimitedTestJavaProcessBuilder(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestVerifyGCType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testOpts);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/mixedgc\/TestLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,1 +184,1 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/numa\/TestG1NUMATouchRegions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGC\", DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGC\", DoGC.class.getName());\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xloggc:\" + fileName, DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xloggc:\" + fileName, DoGC.class.getName());\n@@ -83,1 +83,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestDeprecatedPrintFlags.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-      ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n+      ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestGCId.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-      ProcessTools.createTestJvm(\n+      ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestMetaSpaceLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,4 +71,4 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\"-Xlog:gc+ref+phases=debug\",\n-                                                                          \"-XX:+UseG1GC\",\n-                                                                          \"-Xmx32M\",\n-                                                                          GCTest.class.getName());\n+        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:gc+ref+phases=debug\",\n+                                                                                     \"-XX:+UseG1GC\",\n+                                                                                     \"-Xmx32M\",\n+                                                                                     GCTest.class.getName());\n@@ -97,7 +97,7 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\"-Xlog:gc+phases+ref=debug\",\n-                                                                          \"-XX:+UseG1GC\",\n-                                                                          \"-Xmx32M\",\n-                                                                          \"-XX:\" + (parallelRefProcEnabled ? \"+\" : \"-\") + \"ParallelRefProcEnabled\",\n-                                                                          \"-XX:-UseDynamicNumberOfGCThreads\",\n-                                                                          \"-XX:ParallelGCThreads=2\",\n-                                                                          GCTest.class.getName());\n+        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:gc+phases+ref=debug\",\n+                                                                                     \"-XX:+UseG1GC\",\n+                                                                                     \"-Xmx32M\",\n+                                                                                     \"-XX:\" + (parallelRefProcEnabled ? \"+\" : \"-\") + \"ParallelRefProcEnabled\",\n+                                                                                     \"-XX:-UseDynamicNumberOfGCThreads\",\n+                                                                                     \"-XX:ParallelGCThreads=2\",\n+                                                                                     GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestPrintReferences.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspaceSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-    final ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(jvmArgs);\n+    final ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(jvmArgs);\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestSizeTransitions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/serial\/HeapChangeLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xms128m\",\n+                    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xms128m\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestEvilSyncBug.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestObjItrWithHeapDump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestPeriodicGC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -71,1 +71,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargeObj.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -66,1 +66,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargerThanHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -70,1 +70,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocSmallObj.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(pbArgs.toArray(new String[0]));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(pbArgs.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestClassLoaderLeak.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestThreadFailure.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -60,1 +60,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -71,1 +71,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -86,1 +86,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -97,1 +97,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -108,1 +108,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -119,1 +119,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestArgumentRanges.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestClassUnloadingArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -80,1 +80,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -98,1 +98,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -116,1 +116,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -134,1 +134,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGC.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGCNoConcurrent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -97,1 +97,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHeuristicsUnlock.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -54,1 +54,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -65,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHumongousThresholdArgs.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestLoopMiningArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -75,1 +75,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -96,1 +96,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestModeUnlock.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -68,1 +68,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -80,1 +80,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -91,1 +91,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -103,1 +103,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -114,1 +114,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -125,1 +125,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -137,1 +137,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -148,1 +148,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -163,1 +163,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -175,1 +175,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -187,1 +187,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -199,1 +199,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -214,1 +214,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -226,1 +226,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestRegionSizeArgs.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(conf.toArray(new String[0]));\n+                    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(conf.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSelectiveBarrierFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -52,1 +52,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSoftMaxHeapSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCounts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -56,1 +56,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCountsOverride.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -86,1 +86,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierDisable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierEnable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\", \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/startup_warnings\/TestG1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseParallelGC\", \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseParallelGC\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/startup_warnings\/TestParallelGC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseSerialGC\", \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseSerialGC\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/startup_warnings\/TestSerialGC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+UseShenandoahGC\", \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+UseShenandoahGC\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/startup_warnings\/TestShenandoah.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(baseargs);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(baseargs);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestReclaimStringsLeaksMemory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(options);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Humongous.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(options);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Uncommit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -280,1 +280,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(args);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTools.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/whitebox\/TestWBGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestAllocateHeapAt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestPageCacheFlush.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+            ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestSmallHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        ProcessBuilder pt = ProcessTools.createTestJvm(\"-Xmx4000m\", \"-javaagent:agent.jar\",  \"GetObjectSizeOverflowAgent\");\n+        ProcessBuilder pt = ProcessTools.createTestJavaProcessBuilder(\"-Xmx4000m\", \"-javaagent:agent.jar\",  \"GetObjectSizeOverflowAgent\");\n","filename":"test\/hotspot\/jtreg\/resourcehogs\/serviceability\/jvmti\/GetObjectSizeOverflow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/TestUnrecognizedVmOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-import static jdk.test.lib.process.ProcessTools.createJavaProcessBuilder;\n+import static jdk.test.lib.process.ProcessTools.createLimitedTestJavaProcessBuilder;\n@@ -232,1 +232,1 @@\n-        ProcessBuilder pb = createJavaProcessBuilder(\n+        ProcessBuilder pb = createLimitedTestJavaProcessBuilder(\n@@ -253,1 +253,1 @@\n-            ProcessBuilder pb = createJavaProcessBuilder(\n+            ProcessBuilder pb = createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/8176717\/TestInheritFD.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/BadObjectClass\/BootstrapRedefine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/BootClassAppendProp\/BootClassPathAppend.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-cp\", \".\",  classTestCName);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  classTestCName);\n","filename":"test\/hotspot\/jtreg\/runtime\/BootstrapMethod\/BSMCalledTwice.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"TestPkg.Lambda\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"TestPkg.Lambda\");\n","filename":"test\/hotspot\/jtreg\/runtime\/BootstrapMethod\/TestLambdaExceptionInInitializer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -53,1 +53,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/CDSCompressedKPtrs.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -58,1 +58,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/XShareAuto.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"BadHelloWorld\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"BadHelloWorld\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/FormatCheckingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/JsrRewriting.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/OomWhileParsingRepeatedJsr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -64,1 +64,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"--enable-preview\",\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--enable-preview\",\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"--enable-preview\", \"-Xlog:class+preview\",\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--enable-preview\", \"-Xlog:class+preview\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/PreviewVersion.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/TestCheckedExceptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-cp\", \".\",  \"ClassFile\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  \"ClassFile\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/UnsupportedClassFileVersion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -46,1 +46,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/BooleanFlagWithInvalidValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompileCommandFile=hs_comp.txt\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:CompileCommandFile=hs_comp.txt\", \"-version\");\n@@ -63,1 +63,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/CompilerConfigFileWarning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ConfigFileParsing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:Flags=hs_flags.txt\",\"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:Flags=hs_flags.txt\",\"-version\");\n@@ -60,1 +60,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ConfigFileWarning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:SweeperThreshold=\" + value, \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:SweeperThreshold=\" + value, \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/DoubleFlagWithIntegerValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/FlagWithInvalidValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/IgnoreUnrecognizedVMOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -46,1 +46,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/NonBooleanFlagWithInvalidBooleanPrefix.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -51,1 +51,1 @@\n-    ProcessBuilder pb2 = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb2 = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ObsoleteFlagErrorMessage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        output = new OutputAnalyzer((ProcessTools.createJavaProcessBuilder(\n+        output = new OutputAnalyzer((ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/TestJcmdOutput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -420,1 +420,1 @@\n-        out = new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(runJava).start());\n+        out = new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(runJava).start());\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/JVMOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -472,1 +472,1 @@\n-        p = ProcessTools.createJavaProcessBuilder(runJava).start();\n+        p = ProcessTools.createLimitedTestJavaProcessBuilder(runJava).start();\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/JVMOptionsUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -55,1 +55,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -81,1 +81,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -103,1 +103,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/PrintTouchedMethods.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -47,1 +47,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestHexArguments.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        output = new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\"-XX:\" + VERY_LONG_OPTION, \"-version\").start());\n+        output = new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:\" + VERY_LONG_OPTION, \"-version\").start());\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestLongUnrecognizedVMOption.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-                ProcessTools.createJavaProcessBuilder(testOption, \"-version\");\n+                ProcessTools.createLimitedTestJavaProcessBuilder(testOption, \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestNullTerminatedFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -48,1 +48,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -57,1 +57,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\"-XX:Flags=\"+s);\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:Flags=\"+s);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestVMOptions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TraceExceptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/UnrecognizedVMOption.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -96,1 +96,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+AlwaysSafeConstructors\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+AlwaysSafeConstructors\", \"-version\");\n@@ -50,1 +50,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintInlining\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintInlining\", \"-version\");\n@@ -55,1 +55,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+VerifyStack\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+VerifyStack\", \"-version\");\n@@ -60,1 +60,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CheckCompressedOops\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+CheckCompressedOops\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMOptionWarning.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(runJava);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(runJava);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMOptionsFile\/TestVMOptionsFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -93,1 +93,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -118,1 +118,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -139,1 +139,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -153,1 +153,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -164,1 +164,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -180,1 +180,1 @@\n-          pb = ProcessTools.createJavaProcessBuilder(\n+          pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -199,1 +199,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -215,1 +215,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -235,1 +235,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -255,1 +255,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -269,1 +269,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -282,1 +282,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -300,1 +300,1 @@\n-          pb = ProcessTools.createJavaProcessBuilder(\n+          pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassPointers.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=0\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=0\",\n+                                                              \"-version\");\n@@ -52,2 +52,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=-1\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=-1\",\n+                                                              \"-version\");\n@@ -60,2 +60,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=4g\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=4g\",\n+                                                              \"-version\");\n@@ -70,4 +70,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n-                                                   \"-XX:CompressedClassSpaceSize=1m\",\n-                                                   \"-Xlog:gc+metaspace=trace\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+                                                              \"-XX:CompressedClassSpaceSize=1m\",\n+                                                              \"-Xlog:gc+metaspace=trace\",\n+                                                              \"-version\");\n@@ -80,4 +80,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n-                                                   \"-XX:CompressedClassSpaceSize=3g\",\n-                                                   \"-Xlog:gc+metaspace=trace\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+                                                              \"-XX:CompressedClassSpaceSize=3g\",\n+                                                              \"-Xlog:gc+metaspace=trace\",\n+                                                              \"-version\");\n@@ -89,3 +89,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:-UseCompressedClassPointers\",\n-                                                   \"-XX:CompressedClassSpaceSize=1m\",\n-                                                   \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:-UseCompressedClassPointers\",\n+                                                              \"-XX:CompressedClassSpaceSize=1m\",\n+                                                              \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassSpaceSize.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedKlassPointerAndOops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,2 +77,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:ObjectAlignmentInBytes=\" + alignment,\n-                                                                  \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ObjectAlignmentInBytes=\" + alignment,\n+                                                                             \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/ObjectAlignment.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,1 +192,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/UseCompressedOops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/CleanProtectionDomain.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/ProtectionDomainCacheTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"EnclMethTest\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"EnclMethTest\");\n","filename":"test\/hotspot\/jtreg\/runtime\/EnclosingMethodAttr\/EnclMethodAttr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/BadNativeStackInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,3 @@\n-            ProcessTools.createJavaProcessBuilder(\"-XX:-CreateCoredumpOnCrash\",\n-                                                  \"-XX:ErrorHandlerTest=14\",\n-                                                  \"-XX:+ErrorFileToStdout\");\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:-CreateCoredumpOnCrash\",\n+                                                             \"-XX:ErrorHandlerTest=14\",\n+                                                             \"-XX:+ErrorFileToStdout\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ClassPathEnvVar.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-            ProcessTools.createJavaProcessBuilder(\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/CreateCoredumpOnCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -126,1 +126,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileOverwriteTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileRedirectTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/MachCodeFramesInErrorFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/NestedThreadsListHandleInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ProblematicFrameTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SafeFetchInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SecondaryErrorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ShowRegistersOnAssertTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestCrashOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+ExitOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+ExitOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestExitOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestGZippedHeapDumpOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        ProcessBuilder pb_single = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_single = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb_multiple = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_multiple = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnOutOfMemoryError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ThreadsListHandleInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TimeoutInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/VeryEarlyAssertTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/GenerateOopMap\/TestGenerateOopMapCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128M\",\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationC1Tests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128M\",\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationOldCHATests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokeinterfaceTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokespecialTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokevirtualTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LoadClassNegative.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -85,1 +85,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -100,1 +100,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -125,1 +125,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -142,1 +142,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(bootCP, \"Hello\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(bootCP, \"Hello\");\n@@ -154,1 +154,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LongBCP.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,4 +120,4 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintSystemDictionaryAtExit\",\n-                                                              \"-Xlog:safepoint+cleanup\",\n-                                                              \"TriggerResize\",\n-                                                              \"50000\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintSystemDictionaryAtExit\",\n+                                                                         \"-Xlog:safepoint+cleanup\",\n+                                                                         \"TriggerResize\",\n+                                                                         \"50000\");\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestResize.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,6 +40,6 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xint\",\n-                                                                  \"--add-opens\",\n-                                                                  \"java.base\/java.lang=ALL-UNNAMED\",\n-                                                                  \"--add-opens\",\n-                                                                  \"java.base\/java.lang.invoke=ALL-UNNAMED\",\n-                                                                  \"LocalLongHelper\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xint\",\n+                                                                             \"--add-opens\",\n+                                                                             \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                                             \"--add-opens\",\n+                                                                             \"java.base\/java.lang.invoke=ALL-UNNAMED\",\n+                                                                             \"LocalLongHelper\");\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalLong\/LocalLongTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"DuplicateLVT\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"DuplicateLVT\");\n@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"DuplicateLVTT\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"DuplicateLVTT\");\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"NotFoundLVTT\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"NotFoundLVTT\");\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalVariableTable\/TestLVT.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/MemberName\/MemberNameLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(flag, main, max);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(flag, main, max);\n@@ -99,1 +99,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(main, max);\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(main, max);\n@@ -115,1 +115,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(rcFileFlag, main, max);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(rcFileFlag, main, max);\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeEnvVarTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:dump\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-Xshare:dump\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:on\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-Xshare:on\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:auto\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-Xshare:auto\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CDS.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xcheck:jni\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-Xcheck:jni\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CheckJNI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/Instrumentation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:+ManagementServer\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-XX:+ManagementServer\", \"-version\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Dcom.sun.management \", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-Dcom.sun.management \", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JMX.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JVMTI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=detail\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=detail\", \"-version\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=summary\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=summary\", \"-version\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=off\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=off\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/NMT.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(opts);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/DeflationIntervalsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(opts);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUnlinkBatchTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUsedDeflationThresholdTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(fatalTests[i]);\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(fatalTests[i]);\n@@ -97,1 +97,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(logTests[i]);\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(logTests[i]);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/SyncOnValueBasedClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CheckForProperDetailStackTrace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineDetail.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:NativeMemoryTracking=\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:NativeMemoryTracking=\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineEmptyArgument.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:NativeMemoryTracking=apa\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:NativeMemoryTracking=apa\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineInvalidArgument.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineSummary.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineTurnOffNMT.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"JcmdWithNMTDisabled\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"JcmdWithNMTDisabled\");\n@@ -60,1 +60,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"-XX:NativeMemoryTracking=off\", \"JcmdWithNMTDisabled\");\n+      pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"-XX:NativeMemoryTracking=off\", \"JcmdWithNMTDisabled\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/JcmdWithNMTDisabled.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(vmArgs);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(vmArgs);\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTInitializationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    pb = ProcessTools.createTestJvm(\n+    pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -48,1 +48,1 @@\n-      pb = ProcessTools.createTestJvm(\n+      pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTWithCDS.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJvm(\n+    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -58,1 +58,1 @@\n-    ProcessBuilder pb1 = ProcessTools.createTestJvm(\n+    ProcessBuilder pb1 = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/PrintNMTStatistics.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/PrintNMTStatisticsWithNMTDisabled.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PerfAllowAtExitRegistration\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PerfAllowAtExitRegistration\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/PerfMemDestroy\/PerfMemDestroy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/PrintStringTableStats\/PrintStringTableStatsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -257,1 +257,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:StackReservedPages=1\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:StackReservedPages=1\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ReservedStack\/ReservedStackTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortOnVMOperationTimeout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortVMOnSafepointTimeout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-cp\", \".\",  \"Large\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  \"Large\");\n","filename":"test\/hotspot\/jtreg\/runtime\/StackTrace\/LargeClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH, main);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH, main);\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestBreakSignalThreadDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -147,1 +147,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TooSmallStackSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,5 +54,5 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n-                                                                  \"-XX:MaxJavaStackTraceDepth=1024\",\n-                                                                  \"--add-opens\",\n-                                                                  \"java.base\/java.lang=ALL-UNNAMED\",\n-                                                                  \"TestThrowable\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n+                                                                             \"-XX:MaxJavaStackTraceDepth=1024\",\n+                                                                             \"--add-opens\",\n+                                                                             \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                                             \"TestThrowable\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/StackTraceLogging.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx64m\",\n-                                                                  \"-Xlog:exceptions=trace\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx64m\",\n+                                                                             \"-Xlog:exceptions=trace\",\n@@ -49,1 +49,1 @@\n-                                                                  \"TestCatchThrowableOOM$OOM\");\n+                                                                             \"TestCatchThrowableOOM$OOM\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestCatchThrowableOOM.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,5 +82,5 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n-                                                                  \"-XX:MaxJavaStackTraceDepth=\" + d,\n-                                                                  \"--add-opens\",\n-                                                                  \"java.base\/java.lang=ALL-UNNAMED\",\n-                                                                  \"TestMaxJavaStackTraceDepth\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n+                                                                             \"-XX:MaxJavaStackTraceDepth=\" + d,\n+                                                                             \"--add-opens\",\n+                                                                             \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                                             \"TestMaxJavaStackTraceDepth\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestMaxJavaStackTraceDepth.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/Unsafe\/RangeCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcheck:jni\", \"-version\");\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\", \"-verbose:jni\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcheck:jni\", \"-verbose:jni\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/XCheckJniJsig\/XCheckJSig.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(processArgs);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(processArgs);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/MaxMetaspaceSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStrings.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-         ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n+         ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestCDSVMCrash.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -288,1 +288,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmd);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n@@ -435,1 +435,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmd);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:cds\", \"-XX:+VerifySharedSpaces\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:cds\", \"-XX:+VerifySharedSpaces\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/VerifyWithDefaultArchive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,1 +245,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmdLine);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveTestBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-        \/\/ Do not use ProcessTools.createTestJvm(cmd) here, it copies jtreg env.\n+        \/\/ Do not use ProcessTools.createTestJavaProcessBuilder(cmd) here, it copies jtreg env.\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jcmd\/JCmdTestDynamicDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,8 +45,8 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-cp\",\n-                                                                  appJar,\n-                                                                  whiteboxParam,\n-                                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                  \"-XX:+WhiteBoxAPI\",\n-                                                                  \"ResolvedReferencesWb\",\n-                                                                  \"false\" \/\/ ResolvedReferencesTestApp is not archived\n-                                                                  );\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-cp\",\n+                                                                             appJar,\n+                                                                             whiteboxParam,\n+                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                             \"-XX:+WhiteBoxAPI\",\n+                                                                             \"ResolvedReferencesWb\",\n+                                                                             \"false\" \/\/ ResolvedReferencesTestApp is not archived\n+                                                                             );\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/ResolvedReferencesNotNullTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/Bad_NCDFE_Msg.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"LambdaMath\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"LambdaMath\");\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/ClassFileParserBug.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestBadPackageWithInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestEmptyBootstrapMethodsAttr.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"CondyUsesIndyBSM\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"CondyUsesIndyBSM\");\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"IndyUsesCondyBSM\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"IndyUsesCondyBSM\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/BadBSMUseTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n-                                                                  \"CondyUseLDC_W\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+                                                                             \"CondyUseLDC_W\");\n@@ -53,2 +53,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n-                                                   \"CondyBadLDC2_W\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+                                                              \"CondyBadLDC2_W\");\n@@ -62,2 +62,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n-                                                   \"CondyBadLDC\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+                                                              \"CondyBadLDC\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyLDCTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n-                                                                  \"CondyNewInvokeSpecial\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+                                                                             \"CondyNewInvokeSpecial\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyNewInvokeSpecialTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/escapeAnalysis\/TestEscapeCondy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"Example\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"Example\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/staticInit\/TestInitException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-128\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-128\", \"-version\");\n@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-8\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-8\", \"-version\");\n@@ -55,1 +55,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-1\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-1\", \"-version\");\n@@ -61,1 +61,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=0\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=0\", \"-version\");\n@@ -65,1 +65,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=1\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=1\", \"-version\");\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8\", \"-version\");\n@@ -75,1 +75,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8184\", \"-version\"); \/\/ 8192-8 = 8184\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8184\", \"-version\"); \/\/ 8192-8 = 8184\n@@ -79,1 +79,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8191\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8191\", \"-version\");\n@@ -85,1 +85,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8192\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8192\", \"-version\");\n@@ -89,1 +89,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8193\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8193\", \"-version\");\n@@ -95,1 +95,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8200\", \"-version\"); \/\/ 8192+8 = 8200\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8200\", \"-version\"); \/\/ 8192+8 = 8200\n","filename":"test\/hotspot\/jtreg\/runtime\/contended\/Options.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(test);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(test);\n","filename":"test\/hotspot\/jtreg\/runtime\/duplAttributes\/DuplAttributesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/execstack\/Testexecstack.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetPackageXbootclasspath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:bl_dir\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xbootclasspath\/a:bl_dir\",\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetSysPkgTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            ProcessTools.createTestJvm(\n+            ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeTimeoutTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-            ProcessTools.createTestJvm(\n+            ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeTransitionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,3 +50,3 @@\n-                ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\",\n-                                                      \"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH,\n-                                                      \"TestCheckedReleaseArrayElements\");\n+                ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcheck:jni\",\n+                                                                 \"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH,\n+                                                                 \"TestCheckedReleaseArrayElements\");\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestCheckedReleaseArrayElements.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/jsig\/Testjsig.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,4 +51,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseBiasedLocking\",\n-                                                                  \"-Xlog:biasedlocking\",\n-                                                                  \"-XX:BiasedLockingStartupDelay=0\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseBiasedLocking\",\n+                                                                             \"-Xlog:biasedlocking\",\n+                                                                             \"-XX:BiasedLockingStartupDelay=0\",\n+                                                                             InnerClass.class.getName());\n@@ -57,4 +57,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseBiasedLocking\",\n-                                                   \"-Xlog:biasedlocking=off\",\n-                                                   \"-XX:BiasedLockingStartupDelay=0\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseBiasedLocking\",\n+                                                              \"-Xlog:biasedlocking=off\",\n+                                                              \"-XX:BiasedLockingStartupDelay=0\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/BiasedLockingTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+init=info\",\n-                                                                  \"-Xverify:all\",\n-                                                                  \"-Xmx128m\",\n-                                                                  \"BadMap50\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:class+init=info\",\n+                                                                             \"-Xverify:all\",\n+                                                                             \"-Xmx128m\",\n+                                                                             \"BadMap50\");\n@@ -58,5 +58,5 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+init=info\",\n-                                                       \"-Xverify:all\",\n-                                                       \"-XX:+EagerInitialization\",\n-                                                       \"-Xmx128m\",\n-                                                       InnerClass.class.getName());\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:class+init=info\",\n+                                                                  \"-Xverify:all\",\n+                                                                  \"-XX:+EagerInitialization\",\n+                                                                  \"-Xmx128m\",\n+                                                                  InnerClass.class.getName());\n@@ -69,4 +69,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+init=off\",\n-                                                   \"-Xverify:all\",\n-                                                   \"-Xmx128m\",\n-                                                   \"BadMap50\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:class+init=off\",\n+                                                              \"-Xverify:all\",\n+                                                              \"-Xmx128m\",\n+                                                              \"BadMap50\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassInitializationTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(argsList);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n-                                                                  ClassResolutionTestMain.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n+                                                                             ClassResolutionTestMain.class.getName());\n@@ -71,3 +71,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n-                                                   \"-Xlog:class+resolve=off\",\n-                                                   ClassResolutionTestMain.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n+                                                              \"-Xlog:class+resolve=off\",\n+                                                              ClassResolutionTestMain.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassResolutionTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,3 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n-                                                   \"-Xlog:gc+heap+coops=debug\",\n-                                                   InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+                                                                             \"-Xlog:gc+heap+coops=debug\",\n+                                                                             InnerClass.class.getName());\n@@ -59,3 +59,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n-                                                   \"-Xlog:gc+heap+coops\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+                                                              \"-Xlog:gc+heap+coops\",\n+                                                              InnerClass.class.getName());\n@@ -65,3 +65,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n-                                                   \"-Xlog:gc+heap+coops=off\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+                                                              \"-Xlog:gc+heap+coops=off\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/CompressedOopsTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles\",\n-                                                                  \"CondyIndy\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:methodhandles\",\n+                                                                             \"CondyIndy\");\n@@ -52,2 +52,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles+condy=debug\",\n-                                                   \"CondyIndy\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:methodhandles+condy=debug\",\n+                                                              \"CondyIndy\");\n@@ -61,2 +61,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles+indy=debug\",\n-                                                   \"CondyIndy\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:methodhandles+indy=debug\",\n+                                                              \"CondyIndy\");\n@@ -70,4 +70,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles=info\",\n-                                                   \"-Xlog:methodhandles+condy=debug\",\n-                                                   \"-Xlog:methodhandles+indy=debug\",\n-                                                   \"CondyIndy\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:methodhandles=info\",\n+                                                              \"-Xlog:methodhandles+condy=debug\",\n+                                                              \"-Xlog:methodhandles+indy=debug\",\n+                                                              \"CondyIndy\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/CondyIndyTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:defaultmethods=debug\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:defaultmethods=debug\",\n+                                                                             InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/DefaultMethodsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:exceptions=info\",\n-                                                                  InternalClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:exceptions=info\",\n+                                                                             InternalClass.class.getName());\n@@ -64,2 +64,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:exceptions=off\",\n-                                                   InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:exceptions=off\",\n+                                                              InternalClass.class.getName());\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(InternalClass.class.getName());\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(InternalClass.class.getName());\n@@ -76,3 +76,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:VMOptionsFile=\" + System.getProperty(\"test.src\", \".\")\n-                                                   + File.separator + \"ExceptionsTest_options_file\",\n-                                                   InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:VMOptionsFile=\" + System.getProperty(\"test.src\", \".\")\n+                                                              + File.separator + \"ExceptionsTest_options_file\",\n+                                                              InternalClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ExceptionsTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:itables=trace\", \"ClassB\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:itables=trace\", \"ClassB\");\n@@ -56,1 +56,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:itables=trace\", \"ItablesVtableTest\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:itables=trace\", \"ItablesVtableTest\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ItablesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        return ProcessTools.createJavaProcessBuilder(argsList);\n+        return ProcessTools.createLimitedTestJavaProcessBuilder(argsList);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/LoaderConstraintsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ModulesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:monitorinflation=trace\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:monitorinflation=trace\",\n+                                                                             InnerClass.class.getName());\n@@ -58,2 +58,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:monitorinflation=off\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:monitorinflation=off\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MonitorInflationTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,4 +43,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\",\n-                                                                  \"-XX:+TieredCompilation\",\n-                                                                  \"-Xlog:monitormismatch=info\",\n-                                                                  \"MonitorMismatchHelper\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcomp\",\n+                                                                             \"-XX:+TieredCompilation\",\n+                                                                             \"-Xlog:monitormismatch=info\",\n+                                                                             \"MonitorMismatchHelper\");\n@@ -52,4 +52,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\",\n-                                                   \"-XX:+TieredCompilation\",\n-                                                   \"-Xlog:monitormismatch=off\",\n-                                                   \"MonitorMismatchHelper\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xcomp\",\n+                                                              \"-XX:+TieredCompilation\",\n+                                                              \"-Xlog:monitormismatch=off\",\n+                                                              \"MonitorMismatchHelper\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MonitorMismatchTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+cpu\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+cpu\", \"-version\");\n@@ -61,2 +61,2 @@\n-             ? ProcessTools.createJavaProcessBuilder(\"-Xlog:os\", \"-XX:-UseSIGTRAP\", \"-version\")\n-             : ProcessTools.createJavaProcessBuilder(\"-Xlog:os\", \"-version\");\n+             ? ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os\", \"-XX:-UseSIGTRAP\", \"-version\")\n+             : ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/OsCpuLoggingTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,4 +42,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n-                                                                  \"-Xmx128m\",\n-                                                                  \"-Djava.security.manager=allow\",\n-                                                                  Hello.class.getName(), \"security_manager\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n+                                                                             \"-Xmx128m\",\n+                                                                             \"-Djava.security.manager=allow\",\n+                                                                             Hello.class.getName(), \"security_manager\");\n@@ -52,4 +52,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=debug\",\n-                                                                  \"-Xmx128m\",\n-                                                                  \"-Djava.security.manager=allow\",\n-                                                                  Hello.class.getName(), \"security_manager\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:protectiondomain=debug\",\n+                                                              \"-Xmx128m\",\n+                                                              \"-Djava.security.manager=allow\",\n+                                                              Hello.class.getName(), \"security_manager\");\n@@ -62,4 +62,4 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n-                                                   \"-Xmx128m\",\n-                                                   \"-Djava.security.manager=disallow\",\n-                                                   Hello.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n+                                                              \"-Xmx128m\",\n+                                                              \"-Djava.security.manager=disallow\",\n+                                                              Hello.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ProtectionDomainVerificationTest.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint+cleanup=info\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:safepoint+cleanup=info\",\n+                                                                             InnerClass.class.getName());\n@@ -58,2 +58,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint+cleanup=off\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:safepoint+cleanup=off\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/SafepointCleanupTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint=trace\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:safepoint=trace\",\n+                                                                             InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/SafepointTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stackwalk=debug\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:stackwalk=debug\",\n+                                                                             InnerClass.class.getName());\n@@ -56,2 +56,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stackwalk=off\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:stackwalk=off\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/StackWalkTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:startuptime\",\n-                                                                  InnerClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:startuptime\",\n+                                                                             InnerClass.class.getName());\n@@ -59,2 +59,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:startuptime=off\",\n-                                                   InnerClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:startuptime=off\",\n+                                                              InnerClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/StartupTimeTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread\", \"-version\");\n@@ -63,1 +63,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread=debug\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread=debug\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ThreadLoggingTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,4 +41,4 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vmoperation=debug\",\n-                                                                  \"-Xmx128m\",\n-                                                                  \"-Xms128m\",\n-                                                                  InternalClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:vmoperation=debug\",\n+                                                                             \"-Xmx128m\",\n+                                                                             \"-Xms128m\",\n+                                                                             InternalClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VMOperationTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=info\",\n-                                                                  InternalClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:verification=info\",\n+                                                                             InternalClass.class.getName());\n@@ -70,2 +70,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=off\",\n-                                                   InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:verification=off\",\n+                                                              InternalClass.class.getName());\n@@ -75,2 +75,2 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=debug\",\n-                                                   InternalClass.class.getName());\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:verification=debug\",\n+                                                              InternalClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VerificationTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vtables=trace\", \"ClassB\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:vtables=trace\", \"ClassB\");\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vtables=trace\", \"p1\/C\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:vtables=trace\", \"p1\/C\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VtablesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/loadLibraryTest\/LoadLibraryTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,1 +331,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReadFromNoaccessArea.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReserveMemory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ClassLoaderNoUnnamedModuleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/IgnoreModulePropertiesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleOptionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -65,1 +65,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -79,1 +79,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -86,1 +86,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -93,1 +93,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -100,1 +100,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -107,1 +107,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -114,1 +114,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintWarnings\", \"-version\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintWarnings\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleOptionsWarn.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ExportModuleStressTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -88,1 +88,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -102,1 +102,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -119,1 +119,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ModuleStress.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ModuleStressGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModule2Dirs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -87,1 +87,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -101,1 +101,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleCDS.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -101,1 +101,1 @@\n-        pb = ProcessTools.createTestJvm(\n+        pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -133,1 +133,1 @@\n-        pb = ProcessTools.createTestJvm(\n+        pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleClassList.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleDupJavaBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleDupModule.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleJavaBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=\" + moduleJar,\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.naming=\" + moduleJar,\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTestJar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,7 +95,7 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=\" +\n-                                                                           moduleJar +\n-                                                                           File.pathSeparator +\n-                                                                           System.getProperty(\"test.classes\") + \"\/mods\/java.naming\",\n-                                                                  \"PatchModule2DirsMain\",\n-                                                                  \"javax.naming.spi.NamingManager1\",\n-                                                                  \"javax.naming.spi.NamingManager2\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.naming=\" +\n+                                                                                 moduleJar +\n+                                                                                 File.pathSeparator +\n+                                                                                 System.getProperty(\"test.classes\") + \"\/mods\/java.naming\",\n+                                                                             \"PatchModule2DirsMain\",\n+                                                                             \"javax.naming.spi.NamingManager1\",\n+                                                                             \"javax.naming.spi.NamingManager2\");\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTestJarDir.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n@@ -80,1 +80,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:xbcp\",\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xbootclasspath\/a:xbcp\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTraceCL.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-      new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+      new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/PatchModuleVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/XbootcpNoVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/XbootcpVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,2 @@\n-                    ProcessTools.createJavaProcessBuilder(\"-Xlog:os=trace\",\n-                                                          \"AvailableProcessors\");\n+                    ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os=trace\",\n+                                                                     \"AvailableProcessors\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/AvailableProcessors.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+                ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n@@ -219,1 +219,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+                ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/THPsInThreadStackPreventionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(allOptions.toArray(new String[0]));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(allOptions.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDetection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread\",\n@@ -55,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread\",\n@@ -67,1 +67,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread\",\n@@ -85,1 +85,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os+thread\",\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTimerSlack.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(prepareOptions(extraOptions, programOptions));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(prepareOptions(extraOptions, programOptions));\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,4 @@\n-            ProcessTools.createJavaProcessBuilder(\"-Xlog:os=trace\",\n-                                                  \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                  \"-XX:+UseCpuAllocPath\",\n-                                                  \"-version\");\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:os=trace\",\n+                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                             \"-XX:+UseCpuAllocPath\",\n+                                                             \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestUseCpuAllocPath.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/records\/RedefineRecord.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(javaArgs1);\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(javaArgs1);\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefinePermittedSubclass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(javaArgs1);\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(javaArgs1);\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefineSealedClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+VerifyStringTableAtExit\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+VerifyStringTableAtExit\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableVerifyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,2 +92,2 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:symboltable=trace\",\n-                                                              \"-version\");\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:symboltable=trace\",\n+                                                                         \"-version\");\n@@ -96,3 +96,3 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintSymbolTableSizeHistogram\",\n-                                               LotsOfTempSymbols.class.getName(),\n-                                               Integer.toString(size));\n+    pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintSymbolTableSizeHistogram\",\n+                                                          LotsOfTempSymbols.class.getName(),\n+                                                          Integer.toString(size));\n","filename":"test\/hotspot\/jtreg\/runtime\/symboltable\/ShortLivedSymbolCleanup.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-cp\", \".\",  \"Overrider\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  \"Overrider\");\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/OverriderMsg.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-verify\", \"-cp\", \".\",  classCName);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-verify\", \"-cp\", \".\",  classCName);\n@@ -81,1 +81,1 @@\n-        pb = ProcessTools.createTestJvm(\"-verify\", \"-cp\", \".\",  classCName);\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"-verify\", \"-cp\", \".\",  classCName);\n@@ -98,1 +98,1 @@\n-        pb = ProcessTools.createTestJvm(\"-verify\", \"-cp\", \".\",  classCName);\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"-verify\", \"-cp\", \".\",  classCName);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TestANewArray.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-cp\", \".\",  \"ClassFile\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  \"ClassFile\");\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TestMultiANewArray.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TraceClassRes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/whitebox\/TestWBDeflateIdleMonitors.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    return ProcessTools.createJavaProcessBuilder(\n+    return ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/AttachSetGetFlag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/AttachWithStalePidFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        return ProcessTools.createJavaProcessBuilder(\n+        return ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/ShMemLongName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder testAppPb = ProcessTools.createJavaProcessBuilder(javaArgs);\n+        ProcessBuilder testAppPb = ProcessTools.createLimitedTestJavaProcessBuilder(javaArgs);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/RunFinalizationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            var pb = ProcessTools.createJavaProcessBuilder(\"-XX:+\" + opt, \"-version\");\n+            var pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+\" + opt, \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dtrace\/DTraceOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(JDWP_OPT, DEBUGGEE);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(JDWP_OPT, DEBUGGEE);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jdwp\/DebuggeeLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/CanGenerateAllClassHook\/CanGenerateAllClassHook.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pt = ProcessTools.createTestJvm(\"-javaagent:agent.jar\",  \"GetObjectSizeClassAgent\");\n+        ProcessBuilder pt = ProcessTools.createTestJavaProcessBuilder(\"-javaagent:agent.jar\",  \"GetObjectSizeClassAgent\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetObjectSizeClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder( \"-javaagent:redefineagent.jar\",\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder( \"-javaagent:redefineagent.jar\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefinePreviousVersions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(offCommand);\n+                ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(offCommand);\n@@ -92,1 +92,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(onCommand);\n+                ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(onCommand);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineSharedClassJFR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-                ProcessTools.createJavaProcessBuilder(\n+                ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RetransformClassesZeroLength.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-                ProcessTools.createJavaProcessBuilder(\n+                ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/TransformerDeadlockTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:all=trace\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:all=trace\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestBasicLogOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:badTag\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:badTag\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestDefaultLogOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,3 +66,3 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n-                                                                      \"-Xlog:all=trace:\" + logOutput,\n-                                                                      \"-version\");\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:logging=trace\",\n+                                                                                 \"-Xlog:all=trace:\" + logOutput,\n+                                                                                 \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestFullNames.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestLogRotation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,7 +39,7 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=debug\",\n-                                                                  \"-Xlog:logging=trace\",\n-                                                                  \"-Xlog:defaultmethods=trace\",\n-                                                                  \"-Xlog:defaultmethods=warning\",\n-                                                                  \"-Xlog:safepoint=info\",\n-                                                                  \"-Xlog:safepoint=info\",\n-                                                                  \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:logging=debug\",\n+                                                                             \"-Xlog:logging=trace\",\n+                                                                             \"-Xlog:defaultmethods=trace\",\n+                                                                             \"-Xlog:defaultmethods=warning\",\n+                                                                             \"-Xlog:safepoint=info\",\n+                                                                             \"-Xlog:safepoint=info\",\n+                                                                             \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestMultipleXlogArgs.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,3 +76,3 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n-                                                                      \"-Xlog:all=trace:\" + logOutput,\n-                                                                      \"-version\");\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:logging=trace\",\n+                                                                                 \"-Xlog:all=trace:\" + logOutput,\n+                                                                                 \"-version\");\n@@ -101,3 +101,3 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n-                                                                      \"-Xlog:all=trace:\" + logOutput,\n-                                                                      \"-version\");\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:logging=trace\",\n+                                                                                 \"-Xlog:all=trace:\" + logOutput,\n+                                                                                 \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestQuotedLogOutputs.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-               ProcessBuilder pb = ProcessTools.createTestJvm(options);\n+               ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(options);\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbCDSCore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestClassDump.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestCpoolForInvokeDynamic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestDefaultMethods.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestG1HeapRegion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestInstanceKlassSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestInstanceKlassSizeForInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"-XX:+CreateCoredumpOnCrash\",\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-XX:+CreateCoredumpOnCrash\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJmapCore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestObjectAlignment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestObjectMonitorIterate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestRevPtrsForInvokeDynamic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        ProcessBuilder procBuilder = ProcessTools.createTestJvm(\n+        ProcessBuilder procBuilder = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/jmap-hprof\/JMapHProfLargeHeapTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-                ProcessBuilder pb = ProcessTools.createTestJvm(cmd);\n+                ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(args);\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/src\/jdk\/test\/lib\/jittester\/jtreg\/JitTesterDriver.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmd);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ctw\/CtwTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder process = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestDScenarios.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder process = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestDTestAndExclude.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-        var pb = ProcessTools.createTestJvm(cmd);\n+        var pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n@@ -109,1 +109,1 @@\n-        var pb = ProcessTools.createTestJvm(cmd);\n+        var pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/huge\/quicklook\/largeheap\/MemOptions\/MemOptionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n-            ProcessTools.createTestJvm(\"-XX:MaxMetaspaceSize=100m\",\n-                                       maxMetaspaceSize.class.getName());\n+            ProcessTools.createTestJavaProcessBuilder(\"-XX:MaxMetaspaceSize=100m\",\n+                                                      maxMetaspaceSize.class.getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestMaxMetaspaceSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJvm(\n+        String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Allocate\/alloc001\/alloc001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RetransformClasses\/retransform003\/TestDriver.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetNativeMethodPrefix\/SetNativeMethodPrefix002\/TestDriver.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-            var pb = ProcessTools.createTestJvm(\n+            var pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -82,1 +82,1 @@\n-            var pb = ProcessTools.createTestJvm(\n+            var pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/compiler\/CodeCacheInfo\/Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        var pb = ProcessTools.createTestJvm(\n+        var pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/compiler\/CodeCacheInfoOnCompilation\/Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm();\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder();\n","filename":"test\/jdk\/com\/sun\/jdi\/JITDebug.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmd);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmd);\n","filename":"test\/jdk\/com\/sun\/jdi\/NoLaunchOptionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/com\/sun\/jdi\/PrivateTransportTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/com\/sun\/jdi\/ProcessAttachTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        ProcessBuilder launcher = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder launcher = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/com\/sun\/jdi\/RunToExit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        \/\/ These are the arguments passed to createJavaProcessBuilder() to launch\n+        \/\/ These are the arguments passed to createLimitedTestJavaProcessBuilder() to launch\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -83,1 +83,1 @@\n-        pb = ProcessTools.createTestJvm(testArgs);\n+        pb = ProcessTools.createTestJavaProcessBuilder(testArgs);\n","filename":"test\/jdk\/com\/sun\/jdi\/cds\/CDSJDITest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-            return ProcessTools.createTestJvm(debuggeeArgs);\n+            return ProcessTools.createTestJavaProcessBuilder(debuggeeArgs);\n","filename":"test\/jdk\/com\/sun\/jdi\/lib\/jdb\/Debuggee.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-                createJavaProcessBuilder(\n+                createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/CheckOrigin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/RunnerUtil.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/awt\/MenuBar\/TestNoScreenMenuBar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/awt\/Robot\/NonEmptyErrorStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/awt\/Toolkit\/ScreenInsetsDPIVariation\/ScreenInsetsDPIVariation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/awt\/Window\/MainKeyWindowTest\/TestMainKeyWindow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/awt\/Window\/MinimumSizeDPIVariation\/MinimumSizeDPIVariation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/awt\/color\/ICC_ColorSpace\/MTTransformReplacedProfile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-                ProcessTools.createTestJvm(MacPathTest.class.getName());\n+                ProcessTools.createTestJavaProcessBuilder(MacPathTest.class.getName());\n","filename":"test\/jdk\/java\/io\/File\/MacPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(params);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(params);\n","filename":"test\/jdk\/java\/io\/Serializable\/class\/NonSerializableTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -96,1 +96,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/io\/Serializable\/evolution\/RenamePackage\/RenamePackageTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/GetSystemPackage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/InheritIOTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,3 +82,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n-                                                   \"JspawnhelperProtocol\",\n-                                                   \"normalExec\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+                                                              \"JspawnhelperProtocol\",\n+                                                              \"normalExec\");\n@@ -97,3 +97,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n-                                                   \"JspawnhelperProtocol\",\n-                                                   \"simulateCrashInChild\" + stage);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+                                                              \"JspawnhelperProtocol\",\n+                                                              \"simulateCrashInChild\" + stage);\n@@ -130,3 +130,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n-                                                   \"JspawnhelperProtocol\",\n-                                                   \"simulateCrashInParent\" + stage);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+                                                              \"JspawnhelperProtocol\",\n+                                                              \"simulateCrashInParent\" + stage);\n@@ -176,3 +176,3 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n-                                                   \"JspawnhelperProtocol\",\n-                                                   \"simulateTruncatedWriteInParent\" + stage);\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+                                                              \"JspawnhelperProtocol\",\n+                                                              \"simulateTruncatedWriteInParent\" + stage);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/JspawnhelperProtocol.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n@@ -125,1 +125,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n@@ -195,1 +195,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -221,1 +221,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -267,1 +267,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/ReaderWriterTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-import static jdk.test.lib.process.ProcessTools.createTestJvm;\n+import static jdk.test.lib.process.ProcessTools.createTestJavaProcessBuilder;\n@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = createTestJvm(\"ShutdownInterruptedMain\");\n+            ProcessBuilder pb = createTestJavaProcessBuilder(\"ShutdownInterruptedMain\");\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/shutdown\/ShutdownInterruptedMain.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/modules\/CustomSecurityManagerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\"CallerFromMain\");\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"CallerFromMain\");\n","filename":"test\/jdk\/java\/lang\/StackWalker\/CallerFromMain.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/lang\/System\/MacEncoding\/MacJNUEncoding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(String.format(\"UncaughtExitSimulator$%s\",className));\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(String.format(\"UncaughtExitSimulator$%s\",className));\n","filename":"test\/jdk\/java\/lang\/Thread\/UncaughtExceptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        var processBuilder = ProcessTools.createJavaProcessBuilder(command)\n+        var processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(command)\n","filename":"test\/jdk\/java\/lang\/annotation\/LoaderLeakTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\"-javaagent:DummyAgent.jar\", \"TestDaemonThread\", \".\");\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-javaagent:DummyAgent.jar\", \"TestDaemonThread\", \".\");\n","filename":"test\/jdk\/java\/lang\/instrument\/DaemonThread\/TestDaemonThreadLauncher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/lang\/instrument\/NegativeAgentRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/PremainClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        \/\/ can't use ProcessTools.createJavaProcessBuilder as it always adds -cp\n+        \/\/ can't use ProcessTools.createLimitedTestJavaProcessBuilder as it always adds -cp\n","filename":"test\/jdk\/java\/lang\/instrument\/modules\/AppendToClassPathModuleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"CondyNestedResolution\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"CondyNestedResolution\");\n","filename":"test\/jdk\/java\/lang\/invoke\/condy\/CondyNestedResolutionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            ProcessTools.createJavaProcessBuilder(LotsOfUpdates.class.getName()));\n+            ProcessTools.createLimitedTestJavaProcessBuilder(LotsOfUpdates.class.getName()));\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfUpdatesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            = ProcessTools.createTestJvm(Default.class.getName());\n+            = ProcessTools.createTestJavaProcessBuilder(Default.class.getName());\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/DefaultCharsetTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(MacPath.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(MacPath.class.getName());\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPathTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -88,1 +88,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/security\/SignedJar\/SignedJarWithCustomClassLoader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(JAVA_OPTS, TEST_CLASS);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(JAVA_OPTS, TEST_CLASS);\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicTestLauncher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(List.of(\"CustomTzIDCheckDST\", \"runTZTest\"));\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(List.of(\"CustomTzIDCheckDST\", \"runTZTest\"));\n","filename":"test\/jdk\/java\/util\/TimeZone\/CustomTzIDCheckDST.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -436,1 +436,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -478,1 +478,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/javax\/management\/security\/HashedPasswordFileTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = createJavaProcessBuilder(javaPath, clazz, props);\n+        ProcessBuilder pb = createLimitedTestJavaProcessBuilder(javaPath, clazz, props);\n@@ -53,1 +53,1 @@\n-    private static ProcessBuilder createJavaProcessBuilder(Path javaPath,\n+    private static ProcessBuilder createLimitedTestJavaProcessBuilder(Path javaPath,\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/ProcUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -227,1 +227,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/javax\/swing\/UI\/UnninstallUIMemoryLeaks\/UnninstallUIMemoryLeaks.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        return ProcessTools.createJavaProcessBuilder(argsList.toArray(new String[argsList.size()]));\n+        return ProcessTools.createLimitedTestJavaProcessBuilder(argsList.toArray(new String[argsList.size()]));\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug8234913.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LoadJsvmlTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/internal\/misc\/VM\/RuntimeArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(args);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/streaming\/Application.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,1 +130,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/streaming\/TestCrossProcessStreaming.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/streaming\/TestProcess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(jvm_args);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(jvm_args);\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/configuration\/TestGCYoungGenerationConfigurationEventWithMinAndMaxSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(Test.class.getName());\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(Test.class.getName());\n","filename":"test\/jdk\/jdk\/jfr\/event\/os\/TestInitialEnvironmentVariable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        Process p = ProcessTools.createTestJvm(\n+        Process p = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestDumpReason.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestShutdownEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        Process p = ProcessTools.createTestJvm(\n+        Process p = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestDumpOnCrash.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:jfr+system+bytecode=trace\", \"-XX:StartFlightRecording\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:jfr+system+bytecode=trace\", \"-XX:StartFlightRecording\", \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestEventWriterLog.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(prepend + option, \"-version\");\n+            pb = ProcessTools.createLimitedTestJavaProcessBuilder(prepend + option, \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestBadOptionValues.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(args);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestDumpOnExit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(commandLine, \"-version\");\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(commandLine, \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestJFCWarnings.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -486,6 +486,6 @@\n-                pb = ProcessTools.createTestJvm(\"--add-exports=jdk.jfr\/jdk.jfr.internal=ALL-UNNAMED\",\n-                                                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n-                                                flightRecorderOptions,\n-                                                \"-XX:StartFlightRecording\",\n-                                                SUT.class.getName(),\n-                                                tc.getTestName());\n+                pb = ProcessTools.createTestJavaProcessBuilder(\"--add-exports=jdk.jfr\/jdk.jfr.internal=ALL-UNNAMED\",\n+                                                               \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                                                               flightRecorderOptions,\n+                                                               \"-XX:StartFlightRecording\",\n+                                                               SUT.class.getName(),\n+                                                               tc.getTestName());\n@@ -494,5 +494,5 @@\n-                pb = ProcessTools.createTestJvm(\"--add-exports=jdk.jfr\/jdk.jfr.internal=ALL-UNNAMED\",\n-                                                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n-                                                \"-XX:StartFlightRecording\",\n-                                                SUT.class.getName(),\n-                                                tc.getTestName());\n+                pb = ProcessTools.createTestJavaProcessBuilder(\"--add-exports=jdk.jfr\/jdk.jfr.internal=ALL-UNNAMED\",\n+                                                               \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                                                               \"-XX:StartFlightRecording\",\n+                                                               SUT.class.getName(),\n+                                                               tc.getTestName());\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestMemoryOptions.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(recording1, MainClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(recording1, MainClass.class.getName());\n@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(recording1, recording2, MainClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(recording1, recording2, MainClass.class.getName());\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(recording1, recording2, recording3, MainClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(recording1, recording2, recording3, MainClass.class.getName());\n@@ -97,1 +97,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(flightRecorderOptions, recording1, recording2, MainClass.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(flightRecorderOptions, recording1, recording2, MainClass.class.getName());\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestMultipleStartupRecordings.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestOptionsWithLocale.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(args);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestRetransformUsingLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartDuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(commands);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(commands);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartupMessage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/jdk\/jdk\/security\/JavaDotSecurity\/MakeJavaSecurityTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/MonitorVmStartTerminate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(options);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(options);\n","filename":"test\/jdk\/sun\/management\/jdp\/DynamicLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createTestJvm(command);\n+            ProcessBuilder processBuilder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/AbstractFilePermissionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-            ProcessBuilder client = ProcessTools.createTestJvm(\n+            ProcessBuilder client = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/CustomLauncherTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-                ProcessBuilder builder = ProcessTools.createTestJvm(args.toArray(new String[]{}));\n+                ProcessBuilder builder = ProcessTools.createTestJavaProcessBuilder(args.toArray(new String[]{}));\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/JMXInterfaceBindingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        ProcessBuilder server = ProcessTools.createTestJvm(\n+        ProcessBuilder server = ProcessTools.createTestJavaProcessBuilder(\n@@ -136,1 +136,1 @@\n-            ProcessBuilder client = ProcessTools.createTestJvm(\n+            ProcessBuilder client = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/LocalManagementTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createTestJvm(command);\n+            ProcessBuilder processBuilder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiRegistrySslTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -401,1 +401,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(pbArgs);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(pbArgs);\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStartStopTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        testAppPb = ProcessTools.createTestJvm(\n+        testAppPb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStatusPerfCountersTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        testAppPb = ProcessTools.createTestJvm(args);\n+        testAppPb = ProcessTools.createTestJavaProcessBuilder(args);\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStatusTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            List<String> cmd = ProcessTools.createJavaProcessBuilder().command();\n+            List<String> cmd = ProcessTools.createLimitedTestJavaProcessBuilder().command();\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ModuleName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(List.of(\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(List.of(\n","filename":"test\/jdk\/sun\/security\/provider\/KeyStore\/DKSTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/SSLEngineKeyLimit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSessionImpl\/ResumptionUpdateBoundValues.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-            ProcessBuilder pb = ProcessTools.createTestJvm(\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketKeyLimit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/sun\/tools\/jstat\/JStatInterval.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder builder = ProcessTools.createJavaProcessBuilder(args.toArray(new String[args.size()]));\n+        ProcessBuilder builder = ProcessTools.createLimitedTestJavaProcessBuilder(args.toArray(new String[args.size()]));\n","filename":"test\/jdk\/tools\/jimage\/JImageToolTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,1 +273,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(Utils.addTestJavaOpts(cmds));\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(Utils.addTestJavaOpts(cmds));\n","filename":"test\/jdk\/tools\/launcher\/modules\/basic\/BasicTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-        \/\/ can't use ProcessTools.createJavaProcessBuilder as it always adds -cp\n+        \/\/ can't use ProcessTools.createLimitedTestJavaProcessBuilder as it always adds -cp\n","filename":"test\/jdk\/tools\/launcher\/modules\/classpath\/JavaClassPathTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                ProcessTools.createJavaProcessBuilder(ProcessToolsLastLineTest.class.getName(), output),\n+                ProcessTools.createLimitedTestJavaProcessBuilder(ProcessToolsLastLineTest.class.getName(), output),\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/ProcessToolsLastLineTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/BooleanTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmdLine);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n@@ -433,1 +433,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(cmdLine);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-                = ProcessTools.createJavaProcessBuilder(finalOptions.toArray(\n+                = ProcessTools.createLimitedTestJavaProcessBuilder(finalOptions.toArray(\n@@ -266,1 +266,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n@@ -336,1 +336,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createLimitedTestJavaProcessBuilder(\n","filename":"test\/lib\/jdk\/test\/lib\/cli\/CommandLineOptionTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(arguments);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(arguments);\n","filename":"test\/lib\/jdk\/test\/lib\/jfr\/AppExecutorHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -373,11 +373,1 @@\n-    public static ProcessBuilder createJavaProcessBuilder(List<String> command) {\n-        return createJavaProcessBuilder(command.toArray(String[]::new));\n-    }\n-\n-    \/**\n-     * Create ProcessBuilder using the java launcher from the jdk to be tested.\n-     *\n-     * @param command Arguments to pass to the java command.\n-     * @return The ProcessBuilder instance representing the java command.\n-     *\/\n-    public static ProcessBuilder createJavaProcessBuilder(String... command) {\n+    private static ProcessBuilder createJavaProcessBuilder(String... command) {\n@@ -424,2 +414,2 @@\n-    public static ProcessBuilder createTestJvm(List<String> command) {\n-        return createTestJvm(command.toArray(String[]::new));\n+    public static ProcessBuilder createTestJavaProcessBuilder(List<String> command) {\n+        return createTestJavaProcessBuilder(command.toArray(String[]::new));\n@@ -439,1 +429,1 @@\n-    public static ProcessBuilder createTestJvm(String... command) {\n+    public static ProcessBuilder createTestJavaProcessBuilder(String... command) {\n@@ -443,0 +433,44 @@\n+    \/**\n+     * Create ProcessBuilder using the java launcher from the jdk to\n+     * be tested.\n+     *\n+     * <p><b>Please observe that you likely should use\n+     * createTestJavaProcessBuilder() instead of this method because\n+     * createTestJavaProcessBuilder() will add JVM options from\n+     * \"test.vm.opts\" and \"test.java.opts\"<\/b> and this method will\n+     * not do that.\n+     *\n+     * <p>If you still chose to use\n+     * createLimitedTestJavaProcessBuilder() you should probably use\n+     * it in combination with <b>@requires vm.flagless<\/b> JTREG\n+     * anotation as to not waste energy and test resources.\n+     *\n+     * @param command Arguments to pass to the java command.\n+     * @return The ProcessBuilder instance representing the java command.\n+     *\/\n+    public static ProcessBuilder createLimitedTestJavaProcessBuilder(List<String> command) {\n+        return createLimitedTestJavaProcessBuilder(command.toArray(String[]::new));\n+    }\n+\n+   \/**\n+     * Create ProcessBuilder using the java launcher from the jdk to\n+     * be tested.\n+     *\n+     * <p><b>Please observe that you likely should use\n+     * createTestJavaProcessBuilder() instead of this method because\n+     * createTestJavaProcessBuilder() will add JVM options from\n+     * \"test.vm.opts\" and \"test.java.opts\"<\/b> and this method will\n+     * not do that.\n+     *\n+     * <p>If you still chose to use\n+     * createLimitedTestJavaProcessBuilder() you should probably use\n+     * it in combination with <b>@requires vm.flagless<\/b> JTREG\n+     * anotation as to not waste energy and test resources.\n+     *\n+     * @param command Arguments to pass to the java command.\n+     * @return The ProcessBuilder instance representing the java command.\n+     *\/\n+    public static ProcessBuilder createLimitedTestJavaProcessBuilder(String... command) {\n+        return createJavaProcessBuilder(command);\n+    }\n+\n@@ -474,1 +508,1 @@\n-        ProcessBuilder pb = createTestJvm(cmds);\n+        ProcessBuilder pb = createTestJavaProcessBuilder(cmds);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":49,"deletions":15,"binary":false,"changes":64,"status":"modified"}]}