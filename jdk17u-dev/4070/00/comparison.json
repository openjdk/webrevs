{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.util.function.Supplier;\n@@ -253,0 +254,12 @@\n+    private static class BadResultException extends RuntimeException {\n+        BadResultException(Result v) {\n+            value = v;\n+        }\n+\n+        Result getValue() {\n+            return value;\n+        }\n+\n+        private final Result value;\n+    }\n+\n@@ -258,1 +271,19 @@\n-        Result result;\n+        try {\n+            return tryRunMultipleTimes(() -> {\n+                Result result = executeWithoutExitCodeCheck();\n+                if (result.getExitCode() != expectedCode) {\n+                    throw new BadResultException(result);\n+                }\n+                return result;\n+            }, max, wait).assertExitCodeIs(expectedCode);\n+        } catch (BadResultException ex) {\n+            return ex.getValue().assertExitCodeIs(expectedCode);\n+        }\n+    }\n+\n+    \/*\n+     * Repeates a \"task\" \"max\" times and waits for \"wait\" seconds between each\n+     * execution until the \"task\" returns without throwing an exception.\n+     *\/\n+    public static <T> T tryRunMultipleTimes(Supplier<T> task, int max, int wait) {\n+        RuntimeException lastException = null;\n@@ -262,3 +293,4 @@\n-            result = executeWithoutExitCodeCheck();\n-            if (result.getExitCode() == expectedCode) {\n-                return result;\n+            try {\n+                return task.get();\n+            } catch (RuntimeException ex) {\n+                lastException = ex;\n@@ -276,1 +308,8 @@\n-        return result.assertExitCodeIs(expectedCode);\n+        throw lastException;\n+    }\n+\n+    public static void tryRunMultipleTimes(Runnable task, int max, int wait) {\n+        tryRunMultipleTimes(() -> {\n+            task.run();\n+            return null;\n+        }, max, wait);\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Executor.java","additions":44,"deletions":5,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -97,1 +97,3 @@\n-                    setIcon(expectedIcon, iconContainer);\n+                    Executor.tryRunMultipleTimes(() -> {\n+                        setIcon(expectedIcon, iconContainer);\n+                    }, 3, 5);\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherIconVerifier.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}