{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#include \"metaprogramming\/isArray.hpp\"\n@@ -33,0 +32,2 @@\n+#include <type_traits>\n+\n@@ -52,1 +53,1 @@\n-  if (IsArray<T>::value) {\n+  if (std::is_array<T>::value) {\n","filename":"src\/hotspot\/share\/gc\/z\/zSafeDelete.inline.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_METAPROGRAMMING_ISARRAY_HPP\n-#define SHARE_METAPROGRAMMING_ISARRAY_HPP\n-\n-#include \"metaprogramming\/integralConstant.hpp\"\n-\n-template <typename T> struct IsArray: public FalseType {};\n-\n-template <typename T> struct IsArray<T[]>: public TrueType {};\n-template <typename T, size_t S> struct IsArray<T[S]>: public TrueType {};\n-\n-#endif \/\/ SHARE_METAPROGRAMMING_ISARRAY_HPP\n","filename":"src\/hotspot\/share\/metaprogramming\/isArray.hpp","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,71 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"memory\/allocation.hpp\"\n-#include \"metaprogramming\/isArray.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-class IsArrayTest: AllStatic {\n-  class A: AllStatic {};\n-\n-  static const bool ia_A = IsArray<A>::value;\n-  STATIC_ASSERT(!ia_A);\n-\n-  static const bool ia_Aptr = IsArray<A*>::value;\n-  STATIC_ASSERT(!ia_Aptr);\n-\n-  static const bool ia_Aarr = IsArray<A[]>::value;\n-  STATIC_ASSERT(ia_Aarr);\n-\n-  static const bool ia_Aarr10 = IsArray<A[10]>::value;\n-  STATIC_ASSERT(ia_Aarr10);\n-\n-  static const bool ia_Aptrarr10 = IsArray<A*[10]>::value;\n-  STATIC_ASSERT(ia_Aptrarr10);\n-\n-  static const bool ia_Aarr10arr10 = IsArray<A[10][10]>::value;\n-  STATIC_ASSERT(ia_Aarr10arr10);\n-\n-  static const bool ia_cAarr = IsArray<const A[]>::value;\n-  STATIC_ASSERT(ia_cAarr);\n-\n-  static const bool ia_vAarr = IsArray<volatile A[]>::value;\n-  STATIC_ASSERT(ia_vAarr);\n-\n-  static const bool ia_cAarr10 = IsArray<const A[10]>::value;\n-  STATIC_ASSERT(ia_cAarr10);\n-\n-  static const bool ia_vAarr10 = IsArray<volatile A[10]>::value;\n-  STATIC_ASSERT(ia_vAarr10);\n-\n-  static const bool ia_voidptr = IsArray<void*>::value;\n-  STATIC_ASSERT(!ia_voidptr);\n-\n-  static const bool ia_intptrt = IsArray<intptr_t>::value;\n-  STATIC_ASSERT(!ia_intptrt);\n-\n-  static const bool ia_char = IsArray<char>::value;\n-  STATIC_ASSERT(!ia_char);\n-};\n","filename":"test\/hotspot\/gtest\/metaprogramming\/test_isArray.cpp","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"}]}