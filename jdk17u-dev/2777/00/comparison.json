{"files":[{"patch":"@@ -298,0 +298,2 @@\n+    _num_plab_fills[state] = 0;\n+    _num_direct_allocations[state] = 0;\n@@ -330,0 +332,2 @@\n+    _num_plab_fills[dest.type()]++;\n+\n@@ -338,1 +342,1 @@\n-           \"Requested at minimum \" SIZE_FORMAT \", desired \" SIZE_FORMAT \" words, but got \" SIZE_FORMAT \" at \" PTR_FORMAT,\n+           \"Requested at minimum %zu, desired %zu words, but got %zu at \" PTR_FORMAT,\n@@ -346,1 +350,1 @@\n-                          SIZE_FORMAT \" requiring \" SIZE_FORMAT \" PLAB size \" SIZE_FORMAT,\n+                          \"%zu requiring %zu PLAB size %zu\",\n@@ -357,0 +361,1 @@\n+    _num_direct_allocations[dest.type()]++;\n@@ -374,0 +379,1 @@\n+    stats->add_num_plab_filled(_num_plab_fills[state]);\n@@ -375,1 +381,1 @@\n-    _direct_allocated[state] = 0;\n+    stats->add_num_direct_allocated(_num_direct_allocations[state]);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -164,0 +164,4 @@\n+  \/\/ Number of PLAB refills experienced so far.\n+  size_t _num_plab_fills[G1HeapRegionAttr::Num];\n+  size_t _num_direct_allocations[G1HeapRegionAttr::Num];\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2548,1 +2548,2 @@\n-                       stats->regions_filled(), stats->direct_allocated(),\n+                       stats->regions_filled(), stats->num_plab_filled(),\n+                       stats->direct_allocated(), stats->num_direct_allocated(),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-                      \"region end waste: \" SIZE_FORMAT \"B, \"\n+                      \"region end waste: %zuB, \"\n@@ -38,3 +38,5 @@\n-                      \"direct allocated: \" SIZE_FORMAT \"B, \"\n-                      \"failure used: \" SIZE_FORMAT \"B, \"\n-                      \"failure wasted: \" SIZE_FORMAT \"B\",\n+                      \"num plab filled: %zu, \"\n+                      \"direct allocated: %zuB, \"\n+                      \"num direct allocated: %zu, \"\n+                      \"failure used: %zuB, \"\n+                      \"failure wasted: %zuB\",\n@@ -44,0 +46,1 @@\n+                      _num_plab_filled,\n@@ -45,0 +48,1 @@\n+                      _num_direct_allocated,\n@@ -97,0 +101,1 @@\n+  _num_plab_filled(0),\n@@ -98,0 +103,1 @@\n+  _num_direct_allocated(0),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacStats.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+  size_t _num_plab_filled; \/\/ Number of PLABs filled and retired.\n@@ -36,0 +37,1 @@\n+  size_t _num_direct_allocated; \/\/ Number of direct allocation attempts.\n@@ -49,0 +51,1 @@\n+    _num_plab_filled = 0;\n@@ -50,0 +53,1 @@\n+    _num_direct_allocated = 0;\n@@ -64,0 +68,1 @@\n+  size_t num_plab_filled() const { return _num_plab_filled; }\n@@ -66,0 +71,1 @@\n+  size_t num_direct_allocated() const { return _num_direct_allocated; }\n@@ -72,0 +78,1 @@\n+  inline void add_num_plab_filled(size_t value);\n@@ -73,0 +80,1 @@\n+  inline void add_num_direct_allocated(size_t value);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacStats.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,8 @@\n+inline void G1EvacStats::add_num_plab_filled(size_t value) {\n+  Atomic::add(&_num_plab_filled, value);\n+}\n+\n+inline void G1EvacStats::add_num_direct_allocated(size_t value) {\n+  Atomic::add(&_num_direct_allocated, value);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacStats.inline.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -180,0 +180,1 @@\n+  size_t _num_plab_filled;  \/\/ Number of PLABs refilled\/retired.\n@@ -181,0 +182,1 @@\n+  size_t _num_direct_allocated; \/\/ Number of direct allocations.\n@@ -190,3 +192,12 @@\n-  G1EvacSummary(size_t allocated, size_t wasted, size_t undo_wasted, size_t unused,\n-    size_t used, size_t region_end_waste, uint regions_filled, size_t direct_allocated,\n-    size_t failure_used, size_t failure_waste) :\n+  G1EvacSummary(size_t allocated,\n+                size_t wasted,\n+                size_t undo_wasted,\n+                size_t unused,\n+                size_t used,\n+                size_t region_end_waste,\n+                uint regions_filled,\n+                size_t num_plab_filled,\n+                size_t direct_allocated,\n+                size_t num_direct_allocated,\n+                size_t failure_used,\n+                size_t failure_waste) :\n@@ -194,2 +205,4 @@\n-    _used(used),  _region_end_waste(region_end_waste), _regions_filled(regions_filled),\n-    _direct_allocated(direct_allocated), _failure_used(failure_used), _failure_waste(failure_waste)\n+    _used(used),  _region_end_waste(region_end_waste),\n+    _regions_filled(regions_filled), _num_plab_filled(num_plab_filled),\n+    _direct_allocated(direct_allocated),_num_direct_allocated(num_direct_allocated),\n+    _failure_used(failure_used), _failure_waste(failure_waste)\n@@ -205,0 +218,1 @@\n+  size_t num_plab_filled() const { return _num_plab_filled; }\n@@ -206,0 +220,1 @@\n+  size_t num_direct_allocated() const { return _num_direct_allocated; }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcHeapSummary.hpp","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -353,0 +353,1 @@\n+    <Field type=\"ulong\" name=\"numPlabsFilled\" label=\"PLAB Fills\" description=\"Number of PLABs filled\" \/>\n@@ -354,0 +355,1 @@\n+    <Field type=\"ulong\" name=\"numDirectAllocated\" label=\"Direct allocations\" description=\"Number of direct allocations\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,6 +40,6 @@\n- * [0.330s][debug][gc,plab  ] GC(0) Young PLAB allocation: allocated: 1825632B, wasted: 29424B, unused: 2320B, used: 1793888B, undo waste: 0B,\n- * [0.330s][debug][gc,plab  ] GC(0) Young other allocation: region end waste: 0B, regions filled: 2, direct allocated: 271520B, failure used: 0B, failure wasted: 0B\n- * [0.330s][debug][gc,plab  ] GC(0) Young sizing: calculated: 358776B, actual: 358776B\n- * [0.330s][debug][gc,plab  ] GC(0) Old PLAB allocation: allocated: 427248B, wasted: 592B, unused: 368584B, used: 58072B, undo waste: 0B,\n- * [0.330s][debug][gc,plab  ] GC(0) Old other allocation: region end waste: 0B, regions filled: 1, direct allocated: 41704B, failure used: 0B, failure wasted: 0B\n- * [0.330s][debug][gc,plab  ] GC(0) Old sizing: calculated: 11608B, actual: 11608B\n+ * [0.192s][debug][gc,plab     ] GC(0) Young PLAB allocation: allocated: 2867184B, wasted: 656B, unused: 252896B, used: 2613632B, undo waste: 0B,\n+ * [0.192s][debug][gc,plab     ] GC(0) Young other allocation: region end waste: 0B, regions filled: 3, num plab filled: 30, direct allocated: 16400B, num direct allocated: 1, failure used: 0B, failure wasted: 0B\n+ * [0.192s][debug][gc,plab     ] GC(0) Young sizing: calculated: 522720B, actual: 522720B\n+ * [0.192s][debug][gc,plab     ] GC(0) Old PLAB allocation: allocated: 0B, wasted: 0B, unused: 0B, used: 0B, undo waste: 0B,\n+ * [0.192s][debug][gc,plab     ] GC(0) Old other allocation: region end waste: 0B, regions filled: 0, num plab filled: 0, direct allocated: 0B, num direct allocated: 0, failure used: 0B, failure wasted: 0B\n+ * [0.192s][debug][gc,plab     ] GC(0) Old sizing: calculated: 0B, actual: 2064B\n@@ -65,1 +65,2 @@\n-    private static final Pattern PAIRS_PATTERN = Pattern.compile(\"\\\\w* \\\\w+:\\\\s+\\\\d+\");\n+    \/\/ This is a non-zero set of words separated by spaces followed by \":\" and a value.\n+    private static final Pattern PAIRS_PATTERN = Pattern.compile(\"(?:\\\\w+ )*\\\\w+:\\\\s+\\\\d+\");\n@@ -122,1 +123,1 @@\n-                            plabInfo.put(nameValue[0].trim(), Long.parseLong(nameValue[1]));\n+                            plabInfo.put(nameValue[0], Long.parseLong(nameValue[1]));\n@@ -197,1 +198,1 @@\n-                                        gcLogItem -> gcLogItem.getValue().get(type).filter(fieldNames)\n+                                                  gcLogItem -> gcLogItem.getValue().get(type).filter(fieldNames)\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/lib\/LogParser.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}