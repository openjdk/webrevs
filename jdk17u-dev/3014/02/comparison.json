{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.awt.EventQueue;\n@@ -47,1 +46,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -53,0 +52,1 @@\n+                .testUI(() -> new Frame(\"DefaultSize\"))\n@@ -54,13 +54,2 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            Frame frame = new Frame(\"DefaultSize\");\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/DefaultSizeTest.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -86,13 +86,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameRepack frame = new FrameRepack();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameRepack::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameRepackTest.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.awt.EventQueue;\n@@ -56,1 +55,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -62,13 +61,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameResize_1 frame = new FrameResize_1();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameResize_1::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameResizeTest\/FrameResizeTest_1.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.awt.EventQueue;\n@@ -60,1 +59,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -66,13 +65,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameResize_2 frame = new FrameResize_2();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameResize_2::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameResizeTest\/FrameResizeTest_2.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.EventQueue;\n@@ -52,1 +51,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -58,8 +57,4 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            Frame frame = new Frame(\"DefaultSize\");\n-\n-            Container panel = new MyContainer();\n-            MyComponent c = new MyComponent();\n-            panel.add(c);\n+                .testUI(LightweightCliprect::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -67,2 +62,2 @@\n-            frame.add(panel);\n-            frame.setSize(400, 300);\n+    private static Frame createUI() {\n+        Frame frame = new Frame(\"DefaultSize\");\n@@ -70,3 +65,3 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        Container panel = new MyContainer();\n+        MyComponent c = new MyComponent();\n+        panel.add(c);\n@@ -74,2 +69,2 @@\n-            frame.setVisible(true);\n-        });\n+        frame.add(panel);\n+        frame.setSize(400, 300);\n@@ -77,1 +72,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/LightweightCliprect.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import javax.swing.SwingUtilities;\n@@ -61,1 +60,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -67,13 +66,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_1 frame = new AddRemoveMenuBar_1();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_1::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_1.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import javax.swing.SwingUtilities;\n@@ -57,1 +56,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -63,13 +62,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_2 frame = new AddRemoveMenuBar_2();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_2::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_2.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import javax.swing.SwingUtilities;\n@@ -79,1 +78,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -85,13 +84,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_3 frame = new AddRemoveMenuBar_3();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(null,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_3::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_3.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import javax.swing.SwingUtilities;\n@@ -64,1 +63,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -70,13 +69,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_4 frame = new AddRemoveMenuBar_4();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_4::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_4.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconScalingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -375,1 +375,1 @@\n-            PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+            PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/geom\/HitTest\/PathHitTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,1 +170,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/print\/PageFormat\/CustomPaper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1162,0 +1162,8 @@\n+        \/**\n+         * A private constructor for the builder,\n+         * it should not be created directly.\n+         * Use {@code PassFailJFrame.builder()} method instead.\n+         *\/\n+        private Builder() {\n+        }\n+\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/accessibility\/JComboBox\/TestJComboBoxScreenMagnifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import javax.swing.SwingUtilities;\n@@ -48,1 +47,1 @@\n-            otherwise click Pass.  \"\"\";\n+            otherwise click Pass.\"\"\";\n@@ -51,1 +50,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -57,1 +56,4 @@\n-                .build();\n+                .testUI(ComboPopupBug::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -59,2 +61,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            JFrame frame = new JFrame(\"ComboPopup\");\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"ComboPopup\");\n@@ -62,6 +64,5 @@\n-            JComboBox cb = new JComboBox();\n-            cb.setEditable(true);\n-            cb.addItem(\"test\");\n-            cb.addItem(\"test2\");\n-            cb.addItem(\"test3\");\n-            frame.getContentPane().add(cb, \"North\");\n+        JComboBox<String> cb = new JComboBox<>();\n+        cb.setEditable(true);\n+        cb.addItem(\"test\");\n+        cb.addItem(\"test2\");\n+        cb.addItem(\"test3\");\n@@ -69,2 +70,2 @@\n-            JButton b = new JButton(\"Close\");\n-            b.addActionListener(\n+        JButton b = new JButton(\"Close\");\n+        b.addActionListener(\n@@ -74,2 +75,1 @@\n-                    }\n-                    catch (Exception ex) {\n+                    } catch (Exception ignored) {\n@@ -78,1 +78,0 @@\n-\n@@ -80,6 +79,0 @@\n-            frame.getContentPane().add(b, \"South\");\n-            frame.setSize(200, 200);\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n@@ -87,2 +80,3 @@\n-            frame.setVisible(true);\n-        });\n+        frame.getContentPane().add(cb, \"North\");\n+        frame.getContentPane().add(b, \"South\");\n+        frame.setSize(200, 200);\n@@ -90,1 +84,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/ComboPopupBug.java","additions":20,"deletions":26,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import javax.swing.SwingUtilities;\n@@ -76,2 +75,1 @@\n-\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -82,10 +80,5 @@\n-                .columns(70)\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            DefaultCloseOperation dco = new DefaultCloseOperation();\n-            dco.init();\n-\n-            JFrame frame = new JFrame(\"DefaultCloseOperation\");\n-            frame.add(dco);\n-            frame.setSize(500,200);\n+                .columns(50)\n+                .testUI(DefaultCloseOperation::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -93,3 +86,3 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+    private static JFrame createUI() {\n+        DefaultCloseOperation dco = new DefaultCloseOperation();\n+        dco.init();\n@@ -97,2 +90,3 @@\n-            frame.setVisible(true);\n-        });\n+        JFrame frame = new JFrame(\"DefaultCloseOperation\");\n+        frame.add(dco);\n+        frame.setSize(500,200);\n@@ -100,1 +94,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/JFrame\/DefaultCloseOperation.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-            \"1. Observe the arrows are ponting to left and right direction\\n\" +\n+            \"1. Observe the arrows are pointing to left and right direction\\n\" +\n@@ -60,1 +60,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TestJTabbedPaneArrowDirection.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4203039.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import javax.swing.JViewport;\n@@ -43,1 +42,1 @@\n-import javax.swing.SwingUtilities;\n+import javax.swing.JViewport;\n@@ -67,1 +66,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -73,13 +72,8 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AnimatingFrame af = new AnimatingFrame();\n-            af.test();\n-            af.run();\n-\n-            PassFailJFrame.addTestWindow(af);\n-            PassFailJFrame.positionTestWindow(af,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(() -> {\n+                    AnimatingFrame af = new AnimatingFrame();\n+                    af.test();\n+                    af.run();\n+                    return af;\n+                })\n+                .build()\n+                .awaitAndCheck();\n@@ -167,1 +161,0 @@\n-        setLocationRelativeTo(null);\n@@ -169,1 +162,0 @@\n-        setVisible(true);\n","filename":"test\/jdk\/javax\/swing\/MultiMonitor\/MultimonVImage.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/sun\/awt\/PaletteTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}