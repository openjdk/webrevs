{"files":[{"patch":"@@ -3476,5 +3476,3 @@\n-  \/\/ make sure klass is initialized & doesn't have finalizer\n-  \/\/ make sure klass is fully initialized\n-  __ ldrb(rscratch1, Address(r4, InstanceKlass::init_state_offset()));\n-  __ cmp(rscratch1, (u1)InstanceKlass::fully_initialized);\n-  __ br(Assembler::NE, slow_case);\n+  \/\/ make sure klass is initialized\n+  assert(VM_Version::supports_fast_class_init_checks(), \"Optimization requires support for fast class initialization checks\");\n+  __ clinit_barrier(r4, rscratch1, nullptr \/*L_fast_path*\/, &slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -159,0 +159,1 @@\n+  \/\/ Aarch64 supports fast class initialization checks\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -134,0 +134,2 @@\n+\n+  static void initialize_cpu_information(void);\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -389,1 +389,1 @@\n-  \/\/ s390 supports fast class initialization checks for static methods.\n+  \/\/ s390 supports fast class initialization checks\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3939,2 +3939,5 @@\n-  \/\/ make sure klass is initialized & doesn't have finalizer\n-  \/\/ make sure klass is fully initialized\n+  \/\/ make sure klass is initialized\n+#ifdef _LP64\n+  assert(VM_Version::supports_fast_class_init_checks(), \"must support fast class initialization checks\");\n+  __ clinit_barrier(rcx, r15_thread, nullptr \/*L_fast_path*\/, &slow_case);\n+#else\n@@ -3943,0 +3946,1 @@\n+#endif\n@@ -3944,0 +3948,1 @@\n+  \/\/ make sure klass doesn't have finalizer\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1006,1 +1006,1 @@\n-  \/\/ x86_64 supports fast class initialization checks for static methods.\n+  \/\/ x86_64 supports fast class initialization checks\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}