{"files":[{"patch":"@@ -653,1 +653,0 @@\n-javax\/security\/auth\/callback\/PasswordCallback\/CheckCleanerBound.java 8286045 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n+ * @run main\/othervm CheckCleanerBound\n@@ -31,1 +34,2 @@\n-import java.util.WeakHashMap;\n+import java.lang.ref.WeakReference;\n+import jdk.test.lib.util.ForceGC;\n@@ -34,2 +38,0 @@\n-    private final static WeakHashMap<PasswordCallback, ?> weakHashMap =\n-            new WeakHashMap<>();\n@@ -43,1 +45,2 @@\n-        weakHashMap.put(passwordCallback, null);\n+        WeakReference<PasswordCallback> weakRef =\n+                new WeakReference<>(passwordCallback);\n@@ -46,7 +49,0 @@\n-        \/\/ Check if the PasswordCallback object could be collected.\n-        \/\/ Wait to trigger the cleanup.\n-        for (int i = 0; i < 10 && weakHashMap.size() != 0; i++) {\n-            System.gc();\n-            Thread.sleep(100);\n-        }\n-\n@@ -56,1 +52,1 @@\n-        if (weakHashMap.size() > 0) {\n+        if (!ForceGC.wait(() -> weakRef.refersTo(null))) {\n","filename":"test\/jdk\/javax\/security\/auth\/callback\/PasswordCallback\/CheckCleanerBound.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}