{"files":[{"patch":"@@ -654,2 +654,0 @@\n-            cd.onMalformedInput(CodingErrorAction.REPLACE)\n-                    .onUnmappableCharacter(CodingErrorAction.REPLACE);\n@@ -1200,0 +1198,2 @@\n+        cd.onMalformedInput(CodingErrorAction.REPLACE)\n+            .onUnmappableCharacter(CodingErrorAction.REPLACE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8286287\n+ * @summary Verifies newStringNoRepl() does not throw an Error.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.HexFormat;\n+import static java.nio.charset.StandardCharsets.UTF_16;\n+\n+public class NewStringNoRepl {\n+    private final static byte[] MALFORMED_UTF16 = {(byte)0x00, (byte)0x20, (byte)0x00};\n+\n+    public static void main(String... args) throws IOException {\n+        var f = Files.createTempFile(null, null);\n+        try (var fos = Files.newOutputStream(f)) {\n+            fos.write(MALFORMED_UTF16);\n+        }\n+        System.out.println(\"Returned bytes: \" +\n+            HexFormat.of()\n+                .withPrefix(\"x\")\n+                .withUpperCase()\n+                .formatHex(Files.readString(f, UTF_16).getBytes(UTF_16)));\n+        Files.delete(f);\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/String\/NewStringNoRepl.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}