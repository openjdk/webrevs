{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-import java.util.List;\n@@ -48,1 +47,0 @@\n-import jdk.test.lib.JDKToolFinder;\n@@ -50,0 +48,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -54,2 +53,0 @@\n-    private static final String CLASS_PATH = System.getProperty(\n-            \"test.class.path\");\n@@ -138,1 +135,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -140,4 +136,3 @@\n-        List<String> cmd = List.of(java, \"-Djava.net.preferIPv4Stack=true\",\n-                \"-cp\", CLASS_PATH, testClz);\n-        System.out.println(\"Executing: \" + cmd);\n-        return new OutputAnalyzer(new ProcessBuilder(cmd).start()).getOutput();\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-Djava.net.preferIPv4Stack=true\", testClz);\n+        return new OutputAnalyzer(pb.start()).getOutput();\n@@ -147,1 +142,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -149,4 +143,3 @@\n-        List<String> cmd = List.of(java, \"-Djava.net.preferIPv4Stack=true\",\n-                                   \"-cp\", CLASS_PATH, testClz, \"reverse\", addr);\n-        System.out.println(\"Executing: \" + cmd);\n-        return new OutputAnalyzer(new ProcessBuilder(cmd).start()).getOutput();\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-Djava.net.preferIPv4Stack=true\", testClz, \"reverse\", addr);\n+        return new OutputAnalyzer(pb.start()).getOutput();\n","filename":"test\/jdk\/java\/net\/InetAddress\/ptr\/Lookup.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,2 @@\n- * @requires (os.family != \"windows\")\n+ * @requires os.family != \"windows\"\n+ * @requires vm.flagless\n","filename":"test\/jdk\/java\/net\/ServerSocket\/AcceptCauseFileDescriptorLeak.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.util.Collections;\n@@ -41,0 +42,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -98,5 +100,1 @@\n-        commands.add(JAVA);\n-        for (String arg : jvmArgs)\n-            commands.add(arg);\n-        commands.add(\"-cp\");\n-        commands.add(CLASSPATH);\n+        Collections.addAll(commands, jvmArgs);\n@@ -107,1 +105,1 @@\n-        ProcessBuilder pb = new ProcessBuilder(commands);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(commands);\n","filename":"test\/jdk\/java\/net\/ServerSocket\/AcceptInheritHandle.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.test.lib.JDKToolFinder;\n@@ -56,1 +55,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -60,2 +58,3 @@\n-                new ProcessBuilder(\n-                        java, TEST_NAME, \".\/\" + ARCHIVE_NAME\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        TEST_NAME,\n+                        \".\/\" + ARCHIVE_NAME\n@@ -63,2 +62,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \".\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \".\",\n@@ -69,2 +68,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \".\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \".\",\n@@ -75,2 +74,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \"..\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \"..\",\n@@ -81,2 +80,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", basename,\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", basename,\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/getresourceasstream\/TestDriver.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,2 @@\n+import static jdk.test.lib.process.ProcessTools.createTestJavaProcessBuilder;\n+import static jdk.test.lib.process.ProcessTools.executeCommand;\n@@ -58,1 +60,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -65,0 +66,5 @@\n+\n+        \/\/ Compile\n+        ProcessTools.executeCommand(javac, \"-cp\", cp, \"-d\", \".\",\n+                srcDir + File.separator + TEST_NAME + \".java\");\n+\n@@ -66,5 +72,0 @@\n-                \/\/ Compile command\n-                new String[]{\n-                        javac, \"-cp\", cp, \"-d\", \".\",\n-                        srcDir + File.separator + TEST_NAME + \".java\"\n-                },\n@@ -73,1 +74,1 @@\n-                        java, \"-cp\", cp, TEST_NAME, \"1\"\n+                        \"-cp\", cp, TEST_NAME, \"1\"\n@@ -77,1 +78,1 @@\n-                        java, \"-cp\", cp, TEST_NAME, \"2\"\n+                        \"-cp\", cp, TEST_NAME, \"2\"\n@@ -82,1 +83,1 @@\n-            ProcessTools.executeCommand(cmd)\n+            executeCommand(createTestJavaProcessBuilder(cmd))\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/sealing\/CheckSealedTest.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/jdk\/java\/net\/URLConnection\/6212146\/TestDriver.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -59,0 +61,1 @@\n+ * @library \/test\/lib\n@@ -271,5 +274,1 @@\n-        String java = getJDKTool(\"java\");\n-\n-        List<String> commands = new ArrayList<>();\n-        commands.add(java);\n-        commands.addAll(properties.entrySet()\n+        List<String> commands = properties.entrySet()\n@@ -278,1 +277,1 @@\n-                .collect(Collectors.toList()));\n+                .collect(Collectors.toList());\n@@ -288,1 +287,1 @@\n-        return run(new ProcessBuilder(commands));\n+        return run(ProcessTools.createTestJavaProcessBuilder(commands));\n","filename":"test\/jdk\/java\/net\/URLConnection\/ContentHandlers\/ContentHandlersTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -129,1 +130,0 @@\n-        String javaCmd = testJdk + sep + \"bin\" + sep + \"java\";\n@@ -134,1 +134,0 @@\n-            cmd.add(javaCmd);\n@@ -153,1 +152,1 @@\n-            ProcessBuilder processBuilder = new ProcessBuilder(cmd)\n+            ProcessBuilder processBuilder = ProcessTools.createTestJavaProcessBuilder(cmd)\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Driver.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+\n+import jdk.test.lib.process.ProcessTools;\n@@ -237,1 +239,0 @@\n-        String java = getJDKTool(\"java\");\n@@ -239,4 +240,1 @@\n-        List<String> commands = new ArrayList<>();\n-        commands.add(java);\n-        for (String prop : sysProps)\n-            commands.add(prop);\n+        List<String> commands = new ArrayList<>(sysProps);\n@@ -252,1 +250,1 @@\n-        return run(new ProcessBuilder(commands));\n+        return run(ProcessTools.createTestJavaProcessBuilder(commands));\n","filename":"test\/jdk\/java\/net\/spi\/URLStreamHandlerProvider\/Basic.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -30,1 +31,0 @@\n-import java.nio.file.Path;\n@@ -90,1 +90,0 @@\n-                    Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n@@ -97,1 +96,1 @@\n-            ProcessBuilder builder = new ProcessBuilder(command);\n+            ProcessBuilder builder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/DTLSWontNegotiateV10.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,4 +24,2 @@\n-import javax.net.ssl.*;\n-import java.io.IOException;\n-import java.net.Socket;\n-import java.nio.charset.StandardCharsets;\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -35,0 +33,1 @@\n+ * @library \/test\/lib\n@@ -45,0 +44,1 @@\n+ * @library \/test\/lib\n@@ -64,1 +64,0 @@\n-                        Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n@@ -70,1 +69,1 @@\n-                ProcessBuilder builder = new ProcessBuilder(command);\n+                ProcessBuilder builder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/javax\/net\/ssl\/ciphersuites\/TLSWontNegotiateDisabledCipherAlgos.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *          would return default \"content\/unknown\"\n+ *          return default \"content\/unknown\"\n@@ -40,1 +40,1 @@\n-import jdk.test.lib.JDKToolFinder;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -52,3 +52,3 @@\n-        ProcessTools.executeCommand(\n-                JDKToolFinder.getTestJDKTool(\"java\"),\n-                \"-cp\", resJar + File.pathSeparator + classes, \"GetContentType\")\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-cp\", resJar + File.pathSeparator + classes, \"GetContentType\");\n+        new OutputAnalyzer(pb.start())\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/GetContentTypeTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -84,1 +85,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -88,4 +88,5 @@\n-            ProcessTools.executeCommand(java, \"-cp\", cp, test)\n-                        .outputTo(System.out)\n-                        .errorTo(System.out)\n-                        .shouldHaveExitValue(0);\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", cp, test);\n+            new OutputAnalyzer(pb.start())\n+                    .outputTo(System.out)\n+                    .errorTo(System.out)\n+                    .shouldHaveExitValue(0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/jarbug\/TestDriver.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,2 @@\n-import jdk.test.lib.JDKToolFinder;\n-import static jdk.test.lib.process.ProcessTools.executeCommand;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n@@ -42,6 +42,7 @@\n-        executeCommand(JDKToolFinder.getTestJDKTool(\"java\"),\n-                       \"--limit-modules\", \"java.base\",\n-                       \"-cp\", classes, \"OtherResources\")\n-                      .outputTo(System.out)\n-                      .errorTo(System.out)\n-                      .shouldHaveExitValue(0);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"--limit-modules\", \"java.base\",\n+                \"-cp\", classes, \"OtherResources\");\n+        new OutputAnalyzer(pb.start())\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldHaveExitValue(0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jrt\/OtherResourcesTest.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}