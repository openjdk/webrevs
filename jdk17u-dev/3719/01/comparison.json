{"files":[{"patch":"@@ -563,0 +563,1 @@\n+                        return true;\n@@ -564,1 +565,1 @@\n-                    return true;\n+                    return false;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpClientImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-            while (!inputQ.isEmpty()) {\n+            while (!inputQ.isEmpty() && errorRef.get() == null) {\n@@ -419,0 +419,4 @@\n+        \/\/ ensure that the body subscriber will be subscribed and onError() is\n+        \/\/ invoked\n+        pendingResponseSubscriber = bodySubscriber;\n+\n@@ -429,3 +433,0 @@\n-        \/\/ ensure that the body subscriber will be subscribed and onError() is\n-        \/\/ invoked\n-        pendingResponseSubscriber = bodySubscriber;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -477,0 +477,1 @@\n+            var tracker = TRACKER.getTracker(client);\n@@ -485,1 +486,0 @@\n-                var tracker = TRACKER.getTracker(client);\n@@ -494,0 +494,8 @@\n+            } else {\n+                System.out.println(now() + \"waiting for operation to finish: \" + tracker.getName());\n+                System.err.println(now() + \"waiting for operation to finish: \" + tracker.getName());\n+                var error = TRACKER.checkFinished(tracker, 10000);\n+                if (error != null) throw error;\n+                System.out.println(now() + \"operation finished normally: \" + tracker.getName());\n+                System.err.println(now() + \"operation finished normally: \" + tracker.getName());\n+\n@@ -803,1 +811,1 @@\n-        AssertionError fail = TRACKER.check(500);\n+        AssertionError fail = TRACKER.check(5000);\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingSubscribers.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -239,2 +239,0 @@\n-            \/\/ Taking the full implementation of close() from 21\n-            \/\/ does not work. Some methods are not public.\n@@ -242,5 +240,0 @@\n-            try {\n-                pool.awaitTermination(1, TimeUnit.DAYS);\n-            } catch (InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-            }\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpGetInCancelledFuture.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -118,0 +118,8 @@\n+    public AssertionError checkFinished(Tracker tracker, long graceDelayMs) {\n+        Predicate<Tracker> hasOperations = (t) -> t.getOutstandingOperations() > 0;\n+        Predicate<Tracker> hasSubscribers = (t) -> t.getOutstandingSubscribers() > 0;\n+        return check(tracker, graceDelayMs,\n+                hasOperations.or(hasSubscribers),\n+                \"outstanding operations or unreleased resources\", false);\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/ReferenceTracker.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}