{"files":[{"patch":"@@ -817,0 +817,2 @@\n+javax\/swing\/JTabbedPane\/bug4499556.java 8267500 macosx-all\n+\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,280 @@\n+\/*\n+  Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4499556\n+ * @summary Use arbitrary (J)Components as JTabbedPane tab labels.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4499556\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.BorderFactory;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class bug4499556 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        The test window contains a tabbedPane with 4 tabs.\n+\n+        Tab #0 without any tabComponent, just a title.\n+        Tab #1 with a JLabel and a little JButton wrapped into JPanel\n+        Tab #2 with a JButton (Delete #1) as a tabComponent\n+        Tab #3 with a JTextField as a tabComponent\n+\n+        Check that tabbedPane and all tabComponents are shown properly\n+        for different tabLayout and tabPlacement policies,\n+        (you can change them with help of settings in the right panel),\n+        and for different looks and feels (you can change L&F by using the L&F menu)\n+\n+        Remove tab #1 by clicking the Button labeled Delete #1 and then re-insert it\n+        by clicking \"Insert #1\". Check that it works - ie Delete #1 is restored.\n+\n+        If everything displays and behaves as described, the test PASSES, otherwise it FAILS.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .instructions(INSTRUCTIONS)\n+            .columns(50)\n+            .testUI(bug4499556::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static volatile JTabbedPane pane;\n+\n+    static JFrame createUI() {\n+        JFrame frame = new JFrame(\"bug4499556\");\n+        pane = getTabbedPane();\n+        frame.add(pane);\n+        frame.add(getRightPanel(), BorderLayout.EAST);\n+        JMenu menu = new JMenu(\"L&F Menu\");\n+        JMenuItem platformItem = new JMenuItem(\"Platform L&F\");\n+        JMenuItem nimbusItem = new JMenuItem(\"Nimbus L&F\");\n+        JMenuItem metalItem = new JMenuItem(\"Metal L&F\");\n+        menu.add(platformItem);\n+        menu.add(nimbusItem);\n+        menu.add(metalItem);\n+        JMenuBar menuBar = new JMenuBar();\n+        menuBar.add(menu);\n+        frame.setJMenuBar(menuBar);\n+        platformItem.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                setPlatformLAF();\n+            }\n+        });\n+        metalItem.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                setMetalLAF();\n+            }\n+        });\n+\n+        nimbusItem.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                setNimbusLAF();\n+            }\n+        });\n+        frame.setSize(500, 500);\n+        return frame;\n+      }\n+\n+    static JTabbedPane getTabbedPane() {\n+        final JTabbedPane pane = new JTabbedPane();\n+\n+        pane.add(\"Title\", new JLabel(\"\"));\n+\n+        addCompoundTab(pane);\n+\n+        pane.add(\"Title\", new JLabel(\"\"));\n+        pane.add(\"Title\", new JLabel(\"\"));\n+\n+        final JButton button = new JButton(\"Delete #1\");\n+        pane.setTabComponentAt(2, button);\n+        button.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                if (pane.getTabCount() == 4) {\n+                    pane.remove(1);\n+                    button.setText(\"Insert #1\");\n+                } else {\n+                    addCompoundTab(pane);\n+                    button.setText(\"Delete #1\");\n+                }\n+            }\n+        });\n+\n+        JTextField tf = new JTextField(\"JTextField\", 7);\n+        pane.setTabComponentAt(3, tf);\n+\n+        return pane;\n+    }\n+\n+        static JComponent getRightPanel() {\n+        JComponent ret = new Box(BoxLayout.Y_AXIS);\n+        ret.setBorder(BorderFactory.createTitledBorder(\"Properties\"));\n+        ret.setPreferredSize(new Dimension(100, 0));\n+        final JCheckBox checkBox = new JCheckBox();\n+        JPanel temp = new JPanel();\n+        temp.add(new JLabel(\"Scrollable\"));\n+        temp.add(checkBox);\n+        pane.setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);\n+        checkBox.addItemListener(new ItemListener() {\n+            public void itemStateChanged(ItemEvent e) {\n+                if (checkBox.isSelected()) {\n+                    pane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n+                } else {\n+                    pane.setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);\n+                }\n+            }\n+        });\n+        checkBox.doClick();\n+        ret.add(temp);\n+        ButtonGroup group = new ButtonGroup();\n+        temp = new JPanel();\n+        JRadioButton topRadio = new JRadioButton(\"Top\");\n+        temp.add(topRadio);\n+        topRadio.addItemListener(new ItemListener() {\n+            public void itemStateChanged(ItemEvent e) {\n+                pane.setTabPlacement(JTabbedPane.TOP);\n+            }\n+        });\n+        ret.add(temp);\n+        temp = new JPanel();\n+        JRadioButton bottomRadio = new JRadioButton(\"Bottom\");\n+        temp.add(bottomRadio);\n+        bottomRadio.addItemListener(new ItemListener() {\n+            public void itemStateChanged(ItemEvent e) {\n+                pane.setTabPlacement(JTabbedPane.BOTTOM);\n+            }\n+        });\n+        ret.add(temp);\n+        temp = new JPanel();\n+        JRadioButton leftRadio = new JRadioButton(\"Left\");\n+        temp.add(leftRadio);\n+        leftRadio.addItemListener(new ItemListener() {\n+            public void itemStateChanged(ItemEvent e) {\n+                pane.setTabPlacement(JTabbedPane.LEFT);\n+            }\n+        });\n+        ret.add(temp);\n+        temp = new JPanel();\n+        JRadioButton rightRadio = new JRadioButton(\"Right\");\n+        temp.add(rightRadio);\n+        rightRadio.addItemListener(new ItemListener() {\n+            public void itemStateChanged(ItemEvent e) {\n+                pane.setTabPlacement(JTabbedPane.RIGHT);\n+            }\n+        });\n+        ret.add(temp);\n+        group.add(topRadio);\n+        group.add(bottomRadio);\n+        group.add(leftRadio);\n+        group.add(rightRadio);\n+        return ret;\n+    }\n+\n+\n+\n+    static void addCompoundTab(final JTabbedPane pane) {\n+        JLabel label = new JLabel(\"JLabel\");\n+        label.setOpaque(true);\n+        JPanel testPanel = new JPanel();\n+        JLabel comp = new JLabel(\"JLabel\");\n+        testPanel.add(comp);\n+        JButton closeButton = new CloseButton();\n+        closeButton.setPreferredSize(new Dimension(10, 10));\n+        testPanel.add(closeButton);\n+        testPanel.setOpaque(false);\n+        pane.insertTab(\"Test\", null, new JLabel(\"\"), \"\", 1);\n+        pane.setTabComponentAt(1, testPanel);\n+    }\n+\n+    static class CloseButton extends JButton {\n+        public CloseButton() {\n+            final Object[] options = {\"Fine\"};\n+            addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    JOptionPane.showOptionDialog(null,\n+                            \"How are you ?\", \"Hello !\", JOptionPane.YES_OPTION,\n+                            JOptionPane.QUESTION_MESSAGE, null, options, null);\n+                }\n+            });\n+        }\n+\n+        protected void paintComponent(Graphics g) {\n+            super.paintComponent(g);\n+            g.setColor(Color.black);\n+            g.drawLine(0, 0, getWidth()-1, getHeight()-1);\n+            g.drawLine(0, getHeight()-1, getWidth()-1, 0);\n+        }\n+    }\n+\n+    static boolean setLAF(String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n+        SwingUtilities.updateComponentTreeUI(pane);\n+        return true;\n+    }\n+\n+    static final boolean setPlatformLAF() {\n+        return setLAF(UIManager.getSystemLookAndFeelClassName());\n+    }\n+\n+    static final boolean setNimbusLAF() {\n+        return setLAF(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+    }\n+\n+    static final boolean setMetalLAF() {\n+        return setLAF(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4499556.java","additions":280,"deletions":0,"binary":false,"changes":280,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6259533\n+ * @requires (os.family == \"windows\")\n+ * @summary Win L&F : JTabbedPane should move upwards the tabComponent of the selected tab.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug6259533\n+*\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.UIManager;\n+\n+public class bug6259533 {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        This test is for the Windows LaF only.\n+\n+        You should see a JTabbedPane with two tabs.\n+        The first tab uses a string and the second tab has a JLabel as a tabComponent\n+\n+        Select each tab and notice that on selection the tab title\n+        is moved upwards slightly in comparison with the unselected tab\n+\n+        If that is the observed behaviour, press PASS, press FAIL otherwise.\n+\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(bug6259533::createUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    static JFrame createUI() {\n+        try {\n+            UIManager.setLookAndFeel(\n+                \"com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        JFrame frame = new JFrame(\"bug6259533\");\n+        JTabbedPane pane = new JTabbedPane();\n+        pane.add(\"String Tab\", null);\n+        pane.add(\"Tab 2\", null);\n+        JLabel label = new JLabel(\"JLabel Tab\");\n+        pane.setTabComponentAt(1, label);\n+        frame.add(pane);\n+        frame.setSize(400, 200);\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug6259533.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"}]}