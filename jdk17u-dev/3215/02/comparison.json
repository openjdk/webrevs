{"files":[{"patch":"@@ -39,0 +39,2 @@\n+using testing::HasSubstr;\n+\n@@ -74,2 +76,2 @@\n-  EXPECT_PRED2(string_contains_substring, description, StdoutLog.name());\n-  EXPECT_PRED2(string_contains_substring, description, StderrLog.name());\n+  EXPECT_THAT(description, HasSubstr(StdoutLog.name()));\n+  EXPECT_THAT(description, HasSubstr(StderrLog.name()));\n@@ -79,1 +81,1 @@\n-    EXPECT_PRED2(string_contains_substring, description, LogTag::name(static_cast<LogTagType>(i)));\n+    EXPECT_THAT(description, HasSubstr(LogTag::name(static_cast<LogTagType>(i))));\n@@ -82,1 +84,1 @@\n-    EXPECT_PRED2(string_contains_substring, description, LogLevel::name(static_cast<LogLevelType>(i)));\n+    EXPECT_THAT(description, HasSubstr(LogLevel::name(static_cast<LogLevelType>(i))));\n@@ -85,1 +87,1 @@\n-    EXPECT_PRED2(string_contains_substring, description, LogDecorators::name(static_cast<LogDecorators::Decorator>(i)));\n+    EXPECT_THAT(description, HasSubstr(LogDecorators::name(static_cast<LogDecorators::Decorator>(i))));\n@@ -92,2 +94,2 @@\n-  EXPECT_PRED2(string_contains_substring, description, expected_buf);\n-  EXPECT_PRED2(string_contains_substring, description, \"#1: stderr all=off\");\n+  EXPECT_THAT(description, HasSubstr(expected_buf));\n+  EXPECT_THAT(description, HasSubstr(\"#1: stderr all=off\"));\n@@ -110,1 +112,1 @@\n-  EXPECT_PRED2(string_contains_substring, description, expected_buf);\n+  EXPECT_THAT(description, HasSubstr(expected_buf));\n@@ -496,2 +498,2 @@\n-  EXPECT_TRUE(string_contains_substring(msg, \"No tag set matches selection:\"));\n-  EXPECT_TRUE(string_contains_substring(msg, invalid_tagset));\n+  EXPECT_THAT(msg, HasSubstr(\"No tag set matches selection:\"));\n+  EXPECT_THAT(msg, HasSubstr(invalid_tagset));\n@@ -562,1 +564,1 @@\n-  EXPECT_TRUE(string_contains_substring(ss.as_string(), \"Did you mean any of the following?\"));\n+  EXPECT_THAT(suggestion, HasSubstr(\"Did you mean any of the following?\"));\n","filename":"test\/hotspot\/gtest\/logging\/test_logConfiguration.cpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-  EXPECT_TRUE(string_contains_substring(logger_output, expected_output_substring))\n+  EXPECT_THAT(logger_output, testing::HasSubstr(expected_output_substring))\n","filename":"test\/hotspot\/gtest\/logging\/test_logFileOutput.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    EXPECT_PRED2(string_contains_substring, stream.as_string(), expected)\n+    EXPECT_THAT(stream.base(), testing::HasSubstr(expected))\n","filename":"test\/hotspot\/gtest\/logging\/test_logTagSetDescriptions.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-  EXPECT_EQ(0, strcmp(str, str_copy)) << \"Not identical copy\";\n+  EXPECT_STREQ(str, str_copy) << \"Not identical copy\";\n","filename":"test\/hotspot\/gtest\/memory\/test_guardedMemory.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+using testing::HasSubstr;\n+\n","filename":"test\/hotspot\/gtest\/oops\/test_instanceKlass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,3 +44,0 @@\n-static bool test_pattern(stringStream* st, const char* pattern) {\n-  return (strstr(st->as_string(), pattern) != NULL);\n-}\n@@ -51,1 +48,1 @@\n-  ASSERT_TRUE(test_pattern(&st, pattern)) << pattern << \" not in \" << st.as_string();\n+  ASSERT_THAT(st.base(), testing::HasSubstr(pattern));\n@@ -57,1 +54,1 @@\n-  ASSERT_FALSE(test_pattern(&st, pattern)) << pattern << \" found in \" << st.as_string();\n+  ASSERT_THAT(st.base(), testing::Not(testing::HasSubstr(pattern)));\n","filename":"test\/hotspot\/gtest\/oops\/test_markWord.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  ASSERT_EQ(strcmp(SharedArchiveConfigFile, \"\"), 0);\n+  EXPECT_STREQ(SharedArchiveConfigFile, \"\");\n@@ -88,1 +88,1 @@\n-  ASSERT_EQ(strcmp(SharedArchiveConfigFile, \"foobar\") , 0);\n+  EXPECT_STREQ(SharedArchiveConfigFile, \"foobar\");\n@@ -96,1 +96,1 @@\n-  ASSERT_EQ(strcmp(SharedArchiveConfigFile, \"xyz\"), 0);\n+  EXPECT_STREQ(SharedArchiveConfigFile, \"xyz\");\n","filename":"test\/hotspot\/gtest\/runtime\/test_globals.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+using testing::HasSubstr;\n+\n@@ -170,1 +172,1 @@\n-  ASSERT_NE(strstr(buf, expected), (char*)NULL);\n+  EXPECT_THAT(buf, HasSubstr(expected));\n@@ -772,1 +774,1 @@\n-  ASSERT_EQ(strcmp(expected, buffer), 0);\n+  EXPECT_STREQ(expected, buffer);\n@@ -781,1 +783,1 @@\n-  EXPECT_NE(::strstr(haystack, needle), (char*)NULL)\n+  EXPECT_THAT(haystack, HasSubstr(needle));\n@@ -783,1 +785,1 @@\n-  EXPECT_EQ(::strstr(haystack, needle), (char*)NULL)\n+  EXPECT_THAT(haystack, Not(HasSubstr(needle)));\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}