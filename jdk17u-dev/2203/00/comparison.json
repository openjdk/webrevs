{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,2 +55,2 @@\n-\/**\n- * @test\n+\/*\n+ * @test id=Poly\n@@ -58,6 +58,1 @@\n- * @summary Verifies that Marlin rendering generates the same\n- * images with and without clipping optimization with all possible\n- * stroke (cap\/join) and\/or dashes or fill modes (EO rules)\n- * for paths made of either 9 lines, 4 quads, 2 cubics (random)\n- * Note: Use the argument -slow to run more intensive tests (too much time)\n- *\n+ * @summary Runs the test with \"-poly\" option\n@@ -65,0 +60,6 @@\n+ *\/\n+\n+\/*\n+ * @test id=PolyDoDash\n+ * @bug 8191814\n+ * @summary Runs the test with \"-poly -doDash\" options\n@@ -66,0 +67,6 @@\n+ *\/\n+\n+\/*\n+ * @test id=Cubic\n+ * @bug 8191814\n+ * @summary Runs the test with \"-cubic\" option\n@@ -67,0 +74,6 @@\n+ *\/\n+\n+\/*\n+ * @test id=CubicDoDash\n+ * @bug 8191814\n+ * @summary Runs the test with \"-cubic -doDash\" options\n@@ -68,1 +81,11 @@\n-*\/\n+ *\/\n+\n+\/**\n+ * Verifies that Marlin rendering generates the same images with and without\n+ * clipping optimization with all possible stroke (cap\/join) and\/or dashes or\n+ * fill modes (EO rules) for paths made of either 9 lines, 4 quads, 2 cubics\n+ * (random).\n+ * <p>\n+ * Note: Use the argument {@code -slow} to run more intensive tests (too much\n+ * time).\n+ *\/\n","filename":"test\/jdk\/sun\/java2d\/marlin\/ClipShapeTest.java","additions":33,"deletions":10,"binary":false,"changes":43,"status":"modified"}]}