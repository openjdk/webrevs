{"files":[{"patch":"@@ -2071,1 +2071,1 @@\n-  Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n+  Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n@@ -2110,1 +2110,1 @@\n-        Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n+        Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1612,1 +1612,1 @@\n-  Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n+  Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(addr), p2i(addr+size), prot);\n@@ -1714,1 +1714,1 @@\n-  Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with PROT_NONE\", p2i(addr), p2i(addr+size));\n+  Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with PROT_NONE\", p2i(addr), p2i(addr+size));\n@@ -1784,1 +1784,1 @@\n-  Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(bottom), p2i(bottom+size), prot);\n+  Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(bottom), p2i(bottom+size), prot);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3592,1 +3592,1 @@\n-  Events::log(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(bottom), p2i(bottom+size), prot);\n+  Events::log_memprotect(NULL, \"Protecting memory [\" INTPTR_FORMAT \",\" INTPTR_FORMAT \"] with protection modes %x\", p2i(bottom), p2i(bottom+size), prot);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1553,1 +1553,1 @@\n-  Events::log(JavaThread::current(), \"flushing nmethod \" INTPTR_FORMAT, p2i(this));\n+  Events::log_nmethod_flush(Thread::current(), \"flushing %s nmethod \" INTPTR_FORMAT, is_osr_method() ? \"osr\" : \"\", p2i(this));\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+StringEventLog* Events::_memprotect_messages = NULL;\n+StringEventLog* Events::_nmethod_flush_messages = NULL;\n@@ -97,0 +99,2 @@\n+    _nmethod_flush_messages = new StringEventLog(\"Nmethod flushes\", \"nmethodflushes\");\n+    _memprotect_messages = new StringEventLog(\"Memory protections\", \"memprotects\");\n","filename":"src\/hotspot\/share\/utilities\/events.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,0 +223,6 @@\n+  \/\/ A log for memory protection related messages\n+  static StringEventLog* _memprotect_messages;\n+\n+  \/\/ A log for nmethod flush operations\n+  static StringEventLog* _nmethod_flush_messages;\n+\n@@ -259,0 +265,4 @@\n+  static void log_memprotect(Thread* thread, const char* format, ...) ATTRIBUTE_PRINTF(2, 3);\n+\n+  static void log_nmethod_flush(Thread* thread, const char* format, ...) ATTRIBUTE_PRINTF(2, 3);\n+\n@@ -288,0 +298,18 @@\n+inline void Events::log_memprotect(Thread* thread, const char* format, ...) {\n+  if (LogEvents && _memprotect_messages != nullptr) {\n+    va_list ap;\n+    va_start(ap, format);\n+    _memprotect_messages->logv(thread, format, ap);\n+    va_end(ap);\n+  }\n+}\n+\n+inline void Events::log_nmethod_flush(Thread* thread, const char* format, ...) {\n+  if (LogEvents && _nmethod_flush_messages != nullptr) {\n+    va_list ap;\n+    va_start(ap, format);\n+    _nmethod_flush_messages->logv(thread, format, ap);\n+    va_end(ap);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/events.hpp","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"}]}